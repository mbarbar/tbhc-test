; ModuleID = 'ginstall.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mode_change = type { i8, i8, i32, i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.savewd = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.12 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.87 }
%union.anon.87 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [165 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A  or:  %s [OPTION]... -d DIRECTORY...\0A\00", align 1
@.str.2 = private unnamed_addr constant [465 x i8] c"\0AThis install program copies files (often just compiled) into destination\0Alocations you choose.  If you want to download and install a ready-to-use\0Apackage on a GNU/Linux system, you should instead be using a package manager\0Alike yum(1) or apt-get(1).\0A\0AIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\0Athe existing DIRECTORY, while setting permission modes and owner/group.\0AIn the 4th form, create all components of the given DIRECTORY(ies).\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [465 x i8] c"      --backup[=CONTROL]  make a backup of each existing destination file\0A  -b                  like --backup but does not accept an argument\0A  -c                  (ignored)\0A  -C, --compare       compare each pair of source and destination files, and\0A                        in some cases, do not modify the destination at all\0A  -d, --directory     treat all arguments as directory names; create all\0A                        components of the specified directories\0A\00", align 1
@.str.4 = private unnamed_addr constant [401 x i8] c"  -D                  create all leading components of DEST except the last,\0A                        or all components of --target-directory,\0A                        then copy SOURCE to DEST\0A  -g, --group=GROUP   set group ownership, instead of process' current group\0A  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\0A  -o, --owner=OWNER   set ownership (super-user only)\0A\00", align 1
@.str.5 = private unnamed_addr constant [504 x i8] c"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\0A                        to corresponding destination files\0A  -s, --strip         strip symbol tables\0A      --strip-program=PROGRAM  program used to strip binaries\0A  -S, --suffix=SUFFIX  override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory  treat DEST as a normal file\0A  -v, --verbose       print the name of each directory as it is created\0A\00", align 1
@.str.6 = private unnamed_addr constant [347 x i8] c"      --preserve-context  preserve SELinux security context\0A  -Z                      set SELinux security context of destination\0A                            file and each created directory to default type\0A      --context[=CTX]     like -Z, or if CTX is specified then set the\0A                            SELinux or SMACK security context to CTX\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"install\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.36 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@selinux_enabled = internal global i32 0, align 4, !dbg !60, !ctir !5
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@owner_name = internal global i8* null, align 8, !dbg !395, !ctir !7
@group_name = internal global i8* null, align 8, !dbg !397, !ctir !7
@strip_files = internal global i8 0, align 1, !dbg !401, !ctir !139
@dir_arg = internal global i8 0, align 1, !dbg !403, !ctir !139
@.str.13 = private unnamed_addr constant [21 x i8] c"bcCsDdg:m:o:pt:TvS:Z\00", align 1
@long_options = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !405, !ctir !216
@optarg = external dso_local global i8*, align 8, !ctir !7
@copy_only_if_needed = internal global i8 0, align 1, !dbg !399, !ctir !139
@strip_program = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), align 8, !dbg !407, !ctir !180
@.str.14 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.15 = private unnamed_addr constant [73 x i8] c"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\00", align 1
@use_default_selinux_context = internal global i8 1, align 1, !dbg !409, !ctir !139
@.str.16 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"the strip option may not be used when installing a directory\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"target directory not allowed when installing a directory\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@optind = external dso_local global i32, align 4, !ctir !5
@.str.26 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@mode = internal global i32 493, align 4, !dbg !411, !ctir !136
@dir_mode_bits = internal global i32 4095, align 4, !dbg !413, !ctir !136
@dir_mode = internal global i32 493, align 4, !dbg !415, !ctir !136
@.str.31 = private unnamed_addr constant [72 x i8] c"WARNING: ignoring --strip-program option as -s option was not specified\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"options --compare (-C) and --preserve-timestamps are mutually exclusive\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"options --compare (-C) and --strip are mutually exclusive\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"the --compare (-C) option is ignored when you specify a mode with non-permission bits\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"failed to set default creation context for %s\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"creating directory %s\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"cannot unlink %s\00", align 1
@owner_id = internal global i32 0, align 4, !dbg !417, !ctir !124
@group_id = internal global i32 0, align 4, !dbg !419, !ctir !126
@.str.83 = private unnamed_addr constant [30 x i8] c"cannot change ownership of %s\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@setdefaultfilecon.first_call = internal global i8 1, align 1, !dbg !428
@.str.85 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"<<none>>\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"warning: %s: failed to change context to %s\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"cannot set timestamps for %s\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"fork system call failed\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"cannot run %s\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"waiting for strip\00", align 1
@.str.81 = private unnamed_addr constant [36 x i8] c"strip process terminated abnormally\00", align 1
@have_same_content.a_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !421
@have_same_content.b_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !426
@.str.72 = private unnamed_addr constant [33 x i8] c"failed to restore context for %s\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"invalid user %s\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"invalid group %s\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"preserve-timestamps\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"preserve-context\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"strip-program\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.90 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.95 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.100 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.101 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !431, !ctir !180
@top_level_dst_name = internal global i8* null, align 8, !dbg !592, !ctir !180
@.str.12.102 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.103 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.104 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.105 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.106 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.107 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.108 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.109 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.110 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.111 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.112 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.113 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.114 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.115 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.116 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.117 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.118 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.119 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.120 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.121 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.122 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.123 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.124 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.125 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.126 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.127 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.128 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.129 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.130 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.131 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.132 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.133 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.134 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.135 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.136 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.137 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.138 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.139 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.140 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.141 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !587
@.str.76.142 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.143 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.144 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.145 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.146 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.147 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.148 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.149 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.150 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.151 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.152 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.153 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.154 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.155 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.156 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.157 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.158 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !594
@write_zeros.nz = internal global i64 131072, align 8, !dbg !599
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !601
@.str.59.159 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.160 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.161 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.162 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.163 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.164 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.165 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.166 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.167 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.168 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.169 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.170 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.171 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.172 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !603, !ctir !172
@.str.187 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.188 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.189 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !619, !ctir !628
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.196, i32 0, i32 0), align 8, !dbg !642, !ctir !180
@.str.196 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.200 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.203 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !648, !ctir !180
@.str.210 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.211 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.212 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.213 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.216, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.217, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.218, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.220, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.222, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.223, i32 0, i32 0), i8* null], align 16, !dbg !679, !ctir !689
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !697, !ctir !687
@.str.2.216 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.217 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.218 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.219 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.220 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.221 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.222 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.223 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.226 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.227 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !700, !ctir !180
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !705
@.str.232 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.233 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.234 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.235 = internal global i8* null, align 8, !dbg !748, !ctir !180
@ignore_EPIPE = internal global i8 0, align 1, !dbg !792, !ctir !139
@.str.238 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.239 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.240 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !795, !ctir !745
@.str.269 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.270 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.271 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.272 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !802, !ctir !826
@.str.295 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.1.296 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2.297 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@.str.3.298 = private unnamed_addr constant [42 x i8] c"cannot change owner and permissions of %s\00", align 1
@.str.4.299 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !855, !ctir !180
@.str.310 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.311 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.312 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !7
@program_invocation_name = external dso_local global i8*, align 8, !ctir !7
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.318, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.320, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.321, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.322, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.326, i32 0, i32 0), i8* null], align 16, !dbg !900, !ctir !920
@.str.317 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.318 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.319 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.320 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.321 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.322 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.323 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.324 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.325 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.326 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !962, !ctir !921
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !964, !ctir !924
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !966, !ctir !924
@.str.10.327 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.328 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.329 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.330 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.331 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.332 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.333 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.334 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.335 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !970, !ctir !937
@nslots = internal global i32 1, align 4, !dbg !972, !ctir !5
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !968, !ctir !624
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !974, !ctir !938
@.str.356 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !976, !ctir !1001
@.str.365 = private unnamed_addr constant [19 x i8] c"wd->val.child == 0\00", align 1
@.str.1.366 = private unnamed_addr constant [13 x i8] c"lib/savewd.c\00", align 1
@__PRETTY_FUNCTION__.savewd_chdir = private unnamed_addr constant [60 x i8] c"int savewd_chdir(struct savewd *, const char *, int, int *)\00", align 1
@.str.2.367 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.368 = private unnamed_addr constant [2 x i8] c".\00", align 1
@__PRETTY_FUNCTION__.savewd_save = private unnamed_addr constant [35 x i8] c"_Bool savewd_save(struct savewd *)\00", align 1
@.str.3.371 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 4\00", align 1
@__PRETTY_FUNCTION__.savewd_restore = private unnamed_addr constant [41 x i8] c"int savewd_restore(struct savewd *, int)\00", align 1
@.str.4.374 = private unnamed_addr constant [18 x i8] c"wd->val.child < 0\00", align 1
@__PRETTY_FUNCTION__.savewd_finish = private unnamed_addr constant [36 x i8] c"void savewd_finish(struct savewd *)\00", align 1
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1016, !ctir !1024
@.str.2.397 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.398 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.399 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1034
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1077
@utimensat_works_really = internal global i32 0, align 4, !dbg !1079, !ctir !5
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1099, !ctir !5
@.str.410 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.411 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.412 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.413 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.414 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.415 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.416 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.417 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.418 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.419 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.420 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.421 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.422 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.423 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.424 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.425 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.428 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.429 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.430 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.431 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.432 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.433 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.434 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1102, !ctir !451
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1109
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1118
@.str.1.457 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.458 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.461 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.462 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1120, !ctir !691
@.str.481 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.482 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.483 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.484 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.485 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.500 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.501 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.506 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.507 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.520 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.521 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.522 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.523 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1166

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !1892 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !1893, metadata !DIExpression()), !dbg !1894
  %0 = load i32, i32* %status.addr, align 4, !dbg !1895
  %cmp = icmp ne i32 %0, 0, !dbg !1897
  br i1 %cmp, label %if.then, label %if.else, !dbg !1898

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !1899

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1900
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #9, !dbg !1900
  %2 = load i8*, i8** @program_name, align 8, !dbg !1900
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !1900
  br label %do.end, !dbg !1900

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !1900

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !1902
  %3 = load i8*, i8** @program_name, align 8, !dbg !1904
  %4 = load i8*, i8** @program_name, align 8, !dbg !1905
  %5 = load i8*, i8** @program_name, align 8, !dbg !1906
  %6 = load i8*, i8** @program_name, align 8, !dbg !1907
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5, i8* %6), !dbg !1908
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !1909
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1909
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %7), !dbg !1909
  call void @emit_mandatory_arg_note(), !dbg !1910
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !1911
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1911
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %8), !dbg !1911
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !1912
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1912
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %9), !dbg !1912
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([504 x i8], [504 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !1913
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1913
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %10), !dbg !1913
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !1914
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1914
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %11), !dbg !1914
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !1915
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1915
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %12), !dbg !1915
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !1916
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1916
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %13), !dbg !1916
  call void @emit_backup_suffix_note(), !dbg !1917
  call void @emit_ancillary_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !1918
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %14 = load i32, i32* %status.addr, align 4, !dbg !1919
  call void @exit(i32 %14) #13, !dbg !1920
  unreachable, !dbg !1920
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !1921 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !1922
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1922
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !1922
  ret void, !dbg !1923
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !1924 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !1925
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1925
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !1925
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !1926
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1926
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !1926
  ret void, !dbg !1927
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !292 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !288
  %node = alloca i8*, align 8, !ctir !180
  %map_prog = alloca %struct.infomap*, align 8, !ctir !301
  %lc_messages = alloca i8*, align 8, !ctir !180
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !1928, metadata !DIExpression()), !dbg !1929
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !1930, metadata !DIExpression()), !dbg !1931
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !1931
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !1931
  call void @llvm.dbg.declare(metadata i8** %node, metadata !1932, metadata !DIExpression()), !dbg !1933
  %1 = load i8*, i8** %program.addr, align 8, !dbg !1934
  store i8* %1, i8** %node, align 8, !dbg !1933
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !1935, metadata !DIExpression()), !dbg !1936
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !1937, !ctir !288
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !1936
  br label %while.cond, !dbg !1938

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1939
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !1940, !ctir !289
  %3 = load i8*, i8** %program1, align 8, !dbg !1940, !ctir !180
  %tobool = icmp ne i8* %3, null, !dbg !1939
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1941

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !1942
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1942
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !1942, !ctir !289
  %6 = load i8*, i8** %program2, align 8, !dbg !1942, !ctir !180
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !1942
  %cmp = icmp eq i32 %call, 0, !dbg !1942
  %lnot = xor i1 %cmp, true, !dbg !1943
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !1944
  br i1 %7, label %while.body, label %while.end, !dbg !1938

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1945
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !1945, !ctir !289
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !1945
  br label %while.cond, !dbg !1938, !llvm.loop !1946

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1947
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !1949, !ctir !289
  %10 = load i8*, i8** %node3, align 8, !dbg !1949, !ctir !180
  %tobool4 = icmp ne i8* %10, null, !dbg !1947
  br i1 %tobool4, label %if.then, label %if.end, !dbg !1950

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1951
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !1952, !ctir !289
  %12 = load i8*, i8** %node5, align 8, !dbg !1952, !ctir !180
  store i8* %12, i8** %node, align 8, !dbg !1953
  br label %if.end, !dbg !1954

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !1955
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)), !dbg !1956
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !1957, metadata !DIExpression()), !dbg !1958
  %call8 = call i8* @setlocale(i32 5, i8* null) #9, !dbg !1959
  store i8* %call8, i8** %lc_messages, align 8, !dbg !1958
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !1960
  %tobool9 = icmp ne i8* %13, null, !dbg !1960
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !1962

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !1963
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3) #14, !dbg !1963
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1963
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !1964

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !1965
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1965
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !1965
  br label %if.end15, !dbg !1967

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !1968
  %16 = load i8*, i8** %program.addr, align 8, !dbg !1969
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %16), !dbg !1970
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !1971
  %17 = load i8*, i8** %node, align 8, !dbg !1972
  %18 = load i8*, i8** %node, align 8, !dbg !1973
  %19 = load i8*, i8** %program.addr, align 8, !dbg !1974
  %cmp19 = icmp eq i8* %18, %19, !dbg !1975
  %20 = zext i1 %cmp19 to i64, !dbg !1973
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !1973
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !1976
  ret void, !dbg !1977
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !1978 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %optc = alloca i32, align 4, !ctir !5
  %exit_status = alloca i32, align 4, !ctir !5
  %specified_mode = alloca i8*, align 8, !ctir !180
  %make_backups = alloca i8, align 1, !ctir !139
  %backup_suffix = alloca i8*, align 8, !ctir !180
  %version_control_string = alloca i8*, align 8, !ctir !7
  %mkdir_and_install = alloca i8, align 1, !ctir !139
  %x = alloca %struct.cp_options, align 8, !ctir !129
  %target_directory = alloca i8*, align 8, !ctir !180
  %no_target_directory = alloca i8, align 1, !ctir !139
  %n_files = alloca i32, align 4, !ctir !5
  %file = alloca i8**, align 8, !ctir !206
  %strip_program_specified = alloca i8, align 1, !ctir !139
  %scontext = alloca i8*, align 8, !ctir !180
  %st = alloca %struct.stat, align 8, !ctir !1981
  %stat_success = alloca i8, align 1, !ctir !139
  %change = alloca %struct.mode_change*, align 8, !ctir !267
  %i = alloca i32, align 4, !ctir !5
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1998, metadata !DIExpression()), !dbg !1999
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2000, metadata !DIExpression()), !dbg !2001
  call void @llvm.dbg.declare(metadata i32* %optc, metadata !2002, metadata !DIExpression()), !dbg !2003
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !2004, metadata !DIExpression()), !dbg !2005
  store i32 0, i32* %exit_status, align 4, !dbg !2005
  call void @llvm.dbg.declare(metadata i8** %specified_mode, metadata !2006, metadata !DIExpression()), !dbg !2007
  store i8* null, i8** %specified_mode, align 8, !dbg !2007
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2008, metadata !DIExpression()), !dbg !2009
  store i8 0, i8* %make_backups, align 1, !dbg !2009
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2010, metadata !DIExpression()), !dbg !2011
  store i8* null, i8** %backup_suffix, align 8, !dbg !2011
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2012, metadata !DIExpression()), !dbg !2013
  store i8* null, i8** %version_control_string, align 8, !dbg !2013
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install, metadata !2014, metadata !DIExpression()), !dbg !2015
  store i8 0, i8* %mkdir_and_install, align 1, !dbg !2015
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2016, metadata !DIExpression()), !dbg !2017
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2018, metadata !DIExpression()), !dbg !2019
  store i8* null, i8** %target_directory, align 8, !dbg !2019
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2020, metadata !DIExpression()), !dbg !2021
  store i8 0, i8* %no_target_directory, align 1, !dbg !2021
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2022, metadata !DIExpression()), !dbg !2023
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2024, metadata !DIExpression()), !dbg !2025
  call void @llvm.dbg.declare(metadata i8* %strip_program_specified, metadata !2026, metadata !DIExpression()), !dbg !2027
  store i8 0, i8* %strip_program_specified, align 1, !dbg !2027
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !2028, metadata !DIExpression()), !dbg !2029
  store i8* null, i8** %scontext, align 8, !dbg !2029
  store i32 0, i32* @selinux_enabled, align 4, !dbg !2030
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2031
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2031, !ctir !206
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2031
  call void @set_program_name(i8* %1), !dbg !2032
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !2033
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !2034
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !2035
  %call3 = call i32 @atexit(void ()* @close_stdin) #9, !dbg !2036
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2037
  store i8* null, i8** @owner_name, align 8, !dbg !2038
  store i8* null, i8** @group_name, align 8, !dbg !2039
  store i8 0, i8* @strip_files, align 1, !dbg !2040
  store i8 0, i8* @dir_arg, align 1, !dbg !2041
  %call4 = call i32 @umask(i32 0) #9, !dbg !2042
  br label %while.cond, !dbg !2043

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2044
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2045
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #9, !dbg !2046
  store i32 %call5, i32* %optc, align 4, !dbg !2047
  %cmp = icmp ne i32 %call5, -1, !dbg !2048
  br i1 %cmp, label %while.body, label %while.end, !dbg !2043

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %optc, align 4, !dbg !2049
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb6
    i32 67, label %sw.bb7
    i32 115, label %sw.bb8
    i32 129, label %sw.bb10
    i32 100, label %sw.bb12
    i32 68, label %sw.bb13
    i32 118, label %sw.bb14
    i32 103, label %sw.bb15
    i32 109, label %sw.bb16
    i32 111, label %sw.bb17
    i32 112, label %sw.bb18
    i32 83, label %sw.bb19
    i32 116, label %sw.bb20
    i32 84, label %sw.bb25
    i32 128, label %sw.bb26
    i32 90, label %sw.bb31
    i32 -130, label %sw.bb43
    i32 -131, label %sw.bb44
  ], !dbg !2051

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2052
  %5 = load i8*, i8** @optarg, align 8, !dbg !2054
  %tobool = icmp ne i8* %5, null, !dbg !2054
  br i1 %tobool, label %if.then, label %if.end, !dbg !2056

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2057
  store i8* %6, i8** %version_control_string, align 8, !dbg !2058
  br label %if.end, !dbg !2059

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2060

sw.bb6:                                           ; preds = %while.body
  br label %sw.epilog, !dbg !2061

sw.bb7:                                           ; preds = %while.body
  store i8 1, i8* @copy_only_if_needed, align 1, !dbg !2062
  br label %sw.epilog, !dbg !2063

sw.bb8:                                           ; preds = %while.body
  store i8 1, i8* @strip_files, align 1, !dbg !2064
  %call9 = call void (i32)* @signal(i32 17, void (i32)* null) #9, !dbg !2065
  br label %sw.epilog, !dbg !2066

sw.bb10:                                          ; preds = %while.body
  %7 = load i8*, i8** @optarg, align 8, !dbg !2067
  %call11 = call noalias i8* @xstrdup(i8* %7), !dbg !2068
  store i8* %call11, i8** @strip_program, align 8, !dbg !2069
  store i8 1, i8* %strip_program_specified, align 1, !dbg !2070
  br label %sw.epilog, !dbg !2071

sw.bb12:                                          ; preds = %while.body
  store i8 1, i8* @dir_arg, align 1, !dbg !2072
  br label %sw.epilog, !dbg !2073

sw.bb13:                                          ; preds = %while.body
  store i8 1, i8* %mkdir_and_install, align 1, !dbg !2074
  br label %sw.epilog, !dbg !2075

sw.bb14:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2076, !ctir !129
  store i8 1, i8* %verbose, align 2, !dbg !2077, !ctir !139
  br label %sw.epilog, !dbg !2078

sw.bb15:                                          ; preds = %while.body
  %8 = load i8*, i8** @optarg, align 8, !dbg !2079
  store i8* %8, i8** @group_name, align 8, !dbg !2080
  br label %sw.epilog, !dbg !2081

sw.bb16:                                          ; preds = %while.body
  %9 = load i8*, i8** @optarg, align 8, !dbg !2082
  store i8* %9, i8** %specified_mode, align 8, !dbg !2083
  br label %sw.epilog, !dbg !2084

sw.bb17:                                          ; preds = %while.body
  %10 = load i8*, i8** @optarg, align 8, !dbg !2085
  store i8* %10, i8** @owner_name, align 8, !dbg !2086
  br label %sw.epilog, !dbg !2087

sw.bb18:                                          ; preds = %while.body
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2088, !ctir !129
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2089, !ctir !139
  br label %sw.epilog, !dbg !2090

sw.bb19:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2091
  %11 = load i8*, i8** @optarg, align 8, !dbg !2092
  store i8* %11, i8** %backup_suffix, align 8, !dbg !2093
  br label %sw.epilog, !dbg !2094

sw.bb20:                                          ; preds = %while.body
  %12 = load i8*, i8** %target_directory, align 8, !dbg !2095
  %tobool21 = icmp ne i8* %12, null, !dbg !2095
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2097

if.then22:                                        ; preds = %sw.bb20
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2098
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call23), !dbg !2098
  unreachable, !dbg !2098

if.end24:                                         ; preds = %sw.bb20
  %13 = load i8*, i8** @optarg, align 8, !dbg !2099
  store i8* %13, i8** %target_directory, align 8, !dbg !2100
  br label %sw.epilog, !dbg !2101

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2102
  br label %sw.epilog, !dbg !2103

sw.bb26:                                          ; preds = %while.body
  %14 = load i32, i32* @selinux_enabled, align 4, !dbg !2104
  %tobool27 = icmp ne i32 %14, 0, !dbg !2104
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !2106

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2107
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call29), !dbg !2109
  br label %sw.epilog, !dbg !2110

if.end30:                                         ; preds = %sw.bb26
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2111, !ctir !129
  store i8 1, i8* %preserve_security_context, align 1, !dbg !2112, !ctir !139
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2113
  br label %sw.epilog, !dbg !2114

sw.bb31:                                          ; preds = %while.body
  %15 = load i32, i32* @selinux_enabled, align 4, !dbg !2115
  %tobool32 = icmp ne i32 %15, 0, !dbg !2115
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2117

if.then33:                                        ; preds = %sw.bb31
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2118
  %16 = load i8*, i8** @optarg, align 8, !dbg !2120
  %tobool34 = icmp ne i8* %16, null, !dbg !2120
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !2122

if.then35:                                        ; preds = %if.then33
  %17 = load i8*, i8** @optarg, align 8, !dbg !2123
  store i8* %17, i8** %scontext, align 8, !dbg !2124
  br label %if.end36, !dbg !2125

if.else:                                          ; preds = %if.then33
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2126, !ctir !129
  store i8 1, i8* %set_security_context, align 1, !dbg !2127, !ctir !139
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  br label %if.end42, !dbg !2128

if.else37:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** @optarg, align 8, !dbg !2129
  %tobool38 = icmp ne i8* %18, null, !dbg !2129
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !2131

if.then39:                                        ; preds = %if.else37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2132
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !2134
  br label %if.end41, !dbg !2135

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end36
  br label %sw.epilog, !dbg !2136

sw.bb43:                                          ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !2137
  unreachable, !dbg !2137

sw.bb44:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2138
  %20 = load i8*, i8** @Version, align 8, !dbg !2138
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* null), !dbg !2138
  call void @exit(i32 0) #13, !dbg !2138
  unreachable, !dbg !2138

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !2139
  unreachable, !dbg !2139

sw.epilog:                                        ; preds = %if.end42, %if.end30, %if.then28, %sw.bb25, %if.end24, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2043, !llvm.loop !2140

while.end:                                        ; preds = %while.cond
  %21 = load i8, i8* @dir_arg, align 1, !dbg !2142
  %tobool45 = trunc i8 %21 to i1, !dbg !2142
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !2144

land.lhs.true:                                    ; preds = %while.end
  %22 = load i8, i8* @strip_files, align 1, !dbg !2145
  %tobool46 = trunc i8 %22 to i1, !dbg !2145
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2146

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !2147
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call48), !dbg !2147
  unreachable, !dbg !2147

if.end49:                                         ; preds = %land.lhs.true, %while.end
  %23 = load i8, i8* @dir_arg, align 1, !dbg !2148
  %tobool50 = trunc i8 %23 to i1, !dbg !2148
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !2150

land.lhs.true51:                                  ; preds = %if.end49
  %24 = load i8*, i8** %target_directory, align 8, !dbg !2151
  %tobool52 = icmp ne i8* %24, null, !dbg !2151
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !2152

if.then53:                                        ; preds = %land.lhs.true51
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !2153
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call54), !dbg !2153
  unreachable, !dbg !2153

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  %25 = load i8*, i8** %target_directory, align 8, !dbg !2154
  %tobool56 = icmp ne i8* %25, null, !dbg !2154
  br i1 %tobool56, label %if.then57, label %if.end76, !dbg !2156

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2157, metadata !DIExpression()), !dbg !2159
  call void @llvm.dbg.declare(metadata i8* %stat_success, metadata !2160, metadata !DIExpression()), !dbg !2161
  %26 = load i8*, i8** %target_directory, align 8, !dbg !2162
  %call58 = call i32 @stat(i8* %26, %struct.stat* %st) #9, !dbg !2163
  %cmp59 = icmp eq i32 %call58, 0, !dbg !2164
  %27 = zext i1 %cmp59 to i64, !dbg !2163
  %cond = select i1 %cmp59, i32 1, i32 0, !dbg !2163
  %tobool60 = icmp ne i32 %cond, 0, !dbg !2163
  %frombool = zext i1 %tobool60 to i8, !dbg !2161
  store i8 %frombool, i8* %stat_success, align 1, !dbg !2161
  %28 = load i8, i8* %mkdir_and_install, align 1, !dbg !2165
  %tobool61 = trunc i8 %28 to i1, !dbg !2165
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !2167

land.lhs.true62:                                  ; preds = %if.then57
  %29 = load i8, i8* %stat_success, align 1, !dbg !2168
  %tobool63 = trunc i8 %29 to i1, !dbg !2168
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !2169

if.then64:                                        ; preds = %land.lhs.true62
  %call65 = call i32* @__errno_location() #16, !dbg !2170
  %30 = load i32, i32* %call65, align 4, !dbg !2170, !ctir !5
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2170
  %31 = load i8*, i8** %target_directory, align 8, !dbg !2170
  %call67 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2170
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %30, i8* %call66, i8* %call67), !dbg !2170
  unreachable, !dbg !2170

if.end68:                                         ; preds = %land.lhs.true62, %if.then57
  %32 = load i8, i8* %stat_success, align 1, !dbg !2171
  %tobool69 = trunc i8 %32 to i1, !dbg !2171
  br i1 %tobool69, label %land.lhs.true70, label %if.end75, !dbg !2173

land.lhs.true70:                                  ; preds = %if.end68
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2174, !ctir !1981
  %33 = load i32, i32* %st_mode, align 8, !dbg !2174, !ctir !137
  %and = and i32 %33, 61440, !dbg !2174
  %cmp71 = icmp eq i32 %and, 16384, !dbg !2174
  br i1 %cmp71, label %if.end75, label %if.then72, !dbg !2175

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2176
  %34 = load i8*, i8** %target_directory, align 8, !dbg !2176
  %call74 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !2176
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call73, i8* %call74), !dbg !2176
  unreachable, !dbg !2176

if.end75:                                         ; preds = %land.lhs.true70, %if.end68
  br label %if.end76, !dbg !2177

if.end76:                                         ; preds = %if.end75, %if.end55
  %35 = load i8, i8* %make_backups, align 1, !dbg !2178
  %tobool77 = trunc i8 %35 to i1, !dbg !2178
  br i1 %tobool77, label %cond.true, label %cond.false, !dbg !2178

cond.true:                                        ; preds = %if.end76
  %call78 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !2179
  %36 = load i8*, i8** %version_control_string, align 8, !dbg !2180
  %call79 = call i32 @xget_version(i8* %call78, i8* %36), !dbg !2181
  br label %cond.end, !dbg !2178

cond.false:                                       ; preds = %if.end76
  br label %cond.end, !dbg !2178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond80 = phi i32 [ %call79, %cond.true ], [ 0, %cond.false ], !dbg !2178
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2182, !ctir !129
  store i32 %cond80, i32* %backup_type, align 8, !dbg !2183, !ctir !65
  %37 = load i8*, i8** %backup_suffix, align 8, !dbg !2184
  call void @set_simple_backup_suffix(i8* %37), !dbg !2185
  %preserve_security_context81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2186, !ctir !129
  %38 = load i8, i8* %preserve_security_context81, align 1, !dbg !2186
  %tobool82 = trunc i8 %38 to i1, !dbg !2186, !ctir !139
  br i1 %tobool82, label %land.lhs.true83, label %if.end89, !dbg !2188

land.lhs.true83:                                  ; preds = %cond.end
  %set_security_context84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2189, !ctir !129
  %39 = load i8, i8* %set_security_context84, align 1, !dbg !2189
  %tobool85 = trunc i8 %39 to i1, !dbg !2189, !ctir !139
  br i1 %tobool85, label %if.then87, label %lor.lhs.false, !dbg !2190

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %40 = load i8*, i8** %scontext, align 8, !dbg !2191
  %tobool86 = icmp ne i8* %40, null, !dbg !2191
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !2192

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !2193
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call88), !dbg !2193
  unreachable, !dbg !2193

if.end89:                                         ; preds = %lor.lhs.false, %cond.end
  %41 = load i8*, i8** %scontext, align 8, !dbg !2194
  %tobool90 = icmp ne i8* %41, null, !dbg !2194
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !2196

land.lhs.true91:                                  ; preds = %if.end89
  %42 = load i8*, i8** %scontext, align 8, !dbg !2197
  %call92 = call i8* @se_const(i8* %42), !dbg !2198
  %call93 = call i32 @setfscreatecon(i8* %call92), !dbg !2199
  %cmp94 = icmp slt i32 %call93, 0, !dbg !2200
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !2201

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32* @__errno_location() #16, !dbg !2202
  %43 = load i32, i32* %call96, align 4, !dbg !2202, !ctir !5
  %call97 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !2202
  %44 = load i8*, i8** %scontext, align 8, !dbg !2202
  %call98 = call i8* @quote(i8* %44), !dbg !2202
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %43, i8* %call97, i8* %call98), !dbg !2202
  unreachable, !dbg !2202

if.end99:                                         ; preds = %land.lhs.true91, %if.end89
  %45 = load i32, i32* %argc.addr, align 4, !dbg !2203
  %46 = load i32, i32* @optind, align 4, !dbg !2204
  %sub = sub nsw i32 %45, %46, !dbg !2205
  store i32 %sub, i32* %n_files, align 4, !dbg !2206
  %47 = load i8**, i8*** %argv.addr, align 8, !dbg !2207
  %48 = load i32, i32* @optind, align 4, !dbg !2208
  %idx.ext = sext i32 %48 to i64, !dbg !2209
  %add.ptr = getelementptr inbounds i8*, i8** %47, i64 %idx.ext, !dbg !2209, !ctir !7
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2210
  %49 = load i32, i32* %n_files, align 4, !dbg !2211
  %50 = load i8, i8* @dir_arg, align 1, !dbg !2213
  %tobool100 = trunc i8 %50 to i1, !dbg !2213
  br i1 %tobool100, label %lor.end, label %lor.rhs, !dbg !2214

lor.rhs:                                          ; preds = %if.end99
  %51 = load i8*, i8** %target_directory, align 8, !dbg !2215
  %tobool101 = icmp ne i8* %51, null, !dbg !2214
  br label %lor.end, !dbg !2214

lor.end:                                          ; preds = %lor.rhs, %if.end99
  %52 = phi i1 [ true, %if.end99 ], [ %tobool101, %lor.rhs ]
  %lnot = xor i1 %52, true, !dbg !2216
  %lnot.ext = zext i1 %lnot to i32, !dbg !2216
  %cmp102 = icmp sle i32 %49, %lnot.ext, !dbg !2217
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !2218

if.then103:                                       ; preds = %lor.end
  %53 = load i32, i32* %n_files, align 4, !dbg !2219
  %cmp104 = icmp sle i32 %53, 0, !dbg !2222
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !2223

if.then105:                                       ; preds = %if.then103
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !2224
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call106), !dbg !2225
  br label %if.end111, !dbg !2225

if.else107:                                       ; preds = %if.then103
  %call108 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !2226
  %54 = load i8**, i8*** %file, align 8, !dbg !2227
  %arrayidx109 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !2227, !ctir !206
  %55 = load i8*, i8** %arrayidx109, align 8, !dbg !2227
  %call110 = call i8* @quotearg_style(i32 4, i8* %55), !dbg !2227
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call108, i8* %call110), !dbg !2228
  br label %if.end111

if.end111:                                        ; preds = %if.else107, %if.then105
  call void @usage(i32 1) #15, !dbg !2229
  unreachable, !dbg !2229

if.end112:                                        ; preds = %lor.end
  %56 = load i8, i8* %no_target_directory, align 1, !dbg !2230
  %tobool113 = trunc i8 %56 to i1, !dbg !2230
  br i1 %tobool113, label %if.then114, label %if.else125, !dbg !2232

if.then114:                                       ; preds = %if.end112
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2233
  %tobool115 = icmp ne i8* %57, null, !dbg !2233
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !2236

if.then116:                                       ; preds = %if.then114
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !2237
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call117), !dbg !2237
  unreachable, !dbg !2237

if.end118:                                        ; preds = %if.then114
  %58 = load i32, i32* %n_files, align 4, !dbg !2238
  %cmp119 = icmp slt i32 2, %58, !dbg !2240
  br i1 %cmp119, label %if.then120, label %if.end124, !dbg !2241

if.then120:                                       ; preds = %if.end118
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !2242
  %59 = load i8**, i8*** %file, align 8, !dbg !2244
  %arrayidx122 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !2244, !ctir !206
  %60 = load i8*, i8** %arrayidx122, align 8, !dbg !2244
  %call123 = call i8* @quotearg_style(i32 4, i8* %60), !dbg !2244
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call121, i8* %call123), !dbg !2245
  call void @usage(i32 1) #15, !dbg !2246
  unreachable, !dbg !2246

if.end124:                                        ; preds = %if.end118
  br label %if.end149, !dbg !2247

if.else125:                                       ; preds = %if.end112
  %61 = load i8, i8* @dir_arg, align 1, !dbg !2248
  %tobool126 = trunc i8 %61 to i1, !dbg !2248
  br i1 %tobool126, label %if.end148, label %lor.lhs.false127, !dbg !2250

lor.lhs.false127:                                 ; preds = %if.else125
  %62 = load i8*, i8** %target_directory, align 8, !dbg !2251
  %tobool128 = icmp ne i8* %62, null, !dbg !2251
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !2252

if.then129:                                       ; preds = %lor.lhs.false127
  %63 = load i32, i32* %n_files, align 4, !dbg !2253
  %cmp130 = icmp sle i32 2, %63, !dbg !2256
  br i1 %cmp130, label %land.lhs.true131, label %if.else138, !dbg !2257

land.lhs.true131:                                 ; preds = %if.then129
  %64 = load i8**, i8*** %file, align 8, !dbg !2258
  %65 = load i32, i32* %n_files, align 4, !dbg !2259
  %sub132 = sub nsw i32 %65, 1, !dbg !2260
  %idxprom = sext i32 %sub132 to i64, !dbg !2258
  %arrayidx133 = getelementptr inbounds i8*, i8** %64, i64 %idxprom, !dbg !2258, !ctir !206
  %66 = load i8*, i8** %arrayidx133, align 8, !dbg !2258
  %call134 = call zeroext i1 @target_directory_operand(i8* %66), !dbg !2261
  br i1 %call134, label %if.then135, label %if.else138, !dbg !2262

if.then135:                                       ; preds = %land.lhs.true131
  %67 = load i8**, i8*** %file, align 8, !dbg !2263
  %68 = load i32, i32* %n_files, align 4, !dbg !2264
  %dec = add nsw i32 %68, -1, !dbg !2264
  store i32 %dec, i32* %n_files, align 4, !dbg !2264
  %idxprom136 = sext i32 %dec to i64, !dbg !2263
  %arrayidx137 = getelementptr inbounds i8*, i8** %67, i64 %idxprom136, !dbg !2263, !ctir !206
  %69 = load i8*, i8** %arrayidx137, align 8, !dbg !2263
  store i8* %69, i8** %target_directory, align 8, !dbg !2265
  br label %if.end147, !dbg !2266

if.else138:                                       ; preds = %land.lhs.true131, %if.then129
  %70 = load i32, i32* %n_files, align 4, !dbg !2267
  %cmp139 = icmp slt i32 2, %70, !dbg !2269
  br i1 %cmp139, label %if.then140, label %if.end146, !dbg !2270

if.then140:                                       ; preds = %if.else138
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2271
  %71 = load i8**, i8*** %file, align 8, !dbg !2271
  %72 = load i32, i32* %n_files, align 4, !dbg !2271
  %sub142 = sub nsw i32 %72, 1, !dbg !2271
  %idxprom143 = sext i32 %sub142 to i64, !dbg !2271
  %arrayidx144 = getelementptr inbounds i8*, i8** %71, i64 %idxprom143, !dbg !2271, !ctir !206
  %73 = load i8*, i8** %arrayidx144, align 8, !dbg !2271
  %call145 = call i8* @quotearg_style(i32 4, i8* %73), !dbg !2271
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call141, i8* %call145), !dbg !2271
  unreachable, !dbg !2271

if.end146:                                        ; preds = %if.else138
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then135
  br label %if.end148, !dbg !2272

if.end148:                                        ; preds = %if.end147, %lor.lhs.false127, %if.else125
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end124
  %74 = load i8*, i8** %specified_mode, align 8, !dbg !2273
  %tobool150 = icmp ne i8* %74, null, !dbg !2273
  br i1 %tobool150, label %if.then151, label %if.end160, !dbg !2275

if.then151:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !2276, metadata !DIExpression()), !dbg !2278
  %75 = load i8*, i8** %specified_mode, align 8, !dbg !2279
  %call152 = call %struct.mode_change* @mode_compile(i8* %75), !dbg !2280
  store %struct.mode_change* %call152, %struct.mode_change** %change, align 8, !dbg !2278
  %76 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2281
  %tobool153 = icmp ne %struct.mode_change* %76, null, !dbg !2281
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !2283

if.then154:                                       ; preds = %if.then151
  %call155 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !2284
  %77 = load i8*, i8** %specified_mode, align 8, !dbg !2284
  %call156 = call i8* @quote(i8* %77), !dbg !2284
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call155, i8* %call156), !dbg !2284
  unreachable, !dbg !2284

if.end157:                                        ; preds = %if.then151
  %78 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2285
  %call158 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %78, i32* null), !dbg !2286
  store i32 %call158, i32* @mode, align 4, !dbg !2287
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2288
  %call159 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %79, i32* @dir_mode_bits), !dbg !2289
  store i32 %call159, i32* @dir_mode, align 4, !dbg !2290
  %80 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2291
  %81 = bitcast %struct.mode_change* %80 to i8*, !dbg !2291
  call void @free(i8* %81) #9, !dbg !2292
  br label %if.end160, !dbg !2293

if.end160:                                        ; preds = %if.end157, %if.end149
  %82 = load i8, i8* %strip_program_specified, align 1, !dbg !2294
  %tobool161 = trunc i8 %82 to i1, !dbg !2294
  br i1 %tobool161, label %land.lhs.true162, label %if.end166, !dbg !2296

land.lhs.true162:                                 ; preds = %if.end160
  %83 = load i8, i8* @strip_files, align 1, !dbg !2297
  %tobool163 = trunc i8 %83 to i1, !dbg !2297
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !2298

if.then164:                                       ; preds = %land.lhs.true162
  %call165 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !2299
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call165), !dbg !2300
  br label %if.end166, !dbg !2300

if.end166:                                        ; preds = %if.then164, %land.lhs.true162, %if.end160
  %84 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2301
  %tobool167 = trunc i8 %84 to i1, !dbg !2301
  br i1 %tobool167, label %land.lhs.true168, label %if.end173, !dbg !2303

land.lhs.true168:                                 ; preds = %if.end166
  %preserve_timestamps169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2304, !ctir !129
  %85 = load i8, i8* %preserve_timestamps169, align 1, !dbg !2304
  %tobool170 = trunc i8 %85 to i1, !dbg !2304, !ctir !139
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !2305

if.then171:                                       ; preds = %land.lhs.true168
  %call172 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !2306
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call172), !dbg !2308
  call void @usage(i32 1) #15, !dbg !2309
  unreachable, !dbg !2309

if.end173:                                        ; preds = %land.lhs.true168, %if.end166
  %86 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2310
  %tobool174 = trunc i8 %86 to i1, !dbg !2310
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !2312

land.lhs.true175:                                 ; preds = %if.end173
  %87 = load i8, i8* @strip_files, align 1, !dbg !2313
  %tobool176 = trunc i8 %87 to i1, !dbg !2313
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !2314

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !2315
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call178), !dbg !2317
  call void @usage(i32 1) #15, !dbg !2318
  unreachable, !dbg !2318

if.end179:                                        ; preds = %land.lhs.true175, %if.end173
  %88 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2319
  %tobool180 = trunc i8 %88 to i1, !dbg !2319
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !2321

land.lhs.true181:                                 ; preds = %if.end179
  %89 = load i32, i32* @mode, align 4, !dbg !2322
  %call182 = call zeroext i1 @extra_mode(i32 %89), !dbg !2323
  br i1 %call182, label %if.then183, label %if.end185, !dbg !2324

if.then183:                                       ; preds = %land.lhs.true181
  %call184 = call i8* @gettext(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !2325
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call184), !dbg !2326
  br label %if.end185, !dbg !2326

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %if.end179
  call void @get_ids(), !dbg !2327
  %90 = load i8, i8* @dir_arg, align 1, !dbg !2328
  %tobool186 = trunc i8 %90 to i1, !dbg !2328
  br i1 %tobool186, label %if.then187, label %if.else189, !dbg !2330

if.then187:                                       ; preds = %if.end185
  %91 = load i32, i32* %n_files, align 4, !dbg !2331
  %92 = load i8**, i8*** %file, align 8, !dbg !2332
  %93 = bitcast %struct.cp_options* %x to i8*, !dbg !2333
  %call188 = call i32 @savewd_process_files(i32 %91, i8** %92, i32 (i8*, %struct.savewd*, i8*)* @process_dir, i8* %93), !dbg !2334
  store i32 %call188, i32* %exit_status, align 4, !dbg !2335
  br label %if.end213, !dbg !2336

if.else189:                                       ; preds = %if.end185
  call void @hash_init(), !dbg !2337
  %94 = load i8*, i8** %target_directory, align 8, !dbg !2339
  %tobool190 = icmp ne i8* %94, null, !dbg !2339
  br i1 %tobool190, label %if.else203, label %if.then191, !dbg !2341

if.then191:                                       ; preds = %if.else189
  %95 = load i8, i8* %mkdir_and_install, align 1, !dbg !2342
  %tobool192 = trunc i8 %95 to i1, !dbg !2342
  br i1 %tobool192, label %cond.true193, label %cond.false197, !dbg !2345

cond.true193:                                     ; preds = %if.then191
  %96 = load i8**, i8*** %file, align 8, !dbg !2346
  %arrayidx194 = getelementptr inbounds i8*, i8** %96, i64 0, !dbg !2346, !ctir !206
  %97 = load i8*, i8** %arrayidx194, align 8, !dbg !2346
  %98 = load i8**, i8*** %file, align 8, !dbg !2347
  %arrayidx195 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !2347, !ctir !206
  %99 = load i8*, i8** %arrayidx195, align 8, !dbg !2347
  %call196 = call zeroext i1 @install_file_in_file_parents(i8* %97, i8* %99, %struct.cp_options* %x), !dbg !2348
  br i1 %call196, label %if.end202, label %if.then201, !dbg !2342

cond.false197:                                    ; preds = %if.then191
  %100 = load i8**, i8*** %file, align 8, !dbg !2349
  %arrayidx198 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !2349, !ctir !206
  %101 = load i8*, i8** %arrayidx198, align 8, !dbg !2349
  %102 = load i8**, i8*** %file, align 8, !dbg !2350
  %arrayidx199 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !2350, !ctir !206
  %103 = load i8*, i8** %arrayidx199, align 8, !dbg !2350
  %call200 = call zeroext i1 @install_file_in_file(i8* %101, i8* %103, %struct.cp_options* %x), !dbg !2351
  br i1 %call200, label %if.end202, label %if.then201, !dbg !2345

if.then201:                                       ; preds = %cond.false197, %cond.true193
  store i32 1, i32* %exit_status, align 4, !dbg !2352
  br label %if.end202, !dbg !2353

if.end202:                                        ; preds = %if.then201, %cond.false197, %cond.true193
  br label %if.end212, !dbg !2354

if.else203:                                       ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2355, metadata !DIExpression()), !dbg !2357
  call void @dest_info_init(%struct.cp_options* %x), !dbg !2358
  store i32 0, i32* %i, align 4, !dbg !2359
  br label %for.cond, !dbg !2361

for.cond:                                         ; preds = %for.inc, %if.else203
  %104 = load i32, i32* %i, align 4, !dbg !2362
  %105 = load i32, i32* %n_files, align 4, !dbg !2364
  %cmp204 = icmp slt i32 %104, %105, !dbg !2365
  br i1 %cmp204, label %for.body, label %for.end, !dbg !2366

for.body:                                         ; preds = %for.cond
  %106 = load i8**, i8*** %file, align 8, !dbg !2367
  %107 = load i32, i32* %i, align 4, !dbg !2369
  %idxprom205 = sext i32 %107 to i64, !dbg !2367
  %arrayidx206 = getelementptr inbounds i8*, i8** %106, i64 %idxprom205, !dbg !2367, !ctir !206
  %108 = load i8*, i8** %arrayidx206, align 8, !dbg !2367
  %109 = load i8*, i8** %target_directory, align 8, !dbg !2370
  %110 = load i32, i32* %i, align 4, !dbg !2371
  %cmp207 = icmp eq i32 %110, 0, !dbg !2372
  br i1 %cmp207, label %land.rhs, label %land.end, !dbg !2373

land.rhs:                                         ; preds = %for.body
  %111 = load i8, i8* %mkdir_and_install, align 1, !dbg !2374
  %tobool208 = trunc i8 %111 to i1, !dbg !2374
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %112 = phi i1 [ false, %for.body ], [ %tobool208, %land.rhs ], !dbg !2375
  %call209 = call zeroext i1 @install_file_in_dir(i8* %108, i8* %109, %struct.cp_options* %x, i1 zeroext %112), !dbg !2376
  br i1 %call209, label %if.end211, label %if.then210, !dbg !2377

if.then210:                                       ; preds = %land.end
  store i32 1, i32* %exit_status, align 4, !dbg !2378
  br label %if.end211, !dbg !2379

if.end211:                                        ; preds = %if.then210, %land.end
  br label %for.inc, !dbg !2380

for.inc:                                          ; preds = %if.end211
  %113 = load i32, i32* %i, align 4, !dbg !2381
  %inc = add nsw i32 %113, 1, !dbg !2381
  store i32 %inc, i32* %i, align 4, !dbg !2381
  br label %for.cond, !dbg !2382, !llvm.loop !2383

for.end:                                          ; preds = %for.cond
  br label %if.end212

if.end212:                                        ; preds = %for.end, %if.end202
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then187
  %114 = load i32, i32* %exit_status, align 4, !dbg !2385
  ret i32 %114, !dbg !2386
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !2387 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2390, metadata !DIExpression()), !dbg !2391
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2392
  call void @cp_options_default(%struct.cp_options* %0), !dbg !2393
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2394
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !2395, !ctir !129
  store i8 1, i8* %copy_as_regular, align 4, !dbg !2396, !ctir !139
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2397
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !2398, !ctir !129
  store i32 0, i32* %reflink_mode, align 8, !dbg !2399, !ctir !92
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2400
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !2401, !ctir !129
  store i32 4, i32* %dereference, align 4, !dbg !2402, !ctir !73
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2403
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !2404, !ctir !129
  store i8 1, i8* %unlink_dest_before_opening, align 1, !dbg !2405, !ctir !139
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2406
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !2407, !ctir !129
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !2408, !ctir !139
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2409
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !2410, !ctir !129
  store i8 0, i8* %hard_link, align 1, !dbg !2411, !ctir !139
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2412
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !2413, !ctir !129
  store i32 4, i32* %interactive, align 8, !dbg !2414, !ctir !80
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2415
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !2416, !ctir !129
  store i8 0, i8* %move_mode, align 8, !dbg !2417, !ctir !139
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2418
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !2419, !ctir !129
  store i8 1, i8* %install_mode, align 1, !dbg !2420, !ctir !139
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2421
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !2422, !ctir !129
  store i8 0, i8* %one_file_system, align 4, !dbg !2423, !ctir !139
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2424
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !2425, !ctir !129
  store i8 0, i8* %preserve_ownership, align 1, !dbg !2426, !ctir !139
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2427
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !2428, !ctir !129
  store i8 0, i8* %preserve_links, align 2, !dbg !2429, !ctir !139
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2430
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !2431, !ctir !129
  store i8 0, i8* %preserve_mode, align 2, !dbg !2432, !ctir !139
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2433
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !2434, !ctir !129
  store i8 0, i8* %preserve_timestamps, align 1, !dbg !2435, !ctir !139
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2436
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !2437, !ctir !129
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !2438, !ctir !139
  %16 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2439
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 26, !dbg !2440, !ctir !129
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !2441, !ctir !139
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2442
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 20, !dbg !2443, !ctir !129
  store i8 1, i8* %data_copy_required, align 1, !dbg !2444, !ctir !139
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2445
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 21, !dbg !2446, !ctir !129
  store i8 0, i8* %require_preserve, align 4, !dbg !2447, !ctir !139
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2448
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 25, !dbg !2449, !ctir !129
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !2450, !ctir !139
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2451
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 27, !dbg !2452, !ctir !129
  store i8 0, i8* %recursive, align 2, !dbg !2453, !ctir !139
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2454
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !2455, !ctir !129
  store i32 2, i32* %sparse_mode, align 4, !dbg !2456, !ctir !86
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2457
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 29, !dbg !2458, !ctir !129
  store i8 0, i8* %symbolic_link, align 4, !dbg !2459, !ctir !139
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2460
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 0, !dbg !2461, !ctir !129
  store i32 0, i32* %backup_type, align 8, !dbg !2462, !ctir !65
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2463
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 28, !dbg !2464, !ctir !129
  store i8 1, i8* %set_mode, align 1, !dbg !2465, !ctir !139
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2466
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 4, !dbg !2467, !ctir !129
  store i32 384, i32* %mode, align 8, !dbg !2468, !ctir !136
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2469
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 32, !dbg !2470, !ctir !129
  store i8 0, i8* %stdin_tty, align 1, !dbg !2471, !ctir !139
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2472
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 33, !dbg !2473, !ctir !129
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !2474, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2475
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 30, !dbg !2476, !ctir !129
  store i8 0, i8* %update, align 1, !dbg !2477, !ctir !139
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2478
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 23, !dbg !2479, !ctir !129
  store i8 0, i8* %require_preserve_context, align 2, !dbg !2480, !ctir !139
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2481
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 22, !dbg !2482, !ctir !129
  store i8 0, i8* %preserve_security_context, align 1, !dbg !2483, !ctir !139
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2484
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 18, !dbg !2485, !ctir !129
  store i8 0, i8* %set_security_context, align 1, !dbg !2486, !ctir !139
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2487
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 24, !dbg !2488, !ctir !129
  store i8 0, i8* %preserve_xattr, align 1, !dbg !2489, !ctir !139
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2490
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !2491, !ctir !129
  store i8 0, i8* %verbose, align 2, !dbg !2492, !ctir !139
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2493
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !2494, !ctir !129
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !2495, !ctir !172
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2496
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !2497, !ctir !129
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !2498, !ctir !172
  ret void, !dbg !2499
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %sctx) #4 !dbg !2500 {
entry:
  %sctx.addr = alloca i8*, align 8
  store i8* %sctx, i8** %sctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sctx.addr, metadata !2503, metadata !DIExpression()), !dbg !2504
  %0 = load i8*, i8** %sctx.addr, align 8, !dbg !2505
  ret i8* %0, !dbg !2506
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !2507 {
entry:
  %file.addr = alloca i8*, align 8
  %b = alloca i8*, align 8, !ctir !180
  %blen = alloca i64, align 8, !ctir !52
  %looks_like_a_dir = alloca i8, align 1, !ctir !139
  %st = alloca %struct.stat, align 8, !ctir !1981
  %err = alloca i32, align 4, !ctir !5
  %is_a_dir = alloca i8, align 1, !ctir !139
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !2508, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.declare(metadata i8** %b, metadata !2510, metadata !DIExpression()), !dbg !2511
  %0 = load i8*, i8** %file.addr, align 8, !dbg !2512
  %call = call i8* @last_component(i8* %0) #14, !dbg !2513
  store i8* %call, i8** %b, align 8, !dbg !2511
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !2514, metadata !DIExpression()), !dbg !2515
  %1 = load i8*, i8** %b, align 8, !dbg !2516
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !2517
  store i64 %call1, i64* %blen, align 8, !dbg !2515
  call void @llvm.dbg.declare(metadata i8* %looks_like_a_dir, metadata !2518, metadata !DIExpression()), !dbg !2519
  %2 = load i64, i64* %blen, align 8, !dbg !2520
  %cmp = icmp eq i64 %2, 0, !dbg !2521
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2522

lor.rhs:                                          ; preds = %entry
  %3 = load i8*, i8** %b, align 8, !dbg !2523
  %4 = load i64, i64* %blen, align 8, !dbg !2523
  %sub = sub i64 %4, 1, !dbg !2523
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !2523, !ctir !180
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2523
  %conv = sext i8 %5 to i32, !dbg !2523
  %cmp2 = icmp eq i32 %conv, 47, !dbg !2523
  br label %lor.end, !dbg !2522

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !2519
  store i8 %frombool, i8* %looks_like_a_dir, align 1, !dbg !2519
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2524, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2526, metadata !DIExpression()), !dbg !2527
  %7 = load i8*, i8** %file.addr, align 8, !dbg !2528
  %call4 = call i32 @stat(i8* %7, %struct.stat* %st) #9, !dbg !2529
  %cmp5 = icmp eq i32 %call4, 0, !dbg !2530
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !2529

cond.true:                                        ; preds = %lor.end
  br label %cond.end, !dbg !2529

cond.false:                                       ; preds = %lor.end
  %call7 = call i32* @__errno_location() #16, !dbg !2531
  %8 = load i32, i32* %call7, align 4, !dbg !2531, !ctir !5
  br label %cond.end, !dbg !2529

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ], !dbg !2529
  store i32 %cond, i32* %err, align 4, !dbg !2527
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !2532, metadata !DIExpression()), !dbg !2533
  %9 = load i32, i32* %err, align 4, !dbg !2534
  %tobool = icmp ne i32 %9, 0, !dbg !2534
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2535

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2536, !ctir !1981
  %10 = load i32, i32* %st_mode, align 8, !dbg !2536, !ctir !137
  %and = and i32 %10, 61440, !dbg !2536
  %cmp8 = icmp eq i32 %and, 16384, !dbg !2536
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp8, %land.rhs ], !dbg !2537
  %frombool10 = zext i1 %11 to i8, !dbg !2533
  store i8 %frombool10, i8* %is_a_dir, align 1, !dbg !2533
  %12 = load i32, i32* %err, align 4, !dbg !2538
  %tobool11 = icmp ne i32 %12, 0, !dbg !2538
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !2540

land.lhs.true:                                    ; preds = %land.end
  %13 = load i32, i32* %err, align 4, !dbg !2541
  %cmp12 = icmp ne i32 %13, 2, !dbg !2542
  br i1 %cmp12, label %if.then, label %if.end, !dbg !2543

if.then:                                          ; preds = %land.lhs.true
  %14 = load i32, i32* %err, align 4, !dbg !2544
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2544
  %15 = load i8*, i8** %file.addr, align 8, !dbg !2544
  %call15 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !2544
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %14, i8* %call14, i8* %call15), !dbg !2544
  unreachable, !dbg !2544

if.end:                                           ; preds = %land.lhs.true, %land.end
  %16 = load i8, i8* %is_a_dir, align 1, !dbg !2545
  %tobool16 = trunc i8 %16 to i1, !dbg !2545
  %conv17 = zext i1 %tobool16 to i32, !dbg !2545
  %17 = load i8, i8* %looks_like_a_dir, align 1, !dbg !2547
  %tobool18 = trunc i8 %17 to i1, !dbg !2547
  %conv19 = zext i1 %tobool18 to i32, !dbg !2547
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !2548
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !2549

if.then22:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !2550
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2550
  %19 = load i8*, i8** %file.addr, align 8, !dbg !2550
  %call24 = call i8* @quotearg_style(i32 4, i8* %19), !dbg !2550
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %18, i8* %call23, i8* %call24), !dbg !2550
  unreachable, !dbg !2550

if.end25:                                         ; preds = %if.end
  %20 = load i8, i8* %is_a_dir, align 1, !dbg !2551
  %tobool26 = trunc i8 %20 to i1, !dbg !2551
  ret i1 %tobool26, !dbg !2552
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extra_mode(i32 %input) #4 !dbg !2553 {
entry:
  %input.addr = alloca i32, align 4
  %mask = alloca i32, align 4, !ctir !136
  store i32 %input, i32* %input.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !2556, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !2558, metadata !DIExpression()), !dbg !2559
  store i32 61951, i32* %mask, align 4, !dbg !2559
  %0 = load i32, i32* %input.addr, align 4, !dbg !2560
  %1 = load i32, i32* %mask, align 4, !dbg !2561
  %neg = xor i32 %1, -1, !dbg !2562
  %and = and i32 %0, %neg, !dbg !2563
  %tobool = icmp ne i32 %and, 0, !dbg !2564
  %lnot = xor i1 %tobool, true, !dbg !2564
  %lnot1 = xor i1 %lnot, true, !dbg !2565
  ret i1 %lnot1, !dbg !2566
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_ids() #4 !dbg !2567 {
entry:
  %pw = alloca %struct.passwd*, align 8, !ctir !320
  %gr = alloca %struct.group*, align 8, !ctir !331
  %tmp = alloca i64, align 8, !ctir !54
  %tmp17 = alloca i64, align 8, !ctir !54
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !2568, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.declare(metadata %struct.group** %gr, metadata !2570, metadata !DIExpression()), !dbg !2571
  %0 = load i8*, i8** @owner_name, align 8, !dbg !2572
  %tobool = icmp ne i8* %0, null, !dbg !2572
  br i1 %tobool, label %if.then, label %if.else9, !dbg !2574

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @owner_name, align 8, !dbg !2575
  %call = call %struct.passwd* @getpwnam(i8* %1), !dbg !2577
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !2578
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2579
  %cmp = icmp eq %struct.passwd* %2, null, !dbg !2581
  br i1 %cmp, label %if.then1, label %if.else, !dbg !2582

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !2583, metadata !DIExpression()), !dbg !2585
  %3 = load i8*, i8** @owner_name, align 8, !dbg !2586
  %call2 = call i32 @xstrtoul(i8* %3, i8** null, i32 0, i64* %tmp, i8* null), !dbg !2588
  %cmp3 = icmp ne i32 %call2, 0, !dbg !2589
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !2590

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i64, i64* %tmp, align 8, !dbg !2591
  %cmp4 = icmp ult i64 4294967295, %4, !dbg !2592
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2593

if.then5:                                         ; preds = %lor.lhs.false, %if.then1
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !2594
  %5 = load i8*, i8** @owner_name, align 8, !dbg !2594
  %call7 = call i8* @quote(i8* %5), !dbg !2594
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call6, i8* %call7), !dbg !2594
  unreachable, !dbg !2594

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %tmp, align 8, !dbg !2595
  %conv = trunc i64 %6 to i32, !dbg !2595
  store i32 %conv, i32* @owner_id, align 4, !dbg !2596
  br label %if.end8, !dbg !2597

if.else:                                          ; preds = %if.then
  %7 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2598
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 2, !dbg !2599, !ctir !321
  %8 = load i32, i32* %pw_uid, align 8, !dbg !2599, !ctir !125
  store i32 %8, i32* @owner_id, align 4, !dbg !2600
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  call void @endpwent(), !dbg !2601
  br label %if.end10, !dbg !2602

if.else9:                                         ; preds = %entry
  store i32 -1, i32* @owner_id, align 4, !dbg !2603
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  %9 = load i8*, i8** @group_name, align 8, !dbg !2604
  %tobool11 = icmp ne i8* %9, null, !dbg !2604
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !2606

if.then12:                                        ; preds = %if.end10
  %10 = load i8*, i8** @group_name, align 8, !dbg !2607
  %call13 = call %struct.group* @getgrnam(i8* %10), !dbg !2609
  store %struct.group* %call13, %struct.group** %gr, align 8, !dbg !2610
  %11 = load %struct.group*, %struct.group** %gr, align 8, !dbg !2611
  %cmp14 = icmp eq %struct.group* %11, null, !dbg !2613
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !2614

if.then16:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i64* %tmp17, metadata !2615, metadata !DIExpression()), !dbg !2617
  %12 = load i8*, i8** @group_name, align 8, !dbg !2618
  %call18 = call i32 @xstrtoul(i8* %12, i8** null, i32 0, i64* %tmp17, i8* null), !dbg !2620
  %cmp19 = icmp ne i32 %call18, 0, !dbg !2621
  br i1 %cmp19, label %if.then24, label %lor.lhs.false21, !dbg !2622

lor.lhs.false21:                                  ; preds = %if.then16
  %13 = load i64, i64* %tmp17, align 8, !dbg !2623
  %cmp22 = icmp ult i64 4294967295, %13, !dbg !2624
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !2625

if.then24:                                        ; preds = %lor.lhs.false21, %if.then16
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !2626
  %14 = load i8*, i8** @group_name, align 8, !dbg !2626
  %call26 = call i8* @quote(i8* %14), !dbg !2626
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !2626
  unreachable, !dbg !2626

if.end27:                                         ; preds = %lor.lhs.false21
  %15 = load i64, i64* %tmp17, align 8, !dbg !2627
  %conv28 = trunc i64 %15 to i32, !dbg !2627
  store i32 %conv28, i32* @group_id, align 4, !dbg !2628
  br label %if.end30, !dbg !2629

if.else29:                                        ; preds = %if.then12
  %16 = load %struct.group*, %struct.group** %gr, align 8, !dbg !2630
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %16, i32 0, i32 2, !dbg !2631, !ctir !332
  %17 = load i32, i32* %gr_gid, align 8, !dbg !2631, !ctir !127
  store i32 %17, i32* @group_id, align 4, !dbg !2632
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  call void @endgrent(), !dbg !2633
  br label %if.end32, !dbg !2634

if.else31:                                        ; preds = %if.end10
  store i32 -1, i32* @group_id, align 4, !dbg !2635
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  ret void, !dbg !2636
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_dir(i8* %dir, %struct.savewd* %wd, i8* %options) #4 !dbg !2637 {
entry:
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !339
  %ret = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2641, metadata !DIExpression()), !dbg !2642
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !2643, metadata !DIExpression()), !dbg !2644
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2645, metadata !DIExpression()), !dbg !2646
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2647, metadata !DIExpression()), !dbg !2648
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2649
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2649
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2648
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2650, metadata !DIExpression()), !dbg !2651
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !2652
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !2653
  %4 = load i8*, i8** %options.addr, align 8, !dbg !2654
  %5 = load i32, i32* @dir_mode, align 4, !dbg !2655
  %6 = load i32, i32* @dir_mode_bits, align 4, !dbg !2656
  %7 = load i32, i32* @owner_id, align 4, !dbg !2657
  %8 = load i32, i32* @group_id, align 4, !dbg !2658
  %call = call zeroext i1 @make_dir_parents(i8* %2, %struct.savewd* %3, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %4, i32 %5, void (i8*, i8*)* @announce_mkdir, i32 %6, i32 %7, i32 %8, i1 zeroext false), !dbg !2659
  %9 = zext i1 %call to i64, !dbg !2659
  %cond = select i1 %call, i32 0, i32 1, !dbg !2659
  store i32 %cond, i32* %ret, align 4, !dbg !2651
  %10 = load i32, i32* %ret, align 4, !dbg !2660
  %cmp = icmp eq i32 %10, 0, !dbg !2662
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !2663

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2664
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !2665, !ctir !340
  %12 = load i8, i8* %set_security_context, align 1, !dbg !2665
  %tobool = trunc i8 %12 to i1, !dbg !2665, !ctir !139
  br i1 %tobool, label %if.then, label %if.end10, !dbg !2666

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %dir.addr, align 8, !dbg !2667
  %call1 = call i8* @last_component(i8* %13) #14, !dbg !2670
  %call2 = call zeroext i1 @restorecon(i8* %call1, i1 zeroext false, i1 zeroext false), !dbg !2671
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !2672

land.lhs.true3:                                   ; preds = %if.then
  %call4 = call i32* @__errno_location() #16, !dbg !2673
  %14 = load i32, i32* %call4, align 4, !dbg !2673, !ctir !5
  %call5 = call zeroext i1 @ignorable_ctx_err(i32 %14), !dbg !2674
  br i1 %call5, label %if.end, label %if.then6, !dbg !2675

if.then6:                                         ; preds = %land.lhs.true3
  %call7 = call i32* @__errno_location() #16, !dbg !2676
  %15 = load i32, i32* %call7, align 4, !dbg !2676, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !2677
  %16 = load i8*, i8** %dir.addr, align 8, !dbg !2678
  %call9 = call i8* @quotearg_style(i32 4, i8* %16), !dbg !2678
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call8, i8* %call9), !dbg !2679
  br label %if.end, !dbg !2679

if.end:                                           ; preds = %if.then6, %land.lhs.true3, %if.then
  br label %if.end10, !dbg !2680

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !2681
  ret i32 %17, !dbg !2682
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file_parents(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2683 {
entry:
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2686, metadata !DIExpression()), !dbg !2687
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2688, metadata !DIExpression()), !dbg !2689
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2690, metadata !DIExpression()), !dbg !2691
  %0 = load i8*, i8** %from.addr, align 8, !dbg !2692
  %1 = load i8*, i8** %to.addr, align 8, !dbg !2693
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2694
  %call = call zeroext i1 @mkancesdirs_safe_wd(i8* %0, i8* %1, %struct.cp_options* %2, i1 zeroext false), !dbg !2695
  br i1 %call, label %land.rhs, label %land.end, !dbg !2696

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %from.addr, align 8, !dbg !2697
  %4 = load i8*, i8** %to.addr, align 8, !dbg !2698
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2699
  %call1 = call zeroext i1 @install_file_in_file(i8* %3, i8* %4, %struct.cp_options* %5), !dbg !2700
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %call1, %land.rhs ], !dbg !2701
  ret i1 %6, !dbg !2702
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2703 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %from_sb = alloca %struct.stat, align 8, !ctir !1981
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2706, metadata !DIExpression()), !dbg !2707
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2708, metadata !DIExpression()), !dbg !2709
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2710, metadata !DIExpression()), !dbg !2711
  call void @llvm.dbg.declare(metadata %struct.stat* %from_sb, metadata !2712, metadata !DIExpression()), !dbg !2713
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2714
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 16, !dbg !2716, !ctir !340
  %1 = load i8, i8* %preserve_timestamps, align 1, !dbg !2716
  %tobool = trunc i8 %1 to i1, !dbg !2716, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2717

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %from.addr, align 8, !dbg !2718
  %call = call i32 @stat(i8* %2, %struct.stat* %from_sb) #9, !dbg !2719
  %cmp = icmp ne i32 %call, 0, !dbg !2720
  br i1 %cmp, label %if.then, label %if.end, !dbg !2721

if.then:                                          ; preds = %land.lhs.true
  %call1 = call i32* @__errno_location() #16, !dbg !2722
  %3 = load i32, i32* %call1, align 4, !dbg !2722, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !2724
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2725
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !2725
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !2726
  store i1 false, i1* %retval, align 1, !dbg !2727
  br label %return, !dbg !2727

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %from.addr, align 8, !dbg !2728
  %6 = load i8*, i8** %to.addr, align 8, !dbg !2730
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2731
  %call4 = call zeroext i1 @copy_file(i8* %5, i8* %6, %struct.cp_options* %7), !dbg !2732
  br i1 %call4, label %if.end6, label %if.then5, !dbg !2733

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !2734
  br label %return, !dbg !2734

if.end6:                                          ; preds = %if.end
  %8 = load i8, i8* @strip_files, align 1, !dbg !2735
  %tobool7 = trunc i8 %8 to i1, !dbg !2735
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !2737

if.then8:                                         ; preds = %if.end6
  %9 = load i8*, i8** %to.addr, align 8, !dbg !2738
  %call9 = call zeroext i1 @strip(i8* %9), !dbg !2740
  br i1 %call9, label %if.end18, label %if.then10, !dbg !2741

if.then10:                                        ; preds = %if.then8
  %10 = load i8*, i8** %to.addr, align 8, !dbg !2742
  %call11 = call i32 @unlink(i8* %10) #9, !dbg !2745
  %cmp12 = icmp ne i32 %call11, 0, !dbg !2746
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !2747

if.then13:                                        ; preds = %if.then10
  %call14 = call i32* @__errno_location() #16, !dbg !2748
  %11 = load i32, i32* %call14, align 4, !dbg !2748, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !2748
  %12 = load i8*, i8** %to.addr, align 8, !dbg !2748
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !2748
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call15, i8* %call16), !dbg !2748
  unreachable, !dbg !2748

if.end17:                                         ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !2749
  br label %return, !dbg !2749

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !2750

if.end19:                                         ; preds = %if.end18, %if.end6
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2751
  %preserve_timestamps20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 16, !dbg !2753, !ctir !340
  %14 = load i8, i8* %preserve_timestamps20, align 1, !dbg !2753
  %tobool21 = trunc i8 %14 to i1, !dbg !2753, !ctir !139
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !2754

land.lhs.true22:                                  ; preds = %if.end19
  %15 = load i8, i8* @strip_files, align 1, !dbg !2755
  %tobool23 = trunc i8 %15 to i1, !dbg !2755
  br i1 %tobool23, label %land.lhs.true25, label %lor.lhs.false, !dbg !2756

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %from_sb, i32 0, i32 3, !dbg !2757, !ctir !1981
  %16 = load i32, i32* %st_mode, align 8, !dbg !2757, !ctir !137
  %and = and i32 %16, 61440, !dbg !2757
  %cmp24 = icmp eq i32 %and, 32768, !dbg !2757
  br i1 %cmp24, label %if.end28, label %land.lhs.true25, !dbg !2758

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true22
  %17 = load i8*, i8** %to.addr, align 8, !dbg !2759
  %call26 = call zeroext i1 @change_timestamps(%struct.stat* %from_sb, i8* %17), !dbg !2760
  br i1 %call26, label %if.end28, label %if.then27, !dbg !2761

if.then27:                                        ; preds = %land.lhs.true25
  store i1 false, i1* %retval, align 1, !dbg !2762
  br label %return, !dbg !2762

if.end28:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end19
  %18 = load i8*, i8** %to.addr, align 8, !dbg !2763
  %call29 = call zeroext i1 @change_attributes(i8* %18), !dbg !2764
  store i1 %call29, i1* %retval, align 1, !dbg !2765
  br label %return, !dbg !2765

return:                                           ; preds = %if.end28, %if.then27, %if.end17, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !2766
  ret i1 %19, !dbg !2766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_dir(i8* %from, i8* %to_dir, %struct.cp_options* %x, i1 zeroext %mkdir_and_install) #4 !dbg !2767 {
entry:
  %from.addr = alloca i8*, align 8
  %to_dir.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %mkdir_and_install.addr = alloca i8, align 1
  %from_base = alloca i8*, align 8, !ctir !180
  %to = alloca i8*, align 8, !ctir !7
  %ret = alloca i8, align 1, !ctir !139
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  store i8* %to_dir, i8** %to_dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to_dir.addr, metadata !2772, metadata !DIExpression()), !dbg !2773
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2774, metadata !DIExpression()), !dbg !2775
  %frombool = zext i1 %mkdir_and_install to i8
  store i8 %frombool, i8* %mkdir_and_install.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install.addr, metadata !2776, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata i8** %from_base, metadata !2778, metadata !DIExpression()), !dbg !2779
  %0 = load i8*, i8** %from.addr, align 8, !dbg !2780
  %call = call i8* @last_component(i8* %0) #14, !dbg !2781
  store i8* %call, i8** %from_base, align 8, !dbg !2779
  call void @llvm.dbg.declare(metadata i8** %to, metadata !2782, metadata !DIExpression()), !dbg !2783
  %1 = load i8*, i8** %to_dir.addr, align 8, !dbg !2784
  %2 = load i8*, i8** %from_base, align 8, !dbg !2785
  %call1 = call i8* @file_name_concat(i8* %1, i8* %2, i8** null), !dbg !2786
  store i8* %call1, i8** %to, align 8, !dbg !2783
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !2787, metadata !DIExpression()), !dbg !2788
  store i8 1, i8* %ret, align 1, !dbg !2788
  %3 = load i8, i8* %mkdir_and_install.addr, align 1, !dbg !2789
  %tobool = trunc i8 %3 to i1, !dbg !2789
  br i1 %tobool, label %if.then, label %if.end, !dbg !2791

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2792
  %5 = load i8*, i8** %to, align 8, !dbg !2793
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2794
  %call2 = call zeroext i1 @mkancesdirs_safe_wd(i8* %4, i8* %5, %struct.cp_options* %6, i1 zeroext true), !dbg !2795
  %frombool3 = zext i1 %call2 to i8, !dbg !2796
  store i8 %frombool3, i8* %ret, align 1, !dbg !2796
  br label %if.end, !dbg !2797

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %ret, align 1, !dbg !2798
  %tobool4 = trunc i8 %7 to i1, !dbg !2798
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !2799

land.rhs:                                         ; preds = %if.end
  %8 = load i8*, i8** %from.addr, align 8, !dbg !2800
  %9 = load i8*, i8** %to, align 8, !dbg !2801
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2802
  %call5 = call zeroext i1 @install_file_in_file(i8* %8, i8* %9, %struct.cp_options* %10), !dbg !2803
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %call5, %land.rhs ], !dbg !2804
  %frombool6 = zext i1 %11 to i8, !dbg !2805
  store i8 %frombool6, i8* %ret, align 1, !dbg !2805
  %12 = load i8*, i8** %to, align 8, !dbg !2806
  call void @free(i8* %12) #9, !dbg !2807
  %13 = load i8, i8* %ret, align 1, !dbg !2808
  %tobool7 = trunc i8 %13 to i1, !dbg !2808
  ret i1 %tobool7, !dbg !2809
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mkancesdirs_safe_wd(i8* %from, i8* %to, %struct.cp_options* %x, i1 zeroext %save_always) #4 !dbg !2810 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %save_always.addr = alloca i8, align 1
  %save_working_directory = alloca i8, align 1, !ctir !139
  %status = alloca i32, align 4, !ctir !5
  %wd = alloca %struct.savewd, align 4, !ctir !99
  %restore_result = alloca i32, align 4, !ctir !5
  %restore_errno = alloca i32, align 4, !ctir !5
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2815, metadata !DIExpression()), !dbg !2816
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2817, metadata !DIExpression()), !dbg !2818
  %frombool = zext i1 %save_always to i8
  store i8 %frombool, i8* %save_always.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %save_always.addr, metadata !2819, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata i8* %save_working_directory, metadata !2821, metadata !DIExpression()), !dbg !2822
  %0 = load i8, i8* %save_always.addr, align 1, !dbg !2823
  %tobool = trunc i8 %0 to i1, !dbg !2823
  br i1 %tobool, label %lor.end7, label %lor.rhs, !dbg !2824

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !2825
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !2825, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2825
  %conv = sext i8 %2 to i32, !dbg !2825
  %cmp = icmp eq i32 %conv, 47, !dbg !2825
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2826

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i8*, i8** %to.addr, align 8, !dbg !2827
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2827, !ctir !7
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !2827
  %conv3 = sext i8 %4 to i32, !dbg !2827
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !2827
  br i1 %cmp4, label %lor.end, label %lor.rhs6, !dbg !2827

lor.rhs6:                                         ; preds = %land.rhs
  br label %lor.end, !dbg !2827

lor.end:                                          ; preds = %lor.rhs6, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ false, %lor.rhs6 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %5, %lor.end ], !dbg !2828
  %lnot = xor i1 %6, true, !dbg !2829
  br label %lor.end7, !dbg !2824

lor.end7:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %lnot, %land.end ]
  %frombool8 = zext i1 %7 to i8, !dbg !2822
  store i8 %frombool8, i8* %save_working_directory, align 1, !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2830, metadata !DIExpression()), !dbg !2831
  store i32 0, i32* %status, align 4, !dbg !2831
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @savewd_init(%struct.savewd* %wd), !dbg !2834
  %8 = load i8, i8* %save_working_directory, align 1, !dbg !2835
  %tobool9 = trunc i8 %8 to i1, !dbg !2835
  br i1 %tobool9, label %if.end, label %if.then, !dbg !2837

if.then:                                          ; preds = %lor.end7
  call void @savewd_finish(%struct.savewd* %wd), !dbg !2838
  br label %if.end, !dbg !2838

if.end:                                           ; preds = %if.then, %lor.end7
  %9 = load i8*, i8** %to.addr, align 8, !dbg !2839
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2841
  %11 = bitcast %struct.cp_options* %10 to i8*, !dbg !2841
  %call = call i64 @mkancesdirs(i8* %9, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %11), !dbg !2842
  %cmp10 = icmp eq i64 %call, -1, !dbg !2843
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !2844

if.then12:                                        ; preds = %if.end
  %call13 = call i32* @__errno_location() #16, !dbg !2845
  %12 = load i32, i32* %call13, align 4, !dbg !2845, !ctir !5
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !2847
  %13 = load i8*, i8** %to.addr, align 8, !dbg !2848
  %call15 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !2848
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call14, i8* %call15), !dbg !2849
  store i32 1, i32* %status, align 4, !dbg !2850
  br label %if.end16, !dbg !2851

if.end16:                                         ; preds = %if.then12, %if.end
  %14 = load i8, i8* %save_working_directory, align 1, !dbg !2852
  %tobool17 = trunc i8 %14 to i1, !dbg !2852
  br i1 %tobool17, label %if.then18, label %if.end33, !dbg !2854

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %restore_result, metadata !2855, metadata !DIExpression()), !dbg !2857
  %15 = load i32, i32* %status, align 4, !dbg !2858
  %call19 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %15), !dbg !2859
  store i32 %call19, i32* %restore_result, align 4, !dbg !2857
  call void @llvm.dbg.declare(metadata i32* %restore_errno, metadata !2860, metadata !DIExpression()), !dbg !2861
  %call20 = call i32* @__errno_location() #16, !dbg !2862
  %16 = load i32, i32* %call20, align 4, !dbg !2862, !ctir !5
  store i32 %16, i32* %restore_errno, align 4, !dbg !2861
  call void @savewd_finish(%struct.savewd* %wd), !dbg !2863
  %17 = load i32, i32* %restore_result, align 4, !dbg !2864
  %cmp21 = icmp slt i32 0, %17, !dbg !2866
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2867

if.then23:                                        ; preds = %if.then18
  store i1 false, i1* %retval, align 1, !dbg !2868
  br label %return, !dbg !2868

if.end24:                                         ; preds = %if.then18
  %18 = load i32, i32* %restore_result, align 4, !dbg !2869
  %cmp25 = icmp slt i32 %18, 0, !dbg !2871
  br i1 %cmp25, label %land.lhs.true, label %if.end32, !dbg !2872

land.lhs.true:                                    ; preds = %if.end24
  %19 = load i32, i32* %status, align 4, !dbg !2873
  %cmp27 = icmp eq i32 %19, 0, !dbg !2874
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !2875

if.then29:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %restore_errno, align 4, !dbg !2876
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !2878
  %21 = load i8*, i8** %to.addr, align 8, !dbg !2879
  %call31 = call i8* @quotearg_style(i32 4, i8* %21), !dbg !2879
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* %call30, i8* %call31), !dbg !2880
  store i1 false, i1* %retval, align 1, !dbg !2881
  br label %return, !dbg !2881

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  br label %if.end33, !dbg !2882

if.end33:                                         ; preds = %if.end32, %if.end16
  %22 = load i32, i32* %status, align 4, !dbg !2883
  %cmp34 = icmp eq i32 %22, 0, !dbg !2884
  store i1 %cmp34, i1* %retval, align 1, !dbg !2885
  br label %return, !dbg !2885

return:                                           ; preds = %if.end33, %if.then29, %if.then23
  %23 = load i1, i1* %retval, align 1, !dbg !2886
  ret i1 %23, !dbg !2886
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ancestor(i8* %dir, i8* %component, i8* %options) #4 !dbg !2887 {
entry:
  %dir.addr = alloca i8*, align 8
  %component.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !339
  %r = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2890, metadata !DIExpression()), !dbg !2891
  store i8* %component, i8** %component.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %component.addr, metadata !2892, metadata !DIExpression()), !dbg !2893
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2894, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2896, metadata !DIExpression()), !dbg !2897
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2898
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2898
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2897
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2899
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 18, !dbg !2901, !ctir !340
  %3 = load i8, i8* %set_security_context, align 1, !dbg !2901
  %tobool = trunc i8 %3 to i1, !dbg !2901, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2902

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %component.addr, align 8, !dbg !2903
  %call = call i32 @defaultcon(i8* %4, i32 16384), !dbg !2904
  %cmp = icmp slt i32 %call, 0, !dbg !2905
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !2906

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !2907
  %5 = load i32, i32* %call2, align 4, !dbg !2907, !ctir !5
  %call3 = call zeroext i1 @ignorable_ctx_err(i32 %5), !dbg !2908
  br i1 %call3, label %if.end, label %if.then, !dbg !2909

if.then:                                          ; preds = %land.lhs.true1
  %call4 = call i32* @__errno_location() #16, !dbg !2910
  %6 = load i32, i32* %call4, align 4, !dbg !2910, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #9, !dbg !2911
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !2912
  %call6 = call i8* @quotearg_style(i32 4, i8* %7), !dbg !2912
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call5, i8* %call6), !dbg !2913
  br label %if.end, !dbg !2913

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2914, metadata !DIExpression()), !dbg !2915
  %8 = load i8*, i8** %component.addr, align 8, !dbg !2916
  %call7 = call i32 @mkdir(i8* %8, i32 493) #9, !dbg !2917
  store i32 %call7, i32* %r, align 4, !dbg !2915
  %9 = load i32, i32* %r, align 4, !dbg !2918
  %cmp8 = icmp eq i32 %9, 0, !dbg !2920
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2921

if.then9:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir.addr, align 8, !dbg !2922
  %11 = load i8*, i8** %options.addr, align 8, !dbg !2923
  call void @announce_mkdir(i8* %10, i8* %11), !dbg !2924
  br label %if.end10, !dbg !2924

if.end10:                                         ; preds = %if.then9, %if.end
  %12 = load i32, i32* %r, align 4, !dbg !2925
  ret i32 %12, !dbg !2926
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !2927 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  %call = call i32* @__errno_location() #16, !dbg !2935
  store i32 95, i32* %call, align 4, !dbg !2936, !ctir !5
  ret i32 -1, !dbg !2937
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !2938 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !2941, metadata !DIExpression()), !dbg !2942
  %0 = load i32, i32* %err.addr, align 4, !dbg !2943
  %cmp = icmp eq i32 %0, 95, !dbg !2944
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2945

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !2946
  %cmp1 = icmp eq i32 %1, 61, !dbg !2947
  br label %lor.end, !dbg !2945

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !2948
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @announce_mkdir(i8* %dir, i8* %options) #4 !dbg !2949 {
entry:
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !339
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2954, metadata !DIExpression()), !dbg !2955
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2956, metadata !DIExpression()), !dbg !2957
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2958
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2958
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2957
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2959
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 31, !dbg !2961, !ctir !340
  %3 = load i8, i8* %verbose, align 2, !dbg !2961
  %tobool = trunc i8 %3 to i1, !dbg !2961, !ctir !139
  br i1 %tobool, label %if.then, label %if.end, !dbg !2962

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2963
  %call = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #9, !dbg !2964
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !2965
  %call1 = call i8* @quotearg_style(i32 4, i8* %5), !dbg !2965
  call void (%struct._IO_FILE*, i8*, ...) @prog_fprintf(%struct._IO_FILE* %4, i8* %call, i8* %call1), !dbg !2966
  br label %if.end, !dbg !2966

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2967
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2968 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !139
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2969, metadata !DIExpression()), !dbg !2970
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2971, metadata !DIExpression()), !dbg !2972
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2973, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !2975, metadata !DIExpression()), !dbg !2976
  %0 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2977
  %tobool = trunc i8 %0 to i1, !dbg !2977
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2979

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !2980
  %2 = load i8*, i8** %to.addr, align 8, !dbg !2981
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2982
  %call = call zeroext i1 @need_copy(i8* %1, i8* %2, %struct.cp_options* %3), !dbg !2983
  br i1 %call, label %if.end, label %if.then, !dbg !2984

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !2985
  br label %return, !dbg !2985

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2986
  %5 = load i8*, i8** %to.addr, align 8, !dbg !2987
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2988
  %call1 = call zeroext i1 @copy(i8* %4, i8* %5, i1 zeroext false, %struct.cp_options* %6, i8* %copy_into_self, i8* null), !dbg !2989
  store i1 %call1, i1* %retval, align 1, !dbg !2990
  br label %return, !dbg !2990

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !2991
  ret i1 %7, !dbg !2991
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip(i8* %name) #4 !dbg !358 {
entry:
  %name.addr = alloca i8*, align 8
  %status = alloca i32, align 4, !ctir !5
  %ok = alloca i8, align 1, !ctir !139
  %pid = alloca i32, align 4, !ctir !108
  %.compoundliteral = alloca %union.anon, align 4
  %.compoundliteral12 = alloca %union.anon, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2992, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2994, metadata !DIExpression()), !dbg !2995
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2996, metadata !DIExpression()), !dbg !2997
  store i8 0, i8* %ok, align 1, !dbg !2997
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !2998, metadata !DIExpression()), !dbg !2999
  %call = call i32 @fork() #9, !dbg !3000
  store i32 %call, i32* %pid, align 4, !dbg !2999
  %0 = load i32, i32* %pid, align 4, !dbg !3001
  switch i32 %0, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ], !dbg !3002

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !3003
  %1 = load i32, i32* %call1, align 4, !dbg !3003, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !3005
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1, i8* %call2), !dbg !3006
  br label %sw.epilog, !dbg !3007

sw.bb3:                                           ; preds = %entry
  %2 = load i8*, i8** @strip_program, align 8, !dbg !3008
  %3 = load i8*, i8** @strip_program, align 8, !dbg !3009
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3010
  %call4 = call i32 (i8*, i8*, ...) @execlp(i8* %2, i8* %3, i8* %4, i8* null) #9, !dbg !3011
  %call5 = call i32* @__errno_location() #16, !dbg !3012
  %5 = load i32, i32* %call5, align 4, !dbg !3012, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !3012
  %6 = load i8*, i8** @strip_program, align 8, !dbg !3012
  %call7 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3012
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %call6, i8* %call7), !dbg !3012
  unreachable, !dbg !3012

sw.default:                                       ; preds = %entry
  %7 = load i32, i32* %pid, align 4, !dbg !3013
  %call8 = call i32 @waitpid(i32 %7, i32* %status, i32 0), !dbg !3015
  %cmp = icmp slt i32 %call8, 0, !dbg !3016
  br i1 %cmp, label %if.then, label %if.else, !dbg !3017

if.then:                                          ; preds = %sw.default
  %call9 = call i32* @__errno_location() #16, !dbg !3018
  %8 = load i32, i32* %call9, align 4, !dbg !3018, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !3019
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call10), !dbg !3020
  br label %if.end19, !dbg !3020

if.else:                                          ; preds = %sw.default
  %__in = bitcast %union.anon* %.compoundliteral to i32*, !dbg !3021
  %9 = load i32, i32* %status, align 4, !dbg !3021
  store i32 %9, i32* %__in, align 4, !dbg !3021
  %__i = bitcast %union.anon* %.compoundliteral to i32*, !dbg !3021
  %10 = load i32, i32* %__i, align 4, !dbg !3021, !ctir !357
  %and = and i32 %10, 127, !dbg !3021
  %cmp11 = icmp eq i32 %and, 0, !dbg !3021
  br i1 %cmp11, label %lor.lhs.false, label %if.then16, !dbg !3023

lor.lhs.false:                                    ; preds = %if.else
  %__in13 = bitcast %union.anon* %.compoundliteral12 to i32*, !dbg !3024
  %11 = load i32, i32* %status, align 4, !dbg !3024
  store i32 %11, i32* %__in13, align 4, !dbg !3024
  %__i14 = bitcast %union.anon* %.compoundliteral12 to i32*, !dbg !3024
  %12 = load i32, i32* %__i14, align 4, !dbg !3024, !ctir !364
  %and15 = and i32 %12, 65280, !dbg !3024
  %shr = ashr i32 %and15, 8, !dbg !3024
  %tobool = icmp ne i32 %shr, 0, !dbg !3024
  br i1 %tobool, label %if.then16, label %if.else18, !dbg !3025

if.then16:                                        ; preds = %lor.lhs.false, %if.else
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !3026
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17), !dbg !3027
  br label %if.end, !dbg !3027

if.else18:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %ok, align 1, !dbg !3028
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then16
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !3029

sw.epilog:                                        ; preds = %if.end19, %sw.bb
  %13 = load i8, i8* %ok, align 1, !dbg !3030
  %tobool20 = trunc i8 %13 to i1, !dbg !3030
  ret i1 %tobool20, !dbg !3031
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_timestamps(%struct.stat* %src_sb, i8* %dest) #4 !dbg !3032 {
entry:
  %retval = alloca i1, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %dest.addr = alloca i8*, align 8
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !371
  %tmp = alloca %struct.timespec, align 8
  %tmp2 = alloca %struct.timespec, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !3037, metadata !DIExpression()), !dbg !3038
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3039, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !3041, metadata !DIExpression()), !dbg !3042
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3043, !ctir !371
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3044
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %0) #14, !dbg !3045
  %1 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !3045
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3045
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !3045
  store i64 %3, i64* %2, align 8, !dbg !3045
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3045
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !3045
  store i64 %5, i64* %4, align 8, !dbg !3045
  %6 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !3045
  %7 = bitcast %struct.timespec* %tmp to i8*, !dbg !3045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3045
  %arrayidx1 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !3046, !ctir !371
  %8 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3047
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %8) #14, !dbg !3048
  %9 = bitcast %struct.timespec* %tmp2 to { i64, i64 }*, !dbg !3048
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3048
  %11 = extractvalue { i64, i64 } %call3, 0, !dbg !3048
  store i64 %11, i64* %10, align 8, !dbg !3048
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3048
  %13 = extractvalue { i64, i64 } %call3, 1, !dbg !3048
  store i64 %13, i64* %12, align 8, !dbg !3048
  %14 = bitcast %struct.timespec* %arrayidx1 to i8*, !dbg !3048
  %15 = bitcast %struct.timespec* %tmp2 to i8*, !dbg !3048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 8 %15, i64 16, i1 false), !dbg !3048
  %16 = load i8*, i8** %dest.addr, align 8, !dbg !3049
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3051, !ctir !371
  %call4 = call i32 @utimens(i8* %16, %struct.timespec* %arraydecay), !dbg !3052
  %tobool = icmp ne i32 %call4, 0, !dbg !3052
  br i1 %tobool, label %if.then, label %if.end, !dbg !3053

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #16, !dbg !3054
  %17 = load i32, i32* %call5, align 4, !dbg !3054, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !3056
  %18 = load i8*, i8** %dest.addr, align 8, !dbg !3057
  %call7 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !3057
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* %call6, i8* %call7), !dbg !3058
  store i1 false, i1* %retval, align 1, !dbg !3059
  br label %return, !dbg !3059

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3060
  br label %return, !dbg !3060

return:                                           ; preds = %if.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3061
  ret i1 %19, !dbg !3061
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_attributes(i8* %name) #4 !dbg !3062 {
entry:
  %name.addr = alloca i8*, align 8
  %ok = alloca i8, align 1, !ctir !139
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3063, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3065, metadata !DIExpression()), !dbg !3066
  store i8 0, i8* %ok, align 1, !dbg !3066
  %0 = load i32, i32* @owner_id, align 4, !dbg !3067
  %cmp = icmp eq i32 %0, -1, !dbg !3069
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true2, !dbg !3070

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @group_id, align 4, !dbg !3071
  %cmp1 = icmp eq i32 %1, -1, !dbg !3072
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !3073

land.lhs.true2:                                   ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3074
  %3 = load i32, i32* @owner_id, align 4, !dbg !3075
  %4 = load i32, i32* @group_id, align 4, !dbg !3076
  %call = call i32 @lchown(i8* %2, i32 %3, i32 %4) #9, !dbg !3077
  %cmp3 = icmp ne i32 %call, 0, !dbg !3078
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3079

if.then:                                          ; preds = %land.lhs.true2
  %call4 = call i32* @__errno_location() #16, !dbg !3080
  %5 = load i32, i32* %call4, align 4, !dbg !3080, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !3081
  %6 = load i8*, i8** %name.addr, align 8, !dbg !3082
  %call6 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3082
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call5, i8* %call6), !dbg !3083
  br label %if.end14, !dbg !3083

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3084
  %8 = load i32, i32* @mode, align 4, !dbg !3086
  %call7 = call i32 @chmod(i8* %7, i32 %8) #9, !dbg !3087
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3088
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !3089

if.then9:                                         ; preds = %if.else
  %call10 = call i32* @__errno_location() #16, !dbg !3090
  %9 = load i32, i32* %call10, align 4, !dbg !3090, !ctir !5
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !3091
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3092
  %call12 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3092
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call11, i8* %call12), !dbg !3093
  br label %if.end, !dbg !3093

if.else13:                                        ; preds = %if.else
  store i8 1, i8* %ok, align 1, !dbg !3094
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %11 = load i8, i8* @use_default_selinux_context, align 1, !dbg !3095
  %tobool = trunc i8 %11 to i1, !dbg !3095
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !3097

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %name.addr, align 8, !dbg !3098
  call void @setdefaultfilecon(i8* %12), !dbg !3099
  br label %if.end16, !dbg !3099

if.end16:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %ok, align 1, !dbg !3100
  %tobool17 = trunc i8 %13 to i1, !dbg !3100
  ret i1 %tobool17, !dbg !3101
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setdefaultfilecon(i8* %file) #4 !dbg !430 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !1981
  %scontext = alloca i8*, align 8, !ctir !7
  %p0 = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %prefix = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3102, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3104, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !3106, metadata !DIExpression()), !dbg !3107
  store i8* null, i8** %scontext, align 8, !dbg !3107
  %0 = load i32, i32* @selinux_enabled, align 4, !dbg !3108
  %cmp = icmp ne i32 %0, 1, !dbg !3110
  br i1 %cmp, label %if.then, label %if.end, !dbg !3111

if.then:                                          ; preds = %entry
  br label %return, !dbg !3112

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3114
  %call = call i32 @lstat(i8* %1, %struct.stat* %st) #9, !dbg !3116
  %cmp1 = icmp ne i32 %call, 0, !dbg !3117
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3118

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3119

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @setdefaultfilecon.first_call, align 1, !dbg !3120
  %tobool = trunc i8 %2 to i1, !dbg !3120
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !3122

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3123
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3123, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3123
  %conv = sext i8 %4 to i32, !dbg !3123
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3123
  br i1 %cmp4, label %if.then6, label %if.end29, !dbg !3124

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3125, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3128, metadata !DIExpression()), !dbg !3129
  %5 = load i8*, i8** %file.addr, align 8, !dbg !3130
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3131, !ctir !181
  store i8* %add.ptr, i8** %p, align 8, !dbg !3129
  br label %while.cond, !dbg !3132

while.cond:                                       ; preds = %while.body, %if.then6
  %6 = load i8*, i8** %p, align 8, !dbg !3133
  %7 = load i8, i8* %6, align 1, !dbg !3133, !ctir !181
  %conv7 = sext i8 %7 to i32, !dbg !3133
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3133
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3132

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !3134
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3134, !ctir !181
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3134
  br label %while.cond, !dbg !3132, !llvm.loop !3135

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3137
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !3138, !ctir !181
  store i8* %add.ptr10, i8** %p0, align 8, !dbg !3139
  %10 = load i8*, i8** %p, align 8, !dbg !3140
  %11 = load i8, i8* %10, align 1, !dbg !3142, !ctir !181
  %tobool11 = icmp ne i8 %11, 0, !dbg !3142
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !3143

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !3144, metadata !DIExpression()), !dbg !3146
  br label %do.body, !dbg !3147

do.body:                                          ; preds = %land.end, %if.then12
  %12 = load i8*, i8** %p, align 8, !dbg !3148
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3148, !ctir !181
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !3148
  br label %do.cond, !dbg !3150

do.cond:                                          ; preds = %do.body
  %13 = load i8*, i8** %p, align 8, !dbg !3151
  %14 = load i8, i8* %13, align 1, !dbg !3152, !ctir !181
  %conv14 = sext i8 %14 to i32, !dbg !3152
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3152
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !3153

land.rhs:                                         ; preds = %do.cond
  %15 = load i8*, i8** %p, align 8, !dbg !3154
  %16 = load i8, i8* %15, align 1, !dbg !3154, !ctir !181
  %conv16 = sext i8 %16 to i32, !dbg !3154
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !3154
  %lnot = xor i1 %cmp17, true, !dbg !3155
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3156
  br i1 %17, label %do.body, label %do.end, !dbg !3150, !llvm.loop !3157

do.end:                                           ; preds = %land.end
  %18 = load i8*, i8** %p, align 8, !dbg !3159
  %19 = load i8*, i8** %p0, align 8, !dbg !3160
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3161
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3161
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3161
  %add = add nsw i64 %sub.ptr.sub, 2, !dbg !3162
  %call19 = call noalias i8* @malloc(i64 %add) #9, !dbg !3163
  store i8* %call19, i8** %prefix, align 8, !dbg !3164
  %20 = load i8*, i8** %prefix, align 8, !dbg !3165
  %tobool20 = icmp ne i8* %20, null, !dbg !3165
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !3167

if.then21:                                        ; preds = %do.end
  %21 = load i8*, i8** %prefix, align 8, !dbg !3168
  %22 = load i8*, i8** %p0, align 8, !dbg !3170
  %23 = load i8*, i8** %p, align 8, !dbg !3171
  %24 = load i8*, i8** %p0, align 8, !dbg !3172
  %sub.ptr.lhs.cast22 = ptrtoint i8* %23 to i64, !dbg !3173
  %sub.ptr.rhs.cast23 = ptrtoint i8* %24 to i64, !dbg !3173
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3173
  %call25 = call i8* @stpncpy(i8* %21, i8* %22, i64 %sub.ptr.sub24) #9, !dbg !3174
  %call26 = call i8* @stpcpy(i8* %call25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !3175
  %25 = load i8*, i8** %prefix, align 8, !dbg !3176
  call void @free(i8* %25) #9, !dbg !3177
  br label %if.end27, !dbg !3178

if.end27:                                         ; preds = %if.then21, %do.end
  br label %if.end28, !dbg !3179

if.end28:                                         ; preds = %if.end27, %while.end
  br label %if.end29, !dbg !3180

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end3
  store i8 0, i8* @setdefaultfilecon.first_call, align 1, !dbg !3181
  %26 = load i8*, i8** %file.addr, align 8, !dbg !3182
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3184, !ctir !1981
  %27 = load i32, i32* %st_mode, align 8, !dbg !3184, !ctir !137
  %call30 = call i32 @matchpathcon(i8* %26, i32 %27, i8** %scontext), !dbg !3185
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3186
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !3187

lor.lhs.false:                                    ; preds = %if.end29
  %28 = load i8*, i8** %scontext, align 8, !dbg !3188
  %call33 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #14, !dbg !3188
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3188
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !3189

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  %29 = load i8*, i8** %scontext, align 8, !dbg !3190
  %cmp37 = icmp ne i8* %29, null, !dbg !3193
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3194

if.then39:                                        ; preds = %if.then36
  %30 = load i8*, i8** %scontext, align 8, !dbg !3195
  call void @freecon(i8* %30), !dbg !3196
  br label %if.end40, !dbg !3196

if.end40:                                         ; preds = %if.then39, %if.then36
  br label %return, !dbg !3197

if.end41:                                         ; preds = %lor.lhs.false
  %31 = load i8*, i8** %file.addr, align 8, !dbg !3198
  %32 = load i8*, i8** %scontext, align 8, !dbg !3200
  %call42 = call i32 @lsetfilecon(i8* %31, i8* %32), !dbg !3201
  %cmp43 = icmp slt i32 %call42, 0, !dbg !3202
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !3203

land.lhs.true45:                                  ; preds = %if.end41
  %call46 = call i32* @__errno_location() #16, !dbg !3204
  %33 = load i32, i32* %call46, align 4, !dbg !3204, !ctir !5
  %cmp47 = icmp ne i32 %33, 95, !dbg !3205
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3206

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = call i32* @__errno_location() #16, !dbg !3207
  %34 = load i32, i32* %call50, align 4, !dbg !3207, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.87, i64 0, i64 0)) #9, !dbg !3208
  %35 = load i8*, i8** %file.addr, align 8, !dbg !3209
  %call52 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %35), !dbg !3209
  %36 = load i8*, i8** %scontext, align 8, !dbg !3210
  %call53 = call i8* @quote_n(i32 1, i8* %36), !dbg !3211
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* %call51, i8* %call52, i8* %call53), !dbg !3212
  br label %if.end54, !dbg !3212

if.end54:                                         ; preds = %if.then49, %land.lhs.true45, %if.end41
  %37 = load i8*, i8** %scontext, align 8, !dbg !3213
  call void @freecon(i8* %37), !dbg !3214
  br label %return, !dbg !3215

return:                                           ; preds = %if.end54, %if.end40, %if.then2, %if.then
  ret void, !dbg !3216
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @need_copy(i8* %src_name, i8* %dest_name, %struct.cp_options* %x) #4 !dbg !3217 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dest_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !1981
  %dest_sb = alloca %struct.stat, align 8, !ctir !1981
  %src_fd = alloca i32, align 4, !ctir !5
  %dest_fd = alloca i32, align 4, !ctir !5
  %content_match = alloca i8, align 1, !ctir !139
  %ruid = alloca i32, align 4, !ctir !124
  %rgid = alloca i32, align 4, !ctir !126
  %file_scontext = alloca i8*, align 8, !ctir !7
  %to_scontext = alloca i8*, align 8, !ctir !7
  %scontext_match = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store i8* %dest_name, i8** %dest_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest_name.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_sb, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata i32* %src_fd, metadata !3228, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.declare(metadata i32* %dest_fd, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata i8* %content_match, metadata !3232, metadata !DIExpression()), !dbg !3233
  %0 = load i32, i32* @mode, align 4, !dbg !3234
  %call = call zeroext i1 @extra_mode(i32 %0), !dbg !3236
  br i1 %call, label %if.then, label %if.end, !dbg !3237

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3238
  br label %return, !dbg !3238

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !3239
  %call1 = call i32 @lstat(i8* %1, %struct.stat* %src_sb) #9, !dbg !3241
  %cmp = icmp ne i32 %call1, 0, !dbg !3242
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3243

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3244
  br label %return, !dbg !3244

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dest_name.addr, align 8, !dbg !3245
  %call4 = call i32 @lstat(i8* %2, %struct.stat* %dest_sb) #9, !dbg !3247
  %cmp5 = icmp ne i32 %call4, 0, !dbg !3248
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3249

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !3250
  br label %return, !dbg !3250

if.end7:                                          ; preds = %if.end3
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3251, !ctir !1981
  %3 = load i32, i32* %st_mode, align 8, !dbg !3251, !ctir !137
  %and = and i32 %3, 61440, !dbg !3251
  %cmp8 = icmp eq i32 %and, 32768, !dbg !3251
  br i1 %cmp8, label %lor.lhs.false, label %if.then18, !dbg !3253

lor.lhs.false:                                    ; preds = %if.end7
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3254, !ctir !1981
  %4 = load i32, i32* %st_mode9, align 8, !dbg !3254, !ctir !137
  %and10 = and i32 %4, 61440, !dbg !3254
  %cmp11 = icmp eq i32 %and10, 32768, !dbg !3254
  br i1 %cmp11, label %lor.lhs.false12, label %if.then18, !dbg !3255

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %st_mode13 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3256, !ctir !1981
  %5 = load i32, i32* %st_mode13, align 8, !dbg !3256, !ctir !137
  %call14 = call zeroext i1 @extra_mode(i32 %5), !dbg !3257
  br i1 %call14, label %if.then18, label %lor.lhs.false15, !dbg !3258

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3259, !ctir !1981
  %6 = load i32, i32* %st_mode16, align 8, !dbg !3259, !ctir !137
  %call17 = call zeroext i1 @extra_mode(i32 %6), !dbg !3260
  br i1 %call17, label %if.then18, label %if.end19, !dbg !3261

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end7
  store i1 true, i1* %retval, align 1, !dbg !3262
  br label %return, !dbg !3262

if.end19:                                         ; preds = %lor.lhs.false15
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !3263, !ctir !1981
  %7 = load i64, i64* %st_size, align 8, !dbg !3263, !ctir !30
  %st_size20 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 8, !dbg !3265, !ctir !1981
  %8 = load i64, i64* %st_size20, align 8, !dbg !3265, !ctir !30
  %cmp21 = icmp ne i64 %7, %8, !dbg !3266
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !3267

lor.lhs.false22:                                  ; preds = %if.end19
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3268, !ctir !1981
  %9 = load i32, i32* %st_mode23, align 8, !dbg !3268, !ctir !137
  %and24 = and i32 %9, 4095, !dbg !3269
  %10 = load i32, i32* @mode, align 4, !dbg !3270
  %cmp25 = icmp ne i32 %and24, %10, !dbg !3271
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !3272

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  store i1 true, i1* %retval, align 1, !dbg !3273
  br label %return, !dbg !3273

if.end27:                                         ; preds = %lor.lhs.false22
  %11 = load i32, i32* @owner_id, align 4, !dbg !3274
  %cmp28 = icmp eq i32 %11, -1, !dbg !3276
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !3277

if.then29:                                        ; preds = %if.end27
  %call30 = call i32* @__errno_location() #16, !dbg !3278
  store i32 0, i32* %call30, align 4, !dbg !3280, !ctir !5
  call void @llvm.dbg.declare(metadata i32* %ruid, metadata !3281, metadata !DIExpression()), !dbg !3282
  %call31 = call i32 @getuid() #9, !dbg !3283
  store i32 %call31, i32* %ruid, align 4, !dbg !3282
  %12 = load i32, i32* %ruid, align 4, !dbg !3284
  %cmp32 = icmp eq i32 %12, -1, !dbg !3286
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !3287

land.lhs.true:                                    ; preds = %if.then29
  %call33 = call i32* @__errno_location() #16, !dbg !3288
  %13 = load i32, i32* %call33, align 4, !dbg !3288, !ctir !5
  %tobool = icmp ne i32 %13, 0, !dbg !3288
  br i1 %tobool, label %if.then36, label %lor.lhs.false34, !dbg !3289

lor.lhs.false34:                                  ; preds = %land.lhs.true, %if.then29
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !3290, !ctir !1981
  %14 = load i32, i32* %st_uid, align 4, !dbg !3290, !ctir !125
  %15 = load i32, i32* %ruid, align 4, !dbg !3291
  %cmp35 = icmp ne i32 %14, %15, !dbg !3292
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !3293

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !3294
  br label %return, !dbg !3294

if.end37:                                         ; preds = %lor.lhs.false34
  br label %if.end42, !dbg !3295

if.else:                                          ; preds = %if.end27
  %st_uid38 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !3296, !ctir !1981
  %16 = load i32, i32* %st_uid38, align 4, !dbg !3296, !ctir !125
  %17 = load i32, i32* @owner_id, align 4, !dbg !3298
  %cmp39 = icmp ne i32 %16, %17, !dbg !3299
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !3300

if.then40:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !3301
  br label %return, !dbg !3301

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end37
  %18 = load i32, i32* @group_id, align 4, !dbg !3302
  %cmp43 = icmp eq i32 %18, -1, !dbg !3304
  br i1 %cmp43, label %if.then44, label %if.else55, !dbg !3305

if.then44:                                        ; preds = %if.end42
  %call45 = call i32* @__errno_location() #16, !dbg !3306
  store i32 0, i32* %call45, align 4, !dbg !3308, !ctir !5
  call void @llvm.dbg.declare(metadata i32* %rgid, metadata !3309, metadata !DIExpression()), !dbg !3310
  %call46 = call i32 @getgid() #9, !dbg !3311
  store i32 %call46, i32* %rgid, align 4, !dbg !3310
  %19 = load i32, i32* %rgid, align 4, !dbg !3312
  %cmp47 = icmp eq i32 %19, -1, !dbg !3314
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !3315

land.lhs.true48:                                  ; preds = %if.then44
  %call49 = call i32* @__errno_location() #16, !dbg !3316
  %20 = load i32, i32* %call49, align 4, !dbg !3316, !ctir !5
  %tobool50 = icmp ne i32 %20, 0, !dbg !3316
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !3317

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %if.then44
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !3318, !ctir !1981
  %21 = load i32, i32* %st_gid, align 8, !dbg !3318, !ctir !127
  %22 = load i32, i32* %rgid, align 4, !dbg !3319
  %cmp52 = icmp ne i32 %21, %22, !dbg !3320
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !3321

if.then53:                                        ; preds = %lor.lhs.false51, %land.lhs.true48
  store i1 true, i1* %retval, align 1, !dbg !3322
  br label %return, !dbg !3322

if.end54:                                         ; preds = %lor.lhs.false51
  br label %if.end60, !dbg !3323

if.else55:                                        ; preds = %if.end42
  %st_gid56 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !3324, !ctir !1981
  %23 = load i32, i32* %st_gid56, align 8, !dbg !3324, !ctir !127
  %24 = load i32, i32* @group_id, align 4, !dbg !3326
  %cmp57 = icmp ne i32 %23, %24, !dbg !3327
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !3328

if.then58:                                        ; preds = %if.else55
  store i1 true, i1* %retval, align 1, !dbg !3329
  br label %return, !dbg !3329

if.end59:                                         ; preds = %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end54
  %25 = load i32, i32* @selinux_enabled, align 4, !dbg !3330
  %tobool61 = icmp ne i32 %25, 0, !dbg !3330
  br i1 %tobool61, label %land.lhs.true62, label %if.end78, !dbg !3332

land.lhs.true62:                                  ; preds = %if.end60
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3333
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 22, !dbg !3334, !ctir !340
  %27 = load i8, i8* %preserve_security_context, align 1, !dbg !3334
  %tobool63 = trunc i8 %27 to i1, !dbg !3334, !ctir !139
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !3335

if.then64:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata i8** %file_scontext, metadata !3336, metadata !DIExpression()), !dbg !3338
  store i8* null, i8** %file_scontext, align 8, !dbg !3338
  call void @llvm.dbg.declare(metadata i8** %to_scontext, metadata !3339, metadata !DIExpression()), !dbg !3340
  store i8* null, i8** %to_scontext, align 8, !dbg !3340
  call void @llvm.dbg.declare(metadata i8* %scontext_match, metadata !3341, metadata !DIExpression()), !dbg !3342
  %28 = load i8*, i8** %src_name.addr, align 8, !dbg !3343
  %call65 = call i32 @getfilecon(i8* %28, i8** %file_scontext), !dbg !3345
  %cmp66 = icmp eq i32 %call65, -1, !dbg !3346
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !3347

if.then67:                                        ; preds = %if.then64
  store i1 true, i1* %retval, align 1, !dbg !3348
  br label %return, !dbg !3348

if.end68:                                         ; preds = %if.then64
  %29 = load i8*, i8** %dest_name.addr, align 8, !dbg !3349
  %call69 = call i32 @getfilecon(i8* %29, i8** %to_scontext), !dbg !3351
  %cmp70 = icmp eq i32 %call69, -1, !dbg !3352
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !3353

if.then71:                                        ; preds = %if.end68
  %30 = load i8*, i8** %file_scontext, align 8, !dbg !3354
  call void @freecon(i8* %30), !dbg !3356
  store i1 true, i1* %retval, align 1, !dbg !3357
  br label %return, !dbg !3357

if.end72:                                         ; preds = %if.end68
  %31 = load i8*, i8** %file_scontext, align 8, !dbg !3358
  %32 = load i8*, i8** %to_scontext, align 8, !dbg !3358
  %call73 = call i32 @strcmp(i8* %31, i8* %32) #14, !dbg !3358
  %cmp74 = icmp eq i32 %call73, 0, !dbg !3358
  %frombool = zext i1 %cmp74 to i8, !dbg !3359
  store i8 %frombool, i8* %scontext_match, align 1, !dbg !3359
  %33 = load i8*, i8** %file_scontext, align 8, !dbg !3360
  call void @freecon(i8* %33), !dbg !3361
  %34 = load i8*, i8** %to_scontext, align 8, !dbg !3362
  call void @freecon(i8* %34), !dbg !3363
  %35 = load i8, i8* %scontext_match, align 1, !dbg !3364
  %tobool75 = trunc i8 %35 to i1, !dbg !3364
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !3366

if.then76:                                        ; preds = %if.end72
  store i1 true, i1* %retval, align 1, !dbg !3367
  br label %return, !dbg !3367

if.end77:                                         ; preds = %if.end72
  br label %if.end78, !dbg !3368

if.end78:                                         ; preds = %if.end77, %land.lhs.true62, %if.end60
  %36 = load i8*, i8** %src_name.addr, align 8, !dbg !3369
  %call79 = call i32 (i8*, i32, ...) @open(i8* %36, i32 0), !dbg !3370
  store i32 %call79, i32* %src_fd, align 4, !dbg !3371
  %37 = load i32, i32* %src_fd, align 4, !dbg !3372
  %cmp80 = icmp slt i32 %37, 0, !dbg !3374
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !3375

if.then81:                                        ; preds = %if.end78
  store i1 true, i1* %retval, align 1, !dbg !3376
  br label %return, !dbg !3376

if.end82:                                         ; preds = %if.end78
  %38 = load i8*, i8** %dest_name.addr, align 8, !dbg !3377
  %call83 = call i32 (i8*, i32, ...) @open(i8* %38, i32 0), !dbg !3378
  store i32 %call83, i32* %dest_fd, align 4, !dbg !3379
  %39 = load i32, i32* %dest_fd, align 4, !dbg !3380
  %cmp84 = icmp slt i32 %39, 0, !dbg !3382
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !3383

if.then85:                                        ; preds = %if.end82
  %40 = load i32, i32* %src_fd, align 4, !dbg !3384
  %call86 = call i32 @close(i32 %40), !dbg !3386
  store i1 true, i1* %retval, align 1, !dbg !3387
  br label %return, !dbg !3387

if.end87:                                         ; preds = %if.end82
  %41 = load i32, i32* %src_fd, align 4, !dbg !3388
  %42 = load i32, i32* %dest_fd, align 4, !dbg !3389
  %call88 = call zeroext i1 @have_same_content(i32 %41, i32 %42), !dbg !3390
  %frombool89 = zext i1 %call88 to i8, !dbg !3391
  store i8 %frombool89, i8* %content_match, align 1, !dbg !3391
  %43 = load i32, i32* %src_fd, align 4, !dbg !3392
  %call90 = call i32 @close(i32 %43), !dbg !3393
  %44 = load i32, i32* %dest_fd, align 4, !dbg !3394
  %call91 = call i32 @close(i32 %44), !dbg !3395
  %45 = load i8, i8* %content_match, align 1, !dbg !3396
  %tobool92 = trunc i8 %45 to i1, !dbg !3396
  %lnot = xor i1 %tobool92, true, !dbg !3397
  store i1 %lnot, i1* %retval, align 1, !dbg !3398
  br label %return, !dbg !3398

return:                                           ; preds = %if.end87, %if.then85, %if.then81, %if.then76, %if.then71, %if.then67, %if.then58, %if.then53, %if.then40, %if.then36, %if.then26, %if.then18, %if.then6, %if.then2, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !3399
  ret i1 %46, !dbg !3399
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @have_same_content(i32 %a_fd, i32 %b_fd) #4 !dbg !423 {
entry:
  %retval = alloca i1, align 1
  %a_fd.addr = alloca i32, align 4
  %b_fd.addr = alloca i32, align 4
  %size = alloca i64, align 8, !ctir !52
  store i32 %a_fd, i32* %a_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a_fd.addr, metadata !3400, metadata !DIExpression()), !dbg !3401
  store i32 %b_fd, i32* %b_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_fd.addr, metadata !3402, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.declare(metadata i64* %size, metadata !3404, metadata !DIExpression()), !dbg !3405
  br label %while.cond, !dbg !3406

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a_fd.addr, align 4, !dbg !3407
  %call = call i64 @full_read(i32 %0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i64 4096), !dbg !3408
  store i64 %call, i64* %size, align 8, !dbg !3409
  %cmp = icmp ult i64 0, %call, !dbg !3410
  br i1 %cmp, label %while.body, label %while.end, !dbg !3406

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %size, align 8, !dbg !3411
  %2 = load i32, i32* %b_fd.addr, align 4, !dbg !3414
  %call1 = call i64 @full_read(i32 %2, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 4096), !dbg !3415
  %cmp2 = icmp ne i64 %1, %call1, !dbg !3416
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3417

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !3418
  br label %return, !dbg !3418

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %size, align 8, !dbg !3419
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 %3) #14, !dbg !3421
  %cmp4 = icmp ne i32 %call3, 0, !dbg !3422
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3423

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3424
  br label %return, !dbg !3424

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !3406, !llvm.loop !3425

while.end:                                        ; preds = %while.cond
  %4 = load i64, i64* %size, align 8, !dbg !3427
  %cmp7 = icmp eq i64 %4, 0, !dbg !3428
  store i1 %cmp7, i1* %retval, align 1, !dbg !3429
  br label %return, !dbg !3429

return:                                           ; preds = %while.end, %if.then5, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !3430
  ret i1 %5, !dbg !3430
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3431 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3438, metadata !DIExpression()), !dbg !3439
  %call = call i32* @__errno_location() #16, !dbg !3440
  store i32 95, i32* %call, align 4, !dbg !3441, !ctir !5
  ret i1 false, !dbg !3442
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

declare dso_local void @endgrent() #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prog_fprintf(%struct._IO_FILE* %fp, i8* %fmt, ...) #4 !dbg !3443 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %fmt.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1189
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !3486, metadata !DIExpression()), !dbg !3487
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !3488, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !3490, metadata !DIExpression()), !dbg !3491
  %0 = load i8*, i8** @program_name, align 8, !dbg !3492
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3492
  %call = call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %1), !dbg !3492
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3493
  %call1 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i64 0, i64 0), %struct._IO_FILE* %2), !dbg !3493
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3494, !ctir !1189
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3494
  call void @llvm.va_start(i8* %arraydecay2), !dbg !3494
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3495
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !3496
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3497, !ctir !1189
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %3, i8* %4, %struct.__va_list_tag* %arraydecay3), !dbg !3498
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3499, !ctir !1189
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !3499
  call void @llvm.va_end(i8* %arraydecay56), !dbg !3499
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3500
  %call7 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %5), !dbg !3500
  ret void, !dbg !3501
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !3502 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  %con = alloca i8*, align 8, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3548, metadata !DIExpression()), !dbg !3549
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3558
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !3560, !ctir !3506
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !3560
  %tobool = trunc i8 %1 to i1, !dbg !3560, !ctir !139
  br i1 %tobool, label %if.then, label %if.else40, !dbg !3561

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3562, metadata !DIExpression()), !dbg !3564
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3565
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !3566, !ctir !3506
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !3566
  %tobool1 = trunc i8 %3 to i1, !dbg !3566, !ctir !139
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !3567

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3568
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !3569, !ctir !3506
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !3569
  %tobool2 = trunc i8 %5 to i1, !dbg !3569, !ctir !139
  br label %lor.end, !dbg !3567

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !3564
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3564
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3570, metadata !DIExpression()), !dbg !3571
  %7 = load i8, i8* %all_errors, align 1, !dbg !3572
  %tobool4 = trunc i8 %7 to i1, !dbg !3572
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3573

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3574
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !3575, !ctir !3506
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3575
  %tobool5 = trunc i8 %9 to i1, !dbg !3575, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !3576
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3577
  %frombool6 = zext i1 %10 to i8, !dbg !3571
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3571
  call void @llvm.dbg.declare(metadata i8** %con, metadata !3578, metadata !DIExpression()), !dbg !3579
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !3580
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !3582
  %cmp = icmp sle i32 0, %call, !dbg !3583
  br i1 %cmp, label %if.then7, label %if.else, !dbg !3584

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !3585
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !3588
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3589
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !3590

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !3591
  %tobool11 = trunc i8 %13 to i1, !dbg !3591
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !3594

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !3595
  %tobool12 = trunc i8 %14 to i1, !dbg !3595
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !3596

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #16, !dbg !3597
  %15 = load i32, i32* %call13, align 4, !dbg !3597, !ctir !5
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !3598
  br i1 %call14, label %if.end, label %if.then15, !dbg !3599

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #16, !dbg !3600
  %16 = load i32, i32* %call16, align 4, !dbg !3600, !ctir !5
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !3601
  %17 = load i8*, i8** %con, align 8, !dbg !3602
  %call18 = call i8* @quote(i8* %17), !dbg !3603
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !3604
  br label %if.end, !dbg !3604

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3605
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !3607, !ctir !3506
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !3607
  %tobool20 = trunc i8 %19 to i1, !dbg !3607, !ctir !139
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3608

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !3609
  call void @freecon(i8* %20), !dbg !3611
  store i1 false, i1* %retval, align 1, !dbg !3612
  br label %return, !dbg !3612

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !3613

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !3614
  call void @freecon(i8* %21), !dbg !3615
  br label %if.end39, !dbg !3616

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !3617
  %tobool24 = trunc i8 %22 to i1, !dbg !3617
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !3620

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !3621
  %tobool26 = trunc i8 %23 to i1, !dbg !3621
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !3622

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #16, !dbg !3623
  %24 = load i32, i32* %call28, align 4, !dbg !3623, !ctir !5
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !3624
  br i1 %call29, label %if.end34, label %if.then30, !dbg !3625

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #16, !dbg !3626
  %25 = load i32, i32* %call31, align 4, !dbg !3626, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.90, i64 0, i64 0)) #9, !dbg !3628
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !3629
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3629
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !3630
  br label %if.end34, !dbg !3631

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3632
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !3634, !ctir !3506
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !3634
  %tobool36 = trunc i8 %28 to i1, !dbg !3634, !ctir !139
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3635

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !3636
  br label %return, !dbg !3636

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !3637

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3638
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !3640, !ctir !3506
  %30 = load i8, i8* %set_security_context, align 1, !dbg !3640
  %tobool41 = trunc i8 %30 to i1, !dbg !3640, !ctir !139
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !3641

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !3642
  %tobool43 = trunc i8 %31 to i1, !dbg !3642
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !3645

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !3646
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3647
  %call45 = call i32 @defaultcon.91(i8* %32, i32 %33), !dbg !3648
  %cmp46 = icmp slt i32 %call45, 0, !dbg !3649
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !3650

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #16, !dbg !3651
  %34 = load i32, i32* %call48, align 4, !dbg !3651, !ctir !5
  %call49 = call zeroext i1 @ignorable_ctx_err.92(i32 %34), !dbg !3652
  br i1 %call49, label %if.end54, label %if.then50, !dbg !3653

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #16, !dbg !3654
  %35 = load i32, i32* %call51, align 4, !dbg !3654, !ctir !5
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i64 0, i64 0)) #9, !dbg !3656
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !3657
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !3657
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !3658
  br label %if.end54, !dbg !3659

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !3660

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !3661
  br label %return, !dbg !3661

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !3662
  ret i1 %37, !dbg !3662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !3663 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  %0 = load i32, i32* %err.addr, align 4, !dbg !3666
  %cmp = icmp eq i32 %0, 95, !dbg !3667
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3668

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3669
  %cmp1 = icmp eq i32 %1, 61, !dbg !3670
  br label %lor.end, !dbg !3668

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3671
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon.91(i8* %path, i32 %mode) #4 !dbg !3672 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3673, metadata !DIExpression()), !dbg !3674
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3675, metadata !DIExpression()), !dbg !3676
  %call = call i32* @__errno_location() #16, !dbg !3677
  store i32 95, i32* %call, align 4, !dbg !3678, !ctir !5
  ret i32 -1, !dbg !3679
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err.92(i32 %err) #4 !dbg !3680 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3681, metadata !DIExpression()), !dbg !3682
  %0 = load i32, i32* %err.addr, align 4, !dbg !3683
  %cmp = icmp eq i32 %0, 95, !dbg !3684
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3685

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3686
  %cmp1 = icmp eq i32 %1, 61, !dbg !3687
  br label %lor.end, !dbg !3685

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3688
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !3689 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3692, metadata !DIExpression()), !dbg !3693
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !3694, metadata !DIExpression()), !dbg !3695
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3696, metadata !DIExpression()), !dbg !3697
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3700, metadata !DIExpression()), !dbg !3701
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3702
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !3703, !ctir !3506
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !3703
  %tobool = trunc i8 %1 to i1, !dbg !3703, !ctir !139
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3704

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3705
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !3706, !ctir !3506
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !3706
  %tobool2 = trunc i8 %3 to i1, !dbg !3706, !ctir !139
  br label %lor.end, !dbg !3704

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !3701
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3701
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3707, metadata !DIExpression()), !dbg !3708
  %5 = load i8, i8* %all_errors, align 1, !dbg !3709
  %tobool4 = trunc i8 %5 to i1, !dbg !3709
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3710

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3711
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !3712, !ctir !3506
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3712
  %tobool5 = trunc i8 %7 to i1, !dbg !3712, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !3713
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3714
  %frombool6 = zext i1 %8 to i8, !dbg !3708
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3708
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !3715
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !3717
  %tobool7 = trunc i8 %10 to i1, !dbg !3717
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !3718
  %tobool8 = trunc i8 %11 to i1, !dbg !3718
  %call = call zeroext i1 @restorecon.94(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !3719
  br i1 %call, label %if.end17, label %if.then, !dbg !3720

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !3721
  %tobool9 = trunc i8 %12 to i1, !dbg !3721
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !3724

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !3725
  %tobool10 = trunc i8 %13 to i1, !dbg !3725
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !3726

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #16, !dbg !3727
  %14 = load i32, i32* %call11, align 4, !dbg !3727, !ctir !5
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !3728
  br i1 %call12, label %if.end, label %if.then13, !dbg !3729

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !3730
  %15 = load i32, i32* %call14, align 4, !dbg !3730, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.95, i64 0, i64 0)) #9, !dbg !3731
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !3732
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !3732
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !3733
  br label %if.end, !dbg !3733

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !3734
  br label %return, !dbg !3734

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !3735
  br label %return, !dbg !3735

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !3736
  ret i1 %17, !dbg !3736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon.94(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3737 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3738, metadata !DIExpression()), !dbg !3739
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3740, metadata !DIExpression()), !dbg !3741
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3742, metadata !DIExpression()), !dbg !3743
  %call = call i32* @__errno_location() #16, !dbg !3744
  store i32 95, i32* %call, align 4, !dbg !3745, !ctir !5
  ret i1 false, !dbg !3746
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !3747 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3751, metadata !DIExpression()), !dbg !3752
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !3753
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3754
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !3755, !ctir !3507
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !3756, !ctir !172
  ret void, !dbg !3757
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !3758 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3759, metadata !DIExpression()), !dbg !3760
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !3761
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3762
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !3763, !ctir !3507
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !3764, !ctir !172
  ret void, !dbg !3765
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !3766 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !3774, metadata !DIExpression()), !dbg !3775
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !3780, metadata !DIExpression()), !dbg !3781
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !3782
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !3782
  br i1 %call, label %cond.true, label %cond.false, !dbg !3782

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3782

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !3782
  unreachable, !dbg !3782

1:                                                ; No predecessors!
  br label %cond.end, !dbg !3782

cond.end:                                         ; preds = %1, %cond.true
  %2 = load i8*, i8** %src_name.addr, align 8, !dbg !3783
  store i8* %2, i8** @top_level_src_name, align 8, !dbg !3784
  %3 = load i8*, i8** %dst_name.addr, align 8, !dbg !3785
  store i8* %3, i8** @top_level_dst_name, align 8, !dbg !3786
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !3787, metadata !DIExpression()), !dbg !3788
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !3788
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !3789
  %5 = load i8*, i8** %dst_name.addr, align 8, !dbg !3790
  %6 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !3791
  %tobool = trunc i8 %6 to i1, !dbg !3791
  %7 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !3792
  %8 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !3793
  %9 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3794
  %call1 = call zeroext i1 @copy_internal(i8* %4, i8* %5, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %7, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %8, i8* %9), !dbg !3795
  ret i1 %call1, !dbg !3796
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #10 !dbg !3797 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3802
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !3802
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3802

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3802

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.167, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3802
  unreachable, !dbg !3802

1:                                                ; No predecessors!
  br label %cond.end, !dbg !3802

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3803
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 0, !dbg !3803, !ctir !3506
  %3 = load i32, i32* %backup_type, align 8, !dbg !3803, !ctir !65
  %cmp1 = icmp ule i32 %3, 3, !dbg !3803
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !3803

cond.true2:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !3803

cond.false3:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.168, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3803
  unreachable, !dbg !3803

4:                                                ; No predecessors!
  br label %cond.end4, !dbg !3803

cond.end4:                                        ; preds = %4, %cond.true2
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3804
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !3804, !ctir !3506
  %6 = load i32, i32* %sparse_mode, align 4, !dbg !3804, !ctir !86
  %cmp5 = icmp eq i32 %6, 1, !dbg !3804
  br i1 %cmp5, label %cond.true11, label %lor.lhs.false, !dbg !3804

lor.lhs.false:                                    ; preds = %cond.end4
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3804
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !3804, !ctir !3506
  %8 = load i32, i32* %sparse_mode6, align 4, !dbg !3804, !ctir !86
  %cmp7 = icmp eq i32 %8, 2, !dbg !3804
  br i1 %cmp7, label %cond.true11, label %lor.lhs.false8, !dbg !3804

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3804
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 3, !dbg !3804, !ctir !3506
  %10 = load i32, i32* %sparse_mode9, align 4, !dbg !3804, !ctir !86
  %cmp10 = icmp eq i32 %10, 3, !dbg !3804
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !3804

cond.true11:                                      ; preds = %lor.lhs.false8, %lor.lhs.false, %cond.end4
  br label %cond.end13, !dbg !3804

cond.false12:                                     ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.169, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3804
  unreachable, !dbg !3804

11:                                               ; No predecessors!
  br label %cond.end13, !dbg !3804

cond.end13:                                       ; preds = %11, %cond.true11
  %12 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3805
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 36, !dbg !3805, !ctir !3506
  %13 = load i32, i32* %reflink_mode, align 8, !dbg !3805, !ctir !92
  %cmp14 = icmp eq i32 %13, 0, !dbg !3805
  br i1 %cmp14, label %cond.true21, label %lor.lhs.false15, !dbg !3805

lor.lhs.false15:                                  ; preds = %cond.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3805
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 36, !dbg !3805, !ctir !3506
  %15 = load i32, i32* %reflink_mode16, align 8, !dbg !3805, !ctir !92
  %cmp17 = icmp eq i32 %15, 1, !dbg !3805
  br i1 %cmp17, label %cond.true21, label %lor.lhs.false18, !dbg !3805

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3805
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 36, !dbg !3805, !ctir !3506
  %17 = load i32, i32* %reflink_mode19, align 8, !dbg !3805, !ctir !92
  %cmp20 = icmp eq i32 %17, 2, !dbg !3805
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !3805

cond.true21:                                      ; preds = %lor.lhs.false18, %lor.lhs.false15, %cond.end13
  br label %cond.end23, !dbg !3805

cond.false22:                                     ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.170, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3805
  unreachable, !dbg !3805

18:                                               ; No predecessors!
  br label %cond.end23, !dbg !3805

cond.end23:                                       ; preds = %18, %cond.true21
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3806
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 8, !dbg !3806, !ctir !3506
  %20 = load i8, i8* %hard_link, align 1, !dbg !3806
  %tobool = trunc i8 %20 to i1, !dbg !3806, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %cond.true25, !dbg !3806

land.lhs.true:                                    ; preds = %cond.end23
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3806
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 29, !dbg !3806, !ctir !3506
  %22 = load i8, i8* %symbolic_link, align 4, !dbg !3806
  %tobool24 = trunc i8 %22 to i1, !dbg !3806, !ctir !139
  br i1 %tobool24, label %cond.false26, label %cond.true25, !dbg !3806

cond.true25:                                      ; preds = %land.lhs.true, %cond.end23
  br label %cond.end27, !dbg !3806

cond.false26:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.171, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3806
  unreachable, !dbg !3806

23:                                               ; No predecessors!
  br label %cond.end27, !dbg !3806

cond.end27:                                       ; preds = %23, %cond.true25
  %24 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3807
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 36, !dbg !3807, !ctir !3506
  %25 = load i32, i32* %reflink_mode28, align 8, !dbg !3807, !ctir !92
  %cmp29 = icmp eq i32 %25, 2, !dbg !3807
  br i1 %cmp29, label %land.lhs.true30, label %cond.true33, !dbg !3807

land.lhs.true30:                                  ; preds = %cond.end27
  %26 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3807
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !3807, !ctir !3506
  %27 = load i32, i32* %sparse_mode31, align 4, !dbg !3807, !ctir !86
  %cmp32 = icmp ne i32 %27, 2, !dbg !3807
  br i1 %cmp32, label %cond.false34, label %cond.true33, !dbg !3807

cond.true33:                                      ; preds = %land.lhs.true30, %cond.end27
  br label %cond.end35, !dbg !3807

cond.false34:                                     ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.172, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3807
  unreachable, !dbg !3807

28:                                               ; No predecessors!
  br label %cond.end35, !dbg !3807

cond.end35:                                       ; preds = %28, %cond.true33
  ret i1 true, !dbg !3808
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !3809 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !470
  %dst_sb = alloca %struct.stat, align 8, !ctir !470
  %src_mode = alloca i32, align 4, !ctir !136
  %dst_mode = alloca i32, align 4, !ctir !136
  %dst_mode_bits = alloca i32, align 4, !ctir !136
  %omitted_permissions = alloca i32, align 4, !ctir !136
  %restore_dst_mode = alloca i8, align 1, !ctir !139
  %earlier_file = alloca i8*, align 8, !ctir !7
  %dst_backup = alloca i8*, align 8, !ctir !7
  %delayed_ok = alloca i8, align 1, !ctir !139
  %copied_as_regular = alloca i8, align 1, !ctir !139
  %dest_is_symlink = alloca i8, align 1, !ctir !139
  %have_dst_lstat = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %name = alloca i8*, align 8, !ctir !180
  %fstatat_flags = alloca i32, align 4, !ctir !5
  %dereference65 = alloca i8, align 1, !ctir !139
  %use_lstat = alloca i8, align 1, !ctir !139
  %fstatat_flags98 = alloca i32, align 4, !ctir !5
  %return_now = alloca i8, align 1, !ctir !139
  %options = alloca i32, align 4, !ctir !5
  %srcbase = alloca i8*, align 8, !ctir !180
  %fmt = alloca i8*, align 8, !ctir !180
  %tmp_backup = alloca i8*, align 8, !ctir !7
  %__old = alloca i8*, align 8, !ctir !180
  %__len = alloca i64, align 8, !ctir !52
  %__new = alloca i8*, align 8, !ctir !7
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !139
  %tmp_buf = alloca %struct.stat, align 8, !ctir !470
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !469
  %dir = alloca %struct.dir_list*, align 8, !ctir !501
  %dot_sb = alloca %struct.stat, align 8, !ctir !470
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !470
  %dst_parent = alloca i8*, align 8, !ctir !7
  %in_current_dir = alloca i8, align 1, !ctir !139
  %err = alloca i32, align 4, !ctir !5
  %replace = alloca i8, align 1, !ctir !139
  %src_link_val = alloca i8*, align 8, !ctir !7
  %symlink_err = alloca i32, align 4, !ctir !5
  %dest_link_val = alloca i8*, align 8, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !470
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !518
  %tmp952 = alloca %struct.timespec, align 8
  %tmp955 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3812, metadata !DIExpression()), !dbg !3813
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3814, metadata !DIExpression()), !dbg !3815
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !3818, metadata !DIExpression()), !dbg !3819
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !3820, metadata !DIExpression()), !dbg !3821
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3822, metadata !DIExpression()), !dbg !3823
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3824, metadata !DIExpression()), !dbg !3825
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !3826, metadata !DIExpression()), !dbg !3827
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !3828, metadata !DIExpression()), !dbg !3829
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3832, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !3834, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !3836, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !3838, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !3842, metadata !DIExpression()), !dbg !3843
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !3844, metadata !DIExpression()), !dbg !3845
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !3845
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !3846, metadata !DIExpression()), !dbg !3847
  store i8* null, i8** %earlier_file, align 8, !dbg !3847
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !3848, metadata !DIExpression()), !dbg !3849
  store i8* null, i8** %dst_backup, align 8, !dbg !3849
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !3850, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !3852, metadata !DIExpression()), !dbg !3853
  store i8 0, i8* %copied_as_regular, align 1, !dbg !3853
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !3854, metadata !DIExpression()), !dbg !3855
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !3855
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !3856, metadata !DIExpression()), !dbg !3857
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !3857
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !3858
  store i8 0, i8* %0, align 1, !dbg !3859, !ctir !139
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !3860, metadata !DIExpression()), !dbg !3861
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3862
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !3863, !ctir !3506
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !3863, !ctir !5
  store i32 %2, i32* %rename_errno, align 4, !dbg !3861
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3864
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !3866, !ctir !3506
  %4 = load i8, i8* %move_mode, align 8, !dbg !3866
  %tobool = trunc i8 %4 to i1, !dbg !3866, !ctir !139
  br i1 %tobool, label %if.then, label %if.end13, !dbg !3867

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !3868
  %cmp = icmp slt i32 %5, 0, !dbg !3871
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3872

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !3873
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !3874
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !3875
  %tobool4 = icmp ne i32 %call, 0, !dbg !3875
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !3875

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #16, !dbg !3876
  %8 = load i32, i32* %call5, align 4, !dbg !3876, !ctir !5
  br label %cond.end, !dbg !3875

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !3875

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !3875
  store i32 %cond, i32* %rename_errno, align 4, !dbg !3877
  br label %if.end, !dbg !3878

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !3879
  %cmp6 = icmp eq i32 %9, 0, !dbg !3880
  %frombool7 = zext i1 %cmp6 to i8, !dbg !3881
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !3881
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3882
  %tobool8 = icmp ne i8* %10, null, !dbg !3882
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !3884

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !3885
  %tobool10 = trunc i8 %11 to i1, !dbg !3885
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3886
  %frombool11 = zext i1 %tobool10 to i8, !dbg !3887
  store i8 %frombool11, i8* %12, align 1, !dbg !3887, !ctir !139
  br label %if.end12, !dbg !3888

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !3889

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !3890
  %cmp14 = icmp eq i32 %13, 0, !dbg !3892
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !3893

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3894
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !3895, !ctir !3506
  %15 = load i8, i8* %last_file, align 1, !dbg !3895
  %tobool16 = trunc i8 %15 to i1, !dbg !3895, !ctir !139
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !3890

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !3896
  %cmp18 = icmp ne i32 %16, 17, !dbg !3897
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !3898

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3899
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !3900, !ctir !3506
  %18 = load i32, i32* %interactive, align 8, !dbg !3900, !ctir !80
  %cmp19 = icmp ne i32 %18, 2, !dbg !3901
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !3893

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3902, metadata !DIExpression()), !dbg !3904
  %19 = load i32, i32* %rename_errno, align 4, !dbg !3905
  %cmp21 = icmp eq i32 %19, 0, !dbg !3906
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !3905

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !3907
  br label %cond.end24, !dbg !3905

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !3908
  br label %cond.end24, !dbg !3905

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !3905
  store i8* %cond25, i8** %name, align 8, !dbg !3904
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !3909, metadata !DIExpression()), !dbg !3910
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3911
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !3912, !ctir !3506
  %23 = load i32, i32* %dereference, align 4, !dbg !3912, !ctir !73
  %cmp26 = icmp eq i32 %23, 2, !dbg !3913
  %24 = zext i1 %cmp26 to i64, !dbg !3911
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !3911
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !3910
  %25 = load i8*, i8** %name, align 8, !dbg !3914
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !3916
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !3917
  %cmp29 = icmp ne i32 %call28, 0, !dbg !3918
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !3919

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #16, !dbg !3920
  %27 = load i32, i32* %call31, align 4, !dbg !3920, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !3922
  %28 = load i8*, i8** %name, align 8, !dbg !3923
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !3923
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !3924
  store i1 false, i1* %retval, align 1, !dbg !3925
  br label %return, !dbg !3925

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3926, !ctir !470
  %29 = load i32, i32* %st_mode, align 8, !dbg !3926, !ctir !137
  store i32 %29, i32* %src_mode, align 4, !dbg !3927
  %30 = load i32, i32* %src_mode, align 4, !dbg !3928
  %and = and i32 %30, 61440, !dbg !3928
  %cmp35 = icmp eq i32 %and, 16384, !dbg !3928
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !3930

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3931
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !3932, !ctir !3506
  %32 = load i8, i8* %recursive, align 2, !dbg !3932
  %tobool36 = trunc i8 %32 to i1, !dbg !3932, !ctir !139
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !3933

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3934
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !3936, !ctir !3506
  %34 = load i8, i8* %install_mode, align 1, !dbg !3936
  %tobool38 = trunc i8 %34 to i1, !dbg !3936, !ctir !139
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !3937

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.103, i64 0, i64 0)) #9, !dbg !3938
  br label %cond.end43, !dbg !3937

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.104, i64 0, i64 0)) #9, !dbg !3939
  br label %cond.end43, !dbg !3937

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !3937
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !3940
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !3940
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !3941
  store i1 false, i1* %retval, align 1, !dbg !3942
  br label %return, !dbg !3942

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !3943

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3944
  %tobool48 = trunc i8 %36 to i1, !dbg !3944
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !3946

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3947
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !3948, !ctir !3506
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !3948, !ctir !172
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !3947
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !3949

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !3950
  %and52 = and i32 %39, 61440, !dbg !3950
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !3950
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !3953

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3954
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !3955, !ctir !3506
  %41 = load i32, i32* %backup_type, align 8, !dbg !3955, !ctir !65
  %cmp55 = icmp eq i32 %41, 0, !dbg !3956
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !3957

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3958
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !3959, !ctir !3506
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !3959, !ctir !172
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !3960
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !3961
  br i1 %call58, label %if.then59, label %if.end62, !dbg !3962

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.105, i64 0, i64 0)) #9, !dbg !3963
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !3965
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !3965
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !3966
  store i1 true, i1* %retval, align 1, !dbg !3967
  br label %return, !dbg !3967

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3968
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !3969, !ctir !3506
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !3969, !ctir !172
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !3970
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !3971
  br label %if.end64, !dbg !3972

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !3973, metadata !DIExpression()), !dbg !3974
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3975
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3976
  %tobool66 = trunc i8 %50 to i1, !dbg !3976
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !3977
  %frombool68 = zext i1 %call67 to i8, !dbg !3974
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !3974
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !3978
  %tobool69 = trunc i8 %51 to i1, !dbg !3978
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !3980

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !3981
  %cmp71 = icmp eq i32 %52, 17, !dbg !3984
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !3985

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3986
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !3987, !ctir !3506
  %54 = load i32, i32* %interactive73, align 8, !dbg !3987, !ctir !80
  %cmp74 = icmp eq i32 %54, 2, !dbg !3988
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !3989

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !3990, metadata !DIExpression()), !dbg !3992
  %55 = load i32, i32* %src_mode, align 4, !dbg !3993
  %and76 = and i32 %55, 61440, !dbg !3993
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !3993
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !3994

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3995
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !3996, !ctir !3506
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !3996
  %tobool79 = trunc i8 %57 to i1, !dbg !3996, !ctir !139
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !3997

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !3998
  %and81 = and i32 %58, 61440, !dbg !3998
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !3998
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !3999

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !4000
  %and84 = and i32 %59, 61440, !dbg !4000
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !4000
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !4001

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4002
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !4003, !ctir !3506
  %61 = load i8, i8* %move_mode87, align 8, !dbg !4003
  %tobool88 = trunc i8 %61 to i1, !dbg !4003, !ctir !139
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !4004

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4005
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !4006, !ctir !3506
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !4006
  %tobool90 = trunc i8 %63 to i1, !dbg !4006, !ctir !139
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !4007

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4008
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !4009, !ctir !3506
  %65 = load i8, i8* %hard_link, align 1, !dbg !4009
  %tobool92 = trunc i8 %65 to i1, !dbg !4009, !ctir !139
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4010

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4011
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !4012, !ctir !3506
  %67 = load i32, i32* %backup_type94, align 8, !dbg !4012, !ctir !65
  %cmp95 = icmp ne i32 %67, 0, !dbg !4013
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !4014

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4015
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !4016, !ctir !3506
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4016
  %tobool96 = trunc i8 %69 to i1, !dbg !4016, !ctir !139
  br label %lor.end, !dbg !4014

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !3992
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !3992
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !4017, metadata !DIExpression()), !dbg !4018
  %71 = load i8, i8* %use_lstat, align 1, !dbg !4019
  %tobool99 = trunc i8 %71 to i1, !dbg !4019
  %72 = zext i1 %tobool99 to i64, !dbg !4019
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !4019
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !4018
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !4020
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !4022
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !4023
  %cmp102 = icmp eq i32 %call101, 0, !dbg !4024
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !4025

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !4026
  %tobool104 = trunc i8 %75 to i1, !dbg !4026
  %frombool105 = zext i1 %tobool104 to i8, !dbg !4028
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !4028
  store i32 17, i32* %rename_errno, align 4, !dbg !4029
  br label %if.end121, !dbg !4030

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #16, !dbg !4031
  %76 = load i32, i32* %call106, align 4, !dbg !4031, !ctir !5
  %cmp107 = icmp eq i32 %76, 40, !dbg !4034
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !4035

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4036
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !4037, !ctir !3506
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4037
  %tobool109 = trunc i8 %78 to i1, !dbg !4037, !ctir !139
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !4038

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !4038

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #16, !dbg !4039
  %79 = load i32, i32* %call112, align 4, !dbg !4039, !ctir !5
  %cmp113 = icmp ne i32 %79, 2, !dbg !4041
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !4042

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #16, !dbg !4043
  %80 = load i32, i32* %call115, align 4, !dbg !4043, !ctir !5
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4045
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !4046
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !4046
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !4047
  store i1 false, i1* %retval, align 1, !dbg !4048
  br label %return, !dbg !4048

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4049
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !4050

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !4051
  %cmp123 = icmp eq i32 %82, 17, !dbg !4053
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !4054

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4055, metadata !DIExpression()), !dbg !4057
  store i8 0, i8* %return_now, align 1, !dbg !4057
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4058
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !4060, !ctir !3506
  %84 = load i32, i32* %interactive125, align 8, !dbg !4060, !ctir !80
  %cmp126 = icmp ne i32 %84, 2, !dbg !4061
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !4062

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !4063
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !4064
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4065
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !4066
  br i1 %call128, label %if.end133, label %if.then129, !dbg !4067

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.106, i64 0, i64 0)) #9, !dbg !4068
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !4070
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !4070
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !4071
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !4071
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !4072
  store i1 false, i1* %retval, align 1, !dbg !4073
  br label %return, !dbg !4073

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4074
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !4076, !ctir !3506
  %91 = load i8, i8* %update, align 1, !dbg !4076
  %tobool134 = trunc i8 %91 to i1, !dbg !4076, !ctir !139
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !4077

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !4078
  %and136 = and i32 %92, 61440, !dbg !4078
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !4078
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !4079

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4080, metadata !DIExpression()), !dbg !4082
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4083
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !4084, !ctir !3506
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !4084
  %tobool139 = trunc i8 %94 to i1, !dbg !4084, !ctir !139
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !4085

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4086
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !4087, !ctir !3506
  %96 = load i8, i8* %move_mode140, align 8, !dbg !4087
  %tobool141 = trunc i8 %96 to i1, !dbg !4087, !ctir !139
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !4088

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4089, !ctir !470
  %97 = load i64, i64* %st_dev, align 8, !dbg !4089, !ctir !460
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4090, !ctir !470
  %98 = load i64, i64* %st_dev143, align 8, !dbg !4090, !ctir !460
  %cmp144 = icmp eq i64 %97, %98, !dbg !4091
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !4092
  %lnot = xor i1 %99, true, !dbg !4093
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !4092
  %101 = zext i1 %100 to i64, !dbg !4094
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !4094
  store i32 %cond146, i32* %options, align 4, !dbg !4082
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !4095
  %103 = load i32, i32* %options, align 4, !dbg !4097
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !4098
  %cmp148 = icmp sle i32 0, %call147, !dbg !4099
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !4100

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4101
  %tobool150 = icmp ne i8* %104, null, !dbg !4101
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !4104

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4105
  store i8 1, i8* %105, align 1, !dbg !4106, !ctir !139
  br label %if.end152, !dbg !4107

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !4108
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4109, !ctir !470
  %107 = load i64, i64* %st_ino, align 8, !dbg !4109, !ctir !461
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4110, !ctir !470
  %108 = load i64, i64* %st_dev153, align 8, !dbg !4110, !ctir !460
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !4111
  store i8* %call154, i8** %earlier_file, align 8, !dbg !4112
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4113
  %tobool155 = icmp ne i8* %109, null, !dbg !4113
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !4115

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !4116
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !4119
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4120
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !4121, !ctir !3506
  %113 = load i8, i8* %verbose, align 2, !dbg !4121
  %tobool157 = trunc i8 %113 to i1, !dbg !4121, !ctir !139
  %114 = load i8, i8* %dereference65, align 1, !dbg !4122
  %tobool158 = trunc i8 %114 to i1, !dbg !4122
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !4123
  br i1 %call159, label %if.end161, label %if.then160, !dbg !4124

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !4125

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !4127

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !4128
  br label %return, !dbg !4128

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !4129

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4130
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !4132, !ctir !3506
  %116 = load i8, i8* %move_mode165, align 8, !dbg !4132
  %tobool166 = trunc i8 %116 to i1, !dbg !4132, !ctir !139
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !4133

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4134
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !4137
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !4138
  br i1 %call168, label %if.then169, label %if.end173, !dbg !4139

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4140
  %tobool170 = icmp ne i8* %119, null, !dbg !4140
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !4143

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4144
  store i8 1, i8* %120, align 1, !dbg !4145, !ctir !139
  br label %if.end172, !dbg !4146

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !4147
  br label %return, !dbg !4147

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !4148

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !4149
  %and175 = and i32 %121, 61440, !dbg !4149
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !4149
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !4152

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4153
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !4154, !ctir !3506
  %123 = load i32, i32* %interactive178, align 8, !dbg !4154, !ctir !80
  %cmp179 = icmp eq i32 %123, 2, !dbg !4155
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !4156

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4157
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !4158, !ctir !3506
  %125 = load i32, i32* %interactive181, align 8, !dbg !4158, !ctir !80
  %cmp182 = icmp eq i32 %125, 3, !dbg !4159
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !4160

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4161
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !4162
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !4163
  br i1 %call184, label %if.end186, label %if.then185, !dbg !4164

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !4165
  br label %return, !dbg !4165

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !4166
  %tobool188 = trunc i8 %128 to i1, !dbg !4166
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !4168

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !4169
  br label %return, !dbg !4169

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4170, !ctir !470
  %129 = load i32, i32* %st_mode191, align 8, !dbg !4170, !ctir !137
  %and192 = and i32 %129, 61440, !dbg !4170
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !4170
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !4172

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !4173
  %and195 = and i32 %130, 61440, !dbg !4173
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4173
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !4176

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4177
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !4180, !ctir !3506
  %132 = load i8, i8* %move_mode198, align 8, !dbg !4180
  %tobool199 = trunc i8 %132 to i1, !dbg !4180, !ctir !139
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !4181

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4182
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !4183, !ctir !3506
  %134 = load i32, i32* %backup_type201, align 8, !dbg !4183, !ctir !65
  %cmp202 = icmp ne i32 %134, 0, !dbg !4184
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !4185

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !4186

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.107, i64 0, i64 0)) #9, !dbg !4188
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !4190
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !4190
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !4191
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !4191
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !4192
  store i1 false, i1* %retval, align 1, !dbg !4193
  br label %return, !dbg !4193

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !4194

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4195
  %tobool210 = trunc i8 %137 to i1, !dbg !4195
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !4197

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4198
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !4199, !ctir !3506
  %139 = load i32, i32* %backup_type212, align 8, !dbg !4199, !ctir !65
  %cmp213 = icmp ne i32 %139, 3, !dbg !4200
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !4201

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4202
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !4203, !ctir !3506
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4203, !ctir !172
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4204
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !4205
  br i1 %call215, label %if.then216, label %if.end220, !dbg !4206

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.108, i64 0, i64 0)) #9, !dbg !4207
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !4209
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !4209
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !4210
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !4210
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !4211
  store i1 false, i1* %retval, align 1, !dbg !4212
  br label %return, !dbg !4212

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !4213

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !4214
  %and222 = and i32 %145, 61440, !dbg !4214
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !4214
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !4216

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4217, !ctir !470
  %146 = load i32, i32* %st_mode225, align 8, !dbg !4217, !ctir !137
  %and226 = and i32 %146, 61440, !dbg !4217
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !4217
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !4220

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4221
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !4224, !ctir !3506
  %148 = load i8, i8* %move_mode229, align 8, !dbg !4224
  %tobool230 = trunc i8 %148 to i1, !dbg !4224, !ctir !139
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !4225

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4226
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !4227, !ctir !3506
  %150 = load i32, i32* %backup_type232, align 8, !dbg !4227, !ctir !65
  %cmp233 = icmp ne i32 %150, 0, !dbg !4228
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !4229

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !4230

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.109, i64 0, i64 0)) #9, !dbg !4232
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !4234
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !4234
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !4235
  store i1 false, i1* %retval, align 1, !dbg !4236
  br label %return, !dbg !4236

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !4237

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !4238

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4239
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !4241, !ctir !3506
  %153 = load i8, i8* %move_mode241, align 8, !dbg !4241
  %tobool242 = trunc i8 %153 to i1, !dbg !4241, !ctir !139
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !4242

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4243, !ctir !470
  %154 = load i32, i32* %st_mode244, align 8, !dbg !4243, !ctir !137
  %and245 = and i32 %154, 61440, !dbg !4243
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !4243
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !4246

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4247, !ctir !470
  %155 = load i32, i32* %st_mode248, align 8, !dbg !4247, !ctir !137
  %and249 = and i32 %155, 61440, !dbg !4247
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !4247
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !4248

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4249
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !4250, !ctir !3506
  %157 = load i32, i32* %backup_type252, align 8, !dbg !4250, !ctir !65
  %cmp253 = icmp eq i32 %157, 0, !dbg !4251
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !4252

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.110, i64 0, i64 0)) #9, !dbg !4253
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !4255
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4255
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !4256
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !4256
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !4257
  store i1 false, i1* %retval, align 1, !dbg !4258
  br label %return, !dbg !4258

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !4259

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4260, metadata !DIExpression()), !dbg !4261
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4262
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !4264, !ctir !3506
  %161 = load i32, i32* %backup_type260, align 8, !dbg !4264, !ctir !65
  %cmp261 = icmp ne i32 %161, 0, !dbg !4265
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !4266

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !4267
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !4268
  store i8* %call263, i8** %srcbase, align 8, !dbg !4269
  %call264 = call zeroext i1 @dot_or_dotdot(i8* %call263), !dbg !4270
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !4271

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4272
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !4273, !ctir !3506
  %164 = load i8, i8* %move_mode266, align 8, !dbg !4273
  %tobool267 = trunc i8 %164 to i1, !dbg !4273, !ctir !139
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !4274

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4275, !ctir !470
  %165 = load i32, i32* %st_mode269, align 8, !dbg !4275, !ctir !137
  %and270 = and i32 %165, 61440, !dbg !4275
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !4275
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !4276

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4277
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !4280, !ctir !3506
  %167 = load i32, i32* %backup_type273, align 8, !dbg !4280, !ctir !65
  %cmp274 = icmp ne i32 %167, 3, !dbg !4281
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !4282

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !4283
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !4284
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !4285
  br i1 %call276, label %if.then277, label %if.end288, !dbg !4286

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4287, metadata !DIExpression()), !dbg !4289
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4290
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !4291, !ctir !3506
  %171 = load i8, i8* %move_mode278, align 8, !dbg !4291
  %tobool279 = trunc i8 %171 to i1, !dbg !4291, !ctir !139
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !4290

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.111, i64 0, i64 0)) #9, !dbg !4292
  br label %cond.end284, !dbg !4290

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.112, i64 0, i64 0)) #9, !dbg !4293
  br label %cond.end284, !dbg !4290

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !4290
  store i8* %cond285, i8** %fmt, align 8, !dbg !4294
  %172 = load i8*, i8** %fmt, align 8, !dbg !4295
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !4296
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !4296
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !4297
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !4297
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !4298
  store i1 false, i1* %retval, align 1, !dbg !4299
  br label %return, !dbg !4299

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4300, metadata !DIExpression()), !dbg !4301
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !4302
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4303
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !4304, !ctir !3506
  %177 = load i32, i32* %backup_type289, align 8, !dbg !4304, !ctir !65
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !4305
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !4301
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4306
  %tobool291 = icmp ne i8* %178, null, !dbg !4306
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !4308

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !4309

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4311, metadata !DIExpression()), !dbg !4314
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !4314
  store i8* %179, i8** %__old, align 8, !dbg !4314
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4315, metadata !DIExpression()), !dbg !4314
  %180 = load i8*, i8** %__old, align 8, !dbg !4314
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !4314
  %add = add i64 %call293, 1, !dbg !4314
  store i64 %add, i64* %__len, align 8, !dbg !4314
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4316, metadata !DIExpression()), !dbg !4314
  %181 = load i64, i64* %__len, align 8, !dbg !4314
  %182 = alloca i8, i64 %181, align 16, !dbg !4314
  store i8* %182, i8** %__new, align 8, !dbg !4314
  %183 = load i8*, i8** %__new, align 8, !dbg !4314
  %184 = load i8*, i8** %__old, align 8, !dbg !4314
  %185 = load i64, i64* %__len, align 8, !dbg !4314
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !4314
  store i8* %183, i8** %tmp, align 8, !dbg !4314
  %186 = load i8*, i8** %tmp, align 8, !dbg !4314
  store i8* %186, i8** %dst_backup, align 8, !dbg !4317
  br label %do.end, !dbg !4317

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !4318
  call void @free(i8* %187) #9, !dbg !4319
  br label %if.end302, !dbg !4320

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #16, !dbg !4321
  %188 = load i32, i32* %call295, align 4, !dbg !4321, !ctir !5
  %cmp296 = icmp ne i32 %188, 2, !dbg !4323
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !4324

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #16, !dbg !4325
  %189 = load i32, i32* %call298, align 4, !dbg !4325, !ctir !5
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.113, i64 0, i64 0)) #9, !dbg !4327
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !4328
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !4328
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !4329
  store i1 false, i1* %retval, align 1, !dbg !4330
  br label %return, !dbg !4330

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4331
  br label %if.end343, !dbg !4332

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4333, !ctir !470
  %191 = load i32, i32* %st_mode304, align 8, !dbg !4333, !ctir !137
  %and305 = and i32 %191, 61440, !dbg !4333
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !4333
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !4335

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4336
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !4337, !ctir !3506
  %193 = load i8, i8* %move_mode308, align 8, !dbg !4337
  %tobool309 = trunc i8 %193 to i1, !dbg !4337, !ctir !139
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !4338

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4339
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !4340, !ctir !3506
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !4340
  %tobool312 = trunc i8 %195 to i1, !dbg !4340, !ctir !139
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !4341

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4342
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !4343, !ctir !3506
  %197 = load i8, i8* %preserve_links, align 2, !dbg !4343
  %tobool314 = trunc i8 %197 to i1, !dbg !4343, !ctir !139
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !4344

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !4345, !ctir !470
  %198 = load i64, i64* %st_nlink, align 8, !dbg !4345, !ctir !468
  %cmp316 = icmp ult i64 1, %198, !dbg !4346
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !4347

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4348
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !4349, !ctir !3506
  %200 = load i32, i32* %dereference318, align 4, !dbg !4349, !ctir !73
  %cmp319 = icmp eq i32 %200, 2, !dbg !4350
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !4351

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4352, !ctir !470
  %201 = load i32, i32* %st_mode321, align 8, !dbg !4352, !ctir !137
  %and322 = and i32 %201, 61440, !dbg !4352
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !4352
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !4353

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !4354
  %call325 = call i32 @unlink(i8* %202) #9, !dbg !4357
  %cmp326 = icmp ne i32 %call325, 0, !dbg !4358
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !4359

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #16, !dbg !4360
  %203 = load i32, i32* %call328, align 4, !dbg !4360, !ctir !5
  %cmp329 = icmp ne i32 %203, 2, !dbg !4361
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !4362

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #16, !dbg !4363
  %204 = load i32, i32* %call331, align 4, !dbg !4363, !ctir !5
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !4365
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !4366
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !4366
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !4367
  store i1 false, i1* %retval, align 1, !dbg !4368
  br label %return, !dbg !4368

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4369
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4370
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !4372, !ctir !3506
  %207 = load i8, i8* %verbose335, align 2, !dbg !4372
  %tobool336 = trunc i8 %207 to i1, !dbg !4372, !ctir !139
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !4373

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !4374
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !4375
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !4375
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !4376
  br label %if.end341, !dbg !4376

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !4377

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !4378

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !4379

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4380
  %tobool346 = trunc i8 %209 to i1, !dbg !4380
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !4382

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4383
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !4384, !ctir !3506
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !4384, !ctir !172
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !4383
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !4385

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4386
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !4387, !ctir !3506
  %213 = load i8, i8* %move_mode351, align 8, !dbg !4387
  %tobool352 = trunc i8 %213 to i1, !dbg !4387, !ctir !139
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !4388

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4389
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !4390, !ctir !3506
  %215 = load i32, i32* %backup_type354, align 8, !dbg !4390, !ctir !65
  %cmp355 = icmp eq i32 %215, 0, !dbg !4391
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !4392

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !4393, metadata !DIExpression()), !dbg !4395
  store i8 1, i8* %lstat_ok, align 1, !dbg !4395
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !4396, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !4398, metadata !DIExpression()), !dbg !4399
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !4400
  %tobool357 = trunc i8 %216 to i1, !dbg !4400
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !4402

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !4403
  br label %if.end365, !dbg !4404

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !4405
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #9, !dbg !4408
  %cmp361 = icmp eq i32 %call360, 0, !dbg !4409
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !4410

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !4411
  br label %if.end364, !dbg !4412

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !4413
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !4414
  %tobool366 = trunc i8 %218 to i1, !dbg !4414
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !4416

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4417
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !4417, !ctir !470
  %220 = load i32, i32* %st_mode368, align 8, !dbg !4417, !ctir !137
  %and369 = and i32 %220, 61440, !dbg !4417
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !4417
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !4418

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4419
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !4420, !ctir !3506
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !4420, !ctir !172
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !4421
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4422
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !4423
  br i1 %call373, label %if.then374, label %if.end378, !dbg !4424

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.116, i64 0, i64 0)) #9, !dbg !4425
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !4427
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !4427
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !4428
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !4428
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !4429
  store i1 false, i1* %retval, align 1, !dbg !4430
  br label %return, !dbg !4430

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !4431

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4432
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !4434, !ctir !3506
  %228 = load i8, i8* %verbose380, align 2, !dbg !4434
  %tobool381 = trunc i8 %228 to i1, !dbg !4434, !ctir !139
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !4435

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4436
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !4437, !ctir !3506
  %230 = load i8, i8* %move_mode383, align 8, !dbg !4437
  %tobool384 = trunc i8 %230 to i1, !dbg !4437, !ctir !139
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !4438

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !4439
  %and386 = and i32 %231, 61440, !dbg !4439
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !4439
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !4440

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !4441
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !4442
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !4443
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !4444
  br label %if.end389, !dbg !4444

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !4445
  %cmp390 = icmp eq i32 %235, 0, !dbg !4447
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !4448

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !4449
  br label %if.end443, !dbg !4450

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4451
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !4453, !ctir !3506
  %237 = load i8, i8* %recursive393, align 2, !dbg !4453
  %tobool394 = trunc i8 %237 to i1, !dbg !4453, !ctir !139
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !4454

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !4455
  %and396 = and i32 %238, 61440, !dbg !4455
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !4455
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !4456

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4457
  %tobool399 = trunc i8 %239 to i1, !dbg !4457
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !4460

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !4461
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4462, !ctir !470
  %241 = load i64, i64* %st_ino401, align 8, !dbg !4462, !ctir !461
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4463, !ctir !470
  %242 = load i64, i64* %st_dev402, align 8, !dbg !4463, !ctir !460
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !4464
  store i8* %call403, i8** %earlier_file, align 8, !dbg !4465
  br label %if.end408, !dbg !4466

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4467, !ctir !470
  %243 = load i64, i64* %st_ino405, align 8, !dbg !4467, !ctir !461
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4468, !ctir !470
  %244 = load i64, i64* %st_dev406, align 8, !dbg !4468, !ctir !460
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !4469
  store i8* %call407, i8** %earlier_file, align 8, !dbg !4470
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !4471

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4472
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !4474, !ctir !3506
  %246 = load i8, i8* %move_mode410, align 8, !dbg !4474
  %tobool411 = trunc i8 %246 to i1, !dbg !4474, !ctir !139
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !4475

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4476, !ctir !470
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !4476, !ctir !468
  %cmp414 = icmp eq i64 %247, 1, !dbg !4477
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !4478

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4479, !ctir !470
  %248 = load i64, i64* %st_ino416, align 8, !dbg !4479, !ctir !461
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4481, !ctir !470
  %249 = load i64, i64* %st_dev417, align 8, !dbg !4481, !ctir !460
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !4482
  store i8* %call418, i8** %earlier_file, align 8, !dbg !4483
  br label %if.end441, !dbg !4484

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4485
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !4487, !ctir !3506
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !4487
  %tobool421 = trunc i8 %251 to i1, !dbg !4487, !ctir !139
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !4488

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4489
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !4490, !ctir !3506
  %253 = load i8, i8* %hard_link423, align 1, !dbg !4490
  %tobool424 = trunc i8 %253 to i1, !dbg !4490, !ctir !139
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !4491

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4492, !ctir !470
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !4492, !ctir !468
  %cmp427 = icmp ult i64 1, %254, !dbg !4493
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !4494

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4495
  %tobool429 = trunc i8 %255 to i1, !dbg !4495
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !4496

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4497
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !4498, !ctir !3506
  %257 = load i32, i32* %dereference431, align 4, !dbg !4498, !ctir !73
  %cmp432 = icmp eq i32 %257, 3, !dbg !4499
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !4500

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4501
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !4502, !ctir !3506
  %259 = load i32, i32* %dereference434, align 4, !dbg !4502, !ctir !73
  %cmp435 = icmp eq i32 %259, 4, !dbg !4503
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !4504

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !4505
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4507, !ctir !470
  %261 = load i64, i64* %st_ino437, align 8, !dbg !4507, !ctir !461
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4508, !ctir !470
  %262 = load i64, i64* %st_dev438, align 8, !dbg !4508, !ctir !460
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !4509
  store i8* %call439, i8** %earlier_file, align 8, !dbg !4510
  br label %if.end440, !dbg !4511

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !4512
  %tobool444 = icmp ne i8* %263, null, !dbg !4512
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !4514

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !4515
  %and446 = and i32 %264, 61440, !dbg !4515
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !4515
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !4518

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !4519
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !4522
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !4523
  br i1 %call449, label %if.then450, label %if.else454, !dbg !4524

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.117, i64 0, i64 0)) #9, !dbg !4525
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !4527
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !4527
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4528
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !4528
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !4529
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4530
  store i8 1, i8* %269, align 1, !dbg !4531, !ctir !139
  br label %un_backup, !dbg !4532

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !4533
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !4535
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !4536
  br i1 %call455, label %if.then456, label %if.else465, !dbg !4537

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.118, i64 0, i64 0)) #9, !dbg !4538
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !4540
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !4540
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !4541
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4542
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !4544, !ctir !3506
  %274 = load i8, i8* %move_mode459, align 8, !dbg !4544
  %tobool460 = trunc i8 %274 to i1, !dbg !4544, !ctir !139
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !4545

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4546
  %tobool462 = icmp ne i8* %275, null, !dbg !4546
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !4547

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4548
  store i8 1, i8* %276, align 1, !dbg !4549, !ctir !139
  br label %if.end464, !dbg !4550

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !4551
  br label %return, !dbg !4551

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4552
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !4554, !ctir !3506
  %278 = load i32, i32* %dereference466, align 4, !dbg !4554, !ctir !73
  %cmp467 = icmp eq i32 %278, 4, !dbg !4555
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !4556

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4557
  %tobool469 = trunc i8 %279 to i1, !dbg !4557
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !4558

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4559
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !4560, !ctir !3506
  %281 = load i32, i32* %dereference471, align 4, !dbg !4560, !ctir !73
  %cmp472 = icmp eq i32 %281, 3, !dbg !4561
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !4562

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !4563

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.119, i64 0, i64 0)) #9, !dbg !4565
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !4567
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !4567
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !4568
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !4568
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !4569
  br label %un_backup, !dbg !4570

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !4571

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !4572
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !4575
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4576
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !4577, !ctir !3506
  %287 = load i8, i8* %verbose482, align 2, !dbg !4577
  %tobool483 = trunc i8 %287 to i1, !dbg !4577, !ctir !139
  %288 = load i8, i8* %dereference65, align 1, !dbg !4578
  %tobool484 = trunc i8 %288 to i1, !dbg !4578
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !4579
  br i1 %call485, label %if.end487, label %if.then486, !dbg !4580

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !4581

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !4582
  br label %return, !dbg !4582

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !4583

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4584
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !4586, !ctir !3506
  %290 = load i8, i8* %move_mode490, align 8, !dbg !4586
  %tobool491 = trunc i8 %290 to i1, !dbg !4586, !ctir !139
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !4587

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !4588
  %cmp493 = icmp eq i32 %291, 17, !dbg !4591
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !4592

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !4593
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !4594
  %call495 = call i32 @rename(i8* %292, i8* %293) #9, !dbg !4595
  %cmp496 = icmp eq i32 %call495, 0, !dbg !4596
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !4595

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !4595

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #16, !dbg !4597
  %294 = load i32, i32* %call499, align 4, !dbg !4597, !ctir !5
  br label %cond.end500, !dbg !4595

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !4595
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !4598
  br label %if.end502, !dbg !4599

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !4600
  %cmp503 = icmp eq i32 %295, 0, !dbg !4602
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !4603

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4604
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !4607, !ctir !3506
  %297 = load i8, i8* %verbose505, align 2, !dbg !4607
  %tobool506 = trunc i8 %297 to i1, !dbg !4607, !ctir !139
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !4608

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.120, i64 0, i64 0)) #9, !dbg !4609
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !4611
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !4612
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !4613
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !4614
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !4615
  br label %if.end510, !dbg !4616

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4617
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !4619, !ctir !3506
  %302 = load i8, i8* %set_security_context, align 1, !dbg !4619
  %tobool511 = trunc i8 %302 to i1, !dbg !4619, !ctir !139
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !4620

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !4621
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4623
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !4624
  br label %if.end514, !dbg !4625

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4626
  %tobool515 = icmp ne i8* %305, null, !dbg !4626
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !4628

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4629
  store i8 1, i8* %306, align 1, !dbg !4630, !ctir !139
  br label %if.end517, !dbg !4631

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4632
  %tobool518 = trunc i8 %307 to i1, !dbg !4632
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !4634

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4635
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !4636, !ctir !3506
  %309 = load i8, i8* %last_file520, align 1, !dbg !4636
  %tobool521 = trunc i8 %309 to i1, !dbg !4636, !ctir !139
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !4637

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4638
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !4640, !ctir !3506
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !4640, !ctir !172
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !4641
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !4642
  br label %if.end524, !dbg !4643

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !4644
  br label %return, !dbg !4644

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !4645
  %cmp526 = icmp eq i32 %313, 22, !dbg !4647
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !4648

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.121, i64 0, i64 0)) #9, !dbg !4649
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !4651
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !4651
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4652
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !4652
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !4653
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4654
  store i8 1, i8* %316, align 1, !dbg !4655, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !4656
  br label %return, !dbg !4656

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !4657
  %cmp532 = icmp ne i32 %317, 18, !dbg !4659
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !4660

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !4661
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.122, i64 0, i64 0)) #9, !dbg !4663
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !4664
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !4664
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !4665
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !4665
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !4666
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4667, !ctir !470
  %321 = load i64, i64* %st_ino537, align 8, !dbg !4667, !ctir !461
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4668, !ctir !470
  %322 = load i64, i64* %st_dev538, align 8, !dbg !4668, !ctir !460
  call void @forget_created(i64 %321, i64 %322), !dbg !4669
  store i1 false, i1* %retval, align 1, !dbg !4670
  br label %return, !dbg !4670

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !4671
  %and540 = and i32 %323, 61440, !dbg !4671
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !4671
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !4671

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !4673
  %call543 = call i32 @rmdir(i8* %324) #9, !dbg !4674
  br label %cond.end546, !dbg !4671

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !4675
  %call545 = call i32 @unlink(i8* %325) #9, !dbg !4676
  br label %cond.end546, !dbg !4671

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !4671
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !4677
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !4678

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #16, !dbg !4679
  %326 = load i32, i32* %call550, align 4, !dbg !4679, !ctir !5
  %cmp551 = icmp ne i32 %326, 2, !dbg !4680
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !4681

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #16, !dbg !4682
  %327 = load i32, i32* %call553, align 4, !dbg !4682, !ctir !5
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.123, i64 0, i64 0)) #9, !dbg !4684
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !4685
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !4685
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !4686
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !4686
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !4687
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4688, !ctir !470
  %330 = load i64, i64* %st_ino557, align 8, !dbg !4688, !ctir !461
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4689, !ctir !470
  %331 = load i64, i64* %st_dev558, align 8, !dbg !4689, !ctir !460
  call void @forget_created(i64 %330, i64 %331), !dbg !4690
  store i1 false, i1* %retval, align 1, !dbg !4691
  br label %return, !dbg !4691

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4692
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !4694, !ctir !3506
  %333 = load i8, i8* %verbose560, align 2, !dbg !4694
  %tobool561 = trunc i8 %333 to i1, !dbg !4694, !ctir !139
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !4695

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !4696
  %and563 = and i32 %334, 61440, !dbg !4696
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !4696
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !4697

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.124, i64 0, i64 0)) #9, !dbg !4698
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !4700
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !4701
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !4702
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !4703
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !4704
  br label %if.end568, !dbg !4705

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4706
  br label %if.end569, !dbg !4707

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4708
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !4709, !ctir !3506
  %339 = load i8, i8* %set_mode, align 1, !dbg !4709
  %tobool570 = trunc i8 %339 to i1, !dbg !4709, !ctir !139
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !4708

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4710
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !4711, !ctir !3506
  %341 = load i32, i32* %mode, align 8, !dbg !4711, !ctir !136
  br label %cond.end573, !dbg !4708

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !4712
  br label %cond.end573, !dbg !4708

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !4708
  %and575 = and i32 %cond574, 4095, !dbg !4713
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !4714
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !4715
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4716
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !4717, !ctir !3506
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !4717
  %tobool576 = trunc i8 %345 to i1, !dbg !4717, !ctir !139
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !4716

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !4716

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !4718
  %and579 = and i32 %346, 61440, !dbg !4718
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !4718
  %347 = zext i1 %cmp580 to i64, !dbg !4718
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !4718
  br label %cond.end582, !dbg !4716

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !4716
  %and584 = and i32 %343, %cond583, !dbg !4719
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !4720
  store i8 1, i8* %delayed_ok, align 1, !dbg !4721
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !4722
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !4724
  %350 = load i32, i32* %src_mode, align 4, !dbg !4725
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !4726
  %tobool585 = trunc i8 %351 to i1, !dbg !4726
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4727
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !4728
  br i1 %call586, label %if.end588, label %if.then587, !dbg !4729

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !4730
  br label %return, !dbg !4730

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !4731
  %and589 = and i32 %353, 61440, !dbg !4731
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !4731
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !4733

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !4734, metadata !DIExpression()), !dbg !4736
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4737
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !4739
  br i1 %call592, label %if.then593, label %if.end596, !dbg !4740

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.125, i64 0, i64 0)) #9, !dbg !4741
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !4743
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !4743
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !4744
  br label %un_backup, !dbg !4745

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !4746
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !4746
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !4747
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4748
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4749
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !4750, !ctir !502
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !4751, !ctir !501
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4752, !ctir !470
  %360 = load i64, i64* %st_ino598, align 8, !dbg !4752, !ctir !461
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4753
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !4754, !ctir !502
  store i64 %360, i64* %ino, align 8, !dbg !4755, !ctir !506
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4756, !ctir !470
  %362 = load i64, i64* %st_dev599, align 8, !dbg !4756, !ctir !460
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4757
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !4758, !ctir !502
  store i64 %362, i64* %dev, align 8, !dbg !4759, !ctir !508
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !4760
  %tobool600 = trunc i8 %364 to i1, !dbg !4760
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !4762

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4763, !ctir !470
  %365 = load i32, i32* %st_mode602, align 8, !dbg !4763, !ctir !137
  %and603 = and i32 %365, 61440, !dbg !4763
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !4763
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !4764

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !4765
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !4768
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !4769
  %neg = xor i32 %368, -1, !dbg !4770
  %and606 = and i32 %367, %neg, !dbg !4771
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #9, !dbg !4772
  %cmp608 = icmp ne i32 %call607, 0, !dbg !4773
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !4774

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #16, !dbg !4775
  %369 = load i32, i32* %call610, align 4, !dbg !4775, !ctir !5
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.126, i64 0, i64 0)) #9, !dbg !4777
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !4778
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !4778
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !4779
  br label %un_backup, !dbg !4780

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !4781
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #9, !dbg !4783
  %cmp615 = icmp ne i32 %call614, 0, !dbg !4784
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !4785

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #16, !dbg !4786
  %372 = load i32, i32* %call617, align 4, !dbg !4786, !ctir !5
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4788
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !4789
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !4789
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !4790
  br label %un_backup, !dbg !4791

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4792, !ctir !470
  %374 = load i32, i32* %st_mode621, align 8, !dbg !4792, !ctir !137
  %and622 = and i32 %374, 448, !dbg !4794
  %cmp623 = icmp ne i32 %and622, 448, !dbg !4795
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !4796

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4797, !ctir !470
  %375 = load i32, i32* %st_mode625, align 8, !dbg !4797, !ctir !137
  store i32 %375, i32* %dst_mode, align 4, !dbg !4799
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !4800
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !4801
  %377 = load i32, i32* %dst_mode, align 4, !dbg !4803
  %or = or i32 %377, 448, !dbg !4804
  %call626 = call i32 @chmod(i8* %376, i32 %or) #9, !dbg !4805
  %cmp627 = icmp ne i32 %call626, 0, !dbg !4806
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !4807

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #16, !dbg !4808
  %378 = load i32, i32* %call629, align 4, !dbg !4808, !ctir !5
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.127, i64 0, i64 0)) #9, !dbg !4810
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !4811
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !4811
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !4812
  br label %un_backup, !dbg !4813

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !4814

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4815
  %381 = load i8, i8* %380, align 1, !dbg !4817
  %tobool635 = trunc i8 %381 to i1, !dbg !4817, !ctir !139
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !4818

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !4819
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !4821, !ctir !470
  %383 = load i64, i64* %st_ino637, align 8, !dbg !4821, !ctir !461
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4822, !ctir !470
  %384 = load i64, i64* %st_dev638, align 8, !dbg !4822, !ctir !460
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !4823
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4824
  store i8 1, i8* %385, align 1, !dbg !4825, !ctir !139
  br label %if.end640, !dbg !4826

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4827
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !4829, !ctir !3506
  %387 = load i8, i8* %verbose641, align 2, !dbg !4829
  %tobool642 = trunc i8 %387 to i1, !dbg !4829, !ctir !139
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !4830

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4831
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !4834, !ctir !3506
  %389 = load i8, i8* %move_mode644, align 8, !dbg !4834
  %tobool645 = trunc i8 %389 to i1, !dbg !4834, !ctir !139
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !4835

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.128, i64 0, i64 0)) #9, !dbg !4836
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !4837
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !4837
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !4838
  br label %if.end651, !dbg !4838

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !4839
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !4840
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !4841
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !4842

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !4843

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !4844
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4846
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !4848, !ctir !3506
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !4848
  %tobool655 = trunc i8 %394 to i1, !dbg !4848, !ctir !139
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !4849

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4850
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !4851, !ctir !3506
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !4851
  %tobool657 = trunc i8 %396 to i1, !dbg !4851, !ctir !139
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !4852

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !4853
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4855
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !4856, !ctir !3506
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !4856
  %tobool660 = trunc i8 %399 to i1, !dbg !4856, !ctir !139
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4857
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !4858
  br i1 %call661, label %if.end666, label %if.then662, !dbg !4859

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4860
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !4863, !ctir !3506
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !4863
  %tobool663 = trunc i8 %402 to i1, !dbg !4863, !ctir !139
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !4864

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !4865

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !4866

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !4867

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4868
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !4870, !ctir !3506
  %404 = load i8, i8* %one_file_system, align 4, !dbg !4870
  %tobool669 = trunc i8 %404 to i1, !dbg !4870, !ctir !139
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !4871

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !4872
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !4872
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !4873

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !4874
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !4875, !ctir !520
  %407 = load i64, i64* %st_dev673, align 8, !dbg !4875, !ctir !460
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4876, !ctir !470
  %408 = load i64, i64* %st_dev674, align 8, !dbg !4876, !ctir !460
  %cmp675 = icmp ne i64 %407, %408, !dbg !4877
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !4878

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !4879

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !4881
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !4883
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !4884
  %tobool678 = trunc i8 %411 to i1, !dbg !4884
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4885
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4886
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4887
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4888
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !4889
  %frombool680 = zext i1 %call679 to i8, !dbg !4890
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !4890
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !4891

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4892
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !4894, !ctir !3506
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !4894
  %tobool684 = trunc i8 %417 to i1, !dbg !4894, !ctir !139
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !4895

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !4896
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !4898
  %419 = load i8, i8* %418, align 1, !dbg !4900, !ctir !181
  %conv = sext i8 %419 to i32, !dbg !4900
  %cmp686 = icmp ne i32 %conv, 47, !dbg !4901
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !4902

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !4903, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !4906, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !4908, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !4910, metadata !DIExpression()), !dbg !4911
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !4912
  %call689 = call i8* @dir_name(i8* %420), !dbg !4913
  store i8* %call689, i8** %dst_parent, align 8, !dbg !4914
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !4915
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), i8* %421) #14, !dbg !4915
  %cmp691 = icmp eq i32 %call690, 0, !dbg !4915
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !4916

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), %struct.stat* %dot_sb) #9, !dbg !4917
  %cmp695 = icmp ne i32 %call694, 0, !dbg !4918
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !4919

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !4920
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #9, !dbg !4921
  %cmp699 = icmp ne i32 %call698, 0, !dbg !4922
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !4923

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !4924, !ctir !470
  %423 = load i64, i64* %st_ino702, align 8, !dbg !4924, !ctir !461
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !4924, !ctir !470
  %424 = load i64, i64* %st_ino703, align 8, !dbg !4924, !ctir !461
  %cmp704 = icmp eq i64 %423, %424, !dbg !4924
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !4924

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !4924, !ctir !470
  %425 = load i64, i64* %st_dev707, align 8, !dbg !4924, !ctir !460
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !4924, !ctir !470
  %426 = load i64, i64* %st_dev708, align 8, !dbg !4924, !ctir !460
  %cmp709 = icmp eq i64 %425, %426, !dbg !4924
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !4925
  br label %lor.end712, !dbg !4923

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !4926
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !4926
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !4927
  call void @free(i8* %429) #9, !dbg !4928
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !4929
  %tobool714 = trunc i8 %430 to i1, !dbg !4929
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !4931

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.130, i64 0, i64 0)) #9, !dbg !4932
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !4934
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !4934
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !4935
  br label %un_backup, !dbg !4936

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !4937

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4938, metadata !DIExpression()), !dbg !4939
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !4940
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !4941
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4942
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !4943, !ctir !3506
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !4943
  %tobool721 = trunc i8 %435 to i1, !dbg !4943, !ctir !139
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !4944
  store i32 %call722, i32* %err, align 4, !dbg !4939
  %436 = load i32, i32* %err, align 4, !dbg !4945
  %cmp723 = icmp slt i32 0, %436, !dbg !4947
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !4948

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !4949
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.131, i64 0, i64 0)) #9, !dbg !4951
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !4952
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !4952
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !4953
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !4953
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !4954
  br label %un_backup, !dbg !4955

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !4956

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4957
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !4959, !ctir !3506
  %441 = load i8, i8* %hard_link731, align 1, !dbg !4959
  %tobool732 = trunc i8 %441 to i1, !dbg !4959, !ctir !139
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !4960

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !4961, metadata !DIExpression()), !dbg !4963
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4964
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !4965, !ctir !3506
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !4965
  %tobool736 = trunc i8 %443 to i1, !dbg !4965, !ctir !139
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !4966

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4967
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !4968, !ctir !3506
  %445 = load i32, i32* %interactive739, align 8, !dbg !4968, !ctir !80
  %cmp740 = icmp eq i32 %445, 3, !dbg !4969
  br label %lor.end742, !dbg !4966

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !4963
  store i8 %frombool743, i8* %replace, align 1, !dbg !4963
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !4970
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !4972
  %449 = load i8, i8* %replace, align 1, !dbg !4973
  %tobool744 = trunc i8 %449 to i1, !dbg !4973
  %450 = load i8, i8* %dereference65, align 1, !dbg !4974
  %tobool745 = trunc i8 %450 to i1, !dbg !4974
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !4975
  br i1 %call746, label %if.end748, label %if.then747, !dbg !4976

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !4977

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !4978

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !4979
  %and750 = and i32 %451, 61440, !dbg !4979
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !4979
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !4981

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4982
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !4983, !ctir !3506
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !4983
  %tobool755 = trunc i8 %453 to i1, !dbg !4983, !ctir !139
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !4984

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !4985
  %and758 = and i32 %454, 61440, !dbg !4985
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !4985
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !4986

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !4987
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !4989
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !4991
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4992
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !4993
  %and762 = and i32 %458, 511, !dbg !4994
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !4995
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !4996
  br i1 %call763, label %if.end765, label %if.then764, !dbg !4997

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !4998

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !4999

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !5000
  %and767 = and i32 %460, 61440, !dbg !5000
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !5000
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !5002

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !5003
  %462 = load i32, i32* %src_mode, align 4, !dbg !5006
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !5007
  %neg771 = xor i32 %463, -1, !dbg !5008
  %and772 = and i32 %462, %neg771, !dbg !5009
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #9, !dbg !5010
  %cmp774 = icmp ne i32 %call773, 0, !dbg !5011
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !5012

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !5013
  %465 = load i32, i32* %src_mode, align 4, !dbg !5015
  %and777 = and i32 %465, -4097, !dbg !5016
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !5017
  %neg778 = xor i32 %466, -1, !dbg !5018
  %and779 = and i32 %and777, %neg778, !dbg !5019
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #9, !dbg !5020
  %cmp781 = icmp ne i32 %call780, 0, !dbg !5021
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !5022

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #16, !dbg !5023
  %467 = load i32, i32* %call784, align 4, !dbg !5023, !ctir !5
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.132, i64 0, i64 0)) #9, !dbg !5025
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !5026
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !5026
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !5027
  br label %un_backup, !dbg !5028

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !5029

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !5030

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !5031
  %and790 = and i32 %469, 61440, !dbg !5031
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !5031
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !5033

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !5034
  %and794 = and i32 %470, 61440, !dbg !5034
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !5034
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !5035

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !5036
  %and798 = and i32 %471, 61440, !dbg !5036
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !5036
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !5037

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !5038
  %473 = load i32, i32* %src_mode, align 4, !dbg !5041
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !5042
  %neg802 = xor i32 %474, -1, !dbg !5043
  %and803 = and i32 %473, %neg802, !dbg !5044
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5045, !ctir !470
  %475 = load i64, i64* %st_rdev, align 8, !dbg !5045, !ctir !460
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #9, !dbg !5046
  %cmp805 = icmp ne i32 %call804, 0, !dbg !5047
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !5048

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #16, !dbg !5049
  %476 = load i32, i32* %call808, align 4, !dbg !5049, !ctir !5
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.133, i64 0, i64 0)) #9, !dbg !5051
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !5052
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !5052
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !5053
  br label %un_backup, !dbg !5054

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !5055

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !5056
  %and813 = and i32 %478, 61440, !dbg !5056
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !5056
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !5058

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5059, metadata !DIExpression()), !dbg !5061
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !5062
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5063, !ctir !470
  %480 = load i64, i64* %st_size, align 8, !dbg !5063, !ctir !30
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !5064
  store i8* %call817, i8** %src_link_val, align 8, !dbg !5061
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5065
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !5066
  %cmp818 = icmp eq i8* %481, null, !dbg !5068
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !5069

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #16, !dbg !5070
  %482 = load i32, i32* %call821, align 4, !dbg !5070, !ctir !5
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.134, i64 0, i64 0)) #9, !dbg !5072
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !5073
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !5073
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !5074
  br label %un_backup, !dbg !5075

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5076, metadata !DIExpression()), !dbg !5077
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !5078
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !5079
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5080
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !5081, !ctir !3506
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !5081
  %tobool826 = trunc i8 %487 to i1, !dbg !5081, !ctir !139
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !5082
  store i32 %call827, i32* %symlink_err, align 4, !dbg !5077
  %488 = load i32, i32* %symlink_err, align 4, !dbg !5083
  %cmp828 = icmp slt i32 0, %488, !dbg !5085
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !5086

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5087
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !5088, !ctir !3506
  %490 = load i8, i8* %update831, align 1, !dbg !5088
  %tobool832 = trunc i8 %490 to i1, !dbg !5088, !ctir !139
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !5089

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !5090
  %tobool835 = trunc i8 %491 to i1, !dbg !5090
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !5091

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5092, !ctir !470
  %492 = load i32, i32* %st_mode837, align 8, !dbg !5092, !ctir !137
  %and838 = and i32 %492, 61440, !dbg !5092
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !5092
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !5093

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5094, !ctir !470
  %493 = load i64, i64* %st_size842, align 8, !dbg !5094, !ctir !30
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !5095
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !5096
  %cmp844 = icmp eq i64 %493, %call843, !dbg !5097
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !5098

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5099, metadata !DIExpression()), !dbg !5101
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !5102
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5103, !ctir !470
  %496 = load i64, i64* %st_size847, align 8, !dbg !5103, !ctir !30
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !5104
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !5101
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5105
  %tobool849 = icmp ne i8* %497, null, !dbg !5105
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !5107

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !5108
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !5108
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !5108
  %cmp852 = icmp eq i32 %call851, 0, !dbg !5108
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !5111

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !5112
  br label %if.end855, !dbg !5113

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !5114
  call void @free(i8* %500) #9, !dbg !5115
  br label %if.end856, !dbg !5116

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !5117

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !5118
  call void @free(i8* %501) #9, !dbg !5119
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5120
  %cmp858 = icmp slt i32 0, %502, !dbg !5122
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !5123

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !5124
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.135, i64 0, i64 0)) #9, !dbg !5126
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !5127
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !5127
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !5128
  br label %un_backup, !dbg !5129

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5130
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !5132, !ctir !3506
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !5132
  %tobool865 = trunc i8 %506 to i1, !dbg !5132, !ctir !139
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !5133

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !5134
  br label %if.end867, !dbg !5134

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5135
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !5137, !ctir !3506
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !5137
  %tobool869 = trunc i8 %508 to i1, !dbg !5137, !ctir !139
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !5138

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !5139
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5142, !ctir !470
  %510 = load i32, i32* %st_uid, align 4, !dbg !5142, !ctir !125
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5143, !ctir !470
  %511 = load i32, i32* %st_gid, align 8, !dbg !5143, !ctir !127
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #9, !dbg !5144
  %cmp872 = icmp ne i32 %call871, 0, !dbg !5145
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !5146

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5147
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !5148
  br i1 %call875, label %if.else882, label %if.then876, !dbg !5149

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #16, !dbg !5150
  %513 = load i32, i32* %call877, align 4, !dbg !5150, !ctir !5
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !5152
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !5153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !5154
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5155
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !5157, !ctir !3506
  %516 = load i8, i8* %require_preserve, align 4, !dbg !5157
  %tobool879 = trunc i8 %516 to i1, !dbg !5157, !ctir !139
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !5158

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !5159

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !5160

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !5161

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !5162

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.137, i64 0, i64 0)) #9, !dbg !5163
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !5165
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !5165
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !5166
  br label %un_backup, !dbg !5167

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !5168
  %tobool895 = trunc i8 %518 to i1, !dbg !5168
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !5170

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5171
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !5172, !ctir !3506
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !5172
  %tobool898 = trunc i8 %520 to i1, !dbg !5172, !ctir !139
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !5173

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !5174
  %and900 = and i32 %521, 61440, !dbg !5174
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !5174
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !5175

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5176
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !5177, !ctir !3506
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !5177
  %tobool905 = trunc i8 %523 to i1, !dbg !5177, !ctir !139
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !5178

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5179
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !5180, !ctir !3506
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !5180
  %tobool909 = trunc i8 %525 to i1, !dbg !5180, !ctir !139
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !5181

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !5182
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5185
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !5186, !ctir !3506
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !5186
  %tobool913 = trunc i8 %528 to i1, !dbg !5186, !ctir !139
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5187
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !5188
  br i1 %call914, label %if.end920, label %if.then915, !dbg !5189

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5190
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !5193, !ctir !3506
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !5193
  %tobool917 = trunc i8 %531 to i1, !dbg !5193, !ctir !139
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !5194

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !5195

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !5196

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !5197

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5198
  %tobool922 = trunc i8 %532 to i1, !dbg !5198
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !5200

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5201
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !5202, !ctir !3506
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !5202, !ctir !172
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !5201
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !5203

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5204, metadata !DIExpression()), !dbg !5206
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !5207
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #9, !dbg !5209
  %cmp929 = icmp eq i32 %call928, 0, !dbg !5210
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !5211

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5212
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !5213, !ctir !3506
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !5213, !ctir !172
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !5214
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !5215
  br label %if.end933, !dbg !5215

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !5216

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5217
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !5219, !ctir !3506
  %540 = load i8, i8* %hard_link935, align 1, !dbg !5219
  %tobool936 = trunc i8 %540 to i1, !dbg !5219, !ctir !139
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !5220

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !5221
  %and939 = and i32 %541, 61440, !dbg !5221
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !5221
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !5222

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !5223
  %tobool943 = trunc i8 %542 to i1, !dbg !5223
  store i1 %tobool943, i1* %retval, align 1, !dbg !5224
  br label %return, !dbg !5224

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !5225
  %tobool945 = trunc i8 %543 to i1, !dbg !5225
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !5227

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !5228
  %tobool947 = trunc i8 %544 to i1, !dbg !5228
  store i1 %tobool947, i1* %retval, align 1, !dbg !5229
  br label %return, !dbg !5229

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5230
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !5232, !ctir !3506
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !5232
  %tobool950 = trunc i8 %546 to i1, !dbg !5232, !ctir !139
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !5233

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5234, metadata !DIExpression()), !dbg !5236
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5237, !ctir !518
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5238
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !5238
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !5238
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !5238
  store i64 %549, i64* %548, align 8, !dbg !5238
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !5238
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !5238
  store i64 %551, i64* %550, align 8, !dbg !5238
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5238
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !5238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !5238
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5239, !ctir !518
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5240
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5240
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !5240
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !5240
  store i64 %556, i64* %555, align 8, !dbg !5240
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !5240
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !5240
  store i64 %558, i64* %557, align 8, !dbg !5240
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !5240
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !5240
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !5241
  %tobool957 = trunc i8 %561 to i1, !dbg !5241
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !5241

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5243
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5244, !ctir !518
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !5245
  br label %cond.end964, !dbg !5241

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !5246
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5247, !ctir !518
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !5248
  br label %cond.end964, !dbg !5241

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !5241
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !5249
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !5250

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #16, !dbg !5251
  %564 = load i32, i32* %call969, align 4, !dbg !5251, !ctir !5
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !5253
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !5254
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !5254
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !5255
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5256
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !5258, !ctir !3506
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !5258
  %tobool973 = trunc i8 %567 to i1, !dbg !5258, !ctir !139
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !5259

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !5260
  br label %return, !dbg !5260

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !5261

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !5262

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !5263
  %tobool978 = trunc i8 %568 to i1, !dbg !5263
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !5265

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5266
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !5267, !ctir !3506
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !5267
  %tobool981 = trunc i8 %570 to i1, !dbg !5267, !ctir !139
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !5268

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !5269
  %tobool984 = trunc i8 %571 to i1, !dbg !5269
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !5270

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5271, !ctir !470
  %572 = load i32, i32* %st_uid987, align 4, !dbg !5271, !ctir !125
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5271, !ctir !470
  %573 = load i32, i32* %st_uid988, align 4, !dbg !5271, !ctir !125
  %cmp989 = icmp eq i32 %572, %573, !dbg !5271
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !5271

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5271, !ctir !470
  %574 = load i32, i32* %st_gid992, align 8, !dbg !5271, !ctir !127
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5271, !ctir !470
  %575 = load i32, i32* %st_gid993, align 8, !dbg !5271, !ctir !127
  %cmp994 = icmp eq i32 %574, %575, !dbg !5271
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !5272

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5273
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !5275
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !5276
  %tobool997 = trunc i8 %578 to i1, !dbg !5276
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !5277
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !5278

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !5279
  br label %return, !dbg !5279

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !5281
  %and1000 = and i32 %579, -3585, !dbg !5281
  store i32 %and1000, i32* %src_mode, align 4, !dbg !5281
  br label %sw.epilog, !dbg !5282

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !5283

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5284
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !5286, !ctir !3506
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !5286
  %tobool1002 = trunc i8 %581 to i1, !dbg !5286, !ctir !139
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !5287

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !5288
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !5289
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5290
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !5291
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !5292

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5293
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !5294, !ctir !3506
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5294
  %tobool1007 = trunc i8 %586 to i1, !dbg !5294, !ctir !139
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !5295

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !5296
  br label %return, !dbg !5296

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !5297
  %tobool1011 = trunc i8 %587 to i1, !dbg !5297
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !5299

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !5300
  %tobool1013 = trunc i8 %588 to i1, !dbg !5300
  store i1 %tobool1013, i1* %retval, align 1, !dbg !5301
  br label %return, !dbg !5301

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !5302
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !5303
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5304
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !5306, !ctir !3506
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !5306
  %tobool1015 = trunc i8 %591 to i1, !dbg !5306, !ctir !139
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !5307

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5308
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !5309, !ctir !3506
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !5309
  %tobool1019 = trunc i8 %593 to i1, !dbg !5309, !ctir !139
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !5310

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !5311
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !5314
  %596 = load i32, i32* %src_mode, align 4, !dbg !5315
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !5316
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !5317
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !5318

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5319
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !5320, !ctir !3506
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !5320
  %tobool1027 = trunc i8 %598 to i1, !dbg !5320, !ctir !139
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !5321

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !5322
  br label %return, !dbg !5322

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !5323

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5324
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !5326, !ctir !3506
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !5326
  %tobool1033 = trunc i8 %600 to i1, !dbg !5326, !ctir !139
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !5327

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !5328
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5331
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !5332, !ctir !3506
  %603 = load i32, i32* %mode1035, align 8, !dbg !5332, !ctir !136
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !5333
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !5334
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !5335

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !5336
  br label %return, !dbg !5336

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !5337

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5338
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !5340, !ctir !3506
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !5340
  %tobool1042 = trunc i8 %605 to i1, !dbg !5340, !ctir !139
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !5341

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !5342
  %tobool1045 = trunc i8 %606 to i1, !dbg !5342
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !5343

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !5344, metadata !DIExpression()), !dbg !5346
  %607 = load i32, i32* %src_mode, align 4, !dbg !5347
  %and1048 = and i32 %607, 61440, !dbg !5347
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !5347
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !5348

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !5349
  %and1052 = and i32 %608, 61440, !dbg !5349
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !5349
  br label %lor.end1055, !dbg !5348

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !5347
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !5347
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !5346
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !5350
  %612 = load i32, i32* %default_permissions, align 4, !dbg !5352
  %call1057 = call i32 @cached_umask(), !dbg !5353
  %neg1058 = xor i32 %call1057, -1, !dbg !5354
  %and1059 = and i32 %612, %neg1058, !dbg !5355
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !5356
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !5357
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !5358

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !5359
  br label %return, !dbg !5359

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !5360

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !5361
  %tobool1066 = icmp ne i32 %613, 0, !dbg !5361
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !5364

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !5365
  %neg1069 = xor i32 %call1068, -1, !dbg !5367
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !5368
  %and1070 = and i32 %614, %neg1069, !dbg !5368
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !5368
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !5369
  %tobool1071 = icmp ne i32 %615, 0, !dbg !5369
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !5371

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !5372
  %tobool1073 = trunc i8 %616 to i1, !dbg !5372
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !5373

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !5374
  %tobool1075 = trunc i8 %617 to i1, !dbg !5374
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !5377

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !5378
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #9, !dbg !5379
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !5380
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !5381

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #16, !dbg !5382
  %619 = load i32, i32* %call1082, align 4, !dbg !5382, !ctir !5
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !5384
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !5385
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !5385
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !5386
  store i1 false, i1* %retval, align 1, !dbg !5387
  br label %return, !dbg !5387

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5388, !ctir !470
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !5388, !ctir !137
  store i32 %621, i32* %dst_mode, align 4, !dbg !5389
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !5390
  %623 = load i32, i32* %dst_mode, align 4, !dbg !5392
  %neg1087 = xor i32 %623, -1, !dbg !5393
  %and1088 = and i32 %622, %neg1087, !dbg !5394
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !5394
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !5395

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5396
  br label %if.end1091, !dbg !5397

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !5398

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !5399

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !5400
  %tobool1094 = trunc i8 %624 to i1, !dbg !5400
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !5402

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !5403
  %626 = load i32, i32* %dst_mode, align 4, !dbg !5406
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !5407
  %or1096 = or i32 %626, %627, !dbg !5408
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #9, !dbg !5409
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !5410
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !5411

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #16, !dbg !5412
  %628 = load i32, i32* %call1101, align 4, !dbg !5412, !ctir !5
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !5414
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !5415
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !5415
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !5416
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5417
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !5419, !ctir !3506
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !5419
  %tobool1105 = trunc i8 %631 to i1, !dbg !5419, !ctir !139
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !5420

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !5421
  br label %return, !dbg !5421

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !5422

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !5423

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !5424
  %tobool1113 = trunc i8 %632 to i1, !dbg !5424
  store i1 %tobool1113, i1* %retval, align 1, !dbg !5425
  br label %return, !dbg !5425

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !5426), !dbg !5427
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5428
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !5430, !ctir !3506
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !5430
  %tobool1115 = trunc i8 %634 to i1, !dbg !5430, !ctir !139
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !5431

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !5432
  br label %if.end1117, !dbg !5432

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !5433
  %cmp1118 = icmp eq i8* %635, null, !dbg !5435
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !5436

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5437, !ctir !470
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !5437, !ctir !461
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5438, !ctir !470
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !5438, !ctir !460
  call void @forget_created(i64 %636, i64 %637), !dbg !5439
  br label %if.end1123, !dbg !5439

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !5440
  %tobool1124 = icmp ne i8* %638, null, !dbg !5440
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !5442

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !5443
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !5446
  %call1126 = call i32 @rename(i8* %639, i8* %640) #9, !dbg !5447
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !5448
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !5449

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #16, !dbg !5450
  %641 = load i32, i32* %call1130, align 4, !dbg !5450, !ctir !5
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.140, i64 0, i64 0)) #9, !dbg !5451
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !5452
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !5452
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !5453
  br label %if.end1142, !dbg !5453

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5454
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !5457, !ctir !3506
  %644 = load i8, i8* %verbose1134, align 2, !dbg !5457
  %tobool1135 = trunc i8 %644 to i1, !dbg !5457, !ctir !139
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !5458

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.141, i64 0, i64 0)) #9, !dbg !5459
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !5460
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !5460
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !5461
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !5461
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !5462
  br label %if.end1141, !dbg !5462

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !5463

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !5464
  br label %return, !dbg !5464

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !5465
  ret i1 %647, !dbg !5465
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !5466 {
entry:
  %dirfd.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flags.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  store i32 %dirfd, i32* %dirfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5477, metadata !DIExpression()), !dbg !5478
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !5479
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !5480
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !5481
  %3 = load i32, i32* %flags.addr, align 4, !dbg !5482
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #9, !dbg !5483
  store i32 %call, i32* %result, align 4, !dbg !5478
  %4 = load i32, i32* %result, align 4, !dbg !5484
  ret i32 %4, !dbg !5485
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #10 !dbg !5486 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5489, metadata !DIExpression()), !dbg !5490
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !5491, metadata !DIExpression()), !dbg !5492
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5493
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !5494, !ctir !3506
  %1 = load i32, i32* %dereference, align 4, !dbg !5494, !ctir !73
  %cmp = icmp eq i32 %1, 4, !dbg !5495
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5496

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5497
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !5498, !ctir !3506
  %3 = load i32, i32* %dereference1, align 4, !dbg !5498, !ctir !73
  %cmp2 = icmp eq i32 %3, 3, !dbg !5499
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !5500

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5501
  %tobool = trunc i8 %4 to i1, !dbg !5501
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !5502
  br label %lor.end, !dbg !5496

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !5503
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !5504 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !519
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !519
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !470
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !470
  %same_link = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %sn = alloca i8, align 1, !ctir !139
  %abs_src = alloca i8*, align 8, !ctir !7
  %result = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  store i8* %return_now, i8** %return_now.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !5525, metadata !DIExpression()), !dbg !5526
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !5527, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata i8* %same, metadata !5529, metadata !DIExpression()), !dbg !5530
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5531
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !5531, !ctir !520
  %1 = load i64, i64* %st_ino, align 8, !dbg !5531, !ctir !461
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5531
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !5531, !ctir !520
  %3 = load i64, i64* %st_ino1, align 8, !dbg !5531, !ctir !461
  %cmp = icmp eq i64 %1, %3, !dbg !5531
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5531

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5531
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !5531, !ctir !520
  %5 = load i64, i64* %st_dev, align 8, !dbg !5531, !ctir !460
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5531
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !5531, !ctir !520
  %7 = load i64, i64* %st_dev2, align 8, !dbg !5531, !ctir !460
  %cmp3 = icmp eq i64 %5, %7, !dbg !5531
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !5532
  %frombool = zext i1 %8 to i8, !dbg !5530
  store i8 %frombool, i8* %same, align 1, !dbg !5530
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !5533
  store i8 0, i8* %9, align 1, !dbg !5534, !ctir !139
  %10 = load i8, i8* %same, align 1, !dbg !5535
  %tobool = trunc i8 %10 to i1, !dbg !5535
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5537

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5538
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !5539, !ctir !3506
  %12 = load i8, i8* %hard_link, align 1, !dbg !5539
  %tobool4 = trunc i8 %12 to i1, !dbg !5539, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5540

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !5541
  store i8 1, i8* %13, align 1, !dbg !5543, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5544
  br label %return, !dbg !5544

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5545
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !5547, !ctir !3506
  %15 = load i32, i32* %dereference, align 4, !dbg !5547, !ctir !73
  %cmp5 = icmp eq i32 %15, 2, !dbg !5548
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5549

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !5550
  %tobool7 = trunc i8 %16 to i1, !dbg !5550
  %frombool8 = zext i1 %tobool7 to i8, !dbg !5552
  store i8 %frombool8, i8* %same_link, align 1, !dbg !5552
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5553
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !5553, !ctir !520
  %18 = load i32, i32* %st_mode, align 8, !dbg !5553, !ctir !137
  %and = and i32 %18, 61440, !dbg !5553
  %cmp9 = icmp eq i32 %and, 40960, !dbg !5553
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !5555

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5556
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !5556, !ctir !520
  %20 = load i32, i32* %st_mode11, align 8, !dbg !5556, !ctir !137
  %and12 = and i32 %20, 61440, !dbg !5556
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !5556
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !5557

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !5558, metadata !DIExpression()), !dbg !5560
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !5561
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !5562
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !5563
  %frombool15 = zext i1 %call to i8, !dbg !5560
  store i8 %frombool15, i8* %sn, align 1, !dbg !5560
  %23 = load i8, i8* %sn, align 1, !dbg !5564
  %tobool16 = trunc i8 %23 to i1, !dbg !5564
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !5566

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5567
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !5570, !ctir !3506
  %25 = load i32, i32* %backup_type, align 8, !dbg !5570, !ctir !65
  %cmp18 = icmp ne i32 %25, 0, !dbg !5571
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5572

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !5573
  br label %return, !dbg !5573

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !5574
  %tobool21 = trunc i8 %26 to i1, !dbg !5574
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5576

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !5577
  store i8 1, i8* %27, align 1, !dbg !5579, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5580
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !5581, !ctir !3506
  %29 = load i8, i8* %move_mode, align 8, !dbg !5581
  %tobool23 = trunc i8 %29 to i1, !dbg !5581, !ctir !139
  %lnot = xor i1 %tobool23, true, !dbg !5582
  store i1 %lnot, i1* %retval, align 1, !dbg !5583
  br label %return, !dbg !5583

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !5584

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !5585
  %tobool26 = trunc i8 %30 to i1, !dbg !5585
  %lnot27 = xor i1 %tobool26, true, !dbg !5586
  store i1 %lnot27, i1* %retval, align 1, !dbg !5587
  br label %return, !dbg !5587

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5588
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !5589
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5590
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !5591
  br label %if.end58, !dbg !5592

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !5593
  %tobool29 = trunc i8 %33 to i1, !dbg !5593
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !5596

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !5597
  br label %return, !dbg !5597

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !5598
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #9, !dbg !5600
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5601
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !5602

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !5603
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #9, !dbg !5604
  %cmp35 = icmp ne i32 %call34, 0, !dbg !5605
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !5606

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !5607
  br label %return, !dbg !5607

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !5608
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !5609
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5610
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !5610, !ctir !520
  %37 = load i64, i64* %st_ino38, align 8, !dbg !5610, !ctir !461
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5610
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !5610, !ctir !520
  %39 = load i64, i64* %st_ino39, align 8, !dbg !5610, !ctir !461
  %cmp40 = icmp eq i64 %37, %39, !dbg !5610
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !5610

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5610
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !5610, !ctir !520
  %41 = load i64, i64* %st_dev42, align 8, !dbg !5610, !ctir !460
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5610
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !5610, !ctir !520
  %43 = load i64, i64* %st_dev43, align 8, !dbg !5610, !ctir !460
  %cmp44 = icmp eq i64 %41, %43, !dbg !5610
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !5611
  %frombool46 = zext i1 %44 to i8, !dbg !5612
  store i8 %frombool46, i8* %same_link, align 1, !dbg !5612
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5613
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !5613, !ctir !520
  %46 = load i32, i32* %st_mode47, align 8, !dbg !5613, !ctir !137
  %and48 = and i32 %46, 61440, !dbg !5613
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !5613
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !5615

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5616
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !5616, !ctir !520
  %48 = load i32, i32* %st_mode51, align 8, !dbg !5616, !ctir !137
  %and52 = and i32 %48, 61440, !dbg !5616
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !5616
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !5617

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5618
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !5619, !ctir !3506
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5619
  %tobool55 = trunc i8 %50 to i1, !dbg !5619, !ctir !139
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5620

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !5621
  br label %return, !dbg !5621

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5622
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !5624, !ctir !3506
  %52 = load i32, i32* %backup_type59, align 8, !dbg !5624, !ctir !65
  %cmp60 = icmp ne i32 %52, 0, !dbg !5625
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !5626

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !5627
  %tobool62 = trunc i8 %53 to i1, !dbg !5627
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !5630

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5631
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !5634, !ctir !3506
  %55 = load i8, i8* %move_mode64, align 8, !dbg !5634
  %tobool65 = trunc i8 %55 to i1, !dbg !5634, !ctir !139
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !5635

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5636
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !5637, !ctir !3506
  %57 = load i32, i32* %dereference67, align 4, !dbg !5637, !ctir !73
  %cmp68 = icmp ne i32 %57, 2, !dbg !5638
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !5639

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5640
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !5640, !ctir !520
  %59 = load i32, i32* %st_mode70, align 8, !dbg !5640, !ctir !137
  %and71 = and i32 %59, 61440, !dbg !5640
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !5640
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !5641

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5642
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !5642, !ctir !520
  %61 = load i32, i32* %st_mode74, align 8, !dbg !5642, !ctir !137
  %and75 = and i32 %61, 61440, !dbg !5642
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !5642
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !5643

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !5644
  br label %return, !dbg !5644

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !5645
  br label %return, !dbg !5645

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !5646
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !5647
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !5648
  %lnot81 = xor i1 %call80, true, !dbg !5649
  store i1 %lnot81, i1* %retval, align 1, !dbg !5650
  br label %return, !dbg !5650

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5651
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !5653, !ctir !3506
  %65 = load i8, i8* %move_mode83, align 8, !dbg !5653
  %tobool84 = trunc i8 %65 to i1, !dbg !5653, !ctir !139
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !5654

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5655
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !5656, !ctir !3506
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !5656
  %tobool87 = trunc i8 %67 to i1, !dbg !5656, !ctir !139
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !5657

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5658
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !5658, !ctir !520
  %69 = load i32, i32* %st_mode89, align 8, !dbg !5658, !ctir !137
  %and90 = and i32 %69, 61440, !dbg !5658
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !5658
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !5661

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !5662
  br label %return, !dbg !5662

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !5663
  %tobool94 = trunc i8 %70 to i1, !dbg !5663
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !5665

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5666
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !5667, !ctir !520
  %72 = load i64, i64* %st_nlink, align 8, !dbg !5667, !ctir !468
  %cmp96 = icmp ult i64 1, %72, !dbg !5668
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !5669

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !5670
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !5671
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !5672
  br i1 %call98, label %if.end103, label %if.then99, !dbg !5673

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5674
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !5675, !ctir !3506
  %76 = load i8, i8* %move_mode100, align 8, !dbg !5675
  %tobool101 = trunc i8 %76 to i1, !dbg !5675, !ctir !139
  %lnot102 = xor i1 %tobool101, true, !dbg !5676
  store i1 %lnot102, i1* %retval, align 1, !dbg !5677
  br label %return, !dbg !5677

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !5678

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5679
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !5679, !ctir !520
  %78 = load i32, i32* %st_mode105, align 8, !dbg !5679, !ctir !137
  %and106 = and i32 %78, 61440, !dbg !5679
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !5679
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !5681

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5682
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !5682, !ctir !520
  %80 = load i32, i32* %st_mode109, align 8, !dbg !5682, !ctir !137
  %and110 = and i32 %80, 61440, !dbg !5682
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !5682
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !5683

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5684
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !5684, !ctir !520
  %82 = load i64, i64* %st_ino113, align 8, !dbg !5684, !ctir !461
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5684
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !5684, !ctir !520
  %84 = load i64, i64* %st_ino114, align 8, !dbg !5684, !ctir !461
  %cmp115 = icmp eq i64 %82, %84, !dbg !5684
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !5684

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5684
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !5684, !ctir !520
  %86 = load i64, i64* %st_dev117, align 8, !dbg !5684, !ctir !460
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5684
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !5684, !ctir !520
  %88 = load i64, i64* %st_dev118, align 8, !dbg !5684, !ctir !460
  %cmp119 = icmp eq i64 %86, %88, !dbg !5684
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !5687

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !5688
  br label %return, !dbg !5688

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5689
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !5691, !ctir !3506
  %90 = load i8, i8* %hard_link122, align 1, !dbg !5691
  %tobool123 = trunc i8 %90 to i1, !dbg !5691, !ctir !139
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !5692

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !5693
  store i8 1, i8* %91, align 1, !dbg !5695, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5696
  br label %return, !dbg !5696

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !5697

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5698
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !5700, !ctir !3506
  %93 = load i8, i8* %move_mode127, align 8, !dbg !5700
  %tobool128 = trunc i8 %93 to i1, !dbg !5700, !ctir !139
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !5701

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5702
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !5702, !ctir !520
  %95 = load i32, i32* %st_mode130, align 8, !dbg !5702, !ctir !137
  %and131 = and i32 %95, 61440, !dbg !5702
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !5702
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !5703

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5704
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !5705, !ctir !520
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !5705, !ctir !468
  %cmp135 = icmp ult i64 1, %97, !dbg !5706
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !5707

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !5708, metadata !DIExpression()), !dbg !5710
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !5711
  %call137 = call i8* @canonicalize_file_name(i8* %98) #9, !dbg !5712
  store i8* %call137, i8** %abs_src, align 8, !dbg !5710
  %99 = load i8*, i8** %abs_src, align 8, !dbg !5713
  %tobool138 = icmp ne i8* %99, null, !dbg !5713
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !5715

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5716, metadata !DIExpression()), !dbg !5718
  %100 = load i8*, i8** %abs_src, align 8, !dbg !5719
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !5720
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !5721
  %lnot141 = xor i1 %call140, true, !dbg !5722
  %frombool142 = zext i1 %lnot141 to i8, !dbg !5718
  store i8 %frombool142, i8* %result, align 1, !dbg !5718
  %102 = load i8*, i8** %abs_src, align 8, !dbg !5723
  call void @free(i8* %102) #9, !dbg !5724
  %103 = load i8, i8* %result, align 1, !dbg !5725
  %tobool143 = trunc i8 %103 to i1, !dbg !5725
  store i1 %tobool143, i1* %retval, align 1, !dbg !5726
  br label %return, !dbg !5726

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !5727

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5728
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !5730, !ctir !3506
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !5730
  %tobool146 = trunc i8 %105 to i1, !dbg !5730, !ctir !139
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !5731

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5732
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !5732, !ctir !520
  %107 = load i32, i32* %st_mode148, align 8, !dbg !5732, !ctir !137
  %and149 = and i32 %107, 61440, !dbg !5732
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !5732
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !5733

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !5734
  br label %return, !dbg !5734

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5735
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !5737, !ctir !3506
  %109 = load i32, i32* %dereference153, align 4, !dbg !5737, !ctir !73
  %cmp154 = icmp eq i32 %109, 2, !dbg !5738
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !5739

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5740
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !5740, !ctir !520
  %111 = load i32, i32* %st_mode156, align 8, !dbg !5740, !ctir !137
  %and157 = and i32 %111, 61440, !dbg !5740
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !5740
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !5743

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5744
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !5745
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !5745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !5745
  br label %if.end165, !dbg !5746

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !5747
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #9, !dbg !5749
  %cmp162 = icmp ne i32 %call161, 0, !dbg !5750
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !5751

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !5752
  br label %return, !dbg !5752

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5753
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !5753, !ctir !520
  %117 = load i32, i32* %st_mode166, align 8, !dbg !5753, !ctir !137
  %and167 = and i32 %117, 61440, !dbg !5753
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !5753
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !5755

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5756
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !5757
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !5757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !5757
  br label %if.end175, !dbg !5758

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !5759
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #9, !dbg !5761
  %cmp172 = icmp ne i32 %call171, 0, !dbg !5762
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !5763

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !5764
  br label %return, !dbg !5764

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !5765, !ctir !470
  %122 = load i64, i64* %st_ino176, align 8, !dbg !5765, !ctir !461
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !5765, !ctir !470
  %123 = load i64, i64* %st_ino177, align 8, !dbg !5765, !ctir !461
  %cmp178 = icmp eq i64 %122, %123, !dbg !5765
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !5765

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !5765, !ctir !470
  %124 = load i64, i64* %st_dev180, align 8, !dbg !5765, !ctir !460
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !5765, !ctir !470
  %125 = load i64, i64* %st_dev181, align 8, !dbg !5765, !ctir !460
  %cmp182 = icmp eq i64 %124, %125, !dbg !5765
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !5767

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !5768
  br label %return, !dbg !5768

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5769
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !5771, !ctir !3506
  %127 = load i8, i8* %hard_link185, align 1, !dbg !5771
  %tobool186 = trunc i8 %127 to i1, !dbg !5771, !ctir !139
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !5772

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5773
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !5773, !ctir !520
  %129 = load i32, i32* %st_mode188, align 8, !dbg !5773, !ctir !137
  %and189 = and i32 %129, 61440, !dbg !5773
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !5773
  %lnot191 = xor i1 %cmp190, true, !dbg !5775
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !5776
  %frombool192 = zext i1 %lnot191 to i8, !dbg !5777
  store i8 %frombool192, i8* %130, align 1, !dbg !5777, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5778
  br label %return, !dbg !5778

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !5779

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !5780
  br label %return, !dbg !5780

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !5781
  ret i1 %131, !dbg !5781
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !5782 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5787, metadata !DIExpression()), !dbg !5788
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5795, metadata !DIExpression()), !dbg !5796
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !5797
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !5798
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !5799
  %tobool = trunc i8 %2 to i1, !dbg !5799
  %3 = zext i1 %tobool to i64, !dbg !5799
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !5799
  %4 = load i8, i8* %replace.addr, align 1, !dbg !5800
  %tobool3 = trunc i8 %4 to i1, !dbg !5800
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !5801
  store i32 %call, i32* %err, align 4, !dbg !5796
  %5 = load i32, i32* %err, align 4, !dbg !5802
  %cmp = icmp slt i32 0, %5, !dbg !5804
  br i1 %cmp, label %if.then, label %if.end, !dbg !5805

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !5806
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.166, i64 0, i64 0)) #9, !dbg !5808
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !5809
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !5809
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !5810
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !5810
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !5811
  store i1 false, i1* %retval, align 1, !dbg !5812
  br label %return, !dbg !5812

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !5813
  %cmp7 = icmp slt i32 %9, 0, !dbg !5815
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !5816

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !5817
  %tobool8 = trunc i8 %10 to i1, !dbg !5817
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !5818

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !5819
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !5820
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !5820
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !5821
  br label %if.end13, !dbg !5821

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !5822
  br label %return, !dbg !5822

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !5823
  ret i1 %12, !dbg !5823
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !5824 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5829, metadata !DIExpression()), !dbg !5830
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5833
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !5833, !ctir !3506
  %1 = load i8, i8* %move_mode, align 8, !dbg !5833
  %tobool = trunc i8 %1 to i1, !dbg !5833, !ctir !139
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5833

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5833

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.165, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !5833
  unreachable, !dbg !5833

2:                                                ; No predecessors!
  br label %cond.end, !dbg !5833

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5834
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 2, !dbg !5835, !ctir !3506
  %4 = load i32, i32* %interactive, align 8, !dbg !5835, !ctir !80
  %cmp = icmp eq i32 %4, 2, !dbg !5836
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5837

lor.rhs:                                          ; preds = %cond.end
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5838
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 2, !dbg !5839, !ctir !3506
  %6 = load i32, i32* %interactive1, align 8, !dbg !5839, !ctir !80
  %cmp2 = icmp eq i32 %6, 3, !dbg !5840
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !5841

lor.lhs.false:                                    ; preds = %lor.rhs
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5842
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !5843, !ctir !3506
  %8 = load i32, i32* %interactive3, align 8, !dbg !5843, !ctir !80
  %cmp4 = icmp eq i32 %8, 4, !dbg !5844
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !5845

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5846
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 32, !dbg !5847, !ctir !3506
  %10 = load i8, i8* %stdin_tty, align 1, !dbg !5847
  %tobool5 = trunc i8 %10 to i1, !dbg !5847, !ctir !139
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !5848

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !5849
  %12 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5850
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !5851, !ctir !520
  %13 = load i32, i32* %st_mode, align 8, !dbg !5851, !ctir !137
  %call = call zeroext i1 @writable_destination(i8* %11, i32 %13), !dbg !5852
  br i1 %call, label %land.end, label %land.rhs, !dbg !5853

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5854
  %15 = load i8*, i8** %dst_name.addr, align 8, !dbg !5855
  %16 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5856
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %14, i8* %15, %struct.stat* %16), !dbg !5857
  %lnot = xor i1 %call7, true, !dbg !5858
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %17 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !5859
  br label %lor.end, !dbg !5837

lor.end:                                          ; preds = %land.end, %cond.end
  %18 = phi i1 [ true, %cond.end ], [ %17, %land.end ]
  ret i1 %18, !dbg !5860
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !5861 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !252
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5864, metadata !DIExpression()), !dbg !5865
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5866, metadata !DIExpression()), !dbg !5867
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !5868
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5870
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !5871, !ctir !520
  %2 = load i32, i32* %st_mode, align 8, !dbg !5871, !ctir !137
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !5872
  br i1 %call, label %if.else, label %if.then, !dbg !5873

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !5874, metadata !DIExpression()), !dbg !5876
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5877
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !5878, !ctir !520
  %4 = load i32, i32* %st_mode1, align 8, !dbg !5878, !ctir !137
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !5879, !ctir !252
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !5880
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !5881, !ctir !252
  store i8 0, i8* %arrayidx, align 1, !dbg !5882
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5883
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5884
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !5885, !ctir !3506
  %7 = load i8, i8* %move_mode, align 8, !dbg !5885
  %tobool = trunc i8 %7 to i1, !dbg !5885, !ctir !139
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !5886

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5887
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !5888, !ctir !3506
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5888
  %tobool2 = trunc i8 %9 to i1, !dbg !5888, !ctir !139
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !5889

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5890
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !5891, !ctir !3506
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !5891
  %tobool4 = trunc i8 %11 to i1, !dbg !5891, !ctir !139
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5892

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.162, i64 0, i64 0)) #9, !dbg !5893
  br label %cond.end, !dbg !5892

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.163, i64 0, i64 0)) #9, !dbg !5894
  br label %cond.end, !dbg !5892

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !5892
  %12 = load i8*, i8** @program_name, align 8, !dbg !5895
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !5896
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !5896
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5897
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !5898, !ctir !520
  %15 = load i32, i32* %st_mode8, align 8, !dbg !5898, !ctir !137
  %and = and i32 %15, 4095, !dbg !5899
  %conv = zext i32 %and to i64, !dbg !5900
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !5901, !ctir !252
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !5902
  br label %if.end, !dbg !5903

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5904
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.164, i64 0, i64 0)) #9, !dbg !5906
  %17 = load i8*, i8** @program_name, align 8, !dbg !5907
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !5908
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !5908
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !5909
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !5910
  ret i1 %call14, !dbg !5911
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !5912 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !5915
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5915, !ctir !180
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5915
  %conv = sext i8 %1 to i32, !dbg !5915
  %cmp = icmp eq i32 %conv, 46, !dbg !5917
  br i1 %cmp, label %if.then, label %if.else, !dbg !5918

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !5919, metadata !DIExpression()), !dbg !5921
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !5922
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !5923
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5923, !ctir !180
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !5923
  %conv3 = sext i8 %4 to i32, !dbg !5923
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !5924
  %conv5 = zext i1 %cmp4 to i32, !dbg !5924
  %add = add nsw i32 %conv5, 1, !dbg !5925
  %idxprom = sext i32 %add to i64, !dbg !5922
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !5922, !ctir !180
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !5922
  store i8 %5, i8* %sep, align 1, !dbg !5921
  %6 = load i8, i8* %sep, align 1, !dbg !5926
  %tobool = icmp ne i8 %6, 0, !dbg !5926
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5927

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !5928
  %conv7 = sext i8 %7 to i32, !dbg !5928
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !5928
  br label %lor.end, !dbg !5927

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !5929
  br label %return, !dbg !5929

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5930
  br label %return, !dbg !5930

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !5931
  ret i1 %9, !dbg !5931
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !5932 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !52
  %dstbase = alloca i8*, align 8, !ctir !180
  %dstbaselen = alloca i64, align 8, !ctir !52
  %suffixlen = alloca i64, align 8, !ctir !52
  %dstlen = alloca i64, align 8, !ctir !52
  %dst_back = alloca i8*, align 8, !ctir !7
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !470
  %dst_back_status = alloca i32, align 4, !ctir !5
  store i8* %srcbase, i8** %srcbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !5937, metadata !DIExpression()), !dbg !5938
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5939, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !5941, metadata !DIExpression()), !dbg !5942
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !5943
  %call = call i64 @strlen(i8* %0) #14, !dbg !5944
  store i64 %call, i64* %srcbaselen, align 8, !dbg !5942
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !5945, metadata !DIExpression()), !dbg !5946
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !5947
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !5948
  store i8* %call1, i8** %dstbase, align 8, !dbg !5946
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !5949, metadata !DIExpression()), !dbg !5950
  %2 = load i8*, i8** %dstbase, align 8, !dbg !5951
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !5952
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !5950
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !5953, metadata !DIExpression()), !dbg !5954
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5955
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !5956
  store i64 %call3, i64* %suffixlen, align 8, !dbg !5954
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !5957
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !5959
  %6 = load i64, i64* %suffixlen, align 8, !dbg !5960
  %add = add i64 %5, %6, !dbg !5961
  %cmp = icmp eq i64 %4, %add, !dbg !5962
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !5963

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !5964
  %8 = load i8*, i8** %dstbase, align 8, !dbg !5965
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !5966
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !5967
  %cmp5 = icmp eq i32 %call4, 0, !dbg !5968
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !5969

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !5970
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !5970
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !5970, !ctir !181
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5970
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !5970
  %cmp8 = icmp eq i32 %call7, 0, !dbg !5970
  br i1 %cmp8, label %if.end, label %if.then, !dbg !5971

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !5972
  br label %return, !dbg !5972

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !5973, metadata !DIExpression()), !dbg !5974
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !5975
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !5976
  store i64 %call9, i64* %dstlen, align 8, !dbg !5974
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !5977, metadata !DIExpression()), !dbg !5978
  %14 = load i64, i64* %dstlen, align 8, !dbg !5979
  %15 = load i64, i64* %suffixlen, align 8, !dbg !5980
  %add10 = add i64 %14, %15, !dbg !5981
  %add11 = add i64 %add10, 1, !dbg !5982
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !5983
  store i8* %call12, i8** %dst_back, align 8, !dbg !5978
  %16 = load i8*, i8** %dst_back, align 8, !dbg !5984
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !5985
  %18 = load i64, i64* %dstlen, align 8, !dbg !5986
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #9, !dbg !5987
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5988
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #9, !dbg !5989
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !5992, metadata !DIExpression()), !dbg !5993
  %20 = load i8*, i8** %dst_back, align 8, !dbg !5994
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #9, !dbg !5995
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !5993
  %21 = load i8*, i8** %dst_back, align 8, !dbg !5996
  call void @free(i8* %21) #9, !dbg !5997
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !5998
  %cmp16 = icmp eq i32 %22, 0, !dbg !5999
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6000

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6001
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6001, !ctir !520
  %24 = load i64, i64* %st_ino, align 8, !dbg !6001, !ctir !461
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6001, !ctir !470
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6001, !ctir !461
  %cmp18 = icmp eq i64 %24, %25, !dbg !6001
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6001

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6001
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6001, !ctir !520
  %27 = load i64, i64* %st_dev, align 8, !dbg !6001, !ctir !460
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6001, !ctir !470
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6001, !ctir !460
  %cmp21 = icmp eq i64 %27, %28, !dbg !6001
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6002
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6002
  store i1 %30, i1* %retval, align 1, !dbg !6003
  br label %return, !dbg !6003

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6004
  ret i1 %31, !dbg !6004
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6005 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6014
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6014
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6015
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6015
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.160, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6016
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6017
  %tobool = icmp ne i8* %2, null, !dbg !6017
  br i1 %tobool, label %if.then, label %if.end, !dbg !6019

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.161, i64 0, i64 0)) #9, !dbg !6020
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6021
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6021
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6022
  br label %if.end, !dbg !6022

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6023
  ret void, !dbg !6024
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #10 !dbg !6025 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  br label %while.cond, !dbg !6034

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6035
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6036
  br i1 %cmp, label %while.body, label %while.end, !dbg !6034

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6037
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6040, !ctir !6029
  %2 = load i64, i64* %ino, align 8, !dbg !6040, !ctir !506
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6041
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6042, !ctir !520
  %4 = load i64, i64* %st_ino, align 8, !dbg !6042, !ctir !461
  %cmp1 = icmp eq i64 %2, %4, !dbg !6043
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6044

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6045
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6046, !ctir !6029
  %6 = load i64, i64* %dev, align 8, !dbg !6046, !ctir !508
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6047
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6048, !ctir !520
  %8 = load i64, i64* %st_dev, align 8, !dbg !6048, !ctir !460
  %cmp2 = icmp eq i64 %6, %8, !dbg !6049
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6050

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6051
  br label %return, !dbg !6051

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6052
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6053, !ctir !6029
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6053, !ctir !501
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6054
  br label %while.cond, !dbg !6034, !llvm.loop !6055

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6057
  br label %return, !dbg !6057

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6058
  ret i1 %11, !dbg !6058
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6059 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !7
  %namep = alloca i8*, align 8, !ctir !7
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !3507
  %ok = alloca i8, align 1, !ctir !139
  %new_first_dir_created = alloca i8, align 1, !ctir !139
  %local_copy_into_self = alloca i8, align 1, !ctir !139
  %src_name = alloca i8*, align 8, !ctir !7
  %dst_name = alloca i8*, align 8, !ctir !7
  %first_dir_created = alloca i8, align 1, !ctir !139
  store i8* %src_name_in, i8** %src_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6062, metadata !DIExpression()), !dbg !6063
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6064, metadata !DIExpression()), !dbg !6065
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6072, metadata !DIExpression()), !dbg !6073
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6074, metadata !DIExpression()), !dbg !6075
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6076, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6078, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6082, metadata !DIExpression()), !dbg !6083
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6084
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6085
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6085
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6086, metadata !DIExpression()), !dbg !6087
  store i8 1, i8* %ok, align 1, !dbg !6087
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6088
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6089
  store i8* %call, i8** %name_space, align 8, !dbg !6090
  %4 = load i8*, i8** %name_space, align 8, !dbg !6091
  %cmp = icmp eq i8* %4, null, !dbg !6093
  br i1 %cmp, label %if.then, label %if.end, !dbg !6094

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6095
  %5 = load i32, i32* %call1, align 4, !dbg !6095, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.159, i64 0, i64 0)) #9, !dbg !6097
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6098
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6098
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6099
  store i1 false, i1* %retval, align 1, !dbg !6100
  br label %return, !dbg !6100

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6101
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6103, !ctir !3506
  %8 = load i32, i32* %dereference, align 4, !dbg !6103, !ctir !73
  %cmp4 = icmp eq i32 %8, 3, !dbg !6104
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6105

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6106, !ctir !3507
  store i32 2, i32* %dereference6, align 4, !dbg !6107, !ctir !73
  br label %if.end7, !dbg !6108

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6109, metadata !DIExpression()), !dbg !6110
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6110
  %9 = load i8*, i8** %name_space, align 8, !dbg !6111
  store i8* %9, i8** %namep, align 8, !dbg !6112
  br label %while.cond, !dbg !6113

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6114
  %11 = load i8, i8* %10, align 1, !dbg !6115, !ctir !8
  %conv = sext i8 %11 to i32, !dbg !6115
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6116
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6113

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6117, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6120, metadata !DIExpression()), !dbg !6121
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6122
  %13 = load i8*, i8** %namep, align 8, !dbg !6123
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6124
  store i8* %call10, i8** %src_name, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6125, metadata !DIExpression()), !dbg !6126
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6127
  %15 = load i8*, i8** %namep, align 8, !dbg !6128
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6129
  store i8* %call11, i8** %dst_name, align 8, !dbg !6126
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6130, metadata !DIExpression()), !dbg !6131
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6132
  %17 = load i8, i8* %16, align 1, !dbg !6133
  %tobool = trunc i8 %17 to i1, !dbg !6133, !ctir !139
  %frombool12 = zext i1 %tobool to i8, !dbg !6131
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6131
  %18 = load i8*, i8** %src_name, align 8, !dbg !6134
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6135
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6136
  %tobool13 = trunc i8 %20 to i1, !dbg !6136
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6137
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6138
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6139
  %conv15 = zext i1 %call14 to i32, !dbg !6139
  %23 = load i8, i8* %ok, align 1, !dbg !6140
  %tobool16 = trunc i8 %23 to i1, !dbg !6140
  %conv17 = zext i1 %tobool16 to i32, !dbg !6140
  %and = and i32 %conv17, %conv15, !dbg !6140
  %tobool18 = icmp ne i32 %and, 0, !dbg !6140
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6140
  store i8 %frombool19, i8* %ok, align 1, !dbg !6140
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6141
  %tobool20 = trunc i8 %24 to i1, !dbg !6141
  %conv21 = zext i1 %tobool20 to i32, !dbg !6141
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6142
  %26 = load i8, i8* %25, align 1, !dbg !6143
  %tobool22 = trunc i8 %26 to i1, !dbg !6143, !ctir !139
  %conv23 = zext i1 %tobool22 to i32, !dbg !6143
  %or = or i32 %conv23, %conv21, !dbg !6143
  %tobool24 = icmp ne i32 %or, 0, !dbg !6143
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6143
  store i8 %frombool25, i8* %25, align 1, !dbg !6143, !ctir !139
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6144
  call void @free(i8* %27) #9, !dbg !6145
  %28 = load i8*, i8** %src_name, align 8, !dbg !6146
  call void @free(i8* %28) #9, !dbg !6147
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6148
  %tobool26 = trunc i8 %29 to i1, !dbg !6148
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6150

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6151

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6152
  %tobool29 = trunc i8 %30 to i1, !dbg !6152
  %conv30 = zext i1 %tobool29 to i32, !dbg !6152
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6153
  %tobool31 = trunc i8 %31 to i1, !dbg !6153
  %conv32 = zext i1 %tobool31 to i32, !dbg !6153
  %or33 = or i32 %conv32, %conv30, !dbg !6153
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6153
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6153
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6153
  %32 = load i8*, i8** %namep, align 8, !dbg !6154
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6155
  %add = add i64 %call36, 1, !dbg !6156
  %33 = load i8*, i8** %namep, align 8, !dbg !6157
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6157, !ctir !8
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6157
  br label %while.cond, !dbg !6113, !llvm.loop !6158

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6160
  call void @free(i8* %34) #9, !dbg !6161
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6162
  %tobool37 = trunc i8 %35 to i1, !dbg !6162
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6163
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6164
  store i8 %frombool38, i8* %36, align 1, !dbg !6164, !ctir !139
  %37 = load i8, i8* %ok, align 1, !dbg !6165
  %tobool39 = trunc i8 %37 to i1, !dbg !6165
  store i1 %tobool39, i1* %retval, align 1, !dbg !6166
  br label %return, !dbg !6166

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6167
  ret i1 %38, !dbg !6167
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6168 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !7
  %buf_alloc = alloca i8*, align 8, !ctir !7
  %name_alloc = alloca i8*, align 8, !ctir !7
  %dest_desc = alloca i32, align 4, !ctir !5
  %dest_errno = alloca i32, align 4, !ctir !5
  %source_desc = alloca i32, align 4, !ctir !5
  %src_mode = alloca i32, align 4, !ctir !136
  %sb = alloca %struct.stat, align 8, !ctir !470
  %src_open_sb = alloca %struct.stat, align 8, !ctir !470
  %return_val = alloca i8, align 1, !ctir !139
  %data_copy_required = alloca i8, align 1, !ctir !139
  %open_flags = alloca i32, align 4, !ctir !5
  %open_flags72 = alloca i32, align 4, !ctir !5
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !470
  %clone_ok = alloca i8, align 1, !ctir !139
  %buf_alignment = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %hole_size = alloca i64, align 8, !ctir !52
  %make_holes = alloca i8, align 1, !ctir !139
  %sparse_src = alloca i8, align 1, !ctir !139
  %blcm_max = alloca i64, align 8, !ctir !52
  %blcm = alloca i64, align 8, !ctir !52
  %normal_copy_required = alloca i8, align 1, !ctir !139
  %n_read = alloca i64, align 8, !ctir !437
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !518
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  store i32 %dst_mode, i32* %dst_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6179, metadata !DIExpression()), !dbg !6180
  store i8* %new_dst, i8** %new_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6187, metadata !DIExpression()), !dbg !6188
  store i8* null, i8** %buf_alloc, align 8, !dbg !6188
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6189, metadata !DIExpression()), !dbg !6190
  store i8* null, i8** %name_alloc, align 8, !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6195, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6197, metadata !DIExpression()), !dbg !6198
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6199
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6200, !ctir !520
  %1 = load i32, i32* %st_mode, align 8, !dbg !6200, !ctir !137
  store i32 %1, i32* %src_mode, align 4, !dbg !6198
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6205, metadata !DIExpression()), !dbg !6206
  store i8 1, i8* %return_val, align 1, !dbg !6206
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6207, metadata !DIExpression()), !dbg !6208
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6209
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6210, !ctir !3506
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6210
  %tobool = trunc i8 %3 to i1, !dbg !6210, !ctir !139
  %frombool = zext i1 %tobool to i8, !dbg !6208
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6208
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6211
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6212
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6213, !ctir !3506
  %6 = load i32, i32* %dereference, align 4, !dbg !6213, !ctir !73
  %cmp = icmp eq i32 %6, 2, !dbg !6214
  %7 = zext i1 %cmp to i64, !dbg !6212
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6212
  %or = or i32 0, %cond, !dbg !6215
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6216
  store i32 %call, i32* %source_desc, align 4, !dbg !6217
  %8 = load i32, i32* %source_desc, align 4, !dbg !6218
  %cmp2 = icmp slt i32 %8, 0, !dbg !6220
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6221

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !6222
  %9 = load i32, i32* %call3, align 4, !dbg !6222, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.144, i64 0, i64 0)) #9, !dbg !6224
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6225
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6225
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6226
  store i1 false, i1* %retval, align 1, !dbg !6227
  br label %return, !dbg !6227

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6228
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #9, !dbg !6230
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6231
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6232

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #16, !dbg !6233
  %12 = load i32, i32* %call9, align 4, !dbg !6233, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.145, i64 0, i64 0)) #9, !dbg !6235
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6236
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6236
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6237
  store i8 0, i8* %return_val, align 1, !dbg !6238
  br label %close_src_desc, !dbg !6239

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6240
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6240, !ctir !520
  %15 = load i64, i64* %st_ino, align 8, !dbg !6240, !ctir !461
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6240, !ctir !470
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6240, !ctir !461
  %cmp14 = icmp eq i64 %15, %16, !dbg !6240
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6240

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6240
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6240, !ctir !520
  %18 = load i64, i64* %st_dev, align 8, !dbg !6240, !ctir !460
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6240, !ctir !470
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6240, !ctir !460
  %cmp16 = icmp eq i64 %18, %19, !dbg !6240
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6242

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.146, i64 0, i64 0)) #9, !dbg !6243
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6245
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6245
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6246
  store i8 0, i8* %return_val, align 1, !dbg !6247
  br label %close_src_desc, !dbg !6248

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6249
  %22 = load i8, i8* %21, align 1, !dbg !6251
  %tobool21 = trunc i8 %22 to i1, !dbg !6251, !ctir !139
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6252

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6253, metadata !DIExpression()), !dbg !6255
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6256
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6257, !ctir !3506
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6257
  %tobool24 = trunc i8 %24 to i1, !dbg !6257, !ctir !139
  %25 = zext i1 %tobool24 to i64, !dbg !6256
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6256
  %or26 = or i32 1, %cond25, !dbg !6258
  store i32 %or26, i32* %open_flags, align 4, !dbg !6255
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6259
  %27 = load i32, i32* %open_flags, align 4, !dbg !6260
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6261
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6262
  %call28 = call i32* @__errno_location() #16, !dbg !6263
  %28 = load i32, i32* %call28, align 4, !dbg !6263, !ctir !5
  store i32 %28, i32* %dest_errno, align 4, !dbg !6264
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6265
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6267, !ctir !3506
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6267
  %tobool29 = trunc i8 %30 to i1, !dbg !6267, !ctir !139
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6268

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6269
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6270, !ctir !3506
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6270
  %tobool30 = trunc i8 %32 to i1, !dbg !6270, !ctir !139
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6271

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6272
  %cmp32 = icmp sle i32 0, %33, !dbg !6273
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6274

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6275
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6278
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6279, !ctir !3506
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6279
  %tobool35 = trunc i8 %36 to i1, !dbg !6279, !ctir !139
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6280
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6281
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6282

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6283
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6286, !ctir !3506
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6286
  %tobool38 = trunc i8 %39 to i1, !dbg !6286, !ctir !139
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6287

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6288
  br label %close_src_and_dst_desc, !dbg !6290

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6291

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6292

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6293
  %cmp43 = icmp slt i32 %40, 0, !dbg !6295
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6296

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6297
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6298, !ctir !3506
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6298
  %tobool45 = trunc i8 %42 to i1, !dbg !6298, !ctir !139
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6299

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6300
  %call47 = call i32 @unlink(i8* %43) #9, !dbg !6303
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6304
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6305

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #16, !dbg !6306
  %44 = load i32, i32* %call50, align 4, !dbg !6306, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !6308
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6309
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6309
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6310
  store i8 0, i8* %return_val, align 1, !dbg !6311
  br label %close_src_desc, !dbg !6312

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6313
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6315, !ctir !3506
  %47 = load i8, i8* %verbose, align 2, !dbg !6315
  %tobool54 = trunc i8 %47 to i1, !dbg !6315, !ctir !139
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6316

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6317
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6318
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6318
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6319
  br label %if.end59, !dbg !6319

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6320
  store i8 1, i8* %49, align 1, !dbg !6321, !ctir !139
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6322
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6324, !ctir !3506
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6324
  %tobool61 = trunc i8 %51 to i1, !dbg !6324, !ctir !139
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6325

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6326
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6329
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6330
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6331
  %56 = load i8, i8* %55, align 1, !dbg !6332
  %tobool63 = trunc i8 %56 to i1, !dbg !6332, !ctir !139
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6333
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !6334
  br i1 %call64, label %if.end66, label %if.then65, !dbg !6335

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !6336
  br label %close_src_desc, !dbg !6338

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !6339

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !6340

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !6341

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !6342
  %59 = load i8, i8* %58, align 1, !dbg !6344
  %tobool70 = trunc i8 %59 to i1, !dbg !6344, !ctir !139
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !6345

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !6346

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !6347), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !6350, metadata !DIExpression()), !dbg !6351
  store i32 65, i32* %open_flags72, align 4, !dbg !6351
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !6352
  %61 = load i32, i32* %open_flags72, align 4, !dbg !6353
  %or73 = or i32 %61, 128, !dbg !6354
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !6355
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6356
  %neg = xor i32 %63, -1, !dbg !6357
  %and = and i32 %62, %neg, !dbg !6358
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !6359
  store i32 %call74, i32* %dest_desc, align 4, !dbg !6360
  %call75 = call i32* @__errno_location() #16, !dbg !6361
  %64 = load i32, i32* %call75, align 4, !dbg !6361, !ctir !5
  store i32 %64, i32* %dest_errno, align 4, !dbg !6362
  %65 = load i32, i32* %dest_desc, align 4, !dbg !6363
  %cmp76 = icmp slt i32 %65, 0, !dbg !6365
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !6366

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !6367
  %cmp78 = icmp eq i32 %66, 17, !dbg !6368
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !6369

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6370
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !6371, !ctir !3506
  %68 = load i8, i8* %move_mode, align 8, !dbg !6371
  %tobool80 = trunc i8 %68 to i1, !dbg !6371, !ctir !139
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !6372

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !6373, metadata !DIExpression()), !dbg !6375
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !6376
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #9, !dbg !6378
  %cmp83 = icmp eq i32 %call82, 0, !dbg !6379
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !6380

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !6381, !ctir !470
  %70 = load i32, i32* %st_mode85, align 8, !dbg !6381, !ctir !137
  %and86 = and i32 %70, 61440, !dbg !6381
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !6381
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !6382

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6383
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !6386, !ctir !3506
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !6386
  %tobool89 = trunc i8 %72 to i1, !dbg !6386, !ctir !139
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !6387

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !6388
  %74 = load i32, i32* %open_flags72, align 4, !dbg !6390
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !6391
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6392
  %neg91 = xor i32 %76, -1, !dbg !6393
  %and92 = and i32 %75, %neg91, !dbg !6394
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !6395
  store i32 %call93, i32* %dest_desc, align 4, !dbg !6396
  %call94 = call i32* @__errno_location() #16, !dbg !6397
  %77 = load i32, i32* %call94, align 4, !dbg !6397, !ctir !5
  store i32 %77, i32* %dest_errno, align 4, !dbg !6398
  br label %if.end97, !dbg !6399

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.147, i64 0, i64 0)) #9, !dbg !6400
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !6402
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !6402
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !6403
  store i8 0, i8* %return_val, align 1, !dbg !6404
  br label %close_src_desc, !dbg !6405

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !6406

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !6407

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !6408
  %cmp100 = icmp slt i32 %79, 0, !dbg !6410
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !6411

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !6412
  %cmp102 = icmp eq i32 %80, 21, !dbg !6413
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !6414

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !6415
  %82 = load i8, i8* %81, align 1, !dbg !6416, !ctir !181
  %conv = sext i8 %82 to i32, !dbg !6416
  %tobool104 = icmp ne i32 %conv, 0, !dbg !6416
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !6417

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !6418
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !6419
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !6420
  %sub = sub i64 %call106, 1, !dbg !6421
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !6418, !ctir !180
  %85 = load i8, i8* %arrayidx, align 1, !dbg !6418
  %conv107 = sext i8 %85 to i32, !dbg !6418
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !6422
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6423

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !6424
  br label %if.end111, !dbg !6425

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !6426

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !6427
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !6429
  %cmp114 = icmp slt i32 %86, 0, !dbg !6431
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !6432

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !6433
  %cmp117 = icmp eq i32 %87, 2, !dbg !6436
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !6437

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !6438
  %89 = load i8, i8* %88, align 1, !dbg !6439
  %tobool120 = trunc i8 %89 to i1, !dbg !6439, !ctir !139
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !6440

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6441
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !6442, !ctir !3506
  %91 = load i8, i8* %move_mode122, align 8, !dbg !6442
  %tobool123 = trunc i8 %91 to i1, !dbg !6442, !ctir !139
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !6443

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !6444
  store i8 1, i8* %92, align 1, !dbg !6446, !ctir !139
  br label %open_with_O_CREAT, !dbg !6447

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !6448
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.148, i64 0, i64 0)) #9, !dbg !6449
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !6450
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !6450
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !6451
  store i8 0, i8* %return_val, align 1, !dbg !6452
  br label %close_src_desc, !dbg !6453

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !6454
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #9, !dbg !6456
  %cmp130 = icmp ne i32 %call129, 0, !dbg !6457
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !6458

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #16, !dbg !6459
  %96 = load i32, i32* %call133, align 4, !dbg !6459, !ctir !5
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.145, i64 0, i64 0)) #9, !dbg !6461
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !6462
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !6462
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !6463
  store i8 0, i8* %return_val, align 1, !dbg !6464
  br label %close_src_and_dst_desc, !dbg !6465

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !6466
  %tobool137 = trunc i8 %98 to i1, !dbg !6466
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !6468

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6469
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !6470, !ctir !3506
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !6470, !ctir !92
  %tobool140 = icmp ne i32 %100, 0, !dbg !6469
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !6471

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !6472, metadata !DIExpression()), !dbg !6474
  %101 = load i32, i32* %dest_desc, align 4, !dbg !6475
  %102 = load i32, i32* %source_desc, align 4, !dbg !6476
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !6477
  %cmp143 = icmp eq i32 %call142, 0, !dbg !6478
  %frombool145 = zext i1 %cmp143 to i8, !dbg !6474
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !6474
  %103 = load i8, i8* %clone_ok, align 1, !dbg !6479
  %tobool146 = trunc i8 %103 to i1, !dbg !6479
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !6481

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6482
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !6483, !ctir !3506
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !6483, !ctir !92
  %cmp150 = icmp eq i32 %105, 2, !dbg !6484
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !6485

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !6486
  %tobool153 = trunc i8 %106 to i1, !dbg !6486
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !6489

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #16, !dbg !6490
  %107 = load i32, i32* %call155, align 4, !dbg !6490, !ctir !5
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.149, i64 0, i64 0)) #9, !dbg !6492
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !6493
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !6493
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !6494
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !6494
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !6495
  store i8 0, i8* %return_val, align 1, !dbg !6496
  br label %close_src_and_dst_desc, !dbg !6497

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !6498
  br label %if.end160, !dbg !6499

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !6500

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !6501
  %tobool162 = trunc i8 %110 to i1, !dbg !6501
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !6503

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !6504, metadata !DIExpression()), !dbg !6506
  %call164 = call i32 @getpagesize() #16, !dbg !6507
  %conv165 = sext i32 %call164 to i64, !dbg !6507
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !6506
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !6508, metadata !DIExpression()), !dbg !6509
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !6510
  store i64 %call166, i64* %buf_size, align 8, !dbg !6509
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !6511, metadata !DIExpression()), !dbg !6512
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6513, !ctir !470
  %111 = load i64, i64* %st_blksize, align 8, !dbg !6513, !ctir !483
  %cmp167 = icmp slt i64 0, %111, !dbg !6513
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !6513

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6513, !ctir !470
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !6513, !ctir !483
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !6513
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !6513

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6513, !ctir !470
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !6513, !ctir !483
  br label %cond.end, !dbg !6513

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !6513

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !6513
  store i64 %cond174, i64* %hole_size, align 8, !dbg !6512
  %114 = load i32, i32* %source_desc, align 4, !dbg !6514
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !6515
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i8 0, i8* %make_holes, align 1, !dbg !6517
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !6518, metadata !DIExpression()), !dbg !6519
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !6520
  %frombool176 = zext i1 %call175 to i8, !dbg !6519
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !6519
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6521, !ctir !470
  %115 = load i32, i32* %st_mode177, align 8, !dbg !6521, !ctir !137
  %and178 = and i32 %115, 61440, !dbg !6521
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !6521
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !6523

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6524
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !6527, !ctir !3506
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !6527, !ctir !86
  %cmp182 = icmp eq i32 %117, 3, !dbg !6528
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !6529

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !6530
  br label %if.end185, !dbg !6531

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6532
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !6534, !ctir !3506
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !6534, !ctir !86
  %cmp187 = icmp eq i32 %119, 2, !dbg !6535
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !6536

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !6537
  %tobool190 = trunc i8 %120 to i1, !dbg !6537
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !6538

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !6539
  br label %if.end193, !dbg !6540

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !6541

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !6542
  %tobool195 = trunc i8 %121 to i1, !dbg !6542
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !6544

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !6545, metadata !DIExpression()), !dbg !6547
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !6548
  %sub197 = sub i64 9223372036854775807, %122, !dbg !6549
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !6547
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !6550, metadata !DIExpression()), !dbg !6551
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !6552
  %123 = load i64, i64* %buf_size, align 8, !dbg !6553
  %124 = load i64, i64* %blcm_max, align 8, !dbg !6554
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #16, !dbg !6555
  store i64 %call199, i64* %blcm, align 8, !dbg !6551
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !6556, !ctir !470
  %125 = load i32, i32* %st_mode200, align 8, !dbg !6556, !ctir !137
  %and201 = and i32 %125, 61440, !dbg !6556
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !6556
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !6558

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6559, !ctir !470
  %126 = load i64, i64* %st_size, align 8, !dbg !6559, !ctir !30
  %127 = load i64, i64* %buf_size, align 8, !dbg !6560
  %cmp205 = icmp ult i64 %126, %127, !dbg !6561
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !6562

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6563, !ctir !470
  %128 = load i64, i64* %st_size208, align 8, !dbg !6563, !ctir !30
  %add = add nsw i64 %128, 1, !dbg !6564
  store i64 %add, i64* %buf_size, align 8, !dbg !6565
  br label %if.end209, !dbg !6566

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !6567
  %sub210 = sub i64 %129, 1, !dbg !6568
  %130 = load i64, i64* %buf_size, align 8, !dbg !6569
  %add211 = add i64 %130, %sub210, !dbg !6569
  store i64 %add211, i64* %buf_size, align 8, !dbg !6569
  %131 = load i64, i64* %buf_size, align 8, !dbg !6570
  %132 = load i64, i64* %blcm, align 8, !dbg !6571
  %rem = urem i64 %131, %132, !dbg !6572
  %133 = load i64, i64* %buf_size, align 8, !dbg !6573
  %sub212 = sub i64 %133, %rem, !dbg !6573
  store i64 %sub212, i64* %buf_size, align 8, !dbg !6573
  %134 = load i64, i64* %buf_size, align 8, !dbg !6574
  %cmp213 = icmp eq i64 %134, 0, !dbg !6576
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !6577

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !6578
  %136 = load i64, i64* %buf_size, align 8, !dbg !6579
  %cmp216 = icmp ult i64 %135, %136, !dbg !6580
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6581

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !6582
  store i64 %137, i64* %buf_size, align 8, !dbg !6583
  br label %if.end219, !dbg !6584

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !6585

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !6586
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !6587
  %add221 = add i64 %138, %139, !dbg !6588
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !6589
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !6590
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !6591
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !6592
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !6593
  store i8* %call223, i8** %buf, align 8, !dbg !6594
  %142 = load i8, i8* %sparse_src, align 1, !dbg !6595
  %tobool224 = trunc i8 %142 to i1, !dbg !6595
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !6597

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !6598, metadata !DIExpression()), !dbg !6600
  %143 = load i32, i32* %source_desc, align 4, !dbg !6601
  %144 = load i32, i32* %dest_desc, align 4, !dbg !6603
  %145 = load i8*, i8** %buf, align 8, !dbg !6604
  %146 = load i64, i64* %buf_size, align 8, !dbg !6605
  %147 = load i64, i64* %hole_size, align 8, !dbg !6606
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6607, !ctir !470
  %148 = load i64, i64* %st_size226, align 8, !dbg !6607, !ctir !30
  %149 = load i8, i8* %make_holes, align 1, !dbg !6608
  %tobool227 = trunc i8 %149 to i1, !dbg !6608
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !6608

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6609
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !6610, !ctir !3506
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !6610, !ctir !86
  br label %cond.end232, !dbg !6608

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !6608

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !6608
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !6611
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !6612
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !6613
  br i1 %call234, label %if.then235, label %if.end236, !dbg !6614

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !6615

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !6616
  %tobool237 = trunc i8 %154 to i1, !dbg !6616
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !6618

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !6619
  br label %close_src_and_dst_desc, !dbg !6621

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !6622

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !6623, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !6625, metadata !DIExpression()), !dbg !6626
  %155 = load i32, i32* %source_desc, align 4, !dbg !6627
  %156 = load i32, i32* %dest_desc, align 4, !dbg !6629
  %157 = load i8*, i8** %buf, align 8, !dbg !6630
  %158 = load i64, i64* %buf_size, align 8, !dbg !6631
  %159 = load i8, i8* %make_holes, align 1, !dbg !6632
  %tobool241 = trunc i8 %159 to i1, !dbg !6632
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !6632

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !6633
  br label %cond.end245, !dbg !6632

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !6632

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !6632
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6634
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !6635, !ctir !3506
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !6635, !ctir !86
  %cmp248 = icmp eq i32 %162, 3, !dbg !6636
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !6637
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !6638
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !6639
  br i1 %call250, label %if.else252, label %if.then251, !dbg !6640

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !6641
  br label %close_src_and_dst_desc, !dbg !6643

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !6644
  %tobool253 = trunc i8 %165 to i1, !dbg !6644
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !6646

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !6647
  %167 = load i64, i64* %n_read, align 8, !dbg !6648
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #9, !dbg !6649
  %cmp257 = icmp slt i32 %call256, 0, !dbg !6650
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !6651

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #16, !dbg !6652
  %168 = load i32, i32* %call260, align 4, !dbg !6652, !ctir !5
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.150, i64 0, i64 0)) #9, !dbg !6654
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !6655
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !6655
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !6656
  store i8 0, i8* %return_val, align 1, !dbg !6657
  br label %close_src_and_dst_desc, !dbg !6658

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !6659

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !6501

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !6660), !dbg !6661
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6662
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !6664, !ctir !3506
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !6664
  %tobool266 = trunc i8 %171 to i1, !dbg !6664, !ctir !139
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !6665

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6666, metadata !DIExpression()), !dbg !6668
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6669, !ctir !518
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6670
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !6671
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !6671
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !6671
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !6671
  store i64 %175, i64* %174, align 8, !dbg !6671
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !6671
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !6671
  store i64 %177, i64* %176, align 8, !dbg !6671
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !6671
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !6671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !6671
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6672, !ctir !518
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6673
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !6674
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !6674
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !6674
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !6674
  store i64 %183, i64* %182, align 8, !dbg !6674
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !6674
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !6674
  store i64 %185, i64* %184, align 8, !dbg !6674
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !6674
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !6674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !6674
  %188 = load i32, i32* %dest_desc, align 4, !dbg !6675
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !6677
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6678, !ctir !518
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !6679
  %cmp274 = icmp ne i32 %call273, 0, !dbg !6680
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !6681

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #16, !dbg !6682
  %190 = load i32, i32* %call277, align 4, !dbg !6682, !ctir !5
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !6684
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !6685
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !6685
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !6686
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6687
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !6689, !ctir !3506
  %193 = load i8, i8* %require_preserve, align 4, !dbg !6689
  %tobool280 = trunc i8 %193 to i1, !dbg !6689, !ctir !139
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !6690

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !6691
  br label %close_src_and_dst_desc, !dbg !6693

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !6694

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !6695

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6696
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !6698, !ctir !3506
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !6698
  %tobool285 = trunc i8 %195 to i1, !dbg !6698, !ctir !139
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !6699

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6700
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !6700, !ctir !520
  %197 = load i32, i32* %st_uid, align 4, !dbg !6700, !ctir !125
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !6700, !ctir !470
  %198 = load i32, i32* %st_uid288, align 4, !dbg !6700, !ctir !125
  %cmp289 = icmp eq i32 %197, %198, !dbg !6700
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !6700

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6700
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !6700, !ctir !520
  %200 = load i32, i32* %st_gid, align 8, !dbg !6700, !ctir !127
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !6700, !ctir !470
  %201 = load i32, i32* %st_gid292, align 8, !dbg !6700, !ctir !127
  %cmp293 = icmp eq i32 %200, %201, !dbg !6700
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !6701

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6702
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !6704
  %204 = load i32, i32* %dest_desc, align 4, !dbg !6705
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6706
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !6707
  %207 = load i8, i8* %206, align 1, !dbg !6708
  %tobool296 = trunc i8 %207 to i1, !dbg !6708, !ctir !139
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !6709
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !6710

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !6711
  br label %close_src_and_dst_desc, !dbg !6713

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !6714
  %and299 = and i32 %208, -3585, !dbg !6714
  store i32 %and299, i32* %src_mode, align 4, !dbg !6714
  br label %sw.epilog, !dbg !6715

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !6716

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6717
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !6719, !ctir !3506
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !6719
  %tobool301 = trunc i8 %210 to i1, !dbg !6719, !ctir !139
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !6720

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !6721, metadata !DIExpression()), !dbg !6723
  store i8 0, i8* %access_changed, align 1, !dbg !6723
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6724, !ctir !470
  %211 = load i32, i32* %st_mode303, align 8, !dbg !6724, !ctir !137
  %and304 = and i32 %211, 128, !dbg !6726
  %tobool305 = icmp ne i32 %and304, 0, !dbg !6726
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !6727

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #9, !dbg !6728
  %cmp308 = icmp ne i32 %call307, 0, !dbg !6729
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !6730

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !6731
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !6733
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !6734
  %cmp312 = icmp eq i32 %call311, 0, !dbg !6735
  %frombool314 = zext i1 %cmp312 to i8, !dbg !6736
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !6736
  br label %if.end315, !dbg !6737

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !6738
  %215 = load i32, i32* %source_desc, align 4, !dbg !6740
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !6741
  %217 = load i32, i32* %dest_desc, align 4, !dbg !6742
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6743
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !6744
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !6745

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6746
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !6747, !ctir !3506
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6747
  %tobool318 = trunc i8 %220 to i1, !dbg !6747, !ctir !139
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !6748

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !6749
  br label %if.end321, !dbg !6750

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !6751
  %tobool322 = trunc i8 %221 to i1, !dbg !6751
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !6753

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !6754
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !6755
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !6756
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6757
  %neg324 = xor i32 %225, -1, !dbg !6758
  %and325 = and i32 %224, %neg324, !dbg !6759
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !6760
  br label %if.end327, !dbg !6760

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !6761

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !6762
  %227 = load i32, i32* %dest_desc, align 4, !dbg !6763
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6764
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !6765
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6766
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !6768, !ctir !3506
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !6768
  %tobool329 = trunc i8 %230 to i1, !dbg !6768, !ctir !139
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !6769

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6770
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !6771, !ctir !3506
  %232 = load i8, i8* %move_mode332, align 8, !dbg !6771
  %tobool333 = trunc i8 %232 to i1, !dbg !6771, !ctir !139
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !6772

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !6773
  %234 = load i32, i32* %source_desc, align 4, !dbg !6776
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !6777
  %236 = load i32, i32* %dest_desc, align 4, !dbg !6778
  %237 = load i32, i32* %src_mode, align 4, !dbg !6779
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !6780
  %cmp337 = icmp ne i32 %call336, 0, !dbg !6781
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !6782

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6783
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !6784, !ctir !3506
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !6784
  %tobool341 = trunc i8 %239 to i1, !dbg !6784, !ctir !139
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !6785

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !6786
  br label %if.end344, !dbg !6787

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !6788

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6789
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !6791, !ctir !3506
  %241 = load i8, i8* %set_mode, align 1, !dbg !6791
  %tobool346 = trunc i8 %241 to i1, !dbg !6791, !ctir !139
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !6792

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !6793
  %243 = load i32, i32* %dest_desc, align 4, !dbg !6796
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6797
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !6798, !ctir !3506
  %245 = load i32, i32* %mode, align 8, !dbg !6798, !ctir !136
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !6799
  %cmp349 = icmp ne i32 %call348, 0, !dbg !6800
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !6801

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !6802
  br label %if.end352, !dbg !6803

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !6804

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6805
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !6807, !ctir !3506
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6807
  %tobool354 = trunc i8 %247 to i1, !dbg !6807, !ctir !139
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !6808

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !6809
  %249 = load i8, i8* %248, align 1, !dbg !6810
  %tobool357 = trunc i8 %249 to i1, !dbg !6810, !ctir !139
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !6811

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !6812
  %251 = load i32, i32* %dest_desc, align 4, !dbg !6815
  %call360 = call i32 @cached_umask(), !dbg !6816
  %neg361 = xor i32 %call360, -1, !dbg !6817
  %and362 = and i32 438, %neg361, !dbg !6818
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !6819
  %cmp364 = icmp ne i32 %call363, 0, !dbg !6820
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !6821

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !6822
  br label %if.end367, !dbg !6823

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !6824

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6825
  %tobool369 = icmp ne i32 %252, 0, !dbg !6825
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !6827

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !6828
  %neg372 = xor i32 %call371, -1, !dbg !6830
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6831
  %and373 = and i32 %253, %neg372, !dbg !6831
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !6831
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6832
  %tobool374 = icmp ne i32 %254, 0, !dbg !6832
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !6834

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !6835
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !6836
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !6837
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !6838
  %cmp377 = icmp ne i32 %call376, 0, !dbg !6839
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !6840

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #16, !dbg !6841
  %258 = load i32, i32* %call380, align 4, !dbg !6841, !ctir !5
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !6843
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !6844
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !6844
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !6845
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6846
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !6848, !ctir !3506
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !6848
  %tobool384 = trunc i8 %261 to i1, !dbg !6848, !ctir !139
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !6849

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !6850
  br label %if.end386, !dbg !6851

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !6852

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !6853

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !6771

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !6854), !dbg !6855
  %262 = load i32, i32* %dest_desc, align 4, !dbg !6856
  %call392 = call i32 @close(i32 %262), !dbg !6858
  %cmp393 = icmp slt i32 %call392, 0, !dbg !6859
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !6860

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #16, !dbg !6861
  %263 = load i32, i32* %call396, align 4, !dbg !6861, !ctir !5
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.151, i64 0, i64 0)) #9, !dbg !6863
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !6864
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !6864
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !6865
  store i8 0, i8* %return_val, align 1, !dbg !6866
  br label %if.end399, !dbg !6867

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !6868

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !6869), !dbg !6870
  %265 = load i32, i32* %source_desc, align 4, !dbg !6871
  %call400 = call i32 @close(i32 %265), !dbg !6873
  %cmp401 = icmp slt i32 %call400, 0, !dbg !6874
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !6875

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #16, !dbg !6876
  %266 = load i32, i32* %call404, align 4, !dbg !6876, !ctir !5
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.151, i64 0, i64 0)) #9, !dbg !6878
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !6879
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !6879
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !6880
  store i8 0, i8* %return_val, align 1, !dbg !6881
  br label %if.end407, !dbg !6882

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !6883
  call void @free(i8* %268) #9, !dbg !6884
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !6885
  call void @free(i8* %269) #9, !dbg !6886
  %270 = load i8, i8* %return_val, align 1, !dbg !6887
  %tobool408 = trunc i8 %270 to i1, !dbg !6887
  store i1 %tobool408, i1* %retval, align 1, !dbg !6888
  br label %return, !dbg !6888

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !6889
  ret i1 %271, !dbg !6889
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !6890 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !6891
  %cmp = icmp ne i32 %call, 0, !dbg !6893
  br i1 %cmp, label %if.then, label %if.end, !dbg !6894

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6895
  %0 = load i32, i32* %call1, align 4, !dbg !6895, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.143, i64 0, i64 0)) #9, !dbg !6895
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !6895
  unreachable, !dbg !6895

if.end:                                           ; preds = %entry
  ret void, !dbg !6896
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #10 !dbg !6897 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  %call = call i32* @__errno_location() #16, !dbg !6900
  %0 = load i32, i32* %call, align 4, !dbg !6900, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !6901
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !6902

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6903
  %1 = load i32, i32* %call1, align 4, !dbg !6903, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !6904
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6905

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6906
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !6907, !ctir !3506
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !6907
  %tobool = trunc i8 %3 to i1, !dbg !6907, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !6908
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6909
  ret i1 %4, !dbg !6910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !6911 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6920, metadata !DIExpression()), !dbg !6921
  %0 = load i8*, i8** %file.addr, align 8, !dbg !6922
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !6923
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !6924
  store i32 %call, i32* %err, align 4, !dbg !6921
  %2 = load i32, i32* %err, align 4, !dbg !6925
  %tobool = icmp ne i32 %2, 0, !dbg !6925
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6927

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6928
  %3 = load i32, i32* %call1, align 4, !dbg !6928, !ctir !5
  %cmp = icmp eq i32 %3, 38, !dbg !6929
  br i1 %cmp, label %if.then, label %if.end, !dbg !6930

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !6931
  br label %if.end, !dbg !6932

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !6933
  ret i32 %4, !dbg !6934
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !6935 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !124
  %gid = alloca i32, align 4, !ctir !126
  %old_mode = alloca i32, align 4, !ctir !136
  %new_mode = alloca i32, align 4, !ctir !136
  %restrictive_temp_mode = alloca i32, align 4, !ctir !136
  %saved_errno = alloca i32, align 4, !ctir !5
  %__x = alloca i32, align 4, !ctir !5
  %saved_errno60 = alloca i32, align 4, !ctir !5
  %__x62 = alloca i32, align 4, !ctir !5
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6938, metadata !DIExpression()), !dbg !6939
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !6950, metadata !DIExpression()), !dbg !6951
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6952
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !6953, !ctir !520
  %1 = load i32, i32* %st_uid, align 4, !dbg !6953, !ctir !125
  store i32 %1, i32* %uid, align 4, !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !6954, metadata !DIExpression()), !dbg !6955
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6956
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !6957, !ctir !520
  %3 = load i32, i32* %st_gid, align 8, !dbg !6957, !ctir !127
  store i32 %3, i32* %gid, align 4, !dbg !6955
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !6958
  %tobool = trunc i8 %4 to i1, !dbg !6958
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !6960

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6961
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !6962, !ctir !3506
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !6962
  %tobool1 = trunc i8 %6 to i1, !dbg !6962, !ctir !139
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !6963

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6964
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !6965, !ctir !3506
  %8 = load i8, i8* %move_mode, align 8, !dbg !6965
  %tobool2 = trunc i8 %8 to i1, !dbg !6965, !ctir !139
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !6966

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6967
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !6968, !ctir !3506
  %10 = load i8, i8* %set_mode, align 1, !dbg !6968
  %tobool4 = trunc i8 %10 to i1, !dbg !6968, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end26, !dbg !6969

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !6970, metadata !DIExpression()), !dbg !6972
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6973
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6974, !ctir !520
  %12 = load i32, i32* %st_mode, align 8, !dbg !6974, !ctir !137
  store i32 %12, i32* %old_mode, align 4, !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !6975, metadata !DIExpression()), !dbg !6976
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6977
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !6978, !ctir !3506
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !6978
  %tobool6 = trunc i8 %14 to i1, !dbg !6978, !ctir !139
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !6979

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6980
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !6981, !ctir !3506
  %16 = load i8, i8* %move_mode8, align 8, !dbg !6981
  %tobool9 = trunc i8 %16 to i1, !dbg !6981, !ctir !139
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !6977

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6982
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6983, !ctir !520
  %18 = load i32, i32* %st_mode10, align 8, !dbg !6983, !ctir !137
  br label %cond.end, !dbg !6977

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6984
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !6985, !ctir !3506
  %20 = load i32, i32* %mode, align 8, !dbg !6985, !ctir !136
  br label %cond.end, !dbg !6977

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !6977
  store i32 %cond, i32* %new_mode, align 4, !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !6986, metadata !DIExpression()), !dbg !6987
  %21 = load i32, i32* %old_mode, align 4, !dbg !6988
  %22 = load i32, i32* %new_mode, align 4, !dbg !6989
  %and = and i32 %21, %22, !dbg !6990
  %and11 = and i32 %and, 448, !dbg !6991
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !6987
  %23 = load i32, i32* %old_mode, align 4, !dbg !6992
  %and12 = and i32 %23, 4095, !dbg !6994
  %24 = load i32, i32* %new_mode, align 4, !dbg !6995
  %neg = xor i32 %24, -1, !dbg !6996
  %or = or i32 %neg, 2048, !dbg !6997
  %or13 = or i32 %or, 1024, !dbg !6998
  %or14 = or i32 %or13, 512, !dbg !6999
  %and15 = and i32 %and12, %or14, !dbg !7000
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7000
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !7001

land.lhs.true17:                                  ; preds = %cond.end
  %25 = load i8*, i8** %dst_name.addr, align 8, !dbg !7002
  %26 = load i32, i32* %dest_desc.addr, align 4, !dbg !7003
  %27 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7004
  %call = call i32 @qset_acl(i8* %25, i32 %26, i32 %27), !dbg !7005
  %cmp = icmp ne i32 %call, 0, !dbg !7006
  br i1 %cmp, label %if.then18, label %if.end25, !dbg !7007

if.then18:                                        ; preds = %land.lhs.true17
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7008
  %call19 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %28), !dbg !7011
  br i1 %call19, label %if.end, label %if.then20, !dbg !7012

if.then20:                                        ; preds = %if.then18
  %call21 = call i32* @__errno_location() #16, !dbg !7013
  %29 = load i32, i32* %call21, align 4, !dbg !7013, !ctir !5
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.142, i64 0, i64 0)) #9, !dbg !7014
  %30 = load i8*, i8** %dst_name.addr, align 8, !dbg !7015
  %call23 = call i8* @quotearg_style(i32 4, i8* %30), !dbg !7015
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* %call22, i8* %call23), !dbg !7016
  br label %if.end, !dbg !7016

if.end:                                           ; preds = %if.then20, %if.then18
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7017
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 21, !dbg !7018, !ctir !3506
  %32 = load i8, i8* %require_preserve, align 4, !dbg !7018
  %tobool24 = trunc i8 %32 to i1, !dbg !7018, !ctir !139
  %conv = zext i1 %tobool24 to i32, !dbg !7017
  %sub = sub nsw i32 0, %conv, !dbg !7019
  store i32 %sub, i32* %retval, align 4, !dbg !7020
  br label %return, !dbg !7020

if.end25:                                         ; preds = %land.lhs.true17, %cond.end
  br label %if.end26, !dbg !7021

if.end26:                                         ; preds = %if.end25, %lor.lhs.false3, %entry
  %33 = load i32, i32* %dest_desc.addr, align 4, !dbg !7022
  %cmp27 = icmp ne i32 %33, -1, !dbg !7024
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7025

if.then29:                                        ; preds = %if.end26
  %34 = load i32, i32* %dest_desc.addr, align 4, !dbg !7026
  %35 = load i32, i32* %uid, align 4, !dbg !7029
  %36 = load i32, i32* %gid, align 4, !dbg !7030
  %call30 = call i32 @fchown(i32 %34, i32 %35, i32 %36) #9, !dbg !7031
  %cmp31 = icmp eq i32 %call30, 0, !dbg !7032
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7033

if.then33:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !7034
  br label %return, !dbg !7034

if.end34:                                         ; preds = %if.then29
  %call35 = call i32* @__errno_location() #16, !dbg !7035
  %37 = load i32, i32* %call35, align 4, !dbg !7035, !ctir !5
  %cmp36 = icmp eq i32 %37, 1, !dbg !7037
  br i1 %cmp36, label %if.then42, label %lor.lhs.false38, !dbg !7038

lor.lhs.false38:                                  ; preds = %if.end34
  %call39 = call i32* @__errno_location() #16, !dbg !7039
  %38 = load i32, i32* %call39, align 4, !dbg !7039, !ctir !5
  %cmp40 = icmp eq i32 %38, 22, !dbg !7040
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7041

if.then42:                                        ; preds = %lor.lhs.false38, %if.end34
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7042, metadata !DIExpression()), !dbg !7044
  %call43 = call i32* @__errno_location() #16, !dbg !7045
  %39 = load i32, i32* %call43, align 4, !dbg !7045, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !7044
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7046, metadata !DIExpression()), !dbg !7048
  %40 = load i32, i32* %dest_desc.addr, align 4, !dbg !7048
  %41 = load i32, i32* %gid, align 4, !dbg !7048
  %call44 = call i32 @fchown(i32 %40, i32 -1, i32 %41) #9, !dbg !7048
  store i32 %call44, i32* %__x, align 4, !dbg !7048
  %42 = load i32, i32* %__x, align 4, !dbg !7048
  %43 = load i32, i32* %saved_errno, align 4, !dbg !7049
  %call45 = call i32* @__errno_location() #16, !dbg !7050
  store i32 %43, i32* %call45, align 4, !dbg !7051, !ctir !5
  br label %if.end46, !dbg !7052

if.end46:                                         ; preds = %if.then42, %lor.lhs.false38
  br label %if.end66, !dbg !7053

if.else:                                          ; preds = %if.end26
  %44 = load i8*, i8** %dst_name.addr, align 8, !dbg !7054
  %45 = load i32, i32* %uid, align 4, !dbg !7057
  %46 = load i32, i32* %gid, align 4, !dbg !7058
  %call47 = call i32 @lchown(i8* %44, i32 %45, i32 %46) #9, !dbg !7059
  %cmp48 = icmp eq i32 %call47, 0, !dbg !7060
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !7061

if.then50:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7062
  br label %return, !dbg !7062

if.end51:                                         ; preds = %if.else
  %call52 = call i32* @__errno_location() #16, !dbg !7063
  %47 = load i32, i32* %call52, align 4, !dbg !7063, !ctir !5
  %cmp53 = icmp eq i32 %47, 1, !dbg !7065
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !7066

lor.lhs.false55:                                  ; preds = %if.end51
  %call56 = call i32* @__errno_location() #16, !dbg !7067
  %48 = load i32, i32* %call56, align 4, !dbg !7067, !ctir !5
  %cmp57 = icmp eq i32 %48, 22, !dbg !7068
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !7069

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  call void @llvm.dbg.declare(metadata i32* %saved_errno60, metadata !7070, metadata !DIExpression()), !dbg !7072
  %call61 = call i32* @__errno_location() #16, !dbg !7073
  %49 = load i32, i32* %call61, align 4, !dbg !7073, !ctir !5
  store i32 %49, i32* %saved_errno60, align 4, !dbg !7072
  call void @llvm.dbg.declare(metadata i32* %__x62, metadata !7074, metadata !DIExpression()), !dbg !7076
  %50 = load i8*, i8** %dst_name.addr, align 8, !dbg !7076
  %51 = load i32, i32* %gid, align 4, !dbg !7076
  %call63 = call i32 @lchown(i8* %50, i32 -1, i32 %51) #9, !dbg !7076
  store i32 %call63, i32* %__x62, align 4, !dbg !7076
  %52 = load i32, i32* %__x62, align 4, !dbg !7076
  %53 = load i32, i32* %saved_errno60, align 4, !dbg !7077
  %call64 = call i32* @__errno_location() #16, !dbg !7078
  store i32 %53, i32* %call64, align 4, !dbg !7079, !ctir !5
  br label %if.end65, !dbg !7080

if.end65:                                         ; preds = %if.then59, %lor.lhs.false55
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end46
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7081
  %call67 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %54) #14, !dbg !7083
  br i1 %call67, label %if.end76, label %if.then68, !dbg !7084

if.then68:                                        ; preds = %if.end66
  %call69 = call i32* @__errno_location() #16, !dbg !7085
  %55 = load i32, i32* %call69, align 4, !dbg !7085, !ctir !5
  %call70 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !7087
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7088
  %call71 = call i8* @quotearg_style(i32 4, i8* %56), !dbg !7088
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %55, i8* %call70, i8* %call71), !dbg !7089
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7090
  %require_preserve72 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %57, i32 0, i32 21, !dbg !7092, !ctir !3506
  %58 = load i8, i8* %require_preserve72, align 4, !dbg !7092
  %tobool73 = trunc i8 %58 to i1, !dbg !7092, !ctir !139
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !7093

if.then74:                                        ; preds = %if.then68
  store i32 -1, i32* %retval, align 4, !dbg !7094
  br label %return, !dbg !7094

if.end75:                                         ; preds = %if.then68
  br label %if.end76, !dbg !7095

if.end76:                                         ; preds = %if.end75, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !7096
  br label %return, !dbg !7096

return:                                           ; preds = %if.end76, %if.then74, %if.then50, %if.then33, %if.end
  %59 = load i32, i32* %retval, align 4, !dbg !7097
  ret i32 %59, !dbg !7097
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7098 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %src_path, i8** %src_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  store i8* %dst_path, i8** %dst_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store i32 %dst_fd, i32* %dst_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  ret i1 true, !dbg !7111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7112 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7121
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7122
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7123
  ret void, !dbg !7124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !589 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7125
  %cmp = icmp eq i32 %0, -1, !dbg !7127
  br i1 %cmp, label %if.then, label %if.end, !dbg !7128

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #9, !dbg !7129
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7131
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7132
  %call1 = call i32 @umask(i32 %1) #9, !dbg !7133
  br label %if.end, !dbg !7134

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7135
  ret i32 %2, !dbg !7136
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7137 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  %call = call i32* @__errno_location() #16, !dbg !7140
  %0 = load i32, i32* %call, align 4, !dbg !7140, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7141
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7142

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7143
  %1 = load i32, i32* %call1, align 4, !dbg !7143, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7144
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7145

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7146
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7147, !ctir !3506
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7147
  %tobool = trunc i8 %3 to i1, !dbg !7147, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !7148
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7149
  ret i1 %4, !dbg !7150
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7151 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7152, metadata !DIExpression()), !dbg !7153
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7154, metadata !DIExpression()), !dbg !7155
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7156
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7157
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #9, !dbg !7158
  ret i32 %call, !dbg !7159
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7160 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7164, metadata !DIExpression()), !dbg !7165
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7166, !ctir !483
  %cmp = icmp slt i64 0, %0, !dbg !7166
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7166

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7166, !ctir !483
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7166
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7166

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7166, !ctir !483
  br label %cond.end, !dbg !7166

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7166
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7166
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7166

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7166

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7166, !ctir !483
  %cmp8 = icmp slt i64 0, %3, !dbg !7166
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7166

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7166, !ctir !483
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7166
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7166

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7166, !ctir !470
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7166, !ctir !483
  br label %cond.end15, !dbg !7166

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7166

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7166
  br label %cond.end17, !dbg !7166

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7166
  ret i64 %cond18, !dbg !7167
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7168 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7173
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7173, !ctir !520
  %1 = load i32, i32* %st_mode, align 8, !dbg !7173, !ctir !137
  %and = and i32 %1, 61440, !dbg !7173
  %cmp = icmp eq i32 %and, 32768, !dbg !7173
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7174

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7175
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7175, !ctir !520
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7175, !ctir !485
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7176
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7177, !ctir !520
  %5 = load i64, i64* %st_size, align 8, !dbg !7177, !ctir !30
  %div = sdiv i64 %5, 512, !dbg !7178
  %cmp1 = icmp slt i64 %3, %div, !dbg !7179
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7180
  ret i1 %6, !dbg !7181
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7182 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !180
  %p1 = alloca i8*, align 8, !ctir !180
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7189, metadata !DIExpression()), !dbg !7190
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7191
  store i8* %0, i8** %p0, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7192, metadata !DIExpression()), !dbg !7193
  %1 = load i8*, i8** %p0, align 8, !dbg !7194
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7195
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7196, !ctir !181
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7197, !ctir !181
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7193
  %3 = load i8*, i8** %p1, align 8, !dbg !7198
  %4 = load i8*, i8** %p1, align 8, !dbg !7199
  %5 = ptrtoint i8* %4 to i64, !dbg !7200
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7201
  %rem = urem i64 %5, %6, !dbg !7202
  %idx.neg = sub i64 0, %rem, !dbg !7203
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7203, !ctir !181
  ret i8* %add.ptr2, !dbg !7204
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7205 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !7208
  %last_ext_start = alloca i64, align 8, !ctir !437
  %last_ext_len = alloca i64, align 8, !ctir !437
  %dest_pos = alloca i64, align 8, !ctir !437
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %ok = alloca i8, align 1, !ctir !139
  %empty_extent = alloca i8, align 1, !ctir !139
  %i = alloca i32, align 4, !ctir !67
  %ext_start = alloca i64, align 8, !ctir !437
  %ext_len = alloca i64, align 8, !ctir !437
  %ext_hole_size = alloca i64, align 8, !ctir !437
  %nzeros = alloca i64, align 8, !ctir !437
  %n_read = alloca i64, align 8, !ctir !437
  %read_hole = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store i64 %src_total_size, i64* %src_total_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7235, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7237, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7239, metadata !DIExpression()), !dbg !7240
  store i64 0, i64* %last_ext_start, align 8, !dbg !7240
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i64 0, i64* %last_ext_len, align 8, !dbg !7242
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i64 0, i64* %dest_pos, align 8, !dbg !7244
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7245
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7246
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7247
  store i8 0, i8* %1, align 1, !dbg !7248, !ctir !139
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7249, metadata !DIExpression()), !dbg !7250
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7250
  br label %do.body, !dbg !7251

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7252, metadata !DIExpression()), !dbg !7254
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7255
  %frombool = zext i1 %call to i8, !dbg !7254
  store i8 %frombool, i8* %ok, align 1, !dbg !7254
  %2 = load i8, i8* %ok, align 1, !dbg !7256
  %tobool = trunc i8 %2 to i1, !dbg !7256
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7258

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7259, !ctir !7208
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7259
  %tobool1 = trunc i8 %3 to i1, !dbg !7259, !ctir !139
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7262

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !7263

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !7264, !ctir !7208
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !7264
  %tobool3 = trunc i8 %4 to i1, !dbg !7264, !ctir !139
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7266

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7267
  store i8 1, i8* %5, align 1, !dbg !7269, !ctir !139
  store i1 false, i1* %retval, align 1, !dbg !7270
  br label %return, !dbg !7270

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #16, !dbg !7271
  %6 = load i32, i32* %call6, align 4, !dbg !7271, !ctir !5
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.157, i64 0, i64 0)) #9, !dbg !7272
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !7273
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !7273
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !7274
  store i1 false, i1* %retval, align 1, !dbg !7275
  br label %return, !dbg !7275

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !7276, metadata !DIExpression()), !dbg !7277
  store i8 0, i8* %empty_extent, align 1, !dbg !7277
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7278, metadata !DIExpression()), !dbg !7280
  store i32 0, i32* %i, align 4, !dbg !7280
  br label %for.cond, !dbg !7281

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !7282
  %conv = zext i32 %8 to i64, !dbg !7282
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7284, !ctir !7208
  %9 = load i64, i64* %ei_count, align 8, !dbg !7284, !ctir !52
  %cmp = icmp ult i64 %conv, %9, !dbg !7285
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7286

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !7287
  %tobool11 = trunc i8 %10 to i1, !dbg !7287
  br label %lor.end, !dbg !7286

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !7288

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !7294, metadata !DIExpression()), !dbg !7295
  %12 = load i32, i32* %i, align 4, !dbg !7296
  %conv13 = zext i32 %12 to i64, !dbg !7296
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7298, !ctir !7208
  %13 = load i64, i64* %ei_count14, align 8, !dbg !7298, !ctir !52
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !7299
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7300

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7301, !ctir !7208
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7301, !ctir !571
  %15 = load i32, i32* %i, align 4, !dbg !7303
  %idxprom = zext i32 %15 to i64, !dbg !7304
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !7304, !ctir !571
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !7305, !ctir !572
  %16 = load i64, i64* %ext_logical, align 8, !dbg !7305, !ctir !437
  store i64 %16, i64* %ext_start, align 8, !dbg !7306
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7307, !ctir !7208
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !7307, !ctir !571
  %18 = load i32, i32* %i, align 4, !dbg !7308
  %idxprom19 = zext i32 %18 to i64, !dbg !7309
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !7309, !ctir !571
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !7310, !ctir !572
  %19 = load i64, i64* %ext_length, align 8, !dbg !7310, !ctir !437
  store i64 %19, i64* %ext_len, align 8, !dbg !7311
  br label %if.end25, !dbg !7312

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7313
  %dec = add i32 %20, -1, !dbg !7313
  store i32 %dec, i32* %i, align 4, !dbg !7313
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !7315
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7316, !ctir !7208
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !7316, !ctir !571
  %23 = load i32, i32* %i, align 4, !dbg !7317
  %idxprom22 = zext i32 %23 to i64, !dbg !7318
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !7318, !ctir !571
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !7319, !ctir !572
  %24 = load i64, i64* %ext_length24, align 8, !dbg !7319, !ctir !437
  %add = add nsw i64 %21, %24, !dbg !7320
  store i64 %add, i64* %ext_start, align 8, !dbg !7321
  store i64 0, i64* %ext_len, align 8, !dbg !7322
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !7323
  %26 = load i64, i64* %ext_start, align 8, !dbg !7325
  %27 = load i64, i64* %ext_len, align 8, !dbg !7326
  %add26 = add nsw i64 %26, %27, !dbg !7327
  %cmp27 = icmp slt i64 %25, %add26, !dbg !7328
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7329

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !7330
  %29 = load i64, i64* %ext_start, align 8, !dbg !7333
  %cmp30 = icmp slt i64 %28, %29, !dbg !7334
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7335

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !7336
  store i64 %30, i64* %ext_start, align 8, !dbg !7337
  br label %if.end33, !dbg !7338

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !7339
  %32 = load i64, i64* %ext_start, align 8, !dbg !7340
  %sub = sub nsw i64 %31, %32, !dbg !7341
  store i64 %sub, i64* %ext_len, align 8, !dbg !7342
  br label %if.end34, !dbg !7343

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !7344
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !7345
  %sub35 = sub nsw i64 %33, %34, !dbg !7346
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !7347
  %sub36 = sub nsw i64 %sub35, %35, !dbg !7348
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !7349
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !7350
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !7351
  %tobool37 = icmp ne i64 %36, 0, !dbg !7351
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !7353

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !7354
  %38 = load i64, i64* %ext_start, align 8, !dbg !7357
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #9, !dbg !7358
  %cmp40 = icmp slt i64 %call39, 0, !dbg !7359
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7360

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #16, !dbg !7361
  %39 = load i32, i32* %call43, align 4, !dbg !7361, !ctir !5
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.155, i64 0, i64 0)) #9, !dbg !7363
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !7364
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !7364
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !7365
  br label %fail, !dbg !7365

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !7366), !dbg !7367
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7368
  store i1 false, i1* %retval, align 1, !dbg !7369
  br label %return, !dbg !7369

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !7370
  %tobool47 = trunc i8 %41 to i1, !dbg !7370
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !7372

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7373
  %cmp49 = icmp eq i32 %42, 3, !dbg !7374
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !7375

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !7376
  %tobool51 = trunc i8 %43 to i1, !dbg !7376
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !7377

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7378
  %cmp53 = icmp ne i32 %44, 1, !dbg !7379
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !7380

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !7381
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !7384
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7385
  %cmp56 = icmp eq i32 %47, 3, !dbg !7386
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !7387
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !7388
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7389

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !7390

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7391
  br label %if.end81, !dbg !7392

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !7393, metadata !DIExpression()), !dbg !7395
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !7396
  store i64 %49, i64* %nzeros, align 8, !dbg !7395
  %50 = load i8, i8* %empty_extent, align 1, !dbg !7397
  %tobool62 = trunc i8 %50 to i1, !dbg !7397
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !7399

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !7400
  %52 = load i64, i64* %dest_pos, align 8, !dbg !7400
  %sub64 = sub nsw i64 %51, %52, !dbg !7400
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !7400
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !7400
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !7400

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !7400
  %55 = load i64, i64* %dest_pos, align 8, !dbg !7400
  %sub67 = sub nsw i64 %54, %55, !dbg !7400
  br label %cond.end, !dbg !7400

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !7400
  br label %cond.end, !dbg !7400

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !7400
  store i64 %cond, i64* %nzeros, align 8, !dbg !7401
  br label %if.end68, !dbg !7402

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !7403
  %58 = load i64, i64* %nzeros, align 8, !dbg !7405
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !7406
  br i1 %call69, label %if.end74, label %if.then70, !dbg !7407

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #16, !dbg !7408
  %59 = load i32, i32* %call71, align 4, !dbg !7408, !ctir !5
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.158, i64 0, i64 0)) #9, !dbg !7410
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7411
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !7411
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !7412
  br label %fail, !dbg !7413

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !7414
  %62 = load i64, i64* %ext_start, align 8, !dbg !7414
  %cmp75 = icmp slt i64 %61, %62, !dbg !7414
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !7414

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !7414
  br label %cond.end79, !dbg !7414

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !7414
  br label %cond.end79, !dbg !7414

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !7414
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !7415
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !7416

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !7417
  store i64 %65, i64* %last_ext_start, align 8, !dbg !7418
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7419, metadata !DIExpression()), !dbg !7422
  store i8 0, i8* %empty_extent, align 1, !dbg !7423
  %66 = load i64, i64* %ext_len, align 8, !dbg !7424
  store i64 %66, i64* %last_ext_len, align 8, !dbg !7425
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !7426, metadata !DIExpression()), !dbg !7427
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !7428
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !7430
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !7431
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !7432
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7433
  %cmp83 = icmp eq i32 %71, 3, !dbg !7434
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !7433

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !7435
  br label %cond.end87, !dbg !7433

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !7433

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !7433
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !7436
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !7437
  %75 = load i64, i64* %ext_len, align 8, !dbg !7438
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !7439
  br i1 %call89, label %if.end91, label %if.then90, !dbg !7440

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !7441

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !7442
  %77 = load i64, i64* %n_read, align 8, !dbg !7443
  %add92 = add nsw i64 %76, %77, !dbg !7444
  store i64 %add92, i64* %dest_pos, align 8, !dbg !7445
  %78 = load i64, i64* %n_read, align 8, !dbg !7446
  %tobool93 = icmp ne i64 %78, 0, !dbg !7446
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !7448

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !7449
  %tobool95 = trunc i8 %79 to i1, !dbg !7449
  %frombool96 = zext i1 %tobool95 to i8, !dbg !7450
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !7450
  br label %if.end97, !dbg !7451

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !7452
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !7454
  %cmp98 = icmp eq i64 %80, %81, !dbg !7455
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !7456

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7457, !ctir !7208
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !7459, !ctir !139
  br label %for.end, !dbg !7460

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !7461

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !7462
  %inc = add i32 %82, 1, !dbg !7462
  store i32 %inc, i32* %i, align 4, !dbg !7462
  br label %for.cond, !dbg !7463, !llvm.loop !7464

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7466
  br label %do.cond, !dbg !7467

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7468, !ctir !7208
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !7468
  %tobool104 = trunc i8 %83 to i1, !dbg !7468, !ctir !139
  %lnot = xor i1 %tobool104, true, !dbg !7469
  br i1 %lnot, label %do.body, label %do.end, !dbg !7467, !llvm.loop !7470

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !7472
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !7474
  %cmp105 = icmp slt i64 %84, %85, !dbg !7475
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !7476

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7477
  %tobool108 = trunc i8 %86 to i1, !dbg !7477
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !7478

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7479
  %cmp111 = icmp ne i32 %87, 1, !dbg !7480
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !7481

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !7482
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !7483
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #9, !dbg !7484
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7484
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !7479

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !7485
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !7486
  %92 = load i64, i64* %dest_pos, align 8, !dbg !7487
  %sub117 = sub nsw i64 %91, %92, !dbg !7488
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !7489
  br i1 %call118, label %if.end123, label %if.then119, !dbg !7481

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #16, !dbg !7490
  %93 = load i32, i32* %call120, align 4, !dbg !7490, !ctir !5
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.150, i64 0, i64 0)) #9, !dbg !7492
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7493
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !7494
  store i1 false, i1* %retval, align 1, !dbg !7495
  br label %return, !dbg !7495

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7496
  %cmp124 = icmp eq i32 %95, 3, !dbg !7498
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !7499

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !7500
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !7501
  %cmp127 = icmp slt i64 %96, %97, !dbg !7502
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !7503

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !7504
  %99 = load i64, i64* %dest_pos, align 8, !dbg !7505
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !7506
  %101 = load i64, i64* %dest_pos, align 8, !dbg !7507
  %sub130 = sub nsw i64 %100, %101, !dbg !7508
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !7509
  %cmp132 = icmp slt i32 %call131, 0, !dbg !7510
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !7511

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #16, !dbg !7512
  %102 = load i32, i32* %call135, align 4, !dbg !7512, !ctir !5
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.156, i64 0, i64 0)) #9, !dbg !7514
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !7515
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !7515
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !7516
  store i1 false, i1* %retval, align 1, !dbg !7517
  br label %return, !dbg !7517

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !7518
  br label %return, !dbg !7518

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !7519
  ret i1 %104, !dbg !7519
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !7520 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !139
  %psize = alloca i64, align 8, !ctir !437
  %n_read = alloca i64, align 8, !ctir !581
  %csize = alloca i64, align 8, !ctir !52
  %cbuf = alloca i8*, align 8, !ctir !7
  %pbuf = alloca i8*, align 8, !ctir !7
  %prev_hole = alloca i8, align 1, !ctir !139
  %transition = alloca i8, align 1, !ctir !139
  %last_chunk = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7530, metadata !DIExpression()), !dbg !7531
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7532, metadata !DIExpression()), !dbg !7533
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  store i64 %max_n_read, i64* %max_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !7540, metadata !DIExpression()), !dbg !7541
  store i64* %total_n_read, i64** %total_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !7542, metadata !DIExpression()), !dbg !7543
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !7544, metadata !DIExpression()), !dbg !7545
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7546
  store i8 0, i8* %0, align 1, !dbg !7547, !ctir !139
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7548
  store i64 0, i64* %1, align 8, !dbg !7549, !ctir !437
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i8 0, i8* %make_hole, align 1, !dbg !7551
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !7552, metadata !DIExpression()), !dbg !7553
  store i64 0, i64* %psize, align 8, !dbg !7553
  br label %while.cond, !dbg !7554

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !7555
  %tobool = icmp ne i64 %2, 0, !dbg !7554
  br i1 %tobool, label %while.body, label %while.end94, !dbg !7554

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7556, metadata !DIExpression()), !dbg !7558
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !7559
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !7560
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !7561
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !7561
  %cmp = icmp ult i64 %5, %6, !dbg !7561
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7561

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !7561
  br label %cond.end, !dbg !7561

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !7561
  br label %cond.end, !dbg !7561

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !7561
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !7562
  store i64 %call, i64* %n_read, align 8, !dbg !7558
  %9 = load i64, i64* %n_read, align 8, !dbg !7563
  %cmp1 = icmp slt i64 %9, 0, !dbg !7565
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !7566

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #16, !dbg !7567
  %10 = load i32, i32* %call2, align 4, !dbg !7567, !ctir !5
  %cmp3 = icmp eq i32 %10, 4, !dbg !7570
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7571

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !7572, !llvm.loop !7573

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !7575
  %11 = load i32, i32* %call5, align 4, !dbg !7575, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.152, i64 0, i64 0)) #9, !dbg !7576
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !7577
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !7577
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !7578
  store i1 false, i1* %retval, align 1, !dbg !7579
  br label %return, !dbg !7579

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !7580
  %cmp9 = icmp eq i64 %13, 0, !dbg !7582
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7583

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !7584

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !7585
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !7586
  %sub = sub i64 %15, %14, !dbg !7586
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !7586
  %16 = load i64, i64* %n_read, align 8, !dbg !7587
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7588
  %18 = load i64, i64* %17, align 8, !dbg !7589, !ctir !437
  %add = add nsw i64 %18, %16, !dbg !7589
  store i64 %add, i64* %17, align 8, !dbg !7589, !ctir !437
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !7590, metadata !DIExpression()), !dbg !7591
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !7592
  %tobool12 = icmp ne i64 %19, 0, !dbg !7592
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !7592

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !7593
  br label %cond.end15, !dbg !7592

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !7594
  br label %cond.end15, !dbg !7592

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !7592
  store i64 %cond16, i64* %csize, align 8, !dbg !7591
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !7595, metadata !DIExpression()), !dbg !7596
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !7597
  store i8* %22, i8** %cbuf, align 8, !dbg !7596
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !7598, metadata !DIExpression()), !dbg !7599
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !7600
  store i8* %23, i8** %pbuf, align 8, !dbg !7599
  br label %while.cond17, !dbg !7601

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !7602
  %tobool18 = icmp ne i64 %24, 0, !dbg !7601
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !7601

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !7603, metadata !DIExpression()), !dbg !7605
  %25 = load i8, i8* %make_hole, align 1, !dbg !7606
  %tobool20 = trunc i8 %25 to i1, !dbg !7606
  %frombool21 = zext i1 %tobool20 to i8, !dbg !7605
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !7605
  %26 = load i64, i64* %csize, align 8, !dbg !7607
  %27 = load i64, i64* %n_read, align 8, !dbg !7607
  %cmp22 = icmp ult i64 %26, %27, !dbg !7607
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !7607

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !7607
  br label %cond.end25, !dbg !7607

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !7607
  br label %cond.end25, !dbg !7607

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !7607
  store i64 %cond26, i64* %csize, align 8, !dbg !7608
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !7609
  %tobool27 = icmp ne i64 %30, 0, !dbg !7609
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !7611

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !7612
  %tobool28 = icmp ne i64 %31, 0, !dbg !7612
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !7613

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !7614
  %33 = load i64, i64* %csize, align 8, !dbg !7615
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !7616
  %frombool31 = zext i1 %call30 to i8, !dbg !7617
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !7617
  br label %if.end32, !dbg !7618

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !7619, metadata !DIExpression()), !dbg !7620
  %34 = load i8, i8* %make_hole, align 1, !dbg !7621
  %tobool33 = trunc i8 %34 to i1, !dbg !7621
  %conv = zext i1 %tobool33 to i32, !dbg !7621
  %35 = load i8, i8* %prev_hole, align 1, !dbg !7622
  %tobool34 = trunc i8 %35 to i1, !dbg !7622
  %conv35 = zext i1 %tobool34 to i32, !dbg !7622
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !7623
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !7624

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !7625
  %tobool38 = icmp ne i64 %36, 0, !dbg !7624
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !7626
  %frombool39 = zext i1 %37 to i8, !dbg !7620
  store i8 %frombool39, i8* %transition, align 1, !dbg !7620
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !7627, metadata !DIExpression()), !dbg !7628
  %38 = load i64, i64* %n_read, align 8, !dbg !7629
  %39 = load i64, i64* %csize, align 8, !dbg !7630
  %cmp40 = icmp eq i64 %38, %39, !dbg !7631
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !7632

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !7633
  %tobool43 = trunc i8 %40 to i1, !dbg !7633
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !7634

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !7635
  %tobool44 = icmp ne i64 %41, 0, !dbg !7636
  %lnot = xor i1 %tobool44, true, !dbg !7636
  br label %lor.end, !dbg !7634

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !7628
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !7628
  %43 = load i8, i8* %transition, align 1, !dbg !7637
  %tobool46 = trunc i8 %43 to i1, !dbg !7637
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !7639

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !7640
  %tobool48 = trunc i8 %44 to i1, !dbg !7640
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !7641

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !7642
  %tobool51 = trunc i8 %45 to i1, !dbg !7642
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !7645

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !7646
  %47 = load i64, i64* %psize, align 8, !dbg !7647
  %add53 = add i64 %47, %46, !dbg !7647
  store i64 %add53, i64* %psize, align 8, !dbg !7647
  br label %if.end54, !dbg !7648

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !7649
  %tobool55 = trunc i8 %48 to i1, !dbg !7649
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !7651

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !7652
  %50 = load i8*, i8** %pbuf, align 8, !dbg !7655
  %51 = load i64, i64* %psize, align 8, !dbg !7656
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !7657
  %52 = load i64, i64* %psize, align 8, !dbg !7658
  %cmp58 = icmp ne i64 %call57, %52, !dbg !7659
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !7660

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #16, !dbg !7661
  %53 = load i32, i32* %call61, align 4, !dbg !7661, !ctir !5
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.153, i64 0, i64 0)) #9, !dbg !7663
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7664
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7664
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !7665
  store i1 false, i1* %retval, align 1, !dbg !7666
  br label %return, !dbg !7666

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !7667

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !7668
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7671
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !7672
  %tobool65 = trunc i8 %57 to i1, !dbg !7672
  %58 = load i64, i64* %psize, align 8, !dbg !7673
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !7674
  br i1 %call66, label %if.end68, label %if.then67, !dbg !7675

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !7676
  br label %return, !dbg !7676

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !7677
  store i8* %59, i8** %pbuf, align 8, !dbg !7678
  %60 = load i64, i64* %csize, align 8, !dbg !7679
  store i64 %60, i64* %psize, align 8, !dbg !7680
  %61 = load i8, i8* %last_chunk, align 1, !dbg !7681
  %tobool70 = trunc i8 %61 to i1, !dbg !7681
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !7683

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !7684
  %tobool72 = icmp ne i64 %62, 0, !dbg !7684
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !7687

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !7688
  br label %if.end74, !dbg !7689

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !7690
  %tobool75 = trunc i8 %63 to i1, !dbg !7690
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !7692

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !7693
  br label %if.end78, !dbg !7694

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !7695
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !7696

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !7697

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !7698
  %65 = load i64, i64* %csize, align 8, !dbg !7701
  %sub81 = sub i64 9223372036854775807, %65, !dbg !7702
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !7703
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !7704

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !7705
  %67 = load i64, i64* %psize, align 8, !dbg !7706
  %add85 = add i64 %67, %66, !dbg !7706
  store i64 %add85, i64* %psize, align 8, !dbg !7706
  br label %if.end89, !dbg !7707

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.154, i64 0, i64 0)) #9, !dbg !7708
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !7710
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !7710
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !7711
  store i1 false, i1* %retval, align 1, !dbg !7712
  br label %return, !dbg !7712

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !7713
  %70 = load i64, i64* %n_read, align 8, !dbg !7714
  %sub91 = sub i64 %70, %69, !dbg !7714
  store i64 %sub91, i64* %n_read, align 8, !dbg !7714
  %71 = load i64, i64* %csize, align 8, !dbg !7715
  %72 = load i8*, i8** %cbuf, align 8, !dbg !7716
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !7716, !ctir !8
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !7716
  br label %while.cond17, !dbg !7601, !llvm.loop !7717

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !7719
  %tobool92 = trunc i8 %73 to i1, !dbg !7719
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7720
  %frombool93 = zext i1 %tobool92 to i8, !dbg !7721
  store i8 %frombool93, i8* %74, align 1, !dbg !7721, !ctir !139
  br label %while.cond, !dbg !7554, !llvm.loop !7573

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !7722
  %tobool95 = trunc i8 %75 to i1, !dbg !7722
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !7724

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !7725
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !7726
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !7727
  %tobool98 = trunc i8 %78 to i1, !dbg !7727
  %79 = load i64, i64* %psize, align 8, !dbg !7728
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !7729
  br i1 %call99, label %if.else101, label %if.then100, !dbg !7730

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !7731
  br label %return, !dbg !7731

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !7732
  br label %return, !dbg !7732

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !7733
  ret i1 %80, !dbg !7733
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !7734 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  %0 = load i32, i32* %desc.addr, align 4, !dbg !7743
  %cmp = icmp sle i32 0, %0, !dbg !7745
  br i1 %cmp, label %if.then, label %if.end, !dbg !7746

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !7747
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7748
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !7749
  store i32 %call, i32* %retval, align 4, !dbg !7750
  br label %return, !dbg !7750

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7751
  %4 = load i32, i32* %mode.addr, align 4, !dbg !7752
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !7753
  store i32 %call1, i32* %retval, align 4, !dbg !7754
  br label %return, !dbg !7754

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7755
  ret i32 %5, !dbg !7755
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #10 !dbg !7756 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !583
  %word = alloca i8, align 1, !ctir !585
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7763, metadata !DIExpression()), !dbg !7764
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7765
  store i8* %0, i8** %p, align 8, !dbg !7764
  call void @llvm.dbg.declare(metadata i8* %word, metadata !7766, metadata !DIExpression()), !dbg !7767
  %1 = load i64, i64* %length.addr, align 8, !dbg !7768
  %tobool = icmp ne i64 %1, 0, !dbg !7768
  br i1 %tobool, label %if.end, label %if.then, !dbg !7770

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !7771
  br label %return, !dbg !7771

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7772

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !7773
  %and = and i64 %2, 0, !dbg !7773
  %tobool1 = icmp ne i64 %and, 0, !dbg !7772
  br i1 %tobool1, label %while.body, label %while.end, !dbg !7772

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !7774
  %4 = load i8, i8* %3, align 1, !dbg !7777, !ctir !584
  %tobool2 = icmp ne i8 %4, 0, !dbg !7777
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7778

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !7779
  br label %return, !dbg !7779

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !7780
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7780, !ctir !584
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !7780
  %6 = load i64, i64* %length.addr, align 8, !dbg !7781
  %dec = add i64 %6, -1, !dbg !7781
  store i64 %dec, i64* %length.addr, align 8, !dbg !7781
  %7 = load i64, i64* %length.addr, align 8, !dbg !7782
  %tobool5 = icmp ne i64 %7, 0, !dbg !7782
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7784

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !7785
  br label %return, !dbg !7785

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !7772, !llvm.loop !7786

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !7788

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !7789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !7793
  %9 = load i8, i8* %word, align 1, !dbg !7794
  %tobool8 = icmp ne i8 %9, 0, !dbg !7794
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7796

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !7797
  br label %return, !dbg !7797

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !7798
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !7798, !ctir !584
  store i8* %add.ptr, i8** %p, align 8, !dbg !7798
  %11 = load i64, i64* %length.addr, align 8, !dbg !7799
  %sub = sub i64 %11, 1, !dbg !7799
  store i64 %sub, i64* %length.addr, align 8, !dbg !7799
  %12 = load i64, i64* %length.addr, align 8, !dbg !7800
  %tobool11 = icmp ne i64 %12, 0, !dbg !7800
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !7802

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !7803
  br label %return, !dbg !7803

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !7804
  %and14 = and i64 %13, 15, !dbg !7804
  %cmp = icmp eq i64 %and14, 0, !dbg !7806
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !7807

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !7808

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !7809, !llvm.loop !7810

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !7813
  %15 = load i8*, i8** %p, align 8, !dbg !7814
  %16 = load i64, i64* %length.addr, align 8, !dbg !7815
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !7816
  %cmp17 = icmp eq i32 %call, 0, !dbg !7817
  store i1 %cmp17, i1* %retval, align 1, !dbg !7818
  br label %return, !dbg !7818

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !7819
  ret i1 %17, !dbg !7819
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !7820 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !437
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7823, metadata !DIExpression()), !dbg !7824
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7825, metadata !DIExpression()), !dbg !7826
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7827, metadata !DIExpression()), !dbg !7828
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7829, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !7831, metadata !DIExpression()), !dbg !7832
  %0 = load i32, i32* %fd.addr, align 4, !dbg !7833
  %1 = load i64, i64* %size.addr, align 8, !dbg !7834
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #9, !dbg !7835
  store i64 %call, i64* %file_end, align 8, !dbg !7832
  %2 = load i64, i64* %file_end, align 8, !dbg !7836
  %cmp = icmp slt i64 %2, 0, !dbg !7838
  br i1 %cmp, label %if.then, label %if.end, !dbg !7839

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7840
  %3 = load i32, i32* %call1, align 4, !dbg !7840, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.155, i64 0, i64 0)) #9, !dbg !7842
  %4 = load i8*, i8** %name.addr, align 8, !dbg !7843
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !7843
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !7844
  store i1 false, i1* %retval, align 1, !dbg !7845
  br label %return, !dbg !7845

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !7846
  %tobool = trunc i8 %5 to i1, !dbg !7846
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !7848

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !7849
  %7 = load i64, i64* %file_end, align 8, !dbg !7850
  %8 = load i64, i64* %size.addr, align 8, !dbg !7851
  %sub = sub nsw i64 %7, %8, !dbg !7852
  %9 = load i64, i64* %size.addr, align 8, !dbg !7853
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !7854
  %cmp5 = icmp slt i32 %call4, 0, !dbg !7855
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !7856

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #16, !dbg !7857
  %10 = load i32, i32* %call7, align 4, !dbg !7857, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.156, i64 0, i64 0)) #9, !dbg !7859
  %11 = load i8*, i8** %name.addr, align 8, !dbg !7860
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !7860
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !7861
  store i1 false, i1* %retval, align 1, !dbg !7862
  br label %return, !dbg !7862

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !7863
  br label %return, !dbg !7863

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !7864
  ret i1 %12, !dbg !7864
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !7865 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !7870, metadata !DIExpression()), !dbg !7871
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i32 0, i32* %ret, align 4, !dbg !7875
  %0 = load i32, i32* %fd.addr, align 4, !dbg !7876
  %1 = load i64, i64* %offset.addr, align 8, !dbg !7877
  %2 = load i64, i64* %length.addr, align 8, !dbg !7878
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !7879
  store i32 %call, i32* %ret, align 4, !dbg !7880
  %3 = load i32, i32* %ret, align 4, !dbg !7881
  %cmp = icmp slt i32 %3, 0, !dbg !7883
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7884

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7885
  %4 = load i32, i32* %call1, align 4, !dbg !7885, !ctir !5
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !7886
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !7887

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #16, !dbg !7888
  %5 = load i32, i32* %call3, align 4, !dbg !7888, !ctir !5
  %cmp4 = icmp eq i32 %5, 38, !dbg !7889
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7890

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !7891
  br label %if.end, !dbg !7892

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !7893
  ret i32 %6, !dbg !7894
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !7895 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  %0 = load i32, i32* %err.addr, align 4, !dbg !7898
  %cmp = icmp eq i32 %0, 95, !dbg !7899
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7900

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !7900

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !7901
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !7902 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7908
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !7909, !ctir !7208
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7909, !ctir !571
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !7908
  call void @free(i8* %2) #9, !dbg !7910
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7911
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !7912, !ctir !7208
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !7913, !ctir !571
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7914
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !7915, !ctir !7208
  store i64 0, i64* %ei_count, align 8, !dbg !7916, !ctir !52
  ret void, !dbg !7917
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !596 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i64 %n_bytes, i64* %n_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !7922
  %cmp = icmp eq i8* %0, null, !dbg !7924
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7925

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !7926
  %call = call noalias i8* @calloc(i64 %1, i64 1) #9, !dbg !7928
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !7929
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !7930
  %cmp1 = icmp eq i8* %2, null, !dbg !7932
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7933

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !7934
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !7936
  br label %if.end, !dbg !7937

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !7938

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !7939

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !7940
  %tobool = icmp ne i64 %3, 0, !dbg !7939
  br i1 %tobool, label %while.body, label %while.end, !dbg !7939

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !7941, metadata !DIExpression()), !dbg !7943
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !7944
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !7944
  %cmp4 = icmp ult i64 %4, %5, !dbg !7944
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !7944

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !7944
  br label %cond.end, !dbg !7944

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !7944
  br label %cond.end, !dbg !7944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !7944
  store i64 %cond, i64* %n, align 8, !dbg !7943
  %8 = load i32, i32* %fd.addr, align 4, !dbg !7945
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !7947
  %10 = load i64, i64* %n, align 8, !dbg !7948
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !7949
  %11 = load i64, i64* %n, align 8, !dbg !7950
  %cmp6 = icmp ne i64 %call5, %11, !dbg !7951
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7952

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !7953
  br label %return, !dbg !7953

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !7954
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !7955
  %sub = sub i64 %13, %12, !dbg !7955
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !7955
  br label %while.cond, !dbg !7939, !llvm.loop !7956

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !7958
  br label %return, !dbg !7958

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !7959
  ret i1 %14, !dbg !7959
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !7960 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7967
  %and = and i32 %0, 61440, !dbg !7967
  %cmp = icmp eq i32 %and, 40960, !dbg !7967
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7968

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !7969
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !7970

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !7971
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #9, !dbg !7972
  %cmp2 = icmp eq i32 %call1, 0, !dbg !7973
  br label %lor.end, !dbg !7970

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !7974
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !7975 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7978
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !7979
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !7979
  %call = call i32 @geteuid() #9, !dbg !7980
  %cmp = icmp eq i32 %call, 0, !dbg !7981
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7982
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7983, !ctir !3507
  %frombool = zext i1 %cmp to i8, !dbg !7984
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !7984, !ctir !139
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7985
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !7986, !ctir !3507
  %frombool1 = zext i1 %cmp to i8, !dbg !7987
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !7987, !ctir !139
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7988
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !7989, !ctir !3507
  store i32 -1, i32* %rename_errno, align 4, !dbg !7990, !ctir !5
  ret void, !dbg !7991
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !7992 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !611
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8001, metadata !DIExpression()), !dbg !8002
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8003
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8004, !ctir !611
  store i64 %0, i64* %st_ino, align 8, !dbg !8005, !ctir !506
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8006
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8007, !ctir !611
  store i64 %1, i64* %st_dev, align 8, !dbg !8008, !ctir !508
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8009, !ctir !611
  store i8* null, i8** %name, align 8, !dbg !8010, !ctir !7
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8011
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8012
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8013
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8013
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8014
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8015
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8015
  br i1 %tobool, label %if.then, label %if.end, !dbg !8017

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8018
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8018
  call void @src_to_dest_free(i8* %7), !dbg !8019
  br label %if.end, !dbg !8019

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8020
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8021 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8024, metadata !DIExpression()), !dbg !8025
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8026
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8026
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8025
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8027
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8028, !ctir !611
  %3 = load i8*, i8** %name, align 8, !dbg !8028, !ctir !7
  call void @free(i8* %3) #9, !dbg !8029
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8030
  call void @free(i8* %4) #9, !dbg !8031
  ret void, !dbg !8032
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8033 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !611
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8040, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8042, metadata !DIExpression()), !dbg !8043
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8044
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8045, !ctir !611
  store i64 %0, i64* %st_ino, align 8, !dbg !8046, !ctir !506
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8047
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8048, !ctir !611
  store i64 %1, i64* %st_dev, align 8, !dbg !8049, !ctir !508
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8050
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8051
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8052
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8052
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8053
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8054
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8054
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8054

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8055
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8056, !ctir !617
  %7 = load i8*, i8** %name, align 8, !dbg !8056, !ctir !7
  br label %cond.end, !dbg !8054

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8054

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8054
  ret i8* %cond, !dbg !8057
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8058 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !610
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8061, metadata !DIExpression()), !dbg !8062
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8063, metadata !DIExpression()), !dbg !8064
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8069, metadata !DIExpression()), !dbg !8070
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8071
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8071
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8072
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8073
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8074
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8075
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8076, !ctir !611
  store i8* %call1, i8** %name2, align 8, !dbg !8077, !ctir !7
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8078
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8079
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8080, !ctir !611
  store i64 %3, i64* %st_ino, align 8, !dbg !8081, !ctir !506
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8082
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8083
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8084, !ctir !611
  store i64 %5, i64* %st_dev, align 8, !dbg !8085, !ctir !508
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8086
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8087
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8087
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8088
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8088
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8089
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8090
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8092
  br i1 %cmp, label %if.then, label %if.end, !dbg !8093

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8094
  unreachable, !dbg !8094

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8096
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8098
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8099
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8100

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8101
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8101
  call void @src_to_dest_free(i8* %15), !dbg !8103
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8104
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8105, !ctir !611
  %17 = load i8*, i8** %name6, align 8, !dbg !8105, !ctir !7
  store i8* %17, i8** %retval, align 8, !dbg !8106
  br label %return, !dbg !8106

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8107
  br label %return, !dbg !8107

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8108
  ret i8* %18, !dbg !8108
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8109 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8110
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8111
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8112
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8114
  br i1 %cmp, label %if.then, label %if.end, !dbg !8115

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8116
  unreachable, !dbg !8116

if.end:                                           ; preds = %entry
  ret void, !dbg !8117
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8118 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8125
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8125
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8124
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8126
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8127, !ctir !617
  %3 = load i64, i64* %st_ino, align 8, !dbg !8127, !ctir !506
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8128
  %rem = urem i64 %3, %4, !dbg !8129
  ret i64 %rem, !dbg !8130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8131 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !616
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8136, metadata !DIExpression()), !dbg !8137
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8138
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8138
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8137
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8139, metadata !DIExpression()), !dbg !8140
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8141
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8141
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8140
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8142
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8142, !ctir !617
  %5 = load i64, i64* %st_ino, align 8, !dbg !8142, !ctir !506
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8142
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8142, !ctir !617
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8142, !ctir !506
  %cmp = icmp eq i64 %5, %7, !dbg !8142
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8142

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8142
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8142, !ctir !617
  %9 = load i64, i64* %st_dev, align 8, !dbg !8142, !ctir !508
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8142
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8142, !ctir !617
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8142, !ctir !508
  %cmp3 = icmp eq i64 %9, %11, !dbg !8142
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8143
  %13 = zext i1 %12 to i64, !dbg !8142
  %cond = select i1 %12, i32 1, i32 0, !dbg !8142
  %tobool = icmp ne i32 %cond, 0, !dbg !8142
  ret i1 %tobool, !dbg !8144
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8145 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8146
  call void @hash_free(%struct.hash_table* %0), !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8149 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8166
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8167
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8168, !ctir !8153
  store i32 %0, i32* %fd, align 8, !dbg !8169, !ctir !5
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8170
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8171, !ctir !8153
  store i64 0, i64* %ei_count, align 8, !dbg !8172, !ctir !52
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8173
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8174, !ctir !8153
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8175, !ctir !1203
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8176
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8177, !ctir !8153
  store i64 0, i64* %scan_start, align 8, !dbg !8178, !ctir !1202
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8179
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8180, !ctir !8153
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8181, !ctir !139
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8182
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8183, !ctir !8153
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8184, !ctir !139
  %call = call zeroext i1 @extent_need_sync(), !dbg !8185
  %7 = zext i1 %call to i64, !dbg !8185
  %cond = select i1 %call, i32 1, i32 0, !dbg !8185
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8186
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8187, !ctir !8153
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8188, !ctir !67
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8190 {
entry:
  ret i1 true, !dbg !8191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8192 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !67
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1203
  %fiemap_buf = alloca %union.anon.12, align 8, !ctir !8195
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1209
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1235
  %prev_idx = alloca i64, align 8, !ctir !52
  %i = alloca i32, align 4, !ctir !67
  %new_logical = alloca i64, align 8, !ctir !1214
  %length_adjust = alloca i64, align 8, !ctir !1214
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8201, metadata !DIExpression()), !dbg !8202
  store i32 0, i32* %si, align 4, !dbg !8202
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8203, metadata !DIExpression()), !dbg !8204
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8205
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8206, !ctir !8153
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8206, !ctir !1203
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8204
  br label %while.body, !dbg !8207

while.body:                                       ; preds = %entry, %if.end162
  call void @llvm.dbg.declare(metadata %union.anon.12* %fiemap_buf, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8211, metadata !DIExpression()), !dbg !8212
  %f = bitcast %union.anon.12* %fiemap_buf to %struct.fiemap*, !dbg !8213
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8212
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8214, metadata !DIExpression()), !dbg !8215
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8216
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8217, !ctir !1210
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8216, !ctir !1222
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8215
  %3 = bitcast %union.anon.12* %fiemap_buf to i8*, !dbg !8218
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8218
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8219
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8220, !ctir !8153
  %5 = load i64, i64* %scan_start, align 8, !dbg !8220, !ctir !1202
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8221
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8222, !ctir !1210
  store i64 %5, i64* %fm_start, align 8, !dbg !8223, !ctir !1214
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8224
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8225, !ctir !8153
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8225, !ctir !67
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8226
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8227, !ctir !1210
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8228, !ctir !1217
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8229
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8230, !ctir !1210
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8231, !ctir !1217
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8232
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8233, !ctir !8153
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8233, !ctir !1202
  %sub = sub i64 -1, %12, !dbg !8234
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8235
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8236, !ctir !1210
  store i64 %sub, i64* %fm_length, align 8, !dbg !8237, !ctir !1214
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8238
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8240, !ctir !8153
  %15 = load i32, i32* %fd, align 8, !dbg !8240, !ctir !5
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8241
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #9, !dbg !8242
  %cmp = icmp slt i32 %call, 0, !dbg !8243
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8244

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8245
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8248, !ctir !8153
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8248, !ctir !1202
  %cmp5 = icmp eq i64 %18, 0, !dbg !8249
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8250

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8251
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8252, !ctir !8153
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8253, !ctir !139
  br label %if.end, !dbg !8251

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8254
  br label %return, !dbg !8254

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8255
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8257, !ctir !1210
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8257, !ctir !1217
  %cmp8 = icmp eq i32 %21, 0, !dbg !8258
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8259

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8260
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8262, !ctir !8153
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8263, !ctir !139
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8264
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8265, !ctir !8153
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8265, !ctir !1202
  %cmp11 = icmp ne i64 %24, 0, !dbg !8266
  store i1 %cmp11, i1* %retval, align 1, !dbg !8267
  br label %return, !dbg !8267

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8268
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8268, !ctir !8153
  %26 = load i64, i64* %ei_count, align 8, !dbg !8268, !ctir !52
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8268
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8268, !ctir !1210
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8268, !ctir !1217
  %conv = zext i32 %28 to i64, !dbg !8268
  %sub14 = sub i64 -1, %conv, !dbg !8268
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8268
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8268

cond.true:                                        ; preds = %if.end12
  br label %cond.end, !dbg !8268

cond.false:                                       ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.188, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8268
  unreachable, !dbg !8268

29:                                               ; No predecessors!
  br label %cond.end, !dbg !8268

cond.end:                                         ; preds = %29, %cond.true
  %30 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8269
  %fm_mapped_extents17 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %30, i32 0, i32 3, !dbg !8270, !ctir !1210
  %31 = load i32, i32* %fm_mapped_extents17, align 4, !dbg !8270, !ctir !1217
  %conv18 = zext i32 %31 to i64, !dbg !8269
  %32 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8271
  %ei_count19 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %32, i32 0, i32 3, !dbg !8272, !ctir !8153
  %33 = load i64, i64* %ei_count19, align 8, !dbg !8273, !ctir !52
  %add = add i64 %33, %conv18, !dbg !8273
  store i64 %add, i64* %ei_count19, align 8, !dbg !8273, !ctir !52
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8274, metadata !DIExpression()), !dbg !8276
  %34 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8277
  %35 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8278
  %ext_info20 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %35, i32 0, i32 6, !dbg !8279, !ctir !8153
  %36 = load %struct.extent_info*, %struct.extent_info** %ext_info20, align 8, !dbg !8279, !ctir !1203
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %34 to i64, !dbg !8280
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %36 to i64, !dbg !8280
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8280
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8280
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !8276
  %37 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8281
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %37, i32 0, i32 6, !dbg !8282, !ctir !8153
  %38 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8282, !ctir !1203
  %39 = bitcast %struct.extent_info* %38 to i8*, !dbg !8281
  %40 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8283
  %ei_count22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %40, i32 0, i32 3, !dbg !8284, !ctir !8153
  %41 = load i64, i64* %ei_count22, align 8, !dbg !8284, !ctir !52
  %call23 = call i8* @xnrealloc(i8* %39, i64 %41, i64 24), !dbg !8285
  %42 = bitcast i8* %call23 to %struct.extent_info*, !dbg !8285
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8286
  %ext_info24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !8287, !ctir !8153
  store %struct.extent_info* %42, %struct.extent_info** %ext_info24, align 8, !dbg !8288, !ctir !1203
  %44 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8289
  %ext_info25 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %44, i32 0, i32 6, !dbg !8290, !ctir !8153
  %45 = load %struct.extent_info*, %struct.extent_info** %ext_info25, align 8, !dbg !8290, !ctir !1203
  %46 = load i64, i64* %prev_idx, align 8, !dbg !8291
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %45, i64 %46, !dbg !8292, !ctir !1204
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 0, i32* %i, align 4, !dbg !8295
  store i32 0, i32* %i, align 4, !dbg !8296
  br label %for.cond, !dbg !8298

for.cond:                                         ; preds = %for.inc, %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !8299
  %48 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8301
  %fm_mapped_extents26 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %48, i32 0, i32 3, !dbg !8302, !ctir !1210
  %49 = load i32, i32* %fm_mapped_extents26, align 4, !dbg !8302, !ctir !1217
  %cmp27 = icmp ult i32 %47, %49, !dbg !8303
  br i1 %cmp27, label %for.body, label %for.end, !dbg !8304

for.body:                                         ; preds = %for.cond
  %50 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8305
  %51 = load i32, i32* %i, align 4, !dbg !8305
  %idxprom = zext i32 %51 to i64, !dbg !8305
  %arrayidx29 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %50, i64 %idxprom, !dbg !8305, !ctir !1235
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx29, i32 0, i32 0, !dbg !8305, !ctir !1223
  %52 = load i64, i64* %fe_logical, align 8, !dbg !8305, !ctir !1214
  %53 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8305
  %54 = load i32, i32* %i, align 4, !dbg !8305
  %idxprom30 = zext i32 %54 to i64, !dbg !8305
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %53, i64 %idxprom30, !dbg !8305, !ctir !1235
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 2, !dbg !8305, !ctir !1223
  %55 = load i64, i64* %fe_length, align 8, !dbg !8305, !ctir !1214
  %sub32 = sub i64 9223372036854775807, %55, !dbg !8305
  %cmp33 = icmp ule i64 %52, %sub32, !dbg !8305
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !8305

cond.true35:                                      ; preds = %for.body
  br label %cond.end37, !dbg !8305

cond.false36:                                     ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.189, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.188, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8305
  unreachable, !dbg !8305

56:                                               ; No predecessors!
  br label %cond.end37, !dbg !8305

cond.end37:                                       ; preds = %56, %cond.true35
  %57 = load i32, i32* %si, align 4, !dbg !8307
  %tobool = icmp ne i32 %57, 0, !dbg !8307
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8309

land.lhs.true:                                    ; preds = %cond.end37
  %58 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8310
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %58, i32 0, i32 2, !dbg !8311, !ctir !1204
  %59 = load i32, i32* %ext_flags, align 8, !dbg !8311, !ctir !67
  %60 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8312
  %61 = load i32, i32* %i, align 4, !dbg !8313
  %idxprom38 = zext i32 %61 to i64, !dbg !8312
  %arrayidx39 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %60, i64 %idxprom38, !dbg !8312, !ctir !1235
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx39, i32 0, i32 4, !dbg !8314, !ctir !1223
  %62 = load i32, i32* %fe_flags, align 8, !dbg !8314, !ctir !1217
  %and = and i32 %62, -2, !dbg !8315
  %cmp40 = icmp eq i32 %59, %and, !dbg !8316
  br i1 %cmp40, label %land.lhs.true42, label %if.else, !dbg !8317

land.lhs.true42:                                  ; preds = %land.lhs.true
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8318
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 0, !dbg !8319, !ctir !1204
  %64 = load i64, i64* %ext_logical, align 8, !dbg !8319, !ctir !1202
  %65 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8320
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %65, i32 0, i32 1, !dbg !8321, !ctir !1204
  %66 = load i64, i64* %ext_length, align 8, !dbg !8321, !ctir !1202
  %add43 = add nsw i64 %64, %66, !dbg !8322
  %67 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8323
  %68 = load i32, i32* %i, align 4, !dbg !8324
  %idxprom44 = zext i32 %68 to i64, !dbg !8323
  %arrayidx45 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %67, i64 %idxprom44, !dbg !8323, !ctir !1235
  %fe_logical46 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx45, i32 0, i32 0, !dbg !8325, !ctir !1223
  %69 = load i64, i64* %fe_logical46, align 8, !dbg !8325, !ctir !1214
  %cmp47 = icmp eq i64 %add43, %69, !dbg !8326
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !8327

if.then49:                                        ; preds = %land.lhs.true42
  %70 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8328
  %71 = load i32, i32* %i, align 4, !dbg !8330
  %idxprom50 = zext i32 %71 to i64, !dbg !8328
  %arrayidx51 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %70, i64 %idxprom50, !dbg !8328, !ctir !1235
  %fe_length52 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx51, i32 0, i32 2, !dbg !8331, !ctir !1223
  %72 = load i64, i64* %fe_length52, align 8, !dbg !8331, !ctir !1214
  %73 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8332
  %ext_length53 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %73, i32 0, i32 1, !dbg !8333, !ctir !1204
  %74 = load i64, i64* %ext_length53, align 8, !dbg !8334, !ctir !1202
  %add54 = add i64 %74, %72, !dbg !8334
  store i64 %add54, i64* %ext_length53, align 8, !dbg !8334, !ctir !1202
  %75 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8335
  %76 = load i32, i32* %i, align 4, !dbg !8336
  %idxprom55 = zext i32 %76 to i64, !dbg !8335
  %arrayidx56 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %75, i64 %idxprom55, !dbg !8335, !ctir !1235
  %fe_flags57 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx56, i32 0, i32 4, !dbg !8337, !ctir !1223
  %77 = load i32, i32* %fe_flags57, align 8, !dbg !8337, !ctir !1217
  %78 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8338
  %ext_flags58 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %78, i32 0, i32 2, !dbg !8339, !ctir !1204
  store i32 %77, i32* %ext_flags58, align 8, !dbg !8340, !ctir !67
  br label %if.end128, !dbg !8341

if.else:                                          ; preds = %land.lhs.true42, %land.lhs.true, %cond.end37
  %79 = load i32, i32* %si, align 4, !dbg !8342
  %cmp59 = icmp eq i32 %79, 0, !dbg !8344
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false, !dbg !8345

land.lhs.true61:                                  ; preds = %if.else
  %80 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8346
  %scan_start62 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %80, i32 0, i32 1, !dbg !8347, !ctir !8153
  %81 = load i64, i64* %scan_start62, align 8, !dbg !8347, !ctir !1202
  %82 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8348
  %83 = load i32, i32* %i, align 4, !dbg !8349
  %idxprom63 = zext i32 %83 to i64, !dbg !8348
  %arrayidx64 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %82, i64 %idxprom63, !dbg !8348, !ctir !1235
  %fe_logical65 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx64, i32 0, i32 0, !dbg !8350, !ctir !1223
  %84 = load i64, i64* %fe_logical65, align 8, !dbg !8350, !ctir !1214
  %cmp66 = icmp ugt i64 %81, %84, !dbg !8351
  br i1 %cmp66, label %if.then78, label %lor.lhs.false, !dbg !8352

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.else
  %85 = load i32, i32* %si, align 4, !dbg !8353
  %tobool68 = icmp ne i32 %85, 0, !dbg !8353
  br i1 %tobool68, label %land.lhs.true69, label %if.else112, !dbg !8354

land.lhs.true69:                                  ; preds = %lor.lhs.false
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8355
  %ext_logical70 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 0, !dbg !8356, !ctir !1204
  %87 = load i64, i64* %ext_logical70, align 8, !dbg !8356, !ctir !1202
  %88 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8357
  %ext_length71 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %88, i32 0, i32 1, !dbg !8358, !ctir !1204
  %89 = load i64, i64* %ext_length71, align 8, !dbg !8358, !ctir !1202
  %add72 = add nsw i64 %87, %89, !dbg !8359
  %90 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8360
  %91 = load i32, i32* %i, align 4, !dbg !8361
  %idxprom73 = zext i32 %91 to i64, !dbg !8360
  %arrayidx74 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %90, i64 %idxprom73, !dbg !8360, !ctir !1235
  %fe_logical75 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx74, i32 0, i32 0, !dbg !8362, !ctir !1223
  %92 = load i64, i64* %fe_logical75, align 8, !dbg !8362, !ctir !1214
  %cmp76 = icmp ugt i64 %add72, %92, !dbg !8363
  br i1 %cmp76, label %if.then78, label %if.else112, !dbg !8364

if.then78:                                        ; preds = %land.lhs.true69, %land.lhs.true61
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !8365, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !8368, metadata !DIExpression()), !dbg !8369
  %93 = load i32, i32* %si, align 4, !dbg !8370
  %cmp79 = icmp eq i32 %93, 0, !dbg !8372
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !8373

if.then81:                                        ; preds = %if.then78
  %94 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8374
  %scan_start82 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %94, i32 0, i32 1, !dbg !8375, !ctir !8153
  %95 = load i64, i64* %scan_start82, align 8, !dbg !8375, !ctir !1202
  store i64 %95, i64* %new_logical, align 8, !dbg !8376
  br label %if.end87, !dbg !8377

if.else83:                                        ; preds = %if.then78
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8378
  %ext_logical84 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 0, !dbg !8380, !ctir !1204
  %97 = load i64, i64* %ext_logical84, align 8, !dbg !8380, !ctir !1202
  %98 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8381
  %ext_length85 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %98, i32 0, i32 1, !dbg !8382, !ctir !1204
  %99 = load i64, i64* %ext_length85, align 8, !dbg !8382, !ctir !1202
  %add86 = add nsw i64 %97, %99, !dbg !8383
  store i64 %add86, i64* %new_logical, align 8, !dbg !8384
  br label %if.end87

if.end87:                                         ; preds = %if.else83, %if.then81
  %100 = load i64, i64* %new_logical, align 8, !dbg !8385
  %101 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8386
  %102 = load i32, i32* %i, align 4, !dbg !8387
  %idxprom88 = zext i32 %102 to i64, !dbg !8386
  %arrayidx89 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %101, i64 %idxprom88, !dbg !8386, !ctir !1235
  %fe_logical90 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx89, i32 0, i32 0, !dbg !8388, !ctir !1223
  %103 = load i64, i64* %fe_logical90, align 8, !dbg !8388, !ctir !1214
  %sub91 = sub i64 %100, %103, !dbg !8389
  store i64 %sub91, i64* %length_adjust, align 8, !dbg !8390
  %104 = load i64, i64* %length_adjust, align 8, !dbg !8391
  %105 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8393
  %106 = load i32, i32* %i, align 4, !dbg !8394
  %idxprom92 = zext i32 %106 to i64, !dbg !8393
  %arrayidx93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %105, i64 %idxprom92, !dbg !8393, !ctir !1235
  %fe_length94 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx93, i32 0, i32 2, !dbg !8395, !ctir !1223
  %107 = load i64, i64* %fe_length94, align 8, !dbg !8395, !ctir !1214
  %cmp95 = icmp ult i64 %104, %107, !dbg !8396
  br i1 %cmp95, label %if.then97, label %if.end104, !dbg !8397

if.then97:                                        ; preds = %if.end87
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8398
  %scan_start98 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 1, !dbg !8401, !ctir !8153
  %109 = load i64, i64* %scan_start98, align 8, !dbg !8401, !ctir !1202
  %cmp99 = icmp eq i64 %109, 0, !dbg !8402
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !8403

if.then101:                                       ; preds = %if.then97
  %110 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8404
  %initial_scan_failed102 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %110, i32 0, i32 4, !dbg !8405, !ctir !8153
  store i8 1, i8* %initial_scan_failed102, align 8, !dbg !8406, !ctir !139
  br label %if.end103, !dbg !8404

if.end103:                                        ; preds = %if.then101, %if.then97
  store i1 false, i1* %retval, align 1, !dbg !8407
  br label %return, !dbg !8407

if.end104:                                        ; preds = %if.end87
  %111 = load i64, i64* %new_logical, align 8, !dbg !8408
  %112 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8409
  %113 = load i32, i32* %i, align 4, !dbg !8410
  %idxprom105 = zext i32 %113 to i64, !dbg !8409
  %arrayidx106 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %112, i64 %idxprom105, !dbg !8409, !ctir !1235
  %fe_logical107 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx106, i32 0, i32 0, !dbg !8411, !ctir !1223
  store i64 %111, i64* %fe_logical107, align 8, !dbg !8412, !ctir !1214
  %114 = load i64, i64* %length_adjust, align 8, !dbg !8413
  %115 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8414
  %116 = load i32, i32* %i, align 4, !dbg !8415
  %idxprom108 = zext i32 %116 to i64, !dbg !8414
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %115, i64 %idxprom108, !dbg !8414, !ctir !1235
  %fe_length110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 2, !dbg !8416, !ctir !1223
  %117 = load i64, i64* %fe_length110, align 8, !dbg !8417, !ctir !1214
  %sub111 = sub i64 %117, %114, !dbg !8417
  store i64 %sub111, i64* %fe_length110, align 8, !dbg !8417, !ctir !1214
  %118 = load i32, i32* %i, align 4, !dbg !8418
  %dec = add i32 %118, -1, !dbg !8418
  store i32 %dec, i32* %i, align 4, !dbg !8418
  br label %for.inc, !dbg !8419

if.else112:                                       ; preds = %land.lhs.true69, %lor.lhs.false
  %119 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8420
  %ext_info113 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %119, i32 0, i32 6, !dbg !8422, !ctir !8153
  %120 = load %struct.extent_info*, %struct.extent_info** %ext_info113, align 8, !dbg !8422, !ctir !1203
  %121 = load i32, i32* %si, align 4, !dbg !8423
  %idx.ext = zext i32 %121 to i64, !dbg !8424
  %add.ptr114 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %120, i64 %idx.ext, !dbg !8424, !ctir !1204
  store %struct.extent_info* %add.ptr114, %struct.extent_info** %last_ei, align 8, !dbg !8425
  %122 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8426
  %123 = load i32, i32* %i, align 4, !dbg !8427
  %idxprom115 = zext i32 %123 to i64, !dbg !8426
  %arrayidx116 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %122, i64 %idxprom115, !dbg !8426, !ctir !1235
  %fe_logical117 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx116, i32 0, i32 0, !dbg !8428, !ctir !1223
  %124 = load i64, i64* %fe_logical117, align 8, !dbg !8428, !ctir !1214
  %125 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8429
  %ext_logical118 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %125, i32 0, i32 0, !dbg !8430, !ctir !1204
  store i64 %124, i64* %ext_logical118, align 8, !dbg !8431, !ctir !1202
  %126 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8432
  %127 = load i32, i32* %i, align 4, !dbg !8433
  %idxprom119 = zext i32 %127 to i64, !dbg !8432
  %arrayidx120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %126, i64 %idxprom119, !dbg !8432, !ctir !1235
  %fe_length121 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx120, i32 0, i32 2, !dbg !8434, !ctir !1223
  %128 = load i64, i64* %fe_length121, align 8, !dbg !8434, !ctir !1214
  %129 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8435
  %ext_length122 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %129, i32 0, i32 1, !dbg !8436, !ctir !1204
  store i64 %128, i64* %ext_length122, align 8, !dbg !8437, !ctir !1202
  %130 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8438
  %131 = load i32, i32* %i, align 4, !dbg !8439
  %idxprom123 = zext i32 %131 to i64, !dbg !8438
  %arrayidx124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %130, i64 %idxprom123, !dbg !8438, !ctir !1235
  %fe_flags125 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx124, i32 0, i32 4, !dbg !8440, !ctir !1223
  %132 = load i32, i32* %fe_flags125, align 8, !dbg !8440, !ctir !1217
  %133 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8441
  %ext_flags126 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %133, i32 0, i32 2, !dbg !8442, !ctir !1204
  store i32 %132, i32* %ext_flags126, align 8, !dbg !8443, !ctir !67
  %134 = load i32, i32* %si, align 4, !dbg !8444
  %inc = add i32 %134, 1, !dbg !8444
  store i32 %inc, i32* %si, align 4, !dbg !8444
  br label %if.end127

if.end127:                                        ; preds = %if.else112
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then49
  br label %for.inc, !dbg !8445

for.inc:                                          ; preds = %if.end128, %if.end104
  %135 = load i32, i32* %i, align 4, !dbg !8446
  %inc129 = add i32 %135, 1, !dbg !8446
  store i32 %inc129, i32* %i, align 4, !dbg !8446
  br label %for.cond, !dbg !8447, !llvm.loop !8448

for.end:                                          ; preds = %for.cond
  %136 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8450
  %ext_flags130 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %136, i32 0, i32 2, !dbg !8452, !ctir !1204
  %137 = load i32, i32* %ext_flags130, align 8, !dbg !8452, !ctir !67
  %and131 = and i32 %137, 1, !dbg !8453
  %tobool132 = icmp ne i32 %and131, 0, !dbg !8453
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !8454

if.then133:                                       ; preds = %for.end
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8455
  %hit_final_extent134 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !8456, !ctir !8153
  store i8 1, i8* %hit_final_extent134, align 1, !dbg !8457, !ctir !139
  br label %if.end135, !dbg !8455

if.end135:                                        ; preds = %if.then133, %for.end
  %139 = load i32, i32* %si, align 4, !dbg !8458
  %cmp136 = icmp ugt i32 %139, 72, !dbg !8460
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !8461

land.lhs.true138:                                 ; preds = %if.end135
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8462
  %hit_final_extent139 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 5, !dbg !8463, !ctir !8153
  %141 = load i8, i8* %hit_final_extent139, align 1, !dbg !8463
  %tobool140 = trunc i8 %141 to i1, !dbg !8463, !ctir !139
  br i1 %tobool140, label %if.end147, label %if.then141, !dbg !8464

if.then141:                                       ; preds = %land.lhs.true138
  %142 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8465
  %ext_info142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %142, i32 0, i32 6, !dbg !8466, !ctir !8153
  %143 = load %struct.extent_info*, %struct.extent_info** %ext_info142, align 8, !dbg !8466, !ctir !1203
  %144 = load i32, i32* %si, align 4, !dbg !8467
  %dec143 = add i32 %144, -1, !dbg !8467
  store i32 %dec143, i32* %si, align 4, !dbg !8467
  %idx.ext144 = zext i32 %dec143 to i64, !dbg !8468
  %add.ptr145 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %143, i64 %idx.ext144, !dbg !8468, !ctir !1204
  %add.ptr146 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr145, i64 -1, !dbg !8469, !ctir !1204
  store %struct.extent_info* %add.ptr146, %struct.extent_info** %last_ei, align 8, !dbg !8470
  br label %if.end147, !dbg !8471

if.end147:                                        ; preds = %if.then141, %land.lhs.true138, %if.end135
  %145 = load i32, i32* %si, align 4, !dbg !8472
  %conv148 = zext i32 %145 to i64, !dbg !8472
  %146 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8473
  %ei_count149 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %146, i32 0, i32 3, !dbg !8474, !ctir !8153
  store i64 %conv148, i64* %ei_count149, align 8, !dbg !8475, !ctir !52
  %147 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8476
  %hit_final_extent150 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %147, i32 0, i32 5, !dbg !8478, !ctir !8153
  %148 = load i8, i8* %hit_final_extent150, align 1, !dbg !8478
  %tobool151 = trunc i8 %148 to i1, !dbg !8478, !ctir !139
  br i1 %tobool151, label %if.then152, label %if.else153, !dbg !8479

if.then152:                                       ; preds = %if.end147
  br label %while.end, !dbg !8480

if.else153:                                       ; preds = %if.end147
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8481
  %ext_logical154 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 0, !dbg !8482, !ctir !1204
  %150 = load i64, i64* %ext_logical154, align 8, !dbg !8482, !ctir !1202
  %151 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8483
  %ext_length155 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %151, i32 0, i32 1, !dbg !8484, !ctir !1204
  %152 = load i64, i64* %ext_length155, align 8, !dbg !8484, !ctir !1202
  %add156 = add nsw i64 %150, %152, !dbg !8485
  %153 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8486
  %scan_start157 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %153, i32 0, i32 1, !dbg !8487, !ctir !8153
  store i64 %add156, i64* %scan_start157, align 8, !dbg !8488, !ctir !1202
  br label %if.end158

if.end158:                                        ; preds = %if.else153
  %154 = load i32, i32* %si, align 4, !dbg !8489
  %cmp159 = icmp uge i32 %154, 72, !dbg !8491
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !8492

if.then161:                                       ; preds = %if.end158
  br label %while.end, !dbg !8493

if.end162:                                        ; preds = %if.end158
  br label %while.body, !dbg !8207, !llvm.loop !8494

while.end:                                        ; preds = %if.then161, %if.then152
  store i1 true, i1* %retval, align 1, !dbg !8496
  br label %return, !dbg !8496

return:                                           ; preds = %while.end, %if.end103, %if.then9, %if.end
  %155 = load i1, i1* %retval, align 1, !dbg !8497
  ret i1 %155, !dbg !8497
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !8498 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !624
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.link_arg, align 8, !ctir !630
  %err = alloca i32, align 4, !ctir !5
  store i32 %srcdir, i32* %srcdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !8501, metadata !DIExpression()), !dbg !8502
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8505, metadata !DIExpression()), !dbg !8506
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8515
  %cmp = icmp slt i32 %0, 0, !dbg !8517
  br i1 %cmp, label %if.then, label %if.end, !dbg !8518

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !8519
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !8520
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !8521
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !8522
  %5 = load i32, i32* %flags.addr, align 4, !dbg !8523
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #9, !dbg !8524
  %cmp1 = icmp eq i32 %call, 0, !dbg !8525
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8524

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8524

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !8526
  %6 = load i32, i32* %call2, align 4, !dbg !8526, !ctir !5
  br label %cond.end, !dbg !8524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !8524
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !8527
  br label %if.end, !dbg !8528

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !8529
  %tobool = trunc i8 %7 to i1, !dbg !8529
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8531

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8532
  %cmp3 = icmp ne i32 %8, 17, !dbg !8533
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8534

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8535
  store i32 %9, i32* %retval, align 4, !dbg !8536
  br label %return, !dbg !8536

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8539, metadata !DIExpression()), !dbg !8540
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !8541
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8542, !ctir !624
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !8543
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8540
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8544
  %tobool7 = icmp ne i8* %11, null, !dbg !8544
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8546

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !8547
  %12 = load i32, i32* %call9, align 4, !dbg !8547, !ctir !5
  store i32 %12, i32* %retval, align 4, !dbg !8548
  br label %return, !dbg !8548

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !8549, metadata !DIExpression()), !dbg !8550
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !8551
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !8552
  store i32 %13, i32* %srcdir11, align 8, !dbg !8551
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !8551
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !8553
  store i8* %14, i8** %srcname12, align 8, !dbg !8551
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !8551
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !8554
  store i32 %15, i32* %dstdir13, align 8, !dbg !8551
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !8551
  %16 = load i32, i32* %flags.addr, align 4, !dbg !8555
  store i32 %16, i32* %flags14, align 4, !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8556, metadata !DIExpression()), !dbg !8557
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8558
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !8560
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !8561
  %cmp16 = icmp ne i32 %call15, 0, !dbg !8562
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8563

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #16, !dbg !8564
  %19 = load i32, i32* %call18, align 4, !dbg !8564, !ctir !5
  store i32 %19, i32* %err, align 4, !dbg !8565
  br label %if.end27, !dbg !8566

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !8567
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !8569
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !8570
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !8571
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #9, !dbg !8572
  %cmp20 = icmp eq i32 %call19, 0, !dbg !8573
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !8572

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !8572

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #16, !dbg !8574
  %24 = load i32, i32* %call23, align 4, !dbg !8574, !ctir !5
  br label %cond.end24, !dbg !8572

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !8572
  store i32 %cond25, i32* %err, align 4, !dbg !8575
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !8576
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !8577
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #9, !dbg !8578
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !8579
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8581, !ctir !624
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !8582
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8583

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !8584
  call void @free(i8* %28) #9, !dbg !8585
  br label %if.end31, !dbg !8585

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !8586
  store i32 %29, i32* %retval, align 4, !dbg !8587
  br label %return, !dbg !8587

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !8588
  ret i32 %30, !dbg !8588
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !8589 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !627
  %dsttmpsize = alloca i64, align 8, !ctir !52
  %dsttmp = alloca i8*, align 8, !ctir !7
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !8598
  %call = call i8* @last_component(i8* %0) #14, !dbg !8599
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !8600
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !8601
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8601
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8601
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !8597
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !8602, metadata !DIExpression()), !dbg !8603
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !8604
  %add = add i64 %2, 9, !dbg !8605
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !8603
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8606, metadata !DIExpression()), !dbg !8607
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !8608
  %cmp = icmp ule i64 %3, 256, !dbg !8610
  br i1 %cmp, label %if.then, label %if.else, !dbg !8611

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8612
  store i8* %4, i8** %dsttmp, align 8, !dbg !8613
  br label %if.end3, !dbg !8614

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !8615
  %call1 = call noalias i8* @malloc(i64 %5) #9, !dbg !8617
  store i8* %call1, i8** %dsttmp, align 8, !dbg !8618
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !8619
  %tobool = icmp ne i8* %6, null, !dbg !8619
  br i1 %tobool, label %if.end, label %if.then2, !dbg !8621

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !8622
  store i8* %7, i8** %retval, align 8, !dbg !8623
  br label %return, !dbg !8623

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !8624
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !8625
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !8626
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #9, !dbg !8627
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #9, !dbg !8628
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8629
  store i8* %11, i8** %retval, align 8, !dbg !8630
  br label %return, !dbg !8630

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !8631
  ret i8* %12, !dbg !8631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !8632 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !629
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !8637, metadata !DIExpression()), !dbg !8638
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8639
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !8639
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !8638
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8640
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !8641, !ctir !630
  %3 = load i32, i32* %srcdir, align 8, !dbg !8641, !ctir !5
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8642
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !8643, !ctir !630
  %5 = load i8*, i8** %srcname, align 8, !dbg !8643, !ctir !180
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8644
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !8645, !ctir !630
  %7 = load i32, i32* %dstdir, align 8, !dbg !8645, !ctir !5
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !8646
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8647
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !8648, !ctir !630
  %10 = load i32, i32* %flags, align 4, !dbg !8648, !ctir !5
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #9, !dbg !8649
  ret i32 %call, !dbg !8650
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !8651 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !624
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.symlink_arg, align 8, !ctir !637
  %err = alloca i32, align 4, !ctir !5
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8656, metadata !DIExpression()), !dbg !8657
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8658, metadata !DIExpression()), !dbg !8659
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8660, metadata !DIExpression()), !dbg !8661
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8664
  %cmp = icmp slt i32 %0, 0, !dbg !8666
  br i1 %cmp, label %if.then, label %if.end, !dbg !8667

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !8668
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !8669
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !8670
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #9, !dbg !8671
  %cmp1 = icmp eq i32 %call, 0, !dbg !8672
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8671

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8671

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !8673
  %4 = load i32, i32* %call2, align 4, !dbg !8673, !ctir !5
  br label %cond.end, !dbg !8671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !8671
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !8674
  br label %if.end, !dbg !8675

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !8676
  %tobool = trunc i8 %5 to i1, !dbg !8676
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8678

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8679
  %cmp3 = icmp ne i32 %6, 17, !dbg !8680
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8681

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8682
  store i32 %7, i32* %retval, align 4, !dbg !8683
  br label %return, !dbg !8683

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8684, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8686, metadata !DIExpression()), !dbg !8687
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !8688
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8689, !ctir !624
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !8690
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8687
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !8691
  %tobool7 = icmp ne i8* %9, null, !dbg !8691
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8693

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !8694
  %10 = load i32, i32* %call9, align 4, !dbg !8694, !ctir !5
  store i32 %10, i32* %retval, align 4, !dbg !8695
  br label %return, !dbg !8695

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !8696, metadata !DIExpression()), !dbg !8697
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !8698
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !8699
  store i8* %11, i8** %srcname11, align 8, !dbg !8698
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !8698
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !8700
  store i32 %12, i32* %dstdir12, align 8, !dbg !8698
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8701, metadata !DIExpression()), !dbg !8702
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !8703
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !8705
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !8706
  %cmp14 = icmp ne i32 %call13, 0, !dbg !8707
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !8708

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #16, !dbg !8709
  %15 = load i32, i32* %call16, align 4, !dbg !8709, !ctir !5
  store i32 %15, i32* %err, align 4, !dbg !8710
  br label %if.end24, !dbg !8711

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !8712
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8714
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !8715
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !8716
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #9, !dbg !8717
  %cmp18 = icmp ne i32 %call17, 0, !dbg !8718
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !8719

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #16, !dbg !8720
  %20 = load i32, i32* %call20, align 4, !dbg !8720, !ctir !5
  store i32 %20, i32* %err, align 4, !dbg !8722
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !8723
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !8724
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #9, !dbg !8725
  br label %if.end23, !dbg !8726

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !8727
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !8729
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8731, !ctir !624
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !8732
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !8733

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !8734
  call void @free(i8* %24) #9, !dbg !8735
  br label %if.end28, !dbg !8735

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !8736
  store i32 %25, i32* %retval, align 4, !dbg !8737
  br label %return, !dbg !8737

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !8738
  ret i32 %26, !dbg !8738
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !8739 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !636
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !8744, metadata !DIExpression()), !dbg !8745
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8746
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !8746
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !8745
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !8747
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !8748, !ctir !637
  %3 = load i8*, i8** %srcname, align 8, !dbg !8748, !ctir !180
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !8749
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !8750, !ctir !637
  %5 = load i32, i32* %dstdir, align 8, !dbg !8750, !ctir !5
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !8751
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #9, !dbg !8752
  ret i32 %call, !dbg !8753
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !8754 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8758, metadata !DIExpression()), !dbg !8759
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8762, metadata !DIExpression()), !dbg !8763
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8768, metadata !DIExpression()), !dbg !8769
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !8770
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !8771
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !8772
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !8773
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8774
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !8775
  store i32 %call, i32* %ret, align 4, !dbg !8769
  %5 = load i32, i32* %ret, align 4, !dbg !8776
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !8777

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8778
  %6 = load i32, i32* %call1, align 4, !dbg !8778, !ctir !5
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8780
  %call2 = call i8* @quote(i8* %7), !dbg !8781
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i64 0, i64 0), i8* %call2), !dbg !8782
  br label %sw.epilog, !dbg !8783

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !8784
  %8 = load i32, i32* %call4, align 4, !dbg !8784, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.200, i64 0, i64 0)) #9, !dbg !8785
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !8786
  %call6 = call i8* @quote(i8* %9), !dbg !8787
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !8788
  br label %sw.epilog, !dbg !8789

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8790

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !8791
  ret i32 %10, !dbg !8792
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !8793 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8797, metadata !DIExpression()), !dbg !8798
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8801, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8803, metadata !DIExpression()), !dbg !8804
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8805
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8806
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8807
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !8808
  store i32 %call, i32* %ret, align 4, !dbg !8804
  %3 = load i32, i32* %ret, align 4, !dbg !8809
  %cmp = icmp ne i32 %3, 0, !dbg !8811
  br i1 %cmp, label %if.then, label %if.end, !dbg !8812

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8813
  %4 = load i32, i32* %call1, align 4, !dbg !8813, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.203, i64 0, i64 0)) #9, !dbg !8814
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8815
  %call3 = call i8* @quote(i8* %5), !dbg !8816
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !8817
  br label %if.end, !dbg !8817

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8818
  ret i32 %6, !dbg !8819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !8820 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !52
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !52
  %initial_limit = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !661
  %link_length = alloca i64, align 8, !ctir !52
  %stackbuf = alloca [128 x i8], align 16, !ctir !1254
  %buf = alloca i8*, align 8, !ctir !7
  %buffer = alloca i8*, align 8, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !5
  %shrinked_buffer = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !8828, metadata !DIExpression()), !dbg !8829
  store i64 1024, i64* %symlink_max, align 8, !dbg !8829
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !8830, metadata !DIExpression()), !dbg !8831
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8831
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !8832, metadata !DIExpression()), !dbg !8833
  %0 = load i64, i64* %symlink_max, align 8, !dbg !8834
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8835
  %cmp = icmp ult i64 %0, %1, !dbg !8836
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8834

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !8837
  %add = add i64 %2, 1, !dbg !8838
  br label %cond.end, !dbg !8834

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8839
  br label %cond.end, !dbg !8834

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !8834
  store i64 %cond, i64* %initial_limit, align 8, !dbg !8833
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !8840, metadata !DIExpression()), !dbg !8841
  %4 = load i64, i64* %size.addr, align 8, !dbg !8842
  %cmp1 = icmp eq i64 %4, 0, !dbg !8843
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !8842

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !8842

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !8844
  %6 = load i64, i64* %initial_limit, align 8, !dbg !8845
  %cmp4 = icmp ult i64 %5, %6, !dbg !8846
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !8844

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !8847
  %add6 = add i64 %7, 1, !dbg !8848
  br label %cond.end8, !dbg !8844

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !8849
  br label %cond.end8, !dbg !8844

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !8844
  br label %cond.end10, !dbg !8842

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !8842
  store i64 %cond11, i64* %buf_size, align 8, !dbg !8841
  br label %while.body, !dbg !8850

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8858, metadata !DIExpression()), !dbg !8859
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !8860, !ctir !1254
  store i8* %arraydecay, i8** %buf, align 8, !dbg !8859
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i8* null, i8** %buffer, align 8, !dbg !8862
  %9 = load i64, i64* %size.addr, align 8, !dbg !8863
  %cmp12 = icmp eq i64 %9, 0, !dbg !8865
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !8866

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !8867
  %cmp13 = icmp eq i64 %10, 128, !dbg !8868
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !8869

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !8870
  %call = call noalias i8* @malloc(i64 %11) #9, !dbg !8872
  store i8* %call, i8** %buffer, align 8, !dbg !8873
  store i8* %call, i8** %buf, align 8, !dbg !8874
  %12 = load i8*, i8** %buffer, align 8, !dbg !8875
  %tobool = icmp ne i8* %12, null, !dbg !8875
  br i1 %tobool, label %if.end, label %if.then14, !dbg !8877

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !8878
  br label %return, !dbg !8878

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !8879

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !8880
  %14 = load i8*, i8** %buf, align 8, !dbg !8881
  %15 = load i64, i64* %buf_size, align 8, !dbg !8882
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #9, !dbg !8883
  store i64 %call16, i64* %r, align 8, !dbg !8884
  %16 = load i64, i64* %r, align 8, !dbg !8885
  store i64 %16, i64* %link_length, align 8, !dbg !8886
  %17 = load i64, i64* %r, align 8, !dbg !8887
  %cmp17 = icmp slt i64 %17, 0, !dbg !8889
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !8890

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #16, !dbg !8891
  %18 = load i32, i32* %call19, align 4, !dbg !8891, !ctir !5
  %cmp20 = icmp ne i32 %18, 34, !dbg !8892
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !8893

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8894, metadata !DIExpression()), !dbg !8896
  %call22 = call i32* @__errno_location() #16, !dbg !8897
  %19 = load i32, i32* %call22, align 4, !dbg !8897, !ctir !5
  store i32 %19, i32* %saved_errno, align 4, !dbg !8896
  %20 = load i8*, i8** %buffer, align 8, !dbg !8898
  call void @free(i8* %20) #9, !dbg !8899
  %21 = load i32, i32* %saved_errno, align 4, !dbg !8900
  %call23 = call i32* @__errno_location() #16, !dbg !8901
  store i32 %21, i32* %call23, align 4, !dbg !8902, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !8903
  br label %return, !dbg !8903

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !8904
  %23 = load i64, i64* %buf_size, align 8, !dbg !8906
  %cmp25 = icmp ult i64 %22, %23, !dbg !8907
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !8908

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !8909
  %25 = load i64, i64* %link_length, align 8, !dbg !8911
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !8909, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !8912
  %26 = load i8*, i8** %buffer, align 8, !dbg !8913
  %tobool27 = icmp ne i8* %26, null, !dbg !8913
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !8915

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !8916
  %add29 = add i64 %27, 1, !dbg !8918
  %call30 = call noalias i8* @malloc(i64 %add29) #9, !dbg !8919
  store i8* %call30, i8** %buffer, align 8, !dbg !8920
  %28 = load i8*, i8** %buffer, align 8, !dbg !8921
  %tobool31 = icmp ne i8* %28, null, !dbg !8921
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !8923

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !8924
  %30 = load i8*, i8** %buf, align 8, !dbg !8925
  %31 = load i64, i64* %link_length, align 8, !dbg !8926
  %add33 = add i64 %31, 1, !dbg !8927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !8928
  store i8* %29, i8** %retval, align 8, !dbg !8929
  br label %return, !dbg !8929

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !8930

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !8931
  %add35 = add i64 %32, 1, !dbg !8933
  %33 = load i64, i64* %buf_size, align 8, !dbg !8934
  %cmp36 = icmp ult i64 %add35, %33, !dbg !8935
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !8936

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !8937, metadata !DIExpression()), !dbg !8939
  %34 = load i8*, i8** %buffer, align 8, !dbg !8940
  %35 = load i64, i64* %link_length, align 8, !dbg !8941
  %add38 = add i64 %35, 1, !dbg !8942
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #9, !dbg !8943
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !8939
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !8944
  %cmp40 = icmp ne i8* %36, null, !dbg !8946
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !8947

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !8948
  store i8* %37, i8** %buffer, align 8, !dbg !8949
  br label %if.end42, !dbg !8950

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !8951

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !8952
  store i8* %38, i8** %retval, align 8, !dbg !8953
  br label %return, !dbg !8953

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !8954
  call void @free(i8* %39) #9, !dbg !8955
  %40 = load i64, i64* %buf_size, align 8, !dbg !8956
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !8958
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !8959

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !8960
  %mul = mul i64 %41, 2, !dbg !8960
  store i64 %mul, i64* %buf_size, align 8, !dbg !8960
  br label %if.end54, !dbg !8961

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !8962
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !8964
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !8965

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !8966
  br label %if.end53, !dbg !8967

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #16, !dbg !8968
  store i32 12, i32* %call52, align 4, !dbg !8970, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !8971
  br label %return, !dbg !8971

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !8850, !llvm.loop !8972

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !8974
  ret i8* %43, !dbg !8974
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !8975 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8976, metadata !DIExpression()), !dbg !8977
  %0 = load i8*, i8** %s.addr, align 8, !dbg !8978
  %tobool = icmp ne i8* %0, null, !dbg !8978
  br i1 %tobool, label %if.end, label %if.then, !dbg !8980

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #9, !dbg !8981
  store i8* %call, i8** %s.addr, align 8, !dbg !8982
  br label %if.end, !dbg !8983

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !8984
  %tobool1 = icmp ne i8* %1, null, !dbg !8984
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !8985

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !8986
  %3 = load i8, i8* %2, align 1, !dbg !8987, !ctir !181
  %conv = sext i8 %3 to i32, !dbg !8987
  %tobool2 = icmp ne i32 %conv, 0, !dbg !8987
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !8988

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !8989
  %5 = load i8*, i8** %s.addr, align 8, !dbg !8990
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !8991
  %cmp = icmp eq i8* %4, %call4, !dbg !8992
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8984

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !8993
  br label %cond.end, !dbg !8984

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !8984

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.211, i64 0, i64 0), %cond.false ], !dbg !8984
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !8994
  ret void, !dbg !8995
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !8996 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !627
  %filelen = alloca i64, align 8, !ctir !52
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !52
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !52
  %ssize = alloca i64, align 8, !ctir !661
  %s = alloca i8*, align 8, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %sdir = alloca i32, align 4, !ctir !5
  %base_max = alloca i64, align 8, !ctir !52
  %flags = alloca i32, align 4, !ctir !67
  %e = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !8999, metadata !DIExpression()), !dbg !9000
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9009
  %call = call i8* @last_component(i8* %0) #14, !dbg !9010
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9011
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9012
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9012
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9012
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9008
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9013, metadata !DIExpression()), !dbg !9014
  %2 = load i64, i64* %base_offset, align 8, !dbg !9015
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9016
  %4 = load i64, i64* %base_offset, align 8, !dbg !9017
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9018, !ctir !181
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9019
  %add = add i64 %2, %call1, !dbg !9020
  store i64 %add, i64* %filelen, align 8, !dbg !9014
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9021
  %tobool = icmp ne i8* %5, null, !dbg !9021
  br i1 %tobool, label %if.end, label %if.then, !dbg !9023

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9024
  br label %if.end, !dbg !9024

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9025, metadata !DIExpression()), !dbg !9026
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9027
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9028
  %add3 = add i64 %call2, 1, !dbg !9029
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9026
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9030, metadata !DIExpression()), !dbg !9031
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9032
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9031
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9033
  %cmp = icmp ult i64 %8, 9, !dbg !9035
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9036

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9037
  br label %if.end5, !dbg !9038

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9039, metadata !DIExpression()), !dbg !9040
  %9 = load i64, i64* %filelen, align 8, !dbg !9041
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9042
  %add6 = add i64 %9, %10, !dbg !9043
  %add7 = add i64 %add6, 1, !dbg !9044
  store i64 %add7, i64* %ssize, align 8, !dbg !9040
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9045, metadata !DIExpression()), !dbg !9046
  %11 = load i64, i64* %ssize, align 8, !dbg !9047
  %call8 = call noalias i8* @malloc(i64 %11) #9, !dbg !9048
  store i8* %call8, i8** %s, align 8, !dbg !9046
  %12 = load i8*, i8** %s, align 8, !dbg !9049
  %tobool9 = icmp ne i8* %12, null, !dbg !9049
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9051

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9052
  store i8* %13, i8** %retval, align 8, !dbg !9053
  br label %return, !dbg !9053

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9054, metadata !DIExpression()), !dbg !9055
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9055
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9056, metadata !DIExpression()), !dbg !9057
  store i32 -1, i32* %sdir, align 4, !dbg !9057
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i64 0, i64* %base_max, align 8, !dbg !9059
  br label %while.body, !dbg !9060

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !9061
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9063
  %16 = load i64, i64* %filelen, align 8, !dbg !9064
  %add12 = add i64 %16, 1, !dbg !9065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9066
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9067
  %cmp13 = icmp eq i32 %17, 1, !dbg !9069
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9070

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9071
  %19 = load i64, i64* %filelen, align 8, !dbg !9072
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9073, !ctir !8
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9074
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9076
  br label %if.end29, !dbg !9076

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9077
  %23 = load i64, i64* %ssize, align 8, !dbg !9078
  %24 = load i64, i64* %filelen, align 8, !dbg !9079
  %25 = load i64, i64* %base_offset, align 8, !dbg !9080
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9081
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9082

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9083

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9085
  %cmp18 = icmp eq i32 %26, 2, !dbg !9087
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9088

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9089
  %27 = load i8*, i8** %s, align 8, !dbg !9091
  %28 = load i64, i64* %filelen, align 8, !dbg !9092
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9093, !ctir !8
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9094
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9096
  br label %if.end21, !dbg !9097

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9098

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9099
  %32 = load i64, i64* %filelen, align 8, !dbg !9100
  %33 = load i32, i32* %sdir, align 4, !dbg !9101
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9102
  br label %sw.epilog, !dbg !9103

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9104
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !9104
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !9106

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9107
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !9108
  br label %if.end27, !dbg !9108

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !9109
  call void @free(i8* %36) #9, !dbg !9110
  %call28 = call i32* @__errno_location() #16, !dbg !9111
  store i32 12, i32* %call28, align 4, !dbg !9112, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9113
  br label %return, !dbg !9113

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !9114
  %tobool30 = trunc i8 %37 to i1, !dbg !9114
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !9116

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !9117

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !9118
  %cmp33 = icmp slt i32 %38, 0, !dbg !9120
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9121

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !9122
  store i64 0, i64* %base_offset, align 8, !dbg !9124
  br label %if.end35, !dbg !9125

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9126, metadata !DIExpression()), !dbg !9127
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !9128
  %cmp36 = icmp eq i32 %39, 1, !dbg !9129
  %40 = zext i1 %cmp36 to i64, !dbg !9128
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !9128
  store i32 %cond, i32* %flags, align 4, !dbg !9127
  %41 = load i8*, i8** %file.addr, align 8, !dbg !9130
  %42 = load i32, i32* %sdir, align 4, !dbg !9132
  %43 = load i8*, i8** %s, align 8, !dbg !9133
  %44 = load i64, i64* %base_offset, align 8, !dbg !9134
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !9135, !ctir !8
  %45 = load i32, i32* %flags, align 4, !dbg !9136
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !9137
  %cmp39 = icmp eq i32 %call38, 0, !dbg !9138
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9139

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !9140

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9141, metadata !DIExpression()), !dbg !9142
  %call42 = call i32* @__errno_location() #16, !dbg !9143
  %46 = load i32, i32* %call42, align 4, !dbg !9143, !ctir !5
  store i32 %46, i32* %e, align 4, !dbg !9142
  %47 = load i32, i32* %e, align 4, !dbg !9144
  %cmp43 = icmp ne i32 %47, 17, !dbg !9146
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !9147

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9148
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !9148
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !9151

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9152
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !9153
  br label %if.end48, !dbg !9153

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !9154
  call void @free(i8* %50) #9, !dbg !9155
  %51 = load i32, i32* %e, align 4, !dbg !9156
  %call49 = call i32* @__errno_location() #16, !dbg !9157
  store i32 %51, i32* %call49, align 4, !dbg !9158, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9159
  br label %return, !dbg !9159

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !9060, !llvm.loop !9160

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9162
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !9162
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9164

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9165
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !9166
  br label %if.end54, !dbg !9166

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !9167
  store i8* %54, i8** %retval, align 8, !dbg !9168
  br label %return, !dbg !9168

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !9169
  ret i8* %55, !dbg !9169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9170 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !653
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %dp = alloca %struct.dirent*, align 8, !ctir !666
  %buf = alloca i8*, align 8, !ctir !7
  %versionlenmax = alloca i64, align 8, !ctir !52
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %tmp = alloca [2 x i8], align 1, !ctir !387
  %p = alloca i8*, align 8, !ctir !180
  %q = alloca i8*, align 8, !ctir !7
  %all_9s = alloca i8, align 1, !ctir !139
  %versionlen = alloca i64, align 8, !ctir !52
  %new_buffer_size = alloca i64, align 8, !ctir !52
  %new_buf = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9178, metadata !DIExpression()), !dbg !9179
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9180, metadata !DIExpression()), !dbg !9181
  store i64 %base_offset, i64* %base_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9182, metadata !DIExpression()), !dbg !9183
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9184, metadata !DIExpression()), !dbg !9185
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9188, metadata !DIExpression()), !dbg !9189
  store i32 2, i32* %result, align 4, !dbg !9189
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9190, metadata !DIExpression()), !dbg !9191
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9192
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9193, !ctir !662
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9191
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9194, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9196, metadata !DIExpression()), !dbg !9197
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9198
  %3 = load i8*, i8** %2, align 8, !dbg !9199, !ctir !7
  store i8* %3, i8** %buf, align 8, !dbg !9197
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9200, metadata !DIExpression()), !dbg !9201
  store i64 1, i64* %versionlenmax, align 8, !dbg !9201
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9202, metadata !DIExpression()), !dbg !9203
  %4 = load i8*, i8** %buf, align 8, !dbg !9204
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9205
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9206, !ctir !8
  store i8* %add.ptr, i8** %base, align 8, !dbg !9203
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9207, metadata !DIExpression()), !dbg !9208
  %6 = load i8*, i8** %base, align 8, !dbg !9209
  %call = call i64 @base_len(i8* %6) #14, !dbg !9210
  store i64 %call, i64* %baselen, align 8, !dbg !9208
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9211
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9211
  br i1 %tobool, label %if.then, label %if.else, !dbg !9213

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9214
  call void @rewinddir(%struct.__dirstream* %8) #9, !dbg !9215
  br label %if.end12, !dbg !9215

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9216, metadata !DIExpression()), !dbg !9218
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9219, !ctir !387
  %9 = load i8*, i8** %base, align 8, !dbg !9220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9219
  %10 = load i8*, i8** %base, align 8, !dbg !9221
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.212, i64 0, i64 0)) #9, !dbg !9222
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9223
  %12 = load i8*, i8** %buf, align 8, !dbg !9224
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9225
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9226
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9227
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9228
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9228
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9230

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #16, !dbg !9231
  %15 = load i32, i32* %call4, align 4, !dbg !9231, !ctir !5
  %cmp = icmp eq i32 %15, 12, !dbg !9232
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9233

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9234
  br label %if.end, !dbg !9235

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9236
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9237, !ctir !387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9237
  %17 = load i8*, i8** %base, align 8, !dbg !9238
  %18 = load i64, i64* %baselen, align 8, !dbg !9239
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9240, !ctir !8
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.213, i64 0, i64 0)) #9, !dbg !9241
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9242
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9242
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9244

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9245
  store i32 %20, i32* %retval, align 4, !dbg !9246
  br label %return, !dbg !9246

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9247
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9248
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9249, !ctir !662
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9250

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9251
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9252
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9253
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9254
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9250

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9255, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9262, metadata !DIExpression()), !dbg !9263
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9264
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9264, !ctir !667
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9264, !ctir !624
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9264
  %25 = load i64, i64* %baselen, align 8, !dbg !9266
  %add = add i64 %25, 4, !dbg !9267
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9268
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9269

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9270, !llvm.loop !9271

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9273
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9275
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9276, !ctir !8
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9277
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9278, !ctir !667
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9277, !ctir !624
  %29 = load i64, i64* %baselen, align 8, !dbg !9279
  %add23 = add i64 %29, 2, !dbg !9280
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9281
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9282
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9283

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9284, !llvm.loop !9271

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9285
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9286, !ctir !667
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9285, !ctir !624
  %31 = load i64, i64* %baselen, align 8, !dbg !9287
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9288, !ctir !8
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9289, !ctir !8
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9290
  %32 = load i8*, i8** %p, align 8, !dbg !9291
  %33 = load i8, i8* %32, align 1, !dbg !9293, !ctir !181
  %conv = sext i8 %33 to i32, !dbg !9293
  %cmp32 = icmp sle i32 49, %conv, !dbg !9294
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9295

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9296
  %35 = load i8, i8* %34, align 1, !dbg !9297, !ctir !181
  %conv35 = sext i8 %35 to i32, !dbg !9297
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9298
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9299

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9300, !llvm.loop !9271

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9301
  %37 = load i8, i8* %36, align 1, !dbg !9302, !ctir !181
  %conv40 = sext i8 %37 to i32, !dbg !9302
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9303
  %frombool = zext i1 %cmp41 to i8, !dbg !9304
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9304
  store i64 1, i64* %versionlen, align 8, !dbg !9305
  br label %for.cond, !dbg !9307

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9308
  %39 = load i64, i64* %versionlen, align 8, !dbg !9308
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9308, !ctir !180
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9308
  %conv43 = sext i8 %40 to i32, !dbg !9308
  %sub = sub i32 %conv43, 48, !dbg !9308
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9308
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9310

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9311
  %42 = load i64, i64* %versionlen, align 8, !dbg !9312
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9311, !ctir !180
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9311
  %conv47 = sext i8 %43 to i32, !dbg !9311
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9313
  %conv49 = zext i1 %cmp48 to i32, !dbg !9313
  %44 = load i8, i8* %all_9s, align 1, !dbg !9314
  %tobool50 = trunc i8 %44 to i1, !dbg !9314
  %conv51 = zext i1 %tobool50 to i32, !dbg !9314
  %and = and i32 %conv51, %conv49, !dbg !9314
  %tobool52 = icmp ne i32 %and, 0, !dbg !9314
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9314
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9314
  br label %for.inc, !dbg !9315

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9316
  %inc = add i64 %45, 1, !dbg !9316
  store i64 %inc, i64* %versionlen, align 8, !dbg !9316
  br label %for.cond, !dbg !9317, !llvm.loop !9318

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9320
  %47 = load i64, i64* %versionlen, align 8, !dbg !9322
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9320, !ctir !180
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9320
  %conv55 = sext i8 %48 to i32, !dbg !9320
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9323
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9324

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9325
  %50 = load i64, i64* %versionlen, align 8, !dbg !9326
  %add59 = add i64 %50, 1, !dbg !9327
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9325, !ctir !180
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9325
  %tobool61 = icmp ne i8 %51, 0, !dbg !9325
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9328

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9329
  %53 = load i64, i64* %versionlen, align 8, !dbg !9330
  %cmp63 = icmp ult i64 %52, %53, !dbg !9331
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9332

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9333
  %55 = load i64, i64* %versionlen, align 8, !dbg !9334
  %cmp65 = icmp eq i64 %54, %55, !dbg !9335
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9336

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9337
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !9338
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !9339, !ctir !8
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !9340, !ctir !8
  %58 = load i8*, i8** %p, align 8, !dbg !9341
  %59 = load i64, i64* %versionlen, align 8, !dbg !9342
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !9343
  %cmp71 = icmp sle i32 %call70, 0, !dbg !9344
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !9345

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !9346, !llvm.loop !9271

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !9347
  %tobool75 = trunc i8 %60 to i1, !dbg !9347
  %conv76 = zext i1 %tobool75 to i64, !dbg !9347
  %61 = load i64, i64* %versionlen, align 8, !dbg !9348
  %add77 = add i64 %conv76, %61, !dbg !9349
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !9350
  %62 = load i8, i8* %all_9s, align 1, !dbg !9351
  %tobool78 = trunc i8 %62 to i1, !dbg !9351
  %63 = zext i1 %tobool78 to i64, !dbg !9351
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !9351
  store i32 %cond, i32* %result, align 4, !dbg !9352
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !9353, metadata !DIExpression()), !dbg !9354
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !9355
  %add80 = add i64 %64, 2, !dbg !9356
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !9357
  %add81 = add i64 %add80, %65, !dbg !9358
  %add82 = add i64 %add81, 2, !dbg !9359
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !9354
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !9360
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !9362
  %cmp83 = icmp ult i64 %66, %67, !dbg !9363
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !9364

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !9365
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !9365
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !9368

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !9369
  %mul = mul i64 %69, 2, !dbg !9369
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !9369
  br label %if.end89, !dbg !9370

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !9371, metadata !DIExpression()), !dbg !9372
  %70 = load i8*, i8** %buf, align 8, !dbg !9373
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !9374
  %call90 = call i8* @realloc(i8* %70, i64 %71) #9, !dbg !9375
  store i8* %call90, i8** %new_buf, align 8, !dbg !9372
  %72 = load i8*, i8** %new_buf, align 8, !dbg !9376
  %tobool91 = icmp ne i8* %72, null, !dbg !9376
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9378

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !9379
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !9381
  store i8* %73, i8** %74, align 8, !dbg !9382, !ctir !7
  store i32 3, i32* %retval, align 4, !dbg !9383
  br label %return, !dbg !9383

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !9384
  store i8* %75, i8** %buf, align 8, !dbg !9385
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !9386
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !9387
  br label %if.end94, !dbg !9388

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !9389
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !9390
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !9391, !ctir !8
  store i8* %add.ptr95, i8** %q, align 8, !dbg !9392
  %79 = load i8*, i8** %q, align 8, !dbg !9393
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !9393, !ctir !8
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !9393
  store i8 46, i8* %79, align 1, !dbg !9394, !ctir !8
  %80 = load i8*, i8** %q, align 8, !dbg !9395
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !9395, !ctir !8
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !9395
  store i8 126, i8* %80, align 1, !dbg !9396, !ctir !8
  %81 = load i8*, i8** %q, align 8, !dbg !9397
  store i8 48, i8* %81, align 1, !dbg !9398, !ctir !8
  %82 = load i8, i8* %all_9s, align 1, !dbg !9399
  %tobool97 = trunc i8 %82 to i1, !dbg !9399
  %conv98 = zext i1 %tobool97 to i32, !dbg !9399
  %83 = load i8*, i8** %q, align 8, !dbg !9400
  %idx.ext = sext i32 %conv98 to i64, !dbg !9400
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !9400, !ctir !8
  store i8* %add.ptr99, i8** %q, align 8, !dbg !9400
  %84 = load i8*, i8** %q, align 8, !dbg !9401
  %85 = load i8*, i8** %p, align 8, !dbg !9402
  %86 = load i64, i64* %versionlen, align 8, !dbg !9403
  %add100 = add i64 %86, 2, !dbg !9404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !9405
  %87 = load i64, i64* %versionlen, align 8, !dbg !9406
  %88 = load i8*, i8** %q, align 8, !dbg !9407
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !9407, !ctir !8
  store i8* %add.ptr101, i8** %q, align 8, !dbg !9407
  br label %while.cond102, !dbg !9408

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !9409
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !9409, !ctir !8
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !9409
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !9410, !ctir !8
  %conv104 = sext i8 %90 to i32, !dbg !9410
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !9411
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !9408

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !9412
  store i8 48, i8* %91, align 1, !dbg !9413, !ctir !8
  br label %while.cond102, !dbg !9408, !llvm.loop !9414

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !9416
  %93 = load i8, i8* %92, align 1, !dbg !9417, !ctir !8
  %inc108 = add i8 %93, 1, !dbg !9417
  store i8 %inc108, i8* %92, align 1, !dbg !9417, !ctir !8
  br label %while.cond, !dbg !9250, !llvm.loop !9271

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !9418
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !9419
  store i8* %94, i8** %95, align 8, !dbg !9420, !ctir !7
  %96 = load i32, i32* %result, align 4, !dbg !9421
  store i32 %96, i32* %retval, align 4, !dbg !9422
  br label %return, !dbg !9422

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !9423
  ret i32 %97, !dbg !9423
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !9424 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %baselen_max = alloca i64, align 8, !ctir !52
  %name_max = alloca i64, align 8, !ctir !32
  %tmp = alloca [2 x i8], align 1, !ctir !387
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9430, metadata !DIExpression()), !dbg !9431
  store i8 %e, i8* %e.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9434, metadata !DIExpression()), !dbg !9435
  store i64* %base_max, i64** %base_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !9436, metadata !DIExpression()), !dbg !9437
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9438, metadata !DIExpression()), !dbg !9439
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9440
  %call = call i8* @last_component(i8* %0) #14, !dbg !9441
  store i8* %call, i8** %base, align 8, !dbg !9439
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9442, metadata !DIExpression()), !dbg !9443
  %1 = load i8*, i8** %base, align 8, !dbg !9444
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !9445
  store i64 %call1, i64* %baselen, align 8, !dbg !9443
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !9446, metadata !DIExpression()), !dbg !9447
  store i64 255, i64* %baselen_max, align 8, !dbg !9447
  %2 = load i64, i64* %baselen, align 8, !dbg !9448
  %cmp = icmp ult i64 14, %2, !dbg !9450
  br i1 %cmp, label %if.then, label %if.end27, !dbg !9451

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !9452
  %4 = load i64, i64* %3, align 8, !dbg !9455, !ctir !52
  %cmp2 = icmp eq i64 %4, 0, !dbg !9456
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !9457

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !9458, metadata !DIExpression()), !dbg !9460
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !9461
  %cmp4 = icmp slt i32 %5, 0, !dbg !9463
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9464

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9465, metadata !DIExpression()), !dbg !9467
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9468, !ctir !387
  %6 = load i8*, i8** %base, align 8, !dbg !9469
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !9468
  %7 = load i8*, i8** %base, align 8, !dbg !9470
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.212, i64 0, i64 0)) #9, !dbg !9471
  %call7 = call i32* @__errno_location() #16, !dbg !9472
  store i32 0, i32* %call7, align 4, !dbg !9473, !ctir !5
  %8 = load i8*, i8** %file.addr, align 8, !dbg !9474
  %call8 = call i64 @pathconf(i8* %8, i32 3) #9, !dbg !9475
  store i64 %call8, i64* %name_max, align 8, !dbg !9476
  %call9 = call i32* @__errno_location() #16, !dbg !9477
  %9 = load i32, i32* %call9, align 4, !dbg !9477, !ctir !5
  %tobool = icmp ne i32 %9, 0, !dbg !9478
  %lnot = xor i1 %tobool, true, !dbg !9478
  %lnot.ext = zext i1 %lnot to i32, !dbg !9478
  %conv = sext i32 %lnot.ext to i64, !dbg !9478
  %10 = load i64, i64* %name_max, align 8, !dbg !9479
  %sub = sub nsw i64 %10, %conv, !dbg !9479
  store i64 %sub, i64* %name_max, align 8, !dbg !9479
  %11 = load i8*, i8** %base, align 8, !dbg !9480
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9481, !ctir !387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !9481
  br label %if.end, !dbg !9482

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #16, !dbg !9483
  store i32 0, i32* %call11, align 4, !dbg !9485, !ctir !5
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !9486
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #9, !dbg !9487
  store i64 %call12, i64* %name_max, align 8, !dbg !9488
  %call13 = call i32* @__errno_location() #16, !dbg !9489
  %13 = load i32, i32* %call13, align 4, !dbg !9489, !ctir !5
  %tobool14 = icmp ne i32 %13, 0, !dbg !9490
  %lnot15 = xor i1 %tobool14, true, !dbg !9490
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9490
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !9490
  %14 = load i64, i64* %name_max, align 8, !dbg !9491
  %sub18 = sub nsw i64 %14, %conv17, !dbg !9491
  store i64 %sub18, i64* %name_max, align 8, !dbg !9491
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !9492
  %cmp19 = icmp sle i64 0, %15, !dbg !9493
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !9494

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !9495
  %cmp21 = icmp ule i64 %16, -1, !dbg !9496
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !9497

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !9498
  br label %cond.end, !dbg !9497

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !9499
  %cmp23 = icmp slt i64 %18, -1, !dbg !9500
  %19 = zext i1 %cmp23 to i64, !dbg !9499
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !9499
  br label %cond.end, !dbg !9497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !9497
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !9501
  store i64 %cond25, i64* %20, align 8, !dbg !9502, !ctir !52
  br label %if.end26, !dbg !9503

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !9504
  %22 = load i64, i64* %21, align 8, !dbg !9505, !ctir !52
  store i64 %22, i64* %baselen_max, align 8, !dbg !9506
  br label %if.end27, !dbg !9507

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !9508
  %24 = load i64, i64* %baselen, align 8, !dbg !9510
  %cmp28 = icmp ult i64 %23, %24, !dbg !9511
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !9512

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !9513
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !9515
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !9516, !ctir !8
  %27 = load i8*, i8** %base, align 8, !dbg !9517
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !9518
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !9518
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9518
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !9519
  %28 = load i64, i64* %baselen_max, align 8, !dbg !9520
  %29 = load i64, i64* %baselen, align 8, !dbg !9522
  %cmp31 = icmp ule i64 %28, %29, !dbg !9523
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !9524

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !9525
  %sub34 = sub i64 %30, 1, !dbg !9526
  store i64 %sub34, i64* %baselen, align 8, !dbg !9527
  br label %if.end35, !dbg !9528

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !9529
  %32 = load i8*, i8** %base, align 8, !dbg !9530
  %33 = load i64, i64* %baselen, align 8, !dbg !9531
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !9530, !ctir !7
  store i8 %31, i8* %arrayidx, align 1, !dbg !9532
  %34 = load i8*, i8** %base, align 8, !dbg !9533
  %35 = load i64, i64* %baselen, align 8, !dbg !9534
  %add = add i64 %35, 1, !dbg !9535
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !9533, !ctir !7
  store i8 0, i8* %arrayidx36, align 1, !dbg !9536
  br label %if.end37, !dbg !9537

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !9538
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9539 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9549
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9550
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9551
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !9552
  ret i8* %call, !dbg !9553
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9554 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9555, metadata !DIExpression()), !dbg !9556
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9557, metadata !DIExpression()), !dbg !9558
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9559, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9561, metadata !DIExpression()), !dbg !9562
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9563
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9564
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9565
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !9566
  store i8* %call, i8** %result, align 8, !dbg !9562
  %3 = load i8*, i8** %result, align 8, !dbg !9567
  %tobool = icmp ne i8* %3, null, !dbg !9567
  br i1 %tobool, label %if.end, label %if.then, !dbg !9569

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !9570
  unreachable, !dbg !9570

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !9571
  ret i8* %4, !dbg !9572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !9573 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9580
  %cmp = icmp eq i8* %0, null, !dbg !9582
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9583

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9584
  %2 = load i8, i8* %1, align 1, !dbg !9585, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !9585
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9586
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9587

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !9588
  br label %return, !dbg !9588

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9589
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9589
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !9589
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !9589
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !9589, !ctir !687
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9589
  store i32 %6, i32* %retval, align 4, !dbg !9590
  br label %return, !dbg !9590

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9591
  ret i32 %7, !dbg !9591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !9592 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9595, metadata !DIExpression()), !dbg !9596
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9597
  %tobool = icmp ne i8* %0, null, !dbg !9597
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9599

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9600
  %2 = load i8, i8* %1, align 1, !dbg !9601, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !9601
  %tobool1 = icmp ne i32 %conv, 0, !dbg !9601
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9602

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9603
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9604
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !9605
  store i32 %call, i32* %retval, align 4, !dbg !9606
  br label %return, !dbg !9606

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.226, i64 0, i64 0)) #9, !dbg !9607
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.227, i64 0, i64 0), i8* %call2), !dbg !9608
  store i32 %call3, i32* %retval, align 4, !dbg !9609
  br label %return, !dbg !9609

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9610
  ret i32 %5, !dbg !9610
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !9611 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !52
  %lcm = alloca i64, align 8, !ctir !52
  %m = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %q = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !52
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9615, metadata !DIExpression()), !dbg !9616
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9617, metadata !DIExpression()), !dbg !9618
  store i64 %lcm_max, i64* %lcm_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !9619, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9621, metadata !DIExpression()), !dbg !9622
  %0 = load i64, i64* %a.addr, align 8, !dbg !9623
  %tobool = icmp ne i64 %0, 0, !dbg !9623
  br i1 %tobool, label %if.else, label %if.then, !dbg !9625

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !9626
  %tobool1 = icmp ne i64 %1, 0, !dbg !9626
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9626

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !9627
  br label %cond.end, !dbg !9626

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9626

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !9626
  store i64 %cond, i64* %size, align 8, !dbg !9628
  br label %if.end9, !dbg !9629

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !9630
  %tobool2 = icmp ne i64 %3, 0, !dbg !9630
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !9633

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !9634, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata i64* %m, metadata !9637, metadata !DIExpression()), !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9639, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.declare(metadata i64* %q, metadata !9641, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9643, metadata !DIExpression()), !dbg !9644
  %4 = load i64, i64* %a.addr, align 8, !dbg !9645
  store i64 %4, i64* %m, align 8, !dbg !9647
  %5 = load i64, i64* %b.addr, align 8, !dbg !9648
  store i64 %5, i64* %n, align 8, !dbg !9649
  br label %for.cond, !dbg !9650

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !9651
  %7 = load i64, i64* %n, align 8, !dbg !9653
  %rem = urem i64 %6, %7, !dbg !9654
  store i64 %rem, i64* %r, align 8, !dbg !9655
  %cmp = icmp ne i64 %rem, 0, !dbg !9656
  br i1 %cmp, label %for.body, label %for.end, !dbg !9657

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !9658

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !9659
  store i64 %8, i64* %m, align 8, !dbg !9660
  %9 = load i64, i64* %r, align 8, !dbg !9661
  store i64 %9, i64* %n, align 8, !dbg !9662
  br label %for.cond, !dbg !9663, !llvm.loop !9664

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !9666
  %11 = load i64, i64* %n, align 8, !dbg !9667
  %div = udiv i64 %10, %11, !dbg !9668
  store i64 %div, i64* %q, align 8, !dbg !9669
  %12 = load i64, i64* %q, align 8, !dbg !9670
  %13 = load i64, i64* %b.addr, align 8, !dbg !9671
  %mul = mul i64 %12, %13, !dbg !9672
  store i64 %mul, i64* %lcm, align 8, !dbg !9673
  %14 = load i64, i64* %lcm, align 8, !dbg !9674
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !9676
  %cmp4 = icmp ule i64 %14, %15, !dbg !9677
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !9678

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !9679
  %17 = load i64, i64* %b.addr, align 8, !dbg !9680
  %div5 = udiv i64 %16, %17, !dbg !9681
  %18 = load i64, i64* %q, align 8, !dbg !9682
  %cmp6 = icmp eq i64 %div5, %18, !dbg !9683
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !9684

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !9685
  store i64 %19, i64* %retval, align 8, !dbg !9686
  br label %return, !dbg !9686

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !9687

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !9688
  store i64 %20, i64* %size, align 8, !dbg !9689
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !9690
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !9691
  %cmp10 = icmp ule i64 %21, %22, !dbg !9692
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !9690

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !9693
  br label %cond.end13, !dbg !9690

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !9694
  br label %cond.end13, !dbg !9690

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !9690
  store i64 %cond14, i64* %retval, align 8, !dbg !9695
  br label %return, !dbg !9695

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !9696
  ret i64 %25, !dbg !9696
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !9697 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9700
  store i8* %0, i8** @file_name, align 8, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !9703 {
entry:
  %fail = alloca i8, align 1, !ctir !139
  %close_error = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !9704, metadata !DIExpression()), !dbg !9705
  store i8 0, i8* %fail, align 1, !dbg !9705
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9706
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !9708
  %cmp = icmp ugt i64 %call, 0, !dbg !9709
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9710

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9711
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !9714
  %cmp2 = icmp eq i32 %call1, 0, !dbg !9715
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !9716

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9717
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !9718
  %cmp4 = icmp ne i32 %call3, 0, !dbg !9719
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9720

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !9721
  br label %if.end, !dbg !9722

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !9723

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9724
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !9726
  %cmp8 = icmp ne i32 %call7, 0, !dbg !9727
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9728

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !9729
  br label %if.end10, !dbg !9730

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !9731
  %tobool = trunc i8 %4 to i1, !dbg !9731
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !9733

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !9734, metadata !DIExpression()), !dbg !9736
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.232, i64 0, i64 0)) #9, !dbg !9737
  store i8* %call12, i8** %close_error, align 8, !dbg !9736
  %5 = load i8*, i8** @file_name, align 8, !dbg !9738
  %tobool13 = icmp ne i8* %5, null, !dbg !9738
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9740

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !9741
  %6 = load i32, i32* %call15, align 4, !dbg !9741, !ctir !5
  %7 = load i8*, i8** @file_name, align 8, !dbg !9742
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !9743
  %8 = load i8*, i8** %close_error, align 8, !dbg !9744
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.233, i64 0, i64 0), i8* %call16, i8* %8), !dbg !9745
  br label %if.end18, !dbg !9745

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #16, !dbg !9746
  %9 = load i32, i32* %call17, align 4, !dbg !9746, !ctir !5
  %10 = load i8*, i8** %close_error, align 8, !dbg !9747
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.234, i64 0, i64 0), i8* %10), !dbg !9748
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !9749

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !9750
  %11 = load i8, i8* %fail, align 1, !dbg !9751
  %tobool20 = trunc i8 %11 to i1, !dbg !9751
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9753

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !9754
  call void @_exit(i32 %12) #15, !dbg !9755
  unreachable, !dbg !9755

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !9756
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !9757 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9760
  store i8* %0, i8** @file_name.235, align 8, !dbg !9761
  ret void, !dbg !9762
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !9763 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !9766, metadata !DIExpression()), !dbg !9767
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !9768
  %tobool = trunc i8 %0 to i1, !dbg !9768
  %frombool1 = zext i1 %tobool to i8, !dbg !9769
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !9771 {
entry:
  %write_error = alloca i8*, align 8, !ctir !180
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9772
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !9774
  %cmp = icmp ne i32 %call, 0, !dbg !9775
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !9776

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !9777
  %tobool = trunc i8 %1 to i1, !dbg !9777
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !9778

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !9779
  %2 = load i32, i32* %call2, align 4, !dbg !9779, !ctir !5
  %cmp3 = icmp eq i32 %2, 32, !dbg !9780
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !9781

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !9782, metadata !DIExpression()), !dbg !9784
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.238, i64 0, i64 0)) #9, !dbg !9785
  store i8* %call4, i8** %write_error, align 8, !dbg !9784
  %3 = load i8*, i8** @file_name.235, align 8, !dbg !9786
  %tobool5 = icmp ne i8* %3, null, !dbg !9786
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9788

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !9789
  %4 = load i32, i32* %call7, align 4, !dbg !9789, !ctir !5
  %5 = load i8*, i8** @file_name.235, align 8, !dbg !9790
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !9791
  %6 = load i8*, i8** %write_error, align 8, !dbg !9792
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.239, i64 0, i64 0), i8* %call8, i8* %6), !dbg !9793
  br label %if.end, !dbg !9793

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !9794
  %7 = load i32, i32* %call9, align 4, !dbg !9794, !ctir !5
  %8 = load i8*, i8** %write_error, align 8, !dbg !9795
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.240, i64 0, i64 0), i8* %8), !dbg !9796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !9797
  call void @_exit(i32 %9) #15, !dbg !9798
  unreachable, !dbg !9798

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9799
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !9801
  %cmp12 = icmp ne i32 %call11, 0, !dbg !9802
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !9803

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !9804
  call void @_exit(i32 %11) #15, !dbg !9805
  unreachable, !dbg !9805

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !9806
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !9807 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9811, metadata !DIExpression()), !dbg !9812
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9813
  %call = call i8* @mdir_name(i8* %0), !dbg !9814
  store i8* %call, i8** %result, align 8, !dbg !9812
  %1 = load i8*, i8** %result, align 8, !dbg !9815
  %tobool = icmp ne i8* %1, null, !dbg !9815
  br i1 %tobool, label %if.end, label %if.then, !dbg !9817

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !9818
  unreachable, !dbg !9818

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !9819
  ret i8* %2, !dbg !9820
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #10 !dbg !9821 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !52
  %length = alloca i64, align 8, !ctir !52
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9825, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !9827, metadata !DIExpression()), !dbg !9828
  store i64 0, i64* %prefix_length, align 8, !dbg !9828
  call void @llvm.dbg.declare(metadata i64* %length, metadata !9829, metadata !DIExpression()), !dbg !9830
  %0 = load i64, i64* %prefix_length, align 8, !dbg !9831
  %cmp = icmp ne i64 %0, 0, !dbg !9832
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9831

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9831

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9833
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !9833, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9833
  %conv = sext i8 %2 to i32, !dbg !9833
  %cmp1 = icmp eq i32 %conv, 47, !dbg !9833
  %3 = zext i1 %cmp1 to i64, !dbg !9833
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !9833
  br label %cond.end, !dbg !9831

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !9831
  %conv4 = sext i32 %cond3 to i64, !dbg !9834
  %4 = load i64, i64* %prefix_length, align 8, !dbg !9835
  %add = add i64 %4, %conv4, !dbg !9835
  store i64 %add, i64* %prefix_length, align 8, !dbg !9835
  %5 = load i8*, i8** %file.addr, align 8, !dbg !9836
  %call = call i8* @last_component(i8* %5) #14, !dbg !9838
  %6 = load i8*, i8** %file.addr, align 8, !dbg !9839
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9840
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !9840
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9840
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !9841
  br label %for.cond, !dbg !9842

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !9843
  %8 = load i64, i64* %length, align 8, !dbg !9845
  %cmp5 = icmp ult i64 %7, %8, !dbg !9846
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9847

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !9848
  %10 = load i64, i64* %length, align 8, !dbg !9848
  %sub = sub i64 %10, 1, !dbg !9848
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !9848, !ctir !180
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !9848
  %conv8 = sext i8 %11 to i32, !dbg !9848
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !9848
  br i1 %cmp9, label %if.end, label %if.then, !dbg !9850

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9851

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9848

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !9852
  %dec = add i64 %12, -1, !dbg !9852
  store i64 %dec, i64* %length, align 8, !dbg !9852
  br label %for.cond, !dbg !9853, !llvm.loop !9854

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !9856
  ret i64 %13, !dbg !9857
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !9858 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !52
  %append_dot = alloca i8, align 1, !ctir !139
  %dir = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  call void @llvm.dbg.declare(metadata i64* %length, metadata !9861, metadata !DIExpression()), !dbg !9862
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9863
  %call = call i64 @dir_len(i8* %0) #14, !dbg !9864
  store i64 %call, i64* %length, align 8, !dbg !9862
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !9865, metadata !DIExpression()), !dbg !9866
  %1 = load i64, i64* %length, align 8, !dbg !9867
  %cmp = icmp eq i64 %1, 0, !dbg !9868
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9869

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !9869

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !9866
  store i8 %frombool, i8* %append_dot, align 1, !dbg !9866
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !9870, metadata !DIExpression()), !dbg !9871
  %3 = load i64, i64* %length, align 8, !dbg !9872
  %4 = load i8, i8* %append_dot, align 1, !dbg !9873
  %tobool = trunc i8 %4 to i1, !dbg !9873
  %conv = zext i1 %tobool to i64, !dbg !9873
  %add = add i64 %3, %conv, !dbg !9874
  %add1 = add i64 %add, 1, !dbg !9875
  %call2 = call noalias i8* @malloc(i64 %add1) #9, !dbg !9876
  store i8* %call2, i8** %dir, align 8, !dbg !9871
  %5 = load i8*, i8** %dir, align 8, !dbg !9877
  %tobool3 = icmp ne i8* %5, null, !dbg !9877
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9879

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !9880
  br label %return, !dbg !9880

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !9881
  %7 = load i8*, i8** %file.addr, align 8, !dbg !9882
  %8 = load i64, i64* %length, align 8, !dbg !9883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !9884
  %9 = load i8, i8* %append_dot, align 1, !dbg !9885
  %tobool4 = trunc i8 %9 to i1, !dbg !9885
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9887

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !9888
  %11 = load i64, i64* %length, align 8, !dbg !9889
  %inc = add i64 %11, 1, !dbg !9889
  store i64 %inc, i64* %length, align 8, !dbg !9889
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !9888, !ctir !7
  store i8 46, i8* %arrayidx, align 1, !dbg !9890
  br label %if.end6, !dbg !9888

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !9891
  %13 = load i64, i64* %length, align 8, !dbg !9892
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !9891, !ctir !7
  store i8 0, i8* %arrayidx7, align 1, !dbg !9893
  %14 = load i8*, i8** %dir, align 8, !dbg !9894
  store i8* %14, i8** %retval, align 8, !dbg !9895
  br label %return, !dbg !9895

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !9896
  ret i8* %15, !dbg !9896
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #10 !dbg !9897 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %saw_slash = alloca i8, align 1, !ctir !139
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9901, metadata !DIExpression()), !dbg !9902
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9903
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !9904, !ctir !181
  store i8* %add.ptr, i8** %base, align 8, !dbg !9902
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !9907, metadata !DIExpression()), !dbg !9908
  store i8 0, i8* %saw_slash, align 1, !dbg !9908
  br label %while.cond, !dbg !9909

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !9910
  %2 = load i8, i8* %1, align 1, !dbg !9910, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !9910
  %cmp = icmp eq i32 %conv, 47, !dbg !9910
  br i1 %cmp, label %while.body, label %while.end, !dbg !9909

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !9911
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !9911, !ctir !181
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !9911
  br label %while.cond, !dbg !9909, !llvm.loop !9912

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !9913
  store i8* %4, i8** %p, align 8, !dbg !9915
  br label %for.cond, !dbg !9916

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !9917
  %6 = load i8, i8* %5, align 1, !dbg !9919, !ctir !181
  %tobool = icmp ne i8 %6, 0, !dbg !9920
  br i1 %tobool, label %for.body, label %for.end, !dbg !9920

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !9921
  %8 = load i8, i8* %7, align 1, !dbg !9921, !ctir !181
  %conv2 = sext i8 %8 to i32, !dbg !9921
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !9921
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9924

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !9925
  br label %if.end7, !dbg !9926

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !9927
  %tobool5 = trunc i8 %9 to i1, !dbg !9927
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9929

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !9930
  store i8* %10, i8** %base, align 8, !dbg !9932
  store i8 0, i8* %saw_slash, align 1, !dbg !9933
  br label %if.end, !dbg !9934

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !9935

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !9936
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9936, !ctir !181
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !9936
  br label %for.cond, !dbg !9937, !llvm.loop !9938

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !9940
  ret i8* %12, !dbg !9941
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #10 !dbg !9942 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !52
  %prefix_len = alloca i64, align 8, !ctir !52
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.declare(metadata i64* %len, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !9947, metadata !DIExpression()), !dbg !9948
  store i64 0, i64* %prefix_len, align 8, !dbg !9948
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9949
  %call = call i64 @strlen(i8* %0) #14, !dbg !9951
  store i64 %call, i64* %len, align 8, !dbg !9952
  br label %for.cond, !dbg !9953

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !9954
  %cmp = icmp ult i64 1, %1, !dbg !9956
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9957

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !9958
  %3 = load i64, i64* %len, align 8, !dbg !9958
  %sub = sub i64 %3, 1, !dbg !9958
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !9958, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9958
  %conv = sext i8 %4 to i32, !dbg !9958
  %cmp1 = icmp eq i32 %conv, 47, !dbg !9958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !9959
  br i1 %5, label %for.body, label %for.end, !dbg !9960

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !9961

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !9962
  %dec = add i64 %6, -1, !dbg !9962
  store i64 %dec, i64* %len, align 8, !dbg !9962
  br label %for.cond, !dbg !9963, !llvm.loop !9964

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !9966
  ret i64 %7, !dbg !9967
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !9968 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9975, metadata !DIExpression()), !dbg !9976
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !9977, metadata !DIExpression()), !dbg !9978
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !9981, metadata !DIExpression()), !dbg !9983
  %0 = load i32, i32* %fd.addr, align 4, !dbg !9983
  %1 = load i64, i64* %offset.addr, align 8, !dbg !9983
  %2 = load i64, i64* %len.addr, align 8, !dbg !9983
  %3 = load i32, i32* %advice.addr, align 4, !dbg !9983
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #9, !dbg !9983
  store i32 %call, i32* %__x, align 4, !dbg !9983
  %4 = load i32, i32* %__x, align 4, !dbg !9983
  ret void, !dbg !9984
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !9985 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10030, metadata !DIExpression()), !dbg !10031
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10032
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10032
  br i1 %tobool, label %if.then, label %if.end, !dbg !10034

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10035
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9, !dbg !10036
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10037
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10038
  br label %if.end, !dbg !10038

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10039
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10040 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !136
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1286
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10046, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10048, metadata !DIExpression()), !dbg !10049
  store i32 0, i32* %mode, align 4, !dbg !10049
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10050
  %and = and i32 %0, 64, !dbg !10052
  %tobool = icmp ne i32 %and, 0, !dbg !10052
  br i1 %tobool, label %if.then, label %if.end, !dbg !10053

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10054, metadata !DIExpression()), !dbg !10056
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10057, !ctir !1286
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10057
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10057
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10058, !ctir !1286
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10058
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10058
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10058
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10058

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10058
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10058
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10058
  %3 = bitcast i8* %2 to i32*, !dbg !10058
  %4 = add i32 %gp_offset, 8, !dbg !10058
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10058
  br label %vaarg.end, !dbg !10058

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10058
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10058
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10058
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10058
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10058
  br label %vaarg.end, !dbg !10058

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10058
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10058
  store i32 %6, i32* %mode, align 4, !dbg !10059
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10060, !ctir !1286
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10060
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10060
  br label %if.end, !dbg !10061

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10062
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10063
  %9 = load i32, i32* %mode, align 4, !dbg !10064
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10065
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10066
  ret i32 %call5, !dbg !10067
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10068 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1298
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1298
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10097, metadata !DIExpression()), !dbg !10098
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10099, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10101, metadata !DIExpression()), !dbg !10102
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10103
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10105
  br i1 %cmp, label %if.then, label %if.end, !dbg !10106

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10107

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10108
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10108
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10109
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10110
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10111
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10112
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10113, !ctir !1299
  store i8* %call1, i8** %name, align 8, !dbg !10114, !ctir !7
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10115
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10116, !ctir !10073
  %5 = load i64, i64* %st_ino, align 8, !dbg !10116, !ctir !461
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10117
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10118, !ctir !1299
  store i64 %5, i64* %st_ino2, align 8, !dbg !10119, !ctir !506
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10120
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10121, !ctir !10073
  %8 = load i64, i64* %st_dev, align 8, !dbg !10121, !ctir !460
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10122
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10123, !ctir !1299
  store i64 %8, i64* %st_dev3, align 8, !dbg !10124, !ctir !508
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10125, metadata !DIExpression()), !dbg !10127
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10128
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10129
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10129
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10130
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10130
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10127
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10131
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10133
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10134

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !10135
  unreachable, !dbg !10135

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10137
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10139
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10140
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10141

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10142
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10142
  call void @triple_free(i8* %18), !dbg !10144
  br label %if.end10, !dbg !10145

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10146
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10147 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1299
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10158, metadata !DIExpression()), !dbg !10159
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10160
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10162
  br i1 %cmp, label %if.then, label %if.end, !dbg !10163

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10164
  br label %return, !dbg !10164

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10165
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10166, !ctir !1299
  store i8* %1, i8** %name, align 8, !dbg !10167, !ctir !7
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10168
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10169, !ctir !10073
  %3 = load i64, i64* %st_ino, align 8, !dbg !10169, !ctir !461
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10170, !ctir !1299
  store i64 %3, i64* %st_ino1, align 8, !dbg !10171, !ctir !506
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10172
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10173, !ctir !10073
  %5 = load i64, i64* %st_dev, align 8, !dbg !10173, !ctir !460
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10174, !ctir !1299
  store i64 %5, i64* %st_dev2, align 8, !dbg !10175, !ctir !508
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10176
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10177
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10178
  %tobool = icmp ne i8* %call, null, !dbg !10179
  %lnot = xor i1 %tobool, true, !dbg !10179
  %lnot3 = xor i1 %lnot, true, !dbg !10180
  store i1 %lnot3, i1* %retval, align 1, !dbg !10181
  br label %return, !dbg !10181

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10182
  ret i1 %8, !dbg !10182
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10183 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10191
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10192
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10193
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10193, !ctir !7
  store i8 %call, i8* %arrayidx, align 1, !dbg !10194
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10195
  %and = and i32 %2, 256, !dbg !10196
  %tobool = icmp ne i32 %and, 0, !dbg !10195
  %3 = zext i1 %tobool to i64, !dbg !10195
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10195
  %conv = trunc i32 %cond to i8, !dbg !10195
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10197
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10197, !ctir !7
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10198
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10199
  %and2 = and i32 %5, 128, !dbg !10200
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10199
  %6 = zext i1 %tobool3 to i64, !dbg !10199
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10199
  %conv5 = trunc i32 %cond4 to i8, !dbg !10199
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10201
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10201, !ctir !7
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10202
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10203
  %and7 = and i32 %8, 2048, !dbg !10204
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10204
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10203

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10205
  %and9 = and i32 %9, 64, !dbg !10206
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10205
  %10 = zext i1 %tobool10 to i64, !dbg !10205
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10205
  br label %cond.end, !dbg !10203

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10207
  %and12 = and i32 %11, 64, !dbg !10208
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10207
  %12 = zext i1 %tobool13 to i64, !dbg !10207
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10207
  br label %cond.end, !dbg !10203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10203
  %conv16 = trunc i32 %cond15 to i8, !dbg !10209
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10210
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10210, !ctir !7
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10211
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10212
  %and18 = and i32 %14, 32, !dbg !10213
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10212
  %15 = zext i1 %tobool19 to i64, !dbg !10212
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10212
  %conv21 = trunc i32 %cond20 to i8, !dbg !10212
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10214
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10214, !ctir !7
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10215
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10216
  %and23 = and i32 %17, 16, !dbg !10217
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10216
  %18 = zext i1 %tobool24 to i64, !dbg !10216
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10216
  %conv26 = trunc i32 %cond25 to i8, !dbg !10216
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10218
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10218, !ctir !7
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10219
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10220
  %and28 = and i32 %20, 1024, !dbg !10221
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10221
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10220

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10222
  %and31 = and i32 %21, 8, !dbg !10223
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10222
  %22 = zext i1 %tobool32 to i64, !dbg !10222
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10222
  br label %cond.end38, !dbg !10220

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10224
  %and35 = and i32 %23, 8, !dbg !10225
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10224
  %24 = zext i1 %tobool36 to i64, !dbg !10224
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10224
  br label %cond.end38, !dbg !10220

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10220
  %conv40 = trunc i32 %cond39 to i8, !dbg !10226
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10227
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10227, !ctir !7
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10228
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10229
  %and42 = and i32 %26, 4, !dbg !10230
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10229
  %27 = zext i1 %tobool43 to i64, !dbg !10229
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10229
  %conv45 = trunc i32 %cond44 to i8, !dbg !10229
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10231
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10231, !ctir !7
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10232
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10233
  %and47 = and i32 %29, 2, !dbg !10234
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10233
  %30 = zext i1 %tobool48 to i64, !dbg !10233
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10233
  %conv50 = trunc i32 %cond49 to i8, !dbg !10233
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10235
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10235, !ctir !7
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10236
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10237
  %and52 = and i32 %32, 512, !dbg !10238
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10238
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10237

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10239
  %and55 = and i32 %33, 1, !dbg !10240
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10239
  %34 = zext i1 %tobool56 to i64, !dbg !10239
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10239
  br label %cond.end62, !dbg !10237

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10241
  %and59 = and i32 %35, 1, !dbg !10242
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10241
  %36 = zext i1 %tobool60 to i64, !dbg !10241
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10241
  br label %cond.end62, !dbg !10237

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10237
  %conv64 = trunc i32 %cond63 to i8, !dbg !10243
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10244
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10244, !ctir !7
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10245
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10246
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10246, !ctir !7
  store i8 32, i8* %arrayidx66, align 1, !dbg !10247
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10248
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10248, !ctir !7
  store i8 0, i8* %arrayidx67, align 1, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10251 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10256
  %and = and i32 %0, 61440, !dbg !10256
  %cmp = icmp eq i32 %and, 32768, !dbg !10256
  br i1 %cmp, label %if.then, label %if.end, !dbg !10258

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10259
  br label %return, !dbg !10259

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10260
  %and1 = and i32 %1, 61440, !dbg !10260
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10260
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10262

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10263
  br label %return, !dbg !10263

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10264
  %and5 = and i32 %2, 61440, !dbg !10264
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10264
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10266

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10267
  br label %return, !dbg !10267

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10268
  %and9 = and i32 %3, 61440, !dbg !10268
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10268
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10270

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10271
  br label %return, !dbg !10271

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10272
  %and13 = and i32 %4, 61440, !dbg !10272
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10272
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10274

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10275
  br label %return, !dbg !10275

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10276
  %and17 = and i32 %5, 61440, !dbg !10276
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10276
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10278

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10279
  br label %return, !dbg !10279

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10280
  %and21 = and i32 %6, 61440, !dbg !10280
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10280
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10282

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10283
  br label %return, !dbg !10283

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10284
  br label %return, !dbg !10284

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10285
  ret i8 %7, !dbg !10285
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10286 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10312, metadata !DIExpression()), !dbg !10313
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10314, metadata !DIExpression()), !dbg !10315
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10316
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10317, !ctir !10290
  %1 = load i32, i32* %st_mode, align 8, !dbg !10317, !ctir !137
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10318
  call void @strmode(i32 %1, i8* %2), !dbg !10319
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10320
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10320, !ctir !10290
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10320, !ctir !137
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10320
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10320, !ctir !10290
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10320, !ctir !137
  %sub = sub i32 %4, %6, !dbg !10320
  %tobool = icmp ne i32 %sub, 0, !dbg !10320
  br i1 %tobool, label %if.then, label %if.else, !dbg !10322

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10323
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10323, !ctir !7
  store i8 70, i8* %arrayidx, align 1, !dbg !10324
  br label %if.end18, !dbg !10323

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10325
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10325, !ctir !10290
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10325, !ctir !137
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10325
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10325, !ctir !10290
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10325, !ctir !137
  %sub5 = sub i32 %9, %11, !dbg !10325
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10325
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10328

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10329
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10329, !ctir !7
  store i8 81, i8* %arrayidx8, align 1, !dbg !10330
  br label %if.end17, !dbg !10329

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10331
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10331, !ctir !10290
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10331, !ctir !137
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10331
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10331, !ctir !10290
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10331, !ctir !137
  %sub12 = sub i32 %14, %16, !dbg !10331
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10331
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10333

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10334
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10334, !ctir !7
  store i8 83, i8* %arrayidx15, align 1, !dbg !10335
  br label %if.end, !dbg !10334

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10336
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10337 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10347, metadata !DIExpression()), !dbg !10348
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10349
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10350
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10351
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10352
  store i8* %call, i8** %p, align 8, !dbg !10348
  %3 = load i8*, i8** %p, align 8, !dbg !10353
  %cmp = icmp eq i8* %3, null, !dbg !10355
  br i1 %cmp, label %if.then, label %if.end, !dbg !10356

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10357
  unreachable, !dbg !10357

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10358
  ret i8* %4, !dbg !10359
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10360 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !180
  %dirbaselen = alloca i64, align 8, !ctir !52
  %dirlen = alloca i64, align 8, !ctir !52
  %baselen = alloca i64, align 8, !ctir !52
  %sep = alloca i8, align 1, !ctir !8
  %p_concat = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10368, metadata !DIExpression()), !dbg !10369
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10370
  %call = call i8* @last_component(i8* %0) #14, !dbg !10371
  store i8* %call, i8** %dirbase, align 8, !dbg !10369
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10372, metadata !DIExpression()), !dbg !10373
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10374
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10375
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10373
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10376, metadata !DIExpression()), !dbg !10377
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10378
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10379
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10380
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10380
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10380
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10381
  %add = add i64 %sub.ptr.sub, %4, !dbg !10382
  store i64 %add, i64* %dirlen, align 8, !dbg !10377
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10383, metadata !DIExpression()), !dbg !10384
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10385
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10386
  store i64 %call2, i64* %baselen, align 8, !dbg !10384
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i8 0, i8* %sep, align 1, !dbg !10388
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10389
  %tobool = icmp ne i64 %6, 0, !dbg !10389
  br i1 %tobool, label %if.then, label %if.else, !dbg !10391

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10392
  %8 = load i64, i64* %dirlen, align 8, !dbg !10392
  %sub = sub i64 %8, 1, !dbg !10392
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10392, !ctir !180
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10392
  %conv = sext i8 %9 to i32, !dbg !10392
  %cmp = icmp eq i32 %conv, 47, !dbg !10392
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10395

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10396
  %11 = load i8, i8* %10, align 1, !dbg !10396, !ctir !181
  %conv4 = sext i8 %11 to i32, !dbg !10396
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10396
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10397

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10398
  br label %if.end, !dbg !10399

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10400

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10401
  %13 = load i8, i8* %12, align 1, !dbg !10401, !ctir !181
  %conv8 = sext i8 %13 to i32, !dbg !10401
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10401
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10403

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10404
  br label %if.end12, !dbg !10406

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10407, metadata !DIExpression()), !dbg !10408
  %14 = load i64, i64* %dirlen, align 8, !dbg !10409
  %15 = load i8, i8* %sep, align 1, !dbg !10410
  %conv14 = sext i8 %15 to i32, !dbg !10410
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10411
  %conv16 = zext i1 %cmp15 to i32, !dbg !10411
  %conv17 = sext i32 %conv16 to i64, !dbg !10412
  %add18 = add i64 %14, %conv17, !dbg !10413
  %16 = load i64, i64* %baselen, align 8, !dbg !10414
  %add19 = add i64 %add18, %16, !dbg !10415
  %add20 = add i64 %add19, 1, !dbg !10416
  %call21 = call noalias i8* @malloc(i64 %add20) #9, !dbg !10417
  store i8* %call21, i8** %p_concat, align 8, !dbg !10408
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10418, metadata !DIExpression()), !dbg !10419
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10420
  %cmp22 = icmp eq i8* %17, null, !dbg !10422
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10423

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10424
  br label %return, !dbg !10424

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10425
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10426
  %20 = load i64, i64* %dirlen, align 8, !dbg !10427
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #9, !dbg !10428
  store i8* %call26, i8** %p, align 8, !dbg !10429
  %21 = load i8, i8* %sep, align 1, !dbg !10430
  %22 = load i8*, i8** %p, align 8, !dbg !10431
  store i8 %21, i8* %22, align 1, !dbg !10432, !ctir !8
  %23 = load i8, i8* %sep, align 1, !dbg !10433
  %conv27 = sext i8 %23 to i32, !dbg !10433
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10434
  %conv29 = zext i1 %cmp28 to i32, !dbg !10434
  %24 = load i8*, i8** %p, align 8, !dbg !10435
  %idx.ext = sext i32 %conv29 to i64, !dbg !10435
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10435, !ctir !8
  store i8* %add.ptr, i8** %p, align 8, !dbg !10435
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10436
  %tobool30 = icmp ne i8** %25, null, !dbg !10436
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10438

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10439
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10440
  store i8* %26, i8** %27, align 8, !dbg !10441, !ctir !7
  br label %if.end32, !dbg !10442

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10443
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10444
  %30 = load i64, i64* %baselen, align 8, !dbg !10445
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #9, !dbg !10446
  store i8* %call33, i8** %p, align 8, !dbg !10447
  %31 = load i8*, i8** %p, align 8, !dbg !10448
  store i8 0, i8* %31, align 1, !dbg !10449, !ctir !8
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10450
  store i8* %32, i8** %retval, align 8, !dbg !10451
  br label %return, !dbg !10451

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10452
  ret i8* %33, !dbg !10452
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10453 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !7
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10458, metadata !DIExpression()), !dbg !10459
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10462, metadata !DIExpression()), !dbg !10463
  store i64 0, i64* %total, align 8, !dbg !10463
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10464, metadata !DIExpression()), !dbg !10465
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10466
  store i8* %0, i8** %ptr, align 8, !dbg !10465
  br label %while.cond, !dbg !10467

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10468
  %cmp = icmp ugt i64 %1, 0, !dbg !10469
  br i1 %cmp, label %while.body, label %while.end, !dbg !10467

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10470, metadata !DIExpression()), !dbg !10472
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10473
  %3 = load i8*, i8** %ptr, align 8, !dbg !10474
  %4 = load i64, i64* %count.addr, align 8, !dbg !10475
  %call = call i64 @safe_read(i32 %2, i8* %3, i64 %4), !dbg !10476
  store i64 %call, i64* %n_rw, align 8, !dbg !10472
  %5 = load i64, i64* %n_rw, align 8, !dbg !10477
  %cmp1 = icmp eq i64 %5, -1, !dbg !10479
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10480

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10481

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10482
  %cmp2 = icmp eq i64 %6, 0, !dbg !10484
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10485

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !10486
  store i32 0, i32* %call4, align 4, !dbg !10488, !ctir !5
  br label %while.end, !dbg !10489

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10490
  %8 = load i64, i64* %total, align 8, !dbg !10491
  %add = add i64 %8, %7, !dbg !10491
  store i64 %add, i64* %total, align 8, !dbg !10491
  %9 = load i64, i64* %n_rw, align 8, !dbg !10492
  %10 = load i8*, i8** %ptr, align 8, !dbg !10493
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10493, !ctir !8
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10493
  %11 = load i64, i64* %n_rw, align 8, !dbg !10494
  %12 = load i64, i64* %count.addr, align 8, !dbg !10495
  %sub = sub i64 %12, %11, !dbg !10495
  store i64 %sub, i64* %count.addr, align 8, !dbg !10495
  br label %while.cond, !dbg !10467, !llvm.loop !10496

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10498
  ret i64 %13, !dbg !10499
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10500 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !180
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i64 0, i64* %total, align 8, !dbg !10511
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10512, metadata !DIExpression()), !dbg !10513
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10514
  store i8* %0, i8** %ptr, align 8, !dbg !10513
  br label %while.cond, !dbg !10515

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10516
  %cmp = icmp ugt i64 %1, 0, !dbg !10517
  br i1 %cmp, label %while.body, label %while.end, !dbg !10515

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10518, metadata !DIExpression()), !dbg !10520
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10521
  %3 = load i8*, i8** %ptr, align 8, !dbg !10522
  %4 = load i64, i64* %count.addr, align 8, !dbg !10523
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !10524
  store i64 %call, i64* %n_rw, align 8, !dbg !10520
  %5 = load i64, i64* %n_rw, align 8, !dbg !10525
  %cmp1 = icmp eq i64 %5, -1, !dbg !10527
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10528

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10529

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10530
  %cmp2 = icmp eq i64 %6, 0, !dbg !10532
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10533

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !10534
  store i32 28, i32* %call4, align 4, !dbg !10536, !ctir !5
  br label %while.end, !dbg !10537

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10538
  %8 = load i64, i64* %total, align 8, !dbg !10539
  %add = add i64 %8, %7, !dbg !10539
  store i64 %add, i64* %total, align 8, !dbg !10539
  %9 = load i64, i64* %n_rw, align 8, !dbg !10540
  %10 = load i8*, i8** %ptr, align 8, !dbg !10541
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10541, !ctir !181
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10541
  %11 = load i64, i64* %n_rw, align 8, !dbg !10542
  %12 = load i64, i64* %count.addr, align 8, !dbg !10543
  %sub = sub i64 %12, %11, !dbg !10543
  store i64 %sub, i64* %count.addr, align 8, !dbg !10543
  br label %while.cond, !dbg !10515, !llvm.loop !10544

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10546
  ret i64 %13, !dbg !10547
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #10 !dbg !10548 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10552, metadata !DIExpression()), !dbg !10553
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10554
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !10555, !ctir !807
  %1 = load i64, i64* %n_buckets, align 8, !dbg !10555, !ctir !52
  ret i64 %1, !dbg !10556
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #10 !dbg !10557 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10558, metadata !DIExpression()), !dbg !10559
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10560
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !10561, !ctir !807
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !10561, !ctir !52
  ret i64 %1, !dbg !10562
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #10 !dbg !10563 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10566
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10567, !ctir !807
  %1 = load i64, i64* %n_entries, align 8, !dbg !10567, !ctir !52
  ret i64 %1, !dbg !10568
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #10 !dbg !10569 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %max_bucket_length = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  %bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10570, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10572, metadata !DIExpression()), !dbg !10573
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10574, metadata !DIExpression()), !dbg !10575
  store i64 0, i64* %max_bucket_length, align 8, !dbg !10575
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10576
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10578, !ctir !807
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10578, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10579
  br label %for.cond, !dbg !10580

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10581
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10583
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10584, !ctir !807
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10584, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10585
  br i1 %cmp, label %for.body, label %for.end, !dbg !10586

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10587
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10590, !ctir !820
  %6 = load i8*, i8** %data, align 8, !dbg !10590, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !10587
  br i1 %tobool, label %if.then, label %if.end5, !dbg !10591

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10592, metadata !DIExpression()), !dbg !10594
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10595
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10594
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !10596, metadata !DIExpression()), !dbg !10597
  store i64 1, i64* %bucket_length, align 8, !dbg !10597
  br label %while.cond, !dbg !10598

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10599
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10600, !ctir !820
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10600, !ctir !813
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !10601
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10602
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !10598
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10598

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !10603
  %inc = add i64 %11, 1, !dbg !10603
  store i64 %inc, i64* %bucket_length, align 8, !dbg !10603
  br label %while.cond, !dbg !10598, !llvm.loop !10604

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !10605
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10607
  %cmp3 = icmp ugt i64 %12, %13, !dbg !10608
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10609

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !10610
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !10611
  br label %if.end, !dbg !10612

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !10613

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10614

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10615
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !10615, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10615
  br label %for.cond, !dbg !10616, !llvm.loop !10617

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !10619
  ret i64 %16, !dbg !10620
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #10 !dbg !10621 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %n_entries = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10626, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !10628, metadata !DIExpression()), !dbg !10629
  store i64 0, i64* %n_buckets_used, align 8, !dbg !10629
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i64 0, i64* %n_entries, align 8, !dbg !10631
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10632
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10634, !ctir !807
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10634, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10635
  br label %for.cond, !dbg !10636

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10637
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10639
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10640, !ctir !807
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10640, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10641
  br i1 %cmp, label %for.body, label %for.end, !dbg !10642

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10643
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10646, !ctir !820
  %6 = load i8*, i8** %data, align 8, !dbg !10646, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !10643
  br i1 %tobool, label %if.then, label %if.end, !dbg !10647

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10648, metadata !DIExpression()), !dbg !10650
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10651
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10650
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !10652
  %inc = add i64 %8, 1, !dbg !10652
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !10652
  %9 = load i64, i64* %n_entries, align 8, !dbg !10653
  %inc2 = add i64 %9, 1, !dbg !10653
  store i64 %inc2, i64* %n_entries, align 8, !dbg !10653
  br label %while.cond, !dbg !10654

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10655
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !10656, !ctir !820
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10656, !ctir !813
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !10657
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10658
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !10654
  br i1 %tobool3, label %while.body, label %while.end, !dbg !10654

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !10659
  %inc4 = add i64 %13, 1, !dbg !10659
  store i64 %inc4, i64* %n_entries, align 8, !dbg !10659
  br label %while.cond, !dbg !10654, !llvm.loop !10660

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !10661

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !10662

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10663
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !10663, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10663
  br label %for.cond, !dbg !10664, !llvm.loop !10665

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !10667
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10669
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !10670, !ctir !807
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !10670, !ctir !52
  %cmp6 = icmp eq i64 %15, %17, !dbg !10671
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !10672

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !10673
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10674
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !10675, !ctir !807
  %20 = load i64, i64* %n_entries7, align 8, !dbg !10675, !ctir !52
  %cmp8 = icmp eq i64 %18, %20, !dbg !10676
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10677

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !10678
  br label %return, !dbg !10678

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !10679
  br label %return, !dbg !10679

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !10680
  ret i1 %21, !dbg !10680
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !10681 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !52
  %n_buckets = alloca i64, align 8, !ctir !52
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %max_bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !10728, metadata !DIExpression()), !dbg !10729
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10730
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !10731
  store i64 %call, i64* %n_entries, align 8, !dbg !10729
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !10732, metadata !DIExpression()), !dbg !10733
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10734
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !10735
  store i64 %call1, i64* %n_buckets, align 8, !dbg !10733
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !10736, metadata !DIExpression()), !dbg !10737
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10738
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !10739
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !10737
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10740, metadata !DIExpression()), !dbg !10741
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10742
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !10743
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !10741
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10744
  %5 = load i64, i64* %n_entries, align 8, !dbg !10745
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.269, i64 0, i64 0), i64 %5), !dbg !10746
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10747
  %7 = load i64, i64* %n_buckets, align 8, !dbg !10748
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.270, i64 0, i64 0), i64 %7), !dbg !10749
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10750
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !10751
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !10752
  %conv = uitofp i64 %10 to double, !dbg !10752
  %mul = fmul double 1.000000e+02, %conv, !dbg !10753
  %11 = load i64, i64* %n_buckets, align 8, !dbg !10754
  %conv6 = uitofp i64 %11 to double, !dbg !10754
  %div = fdiv double %mul, %conv6, !dbg !10755
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.271, i64 0, i64 0), i64 %9, double %div), !dbg !10756
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10757
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10758
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.272, i64 0, i64 0), i64 %13), !dbg !10759
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !10761 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10764, metadata !DIExpression()), !dbg !10765
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !10766, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10768, metadata !DIExpression()), !dbg !10769
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10770
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !10771
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !10772
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !10769
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10773, metadata !DIExpression()), !dbg !10774
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10775
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !10777, !ctir !820
  %3 = load i8*, i8** %data, align 8, !dbg !10777, !ctir !47
  %cmp = icmp eq i8* %3, null, !dbg !10778
  br i1 %cmp, label %if.then, label %if.end, !dbg !10779

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10780
  br label %return, !dbg !10780

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10781
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !10783
  br label %for.cond, !dbg !10784

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10785
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !10787
  br i1 %tobool, label %for.body, label %for.end, !dbg !10787

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !10788
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10790
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !10791, !ctir !820
  %8 = load i8*, i8** %data2, align 8, !dbg !10791, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !10792
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !10793

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10794
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !10795, !ctir !807
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !10795, !ctir !842
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !10796
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10797
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !10798, !ctir !820
  %13 = load i8*, i8** %data4, align 8, !dbg !10798, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !10794
  br i1 %call5, label %if.then6, label %if.end8, !dbg !10799

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10800
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !10801, !ctir !820
  %15 = load i8*, i8** %data7, align 8, !dbg !10801, !ctir !47
  store i8* %15, i8** %retval, align 8, !dbg !10802
  br label %return, !dbg !10802

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !10803

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10804
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !10805, !ctir !820
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10805, !ctir !813
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !10806
  br label %for.cond, !dbg !10807, !llvm.loop !10808

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !10810
  br label %return, !dbg !10810

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !10811
  ret i8* %18, !dbg !10811
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !10812 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10819, metadata !DIExpression()), !dbg !10820
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10821
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !10822, !ctir !807
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !10822, !ctir !837
  %2 = load i8*, i8** %key.addr, align 8, !dbg !10823
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10824
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !10825, !ctir !807
  %4 = load i64, i64* %n_buckets, align 8, !dbg !10825, !ctir !52
  %call = call i64 %1(i8* %2, i64 %4), !dbg !10821
  store i64 %call, i64* %n, align 8, !dbg !10820
  %5 = load i64, i64* %n, align 8, !dbg !10826
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10828
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !10829, !ctir !807
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !10829, !ctir !52
  %cmp = icmp ult i64 %5, %7, !dbg !10830
  br i1 %cmp, label %if.end, label %if.then, !dbg !10831

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !10832
  unreachable, !dbg !10832

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10833
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !10834, !ctir !807
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10834, !ctir !813
  %10 = load i64, i64* %n, align 8, !dbg !10835
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !10836, !ctir !814
  ret %struct.hash_entry* %add.ptr, !dbg !10837
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #10 !dbg !10838 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10845
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10847, !ctir !807
  %1 = load i64, i64* %n_entries, align 8, !dbg !10847, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !10848
  br i1 %cmp, label %if.then, label %if.end, !dbg !10849

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10850
  br label %return, !dbg !10850

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10851
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !10853, !ctir !807
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10853, !ctir !813
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !10854
  br label %for.cond, !dbg !10855

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10856
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10859
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !10860, !ctir !807
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10860, !ctir !819
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !10861
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !10862

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !10863
  unreachable, !dbg !10863

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10864
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !10866, !ctir !820
  %8 = load i8*, i8** %data, align 8, !dbg !10866, !ctir !47
  %tobool = icmp ne i8* %8, null, !dbg !10864
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !10867

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10868
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !10869, !ctir !820
  %10 = load i8*, i8** %data5, align 8, !dbg !10869, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !10870
  br label %return, !dbg !10870

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !10871

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10872
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !10872, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10872
  br label %for.cond, !dbg !10873, !llvm.loop !10874

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !10877
  ret i8* %12, !dbg !10877
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !10878 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !10881, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10883, metadata !DIExpression()), !dbg !10884
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10885
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !10886
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !10887
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !10884
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10888, metadata !DIExpression()), !dbg !10889
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10890
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !10891
  br label %do.body, !dbg !10892

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10893
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !10896, !ctir !820
  %4 = load i8*, i8** %data, align 8, !dbg !10896, !ctir !47
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !10897
  %cmp = icmp eq i8* %4, %5, !dbg !10898
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10899

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10900
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !10901, !ctir !820
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10901, !ctir !813
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !10900
  br i1 %tobool, label %if.then, label %if.end, !dbg !10902

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10903
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10904, !ctir !820
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !10904, !ctir !813
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !10905, !ctir !814
  %10 = load i8*, i8** %data3, align 8, !dbg !10905, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !10906
  br label %return, !dbg !10906

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10907
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !10908, !ctir !820
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !10908, !ctir !813
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !10909
  br label %do.cond, !dbg !10910

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10911
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !10912
  br i1 %cmp5, label %do.body, label %do.end, !dbg !10910, !llvm.loop !10913

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !10915

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10916
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !10916, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10916
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10917
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !10918, !ctir !807
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10918, !ctir !819
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !10919
  br i1 %cmp6, label %while.body, label %while.end, !dbg !10915

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10920
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !10922, !ctir !820
  %18 = load i8*, i8** %data7, align 8, !dbg !10922, !ctir !47
  %tobool8 = icmp ne i8* %18, null, !dbg !10920
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10923

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10924
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !10925, !ctir !820
  %20 = load i8*, i8** %data10, align 8, !dbg !10925, !ctir !47
  store i8* %20, i8** %retval, align 8, !dbg !10926
  br label %return, !dbg !10926

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !10915, !llvm.loop !10927

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !10929
  br label %return, !dbg !10929

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !10930
  ret i8* %21, !dbg !10930
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !10931 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !10938, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !10940, metadata !DIExpression()), !dbg !10941
  store i64 0, i64* %counter, align 8, !dbg !10941
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10942, metadata !DIExpression()), !dbg !10943
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10944, metadata !DIExpression()), !dbg !10945
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10946
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10948, !ctir !807
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10948, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10949
  br label %for.cond, !dbg !10950

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10951
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10953
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10954, !ctir !807
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10954, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10955
  br i1 %cmp, label %for.body, label %for.end10, !dbg !10956

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10957
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10960, !ctir !820
  %6 = load i8*, i8** %data, align 8, !dbg !10960, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !10957
  br i1 %tobool, label %if.then, label %if.end8, !dbg !10961

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10962
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10965
  br label %for.cond2, !dbg !10966

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10967
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !10969
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !10969

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !10970
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !10973
  %cmp5 = icmp uge i64 %9, %10, !dbg !10974
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10975

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !10976
  store i64 %11, i64* %retval, align 8, !dbg !10977
  br label %return, !dbg !10977

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10978
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !10979, !ctir !820
  %13 = load i8*, i8** %data7, align 8, !dbg !10979, !ctir !47
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !10980
  %15 = load i64, i64* %counter, align 8, !dbg !10981
  %inc = add i64 %15, 1, !dbg !10981
  store i64 %inc, i64* %counter, align 8, !dbg !10981
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !10980, !ctir !852
  store i8* %13, i8** %arrayidx, align 8, !dbg !10982
  br label %for.inc, !dbg !10983

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10984
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !10985, !ctir !820
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10985, !ctir !813
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !10986
  br label %for.cond2, !dbg !10987, !llvm.loop !10988

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !10990

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !10991

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10992
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !10992, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10992
  br label %for.cond, !dbg !10993, !llvm.loop !10994

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !10996
  store i64 %19, i64* %retval, align 8, !dbg !10997
  br label %return, !dbg !10997

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !10998
  ret i64 %20, !dbg !10998
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !10999 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !819
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !819
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11006, metadata !DIExpression()), !dbg !11007
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  store i8* %processor_data, i8** %processor_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11010, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11012, metadata !DIExpression()), !dbg !11013
  store i64 0, i64* %counter, align 8, !dbg !11013
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11014, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11016, metadata !DIExpression()), !dbg !11017
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11018
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11020, !ctir !807
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11020, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11021
  br label %for.cond, !dbg !11022

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11023
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11025
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11026, !ctir !807
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11026, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11027
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11028

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11029
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11032, !ctir !820
  %6 = load i8*, i8** %data, align 8, !dbg !11032, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11029
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11033

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11034
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11037
  br label %for.cond2, !dbg !11038

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11039
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11041
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11041

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11042
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11045
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11046, !ctir !820
  %11 = load i8*, i8** %data5, align 8, !dbg !11046, !ctir !47
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11047
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11042
  br i1 %call, label %if.end, label %if.then6, !dbg !11048

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11049
  store i64 %13, i64* %retval, align 8, !dbg !11050
  br label %return, !dbg !11050

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11051
  %inc = add i64 %14, 1, !dbg !11051
  store i64 %inc, i64* %counter, align 8, !dbg !11051
  br label %for.inc, !dbg !11052

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11053
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11054, !ctir !820
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11054, !ctir !813
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11055
  br label %for.cond2, !dbg !11056, !llvm.loop !11057

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11059

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11060

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11061
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11061, !ctir !820
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11061
  br label %for.cond, !dbg !11062, !llvm.loop !11063

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11065
  store i64 %18, i64* %retval, align 8, !dbg !11066
  br label %return, !dbg !11066

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11067
  ret i64 %19, !dbg !11067
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #10 !dbg !11068 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !52
  %ch = alloca i8, align 1, !ctir !585
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11075, metadata !DIExpression()), !dbg !11076
  store i64 0, i64* %value, align 8, !dbg !11076
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11077, metadata !DIExpression()), !dbg !11078
  br label %for.cond, !dbg !11079

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11080
  %1 = load i8, i8* %0, align 1, !dbg !11083, !ctir !181
  store i8 %1, i8* %ch, align 1, !dbg !11084
  %tobool = icmp ne i8 %1, 0, !dbg !11085
  br i1 %tobool, label %for.body, label %for.end, !dbg !11085

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11086
  %mul = mul i64 %2, 31, !dbg !11087
  %3 = load i8, i8* %ch, align 1, !dbg !11088
  %conv = zext i8 %3 to i64, !dbg !11088
  %add = add i64 %mul, %conv, !dbg !11089
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11090
  %rem = urem i64 %add, %4, !dbg !11091
  store i64 %rem, i64* %value, align 8, !dbg !11092
  br label %for.inc, !dbg !11093

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11094
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11094, !ctir !181
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11094
  br label %for.cond, !dbg !11095, !llvm.loop !11096

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11098
  ret i64 %6, !dbg !11099
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11100 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11106
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11107
  ret void, !dbg !11108
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11109 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !853
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11112, metadata !DIExpression()), !dbg !11113
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11116, metadata !DIExpression()), !dbg !11117
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11118, metadata !DIExpression()), !dbg !11119
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11122, metadata !DIExpression()), !dbg !11123
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11124
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11126
  br i1 %cmp, label %if.then, label %if.end, !dbg !11127

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11128
  br label %if.end, !dbg !11129

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11130
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11132
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11133

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11134
  br label %if.end3, !dbg !11135

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !11136
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11136
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11137
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11138
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11140
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11141

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11142
  br label %return, !dbg !11142

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11143
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11143
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11145

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11146
  br label %if.end8, !dbg !11147

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11148
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11149
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11150, !ctir !808
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11151, !ctir !825
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11152
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11154
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11155

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11156

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11158
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11159
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11160
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11161
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11162, !ctir !808
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11163, !ctir !52
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11164
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11166, !ctir !808
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11166, !ctir !52
  %tobool15 = icmp ne i64 %12, 0, !dbg !11164
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11167

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11168

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11169
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11170, !ctir !808
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11170, !ctir !52
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #9, !dbg !11171
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11171
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11172
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11173, !ctir !808
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11174, !ctir !813
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11175
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11177, !ctir !808
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11177, !ctir !813
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11178
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11179

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11180

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11181
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11182, !ctir !808
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11182, !ctir !813
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11183
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11184, !ctir !808
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11184, !ctir !52
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11185, !ctir !814
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11186
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11187, !ctir !808
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11188, !ctir !819
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11189
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11190, !ctir !808
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11191, !ctir !52
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11192
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11193, !ctir !808
  store i64 0, i64* %n_entries, align 8, !dbg !11194, !ctir !52
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11195
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11196
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11197, !ctir !808
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11198, !ctir !837
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11199
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11200
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11201, !ctir !808
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11202, !ctir !842
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11203
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11204
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11205, !ctir !808
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11206, !ctir !847
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11207
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11208, !ctir !808
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11209, !ctir !813
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11210
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11211
  br label %return, !dbg !11211

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11212), !dbg !11213
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11214
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11214
  call void @free(i8* %35) #9, !dbg !11215
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11216
  br label %return, !dbg !11216

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11217
  ret %struct.hash_table* %36, !dbg !11217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11218 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !52
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11219, metadata !DIExpression()), !dbg !11220
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11221, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11223, metadata !DIExpression()), !dbg !11224
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11225
  %1 = ptrtoint i8* %0 to i64, !dbg !11226
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11227
  store i64 %call, i64* %val, align 8, !dbg !11224
  %2 = load i64, i64* %val, align 8, !dbg !11228
  %3 = load i64, i64* %n.addr, align 8, !dbg !11229
  %rem = urem i64 %2, %3, !dbg !11230
  ret i64 %rem, !dbg !11231
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11232 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11235, metadata !DIExpression()), !dbg !11236
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11237
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11238
  %cmp = icmp eq i8* %0, %1, !dbg !11239
  ret i1 %cmp, !dbg !11240
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11241 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !825
  %epsilon = alloca float, align 4, !ctir !831
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11244, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11246, metadata !DIExpression()), !dbg !11247
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11248
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11249, !ctir !808
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11249, !ctir !825
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11247
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11252
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11254
  br i1 %cmp, label %if.then, label %if.end, !dbg !11255

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11256
  br label %return, !dbg !11256

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11257
  %3 = load float, float* %epsilon, align 4, !dbg !11258
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11260
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11261, !ctir !826
  %5 = load float, float* %growth_threshold, align 4, !dbg !11261, !ctir !831
  %cmp2 = fcmp olt float %3, %5, !dbg !11262
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11263

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11264
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11265, !ctir !826
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11265, !ctir !831
  %8 = load float, float* %epsilon, align 4, !dbg !11266
  %sub = fsub float 1.000000e+00, %8, !dbg !11267
  %cmp4 = fcmp olt float %7, %sub, !dbg !11268
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11269

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11270
  %add = fadd float 1.000000e+00, %9, !dbg !11271
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11272
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11273, !ctir !826
  %11 = load float, float* %growth_factor, align 4, !dbg !11273, !ctir !831
  %cmp6 = fcmp olt float %add, %11, !dbg !11274
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11275

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11276
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11277, !ctir !826
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11277, !ctir !831
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11278
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11279

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11280
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11281, !ctir !826
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11281, !ctir !831
  %16 = load float, float* %epsilon, align 4, !dbg !11282
  %add11 = fadd float %15, %16, !dbg !11283
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11284
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11285, !ctir !826
  %18 = load float, float* %shrink_factor, align 4, !dbg !11285, !ctir !831
  %cmp12 = fcmp olt float %add11, %18, !dbg !11286
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11287

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11288
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11289, !ctir !826
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11289, !ctir !831
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11290
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11291

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11292
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11293, !ctir !826
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11293, !ctir !831
  %23 = load float, float* %epsilon, align 4, !dbg !11294
  %add18 = fadd float %22, %23, !dbg !11295
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11296
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11297, !ctir !826
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11297, !ctir !831
  %cmp20 = fcmp olt float %add18, %25, !dbg !11298
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11299

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11300
  br label %return, !dbg !11300

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11301
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11302, !ctir !808
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11303, !ctir !825
  store i1 false, i1* %retval, align 1, !dbg !11304
  br label %return, !dbg !11304

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11305
  ret i1 %27, !dbg !11305
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #10 !dbg !11306 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !831
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11313
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11315, !ctir !826
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11315
  %tobool = trunc i8 %1 to i1, !dbg !11315, !ctir !139
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11316

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11317, metadata !DIExpression()), !dbg !11319
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11320
  %conv = uitofp i64 %2 to float, !dbg !11320
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11321
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11322, !ctir !826
  %4 = load float, float* %growth_threshold, align 4, !dbg !11322, !ctir !831
  %div = fdiv float %conv, %4, !dbg !11323
  store float %div, float* %new_candidate, align 4, !dbg !11319
  %5 = load float, float* %new_candidate, align 4, !dbg !11324
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11326
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11327

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11328
  br label %return, !dbg !11328

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11329
  %conv3 = fptoui float %6 to i64, !dbg !11329
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11330
  br label %if.end4, !dbg !11331

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11332
  %call = call i64 @next_prime(i64 %7) #16, !dbg !11333
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11334
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11335
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11335
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11337

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11338
  br label %return, !dbg !11338

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11339
  store i64 %9, i64* %retval, align 8, !dbg !11340
  br label %return, !dbg !11340

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11341
  ret i64 %10, !dbg !11341
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11342 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11347
  %cmp = icmp ult i64 %0, 10, !dbg !11349
  br i1 %cmp, label %if.then, label %if.end, !dbg !11350

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11351
  br label %if.end, !dbg !11352

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11353
  %or = or i64 %1, 1, !dbg !11353
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11353
  br label %while.cond, !dbg !11354

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11355
  %cmp1 = icmp ne i64 -1, %2, !dbg !11356
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11357

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11358
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !11359
  %lnot = xor i1 %call, true, !dbg !11360
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11361
  br i1 %4, label %while.body, label %while.end, !dbg !11354

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11362
  %add = add i64 %5, 2, !dbg !11362
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11362
  br label %while.cond, !dbg !11354, !llvm.loop !11363

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11365
  ret i64 %6, !dbg !11366
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11367 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !52
  %square = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11372, metadata !DIExpression()), !dbg !11373
  store i64 3, i64* %divisor, align 8, !dbg !11373
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11374, metadata !DIExpression()), !dbg !11375
  %0 = load i64, i64* %divisor, align 8, !dbg !11376
  %1 = load i64, i64* %divisor, align 8, !dbg !11377
  %mul = mul i64 %0, %1, !dbg !11378
  store i64 %mul, i64* %square, align 8, !dbg !11375
  br label %while.cond, !dbg !11379

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11380
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11381
  %cmp = icmp ult i64 %2, %3, !dbg !11382
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11383

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11384
  %5 = load i64, i64* %divisor, align 8, !dbg !11385
  %rem = urem i64 %4, %5, !dbg !11386
  %tobool = icmp ne i64 %rem, 0, !dbg !11383
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11387
  br i1 %6, label %while.body, label %while.end, !dbg !11379

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11388
  %inc = add i64 %7, 1, !dbg !11388
  store i64 %inc, i64* %divisor, align 8, !dbg !11388
  %8 = load i64, i64* %divisor, align 8, !dbg !11390
  %mul1 = mul i64 4, %8, !dbg !11391
  %9 = load i64, i64* %square, align 8, !dbg !11392
  %add = add i64 %9, %mul1, !dbg !11392
  store i64 %add, i64* %square, align 8, !dbg !11392
  %10 = load i64, i64* %divisor, align 8, !dbg !11393
  %inc2 = add i64 %10, 1, !dbg !11393
  store i64 %inc2, i64* %divisor, align 8, !dbg !11393
  br label %while.cond, !dbg !11379, !llvm.loop !11394

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11396
  %12 = load i64, i64* %divisor, align 8, !dbg !11397
  %rem3 = urem i64 %11, %12, !dbg !11398
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11396
  %13 = zext i1 %tobool4 to i64, !dbg !11396
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11396
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11399
  ret i1 %tobool5, !dbg !11400
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11401 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !813
  %next = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11404, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11406, metadata !DIExpression()), !dbg !11407
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11408
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11410, !ctir !808
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11410, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11411
  br label %for.cond, !dbg !11412

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11413
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11415
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11416, !ctir !808
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11416, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11417
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11418

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11419
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11422, !ctir !814
  %6 = load i8*, i8** %data, align 8, !dbg !11422, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11419
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11423

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11424, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11427, metadata !DIExpression()), !dbg !11428
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11429
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11431, !ctir !814
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11431, !ctir !813
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11432
  br label %for.cond3, !dbg !11433

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11434
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11436
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11436

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11437
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11440, !ctir !808
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11440, !ctir !847
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11437
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11441

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11442
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11443, !ctir !808
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11443, !ctir !847
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11444
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11445, !ctir !814
  %15 = load i8*, i8** %data9, align 8, !dbg !11445, !ctir !47
  call void %13(i8* %15), !dbg !11442
  br label %if.end, !dbg !11442

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11446
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11447, !ctir !814
  store i8* null, i8** %data10, align 8, !dbg !11448, !ctir !47
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11449
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11450, !ctir !814
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11450, !ctir !813
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11451
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11452
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11453, !ctir !808
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11453, !ctir !813
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11454
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11455, !ctir !814
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11456, !ctir !813
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11457
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11458
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11459, !ctir !808
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11460, !ctir !813
  br label %for.inc, !dbg !11461

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11462
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11463
  br label %for.cond3, !dbg !11464, !llvm.loop !11465

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11467
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11469, !ctir !808
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11469, !ctir !847
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11467
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11470

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11471
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11472, !ctir !808
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11472, !ctir !847
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11473
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11474, !ctir !814
  %30 = load i8*, i8** %data18, align 8, !dbg !11474, !ctir !47
  call void %28(i8* %30), !dbg !11471
  br label %if.end19, !dbg !11471

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11475
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11476, !ctir !814
  store i8* null, i8** %data20, align 8, !dbg !11477, !ctir !47
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11478
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11479, !ctir !814
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11480, !ctir !813
  br label %if.end22, !dbg !11481

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11482

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11483
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11483, !ctir !814
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11483
  br label %for.cond, !dbg !11484, !llvm.loop !11485

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11487
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11488, !ctir !808
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11489, !ctir !52
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11490
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11491, !ctir !808
  store i64 0, i64* %n_entries, align 8, !dbg !11492, !ctir !52
  ret void, !dbg !11493
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11494 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !813
  %next = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11501, metadata !DIExpression()), !dbg !11502
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11503
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11505, !ctir !808
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11505, !ctir !847
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11503
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11506

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11507
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11508, !ctir !808
  %3 = load i64, i64* %n_entries, align 8, !dbg !11508, !ctir !52
  %tobool1 = icmp ne i64 %3, 0, !dbg !11507
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11509

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11510
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !11513, !ctir !808
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !11513, !ctir !813
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !11514
  br label %for.cond, !dbg !11515

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11516
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11518
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !11519, !ctir !808
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11519, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !11520
  br i1 %cmp, label %for.body, label %for.end12, !dbg !11521

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11522
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11525, !ctir !814
  %10 = load i8*, i8** %data, align 8, !dbg !11525, !ctir !47
  %tobool3 = icmp ne i8* %10, null, !dbg !11522
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11526

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11527
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11530
  br label %for.cond5, !dbg !11531

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11532
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !11534
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !11534

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11535
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !11536, !ctir !808
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11536, !ctir !847
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11537
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !11538, !ctir !814
  %16 = load i8*, i8** %data9, align 8, !dbg !11538, !ctir !47
  call void %14(i8* %16), !dbg !11535
  br label %for.inc, !dbg !11535

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11539
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11540, !ctir !814
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !11540, !ctir !813
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !11541
  br label %for.cond5, !dbg !11542, !llvm.loop !11543

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11545

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !11546

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11547
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !11547, !ctir !814
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11547
  br label %for.cond, !dbg !11548, !llvm.loop !11549

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !11551

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11552
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !11554, !ctir !808
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !11554, !ctir !813
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !11555
  br label %for.cond15, !dbg !11556

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11557
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11559
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11560, !ctir !808
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !11560, !ctir !819
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !11561
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !11562

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11563
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !11566, !ctir !814
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !11566, !ctir !813
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !11567
  br label %for.cond20, !dbg !11568

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11569
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !11571
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !11571

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11572
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !11574, !ctir !814
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !11574, !ctir !813
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !11575
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11576
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !11576
  call void @free(i8* %31) #9, !dbg !11577
  br label %for.inc24, !dbg !11578

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11579
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !11580
  br label %for.cond20, !dbg !11581, !llvm.loop !11582

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !11584

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11585
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11585, !ctir !814
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !11585
  br label %for.cond15, !dbg !11586, !llvm.loop !11587

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11589
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11591, !ctir !808
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11591, !ctir !813
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !11592
  br label %for.cond29, !dbg !11593

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11594
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !11596
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !11596

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11597
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !11599, !ctir !814
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !11599, !ctir !813
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !11600
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11601
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !11601
  call void @free(i8* %40) #9, !dbg !11602
  br label %for.inc33, !dbg !11603

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11604
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !11605
  br label %for.cond29, !dbg !11606, !llvm.loop !11607

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11609
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11610, !ctir !808
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !11610, !ctir !813
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !11609
  call void @free(i8* %44) #9, !dbg !11611
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11612
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !11612
  call void @free(i8* %46) #9, !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !11615 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !808
  %new_table = alloca %struct.hash_table*, align 8, !ctir !853
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !11622, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !11624, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !11626, metadata !DIExpression()), !dbg !11627
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11628
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11629
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !11630, !ctir !808
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11630, !ctir !825
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !11631
  store i64 %call, i64* %new_size, align 8, !dbg !11627
  %3 = load i64, i64* %new_size, align 8, !dbg !11632
  %tobool = icmp ne i64 %3, 0, !dbg !11632
  br i1 %tobool, label %if.end, label %if.then, !dbg !11634

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11635
  br label %return, !dbg !11635

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !11636
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11638
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !11639, !ctir !808
  %6 = load i64, i64* %n_buckets, align 8, !dbg !11639, !ctir !52
  %cmp = icmp eq i64 %4, %6, !dbg !11640
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11641

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !11642
  br label %return, !dbg !11642

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !11643
  %7 = load i64, i64* %new_size, align 8, !dbg !11644
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #9, !dbg !11645
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !11645
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11646
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !11647, !ctir !808
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !11648, !ctir !813
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11649
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !11651, !ctir !808
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !11651, !ctir !813
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !11652
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11653

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !11654
  br label %return, !dbg !11654

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !11655
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11656
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11657, !ctir !808
  store i64 %12, i64* %n_buckets8, align 8, !dbg !11658, !ctir !52
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11659
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !11660, !ctir !808
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !11660, !ctir !813
  %16 = load i64, i64* %new_size, align 8, !dbg !11661
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !11662, !ctir !814
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11663
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !11664, !ctir !808
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11665, !ctir !819
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11666
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !11667, !ctir !808
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11668, !ctir !52
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11669
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11670, !ctir !808
  store i64 0, i64* %n_entries, align 8, !dbg !11671, !ctir !52
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11672
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !11673, !ctir !808
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !11673, !ctir !825
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11674
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !11675, !ctir !808
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !11676, !ctir !825
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11677
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !11678, !ctir !808
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11678, !ctir !837
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11679
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !11680, !ctir !808
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !11681, !ctir !837
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11682
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !11683, !ctir !808
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11683, !ctir !842
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11684
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !11685, !ctir !808
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !11686, !ctir !842
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11687
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !11688, !ctir !808
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11688, !ctir !847
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11689
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11690, !ctir !808
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !11691, !ctir !847
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11692
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11693, !ctir !808
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11693, !ctir !813
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11694
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11695, !ctir !808
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !11696, !ctir !813
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11697
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11699
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !11700
  br i1 %call16, label %if.then17, label %if.end29, !dbg !11701

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11702
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !11704, !ctir !808
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !11704, !ctir !813
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !11702
  call void @free(i8* %39) #9, !dbg !11705
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11706
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !11707, !ctir !808
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !11707, !ctir !813
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11708
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11709, !ctir !808
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !11710, !ctir !813
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11711
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !11712, !ctir !808
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !11712, !ctir !819
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11713
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !11714, !ctir !808
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !11715, !ctir !819
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11716
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !11717, !ctir !808
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !11717, !ctir !52
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11718
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !11719, !ctir !808
  store i64 %47, i64* %n_buckets24, align 8, !dbg !11720, !ctir !52
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11721
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !11722, !ctir !808
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !11722, !ctir !52
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !11724, !ctir !808
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !11725, !ctir !52
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11726
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !11727, !ctir !808
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !11727, !ctir !813
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11728
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !11729, !ctir !808
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !11730, !ctir !813
  store i1 true, i1* %retval, align 1, !dbg !11731
  br label %return, !dbg !11731

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11732
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !11733, !ctir !808
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !11733, !ctir !813
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11734
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !11735, !ctir !808
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !11736, !ctir !813
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11737
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11739
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !11740
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !11741

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11742
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11743
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !11744
  br i1 %call33, label %if.end35, label %if.then34, !dbg !11745

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !11746
  unreachable, !dbg !11746

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11747
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !11748, !ctir !808
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !11748, !ctir !813
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !11747
  call void @free(i8* %64) #9, !dbg !11749
  store i1 false, i1* %retval, align 1, !dbg !11750
  br label %return, !dbg !11750

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !11751
  ret i1 %65, !dbg !11751
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !11752 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !813
  %next = alloca %struct.hash_entry*, align 8, !ctir !813
  %data2 = alloca i8*, align 8, !ctir !47
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !11755, metadata !DIExpression()), !dbg !11756
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11761, metadata !DIExpression()), !dbg !11762
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11763, metadata !DIExpression()), !dbg !11764
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11765, metadata !DIExpression()), !dbg !11766
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11767
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11769, !ctir !808
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11769, !ctir !813
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11770
  br label %for.cond, !dbg !11771

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11772
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11774
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11775, !ctir !808
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11775, !ctir !819
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11776
  br i1 %cmp, label %for.body, label %for.end42, !dbg !11777

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11778
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11780, !ctir !814
  %6 = load i8*, i8** %data, align 8, !dbg !11780, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11778
  br i1 %tobool, label %if.then, label %if.end40, !dbg !11781

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !11782, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !11785, metadata !DIExpression()), !dbg !11786
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11787
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11789, !ctir !814
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !11789, !ctir !813
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11790
  br label %for.cond4, !dbg !11791

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11792
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !11794
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !11794

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11795
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11797, !ctir !814
  %11 = load i8*, i8** %data7, align 8, !dbg !11797, !ctir !47
  store i8* %11, i8** %data2, align 8, !dbg !11798
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11799
  %13 = load i8*, i8** %data2, align 8, !dbg !11800
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !11801
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !11802
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11803
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !11804, !ctir !814
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !11804, !ctir !813
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !11805
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11806
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11808, !ctir !814
  %17 = load i8*, i8** %data9, align 8, !dbg !11808, !ctir !47
  %tobool10 = icmp ne i8* %17, null, !dbg !11806
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !11809

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11810
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !11812, !ctir !814
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !11812, !ctir !813
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11813
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !11814, !ctir !814
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !11815, !ctir !813
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11816
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11817
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !11818, !ctir !814
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !11819, !ctir !813
  br label %if.end, !dbg !11820

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !11821
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11823
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !11824, !ctir !814
  store i8* %23, i8** %data15, align 8, !dbg !11825, !ctir !47
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11826
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !11827, !ctir !808
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !11828, !ctir !52
  %inc = add i64 %26, 1, !dbg !11828
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11828, !ctir !52
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11829
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11830
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !11831
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !11832

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11833
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !11834
  br label %for.cond4, !dbg !11835, !llvm.loop !11836

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11838
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !11839, !ctir !814
  %31 = load i8*, i8** %data16, align 8, !dbg !11839, !ctir !47
  store i8* %31, i8** %data2, align 8, !dbg !11840
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11841
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11842, !ctir !814
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !11843, !ctir !813
  %33 = load i8, i8* %safe.addr, align 1, !dbg !11844
  %tobool18 = trunc i8 %33 to i1, !dbg !11844
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !11846

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !11847

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11848
  %35 = load i8*, i8** %data2, align 8, !dbg !11849
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !11850
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !11851
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11852
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !11854, !ctir !814
  %37 = load i8*, i8** %data22, align 8, !dbg !11854, !ctir !47
  %tobool23 = icmp ne i8* %37, null, !dbg !11852
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !11855

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !11856, metadata !DIExpression()), !dbg !11858
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11859
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !11860
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !11858
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11861
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !11863
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !11864

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !11865
  br label %return, !dbg !11865

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !11866
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11867
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !11868, !ctir !814
  store i8* %40, i8** %data29, align 8, !dbg !11869, !ctir !47
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11870
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !11871, !ctir !814
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !11871, !ctir !813
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11872
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !11873, !ctir !814
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !11874, !ctir !813
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11875
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11876
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !11877, !ctir !814
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !11878, !ctir !813
  br label %if.end37, !dbg !11879

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !11880
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11882
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !11883, !ctir !814
  store i8* %47, i8** %data34, align 8, !dbg !11884, !ctir !47
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11885
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !11886, !ctir !808
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !11887, !ctir !52
  %inc36 = add i64 %50, 1, !dbg !11887
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !11887, !ctir !52
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11888
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !11889, !ctir !814
  store i8* null, i8** %data38, align 8, !dbg !11890, !ctir !47
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11891
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !11892, !ctir !808
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !11893, !ctir !52
  %dec = add i64 %53, -1, !dbg !11893
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !11893, !ctir !52
  br label %if.end40, !dbg !11894

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !11780

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11895
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !11895, !ctir !814
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11895
  br label %for.cond, !dbg !11896, !llvm.loop !11897

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !11899
  br label %return, !dbg !11899

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !11900
  ret i1 %55, !dbg !11900
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !11901 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !11906, metadata !DIExpression()), !dbg !11907
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11908
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !11909, !ctir !814
  store i8* null, i8** %data, align 8, !dbg !11910, !ctir !47
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11911
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !11912, !ctir !808
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11912, !ctir !813
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11913
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !11914, !ctir !814
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !11915, !ctir !813
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11916
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11917
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !11918, !ctir !808
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !11919, !ctir !813
  ret void, !dbg !11920
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !11921 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11924, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !11926, metadata !DIExpression()), !dbg !11927
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11928
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !11930, !ctir !808
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11930, !ctir !813
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !11928
  br i1 %tobool, label %if.then, label %if.else, !dbg !11931

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11932
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !11934, !ctir !808
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !11934, !ctir !813
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !11935
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !11936
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !11937, !ctir !814
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11937, !ctir !813
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11938
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !11939, !ctir !808
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !11940, !ctir !813
  br label %if.end, !dbg !11941

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !11942
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !11942
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !11944
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !11945
  ret %struct.hash_entry* %8, !dbg !11946
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !11947 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !825
  %candidate = alloca float, align 4, !ctir !831
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11951, metadata !DIExpression()), !dbg !11952
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11953, metadata !DIExpression()), !dbg !11954
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.declare(metadata i8** %data, metadata !11957, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11959, metadata !DIExpression()), !dbg !11960
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !11961
  %tobool = icmp ne i8* %0, null, !dbg !11961
  br i1 %tobool, label %if.end, label %if.then, !dbg !11963

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11964
  unreachable, !dbg !11964

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11965
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !11967
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !11968
  store i8* %call, i8** %data, align 8, !dbg !11969
  %cmp = icmp ne i8* %call, null, !dbg !11970
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !11971

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !11972
  %tobool3 = icmp ne i8** %3, null, !dbg !11972
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11975

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !11976
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !11977
  store i8* %4, i8** %5, align 8, !dbg !11978, !ctir !685
  br label %if.end5, !dbg !11979

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !11980
  br label %return, !dbg !11980

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11981
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !11983, !ctir !808
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !11983, !ctir !52
  %conv = uitofp i64 %7 to float, !dbg !11981
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11984
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !11985, !ctir !808
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11985, !ctir !825
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !11986, !ctir !826
  %10 = load float, float* %growth_threshold, align 4, !dbg !11986, !ctir !831
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11987
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11988, !ctir !808
  %12 = load i64, i64* %n_buckets, align 8, !dbg !11988, !ctir !52
  %conv7 = uitofp i64 %12 to float, !dbg !11987
  %mul = fmul float %10, %conv7, !dbg !11989
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !11990
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !11991

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11992
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !11994
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11995
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !11997, !ctir !808
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !11997, !ctir !52
  %conv13 = uitofp i64 %15 to float, !dbg !11995
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11998
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !11999, !ctir !808
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !11999, !ctir !825
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12000, !ctir !826
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12000, !ctir !831
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12001
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12002, !ctir !808
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12002, !ctir !52
  %conv17 = uitofp i64 %20 to float, !dbg !12001
  %mul18 = fmul float %18, %conv17, !dbg !12003
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12004
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12005

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12006, metadata !DIExpression()), !dbg !12008
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12009
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12010, !ctir !808
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12010, !ctir !825
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12008
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12011, metadata !DIExpression()), !dbg !12012
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12013
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12014, !ctir !826
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12014
  %tobool24 = trunc i8 %24 to i1, !dbg !12014, !ctir !139
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12013

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12015
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12016, !ctir !808
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12016, !ctir !52
  %conv27 = uitofp i64 %26 to float, !dbg !12015
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12017
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12018, !ctir !826
  %28 = load float, float* %growth_factor, align 4, !dbg !12018, !ctir !831
  %mul28 = fmul float %conv27, %28, !dbg !12019
  br label %cond.end, !dbg !12013

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12020
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12021, !ctir !808
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12021, !ctir !52
  %conv30 = uitofp i64 %30 to float, !dbg !12020
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12022
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12023, !ctir !826
  %32 = load float, float* %growth_factor31, align 4, !dbg !12023, !ctir !831
  %mul32 = fmul float %conv30, %32, !dbg !12024
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12025
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12026, !ctir !826
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12026, !ctir !831
  %mul34 = fmul float %mul32, %34, !dbg !12027
  br label %cond.end, !dbg !12013

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12013
  store float %cond, float* %candidate, align 4, !dbg !12012
  %35 = load float, float* %candidate, align 4, !dbg !12028
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12030
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12031

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12032
  br label %return, !dbg !12032

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12033
  %37 = load float, float* %candidate, align 4, !dbg !12035
  %conv39 = fptoui float %37 to i64, !dbg !12035
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12036
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12037

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12038
  br label %return, !dbg !12038

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12039
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12041
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12042
  %cmp44 = icmp ne i8* %call43, null, !dbg !12043
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12044

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12045
  unreachable, !dbg !12045

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12046

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12047

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12048
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12050, !ctir !814
  %41 = load i8*, i8** %data50, align 8, !dbg !12050, !ctir !47
  %tobool51 = icmp ne i8* %41, null, !dbg !12048
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12051

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12052, metadata !DIExpression()), !dbg !12054
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12055
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12056
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12054
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12057
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12059
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12060

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12061
  br label %return, !dbg !12061

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12062
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12063
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12064, !ctir !814
  store i8* %44, i8** %data58, align 8, !dbg !12065, !ctir !47
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12066
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12067, !ctir !814
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12067, !ctir !813
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12068
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12069, !ctir !814
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12070, !ctir !813
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12071
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12072
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12073, !ctir !814
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12074, !ctir !813
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12075
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12076, !ctir !808
  %52 = load i64, i64* %n_entries, align 8, !dbg !12077, !ctir !52
  %inc = add i64 %52, 1, !dbg !12077
  store i64 %inc, i64* %n_entries, align 8, !dbg !12077, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12078
  br label %return, !dbg !12078

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12079
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12080
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12081, !ctir !814
  store i8* %53, i8** %data62, align 8, !dbg !12082, !ctir !47
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12083
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12084, !ctir !808
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12085, !ctir !52
  %inc64 = add i64 %56, 1, !dbg !12085
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12085, !ctir !52
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12086
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12087, !ctir !808
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12088, !ctir !52
  %inc66 = add i64 %58, 1, !dbg !12088
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12088, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12089
  br label %return, !dbg !12089

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12090
  ret i32 %59, !dbg !12090
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12091 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !813
  %data7 = alloca i8*, align 8, !ctir !47
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !813
  %data29 = alloca i8*, align 8, !ctir !47
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12095, metadata !DIExpression()), !dbg !12096
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12097, metadata !DIExpression()), !dbg !12098
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12103, metadata !DIExpression()), !dbg !12104
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12105
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12106
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12107
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12104
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12108, metadata !DIExpression()), !dbg !12109
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12110
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12111
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12112, !ctir !813
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12113
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12115, !ctir !814
  %5 = load i8*, i8** %data, align 8, !dbg !12115, !ctir !47
  %cmp = icmp eq i8* %5, null, !dbg !12116
  br i1 %cmp, label %if.then, label %if.end, !dbg !12117

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12118
  br label %return, !dbg !12118

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12119
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12121
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12122, !ctir !814
  %8 = load i8*, i8** %data2, align 8, !dbg !12122, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !12123
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12124

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12125
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12126, !ctir !808
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12126, !ctir !842
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12127
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12128
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12129, !ctir !814
  %13 = load i8*, i8** %data4, align 8, !dbg !12129, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12125
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12130

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12131, metadata !DIExpression()), !dbg !12133
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12134
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12135, !ctir !814
  %15 = load i8*, i8** %data8, align 8, !dbg !12135, !ctir !47
  store i8* %15, i8** %data7, align 8, !dbg !12133
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12136
  %tobool = trunc i8 %16 to i1, !dbg !12136
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12138

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12139
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12142, !ctir !814
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12142, !ctir !813
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12139
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12143

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12144, metadata !DIExpression()), !dbg !12146
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12147
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12148, !ctir !814
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12148, !ctir !813
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12146
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12149
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12150
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12151
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12151
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12152
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12153
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12154
  br label %if.end15, !dbg !12155

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12156
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12158, !ctir !814
  store i8* null, i8** %data14, align 8, !dbg !12159, !ctir !47
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12160

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12161
  store i8* %28, i8** %retval, align 8, !dbg !12162
  br label %return, !dbg !12162

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12163
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12165
  br label %for.cond, !dbg !12166

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12167
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12169, !ctir !814
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12169, !ctir !813
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12170
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12170

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12171
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12174
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12175, !ctir !814
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12175, !ctir !813
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12176, !ctir !814
  %35 = load i8*, i8** %data21, align 8, !dbg !12176, !ctir !47
  %cmp22 = icmp eq i8* %32, %35, !dbg !12177
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12178

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12179
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12180, !ctir !808
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12180, !ctir !842
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12181
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12182
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12183, !ctir !814
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12183, !ctir !813
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12184, !ctir !814
  %41 = load i8*, i8** %data26, align 8, !dbg !12184, !ctir !47
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12179
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12185

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12186, metadata !DIExpression()), !dbg !12188
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12189
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12190, !ctir !814
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12190, !ctir !813
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12191, !ctir !814
  %44 = load i8*, i8** %data31, align 8, !dbg !12191, !ctir !47
  store i8* %44, i8** %data29, align 8, !dbg !12188
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12192
  %tobool32 = trunc i8 %45 to i1, !dbg !12192
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12194

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12195, metadata !DIExpression()), !dbg !12197
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12198
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12199, !ctir !814
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12199, !ctir !813
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12197
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12200
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12201, !ctir !814
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12201, !ctir !813
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12202
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12203, !ctir !814
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12204, !ctir !813
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12205
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12206
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12207
  br label %if.end38, !dbg !12208

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12209
  store i8* %53, i8** %retval, align 8, !dbg !12210
  br label %return, !dbg !12210

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12211

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12212
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12213, !ctir !814
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12213, !ctir !813
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12214
  br label %for.cond, !dbg !12215, !llvm.loop !12216

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12218
  br label %return, !dbg !12218

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12219
  ret i8* %56, !dbg !12219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12220 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !685
  %err = alloca i32, align 4, !ctir !5
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12223, metadata !DIExpression()), !dbg !12224
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12225, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12227, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12229, metadata !DIExpression()), !dbg !12230
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12231
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12232
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12233
  store i32 %call, i32* %err, align 4, !dbg !12230
  %2 = load i32, i32* %err, align 4, !dbg !12234
  %cmp = icmp eq i32 %2, -1, !dbg !12235
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12234

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12234

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12236
  %cmp2 = icmp eq i32 %3, 0, !dbg !12237
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12236

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12238
  br label %cond.end, !dbg !12236

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12239
  br label %cond.end, !dbg !12236

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12236
  br label %cond.end5, !dbg !12234

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12234
  ret i8* %cond6, !dbg !12240
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12241 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !813
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !825
  %candidate = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !813
  %next = alloca %struct.hash_entry*, align 8, !ctir !813
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12242, metadata !DIExpression()), !dbg !12243
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12244, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12246, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12248, metadata !DIExpression()), !dbg !12249
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12250
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12251
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12252
  store i8* %call, i8** %data, align 8, !dbg !12253
  %2 = load i8*, i8** %data, align 8, !dbg !12254
  %tobool = icmp ne i8* %2, null, !dbg !12254
  br i1 %tobool, label %if.end, label %if.then, !dbg !12256

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12257
  br label %return, !dbg !12257

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12258
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12259, !ctir !808
  %4 = load i64, i64* %n_entries, align 8, !dbg !12260, !ctir !52
  %dec = add i64 %4, -1, !dbg !12260
  store i64 %dec, i64* %n_entries, align 8, !dbg !12260, !ctir !52
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12261
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12263, !ctir !814
  %6 = load i8*, i8** %data2, align 8, !dbg !12263, !ctir !47
  %tobool3 = icmp ne i8* %6, null, !dbg !12261
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12264

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12265
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12267, !ctir !808
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12268, !ctir !52
  %dec5 = add i64 %8, -1, !dbg !12268
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12268, !ctir !52
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12269
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12271, !ctir !808
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12271, !ctir !52
  %conv = uitofp i64 %10 to float, !dbg !12269
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12272
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12273, !ctir !808
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12273, !ctir !825
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12274, !ctir !826
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12274, !ctir !831
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12275
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12276, !ctir !808
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12276, !ctir !52
  %conv7 = uitofp i64 %15 to float, !dbg !12275
  %mul = fmul float %13, %conv7, !dbg !12277
  %cmp = fcmp olt float %conv, %mul, !dbg !12278
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12279

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12280
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12282
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12283
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12285, !ctir !808
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12285, !ctir !52
  %conv12 = uitofp i64 %18 to float, !dbg !12283
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12286
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12287, !ctir !808
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12287, !ctir !825
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12288, !ctir !826
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12288, !ctir !831
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12289
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12290, !ctir !808
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12290, !ctir !52
  %conv16 = uitofp i64 %23 to float, !dbg !12289
  %mul17 = fmul float %21, %conv16, !dbg !12291
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12292
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12293

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12294, metadata !DIExpression()), !dbg !12296
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12297
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12298, !ctir !808
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12298, !ctir !825
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12296
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12299, metadata !DIExpression()), !dbg !12300
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12301
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12302, !ctir !826
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12302
  %tobool23 = trunc i8 %27 to i1, !dbg !12302, !ctir !139
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12301

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12303
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12304, !ctir !808
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12304, !ctir !52
  %conv26 = uitofp i64 %29 to float, !dbg !12303
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12305
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12306, !ctir !826
  %31 = load float, float* %shrink_factor, align 4, !dbg !12306, !ctir !831
  %mul27 = fmul float %conv26, %31, !dbg !12307
  br label %cond.end, !dbg !12301

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12308
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12309, !ctir !808
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12309, !ctir !52
  %conv29 = uitofp i64 %33 to float, !dbg !12308
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12310
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12311, !ctir !826
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12311, !ctir !831
  %mul31 = fmul float %conv29, %35, !dbg !12312
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12313
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12314, !ctir !826
  %37 = load float, float* %growth_threshold, align 4, !dbg !12314, !ctir !831
  %mul32 = fmul float %mul31, %37, !dbg !12315
  br label %cond.end, !dbg !12301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12301
  %conv33 = fptoui float %cond to i64, !dbg !12316
  store i64 %conv33, i64* %candidate, align 8, !dbg !12300
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12317
  %39 = load i64, i64* %candidate, align 8, !dbg !12319
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12320
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12321

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12322, metadata !DIExpression()), !dbg !12324
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12325
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12326, !ctir !808
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12326, !ctir !813
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12324
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12327, metadata !DIExpression()), !dbg !12328
  br label %while.cond, !dbg !12329

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12330
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12329
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12329

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12331
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12333, !ctir !814
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12333, !ctir !813
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12334
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12335
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12335
  call void @free(i8* %46) #9, !dbg !12336
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12337
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12338
  br label %while.cond, !dbg !12329, !llvm.loop !12339

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12341
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12342, !ctir !808
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12343, !ctir !813
  br label %if.end39, !dbg !12344

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12345

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12346

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12347

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12348
  store i8* %49, i8** %retval, align 8, !dbg !12349
  br label %return, !dbg !12349

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12350
  ret i8* %50, !dbg !12350
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #10 !dbg !12351 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1323
  %tmp = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12353, metadata !DIExpression()), !dbg !12354
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12357, metadata !DIExpression()), !dbg !12358
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12359
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12359
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12358
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12360, metadata !DIExpression()), !dbg !12361
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12362
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12363, !ctir !1324
  %3 = load i8*, i8** %name, align 8, !dbg !12363, !ctir !7
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12364
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12365
  store i64 %call, i64* %tmp, align 8, !dbg !12361
  %5 = load i64, i64* %tmp, align 8, !dbg !12366
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12367
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12368, !ctir !1324
  %7 = load i64, i64* %st_ino, align 8, !dbg !12368, !ctir !506
  %xor = xor i64 %5, %7, !dbg !12369
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12370
  %rem = urem i64 %xor, %8, !dbg !12371
  ret i64 %rem, !dbg !12372
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #10 !dbg !12373 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1323
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12374, metadata !DIExpression()), !dbg !12375
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12376, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12378, metadata !DIExpression()), !dbg !12379
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12380
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12380
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12379
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12381
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12382, !ctir !1324
  %3 = load i64, i64* %st_ino, align 8, !dbg !12382, !ctir !506
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12383
  %rem = urem i64 %3, %4, !dbg !12384
  ret i64 %rem, !dbg !12385
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12386 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1323
  %b = alloca %struct.F_triple*, align 8, !ctir !1323
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12391, metadata !DIExpression()), !dbg !12392
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12393
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12393
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12392
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12394, metadata !DIExpression()), !dbg !12395
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12396
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12396
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12395
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12397
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12397, !ctir !1324
  %5 = load i64, i64* %st_ino, align 8, !dbg !12397, !ctir !506
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12397
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12397, !ctir !1324
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12397, !ctir !506
  %cmp = icmp eq i64 %5, %7, !dbg !12397
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12397

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12397
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12397, !ctir !1324
  %9 = load i64, i64* %st_dev, align 8, !dbg !12397, !ctir !508
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12397
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12397, !ctir !1324
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12397, !ctir !508
  %cmp3 = icmp eq i64 %9, %11, !dbg !12397
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12398

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12399
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12400, !ctir !1324
  %13 = load i8*, i8** %name, align 8, !dbg !12400, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12401
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12402, !ctir !1324
  %15 = load i8*, i8** %name4, align 8, !dbg !12402, !ctir !7
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12403
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12404
  %17 = zext i1 %16 to i64, !dbg !12405
  %cond = select i1 %16, i32 1, i32 0, !dbg !12405
  %tobool = icmp ne i32 %cond, 0, !dbg !12405
  ret i1 %tobool, !dbg !12406
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #10 !dbg !12407 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1323
  %b = alloca %struct.F_triple*, align 8, !ctir !1323
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12408, metadata !DIExpression()), !dbg !12409
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12410, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12412, metadata !DIExpression()), !dbg !12413
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12414
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12414
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12413
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12415, metadata !DIExpression()), !dbg !12416
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12417
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12417
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12416
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12418
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12418, !ctir !1324
  %5 = load i64, i64* %st_ino, align 8, !dbg !12418, !ctir !506
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12418
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12418, !ctir !1324
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12418, !ctir !506
  %cmp = icmp eq i64 %5, %7, !dbg !12418
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12418

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12418
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12418, !ctir !1324
  %9 = load i64, i64* %st_dev, align 8, !dbg !12418, !ctir !508
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12418
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12418, !ctir !1324
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12418, !ctir !508
  %cmp3 = icmp eq i64 %9, %11, !dbg !12418
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12419

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12420
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12420, !ctir !1324
  %13 = load i8*, i8** %name, align 8, !dbg !12420, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12420
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12420, !ctir !1324
  %15 = load i8*, i8** %name4, align 8, !dbg !12420, !ctir !7
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12420
  %cmp5 = icmp eq i32 %call, 0, !dbg !12420
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12421
  %17 = zext i1 %16 to i64, !dbg !12422
  %cond = select i1 %16, i32 1, i32 0, !dbg !12422
  %tobool = icmp ne i32 %cond, 0, !dbg !12422
  ret i1 %tobool, !dbg !12423
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12424 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1330
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12427, metadata !DIExpression()), !dbg !12428
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12429
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12429
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12428
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12430
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12431, !ctir !1325
  %3 = load i8*, i8** %name, align 8, !dbg !12431, !ctir !7
  call void @free(i8* %3) #9, !dbg !12432
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12433
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12433
  call void @free(i8* %5) #9, !dbg !12434
  ret void, !dbg !12435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mkancesdirs(i8* %file, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_dir, i8* %make_dir_arg) #4 !dbg !12436 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_dir.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %make_dir_arg.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8, !ctir !7
  %component = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  %c = alloca i8, align 1, !ctir !8
  %made_dir = alloca i8, align 1, !ctir !139
  %make_dir_errno = alloca i32, align 4, !ctir !5
  %savewd_chdir_options = alloca i32, align 4, !ctir !5
  %chdir_result = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12444, metadata !DIExpression()), !dbg !12445
  store i32 (i8*, i8*, i8*)* %make_dir, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_dir.addr, metadata !12446, metadata !DIExpression()), !dbg !12447
  store i8* %make_dir_arg, i8** %make_dir_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %make_dir_arg.addr, metadata !12448, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !12450, metadata !DIExpression()), !dbg !12451
  store i8* null, i8** %sep, align 8, !dbg !12451
  call void @llvm.dbg.declare(metadata i8** %component, metadata !12452, metadata !DIExpression()), !dbg !12453
  %0 = load i8*, i8** %file.addr, align 8, !dbg !12454
  store i8* %0, i8** %component, align 8, !dbg !12453
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12455, metadata !DIExpression()), !dbg !12456
  %1 = load i8*, i8** %file.addr, align 8, !dbg !12457
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !12458, !ctir !8
  store i8* %add.ptr, i8** %p, align 8, !dbg !12456
  call void @llvm.dbg.declare(metadata i8* %c, metadata !12459, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.declare(metadata i8* %made_dir, metadata !12461, metadata !DIExpression()), !dbg !12462
  store i8 0, i8* %made_dir, align 1, !dbg !12462
  br label %while.cond, !dbg !12463

while.cond:                                       ; preds = %if.end69, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !12464
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !12464, !ctir !8
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12464
  %3 = load i8, i8* %2, align 1, !dbg !12465, !ctir !8
  store i8 %3, i8* %c, align 1, !dbg !12466
  %tobool = icmp ne i8 %3, 0, !dbg !12463
  br i1 %tobool, label %while.body, label %while.end, !dbg !12463

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !12467
  %5 = load i8, i8* %4, align 1, !dbg !12467, !ctir !8
  %conv = sext i8 %5 to i32, !dbg !12467
  %cmp = icmp eq i32 %conv, 47, !dbg !12467
  br i1 %cmp, label %if.then, label %if.else, !dbg !12469

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !12470
  %conv2 = sext i8 %6 to i32, !dbg !12470
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !12470
  br i1 %cmp3, label %if.end, label %if.then5, !dbg !12473

if.then5:                                         ; preds = %if.then
  %7 = load i8*, i8** %p, align 8, !dbg !12474
  store i8* %7, i8** %sep, align 8, !dbg !12475
  br label %if.end, !dbg !12476

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end69, !dbg !12477

if.else:                                          ; preds = %while.body
  %8 = load i8, i8* %c, align 1, !dbg !12478
  %conv6 = sext i8 %8 to i32, !dbg !12478
  %cmp7 = icmp eq i32 %conv6, 47, !dbg !12478
  br i1 %cmp7, label %land.lhs.true, label %if.end68, !dbg !12480

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %p, align 8, !dbg !12481
  %10 = load i8, i8* %9, align 1, !dbg !12482, !ctir !8
  %conv9 = sext i8 %10 to i32, !dbg !12482
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !12482
  br i1 %tobool10, label %land.lhs.true11, label %if.end68, !dbg !12483

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %sep, align 8, !dbg !12484
  %tobool12 = icmp ne i8* %11, null, !dbg !12484
  br i1 %tobool12, label %if.then13, label %if.end68, !dbg !12485

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load i8*, i8** %sep, align 8, !dbg !12486
  %13 = load i8*, i8** %component, align 8, !dbg !12489
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !12490
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !12490
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12490
  %cmp14 = icmp eq i64 %sub.ptr.sub, 1, !dbg !12491
  br i1 %cmp14, label %land.lhs.true16, label %if.then20, !dbg !12492

land.lhs.true16:                                  ; preds = %if.then13
  %14 = load i8*, i8** %component, align 8, !dbg !12493
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12493, !ctir !7
  %15 = load i8, i8* %arrayidx, align 1, !dbg !12493
  %conv17 = sext i8 %15 to i32, !dbg !12493
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !12494
  br i1 %cmp18, label %if.end67, label %if.then20, !dbg !12495

if.then20:                                        ; preds = %land.lhs.true16, %if.then13
  call void @llvm.dbg.declare(metadata i32* %make_dir_errno, metadata !12496, metadata !DIExpression()), !dbg !12498
  store i32 0, i32* %make_dir_errno, align 4, !dbg !12498
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12499, metadata !DIExpression()), !dbg !12500
  store i32 0, i32* %savewd_chdir_options, align 4, !dbg !12500
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12501, metadata !DIExpression()), !dbg !12502
  %16 = load i8*, i8** %sep, align 8, !dbg !12503
  store i8 0, i8* %16, align 1, !dbg !12504, !ctir !8
  %17 = load i8*, i8** %sep, align 8, !dbg !12505
  %18 = load i8*, i8** %component, align 8, !dbg !12507
  %sub.ptr.lhs.cast21 = ptrtoint i8* %17 to i64, !dbg !12508
  %sub.ptr.rhs.cast22 = ptrtoint i8* %18 to i64, !dbg !12508
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !12508
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !12509
  br i1 %cmp24, label %land.lhs.true26, label %if.else37, !dbg !12510

land.lhs.true26:                                  ; preds = %if.then20
  %19 = load i8*, i8** %component, align 8, !dbg !12511
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !12511, !ctir !7
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !12511
  %conv28 = sext i8 %20 to i32, !dbg !12511
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !12512
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !12513

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %21 = load i8*, i8** %component, align 8, !dbg !12514
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12514, !ctir !7
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !12514
  %conv33 = sext i8 %22 to i32, !dbg !12514
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !12515
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !12516

if.then36:                                        ; preds = %land.lhs.true31
  store i8 0, i8* %made_dir, align 1, !dbg !12517
  br label %if.end44, !dbg !12518

if.else37:                                        ; preds = %land.lhs.true31, %land.lhs.true26, %if.then20
  %23 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !dbg !12519
  %24 = load i8*, i8** %file.addr, align 8, !dbg !12521
  %25 = load i8*, i8** %component, align 8, !dbg !12522
  %26 = load i8*, i8** %make_dir_arg.addr, align 8, !dbg !12523
  %call = call i32 %23(i8* %24, i8* %25, i8* %26), !dbg !12519
  %cmp38 = icmp slt i32 %call, 0, !dbg !12524
  br i1 %cmp38, label %if.then40, label %if.else42, !dbg !12525

if.then40:                                        ; preds = %if.else37
  %call41 = call i32* @__errno_location() #16, !dbg !12526
  %27 = load i32, i32* %call41, align 4, !dbg !12526, !ctir !5
  store i32 %27, i32* %make_dir_errno, align 4, !dbg !12527
  br label %if.end43, !dbg !12528

if.else42:                                        ; preds = %if.else37
  store i8 1, i8* %made_dir, align 1, !dbg !12529
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  %28 = load i8, i8* %made_dir, align 1, !dbg !12530
  %tobool45 = trunc i8 %28 to i1, !dbg !12530
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !12532

if.then46:                                        ; preds = %if.end44
  %29 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12533
  %or = or i32 %29, 1, !dbg !12533
  store i32 %or, i32* %savewd_chdir_options, align 4, !dbg !12533
  br label %if.end47, !dbg !12534

if.end47:                                         ; preds = %if.then46, %if.end44
  %30 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12535
  %31 = load i8*, i8** %component, align 8, !dbg !12536
  %32 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12537
  %call48 = call i32 @savewd_chdir(%struct.savewd* %30, i8* %31, i32 %32, i32* null), !dbg !12538
  store i32 %call48, i32* %chdir_result, align 4, !dbg !12539
  %33 = load i32, i32* %chdir_result, align 4, !dbg !12540
  %cmp49 = icmp ne i32 %33, -1, !dbg !12542
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !12543

if.then51:                                        ; preds = %if.end47
  %34 = load i8*, i8** %sep, align 8, !dbg !12544
  store i8 47, i8* %34, align 1, !dbg !12545, !ctir !8
  br label %if.end52, !dbg !12546

if.end52:                                         ; preds = %if.then51, %if.end47
  %35 = load i32, i32* %chdir_result, align 4, !dbg !12547
  %cmp53 = icmp ne i32 %35, 0, !dbg !12549
  br i1 %cmp53, label %if.then55, label %if.end66, !dbg !12550

if.then55:                                        ; preds = %if.end52
  %36 = load i32, i32* %make_dir_errno, align 4, !dbg !12551
  %cmp56 = icmp ne i32 %36, 0, !dbg !12554
  br i1 %cmp56, label %land.lhs.true58, label %if.end64, !dbg !12555

land.lhs.true58:                                  ; preds = %if.then55
  %call59 = call i32* @__errno_location() #16, !dbg !12556
  %37 = load i32, i32* %call59, align 4, !dbg !12556, !ctir !5
  %cmp60 = icmp eq i32 %37, 2, !dbg !12557
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !12558

if.then62:                                        ; preds = %land.lhs.true58
  %38 = load i32, i32* %make_dir_errno, align 4, !dbg !12559
  %call63 = call i32* @__errno_location() #16, !dbg !12560
  store i32 %38, i32* %call63, align 4, !dbg !12561, !ctir !5
  br label %if.end64, !dbg !12560

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %39 = load i32, i32* %chdir_result, align 4, !dbg !12562
  %conv65 = sext i32 %39 to i64, !dbg !12562
  store i64 %conv65, i64* %retval, align 8, !dbg !12563
  br label %return, !dbg !12563

if.end66:                                         ; preds = %if.end52
  br label %if.end67, !dbg !12564

if.end67:                                         ; preds = %if.end66, %land.lhs.true16
  %40 = load i8*, i8** %p, align 8, !dbg !12565
  store i8* %40, i8** %component, align 8, !dbg !12566
  br label %if.end68, !dbg !12567

if.end68:                                         ; preds = %if.end67, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  br label %while.cond, !dbg !12463, !llvm.loop !12568

while.end:                                        ; preds = %while.cond
  %41 = load i8*, i8** %component, align 8, !dbg !12570
  %42 = load i8*, i8** %file.addr, align 8, !dbg !12571
  %sub.ptr.lhs.cast70 = ptrtoint i8* %41 to i64, !dbg !12572
  %sub.ptr.rhs.cast71 = ptrtoint i8* %42 to i64, !dbg !12572
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !12572
  store i64 %sub.ptr.sub72, i64* %retval, align 8, !dbg !12573
  br label %return, !dbg !12573

return:                                           ; preds = %while.end, %if.end64
  %43 = load i64, i64* %retval, align 8, !dbg !12574
  ret i64 %43, !dbg !12574
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @make_dir_parents(i8* %dir, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_ancestor, i8* %options, i32 %mode, void (i8*, i8*)* %announce, i32 %mode_bits, i32 %owner, i32 %group, i1 zeroext %preserve_existing) #4 !dbg !12575 {
entry:
  %retval = alloca i1, align 1
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_ancestor.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %announce.addr = alloca void (i8*, i8*)*, align 8
  %mode_bits.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %preserve_existing.addr = alloca i8, align 1
  %mkdir_errno = alloca i32, align 4, !ctir !5
  %prefix_len = alloca i64, align 8, !ctir !627
  %savewd_chdir_options = alloca i32, align 4, !ctir !5
  %keep_owner = alloca i8, align 1, !ctir !139
  %keep_special_mode_bits = alloca i8, align 1, !ctir !139
  %mkdir_mode = alloca i32, align 4, !ctir !136
  %umask_must_be_ok = alloca i8, align 1, !ctir !139
  %st = alloca %struct.stat, align 8, !ctir !12581
  %open_result = alloca [2 x i32], align 4, !ctir !1359
  %chdir_result = alloca i32, align 4, !ctir !5
  %chdir_ok = alloca i8, align 1, !ctir !139
  %subdir = alloca i8*, align 8, !ctir !180
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12604, metadata !DIExpression()), !dbg !12605
  store i32 (i8*, i8*, i8*)* %make_ancestor, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_ancestor.addr, metadata !12606, metadata !DIExpression()), !dbg !12607
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !12608, metadata !DIExpression()), !dbg !12609
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12610, metadata !DIExpression()), !dbg !12611
  store void (i8*, i8*)* %announce, void (i8*, i8*)** %announce.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %announce.addr, metadata !12612, metadata !DIExpression()), !dbg !12613
  store i32 %mode_bits, i32* %mode_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !12614, metadata !DIExpression()), !dbg !12615
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !12618, metadata !DIExpression()), !dbg !12619
  %frombool = zext i1 %preserve_existing to i8
  store i8 %frombool, i8* %preserve_existing.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve_existing.addr, metadata !12620, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.declare(metadata i32* %mkdir_errno, metadata !12622, metadata !DIExpression()), !dbg !12623
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !12624
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !12624, !ctir !7
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12624
  %conv = sext i8 %1 to i32, !dbg !12624
  %cmp = icmp eq i32 %conv, 47, !dbg !12624
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12624

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12624

cond.false:                                       ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12625
  %call = call i32 @savewd_errno(%struct.savewd* %2) #14, !dbg !12626
  br label %cond.end, !dbg !12624

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !12624
  store i32 %cond, i32* %mkdir_errno, align 4, !dbg !12623
  %3 = load i32, i32* %mkdir_errno, align 4, !dbg !12627
  %cmp2 = icmp eq i32 %3, 0, !dbg !12629
  br i1 %cmp2, label %if.then, label %if.end140, !dbg !12630

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !12631, metadata !DIExpression()), !dbg !12633
  store i64 0, i64* %prefix_len, align 8, !dbg !12633
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12634, metadata !DIExpression()), !dbg !12635
  store i32 2, i32* %savewd_chdir_options, align 4, !dbg !12635
  %4 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12636
  %tobool = icmp ne i32 (i8*, i8*, i8*)* %4, null, !dbg !12636
  br i1 %tobool, label %if.then4, label %if.end14, !dbg !12638

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !12639
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12641
  %7 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12642
  %8 = load i8*, i8** %options.addr, align 8, !dbg !12643
  %call5 = call i64 @mkancesdirs(i8* %5, %struct.savewd* %6, i32 (i8*, i8*, i8*)* %7, i8* %8), !dbg !12644
  store i64 %call5, i64* %prefix_len, align 8, !dbg !12645
  %9 = load i64, i64* %prefix_len, align 8, !dbg !12646
  %cmp6 = icmp slt i64 %9, 0, !dbg !12648
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !12649

if.then8:                                         ; preds = %if.then4
  %10 = load i64, i64* %prefix_len, align 8, !dbg !12650
  %cmp9 = icmp slt i64 %10, -1, !dbg !12653
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !12654

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !12655
  br label %return, !dbg !12655

if.end:                                           ; preds = %if.then8
  %call12 = call i32* @__errno_location() #16, !dbg !12656
  %11 = load i32, i32* %call12, align 4, !dbg !12656, !ctir !5
  store i32 %11, i32* %mkdir_errno, align 4, !dbg !12657
  br label %if.end13, !dbg !12658

if.end13:                                         ; preds = %if.end, %if.then4
  br label %if.end14, !dbg !12659

if.end14:                                         ; preds = %if.end13, %if.then
  %12 = load i64, i64* %prefix_len, align 8, !dbg !12660
  %cmp15 = icmp sle i64 0, %12, !dbg !12662
  br i1 %cmp15, label %if.then17, label %if.end139, !dbg !12663

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %keep_owner, metadata !12664, metadata !DIExpression()), !dbg !12666
  %13 = load i32, i32* %owner.addr, align 4, !dbg !12667
  %cmp18 = icmp eq i32 %13, -1, !dbg !12668
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !12669

land.rhs:                                         ; preds = %if.then17
  %14 = load i32, i32* %group.addr, align 4, !dbg !12670
  %cmp20 = icmp eq i32 %14, -1, !dbg !12671
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then17
  %15 = phi i1 [ false, %if.then17 ], [ %cmp20, %land.rhs ], !dbg !12672
  %frombool22 = zext i1 %15 to i8, !dbg !12666
  store i8 %frombool22, i8* %keep_owner, align 1, !dbg !12666
  call void @llvm.dbg.declare(metadata i8* %keep_special_mode_bits, metadata !12673, metadata !DIExpression()), !dbg !12674
  %16 = load i32, i32* %mode_bits.addr, align 4, !dbg !12675
  %and = and i32 %16, 3072, !dbg !12676
  %17 = load i32, i32* %mode.addr, align 4, !dbg !12677
  %and23 = and i32 %17, 512, !dbg !12678
  %or = or i32 %and, %and23, !dbg !12679
  %cmp24 = icmp eq i32 %or, 0, !dbg !12680
  %frombool26 = zext i1 %cmp24 to i8, !dbg !12674
  store i8 %frombool26, i8* %keep_special_mode_bits, align 1, !dbg !12674
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode, metadata !12681, metadata !DIExpression()), !dbg !12682
  %18 = load i32, i32* %mode.addr, align 4, !dbg !12683
  store i32 %18, i32* %mkdir_mode, align 4, !dbg !12682
  %19 = load i8, i8* %keep_owner, align 1, !dbg !12684
  %tobool27 = trunc i8 %19 to i1, !dbg !12684
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !12686

if.then28:                                        ; preds = %land.end
  %20 = load i32, i32* %mkdir_mode, align 4, !dbg !12687
  %and29 = and i32 %20, -64, !dbg !12687
  store i32 %and29, i32* %mkdir_mode, align 4, !dbg !12687
  br label %if.end34, !dbg !12688

if.else:                                          ; preds = %land.end
  %21 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !12689
  %tobool30 = trunc i8 %21 to i1, !dbg !12689
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !12691

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %mkdir_mode, align 4, !dbg !12692
  %and32 = and i32 %22, -19, !dbg !12692
  store i32 %and32, i32* %mkdir_mode, align 4, !dbg !12692
  br label %if.end33, !dbg !12693

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !12694
  %24 = load i64, i64* %prefix_len, align 8, !dbg !12696
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !12697, !ctir !8
  %25 = load i32, i32* %mkdir_mode, align 4, !dbg !12698
  %call35 = call i32 @mkdir(i8* %add.ptr, i32 %25) #9, !dbg !12699
  %cmp36 = icmp eq i32 %call35, 0, !dbg !12700
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !12701

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8* %umask_must_be_ok, metadata !12702, metadata !DIExpression()), !dbg !12704
  %26 = load i32, i32* %mode.addr, align 4, !dbg !12705
  %27 = load i32, i32* %mode_bits.addr, align 4, !dbg !12706
  %and39 = and i32 %26, %27, !dbg !12707
  %and40 = and i32 %and39, 511, !dbg !12708
  %cmp41 = icmp eq i32 %and40, 0, !dbg !12709
  %frombool43 = zext i1 %cmp41 to i8, !dbg !12704
  store i8 %frombool43, i8* %umask_must_be_ok, align 1, !dbg !12704
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %announce.addr, align 8, !dbg !12710
  %29 = load i8*, i8** %dir.addr, align 8, !dbg !12711
  %30 = load i8*, i8** %options.addr, align 8, !dbg !12712
  call void %28(i8* %29, i8* %30), !dbg !12710
  %31 = load i8, i8* %keep_owner, align 1, !dbg !12713
  %tobool44 = trunc i8 %31 to i1, !dbg !12713
  %conv45 = zext i1 %tobool44 to i32, !dbg !12713
  %32 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !12714
  %tobool46 = trunc i8 %32 to i1, !dbg !12714
  %conv47 = zext i1 %tobool46 to i32, !dbg !12714
  %and48 = and i32 %conv45, %conv47, !dbg !12715
  %33 = load i8, i8* %umask_must_be_ok, align 1, !dbg !12716
  %tobool49 = trunc i8 %33 to i1, !dbg !12716
  %conv50 = zext i1 %tobool49 to i32, !dbg !12716
  %and51 = and i32 %and48, %conv50, !dbg !12717
  %tobool52 = icmp ne i32 %and51, 0, !dbg !12718
  %frombool53 = zext i1 %tobool52 to i8, !dbg !12719
  store i8 %frombool53, i8* %preserve_existing.addr, align 1, !dbg !12719
  %34 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12720
  %or54 = or i32 %34, 1, !dbg !12720
  store i32 %or54, i32* %savewd_chdir_options, align 4, !dbg !12720
  br label %if.end57, !dbg !12721

if.else55:                                        ; preds = %if.end34
  %call56 = call i32* @__errno_location() #16, !dbg !12722
  %35 = load i32, i32* %call56, align 4, !dbg !12722, !ctir !5
  store i32 %35, i32* %mkdir_errno, align 4, !dbg !12724
  store i32 -1, i32* %mkdir_mode, align 4, !dbg !12725
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then38
  %36 = load i8, i8* %preserve_existing.addr, align 1, !dbg !12726
  %tobool58 = trunc i8 %36 to i1, !dbg !12726
  br i1 %tobool58, label %if.then59, label %if.else96, !dbg !12728

if.then59:                                        ; preds = %if.end57
  %37 = load i32, i32* %mkdir_errno, align 4, !dbg !12729
  %cmp60 = icmp eq i32 %37, 0, !dbg !12732
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !12733

if.then62:                                        ; preds = %if.then59
  store i1 true, i1* %retval, align 1, !dbg !12734
  br label %return, !dbg !12734

if.end63:                                         ; preds = %if.then59
  %38 = load i32, i32* %mkdir_errno, align 4, !dbg !12735
  %cmp64 = icmp ne i32 %38, 2, !dbg !12737
  br i1 %cmp64, label %land.lhs.true, label %if.end95, !dbg !12738

land.lhs.true:                                    ; preds = %if.end63
  %39 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12739
  %tobool66 = icmp ne i32 (i8*, i8*, i8*)* %39, null, !dbg !12739
  br i1 %tobool66, label %if.then67, label %if.end95, !dbg !12740

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !12741, metadata !DIExpression()), !dbg !12743
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !12744
  %41 = load i64, i64* %prefix_len, align 8, !dbg !12746
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !12747, !ctir !8
  %call69 = call i32 @stat(i8* %add.ptr68, %struct.stat* %st) #9, !dbg !12748
  %cmp70 = icmp eq i32 %call69, 0, !dbg !12749
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !12750

if.then72:                                        ; preds = %if.then67
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12751, !ctir !12581
  %42 = load i32, i32* %st_mode, align 8, !dbg !12751, !ctir !137
  %and73 = and i32 %42, 61440, !dbg !12751
  %cmp74 = icmp eq i32 %and73, 16384, !dbg !12751
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !12754

if.then76:                                        ; preds = %if.then72
  store i1 true, i1* %retval, align 1, !dbg !12755
  br label %return, !dbg !12755

if.end77:                                         ; preds = %if.then72
  br label %if.end94, !dbg !12756

if.else78:                                        ; preds = %if.then67
  %43 = load i32, i32* %mkdir_errno, align 4, !dbg !12757
  %cmp79 = icmp eq i32 %43, 17, !dbg !12759
  br i1 %cmp79, label %land.lhs.true81, label %if.end93, !dbg !12760

land.lhs.true81:                                  ; preds = %if.else78
  %call82 = call i32* @__errno_location() #16, !dbg !12761
  %44 = load i32, i32* %call82, align 4, !dbg !12761, !ctir !5
  %cmp83 = icmp ne i32 %44, 2, !dbg !12762
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !12763

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %call86 = call i32* @__errno_location() #16, !dbg !12764
  %45 = load i32, i32* %call86, align 4, !dbg !12764, !ctir !5
  %cmp87 = icmp ne i32 %45, 20, !dbg !12765
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !12766

if.then89:                                        ; preds = %land.lhs.true85
  %call90 = call i32* @__errno_location() #16, !dbg !12767
  %46 = load i32, i32* %call90, align 4, !dbg !12767, !ctir !5
  %call91 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.295, i64 0, i64 0)) #9, !dbg !12769
  %47 = load i8*, i8** %dir.addr, align 8, !dbg !12770
  %call92 = call i8* @quote(i8* %47), !dbg !12771
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %46, i8* %call91, i8* %call92), !dbg !12772
  store i1 false, i1* %retval, align 1, !dbg !12773
  br label %return, !dbg !12773

if.end93:                                         ; preds = %land.lhs.true85, %land.lhs.true81, %if.else78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end77
  br label %if.end95, !dbg !12774

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end63
  br label %if.end138, !dbg !12775

if.else96:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata [2 x i32]* %open_result, metadata !12776, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12779, metadata !DIExpression()), !dbg !12780
  %48 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12781
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !12782
  %50 = load i64, i64* %prefix_len, align 8, !dbg !12783
  %add.ptr97 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !12784, !ctir !8
  %51 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12785
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !12786, !ctir !1359
  %call98 = call i32 @savewd_chdir(%struct.savewd* %48, i8* %add.ptr97, i32 %51, i32* %arraydecay), !dbg !12787
  store i32 %call98, i32* %chdir_result, align 4, !dbg !12780
  %52 = load i32, i32* %chdir_result, align 4, !dbg !12788
  %cmp99 = icmp slt i32 %52, -1, !dbg !12790
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !12791

if.then101:                                       ; preds = %if.else96
  store i1 true, i1* %retval, align 1, !dbg !12792
  br label %return, !dbg !12792

if.else102:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata i8* %chdir_ok, metadata !12793, metadata !DIExpression()), !dbg !12795
  %53 = load i32, i32* %chdir_result, align 4, !dbg !12796
  %cmp103 = icmp eq i32 %53, 0, !dbg !12797
  %frombool105 = zext i1 %cmp103 to i8, !dbg !12795
  store i8 %frombool105, i8* %chdir_ok, align 1, !dbg !12795
  call void @llvm.dbg.declare(metadata i8** %subdir, metadata !12798, metadata !DIExpression()), !dbg !12799
  %54 = load i8, i8* %chdir_ok, align 1, !dbg !12800
  %tobool106 = trunc i8 %54 to i1, !dbg !12800
  br i1 %tobool106, label %cond.true108, label %cond.false109, !dbg !12800

cond.true108:                                     ; preds = %if.else102
  br label %cond.end111, !dbg !12800

cond.false109:                                    ; preds = %if.else102
  %55 = load i8*, i8** %dir.addr, align 8, !dbg !12801
  %56 = load i64, i64* %prefix_len, align 8, !dbg !12802
  %add.ptr110 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !12803, !ctir !8
  br label %cond.end111, !dbg !12800

cond.end111:                                      ; preds = %cond.false109, %cond.true108
  %cond112 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.296, i64 0, i64 0), %cond.true108 ], [ %add.ptr110, %cond.false109 ], !dbg !12800
  store i8* %cond112, i8** %subdir, align 8, !dbg !12799
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !12804, !ctir !1359
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !12804
  %58 = load i8*, i8** %subdir, align 8, !dbg !12806
  %59 = load i32, i32* %mkdir_mode, align 4, !dbg !12807
  %60 = load i32, i32* %owner.addr, align 4, !dbg !12808
  %61 = load i32, i32* %group.addr, align 4, !dbg !12809
  %62 = load i32, i32* %mode.addr, align 4, !dbg !12810
  %63 = load i32, i32* %mode_bits.addr, align 4, !dbg !12811
  %call114 = call i32 @dirchownmod(i32 %57, i8* %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !12812
  %cmp115 = icmp eq i32 %call114, 0, !dbg !12813
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !12814

if.then117:                                       ; preds = %cond.end111
  store i1 true, i1* %retval, align 1, !dbg !12815
  br label %return, !dbg !12815

if.end118:                                        ; preds = %cond.end111
  %64 = load i32, i32* %mkdir_errno, align 4, !dbg !12816
  %cmp119 = icmp eq i32 %64, 0, !dbg !12818
  br i1 %cmp119, label %if.then129, label %lor.lhs.false, !dbg !12819

lor.lhs.false:                                    ; preds = %if.end118
  %65 = load i32, i32* %mkdir_errno, align 4, !dbg !12820
  %cmp121 = icmp ne i32 %65, 2, !dbg !12821
  br i1 %cmp121, label %land.lhs.true123, label %if.end136, !dbg !12822

land.lhs.true123:                                 ; preds = %lor.lhs.false
  %66 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12823
  %tobool124 = icmp ne i32 (i8*, i8*, i8*)* %66, null, !dbg !12823
  br i1 %tobool124, label %land.lhs.true125, label %if.end136, !dbg !12824

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %call126 = call i32* @__errno_location() #16, !dbg !12825
  %67 = load i32, i32* %call126, align 4, !dbg !12825, !ctir !5
  %cmp127 = icmp ne i32 %67, 20, !dbg !12826
  br i1 %cmp127, label %if.then129, label %if.end136, !dbg !12827

if.then129:                                       ; preds = %land.lhs.true125, %if.end118
  %call130 = call i32* @__errno_location() #16, !dbg !12828
  %68 = load i32, i32* %call130, align 4, !dbg !12828, !ctir !5
  %69 = load i8, i8* %keep_owner, align 1, !dbg !12830
  %tobool131 = trunc i8 %69 to i1, !dbg !12830
  %70 = zext i1 %tobool131 to i64, !dbg !12830
  %cond133 = select i1 %tobool131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.297, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.298, i64 0, i64 0), !dbg !12830
  %call134 = call i8* @gettext(i8* %cond133) #9, !dbg !12830
  %71 = load i8*, i8** %dir.addr, align 8, !dbg !12831
  %call135 = call i8* @quote(i8* %71), !dbg !12832
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call134, i8* %call135), !dbg !12833
  store i1 false, i1* %retval, align 1, !dbg !12834
  br label %return, !dbg !12834

if.end136:                                        ; preds = %land.lhs.true125, %land.lhs.true123, %lor.lhs.false
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end95
  br label %if.end139, !dbg !12835

if.end139:                                        ; preds = %if.end138, %if.end14
  br label %if.end140, !dbg !12836

if.end140:                                        ; preds = %if.end139, %cond.end
  %72 = load i32, i32* %mkdir_errno, align 4, !dbg !12837
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.299, i64 0, i64 0)) #9, !dbg !12838
  %73 = load i8*, i8** %dir.addr, align 8, !dbg !12839
  %call142 = call i8* @quote(i8* %73), !dbg !12840
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* %call141, i8* %call142), !dbg !12841
  store i1 false, i1* %retval, align 1, !dbg !12842
  br label %return, !dbg !12842

return:                                           ; preds = %if.end140, %if.then129, %if.then117, %if.then101, %if.then89, %if.then76, %if.then62, %if.then11
  %74 = load i1, i1* %retval, align 1, !dbg !12843
  ret i1 %74, !dbg !12843
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_compile(i8* %mode_string) #4 !dbg !12844 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %mode_string.addr = alloca i8*, align 8
  %mc = alloca %struct.mode_change*, align 8, !ctir !1363
  %used = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !180
  %octal_mode = alloca i32, align 4, !ctir !67
  %mode = alloca i32, align 4, !ctir !136
  %mentioned = alloca i32, align 4, !ctir !136
  %needed = alloca i64, align 8, !ctir !52
  %affected = alloca i32, align 4, !ctir !136
  %op = alloca i8, align 1, !ctir !8
  %value = alloca i32, align 4, !ctir !136
  %mentioned51 = alloca i32, align 4, !ctir !136
  %flag = alloca i8, align 1, !ctir !8
  %change = alloca %struct.mode_change*, align 8, !ctir !1363
  %octal_mode54 = alloca i32, align 4, !ctir !67
  store i8* %mode_string, i8** %mode_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode_string.addr, metadata !12847, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.declare(metadata %struct.mode_change** %mc, metadata !12849, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.declare(metadata i64* %used, metadata !12851, metadata !DIExpression()), !dbg !12852
  store i64 0, i64* %used, align 8, !dbg !12852
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12853, metadata !DIExpression()), !dbg !12854
  %0 = load i8*, i8** %mode_string.addr, align 8, !dbg !12855
  %1 = load i8, i8* %0, align 1, !dbg !12857, !ctir !181
  %conv = sext i8 %1 to i32, !dbg !12857
  %cmp = icmp sle i32 48, %conv, !dbg !12858
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !12859

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %mode_string.addr, align 8, !dbg !12860
  %3 = load i8, i8* %2, align 1, !dbg !12861, !ctir !181
  %conv2 = sext i8 %3 to i32, !dbg !12861
  %cmp3 = icmp slt i32 %conv2, 56, !dbg !12862
  br i1 %cmp3, label %if.then, label %if.end21, !dbg !12863

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %octal_mode, metadata !12864, metadata !DIExpression()), !dbg !12866
  store i32 0, i32* %octal_mode, align 4, !dbg !12866
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12867, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.declare(metadata i32* %mentioned, metadata !12869, metadata !DIExpression()), !dbg !12870
  %4 = load i8*, i8** %mode_string.addr, align 8, !dbg !12871
  store i8* %4, i8** %p, align 8, !dbg !12872
  br label %do.body, !dbg !12873

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %octal_mode, align 4, !dbg !12874
  %mul = mul i32 8, %5, !dbg !12876
  %6 = load i8*, i8** %p, align 8, !dbg !12877
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !12877, !ctir !181
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12877
  %7 = load i8, i8* %6, align 1, !dbg !12878, !ctir !181
  %conv5 = sext i8 %7 to i32, !dbg !12878
  %add = add i32 %mul, %conv5, !dbg !12879
  %sub = sub i32 %add, 48, !dbg !12880
  store i32 %sub, i32* %octal_mode, align 4, !dbg !12881
  %8 = load i32, i32* %octal_mode, align 4, !dbg !12882
  %cmp6 = icmp ult i32 4095, %8, !dbg !12884
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !12885

if.then8:                                         ; preds = %do.body
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !12886
  br label %return, !dbg !12886

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !12887

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !12888
  %10 = load i8, i8* %9, align 1, !dbg !12889, !ctir !181
  %conv9 = sext i8 %10 to i32, !dbg !12889
  %cmp10 = icmp sle i32 48, %conv9, !dbg !12890
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !12891

land.rhs:                                         ; preds = %do.cond
  %11 = load i8*, i8** %p, align 8, !dbg !12892
  %12 = load i8, i8* %11, align 1, !dbg !12893, !ctir !181
  %conv12 = sext i8 %12 to i32, !dbg !12893
  %cmp13 = icmp slt i32 %conv12, 56, !dbg !12894
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %13 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !12895
  br i1 %13, label %do.body, label %do.end, !dbg !12887, !llvm.loop !12896

do.end:                                           ; preds = %land.end
  %14 = load i8*, i8** %p, align 8, !dbg !12898
  %15 = load i8, i8* %14, align 1, !dbg !12900, !ctir !181
  %tobool = icmp ne i8 %15, 0, !dbg !12900
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !12901

if.then15:                                        ; preds = %do.end
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !12902
  br label %return, !dbg !12902

if.end16:                                         ; preds = %do.end
  %16 = load i32, i32* %octal_mode, align 4, !dbg !12903
  %call = call i32 @octal_to_mode(i32 %16), !dbg !12904
  store i32 %call, i32* %mode, align 4, !dbg !12905
  %17 = load i8*, i8** %p, align 8, !dbg !12906
  %18 = load i8*, i8** %mode_string.addr, align 8, !dbg !12907
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !12908
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !12908
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12908
  %cmp17 = icmp slt i64 %sub.ptr.sub, 5, !dbg !12909
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !12906

cond.true:                                        ; preds = %if.end16
  %19 = load i32, i32* %mode, align 4, !dbg !12910
  %and = and i32 %19, 3072, !dbg !12911
  %or = or i32 %and, 512, !dbg !12912
  %or19 = or i32 %or, 511, !dbg !12913
  br label %cond.end, !dbg !12906

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !12906

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ 4095, %cond.false ], !dbg !12906
  store i32 %cond, i32* %mentioned, align 4, !dbg !12914
  %20 = load i32, i32* %mode, align 4, !dbg !12915
  %21 = load i32, i32* %mentioned, align 4, !dbg !12916
  %call20 = call %struct.mode_change* @make_node_op_equals(i32 %20, i32 %21), !dbg !12917
  store %struct.mode_change* %call20, %struct.mode_change** %retval, align 8, !dbg !12918
  br label %return, !dbg !12918

if.end21:                                         ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %needed, metadata !12919, metadata !DIExpression()), !dbg !12921
  store i64 1, i64* %needed, align 8, !dbg !12921
  %22 = load i8*, i8** %mode_string.addr, align 8, !dbg !12922
  store i8* %22, i8** %p, align 8, !dbg !12924
  br label %for.cond, !dbg !12925

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i8*, i8** %p, align 8, !dbg !12926
  %24 = load i8, i8* %23, align 1, !dbg !12928, !ctir !181
  %tobool22 = icmp ne i8 %24, 0, !dbg !12929
  br i1 %tobool22, label %for.body, label %for.end, !dbg !12929

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %p, align 8, !dbg !12930
  %26 = load i8, i8* %25, align 1, !dbg !12931, !ctir !181
  %conv23 = sext i8 %26 to i32, !dbg !12931
  %cmp24 = icmp eq i32 %conv23, 61, !dbg !12932
  br i1 %cmp24, label %lor.end, label %lor.lhs.false, !dbg !12933

lor.lhs.false:                                    ; preds = %for.body
  %27 = load i8*, i8** %p, align 8, !dbg !12934
  %28 = load i8, i8* %27, align 1, !dbg !12935, !ctir !181
  %conv26 = sext i8 %28 to i32, !dbg !12935
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !12936
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !12937

lor.rhs:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** %p, align 8, !dbg !12938
  %30 = load i8, i8* %29, align 1, !dbg !12939, !ctir !181
  %conv29 = sext i8 %30 to i32, !dbg !12939
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !12940
  br label %lor.end, !dbg !12937

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.body
  %31 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp30, %lor.rhs ]
  %lor.ext = zext i1 %31 to i32, !dbg !12937
  %conv32 = sext i32 %lor.ext to i64, !dbg !12941
  %32 = load i64, i64* %needed, align 8, !dbg !12942
  %add33 = add i64 %32, %conv32, !dbg !12942
  store i64 %add33, i64* %needed, align 8, !dbg !12942
  br label %for.inc, !dbg !12943

for.inc:                                          ; preds = %lor.end
  %33 = load i8*, i8** %p, align 8, !dbg !12944
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !12944, !ctir !181
  store i8* %incdec.ptr34, i8** %p, align 8, !dbg !12944
  br label %for.cond, !dbg !12945, !llvm.loop !12946

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %needed, align 8, !dbg !12948
  %call35 = call noalias i8* @xnmalloc(i64 %34, i64 16), !dbg !12949
  %35 = bitcast i8* %call35 to %struct.mode_change*, !dbg !12949
  store %struct.mode_change* %35, %struct.mode_change** %mc, align 8, !dbg !12950
  %36 = load i8*, i8** %mode_string.addr, align 8, !dbg !12951
  store i8* %36, i8** %p, align 8, !dbg !12953
  br label %for.cond36, !dbg !12954

for.cond36:                                       ; preds = %for.inc147, %for.end
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !12955, metadata !DIExpression()), !dbg !12958
  store i32 0, i32* %affected, align 4, !dbg !12958
  br label %for.cond37, !dbg !12959

for.cond37:                                       ; preds = %for.inc47, %for.cond36
  %37 = load i8*, i8** %p, align 8, !dbg !12960
  %38 = load i8, i8* %37, align 1, !dbg !12963, !ctir !181
  %conv38 = sext i8 %38 to i32, !dbg !12963
  switch i32 %conv38, label %sw.default [
    i32 117, label %sw.bb
    i32 103, label %sw.bb40
    i32 111, label %sw.bb42
    i32 97, label %sw.bb44
    i32 61, label %sw.bb46
    i32 43, label %sw.bb46
    i32 45, label %sw.bb46
  ], !dbg !12964

sw.default:                                       ; preds = %for.cond37
  br label %invalid, !dbg !12965

sw.bb:                                            ; preds = %for.cond37
  %39 = load i32, i32* %affected, align 4, !dbg !12967
  %or39 = or i32 %39, 2496, !dbg !12967
  store i32 %or39, i32* %affected, align 4, !dbg !12967
  br label %sw.epilog, !dbg !12968

sw.bb40:                                          ; preds = %for.cond37
  %40 = load i32, i32* %affected, align 4, !dbg !12969
  %or41 = or i32 %40, 1080, !dbg !12969
  store i32 %or41, i32* %affected, align 4, !dbg !12969
  br label %sw.epilog, !dbg !12970

sw.bb42:                                          ; preds = %for.cond37
  %41 = load i32, i32* %affected, align 4, !dbg !12971
  %or43 = or i32 %41, 519, !dbg !12971
  store i32 %or43, i32* %affected, align 4, !dbg !12971
  br label %sw.epilog, !dbg !12972

sw.bb44:                                          ; preds = %for.cond37
  %42 = load i32, i32* %affected, align 4, !dbg !12973
  %or45 = or i32 %42, 4095, !dbg !12973
  store i32 %or45, i32* %affected, align 4, !dbg !12973
  br label %sw.epilog, !dbg !12974

sw.bb46:                                          ; preds = %for.cond37, %for.cond37, %for.cond37
  br label %no_more_affected, !dbg !12975

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb
  br label %for.inc47, !dbg !12976

for.inc47:                                        ; preds = %sw.epilog
  %43 = load i8*, i8** %p, align 8, !dbg !12977
  %incdec.ptr48 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !12977, !ctir !181
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !12977
  br label %for.cond37, !dbg !12978, !llvm.loop !12979

no_more_affected:                                 ; preds = %sw.bb46
  call void @llvm.dbg.label(metadata !12982), !dbg !12983
  br label %do.body49, !dbg !12984

do.body49:                                        ; preds = %lor.end139, %no_more_affected
  call void @llvm.dbg.declare(metadata i8* %op, metadata !12985, metadata !DIExpression()), !dbg !12987
  %44 = load i8*, i8** %p, align 8, !dbg !12988
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !12988, !ctir !181
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !12988
  %45 = load i8, i8* %44, align 1, !dbg !12989, !ctir !181
  store i8 %45, i8* %op, align 1, !dbg !12987
  call void @llvm.dbg.declare(metadata i32* %value, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %mentioned51, metadata !12992, metadata !DIExpression()), !dbg !12993
  store i32 0, i32* %mentioned51, align 4, !dbg !12993
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !12994, metadata !DIExpression()), !dbg !12995
  store i8 3, i8* %flag, align 1, !dbg !12995
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !12996, metadata !DIExpression()), !dbg !12997
  %46 = load i8*, i8** %p, align 8, !dbg !12998
  %47 = load i8, i8* %46, align 1, !dbg !12999, !ctir !181
  %conv52 = sext i8 %47 to i32, !dbg !12999
  switch i32 %conv52, label %sw.default92 [
    i32 48, label %sw.bb53
    i32 49, label %sw.bb53
    i32 50, label %sw.bb53
    i32 51, label %sw.bb53
    i32 52, label %sw.bb53
    i32 53, label %sw.bb53
    i32 54, label %sw.bb53
    i32 55, label %sw.bb53
    i32 117, label %sw.bb86
    i32 103, label %sw.bb88
    i32 111, label %sw.bb90
  ], !dbg !13000

sw.bb53:                                          ; preds = %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49
  call void @llvm.dbg.declare(metadata i32* %octal_mode54, metadata !13001, metadata !DIExpression()), !dbg !13004
  store i32 0, i32* %octal_mode54, align 4, !dbg !13004
  br label %do.body55, !dbg !13005

do.body55:                                        ; preds = %land.end73, %sw.bb53
  %48 = load i32, i32* %octal_mode54, align 4, !dbg !13006
  %mul56 = mul i32 8, %48, !dbg !13008
  %49 = load i8*, i8** %p, align 8, !dbg !13009
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !13009, !ctir !181
  store i8* %incdec.ptr57, i8** %p, align 8, !dbg !13009
  %50 = load i8, i8* %49, align 1, !dbg !13010, !ctir !181
  %conv58 = sext i8 %50 to i32, !dbg !13010
  %add59 = add i32 %mul56, %conv58, !dbg !13011
  %sub60 = sub i32 %add59, 48, !dbg !13012
  store i32 %sub60, i32* %octal_mode54, align 4, !dbg !13013
  %51 = load i32, i32* %octal_mode54, align 4, !dbg !13014
  %cmp61 = icmp ult i32 4095, %51, !dbg !13016
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13017

if.then63:                                        ; preds = %do.body55
  br label %invalid, !dbg !13018

if.end64:                                         ; preds = %do.body55
  br label %do.cond65, !dbg !13019

do.cond65:                                        ; preds = %if.end64
  %52 = load i8*, i8** %p, align 8, !dbg !13020
  %53 = load i8, i8* %52, align 1, !dbg !13021, !ctir !181
  %conv66 = sext i8 %53 to i32, !dbg !13021
  %cmp67 = icmp sle i32 48, %conv66, !dbg !13022
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !13023

land.rhs69:                                       ; preds = %do.cond65
  %54 = load i8*, i8** %p, align 8, !dbg !13024
  %55 = load i8, i8* %54, align 1, !dbg !13025, !ctir !181
  %conv70 = sext i8 %55 to i32, !dbg !13025
  %cmp71 = icmp slt i32 %conv70, 56, !dbg !13026
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %do.cond65
  %56 = phi i1 [ false, %do.cond65 ], [ %cmp71, %land.rhs69 ], !dbg !13027
  br i1 %56, label %do.body55, label %do.end74, !dbg !13019, !llvm.loop !13028

do.end74:                                         ; preds = %land.end73
  %57 = load i32, i32* %affected, align 4, !dbg !13030
  %tobool75 = icmp ne i32 %57, 0, !dbg !13030
  br i1 %tobool75, label %if.then83, label %lor.lhs.false76, !dbg !13032

lor.lhs.false76:                                  ; preds = %do.end74
  %58 = load i8*, i8** %p, align 8, !dbg !13033
  %59 = load i8, i8* %58, align 1, !dbg !13034, !ctir !181
  %conv77 = sext i8 %59 to i32, !dbg !13034
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !13034
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !13035

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %60 = load i8*, i8** %p, align 8, !dbg !13036
  %61 = load i8, i8* %60, align 1, !dbg !13037, !ctir !181
  %conv80 = sext i8 %61 to i32, !dbg !13037
  %cmp81 = icmp ne i32 %conv80, 44, !dbg !13038
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13039

if.then83:                                        ; preds = %land.lhs.true79, %do.end74
  br label %invalid, !dbg !13040

if.end84:                                         ; preds = %land.lhs.true79, %lor.lhs.false76
  store i32 4095, i32* %mentioned51, align 4, !dbg !13041
  store i32 4095, i32* %affected, align 4, !dbg !13042
  %62 = load i32, i32* %octal_mode54, align 4, !dbg !13043
  %call85 = call i32 @octal_to_mode(i32 %62), !dbg !13044
  store i32 %call85, i32* %value, align 4, !dbg !13045
  store i8 1, i8* %flag, align 1, !dbg !13046
  br label %sw.epilog110, !dbg !13047

sw.bb86:                                          ; preds = %do.body49
  store i32 448, i32* %value, align 4, !dbg !13048
  %63 = load i8*, i8** %p, align 8, !dbg !13049
  %incdec.ptr87 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13049, !ctir !181
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !13049
  br label %sw.epilog110, !dbg !13050

sw.bb88:                                          ; preds = %do.body49
  store i32 56, i32* %value, align 4, !dbg !13051
  %64 = load i8*, i8** %p, align 8, !dbg !13052
  %incdec.ptr89 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !13052, !ctir !181
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !13052
  br label %sw.epilog110, !dbg !13053

sw.bb90:                                          ; preds = %do.body49
  store i32 7, i32* %value, align 4, !dbg !13054
  %65 = load i8*, i8** %p, align 8, !dbg !13055
  %incdec.ptr91 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13055, !ctir !181
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !13055
  br label %sw.epilog110, !dbg !13056

sw.default92:                                     ; preds = %do.body49
  store i32 0, i32* %value, align 4, !dbg !13057
  store i8 1, i8* %flag, align 1, !dbg !13058
  br label %for.cond93, !dbg !13059

for.cond93:                                       ; preds = %for.inc108, %sw.default92
  %66 = load i8*, i8** %p, align 8, !dbg !13060
  %67 = load i8, i8* %66, align 1, !dbg !13063, !ctir !181
  %conv94 = sext i8 %67 to i32, !dbg !13063
  switch i32 %conv94, label %sw.default106 [
    i32 114, label %sw.bb95
    i32 119, label %sw.bb97
    i32 120, label %sw.bb99
    i32 88, label %sw.bb101
    i32 115, label %sw.bb102
    i32 116, label %sw.bb104
  ], !dbg !13064

sw.bb95:                                          ; preds = %for.cond93
  %68 = load i32, i32* %value, align 4, !dbg !13065
  %or96 = or i32 %68, 292, !dbg !13065
  store i32 %or96, i32* %value, align 4, !dbg !13065
  br label %sw.epilog107, !dbg !13067

sw.bb97:                                          ; preds = %for.cond93
  %69 = load i32, i32* %value, align 4, !dbg !13068
  %or98 = or i32 %69, 146, !dbg !13068
  store i32 %or98, i32* %value, align 4, !dbg !13068
  br label %sw.epilog107, !dbg !13069

sw.bb99:                                          ; preds = %for.cond93
  %70 = load i32, i32* %value, align 4, !dbg !13070
  %or100 = or i32 %70, 73, !dbg !13070
  store i32 %or100, i32* %value, align 4, !dbg !13070
  br label %sw.epilog107, !dbg !13071

sw.bb101:                                         ; preds = %for.cond93
  store i8 2, i8* %flag, align 1, !dbg !13072
  br label %sw.epilog107, !dbg !13073

sw.bb102:                                         ; preds = %for.cond93
  %71 = load i32, i32* %value, align 4, !dbg !13074
  %or103 = or i32 %71, 3072, !dbg !13074
  store i32 %or103, i32* %value, align 4, !dbg !13074
  br label %sw.epilog107, !dbg !13075

sw.bb104:                                         ; preds = %for.cond93
  %72 = load i32, i32* %value, align 4, !dbg !13076
  %or105 = or i32 %72, 512, !dbg !13076
  store i32 %or105, i32* %value, align 4, !dbg !13076
  br label %sw.epilog107, !dbg !13077

sw.default106:                                    ; preds = %for.cond93
  br label %no_more_values, !dbg !13078

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95
  br label %for.inc108, !dbg !13079

for.inc108:                                       ; preds = %sw.epilog107
  %73 = load i8*, i8** %p, align 8, !dbg !13080
  %incdec.ptr109 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !13080, !ctir !181
  store i8* %incdec.ptr109, i8** %p, align 8, !dbg !13080
  br label %for.cond93, !dbg !13081, !llvm.loop !13082

no_more_values:                                   ; preds = %sw.default106
  call void @llvm.dbg.label(metadata !13085), !dbg !13086
  br label %sw.epilog110, !dbg !13087

sw.epilog110:                                     ; preds = %no_more_values, %sw.bb90, %sw.bb88, %sw.bb86, %if.end84
  %74 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13088
  %75 = load i64, i64* %used, align 8, !dbg !13089
  %inc = add i64 %75, 1, !dbg !13089
  store i64 %inc, i64* %used, align 8, !dbg !13089
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %74, i64 %75, !dbg !13088, !ctir !1363
  store %struct.mode_change* %arrayidx, %struct.mode_change** %change, align 8, !dbg !13090
  %76 = load i8, i8* %op, align 1, !dbg !13091
  %77 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13092
  %op111 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %77, i32 0, i32 0, !dbg !13093, !ctir !1364
  store i8 %76, i8* %op111, align 4, !dbg !13094, !ctir !8
  %78 = load i8, i8* %flag, align 1, !dbg !13095
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13096
  %flag112 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %79, i32 0, i32 1, !dbg !13097, !ctir !1364
  store i8 %78, i8* %flag112, align 1, !dbg !13098, !ctir !8
  %80 = load i32, i32* %affected, align 4, !dbg !13099
  %81 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13100
  %affected113 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %81, i32 0, i32 2, !dbg !13101, !ctir !1364
  store i32 %80, i32* %affected113, align 4, !dbg !13102, !ctir !136
  %82 = load i32, i32* %value, align 4, !dbg !13103
  %83 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13104
  %value114 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %83, i32 0, i32 3, !dbg !13105, !ctir !1364
  store i32 %82, i32* %value114, align 4, !dbg !13106, !ctir !136
  %84 = load i32, i32* %mentioned51, align 4, !dbg !13107
  %tobool115 = icmp ne i32 %84, 0, !dbg !13107
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13107

cond.true116:                                     ; preds = %sw.epilog110
  %85 = load i32, i32* %mentioned51, align 4, !dbg !13108
  br label %cond.end124, !dbg !13107

cond.false117:                                    ; preds = %sw.epilog110
  %86 = load i32, i32* %affected, align 4, !dbg !13109
  %tobool118 = icmp ne i32 %86, 0, !dbg !13109
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !13109

cond.true119:                                     ; preds = %cond.false117
  %87 = load i32, i32* %affected, align 4, !dbg !13110
  %88 = load i32, i32* %value, align 4, !dbg !13111
  %and120 = and i32 %87, %88, !dbg !13112
  br label %cond.end122, !dbg !13109

cond.false121:                                    ; preds = %cond.false117
  %89 = load i32, i32* %value, align 4, !dbg !13113
  br label %cond.end122, !dbg !13109

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %and120, %cond.true119 ], [ %89, %cond.false121 ], !dbg !13109
  br label %cond.end124, !dbg !13107

cond.end124:                                      ; preds = %cond.end122, %cond.true116
  %cond125 = phi i32 [ %85, %cond.true116 ], [ %cond123, %cond.end122 ], !dbg !13107
  %90 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13114
  %mentioned126 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %90, i32 0, i32 4, !dbg !13115, !ctir !1364
  store i32 %cond125, i32* %mentioned126, align 4, !dbg !13116, !ctir !136
  br label %do.cond127, !dbg !13117

do.cond127:                                       ; preds = %cond.end124
  %91 = load i8*, i8** %p, align 8, !dbg !13118
  %92 = load i8, i8* %91, align 1, !dbg !13119, !ctir !181
  %conv128 = sext i8 %92 to i32, !dbg !13119
  %cmp129 = icmp eq i32 %conv128, 61, !dbg !13120
  br i1 %cmp129, label %lor.end139, label %lor.lhs.false131, !dbg !13121

lor.lhs.false131:                                 ; preds = %do.cond127
  %93 = load i8*, i8** %p, align 8, !dbg !13122
  %94 = load i8, i8* %93, align 1, !dbg !13123, !ctir !181
  %conv132 = sext i8 %94 to i32, !dbg !13123
  %cmp133 = icmp eq i32 %conv132, 43, !dbg !13124
  br i1 %cmp133, label %lor.end139, label %lor.rhs135, !dbg !13125

lor.rhs135:                                       ; preds = %lor.lhs.false131
  %95 = load i8*, i8** %p, align 8, !dbg !13126
  %96 = load i8, i8* %95, align 1, !dbg !13127, !ctir !181
  %conv136 = sext i8 %96 to i32, !dbg !13127
  %cmp137 = icmp eq i32 %conv136, 45, !dbg !13128
  br label %lor.end139, !dbg !13125

lor.end139:                                       ; preds = %lor.rhs135, %lor.lhs.false131, %do.cond127
  %97 = phi i1 [ true, %lor.lhs.false131 ], [ true, %do.cond127 ], [ %cmp137, %lor.rhs135 ]
  br i1 %97, label %do.body49, label %do.end141, !dbg !13117, !llvm.loop !13129

do.end141:                                        ; preds = %lor.end139
  %98 = load i8*, i8** %p, align 8, !dbg !13131
  %99 = load i8, i8* %98, align 1, !dbg !13133, !ctir !181
  %conv142 = sext i8 %99 to i32, !dbg !13133
  %cmp143 = icmp ne i32 %conv142, 44, !dbg !13134
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13135

if.then145:                                       ; preds = %do.end141
  br label %for.end149, !dbg !13136

if.end146:                                        ; preds = %do.end141
  br label %for.inc147, !dbg !13137

for.inc147:                                       ; preds = %if.end146
  %100 = load i8*, i8** %p, align 8, !dbg !13138
  %incdec.ptr148 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13138, !ctir !181
  store i8* %incdec.ptr148, i8** %p, align 8, !dbg !13138
  br label %for.cond36, !dbg !13139, !llvm.loop !13140

for.end149:                                       ; preds = %if.then145
  %101 = load i8*, i8** %p, align 8, !dbg !13143
  %102 = load i8, i8* %101, align 1, !dbg !13145, !ctir !181
  %conv150 = sext i8 %102 to i32, !dbg !13145
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !13146
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !13147

if.then153:                                       ; preds = %for.end149
  %103 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13148
  %104 = load i64, i64* %used, align 8, !dbg !13150
  %arrayidx154 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %103, i64 %104, !dbg !13148, !ctir !1363
  %flag155 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx154, i32 0, i32 1, !dbg !13151, !ctir !1364
  store i8 0, i8* %flag155, align 1, !dbg !13152, !ctir !8
  %105 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13153
  store %struct.mode_change* %105, %struct.mode_change** %retval, align 8, !dbg !13154
  br label %return, !dbg !13154

if.end156:                                        ; preds = %for.end149
  br label %invalid, !dbg !13155

invalid:                                          ; preds = %if.end156, %if.then83, %if.then63, %sw.default
  call void @llvm.dbg.label(metadata !13156), !dbg !13157
  %106 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13158
  %107 = bitcast %struct.mode_change* %106 to i8*, !dbg !13158
  call void @free(i8* %107) #9, !dbg !13159
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13160
  br label %return, !dbg !13160

return:                                           ; preds = %invalid, %if.then153, %cond.end, %if.then15, %if.then8
  %108 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13161
  ret %struct.mode_change* %108, !dbg !13161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @octal_to_mode(i32 %octal) #4 !dbg !13162 {
entry:
  %octal.addr = alloca i32, align 4
  store i32 %octal, i32* %octal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %octal.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  %0 = load i32, i32* %octal.addr, align 4, !dbg !13167
  ret i32 %0, !dbg !13168
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.mode_change* @make_node_op_equals(i32 %new_mode, i32 %mentioned) #4 !dbg !13169 {
entry:
  %new_mode.addr = alloca i32, align 4
  %mentioned.addr = alloca i32, align 4
  %p = alloca %struct.mode_change*, align 8, !ctir !1363
  store i32 %new_mode, i32* %new_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  store i32 %mentioned, i32* %mentioned.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mentioned.addr, metadata !13174, metadata !DIExpression()), !dbg !13175
  call void @llvm.dbg.declare(metadata %struct.mode_change** %p, metadata !13176, metadata !DIExpression()), !dbg !13177
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13178
  %0 = bitcast i8* %call to %struct.mode_change*, !dbg !13178
  store %struct.mode_change* %0, %struct.mode_change** %p, align 8, !dbg !13177
  %1 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13179
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 0, !dbg !13180, !ctir !1364
  store i8 61, i8* %op, align 4, !dbg !13181, !ctir !8
  %2 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13182
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %2, i32 0, i32 1, !dbg !13183, !ctir !1364
  store i8 1, i8* %flag, align 1, !dbg !13184, !ctir !8
  %3 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13185
  %affected = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13186, !ctir !1364
  store i32 4095, i32* %affected, align 4, !dbg !13187, !ctir !136
  %4 = load i32, i32* %new_mode.addr, align 4, !dbg !13188
  %5 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13189
  %value = getelementptr inbounds %struct.mode_change, %struct.mode_change* %5, i32 0, i32 3, !dbg !13190, !ctir !1364
  store i32 %4, i32* %value, align 4, !dbg !13191, !ctir !136
  %6 = load i32, i32* %mentioned.addr, align 4, !dbg !13192
  %7 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13193
  %mentioned1 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13194, !ctir !1364
  store i32 %6, i32* %mentioned1, align 4, !dbg !13195, !ctir !136
  %8 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13196
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %8, i64 1, !dbg !13196, !ctir !1363
  %flag2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx, i32 0, i32 1, !dbg !13197, !ctir !1364
  store i8 0, i8* %flag2, align 1, !dbg !13198, !ctir !8
  %9 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13199
  ret %struct.mode_change* %9, !dbg !13200
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_create_from_ref(i8* %ref_file) #4 !dbg !13201 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %ref_file.addr = alloca i8*, align 8
  %ref_stats = alloca %struct.stat, align 8, !ctir !13202
  store i8* %ref_file, i8** %ref_file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ref_file.addr, metadata !13223, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.declare(metadata %struct.stat* %ref_stats, metadata !13225, metadata !DIExpression()), !dbg !13226
  %0 = load i8*, i8** %ref_file.addr, align 8, !dbg !13227
  %call = call i32 @stat(i8* %0, %struct.stat* %ref_stats) #9, !dbg !13229
  %cmp = icmp ne i32 %call, 0, !dbg !13230
  br i1 %cmp, label %if.then, label %if.end, !dbg !13231

if.then:                                          ; preds = %entry
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13232
  br label %return, !dbg !13232

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %ref_stats, i32 0, i32 3, !dbg !13233, !ctir !13202
  %1 = load i32, i32* %st_mode, align 8, !dbg !13233, !ctir !137
  %call1 = call %struct.mode_change* @make_node_op_equals(i32 %1, i32 4095), !dbg !13234
  store %struct.mode_change* %call1, %struct.mode_change** %retval, align 8, !dbg !13235
  br label %return, !dbg !13235

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13236
  ret %struct.mode_change* %2, !dbg !13236
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mode_adjust(i32 %oldmode, i1 zeroext %dir, i32 %umask_value, %struct.mode_change* %changes, i32* %pmode_bits) #4 !dbg !13237 {
entry:
  %oldmode.addr = alloca i32, align 4
  %dir.addr = alloca i8, align 1
  %umask_value.addr = alloca i32, align 4
  %changes.addr = alloca %struct.mode_change*, align 8
  %pmode_bits.addr = alloca i32*, align 8
  %newmode = alloca i32, align 4, !ctir !136
  %mode_bits = alloca i32, align 4, !ctir !136
  %affected = alloca i32, align 4, !ctir !136
  %omit_change = alloca i32, align 4, !ctir !136
  %value = alloca i32, align 4, !ctir !136
  %preserved = alloca i32, align 4, !ctir !136
  store i32 %oldmode, i32* %oldmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldmode.addr, metadata !13243, metadata !DIExpression()), !dbg !13244
  %frombool = zext i1 %dir to i8
  store i8 %frombool, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !13245, metadata !DIExpression()), !dbg !13246
  store i32 %umask_value, i32* %umask_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %umask_value.addr, metadata !13247, metadata !DIExpression()), !dbg !13248
  store %struct.mode_change* %changes, %struct.mode_change** %changes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mode_change** %changes.addr, metadata !13249, metadata !DIExpression()), !dbg !13250
  store i32* %pmode_bits, i32** %pmode_bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pmode_bits.addr, metadata !13251, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !13253, metadata !DIExpression()), !dbg !13254
  %0 = load i32, i32* %oldmode.addr, align 4, !dbg !13255
  %and = and i32 %0, 4095, !dbg !13256
  store i32 %and, i32* %newmode, align 4, !dbg !13254
  call void @llvm.dbg.declare(metadata i32* %mode_bits, metadata !13257, metadata !DIExpression()), !dbg !13258
  store i32 0, i32* %mode_bits, align 4, !dbg !13258
  br label %for.cond, !dbg !13259

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13260
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 1, !dbg !13263, !ctir !13241
  %2 = load i8, i8* %flag, align 1, !dbg !13263, !ctir !8
  %conv = sext i8 %2 to i32, !dbg !13260
  %cmp = icmp ne i32 %conv, 0, !dbg !13264
  br i1 %cmp, label %for.body, label %for.end, !dbg !13265

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13266, metadata !DIExpression()), !dbg !13268
  %3 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13269
  %affected2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13270, !ctir !13241
  %4 = load i32, i32* %affected2, align 4, !dbg !13270, !ctir !136
  store i32 %4, i32* %affected, align 4, !dbg !13268
  call void @llvm.dbg.declare(metadata i32* %omit_change, metadata !13271, metadata !DIExpression()), !dbg !13272
  %5 = load i8, i8* %dir.addr, align 1, !dbg !13273
  %tobool = trunc i8 %5 to i1, !dbg !13273
  %6 = zext i1 %tobool to i64, !dbg !13273
  %cond = select i1 %tobool, i32 3072, i32 0, !dbg !13273
  %7 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13274
  %mentioned = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13275, !ctir !13241
  %8 = load i32, i32* %mentioned, align 4, !dbg !13275, !ctir !136
  %neg = xor i32 %8, -1, !dbg !13276
  %and4 = and i32 %cond, %neg, !dbg !13277
  store i32 %and4, i32* %omit_change, align 4, !dbg !13272
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13278, metadata !DIExpression()), !dbg !13279
  %9 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13280
  %value5 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %9, i32 0, i32 3, !dbg !13281, !ctir !13241
  %10 = load i32, i32* %value5, align 4, !dbg !13281, !ctir !136
  store i32 %10, i32* %value, align 4, !dbg !13279
  %11 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13282
  %flag6 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %11, i32 0, i32 1, !dbg !13283, !ctir !13241
  %12 = load i8, i8* %flag6, align 1, !dbg !13283, !ctir !8
  %conv7 = sext i8 %12 to i32, !dbg !13282
  switch i32 %conv7, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb21
  ], !dbg !13284

sw.bb:                                            ; preds = %for.body
  br label %sw.epilog, !dbg !13285

sw.bb8:                                           ; preds = %for.body
  %13 = load i32, i32* %newmode, align 4, !dbg !13287
  %14 = load i32, i32* %value, align 4, !dbg !13288
  %and9 = and i32 %14, %13, !dbg !13288
  store i32 %and9, i32* %value, align 4, !dbg !13288
  %15 = load i32, i32* %value, align 4, !dbg !13289
  %and10 = and i32 %15, 292, !dbg !13290
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13289
  %16 = zext i1 %tobool11 to i64, !dbg !13289
  %cond12 = select i1 %tobool11, i32 292, i32 0, !dbg !13289
  %17 = load i32, i32* %value, align 4, !dbg !13291
  %and13 = and i32 %17, 146, !dbg !13292
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13291
  %18 = zext i1 %tobool14 to i64, !dbg !13291
  %cond15 = select i1 %tobool14, i32 146, i32 0, !dbg !13291
  %or = or i32 %cond12, %cond15, !dbg !13293
  %19 = load i32, i32* %value, align 4, !dbg !13294
  %and16 = and i32 %19, 73, !dbg !13295
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13294
  %20 = zext i1 %tobool17 to i64, !dbg !13294
  %cond18 = select i1 %tobool17, i32 73, i32 0, !dbg !13294
  %or19 = or i32 %or, %cond18, !dbg !13296
  %21 = load i32, i32* %value, align 4, !dbg !13297
  %or20 = or i32 %21, %or19, !dbg !13297
  store i32 %or20, i32* %value, align 4, !dbg !13297
  br label %sw.epilog, !dbg !13298

sw.bb21:                                          ; preds = %for.body
  %22 = load i32, i32* %newmode, align 4, !dbg !13299
  %and22 = and i32 %22, 73, !dbg !13301
  %23 = load i8, i8* %dir.addr, align 1, !dbg !13302
  %tobool23 = trunc i8 %23 to i1, !dbg !13302
  %conv24 = zext i1 %tobool23 to i32, !dbg !13302
  %or25 = or i32 %and22, %conv24, !dbg !13303
  %tobool26 = icmp ne i32 %or25, 0, !dbg !13303
  br i1 %tobool26, label %if.then, label %if.end, !dbg !13304

if.then:                                          ; preds = %sw.bb21
  %24 = load i32, i32* %value, align 4, !dbg !13305
  %or27 = or i32 %24, 73, !dbg !13305
  store i32 %or27, i32* %value, align 4, !dbg !13305
  br label %if.end, !dbg !13306

if.end:                                           ; preds = %if.then, %sw.bb21
  br label %sw.epilog, !dbg !13307

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb8, %sw.bb
  %25 = load i32, i32* %affected, align 4, !dbg !13308
  %tobool28 = icmp ne i32 %25, 0, !dbg !13308
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !13308

cond.true:                                        ; preds = %sw.epilog
  %26 = load i32, i32* %affected, align 4, !dbg !13309
  br label %cond.end, !dbg !13308

cond.false:                                       ; preds = %sw.epilog
  %27 = load i32, i32* %umask_value.addr, align 4, !dbg !13310
  %neg29 = xor i32 %27, -1, !dbg !13311
  br label %cond.end, !dbg !13308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %26, %cond.true ], [ %neg29, %cond.false ], !dbg !13308
  %28 = load i32, i32* %omit_change, align 4, !dbg !13312
  %neg31 = xor i32 %28, -1, !dbg !13313
  %and32 = and i32 %cond30, %neg31, !dbg !13314
  %29 = load i32, i32* %value, align 4, !dbg !13315
  %and33 = and i32 %29, %and32, !dbg !13315
  store i32 %and33, i32* %value, align 4, !dbg !13315
  %30 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13316
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %30, i32 0, i32 0, !dbg !13317, !ctir !13241
  %31 = load i8, i8* %op, align 4, !dbg !13317, !ctir !8
  %conv34 = sext i8 %31 to i32, !dbg !13316
  switch i32 %conv34, label %sw.epilog55 [
    i32 61, label %sw.bb35
    i32 43, label %sw.bb48
    i32 45, label %sw.bb51
  ], !dbg !13318

sw.bb35:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %preserved, metadata !13319, metadata !DIExpression()), !dbg !13322
  %32 = load i32, i32* %affected, align 4, !dbg !13323
  %tobool36 = icmp ne i32 %32, 0, !dbg !13323
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !13323

cond.true37:                                      ; preds = %sw.bb35
  %33 = load i32, i32* %affected, align 4, !dbg !13324
  %neg38 = xor i32 %33, -1, !dbg !13325
  br label %cond.end40, !dbg !13323

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !13323

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %neg38, %cond.true37 ], [ 0, %cond.false39 ], !dbg !13323
  %34 = load i32, i32* %omit_change, align 4, !dbg !13326
  %or42 = or i32 %cond41, %34, !dbg !13327
  store i32 %or42, i32* %preserved, align 4, !dbg !13322
  %35 = load i32, i32* %preserved, align 4, !dbg !13328
  %neg43 = xor i32 %35, -1, !dbg !13329
  %and44 = and i32 4095, %neg43, !dbg !13330
  %36 = load i32, i32* %mode_bits, align 4, !dbg !13331
  %or45 = or i32 %36, %and44, !dbg !13331
  store i32 %or45, i32* %mode_bits, align 4, !dbg !13331
  %37 = load i32, i32* %newmode, align 4, !dbg !13332
  %38 = load i32, i32* %preserved, align 4, !dbg !13333
  %and46 = and i32 %37, %38, !dbg !13334
  %39 = load i32, i32* %value, align 4, !dbg !13335
  %or47 = or i32 %and46, %39, !dbg !13336
  store i32 %or47, i32* %newmode, align 4, !dbg !13337
  br label %sw.epilog55, !dbg !13338

sw.bb48:                                          ; preds = %cond.end
  %40 = load i32, i32* %value, align 4, !dbg !13339
  %41 = load i32, i32* %mode_bits, align 4, !dbg !13340
  %or49 = or i32 %41, %40, !dbg !13340
  store i32 %or49, i32* %mode_bits, align 4, !dbg !13340
  %42 = load i32, i32* %value, align 4, !dbg !13341
  %43 = load i32, i32* %newmode, align 4, !dbg !13342
  %or50 = or i32 %43, %42, !dbg !13342
  store i32 %or50, i32* %newmode, align 4, !dbg !13342
  br label %sw.epilog55, !dbg !13343

sw.bb51:                                          ; preds = %cond.end
  %44 = load i32, i32* %value, align 4, !dbg !13344
  %45 = load i32, i32* %mode_bits, align 4, !dbg !13345
  %or52 = or i32 %45, %44, !dbg !13345
  store i32 %or52, i32* %mode_bits, align 4, !dbg !13345
  %46 = load i32, i32* %value, align 4, !dbg !13346
  %neg53 = xor i32 %46, -1, !dbg !13347
  %47 = load i32, i32* %newmode, align 4, !dbg !13348
  %and54 = and i32 %47, %neg53, !dbg !13348
  store i32 %and54, i32* %newmode, align 4, !dbg !13348
  br label %sw.epilog55, !dbg !13349

sw.epilog55:                                      ; preds = %cond.end, %sw.bb51, %sw.bb48, %cond.end40
  br label %for.inc, !dbg !13350

for.inc:                                          ; preds = %sw.epilog55
  %48 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13351
  %incdec.ptr = getelementptr inbounds %struct.mode_change, %struct.mode_change* %48, i32 1, !dbg !13351, !ctir !13241
  store %struct.mode_change* %incdec.ptr, %struct.mode_change** %changes.addr, align 8, !dbg !13351
  br label %for.cond, !dbg !13352, !llvm.loop !13353

for.end:                                          ; preds = %for.cond
  %49 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13355
  %tobool56 = icmp ne i32* %49, null, !dbg !13355
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !13357

if.then57:                                        ; preds = %for.end
  %50 = load i32, i32* %mode_bits, align 4, !dbg !13358
  %51 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13359
  store i32 %50, i32* %51, align 4, !dbg !13360, !ctir !136
  br label %if.end58, !dbg !13361

if.end58:                                         ; preds = %if.then57, %for.end
  %52 = load i32, i32* %newmode, align 4, !dbg !13362
  ret i32 %52, !dbg !13363
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13364 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !5
  %new_fd = alloca i32, align 4, !ctir !5
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %fdopendir_errno = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13370, metadata !DIExpression()), !dbg !13371
  store i32 %extra_flags, i32* %extra_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13372, metadata !DIExpression()), !dbg !13373
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13374, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13376, metadata !DIExpression()), !dbg !13377
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13378
  %or = or i32 592128, %0, !dbg !13379
  store i32 %or, i32* %open_flags, align 4, !dbg !13377
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13380, metadata !DIExpression()), !dbg !13381
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13382
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13383
  %3 = load i32, i32* %open_flags, align 4, !dbg !13384
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13385
  store i32 %call, i32* %new_fd, align 4, !dbg !13381
  %4 = load i32, i32* %new_fd, align 4, !dbg !13386
  %cmp = icmp slt i32 %4, 0, !dbg !13388
  br i1 %cmp, label %if.then, label %if.end, !dbg !13389

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13390
  br label %return, !dbg !13390

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13391, metadata !DIExpression()), !dbg !13392
  %5 = load i32, i32* %new_fd, align 4, !dbg !13393
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13394
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13392
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13395
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13395
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13397

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13398
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13399
  store i32 %7, i32* %8, align 4, !dbg !13400, !ctir !5
  br label %if.end6, !dbg !13401

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13402, metadata !DIExpression()), !dbg !13404
  %call3 = call i32* @__errno_location() #16, !dbg !13405
  %9 = load i32, i32* %call3, align 4, !dbg !13405, !ctir !5
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13404
  %10 = load i32, i32* %new_fd, align 4, !dbg !13406
  %call4 = call i32 @close(i32 %10), !dbg !13407
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13408
  %call5 = call i32* @__errno_location() #16, !dbg !13409
  store i32 %11, i32* %call5, align 4, !dbg !13410, !ctir !5
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13411
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13412
  br label %return, !dbg !13412

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13413
  ret %struct.__dirstream* %13, !dbg !13413
}

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13414 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !180
  %base = alloca i8*, align 8, !ctir !180
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13417, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13419, metadata !DIExpression()), !dbg !13420
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13421
  %cmp = icmp eq i8* %0, null, !dbg !13423
  br i1 %cmp, label %if.then, label %if.end, !dbg !13424

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13425
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.310, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13427
  call void @abort() #13, !dbg !13428
  unreachable, !dbg !13428

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13429
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13430
  store i8* %call1, i8** %slash, align 8, !dbg !13431
  %3 = load i8*, i8** %slash, align 8, !dbg !13432
  %cmp2 = icmp ne i8* %3, null, !dbg !13433
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13432

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13434
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13435, !ctir !181
  br label %cond.end, !dbg !13432

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13436
  br label %cond.end, !dbg !13432

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13432
  store i8* %cond, i8** %base, align 8, !dbg !13437
  %6 = load i8*, i8** %base, align 8, !dbg !13438
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13440
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13441
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13441
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13441
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13442
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13443

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13444
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13445, !ctir !181
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.311, i64 0, i64 0), i64 7) #14, !dbg !13446
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13447
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13448

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13449
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13451
  %10 = load i8*, i8** %base, align 8, !dbg !13452
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.312, i64 0, i64 0), i64 3) #14, !dbg !13454
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13455
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13456

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13457
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13459, !ctir !181
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13460
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13461
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13462
  br label %if.end12, !dbg !13463

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13464

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13465
  store i8* %13, i8** @program_name, align 8, !dbg !13466
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13467
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13468
  ret void, !dbg !13469
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13470 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %union.anon, align 4, !ctir !13472
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13476, metadata !DIExpression()), !dbg !13477
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13478, metadata !DIExpression()), !dbg !13479
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.declare(metadata %union.anon* %ctx, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13488, metadata !DIExpression()), !dbg !13489
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13490
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13491
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13492
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %union.anon* %ctx), !dbg !13493
  store i32 %call, i32* %ret, align 4, !dbg !13494
  %3 = load i32, i32* %ret, align 4, !dbg !13495
  %cmp = icmp ne i32 %3, 0, !dbg !13497
  br i1 %cmp, label %if.then, label %if.end, !dbg !13498

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13499
  br label %return, !dbg !13499

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13500
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13501
  %call1 = call i32 @set_permissions(%union.anon* %ctx, i8* %4, i32 %5), !dbg !13502
  store i32 %call1, i32* %ret, align 4, !dbg !13503
  call void @free_permission_context(%union.anon* %ctx), !dbg !13504
  %6 = load i32, i32* %ret, align 4, !dbg !13505
  store i32 %6, i32* %retval, align 4, !dbg !13506
  br label %return, !dbg !13506

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13507
  ret i32 %7, !dbg !13507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13508 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %union.anon, align 4, !ctir !13510
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13513, metadata !DIExpression()), !dbg !13514
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13515, metadata !DIExpression()), !dbg !13516
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13517, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.declare(metadata %union.anon* %ctx, metadata !13519, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13521, metadata !DIExpression()), !dbg !13522
  %0 = bitcast %union.anon* %ctx to i8*, !dbg !13523
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 4, i1 false), !dbg !13523
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13524
  %mode1 = getelementptr inbounds %union.anon, %union.anon* %ctx, i32 0, i32 0, !dbg !13525, !ctir !13510
  store i32 %1, i32* %mode1, align 4, !dbg !13526, !ctir !136
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13527
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13528
  %call = call i32 @set_permissions(%union.anon* %ctx, i8* %2, i32 %3), !dbg !13529
  store i32 %call, i32* %ret, align 4, !dbg !13530
  call void @free_permission_context(%union.anon* %ctx), !dbg !13531
  %4 = load i32, i32* %ret, align 4, !dbg !13532
  ret i32 %4, !dbg !13533
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13534 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !5
  %p = alloca %struct.quoting_options*, align 8, !ctir !923
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13537, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13539, metadata !DIExpression()), !dbg !13540
  %call = call i32* @__errno_location() #16, !dbg !13541
  %0 = load i32, i32* %call, align 4, !dbg !13541, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !13540
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13542, metadata !DIExpression()), !dbg !13543
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13544
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13544
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13544

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13545
  br label %cond.end, !dbg !13544

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13544

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13544
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13544
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13546
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13546
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13543
  %5 = load i32, i32* %e, align 4, !dbg !13547
  %call2 = call i32* @__errno_location() #16, !dbg !13548
  store i32 %5, i32* %call2, align 4, !dbg !13549, !ctir !5
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13550
  ret %struct.quoting_options* %6, !dbg !13551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13552 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13555, metadata !DIExpression()), !dbg !13556
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13557
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13557
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13557

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13558
  br label %cond.end, !dbg !13557

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13557
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13559, !ctir !935
  %2 = load i32, i32* %style, align 8, !dbg !13559, !ctir !905
  ret i32 %2, !dbg !13560
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13561 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13564, metadata !DIExpression()), !dbg !13565
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13566, metadata !DIExpression()), !dbg !13567
  %0 = load i32, i32* %s.addr, align 4, !dbg !13568
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13569
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13569
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13569

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13570
  br label %cond.end, !dbg !13569

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13569
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13571, !ctir !924
  store i32 %0, i32* %style, align 8, !dbg !13572, !ctir !905
  ret void, !dbg !13573
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13574 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !585
  %p = alloca i32*, align 8, !ctir !933
  %shift = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13577, metadata !DIExpression()), !dbg !13578
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13579, metadata !DIExpression()), !dbg !13580
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13581, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13583, metadata !DIExpression()), !dbg !13584
  %0 = load i8, i8* %c.addr, align 1, !dbg !13585
  store i8 %0, i8* %uc, align 1, !dbg !13584
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13586, metadata !DIExpression()), !dbg !13587
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13588
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13588
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13588

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13589
  br label %cond.end, !dbg !13588

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13588
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13590, !ctir !924
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13591, !ctir !930
  %3 = load i8, i8* %uc, align 1, !dbg !13592
  %conv = zext i8 %3 to i64, !dbg !13592
  %div = udiv i64 %conv, 32, !dbg !13593
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13594, !ctir !67
  store i32* %add.ptr, i32** %p, align 8, !dbg !13587
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13595, metadata !DIExpression()), !dbg !13596
  %4 = load i8, i8* %uc, align 1, !dbg !13597
  %conv1 = zext i8 %4 to i64, !dbg !13597
  %rem = urem i64 %conv1, 32, !dbg !13598
  %conv2 = trunc i64 %rem to i32, !dbg !13597
  store i32 %conv2, i32* %shift, align 4, !dbg !13596
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13599, metadata !DIExpression()), !dbg !13600
  %5 = load i32*, i32** %p, align 8, !dbg !13601
  %6 = load i32, i32* %5, align 4, !dbg !13602, !ctir !67
  %7 = load i32, i32* %shift, align 4, !dbg !13603
  %shr = lshr i32 %6, %7, !dbg !13604
  %and = and i32 %shr, 1, !dbg !13605
  store i32 %and, i32* %r, align 4, !dbg !13600
  %8 = load i32, i32* %i.addr, align 4, !dbg !13606
  %and3 = and i32 %8, 1, !dbg !13607
  %9 = load i32, i32* %r, align 4, !dbg !13608
  %xor = xor i32 %and3, %9, !dbg !13609
  %10 = load i32, i32* %shift, align 4, !dbg !13610
  %shl = shl i32 %xor, %10, !dbg !13611
  %11 = load i32*, i32** %p, align 8, !dbg !13612
  %12 = load i32, i32* %11, align 4, !dbg !13613, !ctir !67
  %xor4 = xor i32 %12, %shl, !dbg !13613
  store i32 %xor4, i32* %11, align 4, !dbg !13613, !ctir !67
  %13 = load i32, i32* %r, align 4, !dbg !13614
  ret i32 %13, !dbg !13615
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13616 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13619, metadata !DIExpression()), !dbg !13620
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13621, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13623, metadata !DIExpression()), !dbg !13624
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13625
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13625
  br i1 %tobool, label %if.end, label %if.then, !dbg !13627

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13628
  br label %if.end, !dbg !13629

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13630
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13631, !ctir !924
  %2 = load i32, i32* %flags, align 4, !dbg !13631, !ctir !5
  store i32 %2, i32* %r, align 4, !dbg !13632
  %3 = load i32, i32* %i.addr, align 4, !dbg !13633
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13634
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13635, !ctir !924
  store i32 %3, i32* %flags1, align 4, !dbg !13636, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !13637
  ret i32 %5, !dbg !13638
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13639 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13648
  br i1 %tobool, label %if.end, label %if.then, !dbg !13650

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13651
  br label %if.end, !dbg !13652

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13653
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13654, !ctir !924
  store i32 10, i32* %style, align 8, !dbg !13655, !ctir !905
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13656
  %tobool1 = icmp ne i8* %2, null, !dbg !13656
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13658

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13659
  %tobool2 = icmp ne i8* %3, null, !dbg !13659
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13660

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13661
  unreachable, !dbg !13661

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13662
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13663
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13664, !ctir !924
  store i8* %4, i8** %left_quote5, align 8, !dbg !13665, !ctir !180
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13666
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13667
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13668, !ctir !924
  store i8* %6, i8** %right_quote6, align 8, !dbg !13669, !ctir !180
  ret void, !dbg !13670
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13671 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !934
  %e = alloca i32, align 4, !ctir !5
  %r = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13676, metadata !DIExpression()), !dbg !13677
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13678, metadata !DIExpression()), !dbg !13679
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13680, metadata !DIExpression()), !dbg !13681
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13682, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13684, metadata !DIExpression()), !dbg !13685
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13686
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13686
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13686

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13687
  br label %cond.end, !dbg !13686

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13686
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13685
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13688, metadata !DIExpression()), !dbg !13689
  %call = call i32* @__errno_location() #16, !dbg !13690
  %2 = load i32, i32* %call, align 4, !dbg !13690, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !13689
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13691, metadata !DIExpression()), !dbg !13692
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13693
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13694
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13695
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13696
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13697
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13698, !ctir !935
  %8 = load i32, i32* %style, align 8, !dbg !13698, !ctir !905
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13699
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13700, !ctir !935
  %10 = load i32, i32* %flags, align 4, !dbg !13700, !ctir !5
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13701
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13702, !ctir !935
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13701, !ctir !936
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13703
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13704, !ctir !935
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13704, !ctir !180
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13705
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13706, !ctir !935
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13706, !ctir !180
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13707
  store i64 %call1, i64* %r, align 8, !dbg !13692
  %16 = load i32, i32* %e, align 4, !dbg !13708
  %call2 = call i32* @__errno_location() #16, !dbg !13709
  store i32 %16, i32* %call2, align 4, !dbg !13710, !ctir !5
  %17 = load i64, i64* %r, align 8, !dbg !13711
  ret i64 %17, !dbg !13712
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13713 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %orig_buffersize = alloca i64, align 8, !ctir !52
  %quote_string = alloca i8*, align 8, !ctir !180
  %quote_string_len = alloca i64, align 8, !ctir !52
  %backslash_escapes = alloca i8, align 1, !ctir !139
  %unibyte_locale = alloca i8, align 1, !ctir !139
  %elide_outer_quotes = alloca i8, align 1, !ctir !139
  %pending_shell_escape_end = alloca i8, align 1, !ctir !139
  %encountered_single_quote = alloca i8, align 1, !ctir !139
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %c = alloca i8, align 1, !ctir !585
  %esc = alloca i8, align 1, !ctir !585
  %is_right_quote = alloca i8, align 1, !ctir !139
  %escaping = alloca i8, align 1, !ctir !139
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %m = alloca i64, align 8, !ctir !52
  %printable = alloca i8, align 1, !ctir !139
  %mbstate = alloca %struct.savewd, align 4, !ctir !944
  %w = alloca i32, align 4, !ctir !955
  %bytes = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %ilim = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13718, metadata !DIExpression()), !dbg !13719
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13720, metadata !DIExpression()), !dbg !13721
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13722, metadata !DIExpression()), !dbg !13723
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13724, metadata !DIExpression()), !dbg !13725
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13726, metadata !DIExpression()), !dbg !13727
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13728, metadata !DIExpression()), !dbg !13729
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13732, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13734, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13736, metadata !DIExpression()), !dbg !13737
  store i64 0, i64* %len, align 8, !dbg !13737
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13738, metadata !DIExpression()), !dbg !13739
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13739
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13740, metadata !DIExpression()), !dbg !13741
  store i8* null, i8** %quote_string, align 8, !dbg !13741
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13742, metadata !DIExpression()), !dbg !13743
  store i64 0, i64* %quote_string_len, align 8, !dbg !13743
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13744, metadata !DIExpression()), !dbg !13745
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13745
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13746, metadata !DIExpression()), !dbg !13747
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !13748
  %cmp = icmp eq i64 %call, 1, !dbg !13749
  %frombool = zext i1 %cmp to i8, !dbg !13747
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13747
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13750, metadata !DIExpression()), !dbg !13751
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13752
  %and = and i32 %0, 2, !dbg !13753
  %cmp1 = icmp ne i32 %and, 0, !dbg !13754
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13751
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13751
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13755, metadata !DIExpression()), !dbg !13756
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13756
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13758
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13760
  br label %process_input, !dbg !13761

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13762), !dbg !13763
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13764
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13765

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13766
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13768
  br label %sw.bb3, !dbg !13769

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13770
  %tobool = trunc i8 %2 to i1, !dbg !13770
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13772

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13773

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13774
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13774
  %cmp4 = icmp ult i64 %3, %4, !dbg !13774
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13777

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13774
  %6 = load i64, i64* %len, align 8, !dbg !13774
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13774, !ctir !7
  store i8 34, i8* %arrayidx, align 1, !dbg !13774
  br label %if.end, !dbg !13774

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13777
  %inc = add i64 %7, 1, !dbg !13777
  store i64 %inc, i64* %len, align 8, !dbg !13777
  br label %do.end, !dbg !13777

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13777

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13778
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13779
  store i64 1, i64* %quote_string_len, align 8, !dbg !13780
  br label %sw.epilog, !dbg !13781

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13782
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13783
  br label %sw.epilog, !dbg !13784

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13785
  %cmp9 = icmp ne i32 %8, 10, !dbg !13788
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13789

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13790
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.328, i64 0, i64 0), i32 %9), !dbg !13792
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13793
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13794
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), i32 %10), !dbg !13795
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13796
  br label %if.end13, !dbg !13797

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13798
  %tobool14 = trunc i8 %11 to i1, !dbg !13798
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13800

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13801
  store i8* %12, i8** %quote_string, align 8, !dbg !13803
  br label %for.cond, !dbg !13804

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13805
  %14 = load i8, i8* %13, align 1, !dbg !13807, !ctir !181
  %tobool16 = icmp ne i8 %14, 0, !dbg !13808
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13808

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13809

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13810
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13810
  %cmp18 = icmp ult i64 %15, %16, !dbg !13810
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13813

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13810
  %18 = load i8, i8* %17, align 1, !dbg !13810, !ctir !181
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13810
  %20 = load i64, i64* %len, align 8, !dbg !13810
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13810, !ctir !7
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13810
  br label %if.end21, !dbg !13810

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13813
  %inc22 = add i64 %21, 1, !dbg !13813
  store i64 %inc22, i64* %len, align 8, !dbg !13813
  br label %do.end23, !dbg !13813

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13813

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13814
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13814, !ctir !181
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13814
  br label %for.cond, !dbg !13815, !llvm.loop !13816

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13817

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13818
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13819
  store i8* %23, i8** %quote_string, align 8, !dbg !13820
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13821
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13822
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13823
  br label %sw.epilog, !dbg !13824

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13825
  br label %sw.bb27, !dbg !13826

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13827
  br label %sw.bb28, !dbg !13828

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13829
  %tobool29 = trunc i8 %25 to i1, !dbg !13829
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13831

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13832
  br label %if.end31, !dbg !13833

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13834

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13835
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13836
  %tobool33 = trunc i8 %26 to i1, !dbg !13836
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13838

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13839

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13840
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13840
  %cmp36 = icmp ult i64 %27, %28, !dbg !13840
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13843

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13840
  %30 = load i64, i64* %len, align 8, !dbg !13840
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13840, !ctir !7
  store i8 39, i8* %arrayidx38, align 1, !dbg !13840
  br label %if.end39, !dbg !13840

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13843
  %inc40 = add i64 %31, 1, !dbg !13843
  store i64 %inc40, i64* %len, align 8, !dbg !13843
  br label %do.end41, !dbg !13843

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13843

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13844
  store i64 1, i64* %quote_string_len, align 8, !dbg !13845
  br label %sw.epilog, !dbg !13846

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13847
  br label %sw.epilog, !dbg !13848

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13849
  unreachable, !dbg !13849

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13850
  br label %for.cond44, !dbg !13852

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13853
  %cmp45 = icmp eq i64 %32, -1, !dbg !13855
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13853

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13856
  %34 = load i64, i64* %i, align 8, !dbg !13857
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13856, !ctir !180
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13856
  %conv = sext i8 %35 to i32, !dbg !13856
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13858
  %conv48 = zext i1 %cmp47 to i32, !dbg !13858
  br label %cond.end, !dbg !13853

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13859
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13860
  %cmp49 = icmp eq i64 %36, %37, !dbg !13861
  %conv50 = zext i1 %cmp49 to i32, !dbg !13861
  br label %cond.end, !dbg !13853

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13853
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13862
  %lnot = xor i1 %tobool51, true, !dbg !13862
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13863

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13864, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13867, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13869, metadata !DIExpression()), !dbg !13870
  store i8 0, i8* %is_right_quote, align 1, !dbg !13870
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13871, metadata !DIExpression()), !dbg !13872
  store i8 0, i8* %escaping, align 1, !dbg !13872
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13873, metadata !DIExpression()), !dbg !13874
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13874
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13875
  %tobool53 = trunc i8 %38 to i1, !dbg !13875
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13877

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13878
  %cmp55 = icmp ne i32 %39, 2, !dbg !13879
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13880

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13881
  %tobool58 = icmp ne i64 %40, 0, !dbg !13881
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13882

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13883
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13884
  %add = add i64 %41, %42, !dbg !13885
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13886
  %cmp60 = icmp eq i64 %43, -1, !dbg !13887
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13888

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13889
  %cmp63 = icmp ult i64 1, %44, !dbg !13890
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13886

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13891
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13892
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13893
  br label %cond.end68, !dbg !13886

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13894
  br label %cond.end68, !dbg !13886

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13886
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13895
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13896

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13897
  %48 = load i64, i64* %i, align 8, !dbg !13898
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13899, !ctir !181
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13900
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13901
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13902
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13903
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13904

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13905
  %tobool77 = trunc i8 %51 to i1, !dbg !13905
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13908

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13909

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13910
  br label %if.end80, !dbg !13911

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13912
  %53 = load i64, i64* %i, align 8, !dbg !13913
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13912, !ctir !180
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13912
  store i8 %54, i8* %c, align 1, !dbg !13914
  %55 = load i8, i8* %c, align 1, !dbg !13915
  %conv82 = zext i8 %55 to i32, !dbg !13915
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13916

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13917
  %tobool84 = trunc i8 %56 to i1, !dbg !13917
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13920

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13921

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13923
  %tobool87 = trunc i8 %57 to i1, !dbg !13923
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13926

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13923

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13926
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13927
  %cmp90 = icmp eq i32 %58, 2, !dbg !13927
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13927

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13927
  %tobool93 = trunc i8 %59 to i1, !dbg !13927
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13926

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13929

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13931
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13931
  %cmp96 = icmp ult i64 %60, %61, !dbg !13931
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13934

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13931
  %63 = load i64, i64* %len, align 8, !dbg !13931
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13931, !ctir !7
  store i8 39, i8* %arrayidx99, align 1, !dbg !13931
  br label %if.end100, !dbg !13931

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13934
  %inc101 = add i64 %64, 1, !dbg !13934
  store i64 %inc101, i64* %len, align 8, !dbg !13934
  br label %do.end102, !dbg !13934

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13929

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13935
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13935
  %cmp104 = icmp ult i64 %65, %66, !dbg !13935
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13938

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13935
  %68 = load i64, i64* %len, align 8, !dbg !13935
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13935, !ctir !7
  store i8 36, i8* %arrayidx107, align 1, !dbg !13935
  br label %if.end108, !dbg !13935

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13938
  %inc109 = add i64 %69, 1, !dbg !13938
  store i64 %inc109, i64* %len, align 8, !dbg !13938
  br label %do.end110, !dbg !13938

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13929

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13939
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13939
  %cmp112 = icmp ult i64 %70, %71, !dbg !13939
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13942

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13939
  %73 = load i64, i64* %len, align 8, !dbg !13939
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13939, !ctir !7
  store i8 39, i8* %arrayidx115, align 1, !dbg !13939
  br label %if.end116, !dbg !13939

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13942
  %inc117 = add i64 %74, 1, !dbg !13942
  store i64 %inc117, i64* %len, align 8, !dbg !13942
  br label %do.end118, !dbg !13942

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13929
  br label %if.end119, !dbg !13929

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13926

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13943
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13943
  %cmp121 = icmp ult i64 %75, %76, !dbg !13943
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13946

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13943
  %78 = load i64, i64* %len, align 8, !dbg !13943
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13943, !ctir !7
  store i8 92, i8* %arrayidx124, align 1, !dbg !13943
  br label %if.end125, !dbg !13943

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13946
  %inc126 = add i64 %79, 1, !dbg !13946
  store i64 %inc126, i64* %len, align 8, !dbg !13946
  br label %do.end127, !dbg !13946

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13926

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13947
  %cmp129 = icmp ne i32 %80, 2, !dbg !13949
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13950

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13951
  %add132 = add i64 %81, 1, !dbg !13952
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13953
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13954
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13955

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13956
  %84 = load i64, i64* %i, align 8, !dbg !13957
  %add136 = add i64 %84, 1, !dbg !13958
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13956, !ctir !180
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13956
  %conv138 = sext i8 %85 to i32, !dbg !13956
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13959
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13960

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13961
  %87 = load i64, i64* %i, align 8, !dbg !13962
  %add142 = add i64 %87, 1, !dbg !13963
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13961, !ctir !180
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13961
  %conv144 = sext i8 %88 to i32, !dbg !13961
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13964
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13965

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13966

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13968
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13968
  %cmp149 = icmp ult i64 %89, %90, !dbg !13968
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13971

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13968
  %92 = load i64, i64* %len, align 8, !dbg !13968
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13968, !ctir !7
  store i8 48, i8* %arrayidx152, align 1, !dbg !13968
  br label %if.end153, !dbg !13968

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13971
  %inc154 = add i64 %93, 1, !dbg !13971
  store i64 %inc154, i64* %len, align 8, !dbg !13971
  br label %do.end155, !dbg !13971

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13972

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13973
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13973
  %cmp157 = icmp ult i64 %94, %95, !dbg !13973
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13976

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13973
  %97 = load i64, i64* %len, align 8, !dbg !13973
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13973, !ctir !7
  store i8 48, i8* %arrayidx160, align 1, !dbg !13973
  br label %if.end161, !dbg !13973

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13976
  %inc162 = add i64 %98, 1, !dbg !13976
  store i64 %inc162, i64* %len, align 8, !dbg !13976
  br label %do.end163, !dbg !13976

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13977

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13978
  br label %if.end169, !dbg !13979

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !13980
  %and165 = and i32 %99, 1, !dbg !13982
  %tobool166 = icmp ne i32 %and165, 0, !dbg !13982
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !13983

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !13984

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !13985

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !13986
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !13987

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13988
  %tobool172 = trunc i8 %101 to i1, !dbg !13988
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !13991

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !13992

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !13993

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !13994
  %and176 = and i32 %102, 4, !dbg !13996
  %tobool177 = icmp ne i32 %and176, 0, !dbg !13996
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !13997

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !13998
  %add179 = add i64 %103, 2, !dbg !13999
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14000
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14001
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14002

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14003
  %106 = load i64, i64* %i, align 8, !dbg !14004
  %add183 = add i64 %106, 1, !dbg !14005
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14003, !ctir !180
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14003
  %conv185 = sext i8 %107 to i32, !dbg !14003
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14006
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14007

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14008
  %109 = load i64, i64* %i, align 8, !dbg !14009
  %add189 = add i64 %109, 2, !dbg !14010
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14008, !ctir !180
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14008
  %conv191 = sext i8 %110 to i32, !dbg !14008
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14011

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14012
  %tobool193 = trunc i8 %111 to i1, !dbg !14012
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14015

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14016

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14017
  %113 = load i64, i64* %i, align 8, !dbg !14018
  %add196 = add i64 %113, 2, !dbg !14019
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14017, !ctir !180
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14017
  store i8 %114, i8* %c, align 1, !dbg !14020
  %115 = load i64, i64* %i, align 8, !dbg !14021
  %add198 = add i64 %115, 2, !dbg !14021
  store i64 %add198, i64* %i, align 8, !dbg !14021
  br label %do.body199, !dbg !14022

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14023
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14023
  %cmp200 = icmp ult i64 %116, %117, !dbg !14023
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14026

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14023
  %119 = load i64, i64* %len, align 8, !dbg !14023
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14023, !ctir !7
  store i8 63, i8* %arrayidx203, align 1, !dbg !14023
  br label %if.end204, !dbg !14023

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14026
  %inc205 = add i64 %120, 1, !dbg !14026
  store i64 %inc205, i64* %len, align 8, !dbg !14026
  br label %do.end206, !dbg !14026

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14027

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14028
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14028
  %cmp208 = icmp ult i64 %121, %122, !dbg !14028
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14031

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14028
  %124 = load i64, i64* %len, align 8, !dbg !14028
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14028, !ctir !7
  store i8 34, i8* %arrayidx211, align 1, !dbg !14028
  br label %if.end212, !dbg !14028

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14031
  %inc213 = add i64 %125, 1, !dbg !14031
  store i64 %inc213, i64* %len, align 8, !dbg !14031
  br label %do.end214, !dbg !14031

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14032

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14033
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14033
  %cmp216 = icmp ult i64 %126, %127, !dbg !14033
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14036

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14033
  %129 = load i64, i64* %len, align 8, !dbg !14033
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14033, !ctir !7
  store i8 34, i8* %arrayidx219, align 1, !dbg !14033
  br label %if.end220, !dbg !14033

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14036
  %inc221 = add i64 %130, 1, !dbg !14036
  store i64 %inc221, i64* %len, align 8, !dbg !14036
  br label %do.end222, !dbg !14036

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14037

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14038
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14038
  %cmp224 = icmp ult i64 %131, %132, !dbg !14038
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14041

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14038
  %134 = load i64, i64* %len, align 8, !dbg !14038
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14038, !ctir !7
  store i8 63, i8* %arrayidx227, align 1, !dbg !14038
  br label %if.end228, !dbg !14038

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14041
  %inc229 = add i64 %135, 1, !dbg !14041
  store i64 %inc229, i64* %len, align 8, !dbg !14041
  br label %do.end230, !dbg !14041

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14042

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14043

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14044

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14045

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14046

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14047

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14048
  br label %c_escape, !dbg !14049

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14050
  br label %c_escape, !dbg !14051

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14052
  br label %c_escape, !dbg !14053

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14054
  br label %c_and_shell_escape, !dbg !14055

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14056
  br label %c_and_shell_escape, !dbg !14057

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14058
  br label %c_and_shell_escape, !dbg !14059

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14060
  br label %c_escape, !dbg !14061

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14062
  store i8 %136, i8* %esc, align 1, !dbg !14063
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14064
  %cmp244 = icmp eq i32 %137, 2, !dbg !14066
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14067

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14068
  %tobool247 = trunc i8 %138 to i1, !dbg !14068
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14071

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14072

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14073

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14074
  %tobool251 = trunc i8 %139 to i1, !dbg !14074
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14076

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14077
  %tobool254 = trunc i8 %140 to i1, !dbg !14077
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14078

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14079
  %tobool257 = icmp ne i64 %141, 0, !dbg !14079
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14080

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14081

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14079

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14082), !dbg !14083
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14084
  %cmp260 = icmp eq i32 %142, 2, !dbg !14086
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14087

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14088
  %tobool263 = trunc i8 %143 to i1, !dbg !14088
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14089

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14090

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14088

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14091), !dbg !14092
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14093
  %tobool267 = trunc i8 %144 to i1, !dbg !14093
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14095

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14096
  store i8 %145, i8* %c, align 1, !dbg !14098
  br label %store_escape, !dbg !14099

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14100

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14101
  %cmp271 = icmp eq i64 %146, -1, !dbg !14103
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14104

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14105
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14105, !ctir !180
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14105
  %conv275 = sext i8 %148 to i32, !dbg !14105
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14106
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14101

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14107
  %cmp279 = icmp eq i64 %149, 1, !dbg !14108
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14104

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14109

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14110

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14111
  %cmp284 = icmp ne i64 %150, 0, !dbg !14113
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14114

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14115

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14116

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14117
  br label %sw.bb289, !dbg !14118

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14119
  %cmp290 = icmp eq i32 %151, 2, !dbg !14121
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14122

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14123
  %tobool293 = trunc i8 %152 to i1, !dbg !14123
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14124

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14125

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14126

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14127
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14128
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14129
  %cmp298 = icmp eq i32 %153, 2, !dbg !14131
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14132

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14133
  %tobool301 = trunc i8 %154 to i1, !dbg !14133
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14136

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14137

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14138
  %tobool304 = icmp ne i64 %155, 0, !dbg !14138
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14140

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14141
  %tobool306 = icmp ne i64 %156, 0, !dbg !14141
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14142

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14143
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14145
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14146
  br label %if.end308, !dbg !14147

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14148

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14149
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14149
  %cmp310 = icmp ult i64 %158, %159, !dbg !14149
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14152

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14149
  %161 = load i64, i64* %len, align 8, !dbg !14149
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14149, !ctir !7
  store i8 39, i8* %arrayidx313, align 1, !dbg !14149
  br label %if.end314, !dbg !14149

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14152
  %inc315 = add i64 %162, 1, !dbg !14152
  store i64 %inc315, i64* %len, align 8, !dbg !14152
  br label %do.end316, !dbg !14152

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14153

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14154
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14154
  %cmp318 = icmp ult i64 %163, %164, !dbg !14154
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14157

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14154
  %166 = load i64, i64* %len, align 8, !dbg !14154
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14154, !ctir !7
  store i8 92, i8* %arrayidx321, align 1, !dbg !14154
  br label %if.end322, !dbg !14154

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14157
  %inc323 = add i64 %167, 1, !dbg !14157
  store i64 %inc323, i64* %len, align 8, !dbg !14157
  br label %do.end324, !dbg !14157

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14158

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14159
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14159
  %cmp326 = icmp ult i64 %168, %169, !dbg !14159
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14162

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14159
  %171 = load i64, i64* %len, align 8, !dbg !14159
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14159, !ctir !7
  store i8 39, i8* %arrayidx329, align 1, !dbg !14159
  br label %if.end330, !dbg !14159

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14162
  %inc331 = add i64 %172, 1, !dbg !14162
  store i64 %inc331, i64* %len, align 8, !dbg !14162
  br label %do.end332, !dbg !14162

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14163
  br label %if.end333, !dbg !14164

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14165

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14166
  br label %sw.epilog564, !dbg !14167

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14168, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14171, metadata !DIExpression()), !dbg !14172
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14173
  %tobool336 = trunc i8 %173 to i1, !dbg !14173
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14175

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14176
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !14178
  %174 = load i16*, i16** %call338, align 8, !dbg !14178, !ctir !942
  %175 = load i8, i8* %c, align 1, !dbg !14178
  %conv339 = zext i8 %175 to i32, !dbg !14178
  %idxprom = sext i32 %conv339 to i64, !dbg !14178
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14178, !ctir !942
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14178
  %conv341 = zext i16 %176 to i32, !dbg !14178
  %and342 = and i32 %conv341, 16384, !dbg !14178
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14179
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14180
  store i8 %frombool345, i8* %printable, align 1, !dbg !14180
  br label %if.end410, !dbg !14181

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.savewd* %mbstate, metadata !14182, metadata !DIExpression()), !dbg !14184
  %177 = bitcast %struct.savewd* %mbstate to i8*, !dbg !14185
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14185
  store i64 0, i64* %m, align 8, !dbg !14186
  store i8 1, i8* %printable, align 1, !dbg !14187
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14188
  %cmp347 = icmp eq i64 %178, -1, !dbg !14190
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14191

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14192
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14193
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14194
  br label %if.end351, !dbg !14195

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14196

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14197, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14200, metadata !DIExpression()), !dbg !14201
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14202
  %181 = load i64, i64* %i, align 8, !dbg !14203
  %182 = load i64, i64* %m, align 8, !dbg !14204
  %add353 = add i64 %181, %182, !dbg !14205
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14202, !ctir !180
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14206
  %184 = load i64, i64* %i, align 8, !dbg !14207
  %185 = load i64, i64* %m, align 8, !dbg !14208
  %add355 = add i64 %184, %185, !dbg !14209
  %sub = sub i64 %183, %add355, !dbg !14210
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.savewd* %mbstate), !dbg !14211
  store i64 %call356, i64* %bytes, align 8, !dbg !14201
  %186 = load i64, i64* %bytes, align 8, !dbg !14212
  %cmp357 = icmp eq i64 %186, 0, !dbg !14214
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14215

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14216

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14217
  %cmp361 = icmp eq i64 %187, -1, !dbg !14219
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14220

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14221
  br label %do.end409, !dbg !14223

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14224
  %cmp365 = icmp eq i64 %188, -2, !dbg !14226
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14227

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14228
  br label %while.cond, !dbg !14230

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14231
  %190 = load i64, i64* %m, align 8, !dbg !14232
  %add368 = add i64 %189, %190, !dbg !14233
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14234
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14235
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14236

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14237
  %193 = load i64, i64* %i, align 8, !dbg !14238
  %194 = load i64, i64* %m, align 8, !dbg !14239
  %add371 = add i64 %193, %194, !dbg !14240
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14237, !ctir !180
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14237
  %conv373 = sext i8 %195 to i32, !dbg !14237
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14236
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14241
  br i1 %196, label %while.body, label %while.end, !dbg !14230

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14242
  %inc375 = add i64 %197, 1, !dbg !14242
  store i64 %inc375, i64* %m, align 8, !dbg !14242
  br label %while.cond, !dbg !14230, !llvm.loop !14243

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14244

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14245
  %tobool377 = trunc i8 %198 to i1, !dbg !14245
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14248

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14249
  %cmp380 = icmp eq i32 %199, 2, !dbg !14250
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14251

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14252, metadata !DIExpression()), !dbg !14254
  store i64 1, i64* %j, align 8, !dbg !14255
  br label %for.cond383, !dbg !14257

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14258
  %201 = load i64, i64* %bytes, align 8, !dbg !14260
  %cmp384 = icmp ult i64 %200, %201, !dbg !14261
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14262

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14263
  %203 = load i64, i64* %i, align 8, !dbg !14264
  %204 = load i64, i64* %m, align 8, !dbg !14265
  %add387 = add i64 %203, %204, !dbg !14266
  %205 = load i64, i64* %j, align 8, !dbg !14267
  %add388 = add i64 %add387, %205, !dbg !14268
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14263, !ctir !180
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14263
  %conv390 = sext i8 %206 to i32, !dbg !14263
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14269

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14270

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14272

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14273

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14274
  %inc395 = add i64 %207, 1, !dbg !14274
  store i64 %inc395, i64* %j, align 8, !dbg !14274
  br label %for.cond383, !dbg !14275, !llvm.loop !14276

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14278

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14279
  %call398 = call i32 @iswprint(i32 %208) #9, !dbg !14281
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14281
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14282

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14283
  br label %if.end401, !dbg !14284

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14285
  %210 = load i64, i64* %m, align 8, !dbg !14286
  %add402 = add i64 %210, %209, !dbg !14286
  store i64 %add402, i64* %m, align 8, !dbg !14286
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14287

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.savewd* %mbstate) #14, !dbg !14288
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14289
  %lnot408 = xor i1 %tobool407, true, !dbg !14289
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14287, !llvm.loop !14290

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14292
  %tobool411 = trunc i8 %211 to i1, !dbg !14292
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14293
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14293
  %212 = load i64, i64* %m, align 8, !dbg !14294
  %cmp413 = icmp ult i64 1, %212, !dbg !14296
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14297

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14298
  %tobool415 = trunc i8 %213 to i1, !dbg !14298
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14299

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14300
  %tobool418 = trunc i8 %214 to i1, !dbg !14300
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14301

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14302, metadata !DIExpression()), !dbg !14304
  %215 = load i64, i64* %i, align 8, !dbg !14305
  %216 = load i64, i64* %m, align 8, !dbg !14306
  %add420 = add i64 %215, %216, !dbg !14307
  store i64 %add420, i64* %ilim, align 8, !dbg !14304
  br label %for.cond421, !dbg !14308

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14309
  %tobool422 = trunc i8 %217 to i1, !dbg !14309
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14314

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14315
  %tobool425 = trunc i8 %218 to i1, !dbg !14315
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14316

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14317

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14319
  %tobool428 = trunc i8 %219 to i1, !dbg !14319
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14322

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14319

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14322
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14323
  %cmp431 = icmp eq i32 %220, 2, !dbg !14323
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14323

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14323
  %tobool434 = trunc i8 %221 to i1, !dbg !14323
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14322

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14325

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14327
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14327
  %cmp437 = icmp ult i64 %222, %223, !dbg !14327
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14330

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14327
  %225 = load i64, i64* %len, align 8, !dbg !14327
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14327, !ctir !7
  store i8 39, i8* %arrayidx440, align 1, !dbg !14327
  br label %if.end441, !dbg !14327

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14330
  %inc442 = add i64 %226, 1, !dbg !14330
  store i64 %inc442, i64* %len, align 8, !dbg !14330
  br label %do.end444, !dbg !14330

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14325

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14331
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14331
  %cmp446 = icmp ult i64 %227, %228, !dbg !14331
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14334

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14331
  %230 = load i64, i64* %len, align 8, !dbg !14331
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14331, !ctir !7
  store i8 36, i8* %arrayidx449, align 1, !dbg !14331
  br label %if.end450, !dbg !14331

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14334
  %inc451 = add i64 %231, 1, !dbg !14334
  store i64 %inc451, i64* %len, align 8, !dbg !14334
  br label %do.end453, !dbg !14334

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14325

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14335
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14335
  %cmp455 = icmp ult i64 %232, %233, !dbg !14335
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14338

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14335
  %235 = load i64, i64* %len, align 8, !dbg !14335
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14335, !ctir !7
  store i8 39, i8* %arrayidx458, align 1, !dbg !14335
  br label %if.end459, !dbg !14335

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14338
  %inc460 = add i64 %236, 1, !dbg !14338
  store i64 %inc460, i64* %len, align 8, !dbg !14338
  br label %do.end462, !dbg !14338

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14325
  br label %if.end463, !dbg !14325

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14322

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14339
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14339
  %cmp465 = icmp ult i64 %237, %238, !dbg !14339
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14342

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14339
  %240 = load i64, i64* %len, align 8, !dbg !14339
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14339, !ctir !7
  store i8 92, i8* %arrayidx468, align 1, !dbg !14339
  br label %if.end469, !dbg !14339

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14342
  %inc470 = add i64 %241, 1, !dbg !14342
  store i64 %inc470, i64* %len, align 8, !dbg !14342
  br label %do.end472, !dbg !14342

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14322

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14343

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14344
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14344
  %cmp476 = icmp ult i64 %242, %243, !dbg !14344
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14347

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14344
  %conv479 = zext i8 %244 to i32, !dbg !14344
  %shr = ashr i32 %conv479, 6, !dbg !14344
  %add480 = add nsw i32 48, %shr, !dbg !14344
  %conv481 = trunc i32 %add480 to i8, !dbg !14344
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14344
  %246 = load i64, i64* %len, align 8, !dbg !14344
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14344, !ctir !7
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14344
  br label %if.end483, !dbg !14344

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14347
  %inc484 = add i64 %247, 1, !dbg !14347
  store i64 %inc484, i64* %len, align 8, !dbg !14347
  br label %do.end486, !dbg !14347

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14348

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14349
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14349
  %cmp488 = icmp ult i64 %248, %249, !dbg !14349
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14352

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14349
  %conv491 = zext i8 %250 to i32, !dbg !14349
  %shr492 = ashr i32 %conv491, 3, !dbg !14349
  %and493 = and i32 %shr492, 7, !dbg !14349
  %add494 = add nsw i32 48, %and493, !dbg !14349
  %conv495 = trunc i32 %add494 to i8, !dbg !14349
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14349
  %252 = load i64, i64* %len, align 8, !dbg !14349
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14349, !ctir !7
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14349
  br label %if.end497, !dbg !14349

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14352
  %inc498 = add i64 %253, 1, !dbg !14352
  store i64 %inc498, i64* %len, align 8, !dbg !14352
  br label %do.end500, !dbg !14352

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14353
  %conv501 = zext i8 %254 to i32, !dbg !14353
  %and502 = and i32 %conv501, 7, !dbg !14354
  %add503 = add nsw i32 48, %and502, !dbg !14355
  %conv504 = trunc i32 %add503 to i8, !dbg !14356
  store i8 %conv504, i8* %c, align 1, !dbg !14357
  br label %if.end518, !dbg !14358

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14359
  %tobool506 = trunc i8 %255 to i1, !dbg !14359
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14361

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14362

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14364
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14364
  %cmp509 = icmp ult i64 %256, %257, !dbg !14364
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14367

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14364
  %259 = load i64, i64* %len, align 8, !dbg !14364
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14364, !ctir !7
  store i8 92, i8* %arrayidx512, align 1, !dbg !14364
  br label %if.end513, !dbg !14364

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14367
  %inc514 = add i64 %260, 1, !dbg !14367
  store i64 %inc514, i64* %len, align 8, !dbg !14367
  br label %do.end516, !dbg !14367

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14368
  br label %if.end517, !dbg !14369

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14370
  %262 = load i64, i64* %i, align 8, !dbg !14372
  %add519 = add i64 %262, 1, !dbg !14373
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14374
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14375

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14376

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14377

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14378
  %tobool525 = trunc i8 %263 to i1, !dbg !14378
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14378

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14378
  %tobool528 = trunc i8 %264 to i1, !dbg !14378
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14381

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14382

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14384
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14384
  %cmp531 = icmp ult i64 %265, %266, !dbg !14384
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14387

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14384
  %268 = load i64, i64* %len, align 8, !dbg !14384
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14384, !ctir !7
  store i8 39, i8* %arrayidx534, align 1, !dbg !14384
  br label %if.end535, !dbg !14384

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14387
  %inc536 = add i64 %269, 1, !dbg !14387
  store i64 %inc536, i64* %len, align 8, !dbg !14387
  br label %do.end538, !dbg !14387

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14382

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14388
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14388
  %cmp540 = icmp ult i64 %270, %271, !dbg !14388
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14391

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14388
  %273 = load i64, i64* %len, align 8, !dbg !14388
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14388, !ctir !7
  store i8 39, i8* %arrayidx543, align 1, !dbg !14388
  br label %if.end544, !dbg !14388

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14391
  %inc545 = add i64 %274, 1, !dbg !14391
  store i64 %inc545, i64* %len, align 8, !dbg !14391
  br label %do.end547, !dbg !14391

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14382
  br label %if.end548, !dbg !14382

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14381

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14392

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14393
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14393
  %cmp552 = icmp ult i64 %275, %276, !dbg !14393
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14396

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14393
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14393
  %279 = load i64, i64* %len, align 8, !dbg !14393
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14393, !ctir !7
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14393
  br label %if.end556, !dbg !14393

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14396
  %inc557 = add i64 %280, 1, !dbg !14396
  store i64 %inc557, i64* %len, align 8, !dbg !14396
  br label %do.end559, !dbg !14396

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14397
  %282 = load i64, i64* %i, align 8, !dbg !14398
  %inc560 = add i64 %282, 1, !dbg !14398
  store i64 %inc560, i64* %i, align 8, !dbg !14398
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14397, !ctir !180
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14397
  store i8 %283, i8* %c, align 1, !dbg !14399
  br label %for.cond421, !dbg !14400, !llvm.loop !14401

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14404

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14405

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14406
  %tobool565 = trunc i8 %284 to i1, !dbg !14406
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14408

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14409
  %cmp568 = icmp ne i32 %285, 2, !dbg !14410
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14411

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14412
  %tobool571 = trunc i8 %286 to i1, !dbg !14412
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14413

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14414
  %tobool574 = icmp ne i32* %287, null, !dbg !14414
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14415

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14416
  %289 = load i8, i8* %c, align 1, !dbg !14417
  %conv576 = zext i8 %289 to i64, !dbg !14417
  %div = udiv i64 %conv576, 32, !dbg !14418
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14416, !ctir !956
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14416
  %291 = load i8, i8* %c, align 1, !dbg !14419
  %conv578 = zext i8 %291 to i64, !dbg !14419
  %rem = urem i64 %conv578, 32, !dbg !14420
  %sh_prom = trunc i64 %rem to i32, !dbg !14421
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14421
  %and580 = and i32 %shr579, 1, !dbg !14422
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14422
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14423

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14424
  %tobool583 = trunc i8 %292 to i1, !dbg !14424
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14425

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14426

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14424

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14427), !dbg !14428
  br label %do.body586, !dbg !14429

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14430
  %tobool587 = trunc i8 %293 to i1, !dbg !14430
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14433

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14430

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14433
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14434
  %cmp590 = icmp eq i32 %294, 2, !dbg !14434
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14434

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14434
  %tobool593 = trunc i8 %295 to i1, !dbg !14434
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14433

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14436

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14438
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14438
  %cmp596 = icmp ult i64 %296, %297, !dbg !14438
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14441

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14438
  %299 = load i64, i64* %len, align 8, !dbg !14438
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14438, !ctir !7
  store i8 39, i8* %arrayidx599, align 1, !dbg !14438
  br label %if.end600, !dbg !14438

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14441
  %inc601 = add i64 %300, 1, !dbg !14441
  store i64 %inc601, i64* %len, align 8, !dbg !14441
  br label %do.end603, !dbg !14441

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14436

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14442
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14442
  %cmp605 = icmp ult i64 %301, %302, !dbg !14442
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14445

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14442
  %304 = load i64, i64* %len, align 8, !dbg !14442
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14442, !ctir !7
  store i8 36, i8* %arrayidx608, align 1, !dbg !14442
  br label %if.end609, !dbg !14442

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14445
  %inc610 = add i64 %305, 1, !dbg !14445
  store i64 %inc610, i64* %len, align 8, !dbg !14445
  br label %do.end612, !dbg !14445

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14436

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14446
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14446
  %cmp614 = icmp ult i64 %306, %307, !dbg !14446
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14449

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14446
  %309 = load i64, i64* %len, align 8, !dbg !14446
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14446, !ctir !7
  store i8 39, i8* %arrayidx617, align 1, !dbg !14446
  br label %if.end618, !dbg !14446

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14449
  %inc619 = add i64 %310, 1, !dbg !14449
  store i64 %inc619, i64* %len, align 8, !dbg !14449
  br label %do.end621, !dbg !14449

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14436
  br label %if.end622, !dbg !14436

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14433

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14450
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14450
  %cmp624 = icmp ult i64 %311, %312, !dbg !14450
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14453

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14450
  %314 = load i64, i64* %len, align 8, !dbg !14450
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14450, !ctir !7
  store i8 92, i8* %arrayidx627, align 1, !dbg !14450
  br label %if.end628, !dbg !14450

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14453
  %inc629 = add i64 %315, 1, !dbg !14453
  store i64 %inc629, i64* %len, align 8, !dbg !14453
  br label %do.end631, !dbg !14453

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14433

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14433

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14454), !dbg !14455
  br label %do.body634, !dbg !14456

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14457
  %tobool635 = trunc i8 %316 to i1, !dbg !14457
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14457

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14457
  %tobool638 = trunc i8 %317 to i1, !dbg !14457
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14460

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14461

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14463
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14463
  %cmp641 = icmp ult i64 %318, %319, !dbg !14463
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14466

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14463
  %321 = load i64, i64* %len, align 8, !dbg !14463
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14463, !ctir !7
  store i8 39, i8* %arrayidx644, align 1, !dbg !14463
  br label %if.end645, !dbg !14463

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14466
  %inc646 = add i64 %322, 1, !dbg !14466
  store i64 %inc646, i64* %len, align 8, !dbg !14466
  br label %do.end648, !dbg !14466

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14461

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14467
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14467
  %cmp650 = icmp ult i64 %323, %324, !dbg !14467
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14470

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14467
  %326 = load i64, i64* %len, align 8, !dbg !14467
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14467, !ctir !7
  store i8 39, i8* %arrayidx653, align 1, !dbg !14467
  br label %if.end654, !dbg !14467

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14470
  %inc655 = add i64 %327, 1, !dbg !14470
  store i64 %inc655, i64* %len, align 8, !dbg !14470
  br label %do.end657, !dbg !14470

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14461
  br label %if.end658, !dbg !14461

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14460

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14471

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14472
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14472
  %cmp662 = icmp ult i64 %328, %329, !dbg !14472
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14475

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14472
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14472
  %332 = load i64, i64* %len, align 8, !dbg !14472
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14472, !ctir !7
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14472
  br label %if.end666, !dbg !14472

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14475
  %inc667 = add i64 %333, 1, !dbg !14475
  store i64 %inc667, i64* %len, align 8, !dbg !14475
  br label %do.end669, !dbg !14475

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14476
  %tobool670 = trunc i8 %334 to i1, !dbg !14476
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14478

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14479
  br label %if.end672, !dbg !14480

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14481

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14482
  %inc674 = add i64 %335, 1, !dbg !14482
  store i64 %inc674, i64* %i, align 8, !dbg !14482
  br label %for.cond44, !dbg !14483, !llvm.loop !14484

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14486
  %cmp676 = icmp eq i64 %336, 0, !dbg !14488
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14489

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14490
  %cmp679 = icmp eq i32 %337, 2, !dbg !14491
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14492

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14493
  %tobool682 = trunc i8 %338 to i1, !dbg !14493
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14494

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14495

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14496
  %cmp686 = icmp eq i32 %339, 2, !dbg !14498
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14499

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14500
  %tobool689 = trunc i8 %340 to i1, !dbg !14500
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14501

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14502
  %tobool691 = trunc i8 %341 to i1, !dbg !14502
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14503

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14504
  %tobool694 = trunc i8 %342 to i1, !dbg !14504
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14507

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14508
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14509
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14510
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14511
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14512
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14513
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14514
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14515
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14516
  store i64 %call696, i64* %retval, align 8, !dbg !14517
  br label %return, !dbg !14517

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14518
  %tobool698 = icmp ne i64 %351, 0, !dbg !14518
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14520

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14521
  %tobool700 = icmp ne i64 %352, 0, !dbg !14521
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14522

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14523
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14525
  store i64 0, i64* %len, align 8, !dbg !14526
  br label %process_input, !dbg !14527

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14528

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14529
  %tobool705 = icmp ne i8* %354, null, !dbg !14529
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14531

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14532
  %tobool707 = trunc i8 %355 to i1, !dbg !14532
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14533

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14534

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14535
  %357 = load i8, i8* %356, align 1, !dbg !14538, !ctir !181
  %tobool710 = icmp ne i8 %357, 0, !dbg !14539
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14539

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14540

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14541
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14541
  %cmp713 = icmp ult i64 %358, %359, !dbg !14541
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14544

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14541
  %361 = load i8, i8* %360, align 1, !dbg !14541, !ctir !181
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14541
  %363 = load i64, i64* %len, align 8, !dbg !14541
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14541, !ctir !7
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14541
  br label %if.end717, !dbg !14541

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14544
  %inc718 = add i64 %364, 1, !dbg !14544
  store i64 %inc718, i64* %len, align 8, !dbg !14544
  br label %do.end720, !dbg !14544

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14544

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14545
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14545, !ctir !181
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14545
  br label %for.cond709, !dbg !14546, !llvm.loop !14547

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14548

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14549
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14551
  %cmp725 = icmp ult i64 %366, %367, !dbg !14552
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14553

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14554
  %369 = load i64, i64* %len, align 8, !dbg !14555
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14554, !ctir !7
  store i8 0, i8* %arrayidx728, align 1, !dbg !14556
  br label %if.end729, !dbg !14554

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14557
  store i64 %370, i64* %retval, align 8, !dbg !14558
  br label %return, !dbg !14558

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14559), !dbg !14560
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14561
  %cmp730 = icmp eq i32 %371, 2, !dbg !14563
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14564

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14565
  %tobool733 = trunc i8 %372 to i1, !dbg !14565
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14566

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14567
  br label %if.end736, !dbg !14568

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14569
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14570
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14571
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14572
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14573
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14574
  %and737 = and i32 %378, -3, !dbg !14575
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14576
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14577
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14578
  store i64 %call738, i64* %retval, align 8, !dbg !14579
  br label %return, !dbg !14579

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14580
  ret i64 %381, !dbg !14580
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14581 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !180
  %locale_code = alloca i8*, align 8, !ctir !180
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14584, metadata !DIExpression()), !dbg !14585
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14586, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14588, metadata !DIExpression()), !dbg !14589
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14590
  %call = call i8* @gettext(i8* %0) #9, !dbg !14590
  store i8* %call, i8** %translation, align 8, !dbg !14589
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14591, metadata !DIExpression()), !dbg !14592
  %1 = load i8*, i8** %translation, align 8, !dbg !14593
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14595
  %cmp = icmp ne i8* %1, %2, !dbg !14596
  br i1 %cmp, label %if.then, label %if.end, !dbg !14597

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14598
  store i8* %3, i8** %retval, align 8, !dbg !14599
  br label %return, !dbg !14599

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14600
  store i8* %call1, i8** %locale_code, align 8, !dbg !14601
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14602
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.330, i64 0, i64 0)) #14, !dbg !14602
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14602
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14604

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14605
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14605, !ctir !180
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14605
  %conv = sext i8 %6 to i32, !dbg !14605
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14606
  %7 = zext i1 %cmp5 to i64, !dbg !14605
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.331, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.332, i64 0, i64 0), !dbg !14605
  store i8* %cond, i8** %retval, align 8, !dbg !14607
  br label %return, !dbg !14607

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14608
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.333, i64 0, i64 0)) #14, !dbg !14608
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14608
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14610

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14611
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14611, !ctir !180
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14611
  %conv13 = sext i8 %10 to i32, !dbg !14611
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14612
  %11 = zext i1 %cmp14 to i64, !dbg !14611
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.334, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.335, i64 0, i64 0), !dbg !14611
  store i8* %cond16, i8** %retval, align 8, !dbg !14613
  br label %return, !dbg !14613

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14614
  %cmp18 = icmp eq i32 %12, 9, !dbg !14615
  %13 = zext i1 %cmp18 to i64, !dbg !14614
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), !dbg !14614
  store i8* %cond20, i8** %retval, align 8, !dbg !14616
  br label %return, !dbg !14616

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14617
  ret i8* %14, !dbg !14617
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.savewd*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14618 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14621, metadata !DIExpression()), !dbg !14622
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14627
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14628
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14629
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14630
  ret i8* %call, !dbg !14631
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14632 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !934
  %e = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %bufsize = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14635, metadata !DIExpression()), !dbg !14636
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14637, metadata !DIExpression()), !dbg !14638
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14639, metadata !DIExpression()), !dbg !14640
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14641, metadata !DIExpression()), !dbg !14642
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14643, metadata !DIExpression()), !dbg !14644
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14645
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14645

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14646
  br label %cond.end, !dbg !14645

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14645
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14644
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14647, metadata !DIExpression()), !dbg !14648
  %call = call i32* @__errno_location() #16, !dbg !14649
  %2 = load i32, i32* %call, align 4, !dbg !14649, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !14648
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14650, metadata !DIExpression()), !dbg !14651
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14652
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14653, !ctir !935
  %4 = load i32, i32* %flags1, align 4, !dbg !14653, !ctir !5
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14654
  %tobool2 = icmp ne i64* %5, null, !dbg !14654
  %6 = zext i1 %tobool2 to i64, !dbg !14654
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14654
  %or = or i32 %4, %cond3, !dbg !14655
  store i32 %or, i32* %flags, align 4, !dbg !14651
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14656, metadata !DIExpression()), !dbg !14657
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14658
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14659
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14660
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14661, !ctir !935
  %10 = load i32, i32* %style, align 8, !dbg !14661, !ctir !905
  %11 = load i32, i32* %flags, align 4, !dbg !14662
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14663
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14664, !ctir !935
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14663, !ctir !936
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14665
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14666, !ctir !935
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14666, !ctir !180
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14667
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14668, !ctir !935
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14668, !ctir !180
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14669
  %add = add i64 %call4, 1, !dbg !14670
  store i64 %add, i64* %bufsize, align 8, !dbg !14657
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14671, metadata !DIExpression()), !dbg !14672
  %17 = load i64, i64* %bufsize, align 8, !dbg !14673
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14674
  store i8* %call5, i8** %buf, align 8, !dbg !14672
  %18 = load i8*, i8** %buf, align 8, !dbg !14675
  %19 = load i64, i64* %bufsize, align 8, !dbg !14676
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14677
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14678
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14679
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14680, !ctir !935
  %23 = load i32, i32* %style6, align 8, !dbg !14680, !ctir !905
  %24 = load i32, i32* %flags, align 4, !dbg !14681
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14682
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14683, !ctir !935
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14682, !ctir !936
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14684
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14685, !ctir !935
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14685, !ctir !180
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14686
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14687, !ctir !935
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14687, !ctir !180
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14688
  %30 = load i32, i32* %e, align 4, !dbg !14689
  %call12 = call i32* @__errno_location() #16, !dbg !14690
  store i32 %30, i32* %call12, align 4, !dbg !14691, !ctir !5
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14692
  %tobool13 = icmp ne i64* %31, null, !dbg !14692
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14694

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14695
  %sub = sub i64 %32, 1, !dbg !14696
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14697
  store i64 %sub, i64* %33, align 8, !dbg !14698, !ctir !52
  br label %if.end, !dbg !14699

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14700
  ret i8* %34, !dbg !14701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14702 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !937
  %i = alloca i32, align 4, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14703, metadata !DIExpression()), !dbg !14704
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14705
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14704
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14706, metadata !DIExpression()), !dbg !14707
  store i32 1, i32* %i, align 4, !dbg !14708
  br label %for.cond, !dbg !14710

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14711
  %2 = load i32, i32* @nslots, align 4, !dbg !14713
  %cmp = icmp slt i32 %1, %2, !dbg !14714
  br i1 %cmp, label %for.body, label %for.end, !dbg !14715

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14716
  %4 = load i32, i32* %i, align 4, !dbg !14717
  %idxprom = sext i32 %4 to i64, !dbg !14716
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14716, !ctir !937
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14718, !ctir !938
  %5 = load i8*, i8** %val, align 8, !dbg !14718, !ctir !7
  call void @free(i8* %5) #9, !dbg !14719
  br label %for.inc, !dbg !14719

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14720
  %inc = add nsw i32 %6, 1, !dbg !14720
  store i32 %inc, i32* %i, align 4, !dbg !14720
  br label %for.cond, !dbg !14721, !llvm.loop !14722

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14724
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14724, !ctir !937
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14726, !ctir !938
  %8 = load i8*, i8** %val2, align 8, !dbg !14726, !ctir !7
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14727
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14728

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14729
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14729, !ctir !937
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14731, !ctir !938
  %10 = load i8*, i8** %val5, align 8, !dbg !14731, !ctir !7
  call void @free(i8* %10) #9, !dbg !14732
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14733, !ctir !52
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14734, !ctir !7
  br label %if.end, !dbg !14735

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14736
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14738
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14739

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14740
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14740
  call void @free(i8* %13) #9, !dbg !14742
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14743
  br label %if.end8, !dbg !14744

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14745
  ret void, !dbg !14746
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14747 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14750, metadata !DIExpression()), !dbg !14751
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14752, metadata !DIExpression()), !dbg !14753
  %0 = load i32, i32* %n.addr, align 4, !dbg !14754
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14755
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14756
  ret i8* %call, !dbg !14757
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14758 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !5
  %sv = alloca %struct.slotvec*, align 8, !ctir !937
  %preallocated = alloca i8, align 1, !ctir !139
  %nmax = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  %val = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %qsize = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14761, metadata !DIExpression()), !dbg !14762
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14763, metadata !DIExpression()), !dbg !14764
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14765, metadata !DIExpression()), !dbg !14766
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14767, metadata !DIExpression()), !dbg !14768
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14769, metadata !DIExpression()), !dbg !14770
  %call = call i32* @__errno_location() #16, !dbg !14771
  %0 = load i32, i32* %call, align 4, !dbg !14771, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !14770
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14772, metadata !DIExpression()), !dbg !14773
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14774
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14773
  %2 = load i32, i32* %n.addr, align 4, !dbg !14775
  %cmp = icmp slt i32 %2, 0, !dbg !14777
  br i1 %cmp, label %if.then, label %if.end, !dbg !14778

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14779
  unreachable, !dbg !14779

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14780
  %4 = load i32, i32* %n.addr, align 4, !dbg !14782
  %cmp1 = icmp sle i32 %3, %4, !dbg !14783
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14784

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14785, metadata !DIExpression()), !dbg !14787
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14788
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14789
  %frombool = zext i1 %cmp3 to i8, !dbg !14787
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14787
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14790, metadata !DIExpression()), !dbg !14791
  store i32 2147483646, i32* %nmax, align 4, !dbg !14791
  %6 = load i32, i32* %nmax, align 4, !dbg !14792
  %7 = load i32, i32* %n.addr, align 4, !dbg !14794
  %cmp4 = icmp slt i32 %6, %7, !dbg !14795
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14796

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !14797
  unreachable, !dbg !14797

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14798
  %tobool = trunc i8 %8 to i1, !dbg !14798
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14798

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14798

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14799
  br label %cond.end, !dbg !14798

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14798
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14798
  %11 = load i32, i32* %n.addr, align 4, !dbg !14800
  %add = add nsw i32 %11, 1, !dbg !14801
  %conv = sext i32 %add to i64, !dbg !14802
  %mul = mul i64 %conv, 16, !dbg !14803
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14804
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14804
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14805
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14806
  %13 = load i8, i8* %preallocated, align 1, !dbg !14807
  %tobool8 = trunc i8 %13 to i1, !dbg !14807
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14809

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14810
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14811
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14811
  br label %if.end10, !dbg !14812

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14813
  %17 = load i32, i32* @nslots, align 4, !dbg !14814
  %idx.ext = sext i32 %17 to i64, !dbg !14815
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14815, !ctir !938
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14816
  %19 = load i32, i32* %n.addr, align 4, !dbg !14817
  %add11 = add nsw i32 %19, 1, !dbg !14818
  %20 = load i32, i32* @nslots, align 4, !dbg !14819
  %sub = sub nsw i32 %add11, %20, !dbg !14820
  %conv12 = sext i32 %sub to i64, !dbg !14821
  %mul13 = mul i64 %conv12, 16, !dbg !14822
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14816
  %21 = load i32, i32* %n.addr, align 4, !dbg !14823
  %add14 = add nsw i32 %21, 1, !dbg !14824
  store i32 %add14, i32* @nslots, align 4, !dbg !14825
  br label %if.end15, !dbg !14826

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14827, metadata !DIExpression()), !dbg !14829
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14830
  %23 = load i32, i32* %n.addr, align 4, !dbg !14831
  %idxprom = sext i32 %23 to i64, !dbg !14830
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14830, !ctir !937
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14832, !ctir !938
  %24 = load i64, i64* %size16, align 8, !dbg !14832, !ctir !52
  store i64 %24, i64* %size, align 8, !dbg !14829
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14833, metadata !DIExpression()), !dbg !14834
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14835
  %26 = load i32, i32* %n.addr, align 4, !dbg !14836
  %idxprom17 = sext i32 %26 to i64, !dbg !14835
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14835, !ctir !937
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14837, !ctir !938
  %27 = load i8*, i8** %val19, align 8, !dbg !14837, !ctir !7
  store i8* %27, i8** %val, align 8, !dbg !14834
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14838, metadata !DIExpression()), !dbg !14839
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14840
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14841, !ctir !935
  %29 = load i32, i32* %flags20, align 4, !dbg !14841, !ctir !5
  %or = or i32 %29, 1, !dbg !14842
  store i32 %or, i32* %flags, align 4, !dbg !14839
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14843, metadata !DIExpression()), !dbg !14844
  %30 = load i8*, i8** %val, align 8, !dbg !14845
  %31 = load i64, i64* %size, align 8, !dbg !14846
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14847
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14848
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14849
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14850, !ctir !935
  %35 = load i32, i32* %style, align 8, !dbg !14850, !ctir !905
  %36 = load i32, i32* %flags, align 4, !dbg !14851
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14852
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14853, !ctir !935
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14852, !ctir !936
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14854
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14855, !ctir !935
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14855, !ctir !180
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14856
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14857, !ctir !935
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14857, !ctir !180
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14858
  store i64 %call21, i64* %qsize, align 8, !dbg !14844
  %42 = load i64, i64* %size, align 8, !dbg !14859
  %43 = load i64, i64* %qsize, align 8, !dbg !14861
  %cmp22 = icmp ule i64 %42, %43, !dbg !14862
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14863

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14864
  %add25 = add i64 %44, 1, !dbg !14866
  store i64 %add25, i64* %size, align 8, !dbg !14867
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14868
  %46 = load i32, i32* %n.addr, align 4, !dbg !14869
  %idxprom26 = sext i32 %46 to i64, !dbg !14868
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14868, !ctir !937
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14870, !ctir !938
  store i64 %add25, i64* %size28, align 8, !dbg !14871, !ctir !52
  %47 = load i8*, i8** %val, align 8, !dbg !14872
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14874
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14875

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14876
  call void @free(i8* %48) #9, !dbg !14877
  br label %if.end32, !dbg !14877

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14878
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14879
  store i8* %call33, i8** %val, align 8, !dbg !14880
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14881
  %51 = load i32, i32* %n.addr, align 4, !dbg !14882
  %idxprom34 = sext i32 %51 to i64, !dbg !14881
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14881, !ctir !937
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14883, !ctir !938
  store i8* %call33, i8** %val36, align 8, !dbg !14884, !ctir !7
  %52 = load i8*, i8** %val, align 8, !dbg !14885
  %53 = load i64, i64* %size, align 8, !dbg !14886
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14887
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14888
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14889
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14890, !ctir !935
  %57 = load i32, i32* %style37, align 8, !dbg !14890, !ctir !905
  %58 = load i32, i32* %flags, align 4, !dbg !14891
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14892
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14893, !ctir !935
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14892, !ctir !936
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14894
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14895, !ctir !935
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14895, !ctir !180
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14896
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14897, !ctir !935
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14897, !ctir !180
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14898
  br label %if.end43, !dbg !14899

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14900
  %call44 = call i32* @__errno_location() #16, !dbg !14901
  store i32 %64, i32* %call44, align 4, !dbg !14902, !ctir !5
  %65 = load i8*, i8** %val, align 8, !dbg !14903
  ret i8* %65, !dbg !14904
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14905 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14908, metadata !DIExpression()), !dbg !14909
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14910, metadata !DIExpression()), !dbg !14911
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14912, metadata !DIExpression()), !dbg !14913
  %0 = load i32, i32* %n.addr, align 4, !dbg !14914
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14915
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14916
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14917
  ret i8* %call, !dbg !14918
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14919 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14920, metadata !DIExpression()), !dbg !14921
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14922
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14923
  ret i8* %call, !dbg !14924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14925 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14926, metadata !DIExpression()), !dbg !14927
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14928, metadata !DIExpression()), !dbg !14929
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14930
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14931
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14932
  ret i8* %call, !dbg !14933
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14934 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !935
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14937, metadata !DIExpression()), !dbg !14938
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14939, metadata !DIExpression()), !dbg !14940
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14941, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14943, metadata !DIExpression()), !dbg !14944
  %0 = load i32, i32* %s.addr, align 4, !dbg !14945
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14946
  %1 = load i32, i32* %n.addr, align 4, !dbg !14947
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14948
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14949
  ret i8* %call, !dbg !14950
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14951 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14954, metadata !DIExpression()), !dbg !14955
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14956, metadata !DIExpression()), !dbg !14957
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14957
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14957
  %1 = load i32, i32* %style.addr, align 4, !dbg !14958
  %cmp = icmp eq i32 %1, 10, !dbg !14960
  br i1 %cmp, label %if.then, label %if.end, !dbg !14961

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14962
  unreachable, !dbg !14962

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14963
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14964, !ctir !924
  store i32 %2, i32* %style1, align 8, !dbg !14965, !ctir !905
  ret void, !dbg !14966
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14967 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !935
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14970, metadata !DIExpression()), !dbg !14971
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14972, metadata !DIExpression()), !dbg !14973
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14974, metadata !DIExpression()), !dbg !14975
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14976, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14978, metadata !DIExpression()), !dbg !14979
  %0 = load i32, i32* %s.addr, align 4, !dbg !14980
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14981
  %1 = load i32, i32* %n.addr, align 4, !dbg !14982
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14983
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14984
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !14985
  ret i8* %call, !dbg !14986
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !14987 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14990, metadata !DIExpression()), !dbg !14991
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14992, metadata !DIExpression()), !dbg !14993
  %0 = load i32, i32* %s.addr, align 4, !dbg !14994
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14995
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !14996
  ret i8* %call, !dbg !14997
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14998 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15001, metadata !DIExpression()), !dbg !15002
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15003, metadata !DIExpression()), !dbg !15004
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15005, metadata !DIExpression()), !dbg !15006
  %0 = load i32, i32* %s.addr, align 4, !dbg !15007
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15008
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15009
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15010
  ret i8* %call, !dbg !15011
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15012 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !924
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15015, metadata !DIExpression()), !dbg !15016
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15017, metadata !DIExpression()), !dbg !15018
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15019, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15021, metadata !DIExpression()), !dbg !15022
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15023
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15024
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15025
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15026
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15027
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15028
  ret i8* %call1, !dbg !15029
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15030 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15035, metadata !DIExpression()), !dbg !15036
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15037
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15038
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15039
  ret i8* %call, !dbg !15040
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15041 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15042, metadata !DIExpression()), !dbg !15043
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15044
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15045
  ret i8* %call, !dbg !15046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15047 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15048, metadata !DIExpression()), !dbg !15049
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15052
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15053
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15054
  ret i8* %call, !dbg !15055
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15056 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !924
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15057, metadata !DIExpression()), !dbg !15058
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15059, metadata !DIExpression()), !dbg !15060
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15061, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15063, metadata !DIExpression()), !dbg !15064
  %0 = load i32, i32* %s.addr, align 4, !dbg !15065
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15066
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15066
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15066
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15067
  %3 = load i32, i32* %n.addr, align 4, !dbg !15068
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15069
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15070
  ret i8* %call1, !dbg !15071
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15072 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15075, metadata !DIExpression()), !dbg !15076
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15077, metadata !DIExpression()), !dbg !15078
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15079, metadata !DIExpression()), !dbg !15080
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15081, metadata !DIExpression()), !dbg !15082
  %0 = load i32, i32* %n.addr, align 4, !dbg !15083
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15084
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15085
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15086
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15087
  ret i8* %call, !dbg !15088
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15089 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !924
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15092, metadata !DIExpression()), !dbg !15093
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15094, metadata !DIExpression()), !dbg !15095
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15096, metadata !DIExpression()), !dbg !15097
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15104
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15105
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15106
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15107
  %3 = load i32, i32* %n.addr, align 4, !dbg !15108
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15109
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15110
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15111
  ret i8* %call, !dbg !15112
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15113 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15116, metadata !DIExpression()), !dbg !15117
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15118, metadata !DIExpression()), !dbg !15119
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15120, metadata !DIExpression()), !dbg !15121
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15122
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15123
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15124
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15125
  ret i8* %call, !dbg !15126
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15127 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15130, metadata !DIExpression()), !dbg !15131
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15132, metadata !DIExpression()), !dbg !15133
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15136, metadata !DIExpression()), !dbg !15137
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15138
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15139
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15140
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15141
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15142
  ret i8* %call, !dbg !15143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15144 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15147, metadata !DIExpression()), !dbg !15148
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15149, metadata !DIExpression()), !dbg !15150
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15151, metadata !DIExpression()), !dbg !15152
  %0 = load i32, i32* %n.addr, align 4, !dbg !15153
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15154
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15155
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15156
  ret i8* %call, !dbg !15157
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15158 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15161, metadata !DIExpression()), !dbg !15162
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15163, metadata !DIExpression()), !dbg !15164
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15165
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15166
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15167
  ret i8* %call, !dbg !15168
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15169 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15174, metadata !DIExpression()), !dbg !15175
  %0 = load i32, i32* %n.addr, align 4, !dbg !15176
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15177
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15178
  ret i8* %call, !dbg !15179
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15180 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15183, metadata !DIExpression()), !dbg !15184
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15185
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15186
  ret i8* %call, !dbg !15187
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15188 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !5
  %src_len = alloca i64, align 8, !ctir !52
  %dst_len = alloca i64, align 8, !ctir !52
  %src_temp = alloca i8*, align 8, !ctir !7
  %dst_temp = alloca i8*, align 8, !ctir !7
  %src_slash = alloca i8, align 1, !ctir !139
  %dst_slash = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %src_st = alloca %struct.stat, align 8, !ctir !15192
  %dst_st = alloca %struct.stat, align 8, !ctir !15192
  %dst_found_nonexistent = alloca i8, align 1, !ctir !139
  store i32 %fd1, i32* %fd1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15213, metadata !DIExpression()), !dbg !15214
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15215, metadata !DIExpression()), !dbg !15216
  store i32 %fd2, i32* %fd2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15217, metadata !DIExpression()), !dbg !15218
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15219, metadata !DIExpression()), !dbg !15220
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15221, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15223, metadata !DIExpression()), !dbg !15224
  store i32 -1, i32* %ret_val, align 4, !dbg !15224
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15225, metadata !DIExpression()), !dbg !15226
  store i32 22, i32* %err, align 4, !dbg !15226
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15227
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15228
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15229
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15230
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15231
  %call = call i64 (i64, ...) @syscall(i64 316, i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #9, !dbg !15232
  %conv = trunc i64 %call to i32, !dbg !15232
  store i32 %conv, i32* %ret_val, align 4, !dbg !15233
  %call1 = call i32* @__errno_location() #16, !dbg !15234
  %5 = load i32, i32* %call1, align 4, !dbg !15234, !ctir !5
  store i32 %5, i32* %err, align 4, !dbg !15235
  %6 = load i32, i32* %ret_val, align 4, !dbg !15236
  %cmp = icmp slt i32 %6, 0, !dbg !15238
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15239

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15240
  %cmp3 = icmp eq i32 %7, 22, !dbg !15241
  br i1 %cmp3, label %if.end, label %lor.lhs.false, !dbg !15242

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15243
  %cmp5 = icmp eq i32 %8, 38, !dbg !15244
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !15245

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15246
  %cmp8 = icmp eq i32 %9, 95, !dbg !15247
  br i1 %cmp8, label %if.end, label %if.then, !dbg !15248

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15249
  store i32 %10, i32* %retval, align 4, !dbg !15250
  br label %return, !dbg !15250

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15251, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15254, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15256, metadata !DIExpression()), !dbg !15257
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15258
  store i8* %11, i8** %src_temp, align 8, !dbg !15257
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15259, metadata !DIExpression()), !dbg !15260
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15261
  store i8* %12, i8** %dst_temp, align 8, !dbg !15260
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15262, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15264, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15266, metadata !DIExpression()), !dbg !15267
  store i32 20, i32* %rename_errno, align 4, !dbg !15267
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15268, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15270, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15272, metadata !DIExpression()), !dbg !15273
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15273
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15274
  %cmp10 = icmp ne i32 %13, 0, !dbg !15276
  br i1 %cmp10, label %if.then12, label %if.end31, !dbg !15277

if.then12:                                        ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15278
  %and = and i32 %14, -2, !dbg !15281
  %tobool = icmp ne i32 %and, 0, !dbg !15281
  br i1 %tobool, label %if.then13, label %if.else, !dbg !15282

if.then13:                                        ; preds = %if.then12
  %call14 = call i32 @errno_fail(i32 95), !dbg !15283
  store i32 %call14, i32* %retval, align 4, !dbg !15284
  br label %return, !dbg !15284

if.else:                                          ; preds = %if.then12
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15285
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15288
  %call15 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15289
  %cmp16 = icmp eq i32 %call15, 0, !dbg !15290
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !15291

lor.lhs.false18:                                  ; preds = %if.else
  %call19 = call i32* @__errno_location() #16, !dbg !15292
  %17 = load i32, i32* %call19, align 4, !dbg !15292, !ctir !5
  %cmp20 = icmp eq i32 %17, 75, !dbg !15293
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !15294

if.then22:                                        ; preds = %lor.lhs.false18, %if.else
  %call23 = call i32 @errno_fail(i32 17), !dbg !15295
  store i32 %call23, i32* %retval, align 4, !dbg !15296
  br label %return, !dbg !15296

if.end24:                                         ; preds = %lor.lhs.false18
  %call25 = call i32* @__errno_location() #16, !dbg !15297
  %18 = load i32, i32* %call25, align 4, !dbg !15297, !ctir !5
  %cmp26 = icmp ne i32 %18, 2, !dbg !15299
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15300

if.then28:                                        ; preds = %if.end24
  store i32 -1, i32* %retval, align 4, !dbg !15301
  br label %return, !dbg !15301

if.end29:                                         ; preds = %if.end24
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15302
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  br label %if.end31, !dbg !15303

if.end31:                                         ; preds = %if.end30, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15304
  %call32 = call i64 @strlen(i8* %19) #14, !dbg !15305
  store i64 %call32, i64* %src_len, align 8, !dbg !15306
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15307
  %call33 = call i64 @strlen(i8* %20) #14, !dbg !15308
  store i64 %call33, i64* %dst_len, align 8, !dbg !15309
  %21 = load i64, i64* %src_len, align 8, !dbg !15310
  %tobool34 = icmp ne i64 %21, 0, !dbg !15310
  br i1 %tobool34, label %lor.lhs.false35, label %if.then37, !dbg !15312

lor.lhs.false35:                                  ; preds = %if.end31
  %22 = load i64, i64* %dst_len, align 8, !dbg !15313
  %tobool36 = icmp ne i64 %22, 0, !dbg !15313
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !15314

if.then37:                                        ; preds = %lor.lhs.false35, %if.end31
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15315
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15316
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15317
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15318
  %call38 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #9, !dbg !15319
  store i32 %call38, i32* %retval, align 4, !dbg !15320
  br label %return, !dbg !15320

if.end39:                                         ; preds = %lor.lhs.false35
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15321
  %28 = load i64, i64* %src_len, align 8, !dbg !15322
  %sub = sub i64 %28, 1, !dbg !15323
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15321, !ctir !180
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15321
  %conv40 = sext i8 %29 to i32, !dbg !15321
  %cmp41 = icmp eq i32 %conv40, 47, !dbg !15324
  %frombool = zext i1 %cmp41 to i8, !dbg !15325
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15325
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15326
  %31 = load i64, i64* %dst_len, align 8, !dbg !15327
  %sub43 = sub i64 %31, 1, !dbg !15328
  %arrayidx44 = getelementptr inbounds i8, i8* %30, i64 %sub43, !dbg !15326, !ctir !180
  %32 = load i8, i8* %arrayidx44, align 1, !dbg !15326
  %conv45 = sext i8 %32 to i32, !dbg !15326
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !15329
  %frombool48 = zext i1 %cmp46 to i8, !dbg !15330
  store i8 %frombool48, i8* %dst_slash, align 1, !dbg !15330
  %33 = load i8, i8* %src_slash, align 1, !dbg !15331
  %tobool49 = trunc i8 %33 to i1, !dbg !15331
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !15333

land.lhs.true50:                                  ; preds = %if.end39
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15334
  %tobool51 = trunc i8 %34 to i1, !dbg !15334
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !15335

if.then52:                                        ; preds = %land.lhs.true50
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15336
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15337
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15338
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15339
  %call53 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #9, !dbg !15340
  store i32 %call53, i32* %retval, align 4, !dbg !15341
  br label %return, !dbg !15341

if.end54:                                         ; preds = %land.lhs.true50, %if.end39
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15342
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15344
  %call55 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15345
  %tobool56 = icmp ne i32 %call55, 0, !dbg !15345
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !15346

if.then57:                                        ; preds = %if.end54
  store i32 -1, i32* %retval, align 4, !dbg !15347
  br label %return, !dbg !15347

if.end58:                                         ; preds = %if.end54
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15348
  %tobool59 = trunc i8 %41 to i1, !dbg !15348
  br i1 %tobool59, label %if.then60, label %if.else67, !dbg !15350

if.then60:                                        ; preds = %if.end58
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15351, !ctir !15192
  %42 = load i32, i32* %st_mode, align 8, !dbg !15351, !ctir !137
  %and61 = and i32 %42, 61440, !dbg !15351
  %cmp62 = icmp eq i32 %and61, 16384, !dbg !15351
  br i1 %cmp62, label %if.end66, label %if.then64, !dbg !15354

if.then64:                                        ; preds = %if.then60
  %call65 = call i32 @errno_fail(i32 2), !dbg !15355
  store i32 %call65, i32* %retval, align 4, !dbg !15356
  br label %return, !dbg !15356

if.end66:                                         ; preds = %if.then60
  br label %if.end98, !dbg !15357

if.else67:                                        ; preds = %if.end58
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15358
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15360
  %call68 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15361
  %tobool69 = icmp ne i32 %call68, 0, !dbg !15361
  br i1 %tobool69, label %if.then70, label %if.else81, !dbg !15362

if.then70:                                        ; preds = %if.else67
  %call71 = call i32* @__errno_location() #16, !dbg !15363
  %45 = load i32, i32* %call71, align 4, !dbg !15363, !ctir !5
  %cmp72 = icmp ne i32 %45, 2, !dbg !15366
  br i1 %cmp72, label %if.then79, label %lor.lhs.false74, !dbg !15367

lor.lhs.false74:                                  ; preds = %if.then70
  %st_mode75 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15368, !ctir !15192
  %46 = load i32, i32* %st_mode75, align 8, !dbg !15368, !ctir !137
  %and76 = and i32 %46, 61440, !dbg !15368
  %cmp77 = icmp eq i32 %and76, 16384, !dbg !15368
  br i1 %cmp77, label %if.end80, label %if.then79, !dbg !15369

if.then79:                                        ; preds = %lor.lhs.false74, %if.then70
  store i32 -1, i32* %retval, align 4, !dbg !15370
  br label %return, !dbg !15370

if.end80:                                         ; preds = %lor.lhs.false74
  br label %if.end97, !dbg !15371

if.else81:                                        ; preds = %if.else67
  %st_mode82 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15372, !ctir !15192
  %47 = load i32, i32* %st_mode82, align 8, !dbg !15372, !ctir !137
  %and83 = and i32 %47, 61440, !dbg !15372
  %cmp84 = icmp eq i32 %and83, 16384, !dbg !15372
  br i1 %cmp84, label %if.else88, label %if.then86, !dbg !15374

if.then86:                                        ; preds = %if.else81
  %call87 = call i32 @errno_fail(i32 20), !dbg !15375
  store i32 %call87, i32* %retval, align 4, !dbg !15376
  br label %return, !dbg !15376

if.else88:                                        ; preds = %if.else81
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15377, !ctir !15192
  %48 = load i32, i32* %st_mode89, align 8, !dbg !15377, !ctir !137
  %and90 = and i32 %48, 61440, !dbg !15377
  %cmp91 = icmp eq i32 %and90, 16384, !dbg !15377
  br i1 %cmp91, label %if.end95, label %if.then93, !dbg !15379

if.then93:                                        ; preds = %if.else88
  %call94 = call i32 @errno_fail(i32 21), !dbg !15380
  store i32 %call94, i32* %retval, align 4, !dbg !15381
  br label %return, !dbg !15381

if.end95:                                         ; preds = %if.else88
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end80
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end66
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15382
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15383
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15384
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15385
  %call99 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #9, !dbg !15386
  store i32 %call99, i32* %ret_val, align 4, !dbg !15387
  %call100 = call i32* @__errno_location() #16, !dbg !15388
  %53 = load i32, i32* %call100, align 4, !dbg !15388, !ctir !5
  store i32 %53, i32* %rename_errno, align 4, !dbg !15389
  br label %out, !dbg !15390

out:                                              ; preds = %if.end98
  call void @llvm.dbg.label(metadata !15391), !dbg !15392
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15393
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15395
  %cmp101 = icmp ne i8* %54, %55, !dbg !15396
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !15397

if.then103:                                       ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15398
  call void @free(i8* %56) #9, !dbg !15399
  br label %if.end104, !dbg !15399

if.end104:                                        ; preds = %if.then103, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15400
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15402
  %cmp105 = icmp ne i8* %57, %58, !dbg !15403
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !15404

if.then107:                                       ; preds = %if.end104
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15405
  call void @free(i8* %59) #9, !dbg !15406
  br label %if.end108, !dbg !15406

if.end108:                                        ; preds = %if.then107, %if.end104
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15407
  %call109 = call i32* @__errno_location() #16, !dbg !15408
  store i32 %60, i32* %call109, align 4, !dbg !15409, !ctir !5
  %61 = load i32, i32* %ret_val, align 4, !dbg !15410
  store i32 %61, i32* %retval, align 4, !dbg !15411
  br label %return, !dbg !15411

return:                                           ; preds = %if.end108, %if.then93, %if.then86, %if.then79, %if.then64, %if.then57, %if.then52, %if.then37, %if.then28, %if.then22, %if.then13, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15412
  ret i32 %62, !dbg !15412
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15413 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15416, metadata !DIExpression()), !dbg !15417
  %0 = load i32, i32* %e.addr, align 4, !dbg !15418
  %call = call i32* @__errno_location() #16, !dbg !15419
  store i32 %0, i32* %call, align 4, !dbg !15420, !ctir !5
  ret i32 -1, !dbg !15421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15422 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !661
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15424, metadata !DIExpression()), !dbg !15425
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15426, metadata !DIExpression()), !dbg !15427
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15428, metadata !DIExpression()), !dbg !15429
  br label %for.cond, !dbg !15430

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15431, metadata !DIExpression()), !dbg !15435
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15436
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15437
  %2 = load i64, i64* %count.addr, align 8, !dbg !15438
  %call = call i64 @read(i32 %0, i8* %1, i64 %2), !dbg !15439
  store i64 %call, i64* %result, align 8, !dbg !15435
  %3 = load i64, i64* %result, align 8, !dbg !15440
  %cmp = icmp sle i64 0, %3, !dbg !15442
  br i1 %cmp, label %if.then, label %if.else, !dbg !15443

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15444
  store i64 %4, i64* %retval, align 8, !dbg !15445
  br label %return, !dbg !15445

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15446
  %5 = load i32, i32* %call1, align 4, !dbg !15446, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !15446
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15448

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15449, !llvm.loop !15450

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15453
  %6 = load i32, i32* %call5, align 4, !dbg !15453, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !15455
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15456

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15457
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15458
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15459

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15460
  br label %if.end, !dbg !15461

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15462
  store i64 %8, i64* %retval, align 8, !dbg !15463
  br label %return, !dbg !15463

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15464, !llvm.loop !15450

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15465
  ret i64 %9, !dbg !15465
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15466 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !661
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15471, metadata !DIExpression()), !dbg !15472
  br label %for.cond, !dbg !15473

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15474, metadata !DIExpression()), !dbg !15478
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15479
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15480
  %2 = load i64, i64* %count.addr, align 8, !dbg !15481
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15482
  store i64 %call, i64* %result, align 8, !dbg !15478
  %3 = load i64, i64* %result, align 8, !dbg !15483
  %cmp = icmp sle i64 0, %3, !dbg !15485
  br i1 %cmp, label %if.then, label %if.else, !dbg !15486

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15487
  store i64 %4, i64* %retval, align 8, !dbg !15488
  br label %return, !dbg !15488

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15489
  %5 = load i32, i32* %call1, align 4, !dbg !15489, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !15489
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15491

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15492, !llvm.loop !15493

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15496
  %6 = load i32, i32* %call5, align 4, !dbg !15496, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !15498
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15499

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15500
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15501
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15502

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15503
  br label %if.end, !dbg !15504

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15505
  store i64 %8, i64* %retval, align 8, !dbg !15506
  br label %return, !dbg !15506

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15507, !llvm.loop !15493

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15508
  ret i64 %9, !dbg !15508
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15509 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15513, metadata !DIExpression()), !dbg !15514
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15515, metadata !DIExpression()), !dbg !15516
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15517
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15518
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15519
  ret i1 %call, !dbg !15520
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15521 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !180
  %dest_basename = alloca i8*, align 8, !ctir !180
  %source_baselen = alloca i64, align 8, !ctir !52
  %dest_baselen = alloca i64, align 8, !ctir !52
  %identical_basenames = alloca i8, align 1, !ctir !139
  %compare_dirs = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15524
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15524
  %source_dirname = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %dest_dirname = alloca i8*, align 8, !ctir !7
  store i32 %source_dfd, i32* %source_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15545, metadata !DIExpression()), !dbg !15546
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15547, metadata !DIExpression()), !dbg !15548
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15549, metadata !DIExpression()), !dbg !15550
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15551, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15553, metadata !DIExpression()), !dbg !15554
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15555
  %call = call i8* @last_component(i8* %0) #14, !dbg !15556
  store i8* %call, i8** %source_basename, align 8, !dbg !15554
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15557, metadata !DIExpression()), !dbg !15558
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15559
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15560
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15558
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15561, metadata !DIExpression()), !dbg !15562
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15563
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15564
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15562
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15565, metadata !DIExpression()), !dbg !15566
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15567
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15568
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15566
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15569, metadata !DIExpression()), !dbg !15570
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15571
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15572
  %cmp = icmp eq i64 %4, %5, !dbg !15573
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15574

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15575
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15576
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15577
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15578
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15579
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15580
  %frombool = zext i1 %9 to i8, !dbg !15570
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15570
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15581, metadata !DIExpression()), !dbg !15582
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15583
  %tobool = trunc i8 %10 to i1, !dbg !15583
  %frombool6 = zext i1 %tobool to i8, !dbg !15582
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15582
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15584, metadata !DIExpression()), !dbg !15585
  store i8 0, i8* %same, align 1, !dbg !15585
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15586
  %tobool7 = trunc i8 %11 to i1, !dbg !15586
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15588

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15589, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15592, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15594, metadata !DIExpression()), !dbg !15595
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15596
  %call8 = call i8* @dir_name(i8* %12), !dbg !15597
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15595
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15598, metadata !DIExpression()), !dbg !15599
  store i32 256, i32* %flags, align 4, !dbg !15599
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15600
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15602
  %15 = load i32, i32* %flags, align 4, !dbg !15603
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #9, !dbg !15604
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15605
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15606

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #16, !dbg !15607
  %16 = load i32, i32* %call12, align 4, !dbg !15607, !ctir !5
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15609
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.356, i64 0, i64 0), i8* %17), !dbg !15610
  br label %if.end, !dbg !15611

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15612
  call void @free(i8* %18) #9, !dbg !15613
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15614, metadata !DIExpression()), !dbg !15615
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15616
  %call13 = call i8* @dir_name(i8* %19), !dbg !15617
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15615
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15618
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15620
  %22 = load i32, i32* %flags, align 4, !dbg !15621
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #9, !dbg !15622
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15623
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15624

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #16, !dbg !15625
  %23 = load i32, i32* %call17, align 4, !dbg !15625, !ctir !5
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15627
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.356, i64 0, i64 0), i8* %24), !dbg !15628
  br label %if.end18, !dbg !15629

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15630, !ctir !15524
  %25 = load i64, i64* %st_ino, align 8, !dbg !15630, !ctir !461
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15630, !ctir !15524
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15630, !ctir !461
  %cmp20 = icmp eq i64 %25, %26, !dbg !15630
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15630

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15630, !ctir !15524
  %27 = load i64, i64* %st_dev, align 8, !dbg !15630, !ctir !460
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15630, !ctir !15524
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15630, !ctir !460
  %cmp23 = icmp eq i64 %27, %28, !dbg !15630
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15631
  %frombool25 = zext i1 %29 to i8, !dbg !15632
  store i8 %frombool25, i8* %same, align 1, !dbg !15632
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15633
  call void @free(i8* %30) #9, !dbg !15634
  br label %if.end26, !dbg !15635

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15636
  %tobool27 = trunc i8 %31 to i1, !dbg !15636
  ret i1 %tobool27, !dbg !15637
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15638 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !7
  %allocated = alloca i64, align 8, !ctir !52
  %entries = alloca %struct.direntry_t*, align 8, !ctir !989
  %entries_allocated = alloca i64, align 8, !ctir !52
  %entries_used = alloca i64, align 8, !ctir !52
  %used = alloca i64, align 8, !ctir !52
  %readdir_errno = alloca i32, align 4, !ctir !5
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !997
  %dp = alloca %struct.dirent*, align 8, !ctir !1003
  %entry2 = alloca i8*, align 8, !ctir !180
  %entry_size = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %n36 = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %dest = alloca i8*, align 8, !ctir !7
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15641, metadata !DIExpression()), !dbg !15642
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15643, metadata !DIExpression()), !dbg !15644
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15645, metadata !DIExpression()), !dbg !15646
  store i8* null, i8** %name_space, align 8, !dbg !15646
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15647, metadata !DIExpression()), !dbg !15648
  store i64 0, i64* %allocated, align 8, !dbg !15648
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15649, metadata !DIExpression()), !dbg !15650
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15650
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15651, metadata !DIExpression()), !dbg !15652
  store i64 0, i64* %entries_allocated, align 8, !dbg !15652
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15653, metadata !DIExpression()), !dbg !15654
  store i64 0, i64* %entries_used, align 8, !dbg !15654
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15655, metadata !DIExpression()), !dbg !15656
  store i64 0, i64* %used, align 8, !dbg !15656
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15657, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15659, metadata !DIExpression()), !dbg !15660
  %0 = load i32, i32* %option.addr, align 4, !dbg !15661
  %idxprom = zext i32 %0 to i64, !dbg !15662
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15662, !ctir !1001
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15662
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15660
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15663
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15665
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15666

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15667
  br label %return, !dbg !15667

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15668

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15669, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15674, metadata !DIExpression()), !dbg !15675
  %call = call i32* @__errno_location() #16, !dbg !15676
  store i32 0, i32* %call, align 4, !dbg !15677, !ctir !5
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15678
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15679
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15680
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15681
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15681
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15683

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15684

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15685
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15686, !ctir !1004
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15685, !ctir !1012
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15687
  %6 = load i8*, i8** %entry2, align 8, !dbg !15688
  %7 = load i8*, i8** %entry2, align 8, !dbg !15690
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15690, !ctir !180
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15690
  %conv = sext i8 %8 to i32, !dbg !15690
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15691
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15690

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15690

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15692
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15692, !ctir !180
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15692
  %conv10 = sext i8 %10 to i32, !dbg !15692
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15693
  %11 = zext i1 %cmp11 to i64, !dbg !15692
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15692
  br label %cond.end, !dbg !15690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15690
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15688
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15688, !ctir !180
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15688
  %conv16 = sext i8 %12 to i32, !dbg !15688
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15694
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15695

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15696, metadata !DIExpression()), !dbg !15698
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15699
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15699, !ctir !1004
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15699, !ctir !1012
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15699
  %add = add i64 %call22, 1, !dbg !15700
  store i64 %add, i64* %entry_size, align 8, !dbg !15698
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15701
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15701
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15703

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15704
  %16 = load i64, i64* %entries_used, align 8, !dbg !15707
  %cmp25 = icmp eq i64 %15, %16, !dbg !15708
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15709

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15710, metadata !DIExpression()), !dbg !15712
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15713
  store i64 %17, i64* %n, align 8, !dbg !15712
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15714
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15714
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15715
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15715
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15716
  %21 = load i64, i64* %n, align 8, !dbg !15717
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15718
  br label %if.end29, !dbg !15719

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15720
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15721
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15722
  %24 = load i64, i64* %entries_used, align 8, !dbg !15723
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15722, !ctir !989
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15724, !ctir !990
  store i8* %call30, i8** %name, align 8, !dbg !15725, !ctir !7
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15726
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15727, !ctir !1004
  %26 = load i64, i64* %d_ino, align 8, !dbg !15727, !ctir !461
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15728
  %28 = load i64, i64* %entries_used, align 8, !dbg !15729
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15728, !ctir !989
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15730, !ctir !990
  store i64 %26, i64* %ino, align 8, !dbg !15731, !ctir !996
  %29 = load i64, i64* %entries_used, align 8, !dbg !15732
  %inc = add i64 %29, 1, !dbg !15732
  store i64 %inc, i64* %entries_used, align 8, !dbg !15732
  br label %if.end44, !dbg !15733

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15734
  %31 = load i64, i64* %used, align 8, !dbg !15737
  %sub = sub i64 %30, %31, !dbg !15738
  %32 = load i64, i64* %entry_size, align 8, !dbg !15739
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15740
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15741

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15742, metadata !DIExpression()), !dbg !15744
  %33 = load i64, i64* %used, align 8, !dbg !15745
  %34 = load i64, i64* %entry_size, align 8, !dbg !15746
  %add37 = add i64 %33, %34, !dbg !15747
  store i64 %add37, i64* %n36, align 8, !dbg !15744
  %35 = load i64, i64* %n36, align 8, !dbg !15748
  %36 = load i64, i64* %used, align 8, !dbg !15750
  %cmp38 = icmp ult i64 %35, %36, !dbg !15751
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15752

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #15, !dbg !15753
  unreachable, !dbg !15753

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15754
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15755
  store i8* %call42, i8** %name_space, align 8, !dbg !15756
  %38 = load i64, i64* %n36, align 8, !dbg !15757
  store i64 %38, i64* %allocated, align 8, !dbg !15758
  br label %if.end43, !dbg !15759

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15760
  %40 = load i64, i64* %used, align 8, !dbg !15761
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15762, !ctir !8
  %41 = load i8*, i8** %entry2, align 8, !dbg !15763
  %42 = load i64, i64* %entry_size, align 8, !dbg !15764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15765
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15766
  %44 = load i64, i64* %used, align 8, !dbg !15767
  %add45 = add i64 %44, %43, !dbg !15767
  store i64 %add45, i64* %used, align 8, !dbg !15767
  br label %if.end46, !dbg !15768

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15769, !llvm.loop !15770

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #16, !dbg !15773
  %45 = load i32, i32* %call47, align 4, !dbg !15773, !ctir !5
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15774
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15775
  %cmp48 = icmp ne i32 %46, 0, !dbg !15777
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15778

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15779
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15779
  call void @free(i8* %48) #9, !dbg !15781
  %49 = load i8*, i8** %name_space, align 8, !dbg !15782
  call void @free(i8* %49) #9, !dbg !15783
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15784
  %call51 = call i32* @__errno_location() #16, !dbg !15785
  store i32 %50, i32* %call51, align 4, !dbg !15786, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15787
  br label %return, !dbg !15787

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15788
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15788
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15790

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15791, metadata !DIExpression()), !dbg !15793
  %52 = load i64, i64* %entries_used, align 8, !dbg !15794
  %tobool55 = icmp ne i64 %52, 0, !dbg !15794
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15796

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15797
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15797
  %55 = load i64, i64* %entries_used, align 8, !dbg !15798
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15799
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15800
  br label %if.end57, !dbg !15800

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15801
  %add58 = add i64 %57, 1, !dbg !15802
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15803
  store i8* %call59, i8** %name_space, align 8, !dbg !15804
  store i64 0, i64* %used, align 8, !dbg !15805
  store i64 0, i64* %i, align 8, !dbg !15806
  br label %for.cond60, !dbg !15808

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15809
  %59 = load i64, i64* %entries_used, align 8, !dbg !15811
  %cmp61 = icmp ult i64 %58, %59, !dbg !15812
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15813

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15814, metadata !DIExpression()), !dbg !15816
  %60 = load i8*, i8** %name_space, align 8, !dbg !15817
  %61 = load i64, i64* %used, align 8, !dbg !15818
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15819, !ctir !8
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15816
  %62 = load i8*, i8** %dest, align 8, !dbg !15820
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15821
  %64 = load i64, i64* %i, align 8, !dbg !15822
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15821, !ctir !989
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15823, !ctir !990
  %65 = load i8*, i8** %name65, align 8, !dbg !15823, !ctir !7
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #9, !dbg !15824
  %66 = load i8*, i8** %dest, align 8, !dbg !15825
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15826
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15826
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15826
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15827
  %67 = load i64, i64* %used, align 8, !dbg !15828
  %add68 = add i64 %67, %add67, !dbg !15828
  store i64 %add68, i64* %used, align 8, !dbg !15828
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15829
  %69 = load i64, i64* %i, align 8, !dbg !15830
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15829, !ctir !989
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15831, !ctir !990
  %70 = load i8*, i8** %name70, align 8, !dbg !15831, !ctir !7
  call void @free(i8* %70) #9, !dbg !15832
  br label %for.inc, !dbg !15833

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15834
  %inc71 = add i64 %71, 1, !dbg !15834
  store i64 %inc71, i64* %i, align 8, !dbg !15834
  br label %for.cond60, !dbg !15835, !llvm.loop !15836

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15838
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15838
  call void @free(i8* %73) #9, !dbg !15839
  br label %if.end80, !dbg !15840

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15841
  %75 = load i64, i64* %allocated, align 8, !dbg !15843
  %cmp74 = icmp eq i64 %74, %75, !dbg !15844
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15845

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15846
  %77 = load i64, i64* %used, align 8, !dbg !15847
  %add77 = add i64 %77, 1, !dbg !15848
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15849
  store i8* %call78, i8** %name_space, align 8, !dbg !15850
  br label %if.end79, !dbg !15851

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15852
  %79 = load i64, i64* %used, align 8, !dbg !15853
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15852, !ctir !7
  store i8 0, i8* %arrayidx81, align 1, !dbg !15854
  %80 = load i8*, i8** %name_space, align 8, !dbg !15855
  store i8* %80, i8** %retval, align 8, !dbg !15856
  br label %return, !dbg !15856

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15857
  ret i8* %81, !dbg !15857
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15858 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1013
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1013
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15859, metadata !DIExpression()), !dbg !15860
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15861, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15863, metadata !DIExpression()), !dbg !15864
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15865
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15865
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15864
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15866, metadata !DIExpression()), !dbg !15867
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15868
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15868
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15867
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15869
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15870, !ctir !1014
  %5 = load i8*, i8** %name, align 8, !dbg !15870, !ctir !7
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15871
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15872, !ctir !1014
  %7 = load i8*, i8** %name1, align 8, !dbg !15872, !ctir !7
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15873
  ret i32 %call, !dbg !15874
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15875 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1013
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1013
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15878, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15880, metadata !DIExpression()), !dbg !15881
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15882
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15882
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15881
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15883, metadata !DIExpression()), !dbg !15884
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15885
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15885
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15884
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15886
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15887, !ctir !1014
  %5 = load i64, i64* %ino, align 8, !dbg !15887, !ctir !996
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15888
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15889, !ctir !1014
  %7 = load i64, i64* %ino1, align 8, !dbg !15889, !ctir !996
  %cmp = icmp ult i64 %5, %7, !dbg !15890
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15886

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15886

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15891
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15892, !ctir !1014
  %9 = load i64, i64* %ino2, align 8, !dbg !15892, !ctir !996
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15893
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15894, !ctir !1014
  %11 = load i64, i64* %ino3, align 8, !dbg !15894, !ctir !996
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15895
  %conv = zext i1 %cmp4 to i32, !dbg !15895
  br label %cond.end, !dbg !15886

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15886
  ret i32 %cond, !dbg !15896
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15897 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %name_space = alloca i8*, align 8, !ctir !7
  %closedir_errno = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15900, metadata !DIExpression()), !dbg !15901
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15902, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15904, metadata !DIExpression()), !dbg !15905
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15906
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15907
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15905
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15908
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15908
  br i1 %tobool, label %if.else, label %if.then, !dbg !15910

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15911
  br label %return, !dbg !15911

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15912, metadata !DIExpression()), !dbg !15914
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15915
  %3 = load i32, i32* %option.addr, align 4, !dbg !15916
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15917
  store i8* %call1, i8** %name_space, align 8, !dbg !15914
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15918
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15920
  %cmp = icmp ne i32 %call2, 0, !dbg !15921
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15922

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15923, metadata !DIExpression()), !dbg !15925
  %call4 = call i32* @__errno_location() #16, !dbg !15926
  %5 = load i32, i32* %call4, align 4, !dbg !15926, !ctir !5
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15925
  %6 = load i8*, i8** %name_space, align 8, !dbg !15927
  call void @free(i8* %6) #9, !dbg !15928
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15929
  %call5 = call i32* @__errno_location() #16, !dbg !15930
  store i32 %7, i32* %call5, align 4, !dbg !15931, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15932
  br label %return, !dbg !15932

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15933
  store i8* %8, i8** %retval, align 8, !dbg !15934
  br label %return, !dbg !15934

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15935
  ret i8* %9, !dbg !15935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_init(%struct.savewd* %wd) #4 !dbg !15936 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15939, metadata !DIExpression()), !dbg !15940
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15941
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !15942, !ctir !1396
  store i32 0, i32* %state, align 4, !dbg !15943, !ctir !1395
  ret void, !dbg !15944
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @savewd_errno(%struct.savewd* %wd) #10 !dbg !15945 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15952
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !15953, !ctir !15949
  %1 = load i32, i32* %state, align 4, !dbg !15953, !ctir !1395
  %cmp = icmp eq i32 %1, 4, !dbg !15954
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15952

cond.true:                                        ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15955
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !15956, !ctir !15949
  %errnum = bitcast %union.anon* %val to i32*, !dbg !15957
  %3 = load i32, i32* %errnum, align 4, !dbg !15957, !ctir !1400
  br label %cond.end, !dbg !15952

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15952

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !15952
  ret i32 %cond, !dbg !15958
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_chdir(%struct.savewd* %wd, i8* %dir, i32 %options, i32* %open_result) #4 !dbg !15959 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i32, align 4
  %open_result.addr = alloca i32*, align 8
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15962, metadata !DIExpression()), !dbg !15963
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15964, metadata !DIExpression()), !dbg !15965
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !15966, metadata !DIExpression()), !dbg !15967
  store i32* %open_result, i32** %open_result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %open_result.addr, metadata !15968, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !15970, metadata !DIExpression()), !dbg !15971
  store i32 -1, i32* %fd, align 4, !dbg !15971
  call void @llvm.dbg.declare(metadata i32* %result, metadata !15972, metadata !DIExpression()), !dbg !15973
  store i32 0, i32* %result, align 4, !dbg !15973
  %0 = load i32*, i32** %open_result.addr, align 8, !dbg !15974
  %tobool = icmp ne i32* %0, null, !dbg !15974
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15976

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !15977
  %and = and i32 %1, 1, !dbg !15978
  %tobool1 = icmp ne i32 %and, 0, !dbg !15978
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !15979

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !15980
  %3 = load i32, i32* %options.addr, align 4, !dbg !15982
  %and2 = and i32 %3, 1, !dbg !15983
  %tobool3 = icmp ne i32 %and2, 0, !dbg !15982
  %4 = zext i1 %tobool3 to i64, !dbg !15982
  %cond = select i1 %tobool3, i32 131072, i32 0, !dbg !15982
  %or = or i32 67840, %cond, !dbg !15984
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or), !dbg !15985
  store i32 %call, i32* %fd, align 4, !dbg !15986
  %5 = load i32*, i32** %open_result.addr, align 8, !dbg !15987
  %tobool4 = icmp ne i32* %5, null, !dbg !15987
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !15989

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %fd, align 4, !dbg !15990
  %7 = load i32*, i32** %open_result.addr, align 8, !dbg !15992
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !15992, !ctir !224
  store i32 %6, i32* %arrayidx, align 4, !dbg !15993
  %call6 = call i32* @__errno_location() #16, !dbg !15994
  %8 = load i32, i32* %call6, align 4, !dbg !15994, !ctir !5
  %9 = load i32*, i32** %open_result.addr, align 8, !dbg !15995
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !15995, !ctir !224
  store i32 %8, i32* %arrayidx7, align 4, !dbg !15996
  br label %if.end, !dbg !15997

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %fd, align 4, !dbg !15998
  %cmp = icmp slt i32 %10, 0, !dbg !16000
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !16001

land.lhs.true:                                    ; preds = %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !16002
  %11 = load i32, i32* %call8, align 4, !dbg !16002, !ctir !5
  %cmp9 = icmp ne i32 %11, 13, !dbg !16003
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16004

if.then10:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !16005
  br label %if.end11, !dbg !16006

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %if.end12, !dbg !16007

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  %12 = load i32, i32* %result, align 4, !dbg !16008
  %cmp13 = icmp eq i32 %12, 0, !dbg !16010
  br i1 %cmp13, label %land.lhs.true14, label %if.end37, !dbg !16011

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i32, i32* %fd, align 4, !dbg !16012
  %cmp15 = icmp sle i32 0, %13, !dbg !16013
  br i1 %cmp15, label %land.lhs.true16, label %if.then19, !dbg !16014

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %14 = load i32, i32* %options.addr, align 4, !dbg !16015
  %and17 = and i32 %14, 2, !dbg !16016
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16016
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !16017

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true14
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16018
  %call20 = call zeroext i1 @savewd_save(%struct.savewd* %15), !dbg !16021
  br i1 %call20, label %if.then21, label %if.else, !dbg !16022

if.then21:                                        ; preds = %if.then19
  store i32* null, i32** %open_result.addr, align 8, !dbg !16023
  store i32 -2, i32* %result, align 4, !dbg !16025
  br label %if.end36, !dbg !16026

if.else:                                          ; preds = %if.then19
  %16 = load i32, i32* %fd, align 4, !dbg !16027
  %cmp22 = icmp slt i32 %16, 0, !dbg !16029
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !16027

cond.true:                                        ; preds = %if.else
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !16030
  %call23 = call i32 @chdir(i8* %17) #9, !dbg !16031
  br label %cond.end, !dbg !16027

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %fd, align 4, !dbg !16032
  %call24 = call i32 @fchdir(i32 %18) #9, !dbg !16033
  br label %cond.end, !dbg !16027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ %call23, %cond.true ], [ %call24, %cond.false ], !dbg !16027
  store i32 %cond25, i32* %result, align 4, !dbg !16034
  %19 = load i32, i32* %result, align 4, !dbg !16035
  %cmp26 = icmp eq i32 %19, 0, !dbg !16037
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !16038

if.then27:                                        ; preds = %cond.end
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16039
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16040, !ctir !1396
  %21 = load i32, i32* %state, align 4, !dbg !16040, !ctir !1395
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb29
    i32 2, label %sw.bb29
    i32 5, label %sw.bb29
    i32 3, label %sw.bb30
  ], !dbg !16041

sw.bb:                                            ; preds = %if.then27
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16042
  %state28 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 0, !dbg !16044, !ctir !1396
  store i32 2, i32* %state28, align 4, !dbg !16045, !ctir !1395
  br label %sw.epilog, !dbg !16046

sw.bb29:                                          ; preds = %if.then27, %if.then27, %if.then27
  br label %sw.epilog, !dbg !16047

sw.bb30:                                          ; preds = %if.then27
  %23 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16048
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %23, i32 0, i32 1, !dbg !16048, !ctir !1396
  %child = bitcast %union.anon* %val to i32*, !dbg !16048
  %24 = load i32, i32* %child, align 4, !dbg !16048, !ctir !1400
  %cmp31 = icmp eq i32 %24, 0, !dbg !16048
  br i1 %cmp31, label %cond.true32, label %cond.false33, !dbg !16048

cond.true32:                                      ; preds = %sw.bb30
  br label %cond.end34, !dbg !16048

cond.false33:                                     ; preds = %sw.bb30
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.365, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 155, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16048
  unreachable, !dbg !16048

25:                                               ; No predecessors!
  br label %cond.end34, !dbg !16048

cond.end34:                                       ; preds = %25, %cond.true32
  br label %sw.epilog, !dbg !16049

sw.default:                                       ; preds = %if.then27
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16050
  unreachable, !dbg !16050

sw.epilog:                                        ; preds = %cond.end34, %sw.bb29, %sw.bb
  br label %if.end35, !dbg !16051

if.end35:                                         ; preds = %sw.epilog, %cond.end
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !16052

if.end37:                                         ; preds = %if.end36, %land.lhs.true16, %if.end12
  %26 = load i32, i32* %fd, align 4, !dbg !16053
  %cmp38 = icmp sle i32 0, %26, !dbg !16055
  br i1 %cmp38, label %land.lhs.true39, label %if.end45, !dbg !16056

land.lhs.true39:                                  ; preds = %if.end37
  %27 = load i32*, i32** %open_result.addr, align 8, !dbg !16057
  %tobool40 = icmp ne i32* %27, null, !dbg !16057
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !16058

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16059, metadata !DIExpression()), !dbg !16061
  %call42 = call i32* @__errno_location() #16, !dbg !16062
  %28 = load i32, i32* %call42, align 4, !dbg !16062, !ctir !5
  store i32 %28, i32* %e, align 4, !dbg !16061
  %29 = load i32, i32* %fd, align 4, !dbg !16063
  %call43 = call i32 @close(i32 %29), !dbg !16064
  %30 = load i32, i32* %e, align 4, !dbg !16065
  %call44 = call i32* @__errno_location() #16, !dbg !16066
  store i32 %30, i32* %call44, align 4, !dbg !16067, !ctir !5
  br label %if.end45, !dbg !16068

if.end45:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %31 = load i32, i32* %result, align 4, !dbg !16069
  ret i32 %31, !dbg !16070
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_save(%struct.savewd* %wd) #4 !dbg !16071 {
entry:
  %retval = alloca i1, align 1
  %wd.addr = alloca %struct.savewd*, align 8
  %fd = alloca i32, align 4, !ctir !5
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16074, metadata !DIExpression()), !dbg !16075
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16076
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16077, !ctir !1396
  %1 = load i32, i32* %state, align 4, !dbg !16077, !ctir !1395
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb14
    i32 1, label %sw.bb37
    i32 2, label %sw.bb37
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
  ], !dbg !16078

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16079, metadata !DIExpression()), !dbg !16082
  %call = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.368, i64 0, i64 0), i32 0), !dbg !16083
  store i32 %call, i32* %fd, align 4, !dbg !16082
  %2 = load i32, i32* %fd, align 4, !dbg !16084
  %cmp = icmp sle i32 0, %2, !dbg !16086
  br i1 %cmp, label %if.then, label %if.end, !dbg !16087

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16088
  %state1 = getelementptr inbounds %struct.savewd, %struct.savewd* %3, i32 0, i32 0, !dbg !16090, !ctir !1396
  store i32 1, i32* %state1, align 4, !dbg !16091, !ctir !1395
  %4 = load i32, i32* %fd, align 4, !dbg !16092
  %5 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16093
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %5, i32 0, i32 1, !dbg !16094, !ctir !1396
  %fd2 = bitcast %union.anon* %val to i32*, !dbg !16095
  store i32 %4, i32* %fd2, align 4, !dbg !16096, !ctir !1400
  br label %sw.epilog, !dbg !16097

if.end:                                           ; preds = %sw.bb
  %call3 = call i32* @__errno_location() #16, !dbg !16098
  %6 = load i32, i32* %call3, align 4, !dbg !16098, !ctir !5
  %cmp4 = icmp ne i32 %6, 13, !dbg !16100
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !16101

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !16102
  %7 = load i32, i32* %call5, align 4, !dbg !16102, !ctir !5
  %cmp6 = icmp ne i32 %7, 116, !dbg !16103
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !16104

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16105
  %state8 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16107, !ctir !1396
  store i32 4, i32* %state8, align 4, !dbg !16108, !ctir !1395
  %call9 = call i32* @__errno_location() #16, !dbg !16109
  %9 = load i32, i32* %call9, align 4, !dbg !16109, !ctir !5
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16110
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16111, !ctir !1396
  %errnum = bitcast %union.anon* %val10 to i32*, !dbg !16112
  store i32 %9, i32* %errnum, align 4, !dbg !16113, !ctir !1400
  br label %sw.epilog, !dbg !16114

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16115
  %state12 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 0, !dbg !16116, !ctir !1396
  store i32 3, i32* %state12, align 4, !dbg !16117, !ctir !1395
  %12 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16118
  %val13 = getelementptr inbounds %struct.savewd, %struct.savewd* %12, i32 0, i32 1, !dbg !16119, !ctir !1396
  %child = bitcast %union.anon* %val13 to i32*, !dbg !16120
  store i32 -1, i32* %child, align 4, !dbg !16121, !ctir !1400
  br label %sw.bb14, !dbg !16122

sw.bb14:                                          ; preds = %entry, %if.end11
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16123
  %val15 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16125, !ctir !1396
  %child16 = bitcast %union.anon* %val15 to i32*, !dbg !16126
  %14 = load i32, i32* %child16, align 4, !dbg !16126, !ctir !1400
  %cmp17 = icmp slt i32 %14, 0, !dbg !16127
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !16128

if.then18:                                        ; preds = %sw.bb14
  %call19 = call i32 @fork() #9, !dbg !16129
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16131
  %val20 = getelementptr inbounds %struct.savewd, %struct.savewd* %15, i32 0, i32 1, !dbg !16132, !ctir !1396
  %child21 = bitcast %union.anon* %val20 to i32*, !dbg !16133
  store i32 %call19, i32* %child21, align 4, !dbg !16134, !ctir !1400
  %16 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16135
  %val22 = getelementptr inbounds %struct.savewd, %struct.savewd* %16, i32 0, i32 1, !dbg !16137, !ctir !1396
  %child23 = bitcast %union.anon* %val22 to i32*, !dbg !16138
  %17 = load i32, i32* %child23, align 4, !dbg !16138, !ctir !1400
  %cmp24 = icmp ne i32 %17, 0, !dbg !16139
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !16140

if.then25:                                        ; preds = %if.then18
  %18 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16141
  %val26 = getelementptr inbounds %struct.savewd, %struct.savewd* %18, i32 0, i32 1, !dbg !16144, !ctir !1396
  %child27 = bitcast %union.anon* %val26 to i32*, !dbg !16145
  %19 = load i32, i32* %child27, align 4, !dbg !16145, !ctir !1400
  %cmp28 = icmp slt i32 0, %19, !dbg !16146
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !16147

if.then29:                                        ; preds = %if.then25
  store i1 true, i1* %retval, align 1, !dbg !16148
  br label %return, !dbg !16148

if.end30:                                         ; preds = %if.then25
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16149
  %state31 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16150, !ctir !1396
  store i32 4, i32* %state31, align 4, !dbg !16151, !ctir !1395
  %call32 = call i32* @__errno_location() #16, !dbg !16152
  %21 = load i32, i32* %call32, align 4, !dbg !16152, !ctir !5
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16153
  %val33 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 1, !dbg !16154, !ctir !1396
  %errnum34 = bitcast %union.anon* %val33 to i32*, !dbg !16155
  store i32 %21, i32* %errnum34, align 4, !dbg !16156, !ctir !1400
  br label %if.end35, !dbg !16157

if.end35:                                         ; preds = %if.end30, %if.then18
  br label %if.end36, !dbg !16158

if.end36:                                         ; preds = %if.end35, %sw.bb14
  br label %sw.epilog, !dbg !16159

sw.bb37:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !16160

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.savewd_save, i64 0, i64 0)) #13, !dbg !16161
  unreachable, !dbg !16161

sw.epilog:                                        ; preds = %sw.bb37, %if.end36, %if.then7, %if.then
  store i1 false, i1* %retval, align 1, !dbg !16162
  br label %return, !dbg !16162

return:                                           ; preds = %sw.epilog, %if.then29
  %23 = load i1, i1* %retval, align 1, !dbg !16163
  ret i1 %23, !dbg !16163
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_restore(%struct.savewd* %wd, i32 %status) #4 !dbg !1410 {
entry:
  %retval = alloca i32, align 4
  %wd.addr = alloca %struct.savewd*, align 8
  %status.addr = alloca i32, align 4
  %chdir_errno = alloca i32, align 4, !ctir !5
  %child = alloca i32, align 4, !ctir !108
  %child_status = alloca i32, align 4, !ctir !5
  %.compoundliteral = alloca %union.anon, align 4
  %.compoundliteral29 = alloca %union.anon, align 4
  %.compoundliteral35 = alloca %union.anon, align 4
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16166, metadata !DIExpression()), !dbg !16167
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16168
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16169, !ctir !1396
  %1 = load i32, i32* %state, align 4, !dbg !16169, !ctir !1395
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb9
    i32 3, label %sw.bb13
  ], !dbg !16170

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16171

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16173
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16175, !ctir !1396
  %fd = bitcast %union.anon* %val to i32*, !dbg !16176
  %3 = load i32, i32* %fd, align 4, !dbg !16176, !ctir !1400
  %call = call i32 @fchdir(i32 %3) #9, !dbg !16177
  %cmp = icmp eq i32 %call, 0, !dbg !16178
  br i1 %cmp, label %if.then, label %if.else, !dbg !16179

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16180
  %state2 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 0, !dbg !16182, !ctir !1396
  store i32 1, i32* %state2, align 4, !dbg !16183, !ctir !1395
  br label %sw.epilog, !dbg !16184

if.else:                                          ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %chdir_errno, metadata !16185, metadata !DIExpression()), !dbg !16187
  %call3 = call i32* @__errno_location() #16, !dbg !16188
  %5 = load i32, i32* %call3, align 4, !dbg !16188, !ctir !5
  store i32 %5, i32* %chdir_errno, align 4, !dbg !16187
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16189
  %val4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 1, !dbg !16190, !ctir !1396
  %fd5 = bitcast %union.anon* %val4 to i32*, !dbg !16191
  %7 = load i32, i32* %fd5, align 4, !dbg !16191, !ctir !1400
  %call6 = call i32 @close(i32 %7), !dbg !16192
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16193
  %state7 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16194, !ctir !1396
  store i32 4, i32* %state7, align 4, !dbg !16195, !ctir !1395
  %9 = load i32, i32* %chdir_errno, align 4, !dbg !16196
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16197
  %val8 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16198, !ctir !1396
  %errnum = bitcast %union.anon* %val8 to i32*, !dbg !16199
  store i32 %9, i32* %errnum, align 4, !dbg !16200, !ctir !1400
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.bb9, !dbg !16201

sw.bb9:                                           ; preds = %entry, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16202
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 1, !dbg !16203, !ctir !1396
  %errnum11 = bitcast %union.anon* %val10 to i32*, !dbg !16204
  %12 = load i32, i32* %errnum11, align 4, !dbg !16204, !ctir !1400
  %call12 = call i32* @__errno_location() #16, !dbg !16205
  store i32 %12, i32* %call12, align 4, !dbg !16206, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16207
  br label %return, !dbg !16207

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %child, metadata !16208, metadata !DIExpression()), !dbg !16210
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16211
  %val14 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16212, !ctir !1396
  %child15 = bitcast %union.anon* %val14 to i32*, !dbg !16213
  %14 = load i32, i32* %child15, align 4, !dbg !16213, !ctir !1400
  store i32 %14, i32* %child, align 4, !dbg !16210
  %15 = load i32, i32* %child, align 4, !dbg !16214
  %cmp16 = icmp eq i32 %15, 0, !dbg !16216
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16217

if.then17:                                        ; preds = %sw.bb13
  %16 = load i32, i32* %status.addr, align 4, !dbg !16218
  call void @_exit(i32 %16) #15, !dbg !16219
  unreachable, !dbg !16219

if.end18:                                         ; preds = %sw.bb13
  %17 = load i32, i32* %child, align 4, !dbg !16220
  %cmp19 = icmp slt i32 0, %17, !dbg !16222
  br i1 %cmp19, label %if.then20, label %if.end39, !dbg !16223

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %child_status, metadata !16224, metadata !DIExpression()), !dbg !16226
  br label %while.cond, !dbg !16227

while.cond:                                       ; preds = %cond.end, %if.then20
  %18 = load i32, i32* %child, align 4, !dbg !16228
  %call21 = call i32 @waitpid(i32 %18, i32* %child_status, i32 0), !dbg !16229
  %cmp22 = icmp slt i32 %call21, 0, !dbg !16230
  br i1 %cmp22, label %while.body, label %while.end, !dbg !16227

while.body:                                       ; preds = %while.cond
  %call23 = call i32* @__errno_location() #16, !dbg !16231
  %19 = load i32, i32* %call23, align 4, !dbg !16231, !ctir !5
  %cmp24 = icmp eq i32 %19, 4, !dbg !16231
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !16231

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !16231

cond.false:                                       ; preds = %while.body
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.371, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16231
  unreachable, !dbg !16231

20:                                               ; No predecessors!
  br label %cond.end, !dbg !16231

cond.end:                                         ; preds = %20, %cond.true
  br label %while.cond, !dbg !16227, !llvm.loop !16232

while.end:                                        ; preds = %while.cond
  %21 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16233
  %val25 = getelementptr inbounds %struct.savewd, %struct.savewd* %21, i32 0, i32 1, !dbg !16234, !ctir !1396
  %child26 = bitcast %union.anon* %val25 to i32*, !dbg !16235
  store i32 -1, i32* %child26, align 4, !dbg !16236, !ctir !1400
  %__in = bitcast %union.anon* %.compoundliteral to i32*, !dbg !16237
  %22 = load i32, i32* %child_status, align 4, !dbg !16237
  store i32 %22, i32* %__in, align 4, !dbg !16237
  %__i = bitcast %union.anon* %.compoundliteral to i32*, !dbg !16237
  %23 = load i32, i32* %__i, align 4, !dbg !16237, !ctir !1408
  %and = and i32 %23, 127, !dbg !16237
  %cmp27 = icmp eq i32 %and, 0, !dbg !16237
  br i1 %cmp27, label %if.end34, label %if.then28, !dbg !16239

if.then28:                                        ; preds = %while.end
  %__in30 = bitcast %union.anon* %.compoundliteral29 to i32*, !dbg !16240
  %24 = load i32, i32* %child_status, align 4, !dbg !16240
  store i32 %24, i32* %__in30, align 4, !dbg !16240
  %__i31 = bitcast %union.anon* %.compoundliteral29 to i32*, !dbg !16240
  %25 = load i32, i32* %__i31, align 4, !dbg !16240, !ctir !1417
  %and32 = and i32 %25, 127, !dbg !16240
  %call33 = call i32 @raise(i32 %and32) #9, !dbg !16241
  br label %if.end34, !dbg !16241

if.end34:                                         ; preds = %if.then28, %while.end
  %__in36 = bitcast %union.anon* %.compoundliteral35 to i32*, !dbg !16242
  %26 = load i32, i32* %child_status, align 4, !dbg !16242
  store i32 %26, i32* %__in36, align 4, !dbg !16242
  %__i37 = bitcast %union.anon* %.compoundliteral35 to i32*, !dbg !16242
  %27 = load i32, i32* %__i37, align 4, !dbg !16242, !ctir !1421
  %and38 = and i32 %27, 65280, !dbg !16242
  %shr = ashr i32 %and38, 8, !dbg !16242
  store i32 %shr, i32* %retval, align 4, !dbg !16243
  br label %return, !dbg !16243

if.end39:                                         ; preds = %if.end18
  br label %sw.epilog, !dbg !16244

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16245
  unreachable, !dbg !16245

sw.epilog:                                        ; preds = %if.end39, %if.then, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !16246
  br label %return, !dbg !16246

return:                                           ; preds = %sw.epilog, %if.end34, %sw.bb9
  %28 = load i32, i32* %retval, align 4, !dbg !16247
  ret i32 %28, !dbg !16247
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_finish(%struct.savewd* %wd) #4 !dbg !16248 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16249, metadata !DIExpression()), !dbg !16250
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16251
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16252, !ctir !1396
  %1 = load i32, i32* %state, align 4, !dbg !16252, !ctir !1395
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !16253

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16254

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16256
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16257, !ctir !1396
  %fd = bitcast %union.anon* %val to i32*, !dbg !16258
  %3 = load i32, i32* %fd, align 4, !dbg !16258, !ctir !1400
  %call = call i32 @close(i32 %3), !dbg !16259
  br label %sw.epilog, !dbg !16260

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16261
  %val3 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 1, !dbg !16261, !ctir !1396
  %child = bitcast %union.anon* %val3 to i32*, !dbg !16261
  %5 = load i32, i32* %child, align 4, !dbg !16261, !ctir !1400
  %cmp = icmp slt i32 %5, 0, !dbg !16261
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16261

cond.true:                                        ; preds = %sw.bb2
  br label %cond.end, !dbg !16261

cond.false:                                       ; preds = %sw.bb2
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.374, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16261
  unreachable, !dbg !16261

6:                                                ; No predecessors!
  br label %cond.end, !dbg !16261

cond.end:                                         ; preds = %6, %cond.true
  br label %sw.epilog, !dbg !16262

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16263
  unreachable, !dbg !16263

sw.epilog:                                        ; preds = %cond.end, %sw.bb1, %sw.bb
  %7 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16264
  %state4 = getelementptr inbounds %struct.savewd, %struct.savewd* %7, i32 0, i32 0, !dbg !16265, !ctir !1396
  store i32 5, i32* %state4, align 4, !dbg !16266, !ctir !1395
  ret void, !dbg !16267
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_process_files(i32 %n_files, i8** %file, i32 (i8*, %struct.savewd*, i8*)* %act, i8* %options) #4 !dbg !16268 {
entry:
  %n_files.addr = alloca i32, align 4
  %file.addr = alloca i8**, align 8
  %act.addr = alloca i32 (i8*, %struct.savewd*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %i = alloca i32, align 4, !ctir !5
  %last_relative = alloca i32, align 4, !ctir !5
  %exit_status = alloca i32, align 4, !ctir !5
  %wd = alloca %struct.savewd, align 4, !ctir !1396
  %s = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  %s36 = alloca i32, align 4, !ctir !5
  store i32 %n_files, i32* %n_files.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !16274, metadata !DIExpression()), !dbg !16275
  store i8** %file, i8*** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !16276, metadata !DIExpression()), !dbg !16277
  store i32 (i8*, %struct.savewd*, i8*)* %act, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.savewd*, i8*)** %act.addr, metadata !16278, metadata !DIExpression()), !dbg !16279
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !16280, metadata !DIExpression()), !dbg !16281
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16282, metadata !DIExpression()), !dbg !16283
  store i32 0, i32* %i, align 4, !dbg !16283
  call void @llvm.dbg.declare(metadata i32* %last_relative, metadata !16284, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !16286, metadata !DIExpression()), !dbg !16287
  store i32 0, i32* %exit_status, align 4, !dbg !16287
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !16288, metadata !DIExpression()), !dbg !16289
  call void @savewd_init(%struct.savewd* %wd), !dbg !16290
  %0 = load i32, i32* %n_files.addr, align 4, !dbg !16291
  %sub = sub nsw i32 %0, 1, !dbg !16293
  store i32 %sub, i32* %last_relative, align 4, !dbg !16294
  br label %for.cond, !dbg !16295

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %last_relative, align 4, !dbg !16296
  %cmp = icmp sle i32 0, %1, !dbg !16298
  br i1 %cmp, label %for.body, label %for.end, !dbg !16299

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %file.addr, align 8, !dbg !16300
  %3 = load i32, i32* %last_relative, align 4, !dbg !16300
  %idxprom = sext i32 %3 to i64, !dbg !16300
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !16300, !ctir !206
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !16300
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16300, !ctir !7
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !16300
  %conv = sext i8 %5 to i32, !dbg !16300
  %cmp2 = icmp eq i32 %conv, 47, !dbg !16300
  br i1 %cmp2, label %if.end, label %if.then, !dbg !16302

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16303

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16300

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %last_relative, align 4, !dbg !16304
  %dec = add nsw i32 %6, -1, !dbg !16304
  store i32 %dec, i32* %last_relative, align 4, !dbg !16304
  br label %for.cond, !dbg !16305, !llvm.loop !16306

for.end:                                          ; preds = %if.then, %for.cond
  br label %for.cond4, !dbg !16308

for.cond4:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !16309
  %8 = load i32, i32* %last_relative, align 4, !dbg !16312
  %cmp5 = icmp slt i32 %7, %8, !dbg !16313
  br i1 %cmp5, label %for.body7, label %for.end31, !dbg !16314

for.body7:                                        ; preds = %for.cond4
  %call = call zeroext i1 @savewd_delegating(%struct.savewd* %wd), !dbg !16315
  br i1 %call, label %if.end16, label %if.then8, !dbg !16318

if.then8:                                         ; preds = %for.body7
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16319, metadata !DIExpression()), !dbg !16321
  %9 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16322
  %10 = load i8**, i8*** %file.addr, align 8, !dbg !16323
  %11 = load i32, i32* %i, align 4, !dbg !16324
  %idxprom9 = sext i32 %11 to i64, !dbg !16323
  %arrayidx10 = getelementptr inbounds i8*, i8** %10, i64 %idxprom9, !dbg !16323, !ctir !206
  %12 = load i8*, i8** %arrayidx10, align 8, !dbg !16323
  %13 = load i8*, i8** %options.addr, align 8, !dbg !16325
  %call11 = call i32 %9(i8* %12, %struct.savewd* %wd, i8* %13), !dbg !16322
  store i32 %call11, i32* %s, align 4, !dbg !16321
  %14 = load i32, i32* %exit_status, align 4, !dbg !16326
  %15 = load i32, i32* %s, align 4, !dbg !16328
  %cmp12 = icmp slt i32 %14, %15, !dbg !16329
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16330

if.then14:                                        ; preds = %if.then8
  %16 = load i32, i32* %s, align 4, !dbg !16331
  store i32 %16, i32* %exit_status, align 4, !dbg !16332
  br label %if.end15, !dbg !16333

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !16334

if.end16:                                         ; preds = %if.end15, %for.body7
  %17 = load i8**, i8*** %file.addr, align 8, !dbg !16335
  %18 = load i32, i32* %i, align 4, !dbg !16335
  %add = add nsw i32 %18, 1, !dbg !16335
  %idxprom17 = sext i32 %add to i64, !dbg !16335
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !16335, !ctir !206
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !16335
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !16335, !ctir !7
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16335
  %conv20 = sext i8 %20 to i32, !dbg !16335
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !16335
  br i1 %cmp21, label %if.end29, label %if.then23, !dbg !16337

if.then23:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16338, metadata !DIExpression()), !dbg !16340
  %21 = load i32, i32* %exit_status, align 4, !dbg !16341
  %call24 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %21), !dbg !16342
  store i32 %call24, i32* %r, align 4, !dbg !16340
  %22 = load i32, i32* %exit_status, align 4, !dbg !16343
  %23 = load i32, i32* %r, align 4, !dbg !16345
  %cmp25 = icmp slt i32 %22, %23, !dbg !16346
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16347

if.then27:                                        ; preds = %if.then23
  %24 = load i32, i32* %r, align 4, !dbg !16348
  store i32 %24, i32* %exit_status, align 4, !dbg !16349
  br label %if.end28, !dbg !16350

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !16351

if.end29:                                         ; preds = %if.end28, %if.end16
  br label %for.inc30, !dbg !16352

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %i, align 4, !dbg !16353
  %inc = add nsw i32 %25, 1, !dbg !16353
  store i32 %inc, i32* %i, align 4, !dbg !16353
  br label %for.cond4, !dbg !16354, !llvm.loop !16355

for.end31:                                        ; preds = %for.cond4
  call void @savewd_finish(%struct.savewd* %wd), !dbg !16357
  br label %for.cond32, !dbg !16358

for.cond32:                                       ; preds = %for.inc44, %for.end31
  %26 = load i32, i32* %i, align 4, !dbg !16359
  %27 = load i32, i32* %n_files.addr, align 4, !dbg !16362
  %cmp33 = icmp slt i32 %26, %27, !dbg !16363
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !16364

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %s36, metadata !16365, metadata !DIExpression()), !dbg !16367
  %28 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16368
  %29 = load i8**, i8*** %file.addr, align 8, !dbg !16369
  %30 = load i32, i32* %i, align 4, !dbg !16370
  %idxprom37 = sext i32 %30 to i64, !dbg !16369
  %arrayidx38 = getelementptr inbounds i8*, i8** %29, i64 %idxprom37, !dbg !16369, !ctir !206
  %31 = load i8*, i8** %arrayidx38, align 8, !dbg !16369
  %32 = load i8*, i8** %options.addr, align 8, !dbg !16371
  %call39 = call i32 %28(i8* %31, %struct.savewd* %wd, i8* %32), !dbg !16368
  store i32 %call39, i32* %s36, align 4, !dbg !16367
  %33 = load i32, i32* %exit_status, align 4, !dbg !16372
  %34 = load i32, i32* %s36, align 4, !dbg !16374
  %cmp40 = icmp slt i32 %33, %34, !dbg !16375
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16376

if.then42:                                        ; preds = %for.body35
  %35 = load i32, i32* %s36, align 4, !dbg !16377
  store i32 %35, i32* %exit_status, align 4, !dbg !16378
  br label %if.end43, !dbg !16379

if.end43:                                         ; preds = %if.then42, %for.body35
  br label %for.inc44, !dbg !16380

for.inc44:                                        ; preds = %if.end43
  %36 = load i32, i32* %i, align 4, !dbg !16381
  %inc45 = add nsw i32 %36, 1, !dbg !16381
  store i32 %inc45, i32* %i, align 4, !dbg !16381
  br label %for.cond32, !dbg !16382, !llvm.loop !16383

for.end46:                                        ; preds = %for.cond32
  %37 = load i32, i32* %exit_status, align 4, !dbg !16385
  ret i32 %37, !dbg !16386
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_delegating(%struct.savewd* %wd) #4 !dbg !16387 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16390, metadata !DIExpression()), !dbg !16391
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16392
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16393, !ctir !15949
  %1 = load i32, i32* %state, align 4, !dbg !16393, !ctir !1395
  %cmp = icmp eq i32 %1, 3, !dbg !16394
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16395

land.rhs:                                         ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16396
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16397, !ctir !15949
  %child = bitcast %union.anon* %val to i32*, !dbg !16398
  %3 = load i32, i32* %child, align 4, !dbg !16398, !ctir !1400
  %cmp1 = icmp slt i32 0, %3, !dbg !16399
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16400
  ret i1 %4, !dbg !16401
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !16402 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16408, metadata !DIExpression()), !dbg !16409
  %call = call i32* @__errno_location() #16, !dbg !16410
  store i32 95, i32* %call, align 4, !dbg !16411, !ctir !5
  ret i32 -1, !dbg !16412
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !16413 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16416, metadata !DIExpression()), !dbg !16417
  ret void, !dbg !16418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !16419 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16420, metadata !DIExpression()), !dbg !16421
  %call = call i32* @__errno_location() #16, !dbg !16422
  store i32 95, i32* %call, align 4, !dbg !16423, !ctir !5
  ret i32 -1, !dbg !16424
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !16425 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16428, metadata !DIExpression()), !dbg !16429
  %call = call i32* @__errno_location() #16, !dbg !16430
  store i32 95, i32* %call, align 4, !dbg !16431, !ctir !5
  ret i32 -1, !dbg !16432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !16433 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16436, metadata !DIExpression()), !dbg !16437
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16438, metadata !DIExpression()), !dbg !16439
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16440, metadata !DIExpression()), !dbg !16441
  %call = call i32* @__errno_location() #16, !dbg !16442
  store i32 95, i32* %call, align 4, !dbg !16443, !ctir !5
  ret i32 -1, !dbg !16444
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16445 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16448, metadata !DIExpression()), !dbg !16449
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16450, metadata !DIExpression()), !dbg !16451
  %call = call i32* @__errno_location() #16, !dbg !16452
  store i32 95, i32* %call, align 4, !dbg !16453, !ctir !5
  ret i32 -1, !dbg !16454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16455 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16456, metadata !DIExpression()), !dbg !16457
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16458, metadata !DIExpression()), !dbg !16459
  %call = call i32* @__errno_location() #16, !dbg !16460
  store i32 95, i32* %call, align 4, !dbg !16461, !ctir !5
  ret i32 -1, !dbg !16462
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16463 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16466, metadata !DIExpression()), !dbg !16467
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16468, metadata !DIExpression()), !dbg !16469
  %call = call i32* @__errno_location() #16, !dbg !16470
  store i32 95, i32* %call, align 4, !dbg !16471, !ctir !5
  ret i32 -1, !dbg !16472
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16473 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16476, metadata !DIExpression()), !dbg !16477
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16478, metadata !DIExpression()), !dbg !16479
  %call = call i32* @__errno_location() #16, !dbg !16480
  store i32 95, i32* %call, align 4, !dbg !16481, !ctir !5
  ret i32 -1, !dbg !16482
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16483 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16484, metadata !DIExpression()), !dbg !16485
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16486, metadata !DIExpression()), !dbg !16487
  %call = call i32* @__errno_location() #16, !dbg !16488
  store i32 95, i32* %call, align 4, !dbg !16489, !ctir !5
  ret i32 -1, !dbg !16490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16491 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16494, metadata !DIExpression()), !dbg !16495
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16496, metadata !DIExpression()), !dbg !16497
  %call = call i32* @__errno_location() #16, !dbg !16498
  store i32 95, i32* %call, align 4, !dbg !16499, !ctir !5
  ret i32 -1, !dbg !16500
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16501 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16502, metadata !DIExpression()), !dbg !16503
  %call = call i32* @__errno_location() #16, !dbg !16504
  store i32 95, i32* %call, align 4, !dbg !16505, !ctir !5
  ret i32 -1, !dbg !16506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16507 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16508, metadata !DIExpression()), !dbg !16509
  %call = call i32* @__errno_location() #16, !dbg !16510
  store i32 95, i32* %call, align 4, !dbg !16511, !ctir !5
  ret i32 -1, !dbg !16512
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16513 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16514, metadata !DIExpression()), !dbg !16515
  %call = call i32* @__errno_location() #16, !dbg !16516
  store i32 95, i32* %call, align 4, !dbg !16517, !ctir !5
  ret i32 -1, !dbg !16518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !16519 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !16523, metadata !DIExpression()), !dbg !16524
  store i8* %tcon, i8** %tcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !16525, metadata !DIExpression()), !dbg !16526
  store i16 %tclass, i16* %tclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !16527, metadata !DIExpression()), !dbg !16528
  store i8** %newcon, i8*** %newcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !16529, metadata !DIExpression()), !dbg !16530
  %call = call i32* @__errno_location() #16, !dbg !16531
  store i32 95, i32* %call, align 4, !dbg !16532, !ctir !5
  ret i32 -1, !dbg !16533
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !16534 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16537, metadata !DIExpression()), !dbg !16538
  %call = call i32* @__errno_location() #16, !dbg !16539
  store i32 95, i32* %call, align 4, !dbg !16540, !ctir !5
  ret i16 0, !dbg !16541
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16542 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16545, metadata !DIExpression()), !dbg !16546
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16547, metadata !DIExpression()), !dbg !16548
  %call = call i32* @__errno_location() #16, !dbg !16549
  store i32 95, i32* %call, align 4, !dbg !16550, !ctir !5
  ret i32 -1, !dbg !16551
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #10 !dbg !16552 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16579, metadata !DIExpression()), !dbg !16580
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16581
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16581, !ctir !16557
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16582, !ctir !16572
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16582, !ctir !378
  ret i64 %1, !dbg !16583
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #10 !dbg !16584 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16585, metadata !DIExpression()), !dbg !16586
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16587
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16587, !ctir !16557
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16588, !ctir !16572
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16588, !ctir !378
  ret i64 %1, !dbg !16589
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #10 !dbg !16590 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16593
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16593, !ctir !16557
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16594, !ctir !16572
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16594, !ctir !378
  ret i64 %1, !dbg !16595
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #10 !dbg !16596 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16597, metadata !DIExpression()), !dbg !16598
  ret i64 0, !dbg !16599
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 !dbg !16600 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16603, metadata !DIExpression()), !dbg !16604
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16605
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16605, !ctir !16557
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16605
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16605
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16606
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16606
  ret { i64, i64 } %4, !dbg !16606
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 !dbg !16607 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16608, metadata !DIExpression()), !dbg !16609
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16610
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16610, !ctir !16557
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16610
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16610
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16611
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16611
  ret { i64, i64 } %4, !dbg !16611
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 !dbg !16612 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16613, metadata !DIExpression()), !dbg !16614
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16615
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16615, !ctir !16557
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16615
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16615
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16616
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16616
  ret { i64, i64 } %4, !dbg !16616
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 !dbg !16617 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16618, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16620, metadata !DIExpression()), !dbg !16621
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16622, !ctir !16572
  store i64 -1, i64* %tv_sec, align 8, !dbg !16623, !ctir !376
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16624, !ctir !16572
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16625, !ctir !378
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16626
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16626
  ret { i64, i64 } %1, !dbg !16626
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16627 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16631, metadata !DIExpression()), !dbg !16632
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16633, metadata !DIExpression()), !dbg !16634
  %0 = load i32, i32* %result.addr, align 4, !dbg !16635
  ret i32 %0, !dbg !16636
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16637 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16663, metadata !DIExpression()), !dbg !16664
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16665, metadata !DIExpression()), !dbg !16666
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16667, metadata !DIExpression()), !dbg !16668
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16669
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16670
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16671
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #9, !dbg !16672
  ret i32 %call, !dbg !16673
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16674 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16675, metadata !DIExpression()), !dbg !16676
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16677, metadata !DIExpression()), !dbg !16678
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16679, metadata !DIExpression()), !dbg !16680
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16681
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16682
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16683
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #9, !dbg !16684
  ret i32 %call, !dbg !16685
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16686 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !52
  %XXXXXX = alloca i8*, align 8, !ctir !7
  %count = alloca i32, align 4, !ctir !67
  %fd = alloca i32, align 4, !ctir !5
  %save_errno = alloca i32, align 4, !ctir !5
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1021
  %attempts = alloca i32, align 4, !ctir !67
  %i = alloca i64, align 8, !ctir !52
  %saved_errno = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16689, metadata !DIExpression()), !dbg !16690
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16691, metadata !DIExpression()), !dbg !16692
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16693, metadata !DIExpression()), !dbg !16694
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16695, metadata !DIExpression()), !dbg !16696
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16697, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16699, metadata !DIExpression()), !dbg !16700
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16701, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16703, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16705, metadata !DIExpression()), !dbg !16706
  store i32 -1, i32* %fd, align 4, !dbg !16706
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16707, metadata !DIExpression()), !dbg !16708
  %call = call i32* @__errno_location() #16, !dbg !16709
  %0 = load i32, i32* %call, align 4, !dbg !16709, !ctir !5
  store i32 %0, i32* %save_errno, align 4, !dbg !16708
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16710, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16712, metadata !DIExpression()), !dbg !16713
  store i32 238328, i32* %attempts, align 4, !dbg !16713
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16714
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16715
  store i64 %call1, i64* %len, align 8, !dbg !16716
  %2 = load i64, i64* %len, align 8, !dbg !16717
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16719
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16720
  %conv = sext i32 %4 to i64, !dbg !16720
  %add = add i64 %3, %conv, !dbg !16721
  %cmp = icmp ult i64 %2, %add, !dbg !16722
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16723

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16724
  %6 = load i64, i64* %len, align 8, !dbg !16725
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16726
  %sub = sub i64 %6, %7, !dbg !16727
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16728
  %conv3 = sext i32 %8 to i64, !dbg !16728
  %sub4 = sub i64 %sub, %conv3, !dbg !16729
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16724, !ctir !7
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16730
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !16731
  br i1 %call5, label %if.end, label %if.then, !dbg !16732

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #16, !dbg !16733
  store i32 22, i32* %call6, align 4, !dbg !16733, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16735
  br label %return, !dbg !16735

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !16736
  %11 = load i64, i64* %len, align 8, !dbg !16737
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16738
  %sub7 = sub i64 %11, %12, !dbg !16739
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !16740
  %conv8 = sext i32 %13 to i64, !dbg !16740
  %sub9 = sub i64 %sub7, %conv8, !dbg !16741
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !16736, !ctir !7
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !16742
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16743
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !16744
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !16745
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16746
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !16746
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !16748

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16749
  br label %return, !dbg !16749

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !16750
  br label %for.cond, !dbg !16752

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !16753
  %17 = load i32, i32* %attempts, align 4, !dbg !16755
  %cmp14 = icmp ult i32 %16, %17, !dbg !16756
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !16757

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16758, metadata !DIExpression()), !dbg !16760
  store i64 0, i64* %i, align 8, !dbg !16761
  br label %for.cond16, !dbg !16763

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !16764
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16766
  %cmp17 = icmp ult i64 %18, %19, !dbg !16767
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !16768

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16769
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !16770
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !16771, !ctir !1024
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !16771
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !16772
  %23 = load i64, i64* %i, align 8, !dbg !16773
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16772, !ctir !7
  store i8 %21, i8* %arrayidx22, align 1, !dbg !16774
  br label %for.inc, !dbg !16772

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !16775
  %inc = add i64 %24, 1, !dbg !16775
  store i64 %inc, i64* %i, align 8, !dbg !16775
  br label %for.cond16, !dbg !16776, !llvm.loop !16777

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16779
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !16780
  %27 = load i8*, i8** %args.addr, align 8, !dbg !16781
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !16779
  store i32 %call23, i32* %fd, align 4, !dbg !16782
  %28 = load i32, i32* %fd, align 4, !dbg !16783
  %cmp24 = icmp sge i32 %28, 0, !dbg !16785
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !16786

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !16787
  %call27 = call i32* @__errno_location() #16, !dbg !16787
  store i32 %29, i32* %call27, align 4, !dbg !16787, !ctir !5
  br label %done, !dbg !16789

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #16, !dbg !16790
  %30 = load i32, i32* %call28, align 4, !dbg !16790, !ctir !5
  %cmp29 = icmp ne i32 %30, 17, !dbg !16792
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16793

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !16794
  br label %done, !dbg !16796

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !16797

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !16798
  %inc35 = add i32 %31, 1, !dbg !16798
  store i32 %inc35, i32* %count, align 4, !dbg !16798
  br label %for.cond, !dbg !16799, !llvm.loop !16800

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16802
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !16803
  %call38 = call i32* @__errno_location() #16, !dbg !16804
  store i32 17, i32* %call38, align 4, !dbg !16804, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16805
  br label %return, !dbg !16805

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !16806), !dbg !16807
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !16808, metadata !DIExpression()), !dbg !16810
  %call39 = call i32* @__errno_location() #16, !dbg !16811
  %33 = load i32, i32* %call39, align 4, !dbg !16811, !ctir !5
  store i32 %33, i32* %saved_errno, align 4, !dbg !16810
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16812
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !16813
  %35 = load i32, i32* %saved_errno, align 4, !dbg !16814
  %call41 = call i32* @__errno_location() #16, !dbg !16814
  store i32 %35, i32* %call41, align 4, !dbg !16814, !ctir !5
  %36 = load i32, i32* %fd, align 4, !dbg !16815
  store i32 %36, i32* %retval, align 4, !dbg !16816
  br label %return, !dbg !16816

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !16817
  ret i32 %37, !dbg !16817
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #10 !dbg !16818 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !16821, metadata !DIExpression()), !dbg !16822
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16823, metadata !DIExpression()), !dbg !16824
  %0 = load i64, i64* %len.addr, align 8, !dbg !16825
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16826
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.397, i64 0, i64 0)) #14, !dbg !16827
  %cmp = icmp ule i64 %0, %call, !dbg !16828
  ret i1 %cmp, !dbg !16829
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !16830 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1025
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16833, metadata !DIExpression()), !dbg !16834
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16835, metadata !DIExpression()), !dbg !16836
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16837, metadata !DIExpression()), !dbg !16838
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16839, metadata !DIExpression()), !dbg !16840
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16841, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !16843, metadata !DIExpression()), !dbg !16844
  %0 = load i32, i32* %kind.addr, align 4, !dbg !16845
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !16846

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16847
  br label %sw.epilog, !dbg !16849

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16850
  br label %sw.epilog, !dbg !16851

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16852
  br label %sw.epilog, !dbg !16853

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.399, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !16854
  unreachable, !dbg !16854

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16855
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !16856
  %3 = bitcast i32* %flags.addr to i8*, !dbg !16857
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16858
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16859
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !16860
  ret i32 %call, !dbg !16861
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !16862 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !224
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16863, metadata !DIExpression()), !dbg !16864
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16865, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !16867, metadata !DIExpression()), !dbg !16868
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !16869
  %1 = bitcast i8* %0 to i32*, !dbg !16869
  store i32* %1, i32** %openflags, align 8, !dbg !16868
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !16870
  %3 = load i32*, i32** %openflags, align 8, !dbg !16871
  %4 = load i32, i32* %3, align 4, !dbg !16872, !ctir !5
  %and = and i32 %4, -4, !dbg !16873
  %or = or i32 %and, 2, !dbg !16874
  %or1 = or i32 %or, 64, !dbg !16875
  %or2 = or i32 %or1, 128, !dbg !16876
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !16877
  ret i32 %call, !dbg !16878
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !16879 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16880, metadata !DIExpression()), !dbg !16881
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16882, metadata !DIExpression()), !dbg !16883
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16884
  %call = call i32 @mkdir(i8* %0, i32 448) #9, !dbg !16885
  ret i32 %call, !dbg !16886
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !16887 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !16888
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16909, metadata !DIExpression()), !dbg !16910
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16911, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16913, metadata !DIExpression()), !dbg !16914
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16915
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #9, !dbg !16915
  %cmp = icmp eq i32 %call, 0, !dbg !16917
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16918

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !16919
  %1 = load i32, i32* %call1, align 4, !dbg !16919, !ctir !5
  %cmp2 = icmp eq i32 %1, 75, !dbg !16920
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16921

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #16, !dbg !16922
  store i32 17, i32* %call3, align 4, !dbg !16922, !ctir !5
  br label %if.end, !dbg !16922

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #16, !dbg !16923
  %2 = load i32, i32* %call4, align 4, !dbg !16923, !ctir !5
  %cmp5 = icmp eq i32 %2, 2, !dbg !16924
  %3 = zext i1 %cmp5 to i64, !dbg !16923
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !16923
  ret i32 %cond, !dbg !16925
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !16926 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16929, metadata !DIExpression()), !dbg !16930
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16931, metadata !DIExpression()), !dbg !16932
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16933, metadata !DIExpression()), !dbg !16934
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16935, metadata !DIExpression()), !dbg !16936
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16937
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16938
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16939
  %3 = load i32, i32* %kind.addr, align 4, !dbg !16940
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !16941
  ret i32 %call, !dbg !16942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !16943 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16946, metadata !DIExpression()), !dbg !16947
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16954
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16955
  %2 = load i8*, i8** %args.addr, align 8, !dbg !16956
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16957
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !16958
  ret i32 %call, !dbg !16959
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !16960 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16964
  %cmp = icmp sle i32 0, %0, !dbg !16966
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16967

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !16968
  %cmp1 = icmp sle i32 %1, 2, !dbg !16969
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16970

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !16971, metadata !DIExpression()), !dbg !16973
  %2 = load i32, i32* %fd.addr, align 4, !dbg !16974
  %call = call i32 @dup_safer(i32 %2), !dbg !16975
  store i32 %call, i32* %f, align 4, !dbg !16973
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16976, metadata !DIExpression()), !dbg !16977
  %call2 = call i32* @__errno_location() #16, !dbg !16978
  %3 = load i32, i32* %call2, align 4, !dbg !16978, !ctir !5
  store i32 %3, i32* %e, align 4, !dbg !16977
  %4 = load i32, i32* %fd.addr, align 4, !dbg !16979
  %call3 = call i32 @close(i32 %4), !dbg !16980
  %5 = load i32, i32* %e, align 4, !dbg !16981
  %call4 = call i32* @__errno_location() #16, !dbg !16982
  store i32 %5, i32* %call4, align 4, !dbg !16983, !ctir !5
  %6 = load i32, i32* %f, align 4, !dbg !16984
  store i32 %6, i32* %fd.addr, align 4, !dbg !16985
  br label %if.end, !dbg !16986

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !16987
  ret i32 %7, !dbg !16988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !16989 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16992, metadata !DIExpression()), !dbg !16993
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16994, metadata !DIExpression()), !dbg !16995
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16998, metadata !DIExpression()), !dbg !16999
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !17000
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17001
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17002
  %3 = load i32, i32* %options.addr, align 4, !dbg !17003
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !17004
  ret i32 %call, !dbg !17005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1036 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1066
  %src_s = alloca i64, align 8, !ctir !1066
  %dst_ns = alloca i32, align 4, !ctir !5
  %src_ns = alloca i32, align 4, !ctir !5
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1067
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1068
  %res = alloca i32, align 4, !ctir !5
  %dst_a_s = alloca i64, align 8, !ctir !1066
  %dst_c_s = alloca i64, align 8, !ctir !1066
  %dst_m_s = alloca i64, align 8, !ctir !1066
  %dst_a_ns = alloca i32, align 4, !ctir !5
  %dst_c_ns = alloca i32, align 4, !ctir !5
  %dst_m_ns = alloca i32, align 4, !ctir !5
  %odd_second = alloca i8, align 1, !ctir !139
  %a = alloca i32, align 4, !ctir !5
  %c = alloca i32, align 4, !ctir !5
  %m = alloca i32, align 4, !ctir !5
  %SR10 = alloca i32, align 4, !ctir !5
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1073
  %dst_status = alloca %struct.stat, align 8, !ctir !1042
  %s = alloca i64, align 8, !ctir !1066
  %stat_result = alloca i32, align 4, !ctir !5
  %old_res = alloca i32, align 4, !ctir !5
  %a168 = alloca i32, align 4, !ctir !5
  store i32 %dfd, i32* %dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17008, metadata !DIExpression()), !dbg !17009
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17010, metadata !DIExpression()), !dbg !17011
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17012, metadata !DIExpression()), !dbg !17013
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17014, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !17016, metadata !DIExpression()), !dbg !17017
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17018
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17019, !ctir !1041
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17019, !ctir !1056
  %1 = load i64, i64* %tv_sec, align 8, !dbg !17019, !ctir !376
  store i64 %1, i64* %dst_s, align 8, !dbg !17017
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !17020, metadata !DIExpression()), !dbg !17021
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17022
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !17023, !ctir !1041
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !17023, !ctir !1056
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !17023, !ctir !376
  store i64 %3, i64* %src_s, align 8, !dbg !17021
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !17024, metadata !DIExpression()), !dbg !17025
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17026
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !17027
  %conv = trunc i64 %call to i32, !dbg !17027
  store i32 %conv, i32* %dst_ns, align 4, !dbg !17025
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !17028, metadata !DIExpression()), !dbg !17029
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17030
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !17031
  %conv4 = trunc i64 %call3 to i32, !dbg !17031
  store i32 %conv4, i32* %src_ns, align 4, !dbg !17029
  %6 = load i32, i32* %options.addr, align 4, !dbg !17032
  %and = and i32 %6, 1, !dbg !17034
  %tobool = icmp ne i32 %and, 0, !dbg !17034
  br i1 %tobool, label %if.then, label %if.end207, !dbg !17035

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !17036, metadata !DIExpression()), !dbg !17038
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !17038
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !17039, metadata !DIExpression()), !dbg !17040
  call void @llvm.dbg.declare(metadata i32* %res, metadata !17041, metadata !DIExpression()), !dbg !17042
  %7 = load i64, i64* %dst_s, align 8, !dbg !17043
  %8 = load i64, i64* %src_s, align 8, !dbg !17045
  %cmp = icmp eq i64 %7, %8, !dbg !17046
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17047

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !17048
  %10 = load i32, i32* %src_ns, align 4, !dbg !17049
  %cmp6 = icmp eq i32 %9, %10, !dbg !17050
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17051

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17052
  br label %return, !dbg !17052

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !17053
  %12 = load i64, i64* %src_s, align 8, !dbg !17055
  %sub = sub nsw i64 %12, 2, !dbg !17056
  %cmp9 = icmp sle i64 %11, %sub, !dbg !17057
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17058

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17059
  br label %return, !dbg !17059

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !17060
  %14 = load i64, i64* %dst_s, align 8, !dbg !17062
  %sub13 = sub nsw i64 %14, 2, !dbg !17063
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !17064
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !17065

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !17066
  br label %return, !dbg !17066

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17067
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !17067
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !17069

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !17070
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17071
  br label %if.end21, !dbg !17072

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17073
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !17073
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !17075

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17076
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !17076
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !17079

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #9, !dbg !17080
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !17080
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17082
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17083
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !17083
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !17085

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !17086

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17087
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !17088, !ctir !1068
  store i32 2000000000, i32* %resolution, align 8, !dbg !17089, !ctir !5
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17090
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !17091, !ctir !1068
  store i8 0, i8* %exact, align 4, !dbg !17092, !ctir !139
  br label %if.end30, !dbg !17093

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17094
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !17095, !ctir !1041
  %23 = load i64, i64* %st_dev, align 8, !dbg !17095, !ctir !460
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17096
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !17097, !ctir !1068
  store i64 %23, i64* %dev, align 8, !dbg !17098, !ctir !508
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17099
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17100
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !17100
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !17101
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !17101
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !17102
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17103
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !17103
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !17105

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !17106

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17107
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17109
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !17110
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !17111

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17112
  br label %if.end38, !dbg !17114

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !17115

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !17116

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !17117), !dbg !17119
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17120
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !17120
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !17122

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17123
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !17125, !ctir !1041
  %34 = load i64, i64* %st_dev41, align 8, !dbg !17125, !ctir !460
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !17126, !ctir !1068
  store i64 %34, i64* %dev42, align 8, !dbg !17127, !ctir !508
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17128
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !17129
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !17130
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !17130
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !17131
  br label %if.end44, !dbg !17132

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17133
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !17133
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !17135

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !17136
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17138
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !17139, !ctir !1068
  store i32 2000000000, i32* %resolution47, align 8, !dbg !17140, !ctir !5
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17141
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !17142, !ctir !1068
  store i8 0, i8* %exact48, align 4, !dbg !17143, !ctir !139
  br label %if.end49, !dbg !17144

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17145
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !17146, !ctir !1068
  %42 = load i32, i32* %resolution51, align 8, !dbg !17146, !ctir !5
  store i32 %42, i32* %res, align 4, !dbg !17147
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17148
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !17150, !ctir !1068
  %44 = load i8, i8* %exact52, align 4, !dbg !17150
  %tobool53 = trunc i8 %44 to i1, !dbg !17150, !ctir !139
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !17151

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !17152, metadata !DIExpression()), !dbg !17154
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17155
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !17156, !ctir !1041
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17156, !ctir !1056
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !17156, !ctir !376
  store i64 %46, i64* %dst_a_s, align 8, !dbg !17154
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !17157, metadata !DIExpression()), !dbg !17158
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17159
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !17160, !ctir !1041
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !17160, !ctir !1056
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !17160, !ctir !376
  store i64 %48, i64* %dst_c_s, align 8, !dbg !17158
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !17161, metadata !DIExpression()), !dbg !17162
  %49 = load i64, i64* %dst_s, align 8, !dbg !17163
  store i64 %49, i64* %dst_m_s, align 8, !dbg !17162
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !17164, metadata !DIExpression()), !dbg !17165
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17166
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !17167
  %conv58 = trunc i64 %call57 to i32, !dbg !17167
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !17165
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !17168, metadata !DIExpression()), !dbg !17169
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17170
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !17171
  %conv60 = trunc i64 %call59 to i32, !dbg !17171
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !17169
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !17172, metadata !DIExpression()), !dbg !17173
  %52 = load i32, i32* %dst_ns, align 4, !dbg !17174
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !17173
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !17175, metadata !DIExpression()), !dbg !17177
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !17178
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !17179
  %or = or i64 %53, %54, !dbg !17180
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !17181
  %or61 = or i64 %or, %55, !dbg !17182
  %and62 = and i64 %or61, 1, !dbg !17183
  %tobool63 = icmp ne i64 %and62, 0, !dbg !17184
  %frombool = zext i1 %tobool63 to i8, !dbg !17177
  store i8 %frombool, i8* %odd_second, align 1, !dbg !17177
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17185, metadata !DIExpression()), !dbg !17188
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !17189
  store i32 %56, i32* %a, align 4, !dbg !17188
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17190, metadata !DIExpression()), !dbg !17191
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !17192
  store i32 %57, i32* %c, align 4, !dbg !17191
  call void @llvm.dbg.declare(metadata i32* %m, metadata !17193, metadata !DIExpression()), !dbg !17194
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !17195
  store i32 %58, i32* %m, align 4, !dbg !17194
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !17196, metadata !DIExpression()), !dbg !17197
  store i32 1, i32* %SR10, align 4, !dbg !17197
  %59 = load i32, i32* %SR10, align 4, !dbg !17198
  %mul = mul nsw i32 %59, 10, !dbg !17198
  store i32 %mul, i32* %SR10, align 4, !dbg !17198
  %60 = load i32, i32* %a, align 4, !dbg !17199
  %61 = load i32, i32* %SR10, align 4, !dbg !17201
  %rem = srem i32 %60, %61, !dbg !17202
  %62 = load i32, i32* %c, align 4, !dbg !17203
  %63 = load i32, i32* %SR10, align 4, !dbg !17204
  %rem64 = srem i32 %62, %63, !dbg !17205
  %or65 = or i32 %rem, %rem64, !dbg !17206
  %64 = load i32, i32* %m, align 4, !dbg !17207
  %65 = load i32, i32* %SR10, align 4, !dbg !17208
  %rem66 = srem i32 %64, %65, !dbg !17209
  %or67 = or i32 %or65, %rem66, !dbg !17210
  %cmp68 = icmp ne i32 %or67, 0, !dbg !17211
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !17212

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !17213
  br label %if.end96, !dbg !17214

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !17215
  store i32 %66, i32* %res, align 4, !dbg !17217
  %67 = load i32, i32* %SR10, align 4, !dbg !17218
  %68 = load i32, i32* %a, align 4, !dbg !17219
  %div = sdiv i32 %68, %67, !dbg !17219
  store i32 %div, i32* %a, align 4, !dbg !17219
  %69 = load i32, i32* %SR10, align 4, !dbg !17220
  %70 = load i32, i32* %c, align 4, !dbg !17221
  %div72 = sdiv i32 %70, %69, !dbg !17221
  store i32 %div72, i32* %c, align 4, !dbg !17221
  %71 = load i32, i32* %SR10, align 4, !dbg !17222
  %72 = load i32, i32* %m, align 4, !dbg !17223
  %div73 = sdiv i32 %72, %71, !dbg !17223
  store i32 %div73, i32* %m, align 4, !dbg !17223
  br label %for.cond, !dbg !17224

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !17225
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17227
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !17228, !ctir !1068
  %75 = load i32, i32* %resolution74, align 8, !dbg !17228, !ctir !5
  %cmp75 = icmp slt i32 %73, %75, !dbg !17229
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !17230

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !17231
  %rem77 = srem i32 %76, 10, !dbg !17232
  %77 = load i32, i32* %c, align 4, !dbg !17233
  %rem78 = srem i32 %77, 10, !dbg !17234
  %or79 = or i32 %rem77, %rem78, !dbg !17235
  %78 = load i32, i32* %m, align 4, !dbg !17236
  %rem80 = srem i32 %78, 10, !dbg !17237
  %or81 = or i32 %or79, %rem80, !dbg !17238
  %cmp82 = icmp eq i32 %or81, 0, !dbg !17239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !17240
  br i1 %79, label %for.body, label %for.end, !dbg !17241

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !17242
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !17244
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !17245

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !17246
  %tobool87 = trunc i8 %81 to i1, !dbg !17246
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !17249

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !17250
  %mul89 = mul nsw i32 %82, 2, !dbg !17250
  store i32 %mul89, i32* %res, align 4, !dbg !17250
  br label %if.end90, !dbg !17251

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !17252

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !17253

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !17254
  %mul92 = mul nsw i32 %83, 10, !dbg !17254
  store i32 %mul92, i32* %res, align 4, !dbg !17254
  %84 = load i32, i32* %a, align 4, !dbg !17255
  %div93 = sdiv i32 %84, 10, !dbg !17255
  store i32 %div93, i32* %a, align 4, !dbg !17255
  %85 = load i32, i32* %c, align 4, !dbg !17256
  %div94 = sdiv i32 %85, 10, !dbg !17256
  store i32 %div94, i32* %c, align 4, !dbg !17256
  %86 = load i32, i32* %m, align 4, !dbg !17257
  %div95 = sdiv i32 %86, 10, !dbg !17257
  store i32 %div95, i32* %m, align 4, !dbg !17257
  br label %for.cond, !dbg !17258, !llvm.loop !17259

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !17261
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17262
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !17263, !ctir !1068
  store i32 %87, i32* %resolution97, align 8, !dbg !17264, !ctir !5
  %89 = load i32, i32* %res, align 4, !dbg !17265
  %cmp98 = icmp slt i32 1, %89, !dbg !17267
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !17268

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !17269, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !17272, metadata !DIExpression()), !dbg !17273
  %90 = load i32, i32* %src_ns, align 4, !dbg !17274
  %rem101 = srem i32 %90, 1, !dbg !17275
  %91 = load i32, i32* %src_ns, align 4, !dbg !17276
  %sub102 = sub nsw i32 %91, %rem101, !dbg !17276
  store i32 %sub102, i32* %src_ns, align 4, !dbg !17276
  call void @llvm.dbg.declare(metadata i64* %s, metadata !17277, metadata !DIExpression()), !dbg !17279
  %92 = load i64, i64* %src_s, align 8, !dbg !17280
  %93 = load i32, i32* %res, align 4, !dbg !17281
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !17282
  %94 = zext i1 %cmp103 to i64, !dbg !17281
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !17281
  %neg = xor i32 %cond, -1, !dbg !17283
  %conv105 = sext i32 %neg to i64, !dbg !17283
  %and106 = and i64 %92, %conv105, !dbg !17284
  store i64 %and106, i64* %s, align 8, !dbg !17279
  %95 = load i64, i64* %src_s, align 8, !dbg !17285
  %96 = load i64, i64* %dst_s, align 8, !dbg !17287
  %cmp107 = icmp slt i64 %95, %96, !dbg !17288
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !17289

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !17290
  %98 = load i64, i64* %dst_s, align 8, !dbg !17291
  %cmp109 = icmp eq i64 %97, %98, !dbg !17292
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !17293

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !17294
  %100 = load i32, i32* %dst_ns, align 4, !dbg !17295
  %cmp112 = icmp sle i32 %99, %100, !dbg !17296
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !17297

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !17298
  br label %return, !dbg !17298

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !17299
  %102 = load i64, i64* %s, align 8, !dbg !17301
  %cmp116 = icmp slt i64 %101, %102, !dbg !17302
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !17303

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !17304
  %104 = load i64, i64* %s, align 8, !dbg !17305
  %cmp119 = icmp eq i64 %103, %104, !dbg !17306
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !17307

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !17308
  %106 = load i32, i32* %src_ns, align 4, !dbg !17309
  %107 = load i32, i32* %src_ns, align 4, !dbg !17310
  %108 = load i32, i32* %res, align 4, !dbg !17311
  %rem122 = srem i32 %107, %108, !dbg !17312
  %sub123 = sub nsw i32 %106, %rem122, !dbg !17313
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !17314
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !17315

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !17316
  br label %return, !dbg !17316

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !17317
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17318, !ctir !1073
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !17319, !ctir !1056
  store i64 %109, i64* %tv_sec128, align 16, !dbg !17320, !ctir !376
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !17321
  %conv129 = sext i32 %110 to i64, !dbg !17321
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17322, !ctir !1073
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !17323, !ctir !1056
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !17324, !ctir !378
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !17325
  %112 = load i32, i32* %res, align 4, !dbg !17326
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !17327
  %conv132 = zext i1 %cmp131 to i32, !dbg !17327
  %conv133 = sext i32 %conv132 to i64, !dbg !17328
  %or134 = or i64 %111, %conv133, !dbg !17329
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17330, !ctir !1073
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !17331, !ctir !1056
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !17332, !ctir !376
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !17333
  %114 = load i32, i32* %res, align 4, !dbg !17334
  %div137 = sdiv i32 %114, 9, !dbg !17335
  %add = add nsw i32 %113, %div137, !dbg !17336
  %conv138 = sext i32 %add to i64, !dbg !17333
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17337, !ctir !1073
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !17338, !ctir !1056
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !17339, !ctir !378
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !17340
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !17342
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17343, !ctir !1073
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #9, !dbg !17344
  %tobool142 = icmp ne i32 %call141, 0, !dbg !17344
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !17345

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !17346
  br label %return, !dbg !17346

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !17347, metadata !DIExpression()), !dbg !17349
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !17350
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !17351
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #9, !dbg !17352
  store i32 %call145, i32* %stat_result, align 4, !dbg !17349
  %119 = load i32, i32* %stat_result, align 4, !dbg !17353
  %conv146 = sext i32 %119 to i64, !dbg !17353
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17355, !ctir !1042
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !17355, !ctir !1056
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !17355, !ctir !376
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !17356
  %xor = xor i64 %120, %121, !dbg !17357
  %or149 = or i64 %conv146, %xor, !dbg !17358
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17359
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !17360
  %conv151 = sext i32 %122 to i64, !dbg !17360
  %xor152 = xor i64 %call150, %conv151, !dbg !17361
  %or153 = or i64 %or149, %xor152, !dbg !17362
  %tobool154 = icmp ne i64 %or153, 0, !dbg !17362
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !17363

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !17364
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17366, !ctir !1073
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !17367, !ctir !1056
  store i64 %123, i64* %tv_sec157, align 16, !dbg !17368, !ctir !376
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !17369
  %conv158 = sext i32 %124 to i64, !dbg !17369
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17370, !ctir !1073
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !17371, !ctir !1056
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !17372, !ctir !378
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !17373
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !17374
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17375, !ctir !1073
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #9, !dbg !17376
  br label %if.end163, !dbg !17377

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !17378
  %cmp164 = icmp ne i32 %127, 0, !dbg !17380
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !17381

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !17382
  br label %return, !dbg !17382

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !17383, metadata !DIExpression()), !dbg !17385
  %128 = load i32, i32* %res, align 4, !dbg !17386
  store i32 %128, i32* %old_res, align 4, !dbg !17385
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !17387, metadata !DIExpression()), !dbg !17388
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17389, !ctir !1042
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !17389, !ctir !1056
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !17389, !ctir !376
  %and171 = and i64 %129, 1, !dbg !17390
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !17391
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17392
  %add174 = add nsw i64 %mul172, %call173, !dbg !17393
  %conv175 = trunc i64 %add174 to i32, !dbg !17394
  store i32 %conv175, i32* %a168, align 4, !dbg !17388
  store i32 1, i32* %res, align 4, !dbg !17395
  %130 = load i32, i32* %res, align 4, !dbg !17396
  %131 = load i32, i32* %a168, align 4, !dbg !17398
  %div176 = sdiv i32 %131, %130, !dbg !17398
  store i32 %div176, i32* %a168, align 4, !dbg !17398
  br label %for.cond177, !dbg !17399

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !17400
  %rem178 = srem i32 %132, 10, !dbg !17402
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !17403
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !17404

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !17405
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !17408
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !17409

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !17410
  %mul185 = mul nsw i32 %134, 2, !dbg !17410
  store i32 %mul185, i32* %res, align 4, !dbg !17410
  br label %for.end194, !dbg !17412

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !17413
  %mul187 = mul nsw i32 %135, 10, !dbg !17413
  store i32 %mul187, i32* %res, align 4, !dbg !17413
  %136 = load i32, i32* %res, align 4, !dbg !17414
  %137 = load i32, i32* %old_res, align 4, !dbg !17416
  %cmp188 = icmp eq i32 %136, %137, !dbg !17417
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !17418

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !17419

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !17420

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !17421
  %div193 = sdiv i32 %138, 10, !dbg !17421
  store i32 %div193, i32* %a168, align 4, !dbg !17421
  br label %for.cond177, !dbg !17422, !llvm.loop !17423

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !17425

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !17426
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17427
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !17428, !ctir !1068
  store i32 %139, i32* %resolution196, align 8, !dbg !17429, !ctir !5
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17430
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !17431, !ctir !1068
  store i8 1, i8* %exact197, align 4, !dbg !17432, !ctir !139
  br label %if.end198, !dbg !17433

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !17434
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !17435
  %143 = zext i1 %cmp199 to i64, !dbg !17434
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !17434
  %neg202 = xor i32 %cond201, -1, !dbg !17436
  %conv203 = sext i32 %neg202 to i64, !dbg !17436
  %144 = load i64, i64* %src_s, align 8, !dbg !17437
  %and204 = and i64 %144, %conv203, !dbg !17437
  store i64 %and204, i64* %src_s, align 8, !dbg !17437
  %145 = load i32, i32* %src_ns, align 4, !dbg !17438
  %146 = load i32, i32* %res, align 4, !dbg !17439
  %rem205 = srem i32 %145, %146, !dbg !17440
  %147 = load i32, i32* %src_ns, align 4, !dbg !17441
  %sub206 = sub nsw i32 %147, %rem205, !dbg !17441
  store i32 %sub206, i32* %src_ns, align 4, !dbg !17441
  br label %if.end207, !dbg !17442

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !17443
  %149 = load i64, i64* %src_s, align 8, !dbg !17444
  %cmp208 = icmp slt i64 %148, %149, !dbg !17445
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !17443

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !17443

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !17446
  %151 = load i64, i64* %src_s, align 8, !dbg !17447
  %cmp210 = icmp sgt i64 %150, %151, !dbg !17448
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !17446

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !17446

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !17449
  %153 = load i32, i32* %src_ns, align 4, !dbg !17450
  %cmp214 = icmp slt i32 %152, %153, !dbg !17451
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !17449

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !17449

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !17452
  %155 = load i32, i32* %src_ns, align 4, !dbg !17453
  %cmp218 = icmp sgt i32 %154, %155, !dbg !17454
  %conv219 = zext i1 %cmp218 to i32, !dbg !17454
  br label %cond.end, !dbg !17449

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !17449
  br label %cond.end221, !dbg !17446

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !17446
  br label %cond.end223, !dbg !17443

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !17443
  store i32 %cond224, i32* %retval, align 4, !dbg !17455
  br label %return, !dbg !17455

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !17456
  ret i32 %156, !dbg !17456
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !17457 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1074
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17458, metadata !DIExpression()), !dbg !17459
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !17460, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !17462, metadata !DIExpression()), !dbg !17463
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17464
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17464
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !17463
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !17465
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !17466, !ctir !1075
  %3 = load i64, i64* %dev, align 8, !dbg !17466, !ctir !508
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !17467
  %rem = urem i64 %3, %4, !dbg !17468
  ret i64 %rem, !dbg !17469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !17470 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1074
  %b = alloca %struct.fs_res*, align 8, !ctir !1074
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17471, metadata !DIExpression()), !dbg !17472
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !17473, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !17475, metadata !DIExpression()), !dbg !17476
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17477
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17477
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !17476
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !17478, metadata !DIExpression()), !dbg !17479
  %2 = load i8*, i8** %y.addr, align 8, !dbg !17480
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !17480
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !17479
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !17481
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !17482, !ctir !1075
  %5 = load i64, i64* %dev, align 8, !dbg !17482, !ctir !508
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !17483
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !17484, !ctir !1075
  %7 = load i64, i64* %dev1, align 8, !dbg !17484, !ctir !508
  %cmp = icmp eq i64 %5, %7, !dbg !17485
  ret i1 %cmp, !dbg !17486
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !17487 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17493, metadata !DIExpression()), !dbg !17494
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17495, metadata !DIExpression()), !dbg !17496
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !17497, metadata !DIExpression()), !dbg !17498
  %0 = load i32, i32* %dir.addr, align 4, !dbg !17499
  %1 = load i8*, i8** %file.addr, align 8, !dbg !17500
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !17501
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #9, !dbg !17502
  ret i32 %call, !dbg !17503
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !17504 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1084
  %ts = alloca %struct.timespec*, align 8, !ctir !1089
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !17505
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1090
  %t = alloca %struct.timespec*, align 8, !ctir !1097
  %abig = alloca i8, align 1, !ctir !139
  %mbig = alloca i8, align 1, !ctir !139
  %adiff = alloca i64, align 8, !ctir !1066
  %mdiff = alloca i64, align 8, !ctir !1066
  %tt = alloca %struct.timespec*, align 8, !ctir !1097
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1090
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17522, metadata !DIExpression()), !dbg !17523
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17524, metadata !DIExpression()), !dbg !17525
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17526, metadata !DIExpression()), !dbg !17527
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17528, metadata !DIExpression()), !dbg !17529
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17530, metadata !DIExpression()), !dbg !17531
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17532
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17532
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17532

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17533, !ctir !1084
  br label %cond.end, !dbg !17532

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17532

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17532
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17531
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17534, metadata !DIExpression()), !dbg !17535
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17535
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17536, metadata !DIExpression()), !dbg !17537
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17538
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17538
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17540

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17541, !ctir !1084
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17543
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17543, !ctir !17491
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17543
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17543
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17544, !ctir !1084
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17545
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17545, !ctir !17491
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17545
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17545
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17546
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17547
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17548
  br label %if.end, !dbg !17549

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17550
  %cmp = icmp slt i32 %9, 0, !dbg !17552
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17553

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17554
  br label %return, !dbg !17554

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17555
  %cmp7 = icmp slt i32 %10, 0, !dbg !17557
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17558

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17559
  %tobool8 = icmp ne i8* %11, null, !dbg !17559
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17560

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !17561
  store i32 9, i32* %call10, align 4, !dbg !17563, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17564
  br label %return, !dbg !17564

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17565
  %cmp12 = icmp sle i32 0, %12, !dbg !17567
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17568

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17569, metadata !DIExpression()), !dbg !17571
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17572
  %cmp14 = icmp eq i32 %13, 2, !dbg !17574
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17575

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17576
  %cmp16 = icmp slt i32 %14, 0, !dbg !17579
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17580

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17581
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #9, !dbg !17582
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17582
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17576

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17583
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #9, !dbg !17584
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17584
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17580

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17585
  br label %return, !dbg !17585

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17586
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17586, !ctir !1089
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17588, !ctir !1085
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17588, !ctir !378
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17589
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17590

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17591
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17591, !ctir !1089
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17592
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17592
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17592
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17592
  store i64 %22, i64* %21, align 8, !dbg !17592
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17592
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17592
  store i64 %24, i64* %23, align 8, !dbg !17592
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17592
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17592
  br label %if.end38, !dbg !17591

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17593
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17593, !ctir !1089
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17595, !ctir !1085
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17595, !ctir !378
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17596
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17597

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17598
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17598, !ctir !1089
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17599
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !17599
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !17599
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !17599
  store i64 %32, i64* %31, align 8, !dbg !17599
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !17599
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !17599
  store i64 %34, i64* %33, align 8, !dbg !17599
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !17599
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !17599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !17599
  br label %if.end37, !dbg !17598

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !17600
  %inc = add nsw i32 %37, 1, !dbg !17600
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17600
  br label %if.end39, !dbg !17601

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !17602
  %cmp40 = icmp slt i32 %38, 0, !dbg !17604
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !17605

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !17606
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17608
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #9, !dbg !17609
  store i32 %call42, i32* %result, align 4, !dbg !17610
  %41 = load i32, i32* %result, align 4, !dbg !17611
  %cmp43 = icmp slt i32 0, %41, !dbg !17613
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17614

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #16, !dbg !17615
  store i32 38, i32* %call45, align 4, !dbg !17616, !ctir !5
  br label %if.end46, !dbg !17615

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17617
  %cmp47 = icmp eq i32 %42, 0, !dbg !17619
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17620

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #16, !dbg !17621
  %43 = load i32, i32* %call48, align 4, !dbg !17621, !ctir !5
  %cmp49 = icmp ne i32 %43, 38, !dbg !17622
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17623

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17624
  %44 = load i32, i32* %result, align 4, !dbg !17626
  store i32 %44, i32* %retval, align 4, !dbg !17627
  br label %return, !dbg !17627

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17628

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17629
  %cmp53 = icmp sle i32 0, %45, !dbg !17631
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17632

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17633
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17635
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #9, !dbg !17636
  store i32 %call55, i32* %result, align 4, !dbg !17637
  %48 = load i32, i32* %result, align 4, !dbg !17638
  %cmp56 = icmp slt i32 0, %48, !dbg !17640
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17641

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #16, !dbg !17642
  store i32 38, i32* %call58, align 4, !dbg !17643, !ctir !5
  br label %if.end59, !dbg !17642

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17644
  %cmp60 = icmp eq i32 %49, 0, !dbg !17646
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17647

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #16, !dbg !17648
  %50 = load i32, i32* %call62, align 4, !dbg !17648, !ctir !5
  %cmp63 = icmp ne i32 %50, 38, !dbg !17649
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17650

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17651
  %51 = load i32, i32* %result, align 4, !dbg !17653
  store i32 %51, i32* %retval, align 4, !dbg !17654
  br label %return, !dbg !17654

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17655

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17656

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17657
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17658
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17659
  %tobool68 = icmp ne i32 %52, 0, !dbg !17659
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17661

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17662
  %cmp70 = icmp ne i32 %53, 3, !dbg !17665
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17666

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17667
  %cmp72 = icmp slt i32 %54, 0, !dbg !17668
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17669

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17670
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #9, !dbg !17671
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17671
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17667

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17672
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #9, !dbg !17673
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17673
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17669

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17674
  br label %return, !dbg !17674

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17675
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17675
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17677

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17678
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17679

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17680
  br label %return, !dbg !17680

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !17681

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !17682, metadata !DIExpression()), !dbg !17684
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !17685, metadata !DIExpression()), !dbg !17686
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17687
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !17687
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !17689

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17690
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !17690, !ctir !1089
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !17692, !ctir !1085
  %60 = load i64, i64* %tv_sec, align 8, !dbg !17692, !ctir !376
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17693, !ctir !1090
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !17694, !ctir !1091
  store i64 %60, i64* %tv_sec91, align 16, !dbg !17695, !ctir !376
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17696
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17696, !ctir !1089
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17697, !ctir !1085
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17697, !ctir !378
  %div = sdiv i64 %62, 1000, !dbg !17698
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17699, !ctir !1090
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17700, !ctir !1091
  store i64 %div, i64* %tv_usec, align 8, !dbg !17701, !ctir !1096
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17702
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17702, !ctir !1089
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17703, !ctir !1085
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17703, !ctir !376
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17704, !ctir !1090
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17705, !ctir !1091
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17706, !ctir !376
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17707
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17707, !ctir !1089
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17708, !ctir !1085
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17708, !ctir !378
  %div101 = sdiv i64 %66, 1000, !dbg !17709
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17710, !ctir !1090
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17711, !ctir !1091
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17712, !ctir !1096
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17713, !ctir !1090
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17714
  br label %if.end106, !dbg !17715

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17716
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17717
  %cmp107 = icmp slt i32 %67, 0, !dbg !17719
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17720

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17721
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17723
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #9, !dbg !17724
  store i32 %call109, i32* %retval, align 4, !dbg !17725
  br label %return, !dbg !17725

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17726
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17726
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #9, !dbg !17726
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17729
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17730

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17731
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17731
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17734

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17735, metadata !DIExpression()), !dbg !17737
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17738
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17738, !ctir !1097
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17739, !ctir !1091
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17739, !ctir !1096
  %cmp118 = icmp sle i64 500000, %74, !dbg !17740
  %frombool = zext i1 %cmp118 to i8, !dbg !17737
  store i8 %frombool, i8* %abig, align 1, !dbg !17737
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17741, metadata !DIExpression()), !dbg !17742
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17743
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17743, !ctir !1097
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17744, !ctir !1091
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17744, !ctir !1096
  %cmp121 = icmp sle i64 500000, %76, !dbg !17745
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17742
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17742
  %77 = load i8, i8* %abig, align 1, !dbg !17746
  %tobool123 = trunc i8 %77 to i1, !dbg !17746
  %conv = zext i1 %tobool123 to i32, !dbg !17746
  %78 = load i8, i8* %mbig, align 1, !dbg !17748
  %tobool124 = trunc i8 %78 to i1, !dbg !17748
  %conv125 = zext i1 %tobool124 to i32, !dbg !17748
  %or = or i32 %conv, %conv125, !dbg !17749
  %tobool126 = icmp ne i32 %or, 0, !dbg !17749
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !17750

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !17751
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #9, !dbg !17752
  %cmp129 = icmp eq i32 %call128, 0, !dbg !17753
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !17754

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !17755, metadata !DIExpression()), !dbg !17757
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !17758, !ctir !17505
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17758, !ctir !1085
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !17758, !ctir !376
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17759
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !17759, !ctir !1097
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !17760, !ctir !1091
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !17760, !ctir !376
  %sub = sub nsw i64 %80, %82, !dbg !17761
  store i64 %sub, i64* %adiff, align 8, !dbg !17757
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !17762, metadata !DIExpression()), !dbg !17763
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !17764, !ctir !17505
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17764, !ctir !1085
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !17764, !ctir !376
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17765
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !17765, !ctir !1097
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !17766, !ctir !1091
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !17766, !ctir !376
  %sub138 = sub nsw i64 %83, %85, !dbg !17767
  store i64 %sub138, i64* %mdiff, align 8, !dbg !17763
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !17768, metadata !DIExpression()), !dbg !17769
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !17769
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !17770, metadata !DIExpression()), !dbg !17771
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17772, !ctir !1090
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17773
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !17773, !ctir !1097
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !17773
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !17773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !17773
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !17774, !ctir !1090
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17775
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !17775, !ctir !1097
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !17775
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !17775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !17775
  %92 = load i8, i8* %abig, align 1, !dbg !17776
  %tobool143 = trunc i8 %92 to i1, !dbg !17776
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !17778

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !17779
  %cmp146 = icmp eq i64 %93, 1, !dbg !17780
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !17781

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !17782
  %cmp150 = icmp eq i64 %call149, 0, !dbg !17783
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !17784

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17785, !ctir !1090
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !17787
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17788
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !17788, !ctir !1097
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !17789, !ctir !1091
  store i64 0, i64* %tv_usec155, align 8, !dbg !17790, !ctir !1096
  br label %if.end156, !dbg !17791

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !17792
  %tobool157 = trunc i8 %95 to i1, !dbg !17792
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !17794

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !17795
  %cmp160 = icmp eq i64 %96, 1, !dbg !17796
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !17797

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !17798
  %cmp164 = icmp eq i64 %call163, 0, !dbg !17799
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !17800

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17801, !ctir !1090
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !17803
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17804
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !17804, !ctir !1097
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !17805, !ctir !1091
  store i64 0, i64* %tv_usec169, align 8, !dbg !17806, !ctir !1096
  br label %if.end170, !dbg !17807

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17808
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !17808
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !17810

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !17811
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17811
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #9, !dbg !17811
  br label %if.end174, !dbg !17811

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !17812

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !17813

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !17814
  br label %return, !dbg !17814

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !17815
  %tobool179 = icmp ne i8* %101, null, !dbg !17815
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !17817

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !17818
  br label %return, !dbg !17818

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !17820
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17821
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #9, !dbg !17822
  store i32 %call182, i32* %retval, align 4, !dbg !17823
  br label %return, !dbg !17823

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !17824
  ret i32 %104, !dbg !17824
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !17825 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !5
  %utime_omit_count = alloca i32, align 4, !ctir !5
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17828, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17830, metadata !DIExpression()), !dbg !17831
  store i32 0, i32* %result, align 4, !dbg !17831
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !17832, metadata !DIExpression()), !dbg !17833
  store i32 0, i32* %utime_omit_count, align 4, !dbg !17833
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17834
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !17834, !ctir !1089
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17836, !ctir !1085
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17836, !ctir !378
  %cmp = icmp ne i64 %1, 1073741823, !dbg !17837
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17838

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17839
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17839, !ctir !1089
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17840, !ctir !1085
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !17840, !ctir !378
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !17841
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !17842

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17843
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !17843, !ctir !1089
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !17844, !ctir !1085
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !17844, !ctir !378
  %cmp7 = icmp sle i64 0, %5, !dbg !17845
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !17846

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17847
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17847, !ctir !1089
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !17848, !ctir !1085
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !17848, !ctir !378
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !17849
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !17850

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17851
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17851, !ctir !1089
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !17852, !ctir !1085
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !17852, !ctir !378
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !17853
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !17854

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17855
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !17855, !ctir !1089
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !17856, !ctir !1085
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !17856, !ctir !378
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !17857
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !17858

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17859
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !17859, !ctir !1089
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17860, !ctir !1085
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !17860, !ctir !378
  %cmp22 = icmp sle i64 0, %13, !dbg !17861
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !17862

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17863
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !17863, !ctir !1089
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !17864, !ctir !1085
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !17864, !ctir !378
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !17865
  br i1 %cmp26, label %if.end, label %if.then, !dbg !17866

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #16, !dbg !17867
  store i32 22, i32* %call, align 4, !dbg !17869, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17870
  br label %return, !dbg !17870

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17871
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !17871, !ctir !1089
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !17873, !ctir !1085
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !17873, !ctir !378
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !17874
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !17875

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17876
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !17876, !ctir !1089
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !17877, !ctir !1085
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !17877, !ctir !378
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !17878
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !17879

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17880
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !17880, !ctir !1089
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !17882, !ctir !1085
  store i64 0, i64* %tv_sec, align 8, !dbg !17883, !ctir !376
  store i32 1, i32* %result, align 4, !dbg !17884
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17885
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !17885, !ctir !1089
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !17887, !ctir !1085
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !17887, !ctir !378
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !17888
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17889

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !17890
  %inc = add nsw i32 %23, 1, !dbg !17890
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !17890
  br label %if.end40, !dbg !17891

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !17892

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17893
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !17893, !ctir !1089
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !17895, !ctir !1085
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !17895, !ctir !378
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !17896
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !17897

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17898
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !17898, !ctir !1089
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !17899, !ctir !1085
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !17899, !ctir !378
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !17900
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !17901

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17902
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !17902, !ctir !1089
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !17904, !ctir !1085
  store i64 0, i64* %tv_sec51, align 8, !dbg !17905, !ctir !376
  store i32 1, i32* %result, align 4, !dbg !17906
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17907
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17907, !ctir !1089
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !17909, !ctir !1085
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !17909, !ctir !378
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !17910
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !17911

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !17912
  %inc56 = add nsw i32 %31, 1, !dbg !17912
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !17912
  br label %if.end57, !dbg !17913

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !17914

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !17915
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !17916
  %cmp59 = icmp eq i32 %33, 1, !dbg !17917
  %conv = zext i1 %cmp59 to i32, !dbg !17917
  %add = add nsw i32 %32, %conv, !dbg !17918
  store i32 %add, i32* %retval, align 4, !dbg !17919
  br label %return, !dbg !17919

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17920
  ret i32 %34, !dbg !17920
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !17921 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1089
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !17927, metadata !DIExpression()), !dbg !17928
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !17929, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !17931, metadata !DIExpression()), !dbg !17932
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17933
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !17934, !ctir !1089
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !17932
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17935
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17935, !ctir !1089
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17937, !ctir !1085
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !17937, !ctir !378
  %cmp = icmp eq i64 %3, 1073741822, !dbg !17938
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17939

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17940
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !17940, !ctir !1089
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17941, !ctir !1085
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !17941, !ctir !378
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !17942
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17943

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17944
  br label %return, !dbg !17944

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17945
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17945, !ctir !1089
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !17947, !ctir !1085
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !17947, !ctir !378
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !17948
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !17949

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17950
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17950, !ctir !1089
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !17951, !ctir !1085
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !17951, !ctir !378
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !17952
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17953

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17954
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !17956, !ctir !1089
  store i1 false, i1* %retval, align 1, !dbg !17957
  br label %return, !dbg !17957

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17958
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !17958, !ctir !1089
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !17960, !ctir !1085
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !17960, !ctir !378
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !17961
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !17962

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17963
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17963, !ctir !1089
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17964
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !17965
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17965
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !17965
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !17965
  store i64 %17, i64* %16, align 8, !dbg !17965
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !17965
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !17965
  store i64 %19, i64* %18, align 8, !dbg !17965
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !17965
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !17965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !17965
  br label %if.end24, !dbg !17963

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17966
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !17966, !ctir !1089
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !17968, !ctir !1085
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !17968, !ctir !378
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !17969
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !17970

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17971
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !17971, !ctir !1089
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !17972
  br label %if.end23, !dbg !17972

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17973
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17973, !ctir !1089
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17975, !ctir !1085
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !17975, !ctir !378
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !17976
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !17977

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17978
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17978, !ctir !1089
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17979
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !17980
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !17980
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !17980
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !17980
  store i64 %31, i64* %30, align 8, !dbg !17980
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !17980
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !17980
  store i64 %33, i64* %32, align 8, !dbg !17980
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !17980
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !17980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !17980
  br label %if.end39, !dbg !17978

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17981
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !17981, !ctir !1089
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !17983, !ctir !1085
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !17983, !ctir !378
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !17984
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !17985

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17986
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !17986, !ctir !1089
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !17987
  br label %if.end38, !dbg !17987

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !17988
  br label %return, !dbg !17988

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !17989
  ret i1 %39, !dbg !17989
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17990 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17993, metadata !DIExpression()), !dbg !17994
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17995, metadata !DIExpression()), !dbg !17996
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17997
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17998
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !17999
  ret i32 %call, !dbg !18000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18001 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1084
  %ts = alloca %struct.timespec*, align 8, !ctir !1089
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !17505
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18002, metadata !DIExpression()), !dbg !18003
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18004, metadata !DIExpression()), !dbg !18005
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !18006, metadata !DIExpression()), !dbg !18007
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !18008, metadata !DIExpression()), !dbg !18009
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18010
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !18010
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18010

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18011, !ctir !1084
  br label %cond.end, !dbg !18010

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !18010
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !18009
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !18012, metadata !DIExpression()), !dbg !18013
  store i32 0, i32* %adjustment_needed, align 4, !dbg !18013
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !18014, metadata !DIExpression()), !dbg !18015
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18016
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !18016
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18018

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18019, !ctir !1084
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18021
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18021, !ctir !17491
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !18021
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !18021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !18021
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !18022, !ctir !1084
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18023
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !18023, !ctir !17491
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !18023
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !18023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !18023
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18024
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !18025
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !18026
  br label %if.end, !dbg !18027

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !18028
  %cmp = icmp slt i32 %9, 0, !dbg !18030
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18031

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18032
  br label %return, !dbg !18032

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !18033
  %cmp7 = icmp sle i32 0, %10, !dbg !18035
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !18036

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18037, metadata !DIExpression()), !dbg !18039
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !18040
  %cmp9 = icmp eq i32 %11, 2, !dbg !18042
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !18043

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !18044
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #9, !dbg !18047
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18047
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18048

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !18049
  br label %return, !dbg !18049

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18050
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18050, !ctir !1089
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !18052, !ctir !1085
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !18052, !ctir !378
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !18053
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !18054

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18055
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !18055, !ctir !1089
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !18056
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18056
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !18056
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !18056
  store i64 %18, i64* %17, align 8, !dbg !18056
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !18056
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !18056
  store i64 %20, i64* %19, align 8, !dbg !18056
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !18056
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !18056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !18056
  br label %if.end28, !dbg !18055

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18057
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !18057, !ctir !1089
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18059, !ctir !1085
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !18059, !ctir !378
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !18060
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !18061

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18062
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18062, !ctir !1089
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18063
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !18063
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !18063
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !18063
  store i64 %28, i64* %27, align 8, !dbg !18063
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !18063
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !18063
  store i64 %30, i64* %29, align 8, !dbg !18063
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !18063
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !18063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !18063
  br label %if.end27, !dbg !18062

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !18064
  %inc = add nsw i32 %33, 1, !dbg !18064
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18064
  br label %if.end29, !dbg !18065

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !18066
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18067
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #9, !dbg !18068
  store i32 %call30, i32* %result, align 4, !dbg !18069
  %36 = load i32, i32* %result, align 4, !dbg !18070
  %cmp31 = icmp slt i32 0, %36, !dbg !18072
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18073

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #16, !dbg !18074
  store i32 38, i32* %call33, align 4, !dbg !18075, !ctir !5
  br label %if.end34, !dbg !18074

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !18076
  %cmp35 = icmp eq i32 %37, 0, !dbg !18078
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !18079

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #16, !dbg !18080
  %38 = load i32, i32* %call36, align 4, !dbg !18080, !ctir !5
  %cmp37 = icmp ne i32 %38, 38, !dbg !18081
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !18082

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18083
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !18085
  %39 = load i32, i32* %result, align 4, !dbg !18086
  store i32 %39, i32* %retval, align 4, !dbg !18087
  br label %return, !dbg !18087

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !18088

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18089
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !18090
  %tobool41 = icmp ne i32 %40, 0, !dbg !18090
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !18092

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !18093
  %cmp43 = icmp ne i32 %41, 3, !dbg !18096
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !18097

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !18098
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #9, !dbg !18099
  %tobool45 = icmp ne i32 %call44, 0, !dbg !18099
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !18100

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !18101
  br label %return, !dbg !18101

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18102
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !18102
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !18104

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18105
  br i1 %call50, label %if.then51, label %if.end52, !dbg !18106

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !18107
  br label %return, !dbg !18107

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !18108

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !18109
  %tobool54 = icmp ne i32 %44, 0, !dbg !18109
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !18111

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !18112
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #9, !dbg !18113
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18113
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !18114

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !18115
  br label %return, !dbg !18115

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !18116, !ctir !17505
  %46 = load i32, i32* %st_mode, align 8, !dbg !18116, !ctir !137
  %and = and i32 %46, 61440, !dbg !18116
  %cmp60 = icmp eq i32 %and, 40960, !dbg !18116
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !18118

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !18119
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18120
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !18121
  store i32 %call62, i32* %retval, align 4, !dbg !18122
  br label %return, !dbg !18122

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #16, !dbg !18123
  store i32 38, i32* %call64, align 4, !dbg !18124, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !18125
  br label %return, !dbg !18125

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !18126
  ret i32 %49, !dbg !18126
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !18127 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18133, metadata !DIExpression()), !dbg !18134
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18135, metadata !DIExpression()), !dbg !18136
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18137, metadata !DIExpression()), !dbg !18138
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18139, metadata !DIExpression()), !dbg !18140
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18141, metadata !DIExpression()), !dbg !18142
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18143, metadata !DIExpression()), !dbg !18144
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18145
  %tobool = icmp ne i8* %0, null, !dbg !18145
  br i1 %tobool, label %if.then, label %if.else, !dbg !18147

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18148
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18149
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18150
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18151
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.410, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18152
  br label %if.end, !dbg !18152

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18153
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18154
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18155
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.411, i64 0, i64 0), i8* %6, i8* %7), !dbg !18156
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18157
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.412, i64 0, i64 0)) #9, !dbg !18158
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18159
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18160
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !18160
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18161
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.414, i64 0, i64 0)) #9, !dbg !18162
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.415, i64 0, i64 0)), !dbg !18163
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18164
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !18164
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !18165
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !18166

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18167

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18169
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.416, i64 0, i64 0)) #9, !dbg !18170
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !18171
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !18171, !ctir !1125
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !18171
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !18172
  br label %sw.epilog, !dbg !18173

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18174
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.417, i64 0, i64 0)) #9, !dbg !18175
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18176
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !18176, !ctir !1125
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !18176
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !18177
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !18177, !ctir !1125
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !18177
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !18178
  br label %sw.epilog, !dbg !18179

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18180
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.418, i64 0, i64 0)) #9, !dbg !18181
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18182
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !18182, !ctir !1125
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !18182
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18183
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !18183, !ctir !1125
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !18183
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !18184
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !18184, !ctir !1125
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !18184
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !18185
  br label %sw.epilog, !dbg !18186

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18187
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.419, i64 0, i64 0)) #9, !dbg !18188
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18189
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !18189, !ctir !1125
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !18189
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18190
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !18190, !ctir !1125
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !18190
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18191
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !18191, !ctir !1125
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !18191
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !18192
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !18192, !ctir !1125
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !18192
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !18193
  br label %sw.epilog, !dbg !18194

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18195
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.420, i64 0, i64 0)) #9, !dbg !18196
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18197
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !18197, !ctir !1125
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !18197
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18198
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !18198, !ctir !1125
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !18198
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18199
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !18199, !ctir !1125
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !18199
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18200
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !18200, !ctir !1125
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !18200
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !18201
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !18201, !ctir !1125
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !18201
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !18202
  br label %sw.epilog, !dbg !18203

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18204
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.421, i64 0, i64 0)) #9, !dbg !18205
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18206
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !18206, !ctir !1125
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !18206
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18207
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !18207, !ctir !1125
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !18207
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18208
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !18208, !ctir !1125
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !18208
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18209
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !18209, !ctir !1125
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !18209
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18210
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !18210, !ctir !1125
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !18210
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !18211
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !18211, !ctir !1125
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !18211
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !18212
  br label %sw.epilog, !dbg !18213

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18214
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.422, i64 0, i64 0)) #9, !dbg !18215
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18216
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !18216, !ctir !1125
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !18216
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18217
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !18217, !ctir !1125
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !18217
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18218
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !18218, !ctir !1125
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !18218
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18219
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !18219, !ctir !1125
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !18219
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18220
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !18220, !ctir !1125
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !18220
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18221
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !18221, !ctir !1125
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !18221
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !18222
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !18222, !ctir !1125
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !18222
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !18223
  br label %sw.epilog, !dbg !18224

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18225
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.423, i64 0, i64 0)) #9, !dbg !18226
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18227
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !18227, !ctir !1125
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !18227
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18228
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !18228, !ctir !1125
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !18228
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18229
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !18229, !ctir !1125
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !18229
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18230
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !18230, !ctir !1125
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !18230
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18231
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !18231, !ctir !1125
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !18231
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18232
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !18232, !ctir !1125
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !18232
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18233
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !18233, !ctir !1125
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !18233
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !18234
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !18234, !ctir !1125
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !18234
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !18235
  br label %sw.epilog, !dbg !18236

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18237
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.424, i64 0, i64 0)) #9, !dbg !18238
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18239
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !18239, !ctir !1125
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !18239
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18240
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !18240, !ctir !1125
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !18240
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18241
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !18241, !ctir !1125
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !18241
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18242
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !18242, !ctir !1125
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !18242
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18243
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !18243, !ctir !1125
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !18243
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18244
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !18244, !ctir !1125
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !18244
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18245
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !18245, !ctir !1125
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !18245
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18246
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !18246, !ctir !1125
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !18246
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !18247
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !18247, !ctir !1125
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !18247
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !18248
  br label %sw.epilog, !dbg !18249

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18250
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.425, i64 0, i64 0)) #9, !dbg !18251
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18252
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !18252, !ctir !1125
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !18252
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18253
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !18253, !ctir !1125
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !18253
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18254
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !18254, !ctir !1125
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !18254
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18255
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !18255, !ctir !1125
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !18255
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18256
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !18256, !ctir !1125
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !18256
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18257
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !18257, !ctir !1125
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !18257
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18258
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !18258, !ctir !1125
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !18258
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18259
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !18259, !ctir !1125
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !18259
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !18260
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !18260, !ctir !1125
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !18260
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !18261
  br label %sw.epilog, !dbg !18262

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !18263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !18264 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18267, metadata !DIExpression()), !dbg !18268
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18269, metadata !DIExpression()), !dbg !18270
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18271, metadata !DIExpression()), !dbg !18272
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18273, metadata !DIExpression()), !dbg !18274
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18275, metadata !DIExpression()), !dbg !18276
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18277, metadata !DIExpression()), !dbg !18278
  store i64 0, i64* %n_authors, align 8, !dbg !18279
  br label %for.cond, !dbg !18281

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18282
  %1 = load i64, i64* %n_authors, align 8, !dbg !18284
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18282, !ctir !1125
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18282
  %tobool = icmp ne i8* %2, null, !dbg !18285
  br i1 %tobool, label %for.body, label %for.end, !dbg !18285

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18285

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18286
  %inc = add i64 %3, 1, !dbg !18286
  store i64 %inc, i64* %n_authors, align 8, !dbg !18286
  br label %for.cond, !dbg !18287, !llvm.loop !18288

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18290
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18291
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18292
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18293
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18294
  %9 = load i64, i64* %n_authors, align 8, !dbg !18295
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18296
  ret void, !dbg !18297
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !18298 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !52
  %authtab = alloca [10 x i8*], align 16, !ctir !1449
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18302, metadata !DIExpression()), !dbg !18303
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18304, metadata !DIExpression()), !dbg !18305
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18306, metadata !DIExpression()), !dbg !18307
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18308, metadata !DIExpression()), !dbg !18309
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18310, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18312, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18314, metadata !DIExpression()), !dbg !18315
  store i64 0, i64* %n_authors, align 8, !dbg !18316
  br label %for.cond, !dbg !18318

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18319
  %cmp = icmp ult i64 %0, 10, !dbg !18321
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18322

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18323
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18323
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18323
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18323
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18323

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18323
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18323
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18323
  %4 = bitcast i8* %3 to i8**, !dbg !18323
  %5 = add i32 %gp_offset, 8, !dbg !18323
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18323
  br label %vaarg.end, !dbg !18323

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18323
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18323
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18323
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18323
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18323
  br label %vaarg.end, !dbg !18323

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18323
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18323
  %8 = load i64, i64* %n_authors, align 8, !dbg !18324
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18325, !ctir !1449
  store i8* %7, i8** %arrayidx, align 8, !dbg !18326
  %cmp1 = icmp ne i8* %7, null, !dbg !18327
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18328
  br i1 %9, label %for.body, label %for.end, !dbg !18329

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18329

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18330
  %inc = add i64 %10, 1, !dbg !18330
  store i64 %inc, i64* %n_authors, align 8, !dbg !18330
  br label %for.cond, !dbg !18331, !llvm.loop !18332

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18334
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !18335
  %13 = load i8*, i8** %package.addr, align 8, !dbg !18336
  %14 = load i8*, i8** %version.addr, align 8, !dbg !18337
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !18338, !ctir !1449
  %15 = load i64, i64* %n_authors, align 8, !dbg !18339
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !18340
  ret void, !dbg !18341
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !18342 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1450
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18345, metadata !DIExpression()), !dbg !18346
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18347, metadata !DIExpression()), !dbg !18348
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18349, metadata !DIExpression()), !dbg !18350
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18351, metadata !DIExpression()), !dbg !18352
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !18353, metadata !DIExpression()), !dbg !18354
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18355, !ctir !1450
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18355
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18355
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18356
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !18357
  %2 = load i8*, i8** %package.addr, align 8, !dbg !18358
  %3 = load i8*, i8** %version.addr, align 8, !dbg !18359
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18360, !ctir !1450
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !18361
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18362, !ctir !1450
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18362
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18362
  ret void, !dbg !18363
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !18364 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18365
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !18365
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.428, i64 0, i64 0)) #9, !dbg !18366
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.429, i64 0, i64 0)), !dbg !18367
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.430, i64 0, i64 0)) #9, !dbg !18368
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.431, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.432, i64 0, i64 0)), !dbg !18369
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.433, i64 0, i64 0)) #9, !dbg !18370
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.434, i64 0, i64 0)), !dbg !18371
  ret void, !dbg !18372
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1111 {
entry:
  %can = alloca i8, align 1, !ctir !139
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !18373
  %tobool = trunc i8 %0 to i1, !dbg !18373
  br i1 %tobool, label %if.end, label %if.then, !dbg !18375

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !18376, metadata !DIExpression()), !dbg !18378
  store i8 0, i8* %can, align 1, !dbg !18378
  %call = call i32 @geteuid() #9, !dbg !18379
  %cmp = icmp eq i32 %call, 0, !dbg !18380
  %frombool = zext i1 %cmp to i8, !dbg !18381
  store i8 %frombool, i8* %can, align 1, !dbg !18381
  %1 = load i8, i8* %can, align 1, !dbg !18382
  %tobool1 = trunc i8 %1 to i1, !dbg !18382
  %frombool2 = zext i1 %tobool1 to i8, !dbg !18383
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !18383
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !18384
  br label %if.end, !dbg !18385

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !18386
  %tobool3 = trunc i8 %2 to i1, !dbg !18386
  ret i1 %tobool3, !dbg !18387
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !18388 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18392, metadata !DIExpression()), !dbg !18393
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18394, metadata !DIExpression()), !dbg !18395
  %0 = load i64, i64* %s.addr, align 8, !dbg !18396
  %div = udiv i64 9223372036854775807, %0, !dbg !18396
  %1 = load i64, i64* %n.addr, align 8, !dbg !18396
  %cmp = icmp ult i64 %div, %1, !dbg !18396
  br i1 %cmp, label %if.then, label %if.end, !dbg !18398

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18399
  unreachable, !dbg !18399

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18400
  %3 = load i64, i64* %s.addr, align 8, !dbg !18401
  %mul = mul i64 %2, %3, !dbg !18402
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !18403
  ret i8* %call, !dbg !18404
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !18405 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18409, metadata !DIExpression()), !dbg !18410
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18411, metadata !DIExpression()), !dbg !18412
  %0 = load i64, i64* %n.addr, align 8, !dbg !18413
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !18414
  store i8* %call, i8** %p, align 8, !dbg !18412
  %1 = load i8*, i8** %p, align 8, !dbg !18415
  %tobool = icmp ne i8* %1, null, !dbg !18415
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18417

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18418
  %cmp = icmp ne i64 %2, 0, !dbg !18419
  br i1 %cmp, label %if.then, label %if.end, !dbg !18420

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !18421
  unreachable, !dbg !18421

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !18422
  ret i8* %3, !dbg !18423
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !18424 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18427, metadata !DIExpression()), !dbg !18428
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18429, metadata !DIExpression()), !dbg !18430
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18431, metadata !DIExpression()), !dbg !18432
  %0 = load i64, i64* %s.addr, align 8, !dbg !18433
  %div = udiv i64 9223372036854775807, %0, !dbg !18433
  %1 = load i64, i64* %n.addr, align 8, !dbg !18433
  %cmp = icmp ult i64 %div, %1, !dbg !18433
  br i1 %cmp, label %if.then, label %if.end, !dbg !18435

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18436
  unreachable, !dbg !18436

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18437
  %3 = load i64, i64* %n.addr, align 8, !dbg !18438
  %4 = load i64, i64* %s.addr, align 8, !dbg !18439
  %mul = mul i64 %3, %4, !dbg !18440
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !18441
  ret i8* %call, !dbg !18442
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !18443 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18446, metadata !DIExpression()), !dbg !18447
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18448, metadata !DIExpression()), !dbg !18449
  %0 = load i64, i64* %n.addr, align 8, !dbg !18450
  %tobool = icmp ne i64 %0, 0, !dbg !18450
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18452

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18453
  %tobool1 = icmp ne i8* %1, null, !dbg !18453
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18454

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18455
  call void @free(i8* %2) #9, !dbg !18457
  store i8* null, i8** %retval, align 8, !dbg !18458
  br label %return, !dbg !18458

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !18459
  %4 = load i64, i64* %n.addr, align 8, !dbg !18460
  %call = call i8* @realloc(i8* %3, i64 %4) #9, !dbg !18461
  store i8* %call, i8** %p.addr, align 8, !dbg !18462
  %5 = load i8*, i8** %p.addr, align 8, !dbg !18463
  %tobool2 = icmp ne i8* %5, null, !dbg !18463
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !18465

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18466
  %tobool4 = icmp ne i64 %6, 0, !dbg !18466
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18467

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !18468
  unreachable, !dbg !18468

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !18469
  store i8* %7, i8** %retval, align 8, !dbg !18470
  br label %return, !dbg !18470

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !18471
  ret i8* %8, !dbg !18471
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !18472 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18475, metadata !DIExpression()), !dbg !18476
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18477, metadata !DIExpression()), !dbg !18478
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18479, metadata !DIExpression()), !dbg !18480
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18481, metadata !DIExpression()), !dbg !18482
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !18483
  %1 = load i64, i64* %0, align 8, !dbg !18484, !ctir !52
  store i64 %1, i64* %n, align 8, !dbg !18482
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18485
  %tobool = icmp ne i8* %2, null, !dbg !18485
  br i1 %tobool, label %if.else, label %if.then, !dbg !18487

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !18488
  %tobool1 = icmp ne i64 %3, 0, !dbg !18488
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !18491

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !18492
  %div = udiv i64 128, %4, !dbg !18494
  store i64 %div, i64* %n, align 8, !dbg !18495
  %5 = load i64, i64* %n, align 8, !dbg !18496
  %tobool3 = icmp ne i64 %5, 0, !dbg !18497
  %lnot = xor i1 %tobool3, true, !dbg !18497
  %lnot.ext = zext i1 %lnot to i32, !dbg !18497
  %conv = sext i32 %lnot.ext to i64, !dbg !18497
  %6 = load i64, i64* %n, align 8, !dbg !18498
  %add = add i64 %6, %conv, !dbg !18498
  store i64 %add, i64* %n, align 8, !dbg !18498
  br label %if.end, !dbg !18499

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18500
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18500
  %8 = load i64, i64* %n, align 8, !dbg !18500
  %cmp = icmp ult i64 %div4, %8, !dbg !18500
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18502

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !18503
  unreachable, !dbg !18503

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18504

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18505
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18508
  %10 = load i64, i64* %n, align 8, !dbg !18509
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18510
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18511

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !18512
  unreachable, !dbg !18512

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18513
  %div13 = udiv i64 %11, 2, !dbg !18514
  %add14 = add i64 %div13, 1, !dbg !18515
  %12 = load i64, i64* %n, align 8, !dbg !18516
  %add15 = add i64 %12, %add14, !dbg !18516
  store i64 %add15, i64* %n, align 8, !dbg !18516
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18517
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18518
  store i64 %13, i64* %14, align 8, !dbg !18519, !ctir !52
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18520
  %16 = load i64, i64* %n, align 8, !dbg !18521
  %17 = load i64, i64* %s.addr, align 8, !dbg !18522
  %mul = mul i64 %16, %17, !dbg !18523
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18524
  ret i8* %call, !dbg !18525
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18526 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18529, metadata !DIExpression()), !dbg !18530
  %0 = load i64, i64* %n.addr, align 8, !dbg !18531
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18531
  ret i8* %call, !dbg !18532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18533 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18536, metadata !DIExpression()), !dbg !18537
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18538, metadata !DIExpression()), !dbg !18539
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18540
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18541
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18542
  ret i8* %call, !dbg !18543
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18544 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18545, metadata !DIExpression()), !dbg !18546
  %0 = load i64, i64* %s.addr, align 8, !dbg !18547
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18548
  %1 = load i64, i64* %s.addr, align 8, !dbg !18549
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18550
  ret i8* %call, !dbg !18551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18552 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18553, metadata !DIExpression()), !dbg !18554
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18557, metadata !DIExpression()), !dbg !18558
  %0 = load i64, i64* %s.addr, align 8, !dbg !18559
  %div = udiv i64 9223372036854775807, %0, !dbg !18559
  %1 = load i64, i64* %n.addr, align 8, !dbg !18559
  %cmp = icmp ult i64 %div, %1, !dbg !18559
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18561

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18562
  %3 = load i64, i64* %s.addr, align 8, !dbg !18563
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #9, !dbg !18564
  store i8* %call, i8** %p, align 8, !dbg !18565
  %tobool = icmp ne i8* %call, null, !dbg !18565
  br i1 %tobool, label %if.end, label %if.then, !dbg !18566

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !18567
  unreachable, !dbg !18567

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !18568
  ret i8* %4, !dbg !18569
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !18570 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18571, metadata !DIExpression()), !dbg !18572
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18573, metadata !DIExpression()), !dbg !18574
  %0 = load i64, i64* %s.addr, align 8, !dbg !18575
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18576
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18577
  %2 = load i64, i64* %s.addr, align 8, !dbg !18578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !18579
  ret i8* %call, !dbg !18580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !18581 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !18582, metadata !DIExpression()), !dbg !18583
  %0 = load i8*, i8** %string.addr, align 8, !dbg !18584
  %1 = load i8*, i8** %string.addr, align 8, !dbg !18585
  %call = call i64 @strlen(i8* %1) #14, !dbg !18586
  %add = add i64 %call, 1, !dbg !18587
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18588
  ret i8* %call1, !dbg !18589
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18590 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18592
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.457, i64 0, i64 0)) #9, !dbg !18593
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.458, i64 0, i64 0), i8* %call), !dbg !18594
  call void @abort() #13, !dbg !18595
  unreachable, !dbg !18595
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18596 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !7
  %p = alloca i8**, align 8, !ctir !206
  %tmp = alloca i64, align 8, !ctir !54
  %err = alloca i32, align 4, !ctir !1516
  %q = alloca i8*, align 8, !ctir !180
  %ch = alloca i8, align 1, !ctir !585
  %base = alloca i32, align 4, !ctir !5
  %suffixes = alloca i32, align 4, !ctir !5
  %overflow = alloca i32, align 4, !ctir !1516
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18601, metadata !DIExpression()), !dbg !18602
  store i8** %ptr, i8*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18603, metadata !DIExpression()), !dbg !18604
  store i32 %strtol_base, i32* %strtol_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18605, metadata !DIExpression()), !dbg !18606
  store i64* %val, i64** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18607, metadata !DIExpression()), !dbg !18608
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18609, metadata !DIExpression()), !dbg !18610
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18611, metadata !DIExpression()), !dbg !18612
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18613, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18615, metadata !DIExpression()), !dbg !18616
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18617, metadata !DIExpression()), !dbg !18618
  store i32 0, i32* %err, align 4, !dbg !18618
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18619
  %cmp = icmp sle i32 0, %0, !dbg !18619
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !18619

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18619
  %cmp1 = icmp sle i32 %1, 36, !dbg !18619
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !18619

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18619

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.462, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !18619
  unreachable, !dbg !18619

2:                                                ; No predecessors!
  br label %cond.end, !dbg !18619

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18620
  %tobool = icmp ne i8** %3, null, !dbg !18620
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !18620

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !18621
  br label %cond.end4, !dbg !18620

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !18620

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !18620
  store i8** %cond, i8*** %p, align 8, !dbg !18622
  %call = call i32* @__errno_location() #16, !dbg !18623
  store i32 0, i32* %call, align 4, !dbg !18624, !ctir !5
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18625, metadata !DIExpression()), !dbg !18628
  %5 = load i8*, i8** %s.addr, align 8, !dbg !18629
  store i8* %5, i8** %q, align 8, !dbg !18628
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18630, metadata !DIExpression()), !dbg !18631
  %6 = load i8*, i8** %q, align 8, !dbg !18632
  %7 = load i8, i8* %6, align 1, !dbg !18633, !ctir !181
  store i8 %7, i8* %ch, align 1, !dbg !18631
  br label %while.cond, !dbg !18634

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #16, !dbg !18635
  %8 = load i16*, i16** %call5, align 8, !dbg !18635, !ctir !942
  %9 = load i8, i8* %ch, align 1, !dbg !18635
  %conv = zext i8 %9 to i32, !dbg !18635
  %idxprom = sext i32 %conv to i64, !dbg !18635
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !18635, !ctir !942
  %10 = load i16, i16* %arrayidx, align 2, !dbg !18635
  %conv6 = zext i16 %10 to i32, !dbg !18635
  %and = and i32 %conv6, 8192, !dbg !18635
  %tobool7 = icmp ne i32 %and, 0, !dbg !18634
  br i1 %tobool7, label %while.body, label %while.end, !dbg !18634

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !18636
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !18636, !ctir !181
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18636
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !18637, !ctir !181
  store i8 %12, i8* %ch, align 1, !dbg !18638
  br label %while.cond, !dbg !18634, !llvm.loop !18639

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !18641
  %conv8 = zext i8 %13 to i32, !dbg !18641
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !18643
  br i1 %cmp9, label %if.then, label %if.end, !dbg !18644

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18645
  br label %return, !dbg !18645

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !18646
  %15 = load i8**, i8*** %p, align 8, !dbg !18647
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !18648
  %call11 = call i64 @strtoul(i8* %14, i8** %15, i32 %16) #9, !dbg !18649
  store i64 %call11, i64* %tmp, align 8, !dbg !18650
  %17 = load i8**, i8*** %p, align 8, !dbg !18651
  %18 = load i8*, i8** %17, align 8, !dbg !18653, !ctir !7
  %19 = load i8*, i8** %s.addr, align 8, !dbg !18654
  %cmp12 = icmp eq i8* %18, %19, !dbg !18655
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !18656

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18657
  %tobool15 = icmp ne i8* %20, null, !dbg !18657
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !18660

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !18661
  %22 = load i8*, i8** %21, align 8, !dbg !18662, !ctir !7
  %23 = load i8, i8* %22, align 1, !dbg !18663, !ctir !8
  %conv17 = sext i8 %23 to i32, !dbg !18663
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !18663
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !18664

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18665
  %25 = load i8**, i8*** %p, align 8, !dbg !18666
  %26 = load i8*, i8** %25, align 8, !dbg !18667, !ctir !7
  %27 = load i8, i8* %26, align 1, !dbg !18668, !ctir !8
  %conv20 = sext i8 %27 to i32, !dbg !18668
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #14, !dbg !18669
  %tobool22 = icmp ne i8* %call21, null, !dbg !18669
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !18670

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !18671
  br label %if.end24, !dbg !18672

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !18673
  br label %return, !dbg !18673

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !18674

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #16, !dbg !18675
  %28 = load i32, i32* %call26, align 4, !dbg !18675, !ctir !5
  %cmp27 = icmp ne i32 %28, 0, !dbg !18677
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18678

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18679
  %29 = load i32, i32* %call30, align 4, !dbg !18679, !ctir !5
  %cmp31 = icmp ne i32 %29, 34, !dbg !18682
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18683

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18684
  br label %return, !dbg !18684

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18685
  br label %if.end35, !dbg !18686

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18687
  %tobool37 = icmp ne i8* %30, null, !dbg !18687
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18689

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !18690
  %32 = load i64*, i64** %val.addr, align 8, !dbg !18692
  store i64 %31, i64* %32, align 8, !dbg !18693, !ctir !54
  %33 = load i32, i32* %err, align 4, !dbg !18694
  store i32 %33, i32* %retval, align 4, !dbg !18695
  br label %return, !dbg !18695

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !18696
  %35 = load i8*, i8** %34, align 8, !dbg !18698, !ctir !7
  %36 = load i8, i8* %35, align 1, !dbg !18699, !ctir !8
  %conv40 = sext i8 %36 to i32, !dbg !18699
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18700
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18701

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18702, metadata !DIExpression()), !dbg !18704
  store i32 1024, i32* %base, align 4, !dbg !18704
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18705, metadata !DIExpression()), !dbg !18706
  store i32 1, i32* %suffixes, align 4, !dbg !18706
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18707, metadata !DIExpression()), !dbg !18708
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18709
  %38 = load i8**, i8*** %p, align 8, !dbg !18711
  %39 = load i8*, i8** %38, align 8, !dbg !18712, !ctir !7
  %40 = load i8, i8* %39, align 1, !dbg !18713, !ctir !8
  %conv44 = sext i8 %40 to i32, !dbg !18713
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #14, !dbg !18714
  %tobool46 = icmp ne i8* %call45, null, !dbg !18714
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18715

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !18716
  %42 = load i64*, i64** %val.addr, align 8, !dbg !18718
  store i64 %41, i64* %42, align 8, !dbg !18719, !ctir !54
  %43 = load i32, i32* %err, align 4, !dbg !18720
  %or = or i32 %43, 2, !dbg !18721
  store i32 %or, i32* %retval, align 4, !dbg !18722
  br label %return, !dbg !18722

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !18723
  %45 = load i8*, i8** %44, align 8, !dbg !18724, !ctir !7
  %46 = load i8, i8* %45, align 1, !dbg !18725, !ctir !8
  %conv49 = sext i8 %46 to i32, !dbg !18725
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18726

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18727
  %call50 = call i8* @strchr(i8* %47, i32 48) #14, !dbg !18730
  %tobool51 = icmp ne i8* %call50, null, !dbg !18730
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18731

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !18732
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !18732, !ctir !206
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !18732
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !18732, !ctir !7
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !18732
  %conv55 = sext i8 %50 to i32, !dbg !18732
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18733

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !18734
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !18734, !ctir !206
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !18734
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !18734, !ctir !7
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !18734
  %conv59 = sext i8 %53 to i32, !dbg !18734
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18737
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18738

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !18739
  %add = add nsw i32 %54, 2, !dbg !18739
  store i32 %add, i32* %suffixes, align 4, !dbg !18739
  br label %if.end63, !dbg !18740

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18741

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18742
  %55 = load i32, i32* %suffixes, align 4, !dbg !18743
  %inc = add nsw i32 %55, 1, !dbg !18743
  store i32 %inc, i32* %suffixes, align 4, !dbg !18743
  br label %sw.epilog, !dbg !18744

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18745

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18746

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !18747
  %57 = load i8*, i8** %56, align 8, !dbg !18748, !ctir !7
  %58 = load i8, i8* %57, align 1, !dbg !18749, !ctir !8
  %conv67 = sext i8 %58 to i32, !dbg !18749
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18750

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !18751
  store i32 %call69, i32* %overflow, align 4, !dbg !18753
  br label %sw.epilog92, !dbg !18754

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !18755
  store i32 %call71, i32* %overflow, align 4, !dbg !18756
  br label %sw.epilog92, !dbg !18757

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18758
  br label %sw.epilog92, !dbg !18759

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18760
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 6), !dbg !18761
  store i32 %call74, i32* %overflow, align 4, !dbg !18762
  br label %sw.epilog92, !dbg !18763

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18764
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 3), !dbg !18765
  store i32 %call76, i32* %overflow, align 4, !dbg !18766
  br label %sw.epilog92, !dbg !18767

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18768
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 1), !dbg !18769
  store i32 %call78, i32* %overflow, align 4, !dbg !18770
  br label %sw.epilog92, !dbg !18771

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18772
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 2), !dbg !18773
  store i32 %call80, i32* %overflow, align 4, !dbg !18774
  br label %sw.epilog92, !dbg !18775

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18776
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 5), !dbg !18777
  store i32 %call82, i32* %overflow, align 4, !dbg !18778
  br label %sw.epilog92, !dbg !18779

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18780
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 4), !dbg !18781
  store i32 %call84, i32* %overflow, align 4, !dbg !18782
  br label %sw.epilog92, !dbg !18783

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !18784
  store i32 %call86, i32* %overflow, align 4, !dbg !18785
  br label %sw.epilog92, !dbg !18786

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18787
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 8), !dbg !18788
  store i32 %call88, i32* %overflow, align 4, !dbg !18789
  br label %sw.epilog92, !dbg !18790

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !18791
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %66, i32 7), !dbg !18792
  store i32 %call90, i32* %overflow, align 4, !dbg !18793
  br label %sw.epilog92, !dbg !18794

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !18795
  %68 = load i64*, i64** %val.addr, align 8, !dbg !18796
  store i64 %67, i64* %68, align 8, !dbg !18797, !ctir !54
  %69 = load i32, i32* %err, align 4, !dbg !18798
  %or91 = or i32 %69, 2, !dbg !18799
  store i32 %or91, i32* %retval, align 4, !dbg !18800
  br label %return, !dbg !18800

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !18801
  %71 = load i32, i32* %err, align 4, !dbg !18802
  %or93 = or i32 %71, %70, !dbg !18802
  store i32 %or93, i32* %err, align 4, !dbg !18802
  %72 = load i32, i32* %suffixes, align 4, !dbg !18803
  %73 = load i8**, i8*** %p, align 8, !dbg !18804
  %74 = load i8*, i8** %73, align 8, !dbg !18805, !ctir !7
  %idx.ext = sext i32 %72 to i64, !dbg !18805
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !18805, !ctir !8
  store i8* %add.ptr, i8** %73, align 8, !dbg !18805, !ctir !7
  %75 = load i8**, i8*** %p, align 8, !dbg !18806
  %76 = load i8*, i8** %75, align 8, !dbg !18808, !ctir !7
  %77 = load i8, i8* %76, align 1, !dbg !18809, !ctir !8
  %tobool94 = icmp ne i8 %77, 0, !dbg !18809
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18810

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !18811
  %or96 = or i32 %78, 2, !dbg !18811
  store i32 %or96, i32* %err, align 4, !dbg !18811
  br label %if.end97, !dbg !18812

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18813

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !18814
  %80 = load i64*, i64** %val.addr, align 8, !dbg !18815
  store i64 %79, i64* %80, align 8, !dbg !18816, !ctir !54
  %81 = load i32, i32* %err, align 4, !dbg !18817
  store i32 %81, i32* %retval, align 4, !dbg !18818
  br label %return, !dbg !18818

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !18819
  ret i32 %82, !dbg !18819
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !18820 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18823, metadata !DIExpression()), !dbg !18824
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18827
  %conv = sext i32 %0 to i64, !dbg !18827
  %div = udiv i64 -1, %conv, !dbg !18829
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18830
  %2 = load i64, i64* %1, align 8, !dbg !18831, !ctir !54
  %cmp = icmp ult i64 %div, %2, !dbg !18832
  br i1 %cmp, label %if.then, label %if.end, !dbg !18833

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18834
  store i64 -1, i64* %3, align 8, !dbg !18836, !ctir !54
  store i32 1, i32* %retval, align 4, !dbg !18837
  br label %return, !dbg !18837

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18838
  %conv2 = sext i32 %4 to i64, !dbg !18838
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18839
  %6 = load i64, i64* %5, align 8, !dbg !18840, !ctir !54
  %mul = mul i64 %6, %conv2, !dbg !18840
  store i64 %mul, i64* %5, align 8, !dbg !18840, !ctir !54
  store i32 0, i32* %retval, align 4, !dbg !18841
  br label %return, !dbg !18841

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18842
  ret i32 %7, !dbg !18842
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !18843 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1516
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18846, metadata !DIExpression()), !dbg !18847
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18848, metadata !DIExpression()), !dbg !18849
  store i32 %power, i32* %power.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18850, metadata !DIExpression()), !dbg !18851
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18852, metadata !DIExpression()), !dbg !18853
  store i32 0, i32* %err, align 4, !dbg !18853
  br label %while.cond, !dbg !18854

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18855
  %dec = add nsw i32 %0, -1, !dbg !18855
  store i32 %dec, i32* %power.addr, align 4, !dbg !18855
  %tobool = icmp ne i32 %0, 0, !dbg !18854
  br i1 %tobool, label %while.body, label %while.end, !dbg !18854

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18856
  %2 = load i32, i32* %base.addr, align 4, !dbg !18857
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !18858
  %3 = load i32, i32* %err, align 4, !dbg !18859
  %or = or i32 %3, %call, !dbg !18859
  store i32 %or, i32* %err, align 4, !dbg !18859
  br label %while.cond, !dbg !18854, !llvm.loop !18860

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18862
  ret i32 %4, !dbg !18863
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !18864 {
entry:
  %yes = alloca i8, align 1, !ctir !139
  %response = alloca i8*, align 8, !ctir !7
  %response_size = alloca i64, align 8, !ctir !52
  %response_len = alloca i64, align 8, !ctir !661
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !18866, metadata !DIExpression()), !dbg !18867
  call void @llvm.dbg.declare(metadata i8** %response, metadata !18868, metadata !DIExpression()), !dbg !18869
  store i8* null, i8** %response, align 8, !dbg !18869
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !18870, metadata !DIExpression()), !dbg !18871
  store i64 0, i64* %response_size, align 8, !dbg !18871
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !18872, metadata !DIExpression()), !dbg !18873
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !18874
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !18875
  store i64 %call, i64* %response_len, align 8, !dbg !18873
  %1 = load i64, i64* %response_len, align 8, !dbg !18876
  %cmp = icmp sle i64 %1, 0, !dbg !18878
  br i1 %cmp, label %if.then, label %if.else, !dbg !18879

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !18880
  br label %if.end9, !dbg !18881

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !18882
  %3 = load i64, i64* %response_len, align 8, !dbg !18885
  %sub = sub nsw i64 %3, 1, !dbg !18886
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !18882, !ctir !7
  %4 = load i8, i8* %arrayidx, align 1, !dbg !18882
  %conv = sext i8 %4 to i32, !dbg !18882
  %cmp1 = icmp eq i32 %conv, 10, !dbg !18887
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !18888

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !18889
  %6 = load i64, i64* %response_len, align 8, !dbg !18890
  %sub4 = sub nsw i64 %6, 1, !dbg !18891
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !18889, !ctir !7
  store i8 0, i8* %arrayidx5, align 1, !dbg !18892
  br label %if.end, !dbg !18889

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !18893
  %call6 = call i32 @rpmatch(i8* %7) #9, !dbg !18894
  %cmp7 = icmp slt i32 0, %call6, !dbg !18895
  %frombool = zext i1 %cmp7 to i8, !dbg !18896
  store i8 %frombool, i8* %yes, align 1, !dbg !18896
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !18897
  call void @free(i8* %8) #9, !dbg !18898
  %9 = load i8, i8* %yes, align 1, !dbg !18899
  %tobool = trunc i8 %9 to i1, !dbg !18899
  ret i1 %tobool, !dbg !18900
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !18901 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18906, metadata !DIExpression()), !dbg !18907
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18908
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !18910
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18911

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18912
  %call = call i32 @__freading(%struct._IO_FILE* %1) #9, !dbg !18912
  %cmp1 = icmp ne i32 %call, 0, !dbg !18912
  br i1 %cmp1, label %if.end, label %if.then, !dbg !18913

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18914
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !18915
  store i32 %call2, i32* %retval, align 4, !dbg !18916
  br label %return, !dbg !18916

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18917
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !18918
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18919
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !18920
  store i32 %call3, i32* %retval, align 4, !dbg !18921
  br label %return, !dbg !18921

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !18922
  ret i32 %5, !dbg !18922
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !18923 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18926, metadata !DIExpression()), !dbg !18927
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18928
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !18930, !ctir !1561
  %1 = load i32, i32* %_flags, align 8, !dbg !18930, !ctir !5
  %and = and i32 %1, 256, !dbg !18931
  %tobool = icmp ne i32 %and, 0, !dbg !18931
  br i1 %tobool, label %if.then, label %if.end, !dbg !18932

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18933
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !18934
  br label %if.end, !dbg !18934

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18935
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #10 !dbg !18936 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18941, metadata !DIExpression()), !dbg !18942
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18943
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !18945, !ctir !1603
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18945, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18946
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !18947, !ctir !1603
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !18947, !ctir !7
  %cmp = icmp ugt i8* %1, %3, !dbg !18948
  br i1 %cmp, label %if.then, label %if.end, !dbg !18949

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !18950
  br label %return, !dbg !18950

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18951
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !18952, !ctir !1603
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !18952, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18953
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !18954, !ctir !1603
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18954, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !18955
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !18955
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18955
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18956
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !18957, !ctir !1603
  %9 = load i32, i32* %_flags, align 8, !dbg !18957, !ctir !5
  %and = and i32 %9, 256, !dbg !18958
  %tobool = icmp ne i32 %and, 0, !dbg !18958
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18956

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18959
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !18960, !ctir !1603
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !18960, !ctir !7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18961
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !18962, !ctir !1603
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !18962, !ctir !7
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !18963
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !18963
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !18963
  br label %cond.end, !dbg !18956

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18956

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !18956
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !18964
  store i64 %add, i64* %retval, align 8, !dbg !18965
  br label %return, !dbg !18965

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !18966
  ret i64 %14, !dbg !18966
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18967 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !437
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18972, metadata !DIExpression()), !dbg !18973
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18974, metadata !DIExpression()), !dbg !18975
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18976, metadata !DIExpression()), !dbg !18977
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18978
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18980, !ctir !1645
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18980, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18981
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18982, !ctir !1645
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18982, !ctir !7
  %cmp = icmp eq i8* %1, %3, !dbg !18983
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18984

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18985
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18986, !ctir !1645
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18986, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18987
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18988, !ctir !1645
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18988, !ctir !7
  %cmp1 = icmp eq i8* %5, %7, !dbg !18989
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18990

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18991
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18992, !ctir !1645
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18992, !ctir !7
  %cmp3 = icmp eq i8* %9, null, !dbg !18993
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18994

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18995, metadata !DIExpression()), !dbg !18997
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18998
  %call = call i32 @fileno(%struct._IO_FILE* %10) #9, !dbg !18999
  %11 = load i64, i64* %offset.addr, align 8, !dbg !19000
  %12 = load i32, i32* %whence.addr, align 4, !dbg !19001
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #9, !dbg !19002
  store i64 %call4, i64* %pos, align 8, !dbg !18997
  %13 = load i64, i64* %pos, align 8, !dbg !19003
  %cmp5 = icmp eq i64 %13, -1, !dbg !19005
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19006

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19007
  br label %return, !dbg !19007

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19009
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !19010, !ctir !1645
  %15 = load i32, i32* %_flags, align 8, !dbg !19011, !ctir !5
  %and = and i32 %15, -17, !dbg !19011
  store i32 %and, i32* %_flags, align 8, !dbg !19011, !ctir !5
  %16 = load i64, i64* %pos, align 8, !dbg !19012
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19013
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !19014, !ctir !1645
  store i64 %16, i64* %_offset, align 8, !dbg !19015, !ctir !45
  store i32 0, i32* %retval, align 4, !dbg !19016
  br label %return, !dbg !19016

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19017
  %19 = load i64, i64* %offset.addr, align 8, !dbg !19018
  %20 = load i32, i32* %whence.addr, align 4, !dbg !19019
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !19020
  store i32 %call8, i32* %retval, align 4, !dbg !19021
  br label %return, !dbg !19021

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !19022
  ret i32 %21, !dbg !19022
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.savewd* %ps) #4 !dbg !19023 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.savewd*, align 8
  %ret = alloca i64, align 8, !ctir !52
  %wc = alloca i32, align 4, !ctir !955
  %uc = alloca i8, align 1, !ctir !585
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !19039, metadata !DIExpression()), !dbg !19040
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19041, metadata !DIExpression()), !dbg !19042
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19043, metadata !DIExpression()), !dbg !19044
  store %struct.savewd* %ps, %struct.savewd** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %ps.addr, metadata !19045, metadata !DIExpression()), !dbg !19046
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19047, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !19049, metadata !DIExpression()), !dbg !19050
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !19051
  %tobool = icmp ne i32* %0, null, !dbg !19051
  br i1 %tobool, label %if.end, label %if.then, !dbg !19053

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !19054
  br label %if.end, !dbg !19055

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !19056
  %2 = load i8*, i8** %s.addr, align 8, !dbg !19057
  %3 = load i64, i64* %n.addr, align 8, !dbg !19058
  %4 = load %struct.savewd*, %struct.savewd** %ps.addr, align 8, !dbg !19059
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.savewd* %4) #9, !dbg !19060
  store i64 %call, i64* %ret, align 8, !dbg !19061
  %5 = load i64, i64* %ret, align 8, !dbg !19062
  %cmp = icmp ule i64 -2, %5, !dbg !19064
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !19065

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19066
  %cmp1 = icmp ne i64 %6, 0, !dbg !19067
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !19068

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !19069
  br i1 %call3, label %if.end5, label %if.then4, !dbg !19070

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !19071, metadata !DIExpression()), !dbg !19073
  %7 = load i8*, i8** %s.addr, align 8, !dbg !19074
  %8 = load i8, i8* %7, align 1, !dbg !19075, !ctir !181
  store i8 %8, i8* %uc, align 1, !dbg !19073
  %9 = load i8, i8* %uc, align 1, !dbg !19076
  %conv = zext i8 %9 to i32, !dbg !19076
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !19077
  store i32 %conv, i32* %10, align 4, !dbg !19078, !ctir !955
  store i64 1, i64* %retval, align 8, !dbg !19079
  br label %return, !dbg !19079

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !19080
  store i64 %11, i64* %retval, align 8, !dbg !19081
  br label %return, !dbg !19081

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !19082
  ret i64 %12, !dbg !19082
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.savewd*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%union.anon* %ctx) #4 !dbg !19083 {
entry:
  %ctx.addr = alloca %union.anon*, align 8
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19091, metadata !DIExpression()), !dbg !19092
  ret void, !dbg !19093
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %union.anon* %ctx) #4 !dbg !19094 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %union.anon*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19102, metadata !DIExpression()), !dbg !19103
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19104, metadata !DIExpression()), !dbg !19105
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19106, metadata !DIExpression()), !dbg !19107
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19108, metadata !DIExpression()), !dbg !19109
  %0 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19110
  %1 = bitcast %union.anon* %0 to i8*, !dbg !19111
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 4, i1 false), !dbg !19111
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19112
  %3 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19113
  %mode1 = getelementptr inbounds %union.anon, %union.anon* %3, i32 0, i32 0, !dbg !19114, !ctir !19099
  store i32 %2, i32* %mode1, align 4, !dbg !19115, !ctir !136
  ret i32 0, !dbg !19116
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !19117 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19119, metadata !DIExpression()), !dbg !19120
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19121, metadata !DIExpression()), !dbg !19122
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19123, metadata !DIExpression()), !dbg !19124
  %0 = load i32, i32* %desc.addr, align 4, !dbg !19125
  %cmp = icmp ne i32 %0, -1, !dbg !19127
  br i1 %cmp, label %if.then, label %if.else, !dbg !19128

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !19129
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19130
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !19131
  store i32 %call, i32* %retval, align 4, !dbg !19132
  br label %return, !dbg !19132

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19133
  %4 = load i32, i32* %mode.addr, align 4, !dbg !19134
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !19135
  store i32 %call1, i32* %retval, align 4, !dbg !19136
  br label %return, !dbg !19136

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19137
  ret i32 %5, !dbg !19137
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%union.anon* %ctx, i8* %name, i32 %desc) #4 !dbg !19138 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %union.anon*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !139
  %early_chmod = alloca i8, align 1, !ctir !139
  %must_chmod = alloca i8, align 1, !ctir !139
  %ret = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19145, metadata !DIExpression()), !dbg !19146
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19147, metadata !DIExpression()), !dbg !19148
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19149, metadata !DIExpression()), !dbg !19150
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !19151, metadata !DIExpression()), !dbg !19152
  store i8 0, i8* %acls_set, align 1, !dbg !19152
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !19153, metadata !DIExpression()), !dbg !19154
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !19155, metadata !DIExpression()), !dbg !19156
  store i8 0, i8* %must_chmod, align 1, !dbg !19156
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19157, metadata !DIExpression()), !dbg !19158
  store i32 0, i32* %ret, align 4, !dbg !19158
  store i8 1, i8* %early_chmod, align 1, !dbg !19159
  %0 = load i8, i8* %early_chmod, align 1, !dbg !19160
  %tobool = trunc i8 %0 to i1, !dbg !19160
  br i1 %tobool, label %if.then, label %if.end2, !dbg !19162

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !19163
  %2 = load i32, i32* %desc.addr, align 4, !dbg !19165
  %3 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19166
  %mode = getelementptr inbounds %union.anon, %union.anon* %3, i32 0, i32 0, !dbg !19167, !ctir !19142
  %4 = load i32, i32* %mode, align 4, !dbg !19167, !ctir !136
  %call = call i32 @chmod_or_fchmod(i8* %1, i32 %2, i32 %4), !dbg !19168
  store i32 %call, i32* %ret, align 4, !dbg !19169
  %5 = load i32, i32* %ret, align 4, !dbg !19170
  %cmp = icmp ne i32 %5, 0, !dbg !19172
  br i1 %cmp, label %if.then1, label %if.end, !dbg !19173

if.then1:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19174
  br label %return, !dbg !19174

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !19175

if.end2:                                          ; preds = %if.end, %entry
  %6 = load i8, i8* %must_chmod, align 1, !dbg !19176
  %tobool3 = trunc i8 %6 to i1, !dbg !19176
  br i1 %tobool3, label %land.lhs.true, label %if.end14, !dbg !19178

land.lhs.true:                                    ; preds = %if.end2
  %7 = load i8, i8* %early_chmod, align 1, !dbg !19179
  %tobool4 = trunc i8 %7 to i1, !dbg !19179
  br i1 %tobool4, label %if.end14, label %if.then5, !dbg !19180

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19181, metadata !DIExpression()), !dbg !19183
  %8 = load i32, i32* %ret, align 4, !dbg !19184
  %tobool6 = icmp ne i32 %8, 0, !dbg !19184
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !19184

cond.true:                                        ; preds = %if.then5
  %call7 = call i32* @__errno_location() #16, !dbg !19185
  %9 = load i32, i32* %call7, align 4, !dbg !19185, !ctir !5
  br label %cond.end, !dbg !19184

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !19184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %cond.false ], !dbg !19184
  store i32 %cond, i32* %saved_errno, align 4, !dbg !19183
  %10 = load i8*, i8** %name.addr, align 8, !dbg !19186
  %11 = load i32, i32* %desc.addr, align 4, !dbg !19187
  %12 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19188
  %mode8 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !19189, !ctir !19142
  %13 = load i32, i32* %mode8, align 4, !dbg !19189, !ctir !136
  %call9 = call i32 @chmod_or_fchmod(i8* %10, i32 %11, i32 %13), !dbg !19190
  store i32 %call9, i32* %ret, align 4, !dbg !19191
  %14 = load i32, i32* %saved_errno, align 4, !dbg !19192
  %tobool10 = icmp ne i32 %14, 0, !dbg !19192
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !19194

if.then11:                                        ; preds = %cond.end
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19195
  %call12 = call i32* @__errno_location() #16, !dbg !19197
  store i32 %15, i32* %call12, align 4, !dbg !19198, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !19199
  br label %if.end13, !dbg !19200

if.end13:                                         ; preds = %if.then11, %cond.end
  br label %if.end14, !dbg !19201

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %if.end2
  %16 = load i32, i32* %ret, align 4, !dbg !19202
  store i32 %16, i32* %retval, align 4, !dbg !19203
  br label %return, !dbg !19203

return:                                           ; preds = %if.end14, %if.then1
  %17 = load i32, i32* %retval, align 4, !dbg !19204
  ret i32 %17, !dbg !19204
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !19205 {
entry:
  call void @usage(i32 1), !dbg !19206
  ret void, !dbg !19207
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19208 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  %arglen = alloca i64, align 8, !ctir !52
  %matchind = alloca i64, align 8, !ctir !627
  %ambiguous = alloca i8, align 1, !ctir !139
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19211, metadata !DIExpression()), !dbg !19212
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19213, metadata !DIExpression()), !dbg !19214
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19215, metadata !DIExpression()), !dbg !19216
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19217, metadata !DIExpression()), !dbg !19218
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19219, metadata !DIExpression()), !dbg !19220
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !19221, metadata !DIExpression()), !dbg !19222
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !19223, metadata !DIExpression()), !dbg !19224
  store i64 -1, i64* %matchind, align 8, !dbg !19224
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !19225, metadata !DIExpression()), !dbg !19226
  store i8 0, i8* %ambiguous, align 1, !dbg !19226
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19227
  %call = call i64 @strlen(i8* %0) #14, !dbg !19228
  store i64 %call, i64* %arglen, align 8, !dbg !19229
  store i64 0, i64* %i, align 8, !dbg !19230
  br label %for.cond, !dbg !19232

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19233
  %2 = load i64, i64* %i, align 8, !dbg !19235
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19233, !ctir !1125
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19233
  %tobool = icmp ne i8* %3, null, !dbg !19236
  br i1 %tobool, label %for.body, label %for.end, !dbg !19236

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !19237
  %5 = load i64, i64* %i, align 8, !dbg !19240
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !19237, !ctir !1125
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !19237
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19241
  %8 = load i64, i64* %arglen, align 8, !dbg !19242
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !19243
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19243
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !19244

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19245
  %10 = load i64, i64* %i, align 8, !dbg !19248
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !19245, !ctir !1125
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !19245
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !19249
  %12 = load i64, i64* %arglen, align 8, !dbg !19250
  %cmp = icmp eq i64 %call5, %12, !dbg !19251
  br i1 %cmp, label %if.then6, label %if.else, !dbg !19252

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !19253
  store i64 %13, i64* %retval, align 8, !dbg !19254
  br label %return, !dbg !19254

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !19255
  %cmp7 = icmp eq i64 %14, -1, !dbg !19257
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !19258

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !19259
  store i64 %15, i64* %matchind, align 8, !dbg !19260
  br label %if.end16, !dbg !19261

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !19262
  %cmp10 = icmp eq i8* %16, null, !dbg !19265
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !19266

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !19267
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !19268
  %19 = load i64, i64* %matchind, align 8, !dbg !19269
  %mul = mul i64 %18, %19, !dbg !19270
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !19271, !ctir !181
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !19272
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !19273
  %22 = load i64, i64* %i, align 8, !dbg !19274
  %mul11 = mul i64 %21, %22, !dbg !19275
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !19276, !ctir !181
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !19277
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !19278
  %tobool14 = icmp ne i32 %call13, 0, !dbg !19278
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !19279

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !19280
  br label %if.end, !dbg !19282

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !19283

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !19284

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !19285
  %inc = add i64 %24, 1, !dbg !19285
  store i64 %inc, i64* %i, align 8, !dbg !19285
  br label %for.cond, !dbg !19286, !llvm.loop !19287

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !19289
  %tobool19 = trunc i8 %25 to i1, !dbg !19289
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !19291

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !19292
  br label %return, !dbg !19292

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !19293
  store i64 %26, i64* %retval, align 8, !dbg !19294
  br label %return, !dbg !19294

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !19295
  ret i64 %27, !dbg !19295
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !19296 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !180
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19299, metadata !DIExpression()), !dbg !19300
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19301, metadata !DIExpression()), !dbg !19302
  store i64 %problem, i64* %problem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !19303, metadata !DIExpression()), !dbg !19304
  call void @llvm.dbg.declare(metadata i8** %format, metadata !19305, metadata !DIExpression()), !dbg !19306
  %0 = load i64, i64* %problem.addr, align 8, !dbg !19307
  %cmp = icmp eq i64 %0, -1, !dbg !19308
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19307

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.481, i64 0, i64 0)) #9, !dbg !19309
  br label %cond.end, !dbg !19307

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.482, i64 0, i64 0)) #9, !dbg !19310
  br label %cond.end, !dbg !19307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !19307
  store i8* %cond, i8** %format, align 8, !dbg !19306
  %1 = load i8*, i8** %format, align 8, !dbg !19311
  %2 = load i8*, i8** %value.addr, align 8, !dbg !19312
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !19313
  %3 = load i8*, i8** %context.addr, align 8, !dbg !19314
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !19315
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !19316
  ret void, !dbg !19317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !19318 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  %last_val = alloca i8*, align 8, !ctir !180
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19321, metadata !DIExpression()), !dbg !19322
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19323, metadata !DIExpression()), !dbg !19324
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19325, metadata !DIExpression()), !dbg !19326
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19327, metadata !DIExpression()), !dbg !19328
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !19329, metadata !DIExpression()), !dbg !19330
  store i8* null, i8** %last_val, align 8, !dbg !19330
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.483, i64 0, i64 0)) #9, !dbg !19331
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19331
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !19331
  store i64 0, i64* %i, align 8, !dbg !19332
  br label %for.cond, !dbg !19334

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19335
  %2 = load i64, i64* %i, align 8, !dbg !19337
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19335, !ctir !1125
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19335
  %tobool = icmp ne i8* %3, null, !dbg !19338
  br i1 %tobool, label %for.body, label %for.end, !dbg !19338

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !19339
  %cmp = icmp eq i64 %4, 0, !dbg !19341
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19342

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !19343
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !19344
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19345
  %8 = load i64, i64* %i, align 8, !dbg !19346
  %mul = mul i64 %7, %8, !dbg !19347
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !19348, !ctir !181
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !19349
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !19350
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19350
  br i1 %tobool3, label %if.then, label %if.else, !dbg !19351

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19352
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !19354
  %12 = load i64, i64* %i, align 8, !dbg !19355
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !19354, !ctir !1125
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !19354
  %call5 = call i8* @quote(i8* %13), !dbg !19356
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.484, i64 0, i64 0), i8* %call5), !dbg !19357
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !19358
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !19359
  %16 = load i64, i64* %i, align 8, !dbg !19360
  %mul7 = mul i64 %15, %16, !dbg !19361
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !19362, !ctir !181
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !19363
  br label %if.end, !dbg !19364

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19365
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !19367
  %19 = load i64, i64* %i, align 8, !dbg !19368
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !19367, !ctir !1125
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !19367
  %call10 = call i8* @quote(i8* %20), !dbg !19369
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.485, i64 0, i64 0), i8* %call10), !dbg !19370
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !19371

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !19372
  %inc = add i64 %21, 1, !dbg !19372
  store i64 %inc, i64* %i, align 8, !dbg !19372
  br label %for.cond, !dbg !19373, !llvm.loop !19374

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19376
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !19376
  ret void, !dbg !19377
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !19378 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !627
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19381, metadata !DIExpression()), !dbg !19382
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19383, metadata !DIExpression()), !dbg !19384
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19385, metadata !DIExpression()), !dbg !19386
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19387, metadata !DIExpression()), !dbg !19388
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19389, metadata !DIExpression()), !dbg !19390
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !19391, metadata !DIExpression()), !dbg !19392
  call void @llvm.dbg.declare(metadata i64* %res, metadata !19393, metadata !DIExpression()), !dbg !19394
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19395
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19396
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !19397
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !19398
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !19399
  store i64 %call, i64* %res, align 8, !dbg !19394
  %4 = load i64, i64* %res, align 8, !dbg !19400
  %cmp = icmp sge i64 %4, 0, !dbg !19402
  br i1 %cmp, label %if.then, label %if.end, !dbg !19403

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !19404
  store i64 %5, i64* %retval, align 8, !dbg !19405
  br label %return, !dbg !19405

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !19406
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19407
  %8 = load i64, i64* %res, align 8, !dbg !19408
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !19409
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19410
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !19411
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !19412
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !19413
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !19414
  call void %12(), !dbg !19415
  store i64 -1, i64* %retval, align 8, !dbg !19416
  br label %return, !dbg !19416

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !19417
  ret i64 %13, !dbg !19417
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19418 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !52
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19421, metadata !DIExpression()), !dbg !19422
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19423, metadata !DIExpression()), !dbg !19424
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19425, metadata !DIExpression()), !dbg !19426
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19427, metadata !DIExpression()), !dbg !19428
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19429, metadata !DIExpression()), !dbg !19430
  store i64 0, i64* %i, align 8, !dbg !19431
  br label %for.cond, !dbg !19433

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !19434
  %1 = load i64, i64* %i, align 8, !dbg !19436
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19434, !ctir !1125
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19434
  %tobool = icmp ne i8* %2, null, !dbg !19437
  br i1 %tobool, label %for.body, label %for.end, !dbg !19437

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !19438
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !19440
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !19441
  %6 = load i64, i64* %i, align 8, !dbg !19442
  %mul = mul i64 %5, %6, !dbg !19443
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !19444, !ctir !181
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19445
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !19446
  %tobool1 = icmp ne i32 %call, 0, !dbg !19446
  br i1 %tobool1, label %if.end, label %if.then, !dbg !19447

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !19448
  %9 = load i64, i64* %i, align 8, !dbg !19449
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !19448, !ctir !1125
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !19448
  store i8* %10, i8** %retval, align 8, !dbg !19450
  br label %return, !dbg !19450

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19451

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !19452
  %inc = add i64 %11, 1, !dbg !19452
  store i64 %inc, i64* %i, align 8, !dbg !19452
  br label %for.cond, !dbg !19453, !llvm.loop !19454

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !19456
  br label %return, !dbg !19456

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !19457
  ret i8* %12, !dbg !19457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !19458 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19462, metadata !DIExpression()), !dbg !19463
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19464, metadata !DIExpression()), !dbg !19465
  %0 = load i64, i64* %x.addr, align 8, !dbg !19466
  %1 = load i32, i32* %n.addr, align 4, !dbg !19467
  %sh_prom = zext i32 %1 to i64, !dbg !19468
  %shl = shl i64 %0, %sh_prom, !dbg !19468
  %2 = load i64, i64* %x.addr, align 8, !dbg !19469
  %3 = load i32, i32* %n.addr, align 4, !dbg !19470
  %sub = sub nsw i32 64, %3, !dbg !19471
  %sh_prom1 = zext i32 %sub to i64, !dbg !19472
  %shr = lshr i64 %2, %sh_prom1, !dbg !19472
  %or = or i64 %shl, %shr, !dbg !19473
  ret i64 %or, !dbg !19474
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !19475 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19476, metadata !DIExpression()), !dbg !19477
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19478, metadata !DIExpression()), !dbg !19479
  %0 = load i64, i64* %x.addr, align 8, !dbg !19480
  %1 = load i32, i32* %n.addr, align 4, !dbg !19481
  %sh_prom = zext i32 %1 to i64, !dbg !19482
  %shr = lshr i64 %0, %sh_prom, !dbg !19482
  %2 = load i64, i64* %x.addr, align 8, !dbg !19483
  %3 = load i32, i32* %n.addr, align 4, !dbg !19484
  %sub = sub nsw i32 64, %3, !dbg !19485
  %sh_prom1 = zext i32 %sub to i64, !dbg !19486
  %shl = shl i64 %2, %sh_prom1, !dbg !19486
  %or = or i64 %shr, %shl, !dbg !19487
  ret i64 %or, !dbg !19488
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !19489 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19492, metadata !DIExpression()), !dbg !19493
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19494, metadata !DIExpression()), !dbg !19495
  %0 = load i32, i32* %x.addr, align 4, !dbg !19496
  %1 = load i32, i32* %n.addr, align 4, !dbg !19497
  %shl = shl i32 %0, %1, !dbg !19498
  %2 = load i32, i32* %x.addr, align 4, !dbg !19499
  %3 = load i32, i32* %n.addr, align 4, !dbg !19500
  %sub = sub nsw i32 32, %3, !dbg !19501
  %shr = lshr i32 %2, %sub, !dbg !19502
  %or = or i32 %shl, %shr, !dbg !19503
  ret i32 %or, !dbg !19504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !19505 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19506, metadata !DIExpression()), !dbg !19507
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19508, metadata !DIExpression()), !dbg !19509
  %0 = load i32, i32* %x.addr, align 4, !dbg !19510
  %1 = load i32, i32* %n.addr, align 4, !dbg !19511
  %shr = lshr i32 %0, %1, !dbg !19512
  %2 = load i32, i32* %x.addr, align 4, !dbg !19513
  %3 = load i32, i32* %n.addr, align 4, !dbg !19514
  %sub = sub nsw i32 32, %3, !dbg !19515
  %shl = shl i32 %2, %sub, !dbg !19516
  %or = or i32 %shr, %shl, !dbg !19517
  ret i32 %or, !dbg !19518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !19519 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19522, metadata !DIExpression()), !dbg !19523
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19524, metadata !DIExpression()), !dbg !19525
  %0 = load i64, i64* %x.addr, align 8, !dbg !19526
  %1 = load i32, i32* %n.addr, align 4, !dbg !19527
  %sh_prom = zext i32 %1 to i64, !dbg !19528
  %shl = shl i64 %0, %sh_prom, !dbg !19528
  %2 = load i64, i64* %x.addr, align 8, !dbg !19529
  %3 = load i32, i32* %n.addr, align 4, !dbg !19530
  %conv = sext i32 %3 to i64, !dbg !19530
  %sub = sub i64 64, %conv, !dbg !19531
  %shr = lshr i64 %2, %sub, !dbg !19532
  %or = or i64 %shl, %shr, !dbg !19533
  ret i64 %or, !dbg !19534
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !19535 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19536, metadata !DIExpression()), !dbg !19537
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19538, metadata !DIExpression()), !dbg !19539
  %0 = load i64, i64* %x.addr, align 8, !dbg !19540
  %1 = load i32, i32* %n.addr, align 4, !dbg !19541
  %sh_prom = zext i32 %1 to i64, !dbg !19542
  %shr = lshr i64 %0, %sh_prom, !dbg !19542
  %2 = load i64, i64* %x.addr, align 8, !dbg !19543
  %3 = load i32, i32* %n.addr, align 4, !dbg !19544
  %conv = sext i32 %3 to i64, !dbg !19544
  %sub = sub i64 64, %conv, !dbg !19545
  %shl = shl i64 %2, %sub, !dbg !19546
  %or = or i64 %shr, %shl, !dbg !19547
  ret i64 %or, !dbg !19548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !19549 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19553, metadata !DIExpression()), !dbg !19554
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19555, metadata !DIExpression()), !dbg !19556
  %0 = load i16, i16* %x.addr, align 2, !dbg !19557
  %conv = zext i16 %0 to i32, !dbg !19558
  %1 = load i32, i32* %n.addr, align 4, !dbg !19559
  %shl = shl i32 %conv, %1, !dbg !19560
  %2 = load i16, i16* %x.addr, align 2, !dbg !19561
  %conv1 = zext i16 %2 to i32, !dbg !19562
  %3 = load i32, i32* %n.addr, align 4, !dbg !19563
  %sub = sub nsw i32 16, %3, !dbg !19564
  %shr = lshr i32 %conv1, %sub, !dbg !19565
  %or = or i32 %shl, %shr, !dbg !19566
  %and = and i32 %or, 65535, !dbg !19567
  %conv2 = trunc i32 %and to i16, !dbg !19568
  ret i16 %conv2, !dbg !19569
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !19570 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19571, metadata !DIExpression()), !dbg !19572
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19573, metadata !DIExpression()), !dbg !19574
  %0 = load i16, i16* %x.addr, align 2, !dbg !19575
  %conv = zext i16 %0 to i32, !dbg !19576
  %1 = load i32, i32* %n.addr, align 4, !dbg !19577
  %shr = lshr i32 %conv, %1, !dbg !19578
  %2 = load i16, i16* %x.addr, align 2, !dbg !19579
  %conv1 = zext i16 %2 to i32, !dbg !19580
  %3 = load i32, i32* %n.addr, align 4, !dbg !19581
  %sub = sub nsw i32 16, %3, !dbg !19582
  %shl = shl i32 %conv1, %sub, !dbg !19583
  %or = or i32 %shr, %shl, !dbg !19584
  %and = and i32 %or, 65535, !dbg !19585
  %conv2 = trunc i32 %and to i16, !dbg !19586
  ret i16 %conv2, !dbg !19587
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !19588 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19592, metadata !DIExpression()), !dbg !19593
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19594, metadata !DIExpression()), !dbg !19595
  %0 = load i8, i8* %x.addr, align 1, !dbg !19596
  %conv = zext i8 %0 to i32, !dbg !19597
  %1 = load i32, i32* %n.addr, align 4, !dbg !19598
  %shl = shl i32 %conv, %1, !dbg !19599
  %2 = load i8, i8* %x.addr, align 1, !dbg !19600
  %conv1 = zext i8 %2 to i32, !dbg !19601
  %3 = load i32, i32* %n.addr, align 4, !dbg !19602
  %sub = sub nsw i32 8, %3, !dbg !19603
  %shr = lshr i32 %conv1, %sub, !dbg !19604
  %or = or i32 %shl, %shr, !dbg !19605
  %and = and i32 %or, 255, !dbg !19606
  %conv2 = trunc i32 %and to i8, !dbg !19607
  ret i8 %conv2, !dbg !19608
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !19609 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19610, metadata !DIExpression()), !dbg !19611
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19612, metadata !DIExpression()), !dbg !19613
  %0 = load i8, i8* %x.addr, align 1, !dbg !19614
  %conv = zext i8 %0 to i32, !dbg !19615
  %1 = load i32, i32* %n.addr, align 4, !dbg !19616
  %shr = lshr i32 %conv, %1, !dbg !19617
  %2 = load i8, i8* %x.addr, align 1, !dbg !19618
  %conv1 = zext i8 %2 to i32, !dbg !19619
  %3 = load i32, i32* %n.addr, align 4, !dbg !19620
  %sub = sub nsw i32 8, %3, !dbg !19621
  %shl = shl i32 %conv1, %sub, !dbg !19622
  %or = or i32 %shr, %shl, !dbg !19623
  %and = and i32 %or, 255, !dbg !19624
  %conv2 = trunc i32 %and to i8, !dbg !19625
  ret i8 %conv2, !dbg !19626
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #10 !dbg !19627 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !583
  %p2 = alloca i8*, align 8, !ctir !583
  %c1 = alloca i8, align 1, !ctir !585
  %c2 = alloca i8, align 1, !ctir !585
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19629, metadata !DIExpression()), !dbg !19630
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19631, metadata !DIExpression()), !dbg !19632
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !19633, metadata !DIExpression()), !dbg !19634
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !19635
  store i8* %0, i8** %p1, align 8, !dbg !19634
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !19636, metadata !DIExpression()), !dbg !19637
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !19638
  store i8* %1, i8** %p2, align 8, !dbg !19637
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !19639, metadata !DIExpression()), !dbg !19640
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !19641, metadata !DIExpression()), !dbg !19642
  %2 = load i8*, i8** %p1, align 8, !dbg !19643
  %3 = load i8*, i8** %p2, align 8, !dbg !19645
  %cmp = icmp eq i8* %2, %3, !dbg !19646
  br i1 %cmp, label %if.then, label %if.end, !dbg !19647

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19648
  br label %return, !dbg !19648

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !19649

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !19650
  %5 = load i8, i8* %4, align 1, !dbg !19652, !ctir !584
  %conv = zext i8 %5 to i32, !dbg !19652
  %call = call i32 @c_tolower(i32 %conv), !dbg !19653
  %conv1 = trunc i32 %call to i8, !dbg !19653
  store i8 %conv1, i8* %c1, align 1, !dbg !19654
  %6 = load i8*, i8** %p2, align 8, !dbg !19655
  %7 = load i8, i8* %6, align 1, !dbg !19656, !ctir !584
  %conv2 = zext i8 %7 to i32, !dbg !19656
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !19657
  %conv4 = trunc i32 %call3 to i8, !dbg !19657
  store i8 %conv4, i8* %c2, align 1, !dbg !19658
  %8 = load i8, i8* %c1, align 1, !dbg !19659
  %conv5 = zext i8 %8 to i32, !dbg !19659
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19661
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19662

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !19663

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !19664
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !19664, !ctir !584
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !19664
  %10 = load i8*, i8** %p2, align 8, !dbg !19665
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19665, !ctir !584
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !19665
  br label %do.cond, !dbg !19666

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !19667
  %conv11 = zext i8 %11 to i32, !dbg !19667
  %12 = load i8, i8* %c2, align 1, !dbg !19668
  %conv12 = zext i8 %12 to i32, !dbg !19668
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !19669
  br i1 %cmp13, label %do.body, label %do.end, !dbg !19666, !llvm.loop !19670

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !19672
  %conv15 = zext i8 %13 to i32, !dbg !19672
  %14 = load i8, i8* %c2, align 1, !dbg !19674
  %conv16 = zext i8 %14 to i32, !dbg !19674
  %sub = sub nsw i32 %conv15, %conv16, !dbg !19675
  store i32 %sub, i32* %retval, align 4, !dbg !19676
  br label %return, !dbg !19676

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !19677
  ret i32 %15, !dbg !19677
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !19678 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !1703
  %prev_fail = alloca i8, align 1, !ctir !1703
  %fclose_fail = alloca i8, align 1, !ctir !1703
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19722, metadata !DIExpression()), !dbg !19723
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !19724, metadata !DIExpression()), !dbg !19725
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19726
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !19727
  %cmp = icmp ne i64 %call, 0, !dbg !19728
  %frombool = zext i1 %cmp to i8, !dbg !19725
  store i8 %frombool, i8* %some_pending, align 1, !dbg !19725
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !19729, metadata !DIExpression()), !dbg !19730
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19731
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !19731
  %cmp2 = icmp ne i32 %call1, 0, !dbg !19732
  %frombool3 = zext i1 %cmp2 to i8, !dbg !19730
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !19730
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !19733, metadata !DIExpression()), !dbg !19734
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19735
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !19736
  %cmp5 = icmp ne i32 %call4, 0, !dbg !19737
  %frombool6 = zext i1 %cmp5 to i8, !dbg !19734
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !19734
  %3 = load i8, i8* %prev_fail, align 1, !dbg !19738
  %tobool = trunc i8 %3 to i1, !dbg !19738
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19740

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !19741
  %tobool7 = trunc i8 %4 to i1, !dbg !19741
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !19742

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !19743
  %tobool8 = trunc i8 %5 to i1, !dbg !19743
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !19744

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !19745
  %6 = load i32, i32* %call10, align 4, !dbg !19745, !ctir !5
  %cmp11 = icmp ne i32 %6, 9, !dbg !19746
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !19747

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !19748
  %tobool12 = trunc i8 %7 to i1, !dbg !19748
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !19751

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !19752
  store i32 0, i32* %call14, align 4, !dbg !19753, !ctir !5
  br label %if.end, !dbg !19752

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19754
  br label %return, !dbg !19754

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !19755
  br label %return, !dbg !19755

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !19756
  ret i32 %8, !dbg !19756
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !19757 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !662
  %fd = alloca i32, align 4, !ctir !5
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !662
  %e = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !19763, metadata !DIExpression()), !dbg !19764
  %0 = load i8*, i8** %name.addr, align 8, !dbg !19765
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !19766
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !19764
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19767
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !19767
  br i1 %tobool, label %if.then, label %if.end17, !dbg !19769

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19770, metadata !DIExpression()), !dbg !19772
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19773
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #9, !dbg !19774
  store i32 %call1, i32* %fd, align 4, !dbg !19772
  %3 = load i32, i32* %fd, align 4, !dbg !19775
  %cmp = icmp sle i32 0, %3, !dbg !19777
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !19778

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !19779
  %cmp2 = icmp sle i32 %4, 2, !dbg !19780
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !19781

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !19782, metadata !DIExpression()), !dbg !19784
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19785, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19787, metadata !DIExpression()), !dbg !19788
  %5 = load i32, i32* %fd, align 4, !dbg !19789
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !19790
  store i32 %call4, i32* %f, align 4, !dbg !19788
  %6 = load i32, i32* %f, align 4, !dbg !19791
  %cmp5 = icmp slt i32 %6, 0, !dbg !19793
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !19794

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #16, !dbg !19795
  %7 = load i32, i32* %call7, align 4, !dbg !19795, !ctir !5
  store i32 %7, i32* %e, align 4, !dbg !19797
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !19798
  br label %if.end13, !dbg !19799

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !19800
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !19802
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !19803
  %call9 = call i32* @__errno_location() #16, !dbg !19804
  %9 = load i32, i32* %call9, align 4, !dbg !19804, !ctir !5
  store i32 %9, i32* %e, align 4, !dbg !19805
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !19806
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !19806
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !19808

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !19809
  %call12 = call i32 @close(i32 %11), !dbg !19810
  br label %if.end, !dbg !19810

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19811
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !19812
  %13 = load i32, i32* %e, align 4, !dbg !19813
  %call15 = call i32* @__errno_location() #16, !dbg !19814
  store i32 %13, i32* %call15, align 4, !dbg !19815, !ctir !5
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !19816
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !19817
  br label %if.end16, !dbg !19818

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !19819

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19820
  ret %struct.__dirstream* %15, !dbg !19821
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !19822 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !19831, metadata !DIExpression()), !dbg !19832
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !19833
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #9, !dbg !19834
  ret void, !dbg !19835
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !19836 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !19839, metadata !DIExpression()), !dbg !19840
  call void @gettime(%struct.timespec* %retval), !dbg !19841
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19842
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !19842
  ret { i64, i64 } %1, !dbg !19842
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !19843 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !139
  %p = alloca i8*, align 8, !ctir !180
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !19845, metadata !DIExpression()), !dbg !19846
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !19847, metadata !DIExpression()), !dbg !19848
  store i8 1, i8* %hard, align 1, !dbg !19848
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19849, metadata !DIExpression()), !dbg !19850
  %0 = load i32, i32* %category.addr, align 4, !dbg !19851
  %call = call i8* @setlocale(i32 %0, i8* null) #9, !dbg !19852
  store i8* %call, i8** %p, align 8, !dbg !19850
  %1 = load i8*, i8** %p, align 8, !dbg !19853
  %tobool = icmp ne i8* %1, null, !dbg !19853
  br i1 %tobool, label %if.then, label %if.end5, !dbg !19855

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !19856
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.500, i64 0, i64 0)) #14, !dbg !19861
  %cmp = icmp eq i32 %call1, 0, !dbg !19862
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !19863

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !19864
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.501, i64 0, i64 0)) #14, !dbg !19865
  %cmp3 = icmp eq i32 %call2, 0, !dbg !19866
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !19867

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !19868
  br label %if.end, !dbg !19869

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !19870

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !19871
  %tobool6 = trunc i8 %4 to i1, !dbg !19871
  ret i1 %tobool6, !dbg !19872
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #10 !dbg !19873 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !180
  %h = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19875, metadata !DIExpression()), !dbg !19876
  store i64 %tablesize, i64* %tablesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !19877, metadata !DIExpression()), !dbg !19878
  call void @llvm.dbg.declare(metadata i8** %s, metadata !19879, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.declare(metadata i64* %h, metadata !19881, metadata !DIExpression()), !dbg !19882
  store i64 0, i64* %h, align 8, !dbg !19882
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19883
  store i8* %0, i8** %s, align 8, !dbg !19885
  br label %for.cond, !dbg !19886

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !19887
  %2 = load i8, i8* %1, align 1, !dbg !19889, !ctir !181
  %tobool = icmp ne i8 %2, 0, !dbg !19890
  br i1 %tobool, label %for.body, label %for.end, !dbg !19890

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !19891
  %4 = load i8, i8* %3, align 1, !dbg !19892, !ctir !181
  %conv = sext i8 %4 to i64, !dbg !19892
  %5 = load i64, i64* %h, align 8, !dbg !19893
  %shl = shl i64 %5, 9, !dbg !19894
  %6 = load i64, i64* %h, align 8, !dbg !19895
  %shr = lshr i64 %6, 55, !dbg !19896
  %or = or i64 %shl, %shr, !dbg !19897
  %add = add i64 %conv, %or, !dbg !19898
  store i64 %add, i64* %h, align 8, !dbg !19899
  br label %for.inc, !dbg !19900

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !19901
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !19901, !ctir !181
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !19901
  br label %for.cond, !dbg !19902, !llvm.loop !19903

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !19905
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !19906
  %rem = urem i64 %8, %9, !dbg !19907
  ret i64 %rem, !dbg !19908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !19909 {
entry:
  %codeset = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !19912, metadata !DIExpression()), !dbg !19913
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !19914
  store i8* %call, i8** %codeset, align 8, !dbg !19915
  %0 = load i8*, i8** %codeset, align 8, !dbg !19916
  %cmp = icmp eq i8* %0, null, !dbg !19918
  br i1 %cmp, label %if.then, label %if.end, !dbg !19919

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.506, i64 0, i64 0), i8** %codeset, align 8, !dbg !19920
  br label %if.end, !dbg !19921

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !19922
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !19922, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !19922
  %conv = sext i8 %2 to i32, !dbg !19922
  %cmp1 = icmp eq i32 %conv, 0, !dbg !19926
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !19927

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.507, i64 0, i64 0), i8** %codeset, align 8, !dbg !19928
  br label %if.end4, !dbg !19929

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !19930
  ret i8* %3, !dbg !19931
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dirchownmod(i32 %fd, i8* %dir, i32 %mkdir_mode, i32 %owner, i32 %group, i32 %mode, i32 %mode_bits) #4 !dbg !19932 {
entry:
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %mkdir_mode.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %mode_bits.addr = alloca i32, align 4
  %st = alloca %struct.stat, align 8, !ctir !19936
  %result = alloca i32, align 4, !ctir !5
  %dir_mode = alloca i32, align 4, !ctir !136
  %indeterminate = alloca i32, align 4, !ctir !136
  %chmod_mode = alloca i32, align 4, !ctir !136
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19957, metadata !DIExpression()), !dbg !19958
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19959, metadata !DIExpression()), !dbg !19960
  store i32 %mkdir_mode, i32* %mkdir_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode.addr, metadata !19961, metadata !DIExpression()), !dbg !19962
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !19963, metadata !DIExpression()), !dbg !19964
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !19965, metadata !DIExpression()), !dbg !19966
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19967, metadata !DIExpression()), !dbg !19968
  store i32 %mode_bits, i32* %mode_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !19969, metadata !DIExpression()), !dbg !19970
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !19971, metadata !DIExpression()), !dbg !19972
  call void @llvm.dbg.declare(metadata i32* %result, metadata !19973, metadata !DIExpression()), !dbg !19974
  %0 = load i32, i32* %fd.addr, align 4, !dbg !19975
  %cmp = icmp slt i32 %0, 0, !dbg !19976
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19975

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !19977
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !19978
  br label %cond.end, !dbg !19975

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !19979
  %call1 = call i32 @fstat(i32 %2, %struct.stat* %st) #9, !dbg !19980
  br label %cond.end, !dbg !19975

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !19975
  store i32 %cond, i32* %result, align 4, !dbg !19974
  %3 = load i32, i32* %result, align 4, !dbg !19981
  %cmp2 = icmp eq i32 %3, 0, !dbg !19983
  br i1 %cmp2, label %if.then, label %if.end54, !dbg !19984

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %dir_mode, metadata !19985, metadata !DIExpression()), !dbg !19987
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !19988, !ctir !19936
  %4 = load i32, i32* %st_mode, align 8, !dbg !19988, !ctir !137
  store i32 %4, i32* %dir_mode, align 4, !dbg !19987
  %5 = load i32, i32* %dir_mode, align 4, !dbg !19989
  %and = and i32 %5, 61440, !dbg !19989
  %cmp3 = icmp eq i32 %and, 16384, !dbg !19989
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !19991

if.then4:                                         ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !19992
  store i32 20, i32* %call5, align 4, !dbg !19994, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !19995
  br label %if.end53, !dbg !19996

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %indeterminate, metadata !19997, metadata !DIExpression()), !dbg !19999
  store i32 0, i32* %indeterminate, align 4, !dbg !19999
  %6 = load i32, i32* %owner.addr, align 4, !dbg !20000
  %cmp6 = icmp ne i32 %6, -1, !dbg !20002
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !20003

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, i32* %owner.addr, align 4, !dbg !20004
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !20005, !ctir !19936
  %8 = load i32, i32* %st_uid, align 4, !dbg !20005, !ctir !125
  %cmp7 = icmp ne i32 %7, %8, !dbg !20006
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !20007

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %9 = load i32, i32* %group.addr, align 4, !dbg !20008
  %cmp8 = icmp ne i32 %9, -1, !dbg !20009
  br i1 %cmp8, label %land.lhs.true9, label %if.end30, !dbg !20010

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %group.addr, align 4, !dbg !20011
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !20012, !ctir !19936
  %11 = load i32, i32* %st_gid, align 8, !dbg !20012, !ctir !127
  %cmp10 = icmp ne i32 %10, %11, !dbg !20013
  br i1 %cmp10, label %if.then11, label %if.end30, !dbg !20014

if.then11:                                        ; preds = %land.lhs.true9, %land.lhs.true
  %12 = load i32, i32* %fd.addr, align 4, !dbg !20015
  %cmp12 = icmp sle i32 0, %12, !dbg !20017
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !20018

cond.true13:                                      ; preds = %if.then11
  %13 = load i32, i32* %fd.addr, align 4, !dbg !20019
  %14 = load i32, i32* %owner.addr, align 4, !dbg !20020
  %15 = load i32, i32* %group.addr, align 4, !dbg !20021
  %call14 = call i32 @fchown(i32 %13, i32 %14, i32 %15) #9, !dbg !20022
  br label %cond.end23, !dbg !20018

cond.false15:                                     ; preds = %if.then11
  %16 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20023
  %cmp16 = icmp ne i32 %16, -1, !dbg !20024
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !20023

cond.true17:                                      ; preds = %cond.false15
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !20025
  %18 = load i32, i32* %owner.addr, align 4, !dbg !20026
  %19 = load i32, i32* %group.addr, align 4, !dbg !20027
  %call18 = call i32 @lchown(i8* %17, i32 %18, i32 %19) #9, !dbg !20028
  br label %cond.end21, !dbg !20023

cond.false19:                                     ; preds = %cond.false15
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20029
  %21 = load i32, i32* %owner.addr, align 4, !dbg !20030
  %22 = load i32, i32* %group.addr, align 4, !dbg !20031
  %call20 = call i32 @chown(i8* %20, i32 %21, i32 %22) #9, !dbg !20032
  br label %cond.end21, !dbg !20023

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !20023
  br label %cond.end23, !dbg !20018

cond.end23:                                       ; preds = %cond.end21, %cond.true13
  %cond24 = phi i32 [ %call14, %cond.true13 ], [ %cond22, %cond.end21 ], !dbg !20018
  store i32 %cond24, i32* %result, align 4, !dbg !20033
  %23 = load i32, i32* %result, align 4, !dbg !20034
  %cmp25 = icmp eq i32 %23, 0, !dbg !20036
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !20037

land.lhs.true26:                                  ; preds = %cond.end23
  %24 = load i32, i32* %dir_mode, align 4, !dbg !20038
  %and27 = and i32 %24, 73, !dbg !20039
  %tobool = icmp ne i32 %and27, 0, !dbg !20039
  br i1 %tobool, label %if.then28, label %if.end, !dbg !20040

if.then28:                                        ; preds = %land.lhs.true26
  %25 = load i32, i32* %dir_mode, align 4, !dbg !20041
  %and29 = and i32 %25, 3072, !dbg !20042
  store i32 %and29, i32* %indeterminate, align 4, !dbg !20043
  br label %if.end, !dbg !20044

if.end:                                           ; preds = %if.then28, %land.lhs.true26, %cond.end23
  br label %if.end30, !dbg !20045

if.end30:                                         ; preds = %if.end, %land.lhs.true9, %lor.lhs.false
  %26 = load i32, i32* %result, align 4, !dbg !20046
  %cmp31 = icmp eq i32 %26, 0, !dbg !20048
  br i1 %cmp31, label %land.lhs.true32, label %if.end52, !dbg !20049

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load i32, i32* %dir_mode, align 4, !dbg !20050
  %28 = load i32, i32* %mode.addr, align 4, !dbg !20051
  %xor = xor i32 %27, %28, !dbg !20052
  %29 = load i32, i32* %indeterminate, align 4, !dbg !20053
  %or = or i32 %xor, %29, !dbg !20054
  %30 = load i32, i32* %mode_bits.addr, align 4, !dbg !20055
  %and33 = and i32 %or, %30, !dbg !20056
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20056
  br i1 %tobool34, label %if.then35, label %if.end52, !dbg !20057

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %chmod_mode, metadata !20058, metadata !DIExpression()), !dbg !20060
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20061
  %32 = load i32, i32* %dir_mode, align 4, !dbg !20062
  %and36 = and i32 %32, 4095, !dbg !20063
  %33 = load i32, i32* %mode_bits.addr, align 4, !dbg !20064
  %neg = xor i32 %33, -1, !dbg !20065
  %and37 = and i32 %and36, %neg, !dbg !20066
  %or38 = or i32 %31, %and37, !dbg !20067
  store i32 %or38, i32* %chmod_mode, align 4, !dbg !20060
  %34 = load i32, i32* %fd.addr, align 4, !dbg !20068
  %cmp39 = icmp sle i32 0, %34, !dbg !20069
  br i1 %cmp39, label %cond.true40, label %cond.false42, !dbg !20070

cond.true40:                                      ; preds = %if.then35
  %35 = load i32, i32* %fd.addr, align 4, !dbg !20071
  %36 = load i32, i32* %chmod_mode, align 4, !dbg !20072
  %call41 = call i32 @fchmod(i32 %35, i32 %36) #9, !dbg !20073
  br label %cond.end50, !dbg !20070

cond.false42:                                     ; preds = %if.then35
  %37 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20074
  %cmp43 = icmp ne i32 %37, -1, !dbg !20075
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !20074

cond.true44:                                      ; preds = %cond.false42
  %38 = load i8*, i8** %dir.addr, align 8, !dbg !20076
  %39 = load i32, i32* %chmod_mode, align 4, !dbg !20077
  %call45 = call i32 @chmod(i8* %38, i32 %39) #9, !dbg !20078
  br label %cond.end48, !dbg !20074

cond.false46:                                     ; preds = %cond.false42
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !20079
  %41 = load i32, i32* %chmod_mode, align 4, !dbg !20080
  %call47 = call i32 @chmod(i8* %40, i32 %41) #9, !dbg !20081
  br label %cond.end48, !dbg !20074

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !20074
  br label %cond.end50, !dbg !20070

cond.end50:                                       ; preds = %cond.end48, %cond.true40
  %cond51 = phi i32 [ %call41, %cond.true40 ], [ %cond49, %cond.end48 ], !dbg !20070
  store i32 %cond51, i32* %result, align 4, !dbg !20082
  br label %if.end52, !dbg !20083

if.end52:                                         ; preds = %cond.end50, %land.lhs.true32, %if.end30
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then4
  br label %if.end54, !dbg !20084

if.end54:                                         ; preds = %if.end53, %cond.end
  %42 = load i32, i32* %fd.addr, align 4, !dbg !20085
  %cmp55 = icmp sle i32 0, %42, !dbg !20087
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !20088

if.then56:                                        ; preds = %if.end54
  %43 = load i32, i32* %result, align 4, !dbg !20089
  %cmp57 = icmp eq i32 %43, 0, !dbg !20092
  br i1 %cmp57, label %if.then58, label %if.else60, !dbg !20093

if.then58:                                        ; preds = %if.then56
  %44 = load i32, i32* %fd.addr, align 4, !dbg !20094
  %call59 = call i32 @close(i32 %44), !dbg !20095
  store i32 %call59, i32* %result, align 4, !dbg !20096
  br label %if.end64, !dbg !20097

if.else60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20098, metadata !DIExpression()), !dbg !20100
  %call61 = call i32* @__errno_location() #16, !dbg !20101
  %45 = load i32, i32* %call61, align 4, !dbg !20101, !ctir !5
  store i32 %45, i32* %e, align 4, !dbg !20100
  %46 = load i32, i32* %fd.addr, align 4, !dbg !20102
  %call62 = call i32 @close(i32 %46), !dbg !20103
  %47 = load i32, i32* %e, align 4, !dbg !20104
  %call63 = call i32* @__errno_location() #16, !dbg !20105
  store i32 %47, i32* %call63, align 4, !dbg !20106, !ctir !5
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then58
  br label %if.end65, !dbg !20107

if.end65:                                         ; preds = %if.end64, %if.end54
  %48 = load i32, i32* %result, align 4, !dbg !20108
  ret i32 %48, !dbg !20109
}

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !20110 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !136
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1724
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20114, metadata !DIExpression()), !dbg !20115
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !20116, metadata !DIExpression()), !dbg !20117
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20118, metadata !DIExpression()), !dbg !20119
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !20120, metadata !DIExpression()), !dbg !20121
  store i32 0, i32* %mode, align 4, !dbg !20121
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20122
  %and = and i32 %0, 64, !dbg !20124
  %tobool = icmp ne i32 %and, 0, !dbg !20124
  br i1 %tobool, label %if.then, label %if.end, !dbg !20125

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !20126, metadata !DIExpression()), !dbg !20128
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20129, !ctir !1724
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !20129
  call void @llvm.va_start(i8* %arraydecay1), !dbg !20129
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20130, !ctir !1724
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !20130
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !20130
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !20130
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !20130

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !20130
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !20130
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !20130
  %3 = bitcast i8* %2 to i32*, !dbg !20130
  %4 = add i32 %gp_offset, 8, !dbg !20130
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !20130
  br label %vaarg.end, !dbg !20130

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !20130
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !20130
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !20130
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !20130
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !20130
  br label %vaarg.end, !dbg !20130

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !20130
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !20130
  store i32 %6, i32* %mode, align 4, !dbg !20131
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20132, !ctir !1724
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !20132
  call void @llvm.va_end(i8* %arraydecay34), !dbg !20132
  br label %if.end, !dbg !20133

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20134
  %8 = load i8*, i8** %file.addr, align 8, !dbg !20135
  %9 = load i32, i32* %flags.addr, align 4, !dbg !20136
  %10 = load i32, i32* %mode, align 4, !dbg !20137
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !20138
  %call5 = call i32 @fd_safer(i32 %call), !dbg !20139
  ret i32 %call5, !dbg !20140
}

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !20141 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !1736
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !20144, metadata !DIExpression()), !dbg !20145
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20146, metadata !DIExpression()), !dbg !20147
  %call = call noalias i8* @xmalloc(i64 24), !dbg !20148
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !20148
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !20147
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !20149
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20150
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !20151, !ctir !1737
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !20152, !ctir !1741
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20153
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !20154, !ctir !1737
  store i64 0, i64* %randmax, align 8, !dbg !20155, !ctir !1745
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20156
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !20157, !ctir !1737
  store i64 0, i64* %randnum, align 8, !dbg !20158, !ctir !1745
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20159
  ret %struct.randint_source* %5, !dbg !20160
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !20161 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1741
  %s = alloca %struct.randint_source*, align 8, !ctir !1736
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20164, metadata !DIExpression()), !dbg !20165
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20166, metadata !DIExpression()), !dbg !20167
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20168, metadata !DIExpression()), !dbg !20169
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20170
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20171
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !20172
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !20169
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20173, metadata !DIExpression()), !dbg !20174
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20175
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %2), !dbg !20176
  store %struct.randint_source* %call1, %struct.randint_source** %s, align 8, !dbg !20174
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20177
  %source2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 0, !dbg !20178, !ctir !1737
  %4 = load %struct.randread_source*, %struct.randread_source** %source2, align 8, !dbg !20178, !ctir !1741
  call void @randread(%struct.randread_source* %4, i8* null, i64 30), !dbg !20179
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20180
  ret %struct.randint_source* %5, !dbg !20181
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #10 !dbg !20182 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20187, metadata !DIExpression()), !dbg !20188
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20189
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20190, !ctir !20186
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20190, !ctir !1741
  ret %struct.randread_source* %1, !dbg !20191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !20192 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1741
  %randnum = alloca i64, align 8, !ctir !1745
  %randmax = alloca i64, align 8, !ctir !1745
  %choices = alloca i64, align 8, !ctir !1745
  %i = alloca i64, align 8, !ctir !52
  %rmax = alloca i64, align 8, !ctir !1745
  %buf = alloca [8 x i8], align 1, !ctir !1747
  %excess_choices = alloca i64, align 8, !ctir !1745
  %unusable_choices = alloca i64, align 8, !ctir !1745
  %last_usable_choice = alloca i64, align 8, !ctir !1745
  %reduced_randnum = alloca i64, align 8, !ctir !1745
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20195, metadata !DIExpression()), !dbg !20196
  store i64 %genmax, i64* %genmax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !20197, metadata !DIExpression()), !dbg !20198
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20199, metadata !DIExpression()), !dbg !20200
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20201
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20202, !ctir !1737
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !20202, !ctir !1741
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !20200
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !20203, metadata !DIExpression()), !dbg !20204
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20205
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !20206, !ctir !1737
  %3 = load i64, i64* %randnum2, align 8, !dbg !20206, !ctir !1745
  store i64 %3, i64* %randnum, align 8, !dbg !20204
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !20207, metadata !DIExpression()), !dbg !20208
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20209
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !20210, !ctir !1737
  %5 = load i64, i64* %randmax3, align 8, !dbg !20210, !ctir !1745
  store i64 %5, i64* %randmax, align 8, !dbg !20208
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !20211, metadata !DIExpression()), !dbg !20212
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !20213
  %add = add i64 %6, 1, !dbg !20214
  store i64 %add, i64* %choices, align 8, !dbg !20212
  br label %while.body, !dbg !20215

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !20216
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !20219
  %cmp = icmp ult i64 %7, %8, !dbg !20220
  br i1 %cmp, label %if.then, label %if.end, !dbg !20221

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20222, metadata !DIExpression()), !dbg !20224
  store i64 0, i64* %i, align 8, !dbg !20224
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !20225, metadata !DIExpression()), !dbg !20226
  %9 = load i64, i64* %randmax, align 8, !dbg !20227
  store i64 %9, i64* %rmax, align 8, !dbg !20226
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !20228, metadata !DIExpression()), !dbg !20229
  br label %do.body, !dbg !20230

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !20231
  %call = call i64 @shift_left(i64 %10), !dbg !20233
  %add4 = add i64 %call, 255, !dbg !20234
  store i64 %add4, i64* %rmax, align 8, !dbg !20235
  %11 = load i64, i64* %i, align 8, !dbg !20236
  %inc = add i64 %11, 1, !dbg !20236
  store i64 %inc, i64* %i, align 8, !dbg !20236
  br label %do.cond, !dbg !20237

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !20238
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !20239
  %cmp5 = icmp ult i64 %12, %13, !dbg !20240
  br i1 %cmp5, label %do.body, label %do.end, !dbg !20237, !llvm.loop !20241

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20243
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !20244, !ctir !1747
  %15 = load i64, i64* %i, align 8, !dbg !20245
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !20246
  store i64 0, i64* %i, align 8, !dbg !20247
  br label %do.body6, !dbg !20248

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !20249
  %call7 = call i64 @shift_left(i64 %16), !dbg !20251
  %17 = load i64, i64* %i, align 8, !dbg !20252
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !20253, !ctir !1747
  %18 = load i8, i8* %arrayidx, align 1, !dbg !20253
  %conv = zext i8 %18 to i64, !dbg !20253
  %add8 = add i64 %call7, %conv, !dbg !20254
  store i64 %add8, i64* %randnum, align 8, !dbg !20255
  %19 = load i64, i64* %randmax, align 8, !dbg !20256
  %call9 = call i64 @shift_left(i64 %19), !dbg !20257
  %add10 = add i64 %call9, 255, !dbg !20258
  store i64 %add10, i64* %randmax, align 8, !dbg !20259
  %20 = load i64, i64* %i, align 8, !dbg !20260
  %inc11 = add i64 %20, 1, !dbg !20260
  store i64 %inc11, i64* %i, align 8, !dbg !20260
  br label %do.cond12, !dbg !20261

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !20262
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !20263
  %cmp13 = icmp ult i64 %21, %22, !dbg !20264
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !20261, !llvm.loop !20265

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !20267

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !20268
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !20270
  %cmp16 = icmp eq i64 %23, %24, !dbg !20271
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !20272

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20273
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !20275, !ctir !1737
  store i64 0, i64* %randmax19, align 8, !dbg !20276, !ctir !1745
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20277
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !20278, !ctir !1737
  store i64 0, i64* %randnum20, align 8, !dbg !20279, !ctir !1745
  %27 = load i64, i64* %randnum, align 8, !dbg !20280
  store i64 %27, i64* %retval, align 8, !dbg !20281
  br label %return, !dbg !20281

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !20282, metadata !DIExpression()), !dbg !20284
  %28 = load i64, i64* %randmax, align 8, !dbg !20285
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !20286
  %sub = sub i64 %28, %29, !dbg !20287
  store i64 %sub, i64* %excess_choices, align 8, !dbg !20284
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !20288, metadata !DIExpression()), !dbg !20289
  %30 = load i64, i64* %excess_choices, align 8, !dbg !20290
  %31 = load i64, i64* %choices, align 8, !dbg !20291
  %rem = urem i64 %30, %31, !dbg !20292
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !20289
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !20293, metadata !DIExpression()), !dbg !20294
  %32 = load i64, i64* %randmax, align 8, !dbg !20295
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !20296
  %sub21 = sub i64 %32, %33, !dbg !20297
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !20294
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !20298, metadata !DIExpression()), !dbg !20299
  %34 = load i64, i64* %randnum, align 8, !dbg !20300
  %35 = load i64, i64* %choices, align 8, !dbg !20301
  %rem22 = urem i64 %34, %35, !dbg !20302
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !20299
  %36 = load i64, i64* %randnum, align 8, !dbg !20303
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !20305
  %cmp23 = icmp ule i64 %36, %37, !dbg !20306
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !20307

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !20308
  %39 = load i64, i64* %choices, align 8, !dbg !20310
  %div = udiv i64 %38, %39, !dbg !20311
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20312
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !20313, !ctir !1737
  store i64 %div, i64* %randnum26, align 8, !dbg !20314, !ctir !1745
  %41 = load i64, i64* %excess_choices, align 8, !dbg !20315
  %42 = load i64, i64* %choices, align 8, !dbg !20316
  %div27 = udiv i64 %41, %42, !dbg !20317
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20318
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !20319, !ctir !1737
  store i64 %div27, i64* %randmax28, align 8, !dbg !20320, !ctir !1745
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !20321
  store i64 %44, i64* %retval, align 8, !dbg !20322
  br label %return, !dbg !20322

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !20323
  store i64 %45, i64* %randnum, align 8, !dbg !20324
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !20325
  %sub30 = sub i64 %46, 1, !dbg !20326
  store i64 %sub30, i64* %randmax, align 8, !dbg !20327
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !20215, !llvm.loop !20328

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !20330
  ret i64 %47, !dbg !20330
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !20331 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20334, metadata !DIExpression()), !dbg !20335
  %0 = load i64, i64* %x.addr, align 8, !dbg !20336
  %shl = shl i64 %0, 8, !dbg !20337
  ret i64 %shl, !dbg !20338
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !20339 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20342, metadata !DIExpression()), !dbg !20343
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20344
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !20344
  call void @explicit_bzero(i8* %1, i64 24), !dbg !20345
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20346
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !20346
  call void @free(i8* %3) #9, !dbg !20347
  ret void, !dbg !20348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !20349 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20352, metadata !DIExpression()), !dbg !20353
  call void @llvm.dbg.declare(metadata i32* %r, metadata !20354, metadata !DIExpression()), !dbg !20355
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20356
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20357, !ctir !1737
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20357, !ctir !1741
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !20358
  store i32 %call, i32* %r, align 4, !dbg !20355
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20359, metadata !DIExpression()), !dbg !20360
  %call1 = call i32* @__errno_location() #16, !dbg !20361
  %2 = load i32, i32* %call1, align 4, !dbg !20361, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !20360
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20362
  call void @randint_free(%struct.randint_source* %3), !dbg !20363
  %4 = load i32, i32* %e, align 4, !dbg !20364
  %call2 = call i32* @__errno_location() #16, !dbg !20365
  store i32 %4, i32* %call2, align 4, !dbg !20366, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !20367
  ret i32 %5, !dbg !20368
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !20369 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1751
  %s = alloca %struct.randread_source*, align 8, !ctir !1791
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20372, metadata !DIExpression()), !dbg !20373
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20374, metadata !DIExpression()), !dbg !20375
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20376
  %cmp = icmp eq i64 %0, 0, !dbg !20378
  br i1 %cmp, label %if.then, label %if.else, !dbg !20379

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !20380
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !20381
  br label %return, !dbg !20381

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !20382, metadata !DIExpression()), !dbg !20384
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !20384
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20385, metadata !DIExpression()), !dbg !20386
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20387
  %tobool = icmp ne i8* %1, null, !dbg !20387
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !20389

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !20390
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.520, i64 0, i64 0)), !dbg !20392
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !20393
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !20393
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !20394

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !20395
  br label %return, !dbg !20395

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !20396

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20397
  %4 = load i8*, i8** %name.addr, align 8, !dbg !20398
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !20399
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !20400
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20401
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !20401
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !20403

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20404
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20405
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !20406, !ctir !1792
  %c = bitcast %union.anon.87* %buf to [4096 x i8]*, !dbg !20407
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !20405, !ctir !353
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20408
  %cmp9 = icmp ult i64 4096, %8, !dbg !20408
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !20408

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !20408

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20408
  br label %cond.end, !dbg !20408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !20408
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #9, !dbg !20409
  br label %if.end19, !dbg !20409

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20410
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !20412, !ctir !1792
  %isaac = bitcast %union.anon.87* %buf12 to %struct.isaac*, !dbg !20413
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !20414, !ctir !1806
  store i64 0, i64* %buffered, align 8, !dbg !20415, !ctir !52
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20416
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !20417, !ctir !1792
  %isaac14 = bitcast %union.anon.87* %buf13 to %struct.isaac*, !dbg !20418
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !20419, !ctir !1806
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !20420, !ctir !1810
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !20416, !ctir !1814
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !20416
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20421
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !20422
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20423
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !20424, !ctir !1792
  %isaac17 = bitcast %union.anon.87* %buf16 to %struct.isaac*, !dbg !20425
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !20426, !ctir !1806
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !20427
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20428
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !20429
  br label %return, !dbg !20429

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !20430
  ret %struct.randread_source* %16, !dbg !20430
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !20431 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !1791
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !20434, metadata !DIExpression()), !dbg !20435
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !20436, metadata !DIExpression()), !dbg !20437
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20438, metadata !DIExpression()), !dbg !20439
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !20440
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !20440
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !20439
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !20441
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20442
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !20443, !ctir !1792
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !20444, !ctir !1751
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20445
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !20446, !ctir !1792
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !20447, !ctir !1797
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !20448
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20449
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !20450, !ctir !1792
  store i8* %4, i8** %handler_arg2, align 8, !dbg !20451, !ctir !685
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20452
  ret %struct.randread_source* %6, !dbg !20453
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !20454 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !7
  %seeded = alloca i64, align 8, !ctir !661
  %fd = alloca i32, align 4, !ctir !5
  %v = alloca %struct.timespec, align 8, !ctir !20457
  %nbytes = alloca i64, align 8, !ctir !52
  %v19 = alloca i32, align 4, !ctir !108
  %nbytes20 = alloca i64, align 8, !ctir !52
  %v34 = alloca i32, align 4, !ctir !108
  %nbytes35 = alloca i64, align 8, !ctir !52
  %v49 = alloca i32, align 4, !ctir !124
  %nbytes50 = alloca i64, align 8, !ctir !52
  %v64 = alloca i32, align 4, !ctir !124
  %nbytes65 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !20461, metadata !DIExpression()), !dbg !20462
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !20463, metadata !DIExpression()), !dbg !20464
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20465, metadata !DIExpression()), !dbg !20466
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !20467, metadata !DIExpression()), !dbg !20468
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !20469
  store i8* %0, i8** %buf, align 8, !dbg !20468
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !20470, metadata !DIExpression()), !dbg !20471
  store i64 0, i64* %seeded, align 8, !dbg !20471
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20472, metadata !DIExpression()), !dbg !20473
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.521, i64 0, i64 0), i32 0), !dbg !20474
  store i32 %call, i32* %fd, align 4, !dbg !20473
  %1 = load i32, i32* %fd, align 4, !dbg !20475
  %cmp = icmp sle i32 0, %1, !dbg !20477
  br i1 %cmp, label %if.then, label %if.end6, !dbg !20478

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !20479
  %3 = load i8*, i8** %buf, align 8, !dbg !20481
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !20482
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20482
  %cmp1 = icmp ult i64 %4, %5, !dbg !20482
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !20482

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !20482
  br label %cond.end, !dbg !20482

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20482
  br label %cond.end, !dbg !20482

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !20482
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !20483
  store i64 %call2, i64* %seeded, align 8, !dbg !20484
  %8 = load i64, i64* %seeded, align 8, !dbg !20485
  %cmp3 = icmp slt i64 %8, 0, !dbg !20487
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20488

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !20489
  br label %if.end, !dbg !20490

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !20491
  %call5 = call i32 @close(i32 %9), !dbg !20492
  br label %if.end6, !dbg !20493

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !20494
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !20494
  %cmp7 = icmp ult i64 %10, %11, !dbg !20494
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !20496

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !20497, metadata !DIExpression()), !dbg !20499
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20500, metadata !DIExpression()), !dbg !20499
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !20499
  %13 = load i64, i64* %seeded, align 8, !dbg !20499
  %sub = sub i64 %12, %13, !dbg !20499
  %cmp9 = icmp ult i64 16, %sub, !dbg !20499
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !20499

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !20499

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !20499
  %15 = load i64, i64* %seeded, align 8, !dbg !20499
  %sub12 = sub i64 %14, %15, !dbg !20499
  br label %cond.end13, !dbg !20499

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !20499
  store i64 %cond14, i64* %nbytes, align 8, !dbg !20499
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #9, !dbg !20499
  %16 = load i8*, i8** %buf, align 8, !dbg !20499
  %17 = load i64, i64* %seeded, align 8, !dbg !20499
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !20499, !ctir !8
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !20499
  %19 = load i64, i64* %nbytes, align 8, !dbg !20499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !20499
  %20 = load i64, i64* %nbytes, align 8, !dbg !20499
  %21 = load i64, i64* %seeded, align 8, !dbg !20499
  %add = add i64 %21, %20, !dbg !20499
  store i64 %add, i64* %seeded, align 8, !dbg !20499
  br label %if.end16, !dbg !20499

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !20501
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !20501
  %cmp17 = icmp ult i64 %22, %23, !dbg !20501
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !20503

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !20504, metadata !DIExpression()), !dbg !20506
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !20507, metadata !DIExpression()), !dbg !20506
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !20506
  %25 = load i64, i64* %seeded, align 8, !dbg !20506
  %sub21 = sub i64 %24, %25, !dbg !20506
  %cmp22 = icmp ult i64 4, %sub21, !dbg !20506
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !20506

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !20506

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !20506
  %27 = load i64, i64* %seeded, align 8, !dbg !20506
  %sub25 = sub i64 %26, %27, !dbg !20506
  br label %cond.end26, !dbg !20506

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !20506
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !20506
  %call28 = call i32 @getpid() #9, !dbg !20506
  store i32 %call28, i32* %v19, align 4, !dbg !20506
  %28 = load i8*, i8** %buf, align 8, !dbg !20506
  %29 = load i64, i64* %seeded, align 8, !dbg !20506
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !20506, !ctir !8
  %30 = bitcast i32* %v19 to i8*, !dbg !20506
  %31 = load i64, i64* %nbytes20, align 8, !dbg !20506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !20506
  %32 = load i64, i64* %nbytes20, align 8, !dbg !20506
  %33 = load i64, i64* %seeded, align 8, !dbg !20506
  %add30 = add i64 %33, %32, !dbg !20506
  store i64 %add30, i64* %seeded, align 8, !dbg !20506
  br label %if.end31, !dbg !20506

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !20508
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !20508
  %cmp32 = icmp ult i64 %34, %35, !dbg !20508
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !20510

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !20511, metadata !DIExpression()), !dbg !20513
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !20514, metadata !DIExpression()), !dbg !20513
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !20513
  %37 = load i64, i64* %seeded, align 8, !dbg !20513
  %sub36 = sub i64 %36, %37, !dbg !20513
  %cmp37 = icmp ult i64 4, %sub36, !dbg !20513
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !20513

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !20513

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !20513
  %39 = load i64, i64* %seeded, align 8, !dbg !20513
  %sub40 = sub i64 %38, %39, !dbg !20513
  br label %cond.end41, !dbg !20513

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !20513
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !20513
  %call43 = call i32 @getppid() #9, !dbg !20513
  store i32 %call43, i32* %v34, align 4, !dbg !20513
  %40 = load i8*, i8** %buf, align 8, !dbg !20513
  %41 = load i64, i64* %seeded, align 8, !dbg !20513
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !20513, !ctir !8
  %42 = bitcast i32* %v34 to i8*, !dbg !20513
  %43 = load i64, i64* %nbytes35, align 8, !dbg !20513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !20513
  %44 = load i64, i64* %nbytes35, align 8, !dbg !20513
  %45 = load i64, i64* %seeded, align 8, !dbg !20513
  %add45 = add i64 %45, %44, !dbg !20513
  store i64 %add45, i64* %seeded, align 8, !dbg !20513
  br label %if.end46, !dbg !20513

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !20515
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !20515
  %cmp47 = icmp ult i64 %46, %47, !dbg !20515
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !20517

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !20518, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !20521, metadata !DIExpression()), !dbg !20520
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !20520
  %49 = load i64, i64* %seeded, align 8, !dbg !20520
  %sub51 = sub i64 %48, %49, !dbg !20520
  %cmp52 = icmp ult i64 4, %sub51, !dbg !20520
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !20520

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !20520

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !20520
  %51 = load i64, i64* %seeded, align 8, !dbg !20520
  %sub55 = sub i64 %50, %51, !dbg !20520
  br label %cond.end56, !dbg !20520

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !20520
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !20520
  %call58 = call i32 @getuid() #9, !dbg !20520
  store i32 %call58, i32* %v49, align 4, !dbg !20520
  %52 = load i8*, i8** %buf, align 8, !dbg !20520
  %53 = load i64, i64* %seeded, align 8, !dbg !20520
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !20520, !ctir !8
  %54 = bitcast i32* %v49 to i8*, !dbg !20520
  %55 = load i64, i64* %nbytes50, align 8, !dbg !20520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !20520
  %56 = load i64, i64* %nbytes50, align 8, !dbg !20520
  %57 = load i64, i64* %seeded, align 8, !dbg !20520
  %add60 = add i64 %57, %56, !dbg !20520
  store i64 %add60, i64* %seeded, align 8, !dbg !20520
  br label %if.end61, !dbg !20520

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !20522
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !20522
  %cmp62 = icmp ult i64 %58, %59, !dbg !20522
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !20524

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !20525, metadata !DIExpression()), !dbg !20527
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !20528, metadata !DIExpression()), !dbg !20527
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !20527
  %61 = load i64, i64* %seeded, align 8, !dbg !20527
  %sub66 = sub i64 %60, %61, !dbg !20527
  %cmp67 = icmp ult i64 4, %sub66, !dbg !20527
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !20527

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !20527

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !20527
  %63 = load i64, i64* %seeded, align 8, !dbg !20527
  %sub70 = sub i64 %62, %63, !dbg !20527
  br label %cond.end71, !dbg !20527

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !20527
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !20527
  %call73 = call i32 @getgid() #9, !dbg !20527
  store i32 %call73, i32* %v64, align 4, !dbg !20527
  %64 = load i8*, i8** %buf, align 8, !dbg !20527
  %65 = load i64, i64* %seeded, align 8, !dbg !20527
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !20527, !ctir !8
  %66 = bitcast i32* %v64 to i8*, !dbg !20527
  %67 = load i64, i64* %nbytes65, align 8, !dbg !20527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !20527
  %68 = load i64, i64* %nbytes65, align 8, !dbg !20527
  %69 = load i64, i64* %seeded, align 8, !dbg !20527
  %add75 = add i64 %69, %68, !dbg !20527
  store i64 %add75, i64* %seeded, align 8, !dbg !20527
  br label %if.end76, !dbg !20527

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !20529
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !20530 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !20531, metadata !DIExpression()), !dbg !20532
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !20533
  %tobool = icmp ne i8* %0, null, !dbg !20533
  br i1 %tobool, label %if.then, label %if.end, !dbg !20535

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20536
  %call = call i32* @__errno_location() #16, !dbg !20537
  %2 = load i32, i32* %call, align 4, !dbg !20537, !ctir !5
  %call1 = call i32* @__errno_location() #16, !dbg !20538
  %3 = load i32, i32* %call1, align 4, !dbg !20538, !ctir !5
  %cmp = icmp eq i32 %3, 0, !dbg !20539
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20538

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.522, i64 0, i64 0)) #9, !dbg !20540
  br label %cond.end, !dbg !20538

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.523, i64 0, i64 0)) #9, !dbg !20541
  br label %cond.end, !dbg !20538

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !20538
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !20542
  %call4 = call i8* @quote(i8* %4), !dbg !20543
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !20544
  br label %if.end, !dbg !20544

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !20545
  unreachable, !dbg !20545
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !20546 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20549, metadata !DIExpression()), !dbg !20550
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !20551, metadata !DIExpression()), !dbg !20552
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !20553
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20554
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !20555, !ctir !1792
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !20556, !ctir !1797
  ret void, !dbg !20557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !20558 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20561, metadata !DIExpression()), !dbg !20562
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !20563, metadata !DIExpression()), !dbg !20564
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !20565
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20566
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !20567, !ctir !1792
  store i8* %0, i8** %handler_arg1, align 8, !dbg !20568, !ctir !685
  ret void, !dbg !20569
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !20570 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20573, metadata !DIExpression()), !dbg !20574
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20575, metadata !DIExpression()), !dbg !20576
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20577, metadata !DIExpression()), !dbg !20578
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20579
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !20581, !ctir !1792
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20581, !ctir !1751
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !20579
  br i1 %tobool, label %if.then, label %if.else, !dbg !20582

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20583
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !20584
  %4 = load i64, i64* %size.addr, align 8, !dbg !20585
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !20586
  br label %if.end, !dbg !20586

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20587
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !20588, !ctir !1792
  %isaac = bitcast %union.anon.87* %buf1 to %struct.isaac*, !dbg !20589
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !20590
  %7 = load i64, i64* %size.addr, align 8, !dbg !20591
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !20592
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20593
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !20594 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !52
  %fread_errno = alloca i32, align 4, !ctir !5
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20598, metadata !DIExpression()), !dbg !20599
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !20600, metadata !DIExpression()), !dbg !20601
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20602, metadata !DIExpression()), !dbg !20603
  br label %while.body, !dbg !20604

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !20605, metadata !DIExpression()), !dbg !20607
  %0 = load i8*, i8** %p.addr, align 8, !dbg !20608
  %1 = load i64, i64* %size.addr, align 8, !dbg !20608
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20608
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !20608, !ctir !1792
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20608, !ctir !1751
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !20608
  store i64 %call, i64* %inbytes, align 8, !dbg !20607
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !20609, metadata !DIExpression()), !dbg !20610
  %call1 = call i32* @__errno_location() #16, !dbg !20611
  %4 = load i32, i32* %call1, align 4, !dbg !20611, !ctir !5
  store i32 %4, i32* %fread_errno, align 4, !dbg !20610
  %5 = load i64, i64* %inbytes, align 8, !dbg !20612
  %6 = load i8*, i8** %p.addr, align 8, !dbg !20613
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !20613, !ctir !585
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !20613
  %7 = load i64, i64* %inbytes, align 8, !dbg !20614
  %8 = load i64, i64* %size.addr, align 8, !dbg !20615
  %sub = sub i64 %8, %7, !dbg !20615
  store i64 %sub, i64* %size.addr, align 8, !dbg !20615
  %9 = load i64, i64* %size.addr, align 8, !dbg !20616
  %cmp = icmp eq i64 %9, 0, !dbg !20618
  br i1 %cmp, label %if.then, label %if.end, !dbg !20619

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !20620

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20621
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !20621, !ctir !1792
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !20621, !ctir !1751
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #9, !dbg !20621
  %tobool = icmp ne i32 %call3, 0, !dbg !20621
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20621

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !20622
  br label %cond.end, !dbg !20621

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !20621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !20621
  %call4 = call i32* @__errno_location() #16, !dbg !20623
  store i32 %cond, i32* %call4, align 4, !dbg !20624, !ctir !5
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20625
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !20626, !ctir !1792
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !20626, !ctir !1797
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20627
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !20628, !ctir !1792
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !20628, !ctir !685
  call void %14(i8* %16), !dbg !20625
  br label %while.body, !dbg !20604, !llvm.loop !20629

while.end:                                        ; preds = %if.then
  ret void, !dbg !20631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !20632 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !52
  %char_p = alloca i8*, align 8, !ctir !7
  %wp = alloca i64*, align 8, !ctir !1828
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !20636, metadata !DIExpression()), !dbg !20637
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !20638, metadata !DIExpression()), !dbg !20639
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20640, metadata !DIExpression()), !dbg !20641
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !20642, metadata !DIExpression()), !dbg !20643
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20644
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !20645, !ctir !1806
  %1 = load i64, i64* %buffered, align 8, !dbg !20645, !ctir !52
  store i64 %1, i64* %inbytes, align 8, !dbg !20643
  br label %while.body, !dbg !20646

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !20647, metadata !DIExpression()), !dbg !20649
  %2 = load i8*, i8** %p.addr, align 8, !dbg !20650
  store i8* %2, i8** %char_p, align 8, !dbg !20649
  %3 = load i64, i64* %size.addr, align 8, !dbg !20651
  %4 = load i64, i64* %inbytes, align 8, !dbg !20653
  %cmp = icmp ule i64 %3, %4, !dbg !20654
  br i1 %cmp, label %if.then, label %if.end, !dbg !20655

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !20656
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20658
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !20659, !ctir !1806
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !20660
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !20658, !ctir !1825
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !20661, !ctir !585
  %7 = load i64, i64* %inbytes, align 8, !dbg !20662
  %idx.neg = sub i64 0, %7, !dbg !20663
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !20663, !ctir !585
  %8 = load i64, i64* %size.addr, align 8, !dbg !20664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !20665
  %9 = load i64, i64* %inbytes, align 8, !dbg !20666
  %10 = load i64, i64* %size.addr, align 8, !dbg !20667
  %sub = sub i64 %9, %10, !dbg !20668
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20669
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !20670, !ctir !1806
  store i64 %sub, i64* %buffered2, align 8, !dbg !20671, !ctir !52
  br label %return, !dbg !20672

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !20673
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20674
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !20675, !ctir !1806
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !20676
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !20674, !ctir !1825
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !20677, !ctir !585
  %14 = load i64, i64* %inbytes, align 8, !dbg !20678
  %idx.neg7 = sub i64 0, %14, !dbg !20679
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !20679, !ctir !585
  %15 = load i64, i64* %inbytes, align 8, !dbg !20680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !20681
  %16 = load i8*, i8** %char_p, align 8, !dbg !20682
  %17 = load i64, i64* %inbytes, align 8, !dbg !20683
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !20684, !ctir !8
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !20685
  %18 = load i64, i64* %inbytes, align 8, !dbg !20686
  %19 = load i64, i64* %size.addr, align 8, !dbg !20687
  %sub10 = sub i64 %19, %18, !dbg !20687
  store i64 %sub10, i64* %size.addr, align 8, !dbg !20687
  %20 = load i8*, i8** %p.addr, align 8, !dbg !20688
  %21 = ptrtoint i8* %20 to i64, !dbg !20688
  %rem = urem i64 %21, 8, !dbg !20688
  %cmp11 = icmp eq i64 %rem, 0, !dbg !20688
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !20690

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !20691, metadata !DIExpression()), !dbg !20693
  %22 = load i8*, i8** %p.addr, align 8, !dbg !20694
  %23 = bitcast i8* %22 to i64*, !dbg !20694
  store i64* %23, i64** %wp, align 8, !dbg !20693
  br label %while.cond13, !dbg !20695

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !20696
  %cmp14 = icmp ule i64 2048, %24, !dbg !20697
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !20695

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20698
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !20700, !ctir !1806
  %26 = load i64*, i64** %wp, align 8, !dbg !20701
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !20702
  %27 = load i64*, i64** %wp, align 8, !dbg !20703
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !20703, !ctir !1815
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !20703
  %28 = load i64, i64* %size.addr, align 8, !dbg !20704
  %sub17 = sub i64 %28, 2048, !dbg !20704
  store i64 %sub17, i64* %size.addr, align 8, !dbg !20704
  %29 = load i64, i64* %size.addr, align 8, !dbg !20705
  %cmp18 = icmp eq i64 %29, 0, !dbg !20707
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !20708

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20709
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !20711, !ctir !1806
  store i64 0, i64* %buffered20, align 8, !dbg !20712, !ctir !52
  br label %return, !dbg !20713

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !20695, !llvm.loop !20714

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !20716
  %32 = bitcast i64* %31 to i8*, !dbg !20716
  store i8* %32, i8** %p.addr, align 8, !dbg !20717
  br label %if.end22, !dbg !20718

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20719
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !20720, !ctir !1806
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20721
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !20722, !ctir !1806
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !20723
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !20721, !ctir !1814
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !20724
  store i64 2048, i64* %inbytes, align 8, !dbg !20725
  br label %while.body, !dbg !20646, !llvm.loop !20726

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !20728
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !20729 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1751
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20732, metadata !DIExpression()), !dbg !20733
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !20734, metadata !DIExpression()), !dbg !20735
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20736
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !20737, !ctir !1792
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !20737, !ctir !1751
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !20735
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20738
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !20738
  call void @explicit_bzero(i8* %3, i64 4152), !dbg !20739
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20740
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !20740
  call void @free(i8* %5) #9, !dbg !20741
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20742
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !20742
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20742

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20743
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !20744
  br label %cond.end, !dbg !20742

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20742

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !20742
  ret i32 %cond, !dbg !20745
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !20746 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !1815
  %b = alloca i64, align 8, !ctir !1815
  %m = alloca i64*, align 8, !ctir !1828
  %r = alloca i64*, align 8, !ctir !1828
  %x = alloca i64, align 8, !ctir !1815
  %y = alloca i64, align 8, !ctir !1815
  %x18 = alloca i64, align 8, !ctir !1815
  %y19 = alloca i64, align 8, !ctir !1815
  %x40 = alloca i64, align 8, !ctir !1815
  %y41 = alloca i64, align 8, !ctir !1815
  %x61 = alloca i64, align 8, !ctir !1815
  %y62 = alloca i64, align 8, !ctir !1815
  %x88 = alloca i64, align 8, !ctir !1815
  %y89 = alloca i64, align 8, !ctir !1815
  %x110 = alloca i64, align 8, !ctir !1815
  %y111 = alloca i64, align 8, !ctir !1815
  %x132 = alloca i64, align 8, !ctir !1815
  %y133 = alloca i64, align 8, !ctir !1815
  %x153 = alloca i64, align 8, !ctir !1815
  %y154 = alloca i64, align 8, !ctir !1815
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !20757, metadata !DIExpression()), !dbg !20758
  store i64* %result, i64** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !20759, metadata !DIExpression()), !dbg !20760
  call void @llvm.dbg.declare(metadata i64* %a, metadata !20761, metadata !DIExpression()), !dbg !20762
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20763
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !20764, !ctir !20751
  %1 = load i64, i64* %a1, align 8, !dbg !20764, !ctir !1815
  store i64 %1, i64* %a, align 8, !dbg !20762
  call void @llvm.dbg.declare(metadata i64* %b, metadata !20765, metadata !DIExpression()), !dbg !20766
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20767
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !20768, !ctir !20751
  %3 = load i64, i64* %b2, align 8, !dbg !20768, !ctir !1815
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20769
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !20770, !ctir !20751
  %5 = load i64, i64* %c, align 8, !dbg !20771, !ctir !1815
  %inc = add i64 %5, 1, !dbg !20771
  store i64 %inc, i64* %c, align 8, !dbg !20771, !ctir !1815
  %add = add i64 %3, %inc, !dbg !20772
  store i64 %add, i64* %b, align 8, !dbg !20766
  call void @llvm.dbg.declare(metadata i64** %m, metadata !20773, metadata !DIExpression()), !dbg !20774
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20775
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !20776, !ctir !20751
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !20775, !ctir !1814
  store i64* %arraydecay, i64** %m, align 8, !dbg !20774
  call void @llvm.dbg.declare(metadata i64** %r, metadata !20777, metadata !DIExpression()), !dbg !20778
  %7 = load i64*, i64** %result.addr, align 8, !dbg !20779
  store i64* %7, i64** %r, align 8, !dbg !20778
  br label %do.body, !dbg !20780

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !20781, metadata !DIExpression()), !dbg !20784
  call void @llvm.dbg.declare(metadata i64* %y, metadata !20785, metadata !DIExpression()), !dbg !20784
  %8 = load i64, i64* %a, align 8, !dbg !20784
  %9 = load i64, i64* %a, align 8, !dbg !20784
  %shl = shl i64 %9, 21, !dbg !20784
  %xor = xor i64 %8, %shl, !dbg !20784
  %neg = xor i64 %xor, -1, !dbg !20784
  %xor4 = xor i64 0, %neg, !dbg !20784
  %10 = load i64*, i64** %m, align 8, !dbg !20784
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !20784, !ctir !1828
  %11 = load i64, i64* %arrayidx, align 8, !dbg !20784
  %add5 = add i64 %xor4, %11, !dbg !20784
  store i64 %add5, i64* %a, align 8, !dbg !20784
  %12 = load i64*, i64** %m, align 8, !dbg !20784
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !20784, !ctir !1828
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !20784
  store i64 %13, i64* %x, align 8, !dbg !20784
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20784
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !20784, !ctir !20751
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !20784, !ctir !1814
  %15 = load i64, i64* %x, align 8, !dbg !20784
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !20784
  %16 = load i64, i64* %a, align 8, !dbg !20784
  %add9 = add i64 %call, %16, !dbg !20784
  %17 = load i64, i64* %b, align 8, !dbg !20784
  %add10 = add i64 %add9, %17, !dbg !20784
  store i64 %add10, i64* %y, align 8, !dbg !20784
  %18 = load i64*, i64** %m, align 8, !dbg !20784
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !20784, !ctir !1828
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !20784
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20784
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !20784, !ctir !20751
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !20784, !ctir !1814
  %20 = load i64, i64* %y, align 8, !dbg !20784
  %shr = lshr i64 %20, 8, !dbg !20784
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !20784
  %21 = load i64, i64* %x, align 8, !dbg !20784
  %add15 = add i64 %call14, %21, !dbg !20784
  %call16 = call i64 @just(i64 %add15), !dbg !20784
  store i64 %call16, i64* %b, align 8, !dbg !20784
  %22 = load i64*, i64** %r, align 8, !dbg !20784
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !20784, !ctir !1828
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !20784
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !20786, metadata !DIExpression()), !dbg !20788
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !20789, metadata !DIExpression()), !dbg !20788
  %23 = load i64, i64* %a, align 8, !dbg !20788
  %24 = load i64, i64* %a, align 8, !dbg !20788
  %call20 = call i64 @just(i64 %24), !dbg !20788
  %shr21 = lshr i64 %call20, 5, !dbg !20788
  %xor22 = xor i64 %23, %shr21, !dbg !20788
  %xor23 = xor i64 0, %xor22, !dbg !20788
  %25 = load i64*, i64** %m, align 8, !dbg !20788
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !20788, !ctir !1828
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !20788
  %add25 = add i64 %xor23, %26, !dbg !20788
  store i64 %add25, i64* %a, align 8, !dbg !20788
  %27 = load i64*, i64** %m, align 8, !dbg !20788
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !20788, !ctir !1828
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !20788
  store i64 %28, i64* %x18, align 8, !dbg !20788
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20788
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !20788, !ctir !20751
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !20788, !ctir !1814
  %30 = load i64, i64* %x18, align 8, !dbg !20788
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !20788
  %31 = load i64, i64* %a, align 8, !dbg !20788
  %add30 = add i64 %call29, %31, !dbg !20788
  %32 = load i64, i64* %b, align 8, !dbg !20788
  %add31 = add i64 %add30, %32, !dbg !20788
  store i64 %add31, i64* %y19, align 8, !dbg !20788
  %33 = load i64*, i64** %m, align 8, !dbg !20788
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !20788, !ctir !1828
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !20788
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20788
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !20788, !ctir !20751
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !20788, !ctir !1814
  %35 = load i64, i64* %y19, align 8, !dbg !20788
  %shr35 = lshr i64 %35, 8, !dbg !20788
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !20788
  %36 = load i64, i64* %x18, align 8, !dbg !20788
  %add37 = add i64 %call36, %36, !dbg !20788
  %call38 = call i64 @just(i64 %add37), !dbg !20788
  store i64 %call38, i64* %b, align 8, !dbg !20788
  %37 = load i64*, i64** %r, align 8, !dbg !20788
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !20788, !ctir !1828
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !20788
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !20790, metadata !DIExpression()), !dbg !20792
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !20793, metadata !DIExpression()), !dbg !20792
  %38 = load i64, i64* %a, align 8, !dbg !20792
  %39 = load i64, i64* %a, align 8, !dbg !20792
  %shl42 = shl i64 %39, 12, !dbg !20792
  %xor43 = xor i64 %38, %shl42, !dbg !20792
  %xor44 = xor i64 0, %xor43, !dbg !20792
  %40 = load i64*, i64** %m, align 8, !dbg !20792
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !20792, !ctir !1828
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !20792
  %add46 = add i64 %xor44, %41, !dbg !20792
  store i64 %add46, i64* %a, align 8, !dbg !20792
  %42 = load i64*, i64** %m, align 8, !dbg !20792
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !20792, !ctir !1828
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !20792
  store i64 %43, i64* %x40, align 8, !dbg !20792
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20792
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !20792, !ctir !20751
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !20792, !ctir !1814
  %45 = load i64, i64* %x40, align 8, !dbg !20792
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !20792
  %46 = load i64, i64* %a, align 8, !dbg !20792
  %add51 = add i64 %call50, %46, !dbg !20792
  %47 = load i64, i64* %b, align 8, !dbg !20792
  %add52 = add i64 %add51, %47, !dbg !20792
  store i64 %add52, i64* %y41, align 8, !dbg !20792
  %48 = load i64*, i64** %m, align 8, !dbg !20792
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !20792, !ctir !1828
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !20792
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20792
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !20792, !ctir !20751
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !20792, !ctir !1814
  %50 = load i64, i64* %y41, align 8, !dbg !20792
  %shr56 = lshr i64 %50, 8, !dbg !20792
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !20792
  %51 = load i64, i64* %x40, align 8, !dbg !20792
  %add58 = add i64 %call57, %51, !dbg !20792
  %call59 = call i64 @just(i64 %add58), !dbg !20792
  store i64 %call59, i64* %b, align 8, !dbg !20792
  %52 = load i64*, i64** %r, align 8, !dbg !20792
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !20792, !ctir !1828
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !20792
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !20794, metadata !DIExpression()), !dbg !20796
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !20797, metadata !DIExpression()), !dbg !20796
  %53 = load i64, i64* %a, align 8, !dbg !20796
  %54 = load i64, i64* %a, align 8, !dbg !20796
  %call63 = call i64 @just(i64 %54), !dbg !20796
  %shr64 = lshr i64 %call63, 33, !dbg !20796
  %xor65 = xor i64 %53, %shr64, !dbg !20796
  %xor66 = xor i64 0, %xor65, !dbg !20796
  %55 = load i64*, i64** %m, align 8, !dbg !20796
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !20796, !ctir !1828
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !20796
  %add68 = add i64 %xor66, %56, !dbg !20796
  store i64 %add68, i64* %a, align 8, !dbg !20796
  %57 = load i64*, i64** %m, align 8, !dbg !20796
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !20796, !ctir !1828
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !20796
  store i64 %58, i64* %x61, align 8, !dbg !20796
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20796
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !20796, !ctir !20751
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !20796, !ctir !1814
  %60 = load i64, i64* %x61, align 8, !dbg !20796
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !20796
  %61 = load i64, i64* %a, align 8, !dbg !20796
  %add73 = add i64 %call72, %61, !dbg !20796
  %62 = load i64, i64* %b, align 8, !dbg !20796
  %add74 = add i64 %add73, %62, !dbg !20796
  store i64 %add74, i64* %y62, align 8, !dbg !20796
  %63 = load i64*, i64** %m, align 8, !dbg !20796
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !20796, !ctir !1828
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !20796
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20796
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !20796, !ctir !20751
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !20796, !ctir !1814
  %65 = load i64, i64* %y62, align 8, !dbg !20796
  %shr78 = lshr i64 %65, 8, !dbg !20796
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !20796
  %66 = load i64, i64* %x61, align 8, !dbg !20796
  %add80 = add i64 %call79, %66, !dbg !20796
  %call81 = call i64 @just(i64 %add80), !dbg !20796
  store i64 %call81, i64* %b, align 8, !dbg !20796
  %67 = load i64*, i64** %r, align 8, !dbg !20796
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !20796, !ctir !1828
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !20796
  %68 = load i64*, i64** %r, align 8, !dbg !20798
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !20798, !ctir !1815
  store i64* %add.ptr, i64** %r, align 8, !dbg !20798
  br label %do.cond, !dbg !20799

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !20800
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !20800, !ctir !1815
  store i64* %add.ptr83, i64** %m, align 8, !dbg !20800
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20801
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !20802, !ctir !20751
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !20801, !ctir !1814
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !20803, !ctir !1815
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !20804
  br i1 %cmp, label %do.body, label %do.end, !dbg !20799, !llvm.loop !20805

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !20807

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !20808, metadata !DIExpression()), !dbg !20811
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !20812, metadata !DIExpression()), !dbg !20811
  %71 = load i64, i64* %a, align 8, !dbg !20811
  %72 = load i64, i64* %a, align 8, !dbg !20811
  %shl90 = shl i64 %72, 21, !dbg !20811
  %xor91 = xor i64 %71, %shl90, !dbg !20811
  %neg92 = xor i64 %xor91, -1, !dbg !20811
  %xor93 = xor i64 0, %neg92, !dbg !20811
  %73 = load i64*, i64** %m, align 8, !dbg !20811
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !20811, !ctir !1828
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !20811
  %add95 = add i64 %xor93, %74, !dbg !20811
  store i64 %add95, i64* %a, align 8, !dbg !20811
  %75 = load i64*, i64** %m, align 8, !dbg !20811
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !20811, !ctir !1828
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !20811
  store i64 %76, i64* %x88, align 8, !dbg !20811
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20811
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !20811, !ctir !20751
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !20811, !ctir !1814
  %78 = load i64, i64* %x88, align 8, !dbg !20811
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !20811
  %79 = load i64, i64* %a, align 8, !dbg !20811
  %add100 = add i64 %call99, %79, !dbg !20811
  %80 = load i64, i64* %b, align 8, !dbg !20811
  %add101 = add i64 %add100, %80, !dbg !20811
  store i64 %add101, i64* %y89, align 8, !dbg !20811
  %81 = load i64*, i64** %m, align 8, !dbg !20811
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !20811, !ctir !1828
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !20811
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20811
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !20811, !ctir !20751
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !20811, !ctir !1814
  %83 = load i64, i64* %y89, align 8, !dbg !20811
  %shr105 = lshr i64 %83, 8, !dbg !20811
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !20811
  %84 = load i64, i64* %x88, align 8, !dbg !20811
  %add107 = add i64 %call106, %84, !dbg !20811
  %call108 = call i64 @just(i64 %add107), !dbg !20811
  store i64 %call108, i64* %b, align 8, !dbg !20811
  %85 = load i64*, i64** %r, align 8, !dbg !20811
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !20811, !ctir !1828
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !20811
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !20813, metadata !DIExpression()), !dbg !20815
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !20816, metadata !DIExpression()), !dbg !20815
  %86 = load i64, i64* %a, align 8, !dbg !20815
  %87 = load i64, i64* %a, align 8, !dbg !20815
  %call112 = call i64 @just(i64 %87), !dbg !20815
  %shr113 = lshr i64 %call112, 5, !dbg !20815
  %xor114 = xor i64 %86, %shr113, !dbg !20815
  %xor115 = xor i64 0, %xor114, !dbg !20815
  %88 = load i64*, i64** %m, align 8, !dbg !20815
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !20815, !ctir !1828
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !20815
  %add117 = add i64 %xor115, %89, !dbg !20815
  store i64 %add117, i64* %a, align 8, !dbg !20815
  %90 = load i64*, i64** %m, align 8, !dbg !20815
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !20815, !ctir !1828
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !20815
  store i64 %91, i64* %x110, align 8, !dbg !20815
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20815
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !20815, !ctir !20751
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !20815, !ctir !1814
  %93 = load i64, i64* %x110, align 8, !dbg !20815
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !20815
  %94 = load i64, i64* %a, align 8, !dbg !20815
  %add122 = add i64 %call121, %94, !dbg !20815
  %95 = load i64, i64* %b, align 8, !dbg !20815
  %add123 = add i64 %add122, %95, !dbg !20815
  store i64 %add123, i64* %y111, align 8, !dbg !20815
  %96 = load i64*, i64** %m, align 8, !dbg !20815
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !20815, !ctir !1828
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !20815
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20815
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !20815, !ctir !20751
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !20815, !ctir !1814
  %98 = load i64, i64* %y111, align 8, !dbg !20815
  %shr127 = lshr i64 %98, 8, !dbg !20815
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !20815
  %99 = load i64, i64* %x110, align 8, !dbg !20815
  %add129 = add i64 %call128, %99, !dbg !20815
  %call130 = call i64 @just(i64 %add129), !dbg !20815
  store i64 %call130, i64* %b, align 8, !dbg !20815
  %100 = load i64*, i64** %r, align 8, !dbg !20815
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !20815, !ctir !1828
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !20815
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !20817, metadata !DIExpression()), !dbg !20819
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !20820, metadata !DIExpression()), !dbg !20819
  %101 = load i64, i64* %a, align 8, !dbg !20819
  %102 = load i64, i64* %a, align 8, !dbg !20819
  %shl134 = shl i64 %102, 12, !dbg !20819
  %xor135 = xor i64 %101, %shl134, !dbg !20819
  %xor136 = xor i64 0, %xor135, !dbg !20819
  %103 = load i64*, i64** %m, align 8, !dbg !20819
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !20819, !ctir !1828
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !20819
  %add138 = add i64 %xor136, %104, !dbg !20819
  store i64 %add138, i64* %a, align 8, !dbg !20819
  %105 = load i64*, i64** %m, align 8, !dbg !20819
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !20819, !ctir !1828
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !20819
  store i64 %106, i64* %x132, align 8, !dbg !20819
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20819
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !20819, !ctir !20751
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !20819, !ctir !1814
  %108 = load i64, i64* %x132, align 8, !dbg !20819
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !20819
  %109 = load i64, i64* %a, align 8, !dbg !20819
  %add143 = add i64 %call142, %109, !dbg !20819
  %110 = load i64, i64* %b, align 8, !dbg !20819
  %add144 = add i64 %add143, %110, !dbg !20819
  store i64 %add144, i64* %y133, align 8, !dbg !20819
  %111 = load i64*, i64** %m, align 8, !dbg !20819
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !20819, !ctir !1828
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !20819
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20819
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !20819, !ctir !20751
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !20819, !ctir !1814
  %113 = load i64, i64* %y133, align 8, !dbg !20819
  %shr148 = lshr i64 %113, 8, !dbg !20819
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !20819
  %114 = load i64, i64* %x132, align 8, !dbg !20819
  %add150 = add i64 %call149, %114, !dbg !20819
  %call151 = call i64 @just(i64 %add150), !dbg !20819
  store i64 %call151, i64* %b, align 8, !dbg !20819
  %115 = load i64*, i64** %r, align 8, !dbg !20819
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !20819, !ctir !1828
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !20819
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !20821, metadata !DIExpression()), !dbg !20823
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !20824, metadata !DIExpression()), !dbg !20823
  %116 = load i64, i64* %a, align 8, !dbg !20823
  %117 = load i64, i64* %a, align 8, !dbg !20823
  %call155 = call i64 @just(i64 %117), !dbg !20823
  %shr156 = lshr i64 %call155, 33, !dbg !20823
  %xor157 = xor i64 %116, %shr156, !dbg !20823
  %xor158 = xor i64 0, %xor157, !dbg !20823
  %118 = load i64*, i64** %m, align 8, !dbg !20823
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !20823, !ctir !1828
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !20823
  %add160 = add i64 %xor158, %119, !dbg !20823
  store i64 %add160, i64* %a, align 8, !dbg !20823
  %120 = load i64*, i64** %m, align 8, !dbg !20823
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !20823, !ctir !1828
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !20823
  store i64 %121, i64* %x153, align 8, !dbg !20823
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20823
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !20823, !ctir !20751
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !20823, !ctir !1814
  %123 = load i64, i64* %x153, align 8, !dbg !20823
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !20823
  %124 = load i64, i64* %a, align 8, !dbg !20823
  %add165 = add i64 %call164, %124, !dbg !20823
  %125 = load i64, i64* %b, align 8, !dbg !20823
  %add166 = add i64 %add165, %125, !dbg !20823
  store i64 %add166, i64* %y154, align 8, !dbg !20823
  %126 = load i64*, i64** %m, align 8, !dbg !20823
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !20823, !ctir !1828
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !20823
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20823
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !20823, !ctir !20751
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !20823, !ctir !1814
  %128 = load i64, i64* %y154, align 8, !dbg !20823
  %shr170 = lshr i64 %128, 8, !dbg !20823
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !20823
  %129 = load i64, i64* %x153, align 8, !dbg !20823
  %add172 = add i64 %call171, %129, !dbg !20823
  %call173 = call i64 @just(i64 %add172), !dbg !20823
  store i64 %call173, i64* %b, align 8, !dbg !20823
  %130 = load i64*, i64** %r, align 8, !dbg !20823
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !20823, !ctir !1828
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !20823
  %131 = load i64*, i64** %r, align 8, !dbg !20825
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !20825, !ctir !1815
  store i64* %add.ptr175, i64** %r, align 8, !dbg !20825
  br label %do.cond176, !dbg !20826

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !20827
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !20827, !ctir !1815
  store i64* %add.ptr177, i64** %m, align 8, !dbg !20827
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20828
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !20829, !ctir !20751
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !20828, !ctir !1814
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !20830, !ctir !1815
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !20831
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !20826, !llvm.loop !20832

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !20834
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20835
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !20836, !ctir !20751
  store i64 %134, i64* %a183, align 8, !dbg !20837, !ctir !1815
  %136 = load i64, i64* %b, align 8, !dbg !20838
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20839
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !20840, !ctir !20751
  store i64 %136, i64* %b184, align 8, !dbg !20841, !ctir !1815
  ret void, !dbg !20842
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !20843 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !685
  %base_p = alloca i8*, align 8, !ctir !180
  %word_p = alloca i8*, align 8, !ctir !685
  %p = alloca i64*, align 8, !ctir !1832
  store i64* %m, i64** %m.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !20846, metadata !DIExpression()), !dbg !20847
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20848, metadata !DIExpression()), !dbg !20849
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !20850, metadata !DIExpression()), !dbg !20853
  %0 = load i64*, i64** %m.addr, align 8, !dbg !20854
  %1 = bitcast i64* %0 to i8*, !dbg !20854
  store i8* %1, i8** %void_m, align 8, !dbg !20853
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !20855, metadata !DIExpression()), !dbg !20856
  %2 = load i8*, i8** %void_m, align 8, !dbg !20857
  store i8* %2, i8** %base_p, align 8, !dbg !20856
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !20858, metadata !DIExpression()), !dbg !20859
  %3 = load i8*, i8** %base_p, align 8, !dbg !20860
  %4 = load i64, i64* %x.addr, align 8, !dbg !20861
  %and = and i64 %4, 2040, !dbg !20862
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !20863, !ctir !181
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !20859
  call void @llvm.dbg.declare(metadata i64** %p, metadata !20864, metadata !DIExpression()), !dbg !20865
  %5 = load i8*, i8** %word_p, align 8, !dbg !20866
  %6 = bitcast i8* %5 to i64*, !dbg !20866
  store i64* %6, i64** %p, align 8, !dbg !20865
  %7 = load i64*, i64** %p, align 8, !dbg !20867
  %8 = load i64, i64* %7, align 8, !dbg !20868, !ctir !1833
  ret i64 %8, !dbg !20869
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !20870 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !1815
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !20873, metadata !DIExpression()), !dbg !20874
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !20875, metadata !DIExpression()), !dbg !20876
  store i64 -1, i64* %desired_bits, align 8, !dbg !20876
  %0 = load i64, i64* %a.addr, align 8, !dbg !20877
  %1 = load i64, i64* %desired_bits, align 8, !dbg !20878
  %and = and i64 %0, %1, !dbg !20879
  ret i64 %and, !dbg !20880
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !20881 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !1815
  %b = alloca i64, align 8, !ctir !1815
  %c = alloca i64, align 8, !ctir !1815
  %d = alloca i64, align 8, !ctir !1815
  %e = alloca i64, align 8, !ctir !1815
  %f = alloca i64, align 8, !ctir !1815
  %g = alloca i64, align 8, !ctir !1815
  %h = alloca i64, align 8, !ctir !1815
  %i = alloca i32, align 4, !ctir !5
  %i99 = alloca i32, align 4, !ctir !5
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !20884, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.declare(metadata i64* %a, metadata !20886, metadata !DIExpression()), !dbg !20887
  store i64 7240739780546808700, i64* %a, align 8, !dbg !20887
  call void @llvm.dbg.declare(metadata i64* %b, metadata !20888, metadata !DIExpression()), !dbg !20889
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !20889
  call void @llvm.dbg.declare(metadata i64* %c, metadata !20890, metadata !DIExpression()), !dbg !20891
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !20891
  call void @llvm.dbg.declare(metadata i64* %d, metadata !20892, metadata !DIExpression()), !dbg !20893
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !20893
  call void @llvm.dbg.declare(metadata i64* %e, metadata !20894, metadata !DIExpression()), !dbg !20895
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !20895
  call void @llvm.dbg.declare(metadata i64* %f, metadata !20896, metadata !DIExpression()), !dbg !20897
  store i64 5259722845879046933, i64* %f, align 8, !dbg !20897
  call void @llvm.dbg.declare(metadata i64* %g, metadata !20898, metadata !DIExpression()), !dbg !20899
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !20899
  call void @llvm.dbg.declare(metadata i64* %h, metadata !20900, metadata !DIExpression()), !dbg !20901
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !20901
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20902, metadata !DIExpression()), !dbg !20904
  store i32 0, i32* %i, align 4, !dbg !20905
  br label %for.cond, !dbg !20905

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !20907
  %cmp = icmp slt i32 %0, 256, !dbg !20907
  br i1 %cmp, label %for.body, label %for.end, !dbg !20905

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !20909, !ctir !20751
  %2 = load i32, i32* %i, align 4, !dbg !20909
  %idxprom = sext i32 %2 to i64, !dbg !20909
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !20909, !ctir !1814
  %3 = load i64, i64* %arrayidx, align 8, !dbg !20909
  %4 = load i64, i64* %a, align 8, !dbg !20909
  %add = add i64 %4, %3, !dbg !20909
  store i64 %add, i64* %a, align 8, !dbg !20909
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !20909, !ctir !20751
  %6 = load i32, i32* %i, align 4, !dbg !20909
  %add2 = add nsw i32 %6, 1, !dbg !20909
  %idxprom3 = sext i32 %add2 to i64, !dbg !20909
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !20909, !ctir !1814
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !20909
  %8 = load i64, i64* %b, align 8, !dbg !20909
  %add5 = add i64 %8, %7, !dbg !20909
  store i64 %add5, i64* %b, align 8, !dbg !20909
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !20909, !ctir !20751
  %10 = load i32, i32* %i, align 4, !dbg !20909
  %add7 = add nsw i32 %10, 2, !dbg !20909
  %idxprom8 = sext i32 %add7 to i64, !dbg !20909
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !20909, !ctir !1814
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !20909
  %12 = load i64, i64* %c, align 8, !dbg !20909
  %add10 = add i64 %12, %11, !dbg !20909
  store i64 %add10, i64* %c, align 8, !dbg !20909
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !20909, !ctir !20751
  %14 = load i32, i32* %i, align 4, !dbg !20909
  %add12 = add nsw i32 %14, 3, !dbg !20909
  %idxprom13 = sext i32 %add12 to i64, !dbg !20909
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !20909, !ctir !1814
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !20909
  %16 = load i64, i64* %d, align 8, !dbg !20909
  %add15 = add i64 %16, %15, !dbg !20909
  store i64 %add15, i64* %d, align 8, !dbg !20909
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !20909, !ctir !20751
  %18 = load i32, i32* %i, align 4, !dbg !20909
  %add17 = add nsw i32 %18, 4, !dbg !20909
  %idxprom18 = sext i32 %add17 to i64, !dbg !20909
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !20909, !ctir !1814
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !20909
  %20 = load i64, i64* %e, align 8, !dbg !20909
  %add20 = add i64 %20, %19, !dbg !20909
  store i64 %add20, i64* %e, align 8, !dbg !20909
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !20909, !ctir !20751
  %22 = load i32, i32* %i, align 4, !dbg !20909
  %add22 = add nsw i32 %22, 5, !dbg !20909
  %idxprom23 = sext i32 %add22 to i64, !dbg !20909
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !20909, !ctir !1814
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !20909
  %24 = load i64, i64* %f, align 8, !dbg !20909
  %add25 = add i64 %24, %23, !dbg !20909
  store i64 %add25, i64* %f, align 8, !dbg !20909
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !20909, !ctir !20751
  %26 = load i32, i32* %i, align 4, !dbg !20909
  %add27 = add nsw i32 %26, 6, !dbg !20909
  %idxprom28 = sext i32 %add27 to i64, !dbg !20909
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !20909, !ctir !1814
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !20909
  %28 = load i64, i64* %g, align 8, !dbg !20909
  %add30 = add i64 %28, %27, !dbg !20909
  store i64 %add30, i64* %g, align 8, !dbg !20909
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !20909, !ctir !20751
  %30 = load i32, i32* %i, align 4, !dbg !20909
  %add32 = add nsw i32 %30, 7, !dbg !20909
  %idxprom33 = sext i32 %add32 to i64, !dbg !20909
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !20909, !ctir !1814
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !20909
  %32 = load i64, i64* %h, align 8, !dbg !20909
  %add35 = add i64 %32, %31, !dbg !20909
  store i64 %add35, i64* %h, align 8, !dbg !20909
  %33 = load i64, i64* %e, align 8, !dbg !20911
  %34 = load i64, i64* %a, align 8, !dbg !20911
  %sub = sub i64 %34, %33, !dbg !20911
  store i64 %sub, i64* %a, align 8, !dbg !20911
  %35 = load i64, i64* %h, align 8, !dbg !20911
  %call = call i64 @just(i64 %35), !dbg !20911
  %shr = lshr i64 %call, 9, !dbg !20911
  %36 = load i64, i64* %f, align 8, !dbg !20911
  %xor = xor i64 %36, %shr, !dbg !20911
  store i64 %xor, i64* %f, align 8, !dbg !20911
  %37 = load i64, i64* %a, align 8, !dbg !20911
  %38 = load i64, i64* %h, align 8, !dbg !20911
  %add36 = add i64 %38, %37, !dbg !20911
  store i64 %add36, i64* %h, align 8, !dbg !20911
  %39 = load i64, i64* %f, align 8, !dbg !20911
  %40 = load i64, i64* %b, align 8, !dbg !20911
  %sub37 = sub i64 %40, %39, !dbg !20911
  store i64 %sub37, i64* %b, align 8, !dbg !20911
  %41 = load i64, i64* %a, align 8, !dbg !20911
  %shl = shl i64 %41, 9, !dbg !20911
  %42 = load i64, i64* %g, align 8, !dbg !20911
  %xor38 = xor i64 %42, %shl, !dbg !20911
  store i64 %xor38, i64* %g, align 8, !dbg !20911
  %43 = load i64, i64* %b, align 8, !dbg !20911
  %44 = load i64, i64* %a, align 8, !dbg !20911
  %add39 = add i64 %44, %43, !dbg !20911
  store i64 %add39, i64* %a, align 8, !dbg !20911
  %45 = load i64, i64* %g, align 8, !dbg !20911
  %46 = load i64, i64* %c, align 8, !dbg !20911
  %sub40 = sub i64 %46, %45, !dbg !20911
  store i64 %sub40, i64* %c, align 8, !dbg !20911
  %47 = load i64, i64* %b, align 8, !dbg !20911
  %call41 = call i64 @just(i64 %47), !dbg !20911
  %shr42 = lshr i64 %call41, 23, !dbg !20911
  %48 = load i64, i64* %h, align 8, !dbg !20911
  %xor43 = xor i64 %48, %shr42, !dbg !20911
  store i64 %xor43, i64* %h, align 8, !dbg !20911
  %49 = load i64, i64* %c, align 8, !dbg !20911
  %50 = load i64, i64* %b, align 8, !dbg !20911
  %add44 = add i64 %50, %49, !dbg !20911
  store i64 %add44, i64* %b, align 8, !dbg !20911
  %51 = load i64, i64* %h, align 8, !dbg !20911
  %52 = load i64, i64* %d, align 8, !dbg !20911
  %sub45 = sub i64 %52, %51, !dbg !20911
  store i64 %sub45, i64* %d, align 8, !dbg !20911
  %53 = load i64, i64* %c, align 8, !dbg !20911
  %shl46 = shl i64 %53, 15, !dbg !20911
  %54 = load i64, i64* %a, align 8, !dbg !20911
  %xor47 = xor i64 %54, %shl46, !dbg !20911
  store i64 %xor47, i64* %a, align 8, !dbg !20911
  %55 = load i64, i64* %d, align 8, !dbg !20911
  %56 = load i64, i64* %c, align 8, !dbg !20911
  %add48 = add i64 %56, %55, !dbg !20911
  store i64 %add48, i64* %c, align 8, !dbg !20911
  %57 = load i64, i64* %a, align 8, !dbg !20911
  %58 = load i64, i64* %e, align 8, !dbg !20911
  %sub49 = sub i64 %58, %57, !dbg !20911
  store i64 %sub49, i64* %e, align 8, !dbg !20911
  %59 = load i64, i64* %d, align 8, !dbg !20911
  %call50 = call i64 @just(i64 %59), !dbg !20911
  %shr51 = lshr i64 %call50, 14, !dbg !20911
  %60 = load i64, i64* %b, align 8, !dbg !20911
  %xor52 = xor i64 %60, %shr51, !dbg !20911
  store i64 %xor52, i64* %b, align 8, !dbg !20911
  %61 = load i64, i64* %e, align 8, !dbg !20911
  %62 = load i64, i64* %d, align 8, !dbg !20911
  %add53 = add i64 %62, %61, !dbg !20911
  store i64 %add53, i64* %d, align 8, !dbg !20911
  %63 = load i64, i64* %b, align 8, !dbg !20911
  %64 = load i64, i64* %f, align 8, !dbg !20911
  %sub54 = sub i64 %64, %63, !dbg !20911
  store i64 %sub54, i64* %f, align 8, !dbg !20911
  %65 = load i64, i64* %e, align 8, !dbg !20911
  %shl55 = shl i64 %65, 20, !dbg !20911
  %66 = load i64, i64* %c, align 8, !dbg !20911
  %xor56 = xor i64 %66, %shl55, !dbg !20911
  store i64 %xor56, i64* %c, align 8, !dbg !20911
  %67 = load i64, i64* %f, align 8, !dbg !20911
  %68 = load i64, i64* %e, align 8, !dbg !20911
  %add57 = add i64 %68, %67, !dbg !20911
  store i64 %add57, i64* %e, align 8, !dbg !20911
  %69 = load i64, i64* %c, align 8, !dbg !20911
  %70 = load i64, i64* %g, align 8, !dbg !20911
  %sub58 = sub i64 %70, %69, !dbg !20911
  store i64 %sub58, i64* %g, align 8, !dbg !20911
  %71 = load i64, i64* %f, align 8, !dbg !20911
  %call59 = call i64 @just(i64 %71), !dbg !20911
  %shr60 = lshr i64 %call59, 17, !dbg !20911
  %72 = load i64, i64* %d, align 8, !dbg !20911
  %xor61 = xor i64 %72, %shr60, !dbg !20911
  store i64 %xor61, i64* %d, align 8, !dbg !20911
  %73 = load i64, i64* %g, align 8, !dbg !20911
  %74 = load i64, i64* %f, align 8, !dbg !20911
  %add62 = add i64 %74, %73, !dbg !20911
  store i64 %add62, i64* %f, align 8, !dbg !20911
  %75 = load i64, i64* %d, align 8, !dbg !20911
  %76 = load i64, i64* %h, align 8, !dbg !20911
  %sub63 = sub i64 %76, %75, !dbg !20911
  store i64 %sub63, i64* %h, align 8, !dbg !20911
  %77 = load i64, i64* %g, align 8, !dbg !20911
  %shl64 = shl i64 %77, 14, !dbg !20911
  %78 = load i64, i64* %e, align 8, !dbg !20911
  %xor65 = xor i64 %78, %shl64, !dbg !20911
  store i64 %xor65, i64* %e, align 8, !dbg !20911
  %79 = load i64, i64* %h, align 8, !dbg !20911
  %80 = load i64, i64* %g, align 8, !dbg !20911
  %add66 = add i64 %80, %79, !dbg !20911
  store i64 %add66, i64* %g, align 8, !dbg !20911
  %81 = load i64, i64* %a, align 8, !dbg !20909
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !20909, !ctir !20751
  %83 = load i32, i32* %i, align 4, !dbg !20909
  %idxprom68 = sext i32 %83 to i64, !dbg !20909
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !20909, !ctir !1814
  store i64 %81, i64* %arrayidx69, align 8, !dbg !20909
  %84 = load i64, i64* %b, align 8, !dbg !20909
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !20909, !ctir !20751
  %86 = load i32, i32* %i, align 4, !dbg !20909
  %add71 = add nsw i32 %86, 1, !dbg !20909
  %idxprom72 = sext i32 %add71 to i64, !dbg !20909
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !20909, !ctir !1814
  store i64 %84, i64* %arrayidx73, align 8, !dbg !20909
  %87 = load i64, i64* %c, align 8, !dbg !20909
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !20909, !ctir !20751
  %89 = load i32, i32* %i, align 4, !dbg !20909
  %add75 = add nsw i32 %89, 2, !dbg !20909
  %idxprom76 = sext i32 %add75 to i64, !dbg !20909
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !20909, !ctir !1814
  store i64 %87, i64* %arrayidx77, align 8, !dbg !20909
  %90 = load i64, i64* %d, align 8, !dbg !20909
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !20909, !ctir !20751
  %92 = load i32, i32* %i, align 4, !dbg !20909
  %add79 = add nsw i32 %92, 3, !dbg !20909
  %idxprom80 = sext i32 %add79 to i64, !dbg !20909
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !20909, !ctir !1814
  store i64 %90, i64* %arrayidx81, align 8, !dbg !20909
  %93 = load i64, i64* %e, align 8, !dbg !20909
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !20909, !ctir !20751
  %95 = load i32, i32* %i, align 4, !dbg !20909
  %add83 = add nsw i32 %95, 4, !dbg !20909
  %idxprom84 = sext i32 %add83 to i64, !dbg !20909
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !20909, !ctir !1814
  store i64 %93, i64* %arrayidx85, align 8, !dbg !20909
  %96 = load i64, i64* %f, align 8, !dbg !20909
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !20909, !ctir !20751
  %98 = load i32, i32* %i, align 4, !dbg !20909
  %add87 = add nsw i32 %98, 5, !dbg !20909
  %idxprom88 = sext i32 %add87 to i64, !dbg !20909
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !20909, !ctir !1814
  store i64 %96, i64* %arrayidx89, align 8, !dbg !20909
  %99 = load i64, i64* %g, align 8, !dbg !20909
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !20909, !ctir !20751
  %101 = load i32, i32* %i, align 4, !dbg !20909
  %add91 = add nsw i32 %101, 6, !dbg !20909
  %idxprom92 = sext i32 %add91 to i64, !dbg !20909
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !20909, !ctir !1814
  store i64 %99, i64* %arrayidx93, align 8, !dbg !20909
  %102 = load i64, i64* %h, align 8, !dbg !20909
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20909
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !20909, !ctir !20751
  %104 = load i32, i32* %i, align 4, !dbg !20909
  %add95 = add nsw i32 %104, 7, !dbg !20909
  %idxprom96 = sext i32 %add95 to i64, !dbg !20909
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !20909, !ctir !1814
  store i64 %102, i64* %arrayidx97, align 8, !dbg !20909
  br label %for.inc, !dbg !20909

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !20907
  %add98 = add nsw i32 %105, 8, !dbg !20907
  store i32 %add98, i32* %i, align 4, !dbg !20907
  br label %for.cond, !dbg !20907, !llvm.loop !20913

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !20914, metadata !DIExpression()), !dbg !20916
  store i32 0, i32* %i99, align 4, !dbg !20917
  br label %for.cond100, !dbg !20917

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !20919
  %cmp101 = icmp slt i32 %106, 256, !dbg !20919
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !20917

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !20921, !ctir !20751
  %108 = load i32, i32* %i99, align 4, !dbg !20921
  %idxprom104 = sext i32 %108 to i64, !dbg !20921
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !20921, !ctir !1814
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !20921
  %110 = load i64, i64* %a, align 8, !dbg !20921
  %add106 = add i64 %110, %109, !dbg !20921
  store i64 %add106, i64* %a, align 8, !dbg !20921
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !20921, !ctir !20751
  %112 = load i32, i32* %i99, align 4, !dbg !20921
  %add108 = add nsw i32 %112, 1, !dbg !20921
  %idxprom109 = sext i32 %add108 to i64, !dbg !20921
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !20921, !ctir !1814
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !20921
  %114 = load i64, i64* %b, align 8, !dbg !20921
  %add111 = add i64 %114, %113, !dbg !20921
  store i64 %add111, i64* %b, align 8, !dbg !20921
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !20921, !ctir !20751
  %116 = load i32, i32* %i99, align 4, !dbg !20921
  %add113 = add nsw i32 %116, 2, !dbg !20921
  %idxprom114 = sext i32 %add113 to i64, !dbg !20921
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !20921, !ctir !1814
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !20921
  %118 = load i64, i64* %c, align 8, !dbg !20921
  %add116 = add i64 %118, %117, !dbg !20921
  store i64 %add116, i64* %c, align 8, !dbg !20921
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !20921, !ctir !20751
  %120 = load i32, i32* %i99, align 4, !dbg !20921
  %add118 = add nsw i32 %120, 3, !dbg !20921
  %idxprom119 = sext i32 %add118 to i64, !dbg !20921
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !20921, !ctir !1814
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !20921
  %122 = load i64, i64* %d, align 8, !dbg !20921
  %add121 = add i64 %122, %121, !dbg !20921
  store i64 %add121, i64* %d, align 8, !dbg !20921
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !20921, !ctir !20751
  %124 = load i32, i32* %i99, align 4, !dbg !20921
  %add123 = add nsw i32 %124, 4, !dbg !20921
  %idxprom124 = sext i32 %add123 to i64, !dbg !20921
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !20921, !ctir !1814
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !20921
  %126 = load i64, i64* %e, align 8, !dbg !20921
  %add126 = add i64 %126, %125, !dbg !20921
  store i64 %add126, i64* %e, align 8, !dbg !20921
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !20921, !ctir !20751
  %128 = load i32, i32* %i99, align 4, !dbg !20921
  %add128 = add nsw i32 %128, 5, !dbg !20921
  %idxprom129 = sext i32 %add128 to i64, !dbg !20921
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !20921, !ctir !1814
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !20921
  %130 = load i64, i64* %f, align 8, !dbg !20921
  %add131 = add i64 %130, %129, !dbg !20921
  store i64 %add131, i64* %f, align 8, !dbg !20921
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !20921, !ctir !20751
  %132 = load i32, i32* %i99, align 4, !dbg !20921
  %add133 = add nsw i32 %132, 6, !dbg !20921
  %idxprom134 = sext i32 %add133 to i64, !dbg !20921
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !20921, !ctir !1814
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !20921
  %134 = load i64, i64* %g, align 8, !dbg !20921
  %add136 = add i64 %134, %133, !dbg !20921
  store i64 %add136, i64* %g, align 8, !dbg !20921
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !20921, !ctir !20751
  %136 = load i32, i32* %i99, align 4, !dbg !20921
  %add138 = add nsw i32 %136, 7, !dbg !20921
  %idxprom139 = sext i32 %add138 to i64, !dbg !20921
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !20921, !ctir !1814
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !20921
  %138 = load i64, i64* %h, align 8, !dbg !20921
  %add141 = add i64 %138, %137, !dbg !20921
  store i64 %add141, i64* %h, align 8, !dbg !20921
  %139 = load i64, i64* %e, align 8, !dbg !20923
  %140 = load i64, i64* %a, align 8, !dbg !20923
  %sub142 = sub i64 %140, %139, !dbg !20923
  store i64 %sub142, i64* %a, align 8, !dbg !20923
  %141 = load i64, i64* %h, align 8, !dbg !20923
  %call143 = call i64 @just(i64 %141), !dbg !20923
  %shr144 = lshr i64 %call143, 9, !dbg !20923
  %142 = load i64, i64* %f, align 8, !dbg !20923
  %xor145 = xor i64 %142, %shr144, !dbg !20923
  store i64 %xor145, i64* %f, align 8, !dbg !20923
  %143 = load i64, i64* %a, align 8, !dbg !20923
  %144 = load i64, i64* %h, align 8, !dbg !20923
  %add146 = add i64 %144, %143, !dbg !20923
  store i64 %add146, i64* %h, align 8, !dbg !20923
  %145 = load i64, i64* %f, align 8, !dbg !20923
  %146 = load i64, i64* %b, align 8, !dbg !20923
  %sub147 = sub i64 %146, %145, !dbg !20923
  store i64 %sub147, i64* %b, align 8, !dbg !20923
  %147 = load i64, i64* %a, align 8, !dbg !20923
  %shl148 = shl i64 %147, 9, !dbg !20923
  %148 = load i64, i64* %g, align 8, !dbg !20923
  %xor149 = xor i64 %148, %shl148, !dbg !20923
  store i64 %xor149, i64* %g, align 8, !dbg !20923
  %149 = load i64, i64* %b, align 8, !dbg !20923
  %150 = load i64, i64* %a, align 8, !dbg !20923
  %add150 = add i64 %150, %149, !dbg !20923
  store i64 %add150, i64* %a, align 8, !dbg !20923
  %151 = load i64, i64* %g, align 8, !dbg !20923
  %152 = load i64, i64* %c, align 8, !dbg !20923
  %sub151 = sub i64 %152, %151, !dbg !20923
  store i64 %sub151, i64* %c, align 8, !dbg !20923
  %153 = load i64, i64* %b, align 8, !dbg !20923
  %call152 = call i64 @just(i64 %153), !dbg !20923
  %shr153 = lshr i64 %call152, 23, !dbg !20923
  %154 = load i64, i64* %h, align 8, !dbg !20923
  %xor154 = xor i64 %154, %shr153, !dbg !20923
  store i64 %xor154, i64* %h, align 8, !dbg !20923
  %155 = load i64, i64* %c, align 8, !dbg !20923
  %156 = load i64, i64* %b, align 8, !dbg !20923
  %add155 = add i64 %156, %155, !dbg !20923
  store i64 %add155, i64* %b, align 8, !dbg !20923
  %157 = load i64, i64* %h, align 8, !dbg !20923
  %158 = load i64, i64* %d, align 8, !dbg !20923
  %sub156 = sub i64 %158, %157, !dbg !20923
  store i64 %sub156, i64* %d, align 8, !dbg !20923
  %159 = load i64, i64* %c, align 8, !dbg !20923
  %shl157 = shl i64 %159, 15, !dbg !20923
  %160 = load i64, i64* %a, align 8, !dbg !20923
  %xor158 = xor i64 %160, %shl157, !dbg !20923
  store i64 %xor158, i64* %a, align 8, !dbg !20923
  %161 = load i64, i64* %d, align 8, !dbg !20923
  %162 = load i64, i64* %c, align 8, !dbg !20923
  %add159 = add i64 %162, %161, !dbg !20923
  store i64 %add159, i64* %c, align 8, !dbg !20923
  %163 = load i64, i64* %a, align 8, !dbg !20923
  %164 = load i64, i64* %e, align 8, !dbg !20923
  %sub160 = sub i64 %164, %163, !dbg !20923
  store i64 %sub160, i64* %e, align 8, !dbg !20923
  %165 = load i64, i64* %d, align 8, !dbg !20923
  %call161 = call i64 @just(i64 %165), !dbg !20923
  %shr162 = lshr i64 %call161, 14, !dbg !20923
  %166 = load i64, i64* %b, align 8, !dbg !20923
  %xor163 = xor i64 %166, %shr162, !dbg !20923
  store i64 %xor163, i64* %b, align 8, !dbg !20923
  %167 = load i64, i64* %e, align 8, !dbg !20923
  %168 = load i64, i64* %d, align 8, !dbg !20923
  %add164 = add i64 %168, %167, !dbg !20923
  store i64 %add164, i64* %d, align 8, !dbg !20923
  %169 = load i64, i64* %b, align 8, !dbg !20923
  %170 = load i64, i64* %f, align 8, !dbg !20923
  %sub165 = sub i64 %170, %169, !dbg !20923
  store i64 %sub165, i64* %f, align 8, !dbg !20923
  %171 = load i64, i64* %e, align 8, !dbg !20923
  %shl166 = shl i64 %171, 20, !dbg !20923
  %172 = load i64, i64* %c, align 8, !dbg !20923
  %xor167 = xor i64 %172, %shl166, !dbg !20923
  store i64 %xor167, i64* %c, align 8, !dbg !20923
  %173 = load i64, i64* %f, align 8, !dbg !20923
  %174 = load i64, i64* %e, align 8, !dbg !20923
  %add168 = add i64 %174, %173, !dbg !20923
  store i64 %add168, i64* %e, align 8, !dbg !20923
  %175 = load i64, i64* %c, align 8, !dbg !20923
  %176 = load i64, i64* %g, align 8, !dbg !20923
  %sub169 = sub i64 %176, %175, !dbg !20923
  store i64 %sub169, i64* %g, align 8, !dbg !20923
  %177 = load i64, i64* %f, align 8, !dbg !20923
  %call170 = call i64 @just(i64 %177), !dbg !20923
  %shr171 = lshr i64 %call170, 17, !dbg !20923
  %178 = load i64, i64* %d, align 8, !dbg !20923
  %xor172 = xor i64 %178, %shr171, !dbg !20923
  store i64 %xor172, i64* %d, align 8, !dbg !20923
  %179 = load i64, i64* %g, align 8, !dbg !20923
  %180 = load i64, i64* %f, align 8, !dbg !20923
  %add173 = add i64 %180, %179, !dbg !20923
  store i64 %add173, i64* %f, align 8, !dbg !20923
  %181 = load i64, i64* %d, align 8, !dbg !20923
  %182 = load i64, i64* %h, align 8, !dbg !20923
  %sub174 = sub i64 %182, %181, !dbg !20923
  store i64 %sub174, i64* %h, align 8, !dbg !20923
  %183 = load i64, i64* %g, align 8, !dbg !20923
  %shl175 = shl i64 %183, 14, !dbg !20923
  %184 = load i64, i64* %e, align 8, !dbg !20923
  %xor176 = xor i64 %184, %shl175, !dbg !20923
  store i64 %xor176, i64* %e, align 8, !dbg !20923
  %185 = load i64, i64* %h, align 8, !dbg !20923
  %186 = load i64, i64* %g, align 8, !dbg !20923
  %add177 = add i64 %186, %185, !dbg !20923
  store i64 %add177, i64* %g, align 8, !dbg !20923
  %187 = load i64, i64* %a, align 8, !dbg !20921
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !20921, !ctir !20751
  %189 = load i32, i32* %i99, align 4, !dbg !20921
  %idxprom179 = sext i32 %189 to i64, !dbg !20921
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !20921, !ctir !1814
  store i64 %187, i64* %arrayidx180, align 8, !dbg !20921
  %190 = load i64, i64* %b, align 8, !dbg !20921
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !20921, !ctir !20751
  %192 = load i32, i32* %i99, align 4, !dbg !20921
  %add182 = add nsw i32 %192, 1, !dbg !20921
  %idxprom183 = sext i32 %add182 to i64, !dbg !20921
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !20921, !ctir !1814
  store i64 %190, i64* %arrayidx184, align 8, !dbg !20921
  %193 = load i64, i64* %c, align 8, !dbg !20921
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !20921, !ctir !20751
  %195 = load i32, i32* %i99, align 4, !dbg !20921
  %add186 = add nsw i32 %195, 2, !dbg !20921
  %idxprom187 = sext i32 %add186 to i64, !dbg !20921
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !20921, !ctir !1814
  store i64 %193, i64* %arrayidx188, align 8, !dbg !20921
  %196 = load i64, i64* %d, align 8, !dbg !20921
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !20921, !ctir !20751
  %198 = load i32, i32* %i99, align 4, !dbg !20921
  %add190 = add nsw i32 %198, 3, !dbg !20921
  %idxprom191 = sext i32 %add190 to i64, !dbg !20921
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !20921, !ctir !1814
  store i64 %196, i64* %arrayidx192, align 8, !dbg !20921
  %199 = load i64, i64* %e, align 8, !dbg !20921
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !20921, !ctir !20751
  %201 = load i32, i32* %i99, align 4, !dbg !20921
  %add194 = add nsw i32 %201, 4, !dbg !20921
  %idxprom195 = sext i32 %add194 to i64, !dbg !20921
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !20921, !ctir !1814
  store i64 %199, i64* %arrayidx196, align 8, !dbg !20921
  %202 = load i64, i64* %f, align 8, !dbg !20921
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !20921, !ctir !20751
  %204 = load i32, i32* %i99, align 4, !dbg !20921
  %add198 = add nsw i32 %204, 5, !dbg !20921
  %idxprom199 = sext i32 %add198 to i64, !dbg !20921
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !20921, !ctir !1814
  store i64 %202, i64* %arrayidx200, align 8, !dbg !20921
  %205 = load i64, i64* %g, align 8, !dbg !20921
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !20921, !ctir !20751
  %207 = load i32, i32* %i99, align 4, !dbg !20921
  %add202 = add nsw i32 %207, 6, !dbg !20921
  %idxprom203 = sext i32 %add202 to i64, !dbg !20921
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !20921, !ctir !1814
  store i64 %205, i64* %arrayidx204, align 8, !dbg !20921
  %208 = load i64, i64* %h, align 8, !dbg !20921
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20921
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !20921, !ctir !20751
  %210 = load i32, i32* %i99, align 4, !dbg !20921
  %add206 = add nsw i32 %210, 7, !dbg !20921
  %idxprom207 = sext i32 %add206 to i64, !dbg !20921
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !20921, !ctir !1814
  store i64 %208, i64* %arrayidx208, align 8, !dbg !20921
  br label %for.inc209, !dbg !20921

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !20919
  %add210 = add nsw i32 %211, 8, !dbg !20919
  store i32 %add210, i32* %i99, align 4, !dbg !20919
  br label %for.cond100, !dbg !20919, !llvm.loop !20925

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20926
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !20927, !ctir !20751
  store i64 0, i64* %c212, align 8, !dbg !20928, !ctir !1815
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20929
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !20930, !ctir !20751
  store i64 0, i64* %b213, align 8, !dbg !20931, !ctir !1815
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20932
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !20933, !ctir !20751
  store i64 0, i64* %a214, align 8, !dbg !20934, !ctir !1815
  ret void, !dbg !20935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !20936 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20938, metadata !DIExpression()), !dbg !20939
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20940
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !20941
  ret i32 %call, !dbg !20942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @explicit_bzero(i8* nonnull %s, i64 %len) #4 !dbg !20943 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20947, metadata !DIExpression()), !dbg !20948
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !20949, metadata !DIExpression()), !dbg !20950
  %0 = load i8*, i8** %s.addr, align 8, !dbg !20951
  %1 = load i64, i64* %len.addr, align 8, !dbg !20952
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !20953
  ret void, !dbg !20954
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !20955 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !20999, metadata !DIExpression()), !dbg !21000
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21001, metadata !DIExpression()), !dbg !21002
  store i32 0, i32* %saved_errno, align 4, !dbg !21002
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21003, metadata !DIExpression()), !dbg !21004
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21005, metadata !DIExpression()), !dbg !21006
  store i32 0, i32* %result, align 4, !dbg !21006
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21007
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9, !dbg !21008
  store i32 %call, i32* %fd, align 4, !dbg !21009
  %1 = load i32, i32* %fd, align 4, !dbg !21010
  %cmp = icmp slt i32 %1, 0, !dbg !21012
  br i1 %cmp, label %if.then, label %if.end, !dbg !21013

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21014
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21015
  store i32 %call1, i32* %retval, align 4, !dbg !21016
  br label %return, !dbg !21016

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21017
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #9, !dbg !21017
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21017
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21019

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21020
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #9, !dbg !21021
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #9, !dbg !21022
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21023
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21024

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21025
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21026
  %tobool = icmp ne i32 %call7, 0, !dbg !21026
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21027

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !21028
  %6 = load i32, i32* %call9, align 4, !dbg !21028, !ctir !5
  store i32 %6, i32* %saved_errno, align 4, !dbg !21029
  br label %if.end10, !dbg !21030

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21031
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21032
  store i32 %call11, i32* %result, align 4, !dbg !21033
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21034
  %cmp12 = icmp ne i32 %8, 0, !dbg !21036
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21037

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21038
  %call14 = call i32* @__errno_location() #16, !dbg !21040
  store i32 %9, i32* %call14, align 4, !dbg !21041, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !21042
  br label %if.end15, !dbg !21043

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21044
  store i32 %10, i32* %retval, align 4, !dbg !21045
  br label %return, !dbg !21045

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21046
  ret i32 %11, !dbg !21046
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !21047 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1175
  %result = alloca i32, align 4, !ctir !5
  %target = alloca i32, align 4, !ctir !5
  %target4 = alloca i32, align 4, !ctir !5
  %x = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !47
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21050, metadata !DIExpression()), !dbg !21051
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !21052, metadata !DIExpression()), !dbg !21053
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !21054, metadata !DIExpression()), !dbg !21055
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21056, metadata !DIExpression()), !dbg !21057
  store i32 -1, i32* %result, align 4, !dbg !21057
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21058, !ctir !1175
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !21058
  call void @llvm.va_start(i8* %arraydecay1), !dbg !21058
  %0 = load i32, i32* %action.addr, align 4, !dbg !21059
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !21060

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !21061, metadata !DIExpression()), !dbg !21064
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21065, !ctir !1175
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !21065
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !21065
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !21065
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !21065

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !21065
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !21065
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !21065
  %3 = bitcast i8* %2 to i32*, !dbg !21065
  %4 = add i32 %gp_offset, 8, !dbg !21065
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !21065
  br label %vaarg.end, !dbg !21065

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !21065
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !21065
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !21065
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !21065
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !21065
  br label %vaarg.end, !dbg !21065

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !21065
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !21065
  store i32 %6, i32* %target, align 4, !dbg !21064
  %7 = load i32, i32* %fd.addr, align 4, !dbg !21066
  %8 = load i32, i32* %target, align 4, !dbg !21067
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !21068
  store i32 %call, i32* %result, align 4, !dbg !21069
  br label %sw.epilog48, !dbg !21070

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !21071, metadata !DIExpression()), !dbg !21073
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21074, !ctir !1175
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !21074
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !21074
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !21074
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !21074

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !21074
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !21074
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !21074
  %11 = bitcast i8* %10 to i32*, !dbg !21074
  %12 = add i32 %gp_offset7, 8, !dbg !21074
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !21074
  br label %vaarg.end15, !dbg !21074

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !21074
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !21074
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !21074
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !21074
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !21074
  br label %vaarg.end15, !dbg !21074

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !21074
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !21074
  store i32 %14, i32* %target4, align 4, !dbg !21073
  %15 = load i32, i32* %fd.addr, align 4, !dbg !21075
  %16 = load i32, i32* %target4, align 4, !dbg !21076
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !21077
  store i32 %call17, i32* %result, align 4, !dbg !21078
  br label %sw.epilog48, !dbg !21079

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !21080
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 11, label %sw.bb18
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !21082

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21083
  %19 = load i32, i32* %action.addr, align 4, !dbg !21085
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !21086
  store i32 %call19, i32* %result, align 4, !dbg !21087
  br label %sw.epilog, !dbg !21088

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21089, metadata !DIExpression()), !dbg !21091
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21092, !ctir !1175
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !21092
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !21092
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !21092
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !21092

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !21092
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !21092
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !21092
  %22 = bitcast i8* %21 to i32*, !dbg !21092
  %23 = add i32 %gp_offset23, 8, !dbg !21092
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !21092
  br label %vaarg.end31, !dbg !21092

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !21092
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !21092
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !21092
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !21092
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !21092
  br label %vaarg.end31, !dbg !21092

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !21092
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !21092
  store i32 %25, i32* %x, align 4, !dbg !21091
  %26 = load i32, i32* %fd.addr, align 4, !dbg !21093
  %27 = load i32, i32* %action.addr, align 4, !dbg !21094
  %28 = load i32, i32* %x, align 4, !dbg !21095
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !21096
  store i32 %call33, i32* %result, align 4, !dbg !21097
  br label %sw.epilog, !dbg !21098

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21099, metadata !DIExpression()), !dbg !21101
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21102, !ctir !1175
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !21102
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !21102
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !21102
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !21102

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !21102
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !21102
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !21102
  %31 = bitcast i8* %30 to i8**, !dbg !21102
  %32 = add i32 %gp_offset37, 8, !dbg !21102
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !21102
  br label %vaarg.end45, !dbg !21102

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !21102
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !21102
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !21102
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !21102
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !21102
  br label %vaarg.end45, !dbg !21102

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !21102
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !21102
  store i8* %34, i8** %p, align 8, !dbg !21101
  %35 = load i32, i32* %fd.addr, align 4, !dbg !21103
  %36 = load i32, i32* %action.addr, align 4, !dbg !21104
  %37 = load i8*, i8** %p, align 8, !dbg !21105
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !21106
  store i32 %call47, i32* %result, align 4, !dbg !21107
  br label %sw.epilog, !dbg !21108

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !21109

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21110, !ctir !1175
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !21110
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !21110
  %38 = load i32, i32* %result, align 4, !dbg !21111
  ret i32 %38, !dbg !21112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !21113 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21114, metadata !DIExpression()), !dbg !21115
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21116, metadata !DIExpression()), !dbg !21117
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21118, metadata !DIExpression()), !dbg !21119
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21120
  %1 = load i32, i32* %target.addr, align 4, !dbg !21121
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !21122
  store i32 %call, i32* %result, align 4, !dbg !21123
  %2 = load i32, i32* %result, align 4, !dbg !21124
  ret i32 %2, !dbg !21125
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1168 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21126, metadata !DIExpression()), !dbg !21127
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21128, metadata !DIExpression()), !dbg !21129
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21130, metadata !DIExpression()), !dbg !21131
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21132
  %cmp = icmp sle i32 0, %0, !dbg !21134
  br i1 %cmp, label %if.then, label %if.else9, !dbg !21135

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !21136
  %2 = load i32, i32* %target.addr, align 4, !dbg !21138
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !21139
  store i32 %call, i32* %result, align 4, !dbg !21140
  %3 = load i32, i32* %result, align 4, !dbg !21141
  %cmp1 = icmp sle i32 0, %3, !dbg !21143
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !21144

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !21145
  %4 = load i32, i32* %call2, align 4, !dbg !21145, !ctir !5
  %cmp3 = icmp ne i32 %4, 22, !dbg !21146
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !21147

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21148
  br label %if.end8, !dbg !21150

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !21151
  %6 = load i32, i32* %target.addr, align 4, !dbg !21153
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !21154
  store i32 %call5, i32* %result, align 4, !dbg !21155
  %7 = load i32, i32* %result, align 4, !dbg !21156
  %cmp6 = icmp sge i32 %7, 0, !dbg !21158
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !21159

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21160
  br label %if.end, !dbg !21161

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !21162

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !21163
  %9 = load i32, i32* %target.addr, align 4, !dbg !21164
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !21165
  store i32 %call10, i32* %result, align 4, !dbg !21166
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !21167
  %cmp12 = icmp sle i32 0, %10, !dbg !21169
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !21170

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21171
  %cmp13 = icmp eq i32 %11, -1, !dbg !21172
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !21173

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !21174, metadata !DIExpression()), !dbg !21176
  %12 = load i32, i32* %result, align 4, !dbg !21177
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !21178
  store i32 %call15, i32* %flags, align 4, !dbg !21176
  %13 = load i32, i32* %flags, align 4, !dbg !21179
  %cmp16 = icmp slt i32 %13, 0, !dbg !21181
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !21182

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !21183
  %15 = load i32, i32* %flags, align 4, !dbg !21184
  %or = or i32 %15, 1, !dbg !21185
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !21186
  %cmp19 = icmp eq i32 %call18, -1, !dbg !21187
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !21188

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21189, metadata !DIExpression()), !dbg !21191
  %call21 = call i32* @__errno_location() #16, !dbg !21192
  %16 = load i32, i32* %call21, align 4, !dbg !21192, !ctir !5
  store i32 %16, i32* %saved_errno, align 4, !dbg !21191
  %17 = load i32, i32* %result, align 4, !dbg !21193
  %call22 = call i32 @close(i32 %17), !dbg !21194
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21195
  %call23 = call i32* @__errno_location() #16, !dbg !21196
  store i32 %18, i32* %call23, align 4, !dbg !21197, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !21198
  br label %if.end24, !dbg !21199

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !21200

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !21201
  ret i32 %19, !dbg !21202
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #4 !dbg !21203 {
entry:
  %item.addr = alloca i32, align 4
  store i32 %item, i32* %item.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !21209, metadata !DIExpression()), !dbg !21210
  %0 = load i32, i32* %item.addr, align 4, !dbg !21211
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !21212

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !21213
  %sub = sub nsw i32 %1, 10200, !dbg !21215
  %add = add nsw i32 %sub, 131098, !dbg !21216
  store i32 %add, i32* %item.addr, align 4, !dbg !21217
  br label %sw.epilog, !dbg !21218

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !21219

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !21220
  %call = call i8* @nl_langinfo(i32 %2) #9, !dbg !21221
  ret i8* %call, !dbg !21222
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !21223 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21225, metadata !DIExpression()), !dbg !21226
  %0 = load i32, i32* %c.addr, align 4, !dbg !21227
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21228

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21229
  br label %return, !dbg !21229

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21231
  br label %return, !dbg !21231

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21232
  ret i1 %1, !dbg !21232
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !21233 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21234, metadata !DIExpression()), !dbg !21235
  %0 = load i32, i32* %c.addr, align 4, !dbg !21236
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21237

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21238
  br label %return, !dbg !21238

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21240
  br label %return, !dbg !21240

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21241
  ret i1 %1, !dbg !21241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !21242 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21243, metadata !DIExpression()), !dbg !21244
  %0 = load i32, i32* %c.addr, align 4, !dbg !21245
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21246

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21247
  br label %return, !dbg !21247

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21249
  br label %return, !dbg !21249

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21250
  ret i1 %1, !dbg !21250
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !21251 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  %0 = load i32, i32* %c.addr, align 4, !dbg !21254
  %cmp = icmp eq i32 %0, 32, !dbg !21255
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !21256

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21257
  %cmp1 = icmp eq i32 %1, 9, !dbg !21258
  br label %lor.end, !dbg !21256

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !21259
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !21260 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21261, metadata !DIExpression()), !dbg !21262
  %0 = load i32, i32* %c.addr, align 4, !dbg !21263
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !21264

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21265
  br label %return, !dbg !21265

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21267
  br label %return, !dbg !21267

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21268
  ret i1 %1, !dbg !21268
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !21269 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21270, metadata !DIExpression()), !dbg !21271
  %0 = load i32, i32* %c.addr, align 4, !dbg !21272
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !21273

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21274
  br label %return, !dbg !21274

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21276
  br label %return, !dbg !21276

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21277
  ret i1 %1, !dbg !21277
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !21278 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21279, metadata !DIExpression()), !dbg !21280
  %0 = load i32, i32* %c.addr, align 4, !dbg !21281
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21282

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21283
  br label %return, !dbg !21283

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21285
  br label %return, !dbg !21285

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21286
  ret i1 %1, !dbg !21286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !21287 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21288, metadata !DIExpression()), !dbg !21289
  %0 = load i32, i32* %c.addr, align 4, !dbg !21290
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21291

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21292
  br label %return, !dbg !21292

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21294
  br label %return, !dbg !21294

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21295
  ret i1 %1, !dbg !21295
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !21296 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21297, metadata !DIExpression()), !dbg !21298
  %0 = load i32, i32* %c.addr, align 4, !dbg !21299
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21300

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21301
  br label %return, !dbg !21301

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21303
  br label %return, !dbg !21303

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21304
  ret i1 %1, !dbg !21304
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !21305 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21306, metadata !DIExpression()), !dbg !21307
  %0 = load i32, i32* %c.addr, align 4, !dbg !21308
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !21309

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21310
  br label %return, !dbg !21310

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21312
  br label %return, !dbg !21312

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21313
  ret i1 %1, !dbg !21313
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !21314 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21315, metadata !DIExpression()), !dbg !21316
  %0 = load i32, i32* %c.addr, align 4, !dbg !21317
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !21318

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21319
  br label %return, !dbg !21319

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21321
  br label %return, !dbg !21321

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21322
  ret i1 %1, !dbg !21322
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !21323 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21324, metadata !DIExpression()), !dbg !21325
  %0 = load i32, i32* %c.addr, align 4, !dbg !21326
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21327

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21328
  br label %return, !dbg !21328

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21330
  br label %return, !dbg !21330

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21331
  ret i1 %1, !dbg !21331
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !21332 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21333, metadata !DIExpression()), !dbg !21334
  %0 = load i32, i32* %c.addr, align 4, !dbg !21335
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !21336

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21337
  br label %return, !dbg !21337

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21339
  br label %return, !dbg !21339

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21340
  ret i1 %1, !dbg !21340
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !21341 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21342, metadata !DIExpression()), !dbg !21343
  %0 = load i32, i32* %c.addr, align 4, !dbg !21344
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21345

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21346
  %sub = sub nsw i32 %1, 65, !dbg !21348
  %add = add nsw i32 %sub, 97, !dbg !21349
  store i32 %add, i32* %retval, align 4, !dbg !21350
  br label %return, !dbg !21350

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21351
  store i32 %2, i32* %retval, align 4, !dbg !21352
  br label %return, !dbg !21352

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21353
  ret i32 %3, !dbg !21353
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !21354 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21355, metadata !DIExpression()), !dbg !21356
  %0 = load i32, i32* %c.addr, align 4, !dbg !21357
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21358

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21359
  %sub = sub nsw i32 %1, 97, !dbg !21361
  %add = add nsw i32 %sub, 65, !dbg !21362
  store i32 %add, i32* %retval, align 4, !dbg !21363
  br label %return, !dbg !21363

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21364
  store i32 %2, i32* %retval, align 4, !dbg !21365
  br label %return, !dbg !21365

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21366
  ret i32 %3, !dbg !21366
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !21367 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !1847
  %fd = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  %e15 = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21371, metadata !DIExpression()), !dbg !21372
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !21373, metadata !DIExpression()), !dbg !21374
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !21375, metadata !DIExpression()), !dbg !21376
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21377
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !21378
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !21379
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !21376
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21380
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !21380
  br i1 %tobool, label %if.then, label %if.end21, !dbg !21382

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21383, metadata !DIExpression()), !dbg !21385
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21386
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #9, !dbg !21387
  store i32 %call1, i32* %fd, align 4, !dbg !21385
  %4 = load i32, i32* %fd, align 4, !dbg !21388
  %cmp = icmp sle i32 0, %4, !dbg !21390
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !21391

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !21392
  %cmp2 = icmp sle i32 %5, 2, !dbg !21393
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !21394

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21395, metadata !DIExpression()), !dbg !21397
  %6 = load i32, i32* %fd, align 4, !dbg !21398
  %call4 = call i32 @dup_safer(i32 %6), !dbg !21399
  store i32 %call4, i32* %f, align 4, !dbg !21397
  %7 = load i32, i32* %f, align 4, !dbg !21400
  %cmp5 = icmp slt i32 %7, 0, !dbg !21402
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21403

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21404, metadata !DIExpression()), !dbg !21406
  %call7 = call i32* @__errno_location() #16, !dbg !21407
  %8 = load i32, i32* %call7, align 4, !dbg !21407, !ctir !5
  store i32 %8, i32* %e, align 4, !dbg !21406
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21408
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !21409
  %10 = load i32, i32* %e, align 4, !dbg !21410
  %call9 = call i32* @__errno_location() #16, !dbg !21411
  store i32 %10, i32* %call9, align 4, !dbg !21412, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !21413
  br label %return, !dbg !21413

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21414
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !21416
  %cmp11 = icmp ne i32 %call10, 0, !dbg !21417
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !21418

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !21419
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !21420
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #9, !dbg !21421
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !21422
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !21422
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !21423

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !21424, metadata !DIExpression()), !dbg !21426
  %call16 = call i32* @__errno_location() #16, !dbg !21427
  %14 = load i32, i32* %call16, align 4, !dbg !21427, !ctir !5
  store i32 %14, i32* %e15, align 4, !dbg !21426
  %15 = load i32, i32* %f, align 4, !dbg !21428
  %call17 = call i32 @close(i32 %15), !dbg !21429
  %16 = load i32, i32* %e15, align 4, !dbg !21430
  %call18 = call i32* @__errno_location() #16, !dbg !21431
  store i32 %16, i32* %call18, align 4, !dbg !21432, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !21433
  br label %return, !dbg !21433

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !21434

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !21435

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21436
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !21437
  br label %return, !dbg !21437

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !21438
  ret %struct._IO_FILE* %18, !dbg !21438
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!62, !1186, !433, !605, !1199, !621, !1243, !644, !1245, !1248, !1251, !650, !1257, !681, !1259, !702, !750, !1262, !1265, !1268, !797, !1271, !1283, !1295, !1305, !1308, !1311, !1314, !1317, !804, !1320, !1331, !1345, !1360, !1372, !857, !1375, !1378, !902, !1381, !1384, !1387, !1389, !978, !1392, !1427, !1429, !1432, !1018, !1434, !1063, !1081, !1436, !1104, !1115, !1498, !1501, !1504, !1517, !1558, !1600, !1642, !1684, !1687, !1689, !1691, !1122, !1694, !1697, !1700, !1704, !1707, !1709, !1712, !1715, !1718, !1721, !1733, !1748, !1829, !1834, !1836, !1838, !1172, !1840, !1842, !1844}
!llvm.ident = !{}
!llvm.module.flags = !{!1888, !1889, !1890, !1891}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3)
!2 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!3 = !{!4, !6, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !26, !27, !28, !29, !33, !35, !37, !41, !44, !46, !48, !49, !50, !51, !55, !56}
!4 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1, file: !2, line: 242, baseType: !5, size: 32)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1, file: !2, line: 260, baseType: !20, size: 64, offset: 768)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21, file: !2, line: 157, baseType: !20, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21, file: !2, line: 158, baseType: !0, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1, file: !2, line: 262, baseType: !0, size: 64, offset: 832)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 131, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!34 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!36 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 1)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2, line: 150, baseType: null)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 132, baseType: !32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !53, line: 46, baseType: !54)
!53 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!54 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 20)
!60 = !DIGlobalVariableExpression(var: !61, expr: !DIExpression())
!61 = distinct !DIGlobalVariable(name: "selinux_enabled", scope: !62, file: !63, line: 53, type: !5, isLocal: true, isDefinition: true)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !64, retainedTypes: !118, globals: !394, nameTableKind: None)
!63 = !DIFile(filename: "src/install.c", directory: "/home/mohamad/clone/coreutils")
!64 = !{!65, !73, !80, !86, !92, !97}
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !66, line: 30, baseType: !67, size: 32, elements: !68)
!66 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mohamad/clone/coreutils")
!67 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !74, line: 69, baseType: !67, size: 32, elements: !75)
!74 = !DIFile(filename: "src/copy.h", directory: "/home/mohamad/clone/coreutils")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !74, line: 60, baseType: !67, size: 32, elements: !81)
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !74, line: 26, baseType: !67, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !74, line: 47, baseType: !67, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !99, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!98 = !DIFile(filename: "./lib/savewd.h", directory: "/home/mohamad/clone/coreutils")
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !100)
!100 = !{!101, !102}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !99, file: !98, line: 66, baseType: !97, size: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !99, file: !98, line: 74, baseType: !103, size: 32, offset: 32)
!103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !99, file: !98, line: 69, size: 32, elements: !104)
!104 = !{!105, !106, !107}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !103, file: !98, line: 71, baseType: !5, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !103, file: !98, line: 72, baseType: !5, size: 32)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !103, file: !98, line: 73, baseType: !108, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !109, line: 98, baseType: !110)
!109 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 133, baseType: !5)
!111 = !{!112, !113, !114, !115, !116, !117}
!112 = !DIEnumerator(name: "INITIAL_STATE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "FD_STATE", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "FD_POST_CHDIR_STATE", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "FORKING_STATE", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "ERROR_STATE", value: 4, isUnsigned: true)
!117 = !DIEnumerator(name: "FINAL_STATE", value: 5, isUnsigned: true)
!118 = !{!119, !7, !47, !124, !126, !128, !0, !177, !180, !182, !185, !188, !191, !194, !197, !200, !203, !5, !139, !206, !38, !207, !210, !213, !216, !228, !231, !234, !237, !240, !243, !246, !57, !137, !249, !252, !255, !258, !261, !264, !267, !136, !270, !273, !276, !279, !282, !285, !288, !301, !302, !305, !308, !311, !314, !317, !172, !52, !320, !331, !54, !125, !127, !339, !341, !344, !347, !350, !30, !353, !108, !356, !357, !364, !368, !371, !381, !384, !181, !387, !388, !391}
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !120, line: 85, baseType: !121)
!120 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DISubroutineType(types: !123)
!123 = !{null, !5}
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !109, line: 80, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 125, baseType: !67)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !109, line: 65, baseType: !127)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 126, baseType: !67)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !138, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !176}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !129, file: !74, line: 100, baseType: !65, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !129, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !129, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !129, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !129, file: !74, line: 115, baseType: !136, size: 32, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !109, line: 70, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 129, baseType: !67)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !129, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!139 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !129, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !129, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !129, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !129, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !129, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !129, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !129, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !129, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !129, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !129, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !129, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !129, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !129, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !129, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !129, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !129, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !129, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !129, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !129, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !129, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !129, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !129, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !129, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !129, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !129, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !129, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !129, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !129, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !129, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !129, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !129, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !129, file: !74, line: 273, baseType: !172, size: 64, offset: 512)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !174, line: 69, baseType: !175)
!174 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !174, line: 67, flags: DIFlagFwdDecl)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !129, file: !74, line: 276, baseType: !172, size: 64, offset: 576)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 312, elements: !178)
!178 = !{!179}
!179 = !DISubrange(count: 39)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1320, elements: !183)
!183 = !{!184}
!184 = !DISubrange(count: 165)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 3720, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 465)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 3208, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 401)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 4032, elements: !192)
!192 = !{!193}
!193 = !DISubrange(count: 504)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2776, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 347)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 360, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 45)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 432, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 54)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 8)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 80, elements: !208)
!208 = !{!209}
!209 = !DISubrange(count: 10)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 192, elements: !211)
!211 = !{!212}
!212 = !DISubrange(count: 24)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 168, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 21)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 4608, elements: !226)
!217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !219, line: 104, size: 256, elements: !220)
!219 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!220 = !{!221, !222, !223, !225}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !218, file: !219, line: 106, baseType: !180, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !218, file: !219, line: 109, baseType: !5, size: 32, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !218, file: !219, line: 110, baseType: !224, size: 64, offset: 128)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !218, file: !219, line: 111, baseType: !5, size: 32, offset: 192)
!226 = !{!227}
!227 = !DISubrange(count: 18)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 304, elements: !229)
!229 = !{!230}
!230 = !DISubrange(count: 38)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 584, elements: !232)
!232 = !{!233}
!233 = !DISubrange(count: 73)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 536, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 67)
!237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 112, elements: !238)
!238 = !{!239}
!239 = !DISubrange(count: 14)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !241)
!241 = !{!242}
!242 = !DISubrange(count: 16)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 488, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 61)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 456, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 57)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 232, elements: !250)
!250 = !{!251}
!251 = !DISubrange(count: 29)
!252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !253)
!253 = !{!254}
!254 = !DISubrange(count: 12)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 336, elements: !256)
!256 = !{!257}
!257 = !DISubrange(count: 42)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 400, elements: !259)
!259 = !{!260}
!260 = !DISubrange(count: 50)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 560, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 70)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 136, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 17)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !269, line: 25, flags: DIFlagFwdDecl)
!269 = !DIFile(filename: "./lib/modechange.h", directory: "/home/mohamad/clone/coreutils")
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 576, elements: !271)
!271 = !{!272}
!272 = !DISubrange(count: 72)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 464, elements: !274)
!274 = !{!275}
!275 = !DISubrange(count: 58)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 688, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 86)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 600, elements: !280)
!280 = !{!281}
!281 = !DISubrange(count: 75)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1768, elements: !283)
!283 = !{!284}
!284 = !DISubrange(count: 221)
!285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1776, elements: !286)
!286 = !{!287}
!287 = !DISubrange(count: 222)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !289, size: 896, elements: !299)
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !292, file: !291, line: 633, size: 128, elements: !296)
!291 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!292 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !291, file: !291, line: 631, type: !293, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !180}
!295 = !{}
!296 = !{!297, !298}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !290, file: !291, line: 633, baseType: !180, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !290, file: !291, line: 633, baseType: !180, size: 64, offset: 64)
!299 = !{!300}
!300 = !DISubrange(count: 7)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 184, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 23)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 320, elements: !306)
!306 = !{!307}
!307 = !DISubrange(count: 40)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 4)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 568, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 71)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 216, elements: !315)
!315 = !{!316}
!316 = !DISubrange(count: 27)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 408, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 51)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !322, line: 49, size: 384, elements: !323)
!322 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!323 = !{!324, !325, !326, !327, !328, !329, !330}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !321, file: !322, line: 51, baseType: !7, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !321, file: !322, line: 52, baseType: !7, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !321, file: !322, line: 53, baseType: !125, size: 32, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !321, file: !322, line: 54, baseType: !127, size: 32, offset: 160)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !321, file: !322, line: 55, baseType: !7, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !321, file: !322, line: 56, baseType: !7, size: 64, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !321, file: !322, line: 57, baseType: !7, size: 64, offset: 320)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !333, line: 42, size: 256, elements: !334)
!333 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!334 = !{!335, !336, !337, !338}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !332, file: !333, line: 44, baseType: !7, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !332, file: !333, line: 45, baseType: !7, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !332, file: !333, line: 46, baseType: !127, size: 32, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !332, file: !333, line: 47, baseType: !206, size: 64, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 264, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 33)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 368, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 46)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 176, elements: !348)
!348 = !{!349}
!349 = !DISubrange(count: 22)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 120, elements: !351)
!351 = !{!352}
!352 = !DISubrange(count: 15)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32768, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 4096)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 144, elements: !226)
!357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !63, line: 564, size: 32, elements: !361)
!358 = distinct !DISubprogram(name: "strip", scope: !63, file: !63, line: 547, type: !359, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!359 = !DISubroutineType(types: !360)
!360 = !{!139, !180}
!361 = !{!362, !363}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !357, file: !63, line: 564, baseType: !5, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !357, file: !63, line: 564, baseType: !5, size: 32)
!364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !63, line: 564, size: 32, elements: !365)
!365 = !{!366, !367}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !364, file: !63, line: 564, baseType: !5, size: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !364, file: !63, line: 564, baseType: !5, size: 32)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 288, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 36)
!371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 256, elements: !379)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !374)
!373 = !DIFile(filename: "/usr/include/time.h", directory: "")
!374 = !{!375, !377}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !372, file: !373, line: 122, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 139, baseType: !32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !372, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 175, baseType: !32)
!379 = !{!380}
!380 = !DISubrange(count: 2)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 240, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 30)
!384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !385)
!385 = !{!386}
!386 = !DISubrange(count: 32)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 16, elements: !379)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 72, elements: !389)
!389 = !{!390}
!390 = !DISubrange(count: 9)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 352, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 44)
!394 = !{!395, !397, !399, !401, !403, !60, !405, !407, !409, !411, !413, !415, !417, !419, !421, !426, !428}
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "owner_name", scope: !62, file: !63, line: 74, type: !7, isLocal: true, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "group_name", scope: !62, file: !63, line: 81, type: !7, isLocal: true, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "copy_only_if_needed", scope: !62, file: !63, line: 102, type: !139, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "strip_files", scope: !62, file: !63, line: 105, type: !139, isLocal: true, isDefinition: true)
!403 = !DIGlobalVariableExpression(var: !404, expr: !DIExpression())
!404 = distinct !DIGlobalVariable(name: "dir_arg", scope: !62, file: !63, line: 108, type: !139, isLocal: true, isDefinition: true)
!405 = !DIGlobalVariableExpression(var: !406, expr: !DIExpression())
!406 = distinct !DIGlobalVariable(name: "long_options", scope: !62, file: !63, line: 121, type: !216, isLocal: true, isDefinition: true)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "strip_program", scope: !62, file: !63, line: 111, type: !180, isLocal: true, isDefinition: true)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "use_default_selinux_context", scope: !62, file: !63, line: 54, type: !139, isLocal: true, isDefinition: true)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "mode", scope: !62, file: !63, line: 90, type: !136, isLocal: true, isDefinition: true)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "dir_mode_bits", scope: !62, file: !63, line: 99, type: !136, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "dir_mode", scope: !62, file: !63, line: 93, type: !136, isLocal: true, isDefinition: true)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "owner_id", scope: !62, file: !63, line: 77, type: !124, isLocal: true, isDefinition: true)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "group_id", scope: !62, file: !63, line: 84, type: !126, isLocal: true, isDefinition: true)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "a_buff", scope: !423, file: !63, line: 149, type: !353, isLocal: true, isDefinition: true)
!423 = distinct !DISubprogram(name: "have_same_content", scope: !63, file: !63, line: 146, type: !424, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!424 = !DISubroutineType(types: !425)
!425 = !{!139, !5, !5}
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "b_buff", scope: !423, file: !63, line: 150, type: !353, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "first_call", scope: !430, file: !63, line: 318, type: !139, isLocal: true, isDefinition: true)
!430 = distinct !DISubprogram(name: "setdefaultfilecon", scope: !63, file: !63, line: 314, type: !293, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !433, file: !434, line: 147, type: !180, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !435, retainedTypes: !436, globals: !586, nameTableKind: None)
!434 = !DIFile(filename: "src/copy.c", directory: "/home/mohamad/clone/coreutils")
!435 = !{!65, !73, !80, !86, !92}
!436 = !{!136, !47, !67, !7, !54, !52, !437, !139, !5, !258, !439, !317, !442, !172, !210, !445, !448, !180, !451, !368, !228, !231, !350, !137, !305, !347, !454, !457, !460, !461, !462, !465, !264, !468, !252, !469, !197, !200, !388, !497, !213, !498, !203, !501, !506, !508, !314, !181, !387, !509, !381, !30, !249, !512, !125, !127, !515, !518, !57, !519, !341, !521, !524, !527, !565, !8, !237, !240, !568, !483, !485, !571, !578, !581, !583, !585, !584, !124, !126}
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !438, line: 90, baseType: !30)
!438 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 296, elements: !440)
!440 = !{!441}
!441 = !DISubrange(count: 37)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 328, elements: !443)
!443 = !{!444}
!444 = !DISubrange(count: 41)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 88, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 11)
!448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 728, elements: !449)
!449 = !{!450}
!450 = !DISubrange(count: 91)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 376, elements: !452)
!452 = !{!453}
!453 = !DISubrange(count: 47)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 392, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 49)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 224, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 28)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 124, baseType: !54)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 127, baseType: !54)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 416, elements: !463)
!463 = !{!464}
!464 = !DISubrange(count: 52)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 344, elements: !466)
!466 = !{!467}
!467 = !DISubrange(count: 43)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 130, baseType: !54)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !472)
!471 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !484, !486, !491, !492, !493}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !470, file: !471, line: 48, baseType: !460, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !470, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !470, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !470, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !470, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !470, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !470, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !470, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !470, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !470, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 153, baseType: !32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !470, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 158, baseType: !32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !470, file: !471, line: 91, baseType: !487, size: 128, offset: 576)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !488)
!488 = !{!489, !490}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !487, file: !373, line: 122, baseType: !376, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !487, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !470, file: !471, line: 92, baseType: !487, size: 128, offset: 704)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !470, file: !471, line: 93, baseType: !487, size: 128, offset: 832)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !470, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 192, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 3)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 376, elements: !452)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 480, elements: !499)
!499 = !{!500}
!500 = !DISubrange(count: 60)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !434, line: 125, size: 192, elements: !503)
!503 = !{!504, !505, !507}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !502, file: !434, line: 127, baseType: !501, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !502, file: !434, line: 128, baseType: !506, size: 64, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !109, line: 48, baseType: !461)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !502, file: !434, line: 129, baseType: !508, size: 64, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !109, line: 60, baseType: !460)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 504, elements: !510)
!510 = !{!511}
!511 = !DISubrange(count: 63)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 248, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 31)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 200, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 25)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 256, elements: !379)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 104, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 13)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 648, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 81)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !529)
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !528, file: !2, line: 242, baseType: !5, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !528, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !528, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !528, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !528, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !528, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !528, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !528, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !528, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !528, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !528, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !528, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !528, file: !2, line: 260, baseType: !543, size: 64, offset: 768)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !545)
!545 = !{!546, !547, !548}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !544, file: !2, line: 157, baseType: !543, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !544, file: !2, line: 158, baseType: !527, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !544, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !528, file: !2, line: 262, baseType: !527, size: 64, offset: 832)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !528, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !528, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !528, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !528, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !528, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !528, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !528, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !528, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !528, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !528, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !528, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !528, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !528, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !528, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !528, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 152, elements: !566)
!566 = !{!567}
!567 = !DISubrange(count: 19)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 448, elements: !569)
!569 = !{!570}
!570 = !DISubrange(count: 56)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !573, line: 23, size: 192, elements: !574)
!573 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mohamad/clone/coreutils")
!574 = !{!575, !576, !577}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !572, file: !573, line: 26, baseType: !437, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !572, file: !573, line: 29, baseType: !437, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !572, file: !573, line: 32, baseType: !67, size: 32, offset: 128)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8192, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 1024)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !438, line: 102, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 172, baseType: !32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !585)
!585 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!586 = !{!587, !431, !592, !594, !599, !601}
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "mask", scope: !589, file: !434, line: 3089, type: !136, isLocal: true, isDefinition: true)
!589 = distinct !DISubprogram(name: "cached_umask", scope: !434, file: !434, line: 3087, type: !590, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!590 = !DISubroutineType(types: !591)
!591 = !{!136}
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !433, file: !434, line: 148, type: !180, isLocal: true, isDefinition: true)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "zeros", scope: !596, file: !434, line: 387, type: !7, isLocal: true, isDefinition: true)
!596 = distinct !DISubprogram(name: "write_zeros", scope: !434, file: !434, line: 385, type: !597, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!597 = !DISubroutineType(types: !598)
!598 = !{!139, !5, !437}
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "nz", scope: !596, file: !434, line: 388, type: !52, isLocal: true, isDefinition: true)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "fallback", scope: !596, file: !434, line: 395, type: !578, isLocal: true, isDefinition: true)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !605, file: !606, line: 45, type: !172, isLocal: true, isDefinition: true)
!605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !606, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !607, globals: !618, nameTableKind: None)
!606 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mohamad/clone/coreutils")
!607 = !{!47, !7, !608, !610, !506, !508, !172, !616}
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !609, line: 135, baseType: !54)
!609 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !606, line: 33, size: 192, elements: !612)
!612 = !{!613, !614, !615}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !611, file: !606, line: 35, baseType: !506, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !611, file: !606, line: 36, baseType: !508, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !611, file: !606, line: 40, baseType: !7, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!618 = !{!603}
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !621, file: !622, line: 38, type: !628, isLocal: true, isDefinition: true)
!621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !622, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !623, globals: !641, nameTableKind: None)
!622 = !DIFile(filename: "src/force-link.c", directory: "/home/mohamad/clone/coreutils")
!623 = !{!5, !624, !7, !627, !52, !628, !629, !180, !636}
!624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !625)
!625 = !{!626}
!626 = !DISubrange(count: 256)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !53, line: 35, baseType: !32)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 72, elements: !389)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !622, line: 71, size: 192, elements: !631)
!631 = !{!632, !633, !634, !635}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !630, file: !622, line: 73, baseType: !5, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !630, file: !622, line: 74, baseType: !180, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !630, file: !622, line: 75, baseType: !5, size: 32, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !630, file: !622, line: 76, baseType: !5, size: 32, offset: 160)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !622, line: 131, size: 128, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !637, file: !622, line: 133, baseType: !180, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !637, file: !622, line: 134, baseType: !5, size: 32, offset: 64)
!641 = !{!619}
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "Version", scope: !644, file: !645, line: 2, type: !180, isLocal: false, isDefinition: true)
!644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !645, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !646, globals: !647, nameTableKind: None)
!645 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!646 = !{!180}
!647 = !{!642}
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !650, file: !654, line: 82, type: !180, isLocal: false, isDefinition: true)
!650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !651, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !652, retainedTypes: !660, globals: !678, nameTableKind: None)
!651 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!652 = !{!65, !653}
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !654, line: 172, baseType: !67, size: 32, elements: !655)
!654 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!655 = !{!656, !657, !658, !659}
!656 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!657 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!658 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!659 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!660 = !{!47, !67, !52, !180, !213, !181, !387, !627, !661, !7, !662, !5, !8, !666, !675, !139, !624, !32}
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !109, line: 109, baseType: !582)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !664, line: 127, baseType: !665)
!664 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !664, line: 127, flags: DIFlagFwdDecl)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !668, line: 22, size: 2240, elements: !669)
!668 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!669 = !{!670, !671, !672, !673, !674}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !667, file: !668, line: 25, baseType: !461, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !667, file: !668, line: 26, baseType: !30, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !667, file: !668, line: 31, baseType: !34, size: 16, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !667, file: !668, line: 32, baseType: !585, size: 8, offset: 144)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !667, file: !668, line: 33, baseType: !624, size: 2048, offset: 152)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 40, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 5)
!678 = !{!648}
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "backup_args", scope: !681, file: !699, line: 42, type: !689, isLocal: true, isDefinition: true)
!681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !682, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !683, retainedTypes: !684, globals: !696, nameTableKind: None)
!682 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!683 = !{!65}
!684 = !{!685, !7, !181, !687, !689, !691, !264, !240}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 256, elements: !204)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 576, elements: !389)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !692, line: 61, baseType: !693)
!692 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{null}
!696 = !{!697, !679}
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "backup_types", scope: !681, file: !699, line: 53, type: !687, isLocal: true, isDefinition: true)
!699 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "file_name", scope: !702, file: !747, line: 37, type: !180, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !704, globals: !746, nameTableKind: None)
!703 = !DIFile(filename: "./lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!704 = !{!180, !139, !705, !565, !5, !743, !744, !745}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !707)
!707 = !{!708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !706, file: !2, line: 242, baseType: !5, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !706, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !706, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !706, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !706, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !706, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !706, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !706, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !706, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !706, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !706, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !706, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !706, file: !2, line: 260, baseType: !721, size: 64, offset: 768)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !723)
!723 = !{!724, !725, !726}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !722, file: !2, line: 157, baseType: !721, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !722, file: !2, line: 158, baseType: !705, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !722, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !706, file: !2, line: 262, baseType: !705, size: 64, offset: 832)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !706, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !706, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !706, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !706, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !706, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !706, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !706, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !706, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !706, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !706, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !706, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !706, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !706, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !706, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !706, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 56, elements: !299)
!744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 24, elements: !495)
!745 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5)
!746 = !{!700}
!747 = !DIFile(filename: "lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "file_name", scope: !750, file: !794, line: 46, type: !180, isLocal: true, isDefinition: true)
!750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !751, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !752, globals: !791, nameTableKind: None)
!751 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!752 = !{!180, !139, !753, !5, !252, !743, !744, !745}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !755)
!755 = !{!756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !754, file: !2, line: 242, baseType: !5, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !754, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !754, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !754, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !754, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !754, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !754, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !754, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !754, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !754, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !754, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !754, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !754, file: !2, line: 260, baseType: !769, size: 64, offset: 768)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !771)
!771 = !{!772, !773, !774}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !770, file: !2, line: 157, baseType: !769, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !770, file: !2, line: 158, baseType: !753, size: 64, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !770, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !754, file: !2, line: 262, baseType: !753, size: 64, offset: 832)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !754, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !754, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !754, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !754, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !754, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !754, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !754, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !754, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !754, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !754, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !754, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !754, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !754, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !754, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !754, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!791 = !{!748, !792}
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !750, file: !794, line: 56, type: !139, isLocal: true, isDefinition: true)
!794 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "exit_failure", scope: !797, file: !801, line: 24, type: !745, isLocal: false, isDefinition: true)
!797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !798, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !799, globals: !800, nameTableKind: None)
!798 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!799 = !{!745}
!800 = !{!795}
!801 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "default_tuning", scope: !804, file: !810, line: 130, type: !826, isLocal: true, isDefinition: true)
!804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !805, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !806, globals: !854, nameTableKind: None)
!805 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!806 = !{!54, !47, !52, !807, !819, !813, !210, !341, !842, !852, !585, !181, !826, !853, !808, !825, !837, !847, !685, !831, !139, !5}
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !174, line: 69, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !810, line: 52, size: 640, elements: !811)
!810 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!811 = !{!812, !818, !821, !822, !823, !824, !836, !841, !846, !851}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !809, file: !810, line: 57, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !810, line: 46, size: 128, elements: !815)
!815 = !{!816, !817}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !814, file: !810, line: 48, baseType: !47, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !814, file: !810, line: 49, baseType: !813, size: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !809, file: !810, line: 58, baseType: !819, size: 64, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !809, file: !810, line: 59, baseType: !52, size: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !809, file: !810, line: 60, baseType: !52, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !809, file: !810, line: 61, baseType: !52, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !809, file: !810, line: 64, baseType: !825, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !827)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !174, line: 65, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !174, line: 53, size: 160, elements: !829)
!829 = !{!830, !832, !833, !834, !835}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !828, file: !174, line: 58, baseType: !831, size: 32)
!831 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !828, file: !174, line: 59, baseType: !831, size: 32, offset: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !828, file: !174, line: 60, baseType: !831, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !828, file: !174, line: 61, baseType: !831, size: 32, offset: 96)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !828, file: !174, line: 62, baseType: !139, size: 8, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !809, file: !810, line: 71, baseType: !837, size: 64, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !174, line: 48, baseType: !838)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!52, !685, !52}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !809, file: !810, line: 72, baseType: !842, size: 64, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !174, line: 49, baseType: !843)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!139, !685, !685}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !809, file: !810, line: 73, baseType: !847, size: 64, offset: 512)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !174, line: 50, baseType: !848)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !47}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !809, file: !810, line: 76, baseType: !813, size: 64, offset: 576)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!854 = !{!802}
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "program_name", scope: !857, file: !899, line: 33, type: !180, isLocal: false, isDefinition: true)
!857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !858, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !859, globals: !898, nameTableKind: None)
!858 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!859 = !{!47, !7, !180, !568, !860, !181, !203, !308}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !862)
!862 = !{!863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !861, file: !2, line: 242, baseType: !5, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !861, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !861, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !861, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !861, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !861, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !861, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !861, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !861, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !861, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !861, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !861, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !861, file: !2, line: 260, baseType: !876, size: 64, offset: 768)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !878)
!878 = !{!879, !880, !881}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !877, file: !2, line: 157, baseType: !876, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !877, file: !2, line: 158, baseType: !860, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !877, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !861, file: !2, line: 262, baseType: !860, size: 64, offset: 832)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !861, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !861, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !861, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !861, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !861, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !861, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !861, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !861, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !861, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !861, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !861, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !861, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !861, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !861, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !861, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!898 = !{!855}
!899 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !902, file: !925, line: 85, type: !920, isLocal: false, isDefinition: true)
!902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !903, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !904, retainedTypes: !919, globals: !961, nameTableKind: None)
!903 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!904 = !{!905}
!905 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !906, line: 32, baseType: !67, size: 32, elements: !907)
!906 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!907 = !{!908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!908 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!909 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!910 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!911 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!912 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!913 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!914 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!915 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!916 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!917 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!918 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!919 = !{!5, !34, !52, !920, !921, !923, !585, !933, !930, !67, !180, !934, !936, !7, !937, !624, !139, !387, !181, !942, !944, !955, !956, !958, !308, !203, !744}
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 704, elements: !446)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 320, elements: !208)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !925, line: 65, size: 448, elements: !926)
!925 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!926 = !{!927, !928, !929, !931, !932}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !924, file: !925, line: 68, baseType: !905, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !924, file: !925, line: 71, baseType: !5, size: 32, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !924, file: !925, line: 75, baseType: !930, size: 256, offset: 64)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !204)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !924, file: !925, line: 78, baseType: !180, size: 64, offset: 320)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !924, file: !925, line: 81, baseType: !180, size: 64, offset: 384)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !925, line: 834, size: 128, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !938, file: !925, line: 836, baseType: !52, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !938, file: !925, line: 837, baseType: !7, size: 64, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !945, line: 106, baseType: !946)
!945 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !945, line: 94, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 82, size: 64, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !947, file: !945, line: 84, baseType: !5, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !947, file: !945, line: 93, baseType: !951, size: 32, offset: 32)
!951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !947, file: !945, line: 85, size: 32, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !951, file: !945, line: 88, baseType: !67, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !951, file: !945, line: 92, baseType: !308, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !53, line: 74, baseType: !5)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 48, elements: !959)
!959 = !{!960}
!960 = !DISubrange(count: 6)
!961 = !{!900, !962, !964, !966, !968, !970, !972, !974}
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !902, file: !925, line: 101, type: !921, isLocal: false, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !902, file: !925, line: 1052, type: !924, isLocal: false, isDefinition: true)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !902, file: !925, line: 116, type: !924, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "slot0", scope: !902, file: !925, line: 842, type: !624, isLocal: true, isDefinition: true)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "slotvec", scope: !902, file: !925, line: 845, type: !937, isLocal: true, isDefinition: true)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "nslots", scope: !902, file: !925, line: 843, type: !5, isLocal: true, isDefinition: true)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "slotvec0", scope: !902, file: !925, line: 844, type: !938, isLocal: true, isDefinition: true)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !978, file: !991, line: 74, type: !1001, isLocal: true, isDefinition: true)
!978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !979, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !980, retainedTypes: !988, globals: !1015, nameTableKind: None)
!979 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!980 = !{!981}
!981 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !982, line: 26, baseType: !67, size: 32, elements: !983)
!982 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mohamad/clone/coreutils")
!983 = !{!984, !985, !986, !987}
!984 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!985 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!986 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!987 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!988 = !{!47, !7, !52, !989, !5, !997, !1001, !1003, !180, !1012, !990, !461, !996, !8, !662, !1013, !1014}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !991, line: 46, baseType: !992)
!991 = !DIFile(filename: "lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !991, line: 40, size: 128, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !992, file: !991, line: 42, baseType: !7, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !992, file: !991, line: 44, baseType: !996, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !664, line: 34, baseType: !461)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !991, line: 72, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!5, !685, !685}
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 192, elements: !495)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !668, line: 22, size: 2240, elements: !1006)
!1006 = !{!1007, !1008, !1009, !1010, !1011}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1005, file: !668, line: 25, baseType: !461, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1005, file: !668, line: 26, baseType: !30, size: 64, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1005, file: !668, line: 31, baseType: !34, size: 16, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1005, file: !668, line: 32, baseType: !585, size: 8, offset: 144)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1005, file: !668, line: 33, baseType: !624, size: 2048, offset: 152)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!1015 = !{!976}
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "letters", scope: !1018, file: !1033, line: 184, type: !1024, isLocal: true, isDefinition: true)
!1018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1019, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1020, globals: !1032, nameTableKind: None)
!1019 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1020 = !{!52, !7, !67, !5, !1021, !1024, !1025, !1028, !350, !1031, !387, !224}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1023, line: 33, flags: DIFlagFwdDecl)
!1023 = !DIFile(filename: "./lib/randint.h", directory: "/home/mohamad/clone/coreutils")
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 504, elements: !510)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!5, !7, !47}
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 280, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 35)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 416, elements: !463)
!1032 = !{!1016}
!1033 = !DIFile(filename: "lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "ht", scope: !1036, file: !1037, line: 163, type: !172, isLocal: true, isDefinition: true)
!1036 = distinct !DISubprogram(name: "utimecmpat", scope: !1037, file: !1037, line: 132, type: !1038, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1063, retainedNodes: !295)
!1037 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!5, !5, !180, !1040, !1040, !5}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1060, !1061, !1062}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1042, file: !471, line: 48, baseType: !460, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1042, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1042, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1042, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1042, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1042, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1042, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1042, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1042, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1042, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1042, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1042, file: !471, line: 91, baseType: !1056, size: 128, offset: 576)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1056, file: !373, line: 122, baseType: !376, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1056, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1042, file: !471, line: 92, baseType: !1056, size: 128, offset: 704)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1042, file: !471, line: 93, baseType: !1056, size: 128, offset: 832)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1042, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!1063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1064, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1065, globals: !1076, nameTableKind: None)
!1064 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1065 = !{!1066, !376, !5, !1067, !139, !460, !508, !1073, !378, !1074}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !373, line: 75, baseType: !376)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1037, line: 66, size: 128, elements: !1069)
!1069 = !{!1070, !1071, !1072}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1068, file: !1037, line: 69, baseType: !508, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1068, file: !1037, line: 76, baseType: !5, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1068, file: !1037, line: 80, baseType: !139, size: 8, offset: 96)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 256, elements: !379)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!1076 = !{!1034, !1077}
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1036, file: !1037, line: 166, type: !1067, isLocal: true, isDefinition: true)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1081, file: !1101, line: 75, type: !5, isLocal: true, isDefinition: true)
!1081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1082, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1083, globals: !1098, nameTableKind: None)
!1082 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1083 = !{!1084, !1089, !5, !378, !1090, !1097, !376, !1096, !139, !1066, !137}
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 256, elements: !379)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1085, file: !373, line: 122, baseType: !376, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1085, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 256, elements: !379)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1092, line: 30, size: 128, elements: !1093)
!1092 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!1093 = !{!1094, !1095}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1091, file: !1092, line: 32, baseType: !376, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1091, file: !1092, line: 33, baseType: !1096, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 141, baseType: !32)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1098 = !{!1079, !1099}
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1081, file: !1101, line: 76, type: !5, isLocal: true, isDefinition: true)
!1101 = !DIFile(filename: "lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1104, file: !1108, line: 26, type: !451, isLocal: false, isDefinition: true)
!1104 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1105, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1106, globals: !1107, nameTableKind: None)
!1105 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1106 = !{!451}
!1107 = !{!1102}
!1108 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "initialized", scope: !1111, file: !1112, line: 34, type: !139, isLocal: true, isDefinition: true)
!1111 = distinct !DISubprogram(name: "can_write_any_file", scope: !1112, file: !1112, line: 32, type: !1113, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1115, retainedNodes: !295)
!1112 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!139}
!1115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1116, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1114, globals: !1117, nameTableKind: None)
!1116 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1117 = !{!1109, !1118}
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "can_write", scope: !1111, file: !1112, line: 35, type: !139, isLocal: true, isDefinition: true)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1122, file: !1165, line: 67, type: !691, isLocal: false, isDefinition: true)
!1122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1123, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1124, globals: !1164, nameTableKind: None)
!1123 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1124 = !{!47, !180, !691, !52, !627, !139, !1125, !181, !314, !249, !213, !1126, !203, !675}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1127, file: !2, line: 242, baseType: !5, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1127, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1127, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1127, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1127, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1127, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1127, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1127, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1127, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1127, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1127, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1127, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1127, file: !2, line: 260, baseType: !1142, size: 64, offset: 768)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1144)
!1144 = !{!1145, !1146, !1147}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1143, file: !2, line: 157, baseType: !1142, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1143, file: !2, line: 158, baseType: !1126, size: 64, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1143, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1127, file: !2, line: 262, baseType: !1126, size: 64, offset: 832)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1127, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1127, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1127, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1127, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1127, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1127, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1127, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1127, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1127, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1127, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1127, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1127, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1127, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1127, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1127, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1164 = !{!1120}
!1165 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1168, file: !1169, line: 507, type: !5, isLocal: true, isDefinition: true)
!1168 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1169, file: !1169, line: 488, type: !1170, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1172, retainedNodes: !295)
!1169 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!5, !5, !5}
!1172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1173, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1174, globals: !1185, nameTableKind: None)
!1173 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1174 = !{!1175, !5, !47}
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1176, line: 14, baseType: !1177)
!1176 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1173, line: 208, baseType: !1178)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 192, elements: !39)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1173, line: 208, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1179, file: !1173, line: 208, baseType: !67, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1179, file: !1173, line: 208, baseType: !67, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1179, file: !1173, line: 208, baseType: !47, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1179, file: !1173, line: 208, baseType: !47, size: 64, offset: 128)
!1185 = !{!1166}
!1186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1187, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1188, nameTableKind: None)
!1187 = !DIFile(filename: "src/prog-fprintf.c", directory: "/home/mohamad/clone/coreutils")
!1188 = !{!1189, !180, !744}
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !438, line: 79, baseType: !1190)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1176, line: 32, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1187, line: 30, baseType: !1192)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1193, size: 192, elements: !39)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1187, line: 30, size: 192, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1193, file: !1187, line: 30, baseType: !67, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1193, file: !1187, line: 30, baseType: !67, size: 32, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1193, file: !1187, line: 30, baseType: !47, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1193, file: !1187, line: 30, baseType: !47, size: 64, offset: 128)
!1199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1200, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1201, nameTableKind: None)
!1200 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mohamad/clone/coreutils")
!1201 = !{!1202, !5, !52, !1203, !139, !67, !1209, !1235, !1222, !1214, !1217, !1236, !356, !1239, !1240}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !109, line: 86, baseType: !30)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !573, line: 23, size: 192, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1204, file: !573, line: 26, baseType: !1202, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1204, file: !573, line: 29, baseType: !1202, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1204, file: !573, line: 32, baseType: !67, size: 32, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1211, line: 35, size: 256, elements: !1212)
!1211 = !DIFile(filename: "src/fiemap.h", directory: "/home/mohamad/clone/coreutils")
!1212 = !{!1213, !1215, !1216, !1218, !1219, !1220, !1221}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1210, file: !1211, line: 38, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !609, line: 55, baseType: !54)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1210, file: !1211, line: 41, baseType: !1214, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1210, file: !1211, line: 44, baseType: !1217, size: 32, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !609, line: 51, baseType: !67)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1210, file: !1211, line: 47, baseType: !1217, size: 32, offset: 160)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1210, file: !1211, line: 50, baseType: !1217, size: 32, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1210, file: !1211, line: 52, baseType: !1217, size: 32, offset: 224)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1210, file: !1211, line: 55, baseType: !1222, offset: 256)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, elements: !1233)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1211, line: 14, size: 448, elements: !1224)
!1224 = !{!1225, !1226, !1227, !1228, !1230, !1231}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1223, file: !1211, line: 18, baseType: !1214, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1223, file: !1211, line: 22, baseType: !1214, size: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1223, file: !1211, line: 25, baseType: !1214, size: 64, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1223, file: !1211, line: 27, baseType: !1229, size: 128, offset: 192)
!1229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, size: 128, elements: !379)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1223, file: !1211, line: 30, baseType: !1217, size: 32, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1223, file: !1211, line: 32, baseType: !1232, size: 96, offset: 352)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 96, elements: !495)
!1233 = !{!1234}
!1234 = !DISubrange(count: -1)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 440, elements: !1237)
!1237 = !{!1238}
!1238 = !DISubrange(count: 55)
!1239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 360, elements: !198)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 64)
!1243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1244, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1244 = !DIFile(filename: "src/selinux.c", directory: "/home/mohamad/clone/coreutils")
!1245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1246, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1247, nameTableKind: None)
!1246 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1247 = !{!5, !744, !381}
!1248 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1249, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1250, nameTableKind: None)
!1249 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!1250 = !{!5, !314}
!1251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1252, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1253, nameTableKind: None)
!1252 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1253 = !{!47, !52, !661, !1254, !7, !5}
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !1255)
!1255 = !{!1256}
!1256 = !DISubrange(count: 128)
!1257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1258, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !683, nameTableKind: None)
!1258 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!1259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1260, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1261, nameTableKind: None)
!1260 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!1261 = !{!52}
!1262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1263, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1264, nameTableKind: None)
!1263 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!1264 = !{!7}
!1265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1266, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1267, nameTableKind: None)
!1266 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1267 = !{!52, !180, !139, !7}
!1268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1269, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1270, nameTableKind: None)
!1269 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1270 = !{!7, !180, !181, !139, !52}
!1271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1272, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1273, nameTableKind: None)
!1272 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!1273 = !{!1274}
!1274 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1275, line: 45, baseType: !67, size: 32, elements: !1276)
!1275 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mohamad/clone/coreutils")
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282}
!1277 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1278 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1279 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1280 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1281 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1282 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1284, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1285, nameTableKind: None)
!1284 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!1285 = !{!136, !1286}
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1176, line: 14, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1284, line: 35, baseType: !1288)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1289, size: 192, elements: !39)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1284, line: 35, size: 192, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1289, file: !1284, line: 35, baseType: !67, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1289, file: !1284, line: 35, baseType: !67, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1289, file: !1284, line: 35, baseType: !47, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1289, file: !1284, line: 35, baseType: !47, size: 64, offset: 128)
!1295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1296, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1297, nameTableKind: None)
!1296 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1297 = !{!47, !7, !1298, !461, !506, !460, !508}
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1300, line: 9, size: 192, elements: !1301)
!1300 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1301 = !{!1302, !1303, !1304}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1299, file: !1300, line: 11, baseType: !7, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1299, file: !1300, line: 12, baseType: !506, size: 64, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1299, file: !1300, line: 13, baseType: !508, size: 64, offset: 128)
!1305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1306, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1307, nameTableKind: None)
!1306 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1307 = !{!7, !137}
!1308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1309, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1310, nameTableKind: None)
!1309 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1310 = !{!47, !7}
!1311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1312, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1313, nameTableKind: None)
!1312 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1313 = !{!47, !180, !52, !8, !181, !7}
!1314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1315, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1316, nameTableKind: None)
!1315 = !DIFile(filename: "./lib/full-read.c", directory: "/home/mohamad/clone/coreutils")
!1316 = !{!7, !52, !5, !8}
!1317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1318, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1319, nameTableKind: None)
!1318 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!1319 = !{!180, !52, !5, !181}
!1320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1321, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1322, nameTableKind: None)
!1321 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1322 = !{!1323, !52, !7, !506, !508, !1330}
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1300, line: 9, size: 192, elements: !1326)
!1326 = !{!1327, !1328, !1329}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1325, file: !1300, line: 11, baseType: !7, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1325, file: !1300, line: 12, baseType: !506, size: 64, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1325, file: !1300, line: 13, baseType: !508, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1332, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1333, retainedTypes: !1344, nameTableKind: None)
!1332 = !DIFile(filename: "./lib/mkancesdirs.c", directory: "/home/mohamad/clone/coreutils")
!1333 = !{!1334}
!1334 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1335, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1336)
!1336 = !{!1337, !1338}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1335, file: !98, line: 66, baseType: !1334, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1335, file: !98, line: 74, baseType: !1339, size: 32, offset: 32)
!1339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !98, line: 69, size: 32, elements: !1340)
!1340 = !{!1341, !1342, !1343}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1339, file: !98, line: 71, baseType: !5, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1339, file: !98, line: 72, baseType: !5, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1339, file: !98, line: 73, baseType: !108, size: 32)
!1344 = !{!7, !8, !139, !5}
!1345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1346, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1347, retainedTypes: !1358, nameTableKind: None)
!1346 = !DIFile(filename: "./lib/mkdir-p.c", directory: "/home/mohamad/clone/coreutils")
!1347 = !{!1348}
!1348 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1349, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1350)
!1350 = !{!1351, !1352}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1349, file: !98, line: 66, baseType: !1348, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1349, file: !98, line: 74, baseType: !1353, size: 32, offset: 32)
!1353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1349, file: !98, line: 69, size: 32, elements: !1354)
!1354 = !{!1355, !1356, !1357}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1353, file: !98, line: 71, baseType: !5, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1353, file: !98, line: 72, baseType: !5, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1353, file: !98, line: 73, baseType: !108, size: 32)
!1358 = !{!124, !126, !5, !7, !627, !139, !136, !8, !137, !350, !1359, !180, !387, !384, !255, !314}
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !379)
!1360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1361, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1362, nameTableKind: None)
!1361 = !DIFile(filename: "./lib/modechange.c", directory: "/home/mohamad/clone/coreutils")
!1362 = !{!1363, !52, !180, !181, !67, !136, !8, !137}
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !1365, line: 98, size: 128, elements: !1366)
!1365 = !DIFile(filename: "lib/modechange.c", directory: "/home/mohamad/clone/coreutils")
!1366 = !{!1367, !1368, !1369, !1370, !1371}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1364, file: !1365, line: 100, baseType: !8, size: 8)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1364, file: !1365, line: 101, baseType: !8, size: 8, offset: 8)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "affected", scope: !1364, file: !1365, line: 102, baseType: !136, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1364, file: !1365, line: 103, baseType: !136, size: 32, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mentioned", scope: !1364, file: !1365, line: 104, baseType: !136, size: 32, offset: 96)
!1372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1373, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1374, nameTableKind: None)
!1373 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!1374 = !{!5, !662}
!1375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1376, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1377, nameTableKind: None)
!1376 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1377 = !{!5}
!1378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1379, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1380, nameTableKind: None)
!1379 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!1380 = !{!5, !136}
!1381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1382, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1383, nameTableKind: None)
!1382 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!1383 = !{!7, !5, !52, !139, !180, !137}
!1384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1385, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1386, nameTableKind: None)
!1385 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!1386 = !{!661, !5}
!1387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1388, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1386, nameTableKind: None)
!1388 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mohamad/clone/coreutils")
!1389 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1390, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1391, nameTableKind: None)
!1390 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1391 = !{!180, !52, !139, !7, !5, !744, !461, !460}
!1392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1393, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1394, retainedTypes: !1405, nameTableKind: None)
!1393 = !DIFile(filename: "./lib/savewd.c", directory: "/home/mohamad/clone/coreutils")
!1394 = !{!1395}
!1395 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1396, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1396, file: !98, line: 66, baseType: !1395, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1396, file: !98, line: 74, baseType: !1400, size: 32, offset: 32)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1396, file: !98, line: 69, size: 32, elements: !1401)
!1401 = !{!1402, !1403, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1400, file: !98, line: 71, baseType: !5, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1400, file: !98, line: 72, baseType: !5, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1400, file: !98, line: 73, baseType: !108, size: 32)
!1405 = !{!1400, !5, !565, !521, !1406, !387, !108, !457, !1407, !1408, !1417, !1421, !356, !1425, !206, !7, !1426}
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 480, elements: !499)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 328, elements: !443)
!1408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !1409, line: 218, size: 32, elements: !1414)
!1409 = !DIFile(filename: "lib/savewd.c", directory: "/home/mohamad/clone/coreutils")
!1410 = distinct !DISubprogram(name: "savewd_restore", scope: !1409, file: !1409, line: 175, type: !1411, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!5, !1413, !5}
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1414 = !{!1415, !1416}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1408, file: !1409, line: 218, baseType: !5, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1408, file: !1409, line: 218, baseType: !5, size: 32)
!1417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !1409, line: 219, size: 32, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1417, file: !1409, line: 219, baseType: !5, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1417, file: !1409, line: 219, baseType: !5, size: 32)
!1421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !1409, line: 220, size: 32, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1421, file: !1409, line: 220, baseType: !5, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1421, file: !1409, line: 220, baseType: !5, size: 32)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 288, elements: !369)
!1426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 280, elements: !1029)
!1427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1428, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1377, nameTableKind: None)
!1428 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1430, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1431, nameTableKind: None)
!1430 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1431 = !{!378, !376}
!1432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1433, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1433 = !DIFile(filename: "./lib/statat.c", directory: "/home/mohamad/clone/coreutils")
!1434 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1435, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1377, nameTableKind: None)
!1435 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!1436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1437, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1438, nameTableKind: None)
!1437 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1438 = !{!47, !252, !743, !1439, !308, !387, !1440, !1443, !240, !1125, !302, !457, !384, !368, !305, !391, !1446, !462, !498, !52, !1449, !1450, !1460, !57, !347, !237, !177, !249}
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, elements: !1233)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1368, elements: !1441)
!1441 = !{!1442}
!1442 = !DISubrange(count: 171)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 272, elements: !1444)
!1444 = !{!1445}
!1445 = !DISubrange(count: 34)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 384, elements: !1447)
!1447 = !{!1448}
!1448 = !DISubrange(count: 48)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 640, elements: !208)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !438, line: 79, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1176, line: 32, baseType: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1437, line: 234, baseType: !1453)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1454, size: 192, elements: !39)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1437, line: 192, size: 192, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1454, file: !1437, line: 192, baseType: !67, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1454, file: !1437, line: 192, baseType: !67, size: 32, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1454, file: !1437, line: 192, baseType: !47, size: 64, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1454, file: !1437, line: 192, baseType: !47, size: 64, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1461, file: !2, line: 242, baseType: !5, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1461, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1461, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1461, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1461, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1461, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1461, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1461, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1461, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1461, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1461, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1461, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1461, file: !2, line: 260, baseType: !1476, size: 64, offset: 768)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1478)
!1478 = !{!1479, !1480, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1477, file: !2, line: 157, baseType: !1476, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1477, file: !2, line: 158, baseType: !1460, size: 64, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1477, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1461, file: !2, line: 262, baseType: !1460, size: 64, offset: 832)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1461, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1461, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1461, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1461, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1461, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1461, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1461, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1461, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1461, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1461, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1461, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1461, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1461, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1461, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1461, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1499, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1500, nameTableKind: None)
!1499 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!1500 = !{!52, !7, !47}
!1501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1502, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1503, nameTableKind: None)
!1502 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!1503 = !{!745, !744, !264}
!1504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1505, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1506, retainedTypes: !1515, nameTableKind: None)
!1505 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mohamad/clone/coreutils")
!1506 = !{!1507}
!1507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !1508, line: 26, baseType: !67, size: 32, elements: !1509)
!1508 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mohamad/clone/coreutils")
!1509 = !{!1510, !1511, !1512, !1513, !1514}
!1510 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!1511 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!1512 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!1513 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!1514 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!1515 = !{!5, !34, !7, !206, !54, !1516, !228, !240, !524, !180, !585, !181, !942, !8}
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !1508, line: 39, baseType: !1507)
!1517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1518, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1519, nameTableKind: None)
!1518 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!1519 = !{!139, !7, !52, !661, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1521, file: !2, line: 242, baseType: !5, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1521, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1521, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1521, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1521, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1521, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1521, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1521, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1521, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1521, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1521, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1521, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1521, file: !2, line: 260, baseType: !1536, size: 64, offset: 768)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1538)
!1538 = !{!1539, !1540, !1541}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1537, file: !2, line: 157, baseType: !1536, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1537, file: !2, line: 158, baseType: !1520, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1537, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1521, file: !2, line: 262, baseType: !1520, size: 64, offset: 832)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1521, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1521, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1521, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1521, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1521, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1521, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1521, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1521, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1521, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1521, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1521, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1521, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1521, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1521, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1521, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1559, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1560, nameTableKind: None)
!1559 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!1560 = !{!47, !1561, !5}
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1562, file: !2, line: 242, baseType: !5, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1562, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1562, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1562, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1562, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1562, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1562, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1562, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1562, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1562, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1562, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1562, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1562, file: !2, line: 260, baseType: !1577, size: 64, offset: 768)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1579)
!1579 = !{!1580, !1581, !1583}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1578, file: !2, line: 157, baseType: !1577, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1578, file: !2, line: 158, baseType: !1582, size: 64, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1578, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1562, file: !2, line: 262, baseType: !1582, size: 64, offset: 832)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1562, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1562, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1562, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1562, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1562, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1562, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1562, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1562, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1562, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1562, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1562, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1562, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1562, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1562, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1562, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1601, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1602, nameTableKind: None)
!1601 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!1602 = !{!1603, !7, !5}
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1604, file: !2, line: 242, baseType: !5, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1604, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1604, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1604, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1604, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1604, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1604, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1604, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1604, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1604, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1604, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1604, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1604, file: !2, line: 260, baseType: !1619, size: 64, offset: 768)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1621)
!1621 = !{!1622, !1623, !1625}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1620, file: !2, line: 157, baseType: !1619, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1620, file: !2, line: 158, baseType: !1624, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1620, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1604, file: !2, line: 262, baseType: !1624, size: 64, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1604, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1604, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1604, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1604, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1604, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1604, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1604, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1604, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1604, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1604, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1604, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1604, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1604, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1604, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1604, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1643, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1644, nameTableKind: None)
!1643 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!1644 = !{!47, !1645, !7, !437, !5, !45}
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1646, file: !2, line: 242, baseType: !5, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1646, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1646, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1646, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1646, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1646, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1646, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1646, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1646, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1646, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1646, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1646, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1646, file: !2, line: 260, baseType: !1661, size: 64, offset: 768)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1667}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1662, file: !2, line: 157, baseType: !1661, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1662, file: !2, line: 158, baseType: !1666, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1662, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1646, file: !2, line: 262, baseType: !1666, size: 64, offset: 832)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1646, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1646, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1646, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1646, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1646, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1646, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1646, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1646, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1646, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1646, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1646, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1646, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1646, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1646, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1646, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1685, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1686, nameTableKind: None)
!1685 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!1686 = !{!52, !955, !585, !181}
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1688 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!1689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1690, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !591, nameTableKind: None)
!1690 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!1691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1692, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1693, nameTableKind: None)
!1692 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!1693 = !{!139, !5, !136}
!1694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1695, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1696, nameTableKind: None)
!1695 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!1696 = !{!67}
!1697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1698, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1699, nameTableKind: None)
!1698 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!1699 = !{!583, !585, !584}
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1702, nameTableKind: None)
!1701 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!1702 = !{!1703, !5}
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!1704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1705, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1706, nameTableKind: None)
!1705 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!1706 = !{!662, !5}
!1707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1708, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1708 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1711, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!1711 = !{!139, !180, !387, !958}
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1714, nameTableKind: None)
!1713 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!1714 = !{!180, !52, !181}
!1715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1716, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1717, nameTableKind: None)
!1716 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!1717 = !{!47, !180, !38, !958}
!1718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1719, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1720, nameTableKind: None)
!1719 = !DIFile(filename: "./lib/dirchownmod.c", directory: "/home/mohamad/clone/coreutils")
!1720 = !{!124, !126, !136, !5, !137, !125, !127}
!1721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1722, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1723, nameTableKind: None)
!1722 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!1723 = !{!136, !1724}
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1176, line: 14, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1722, line: 35, baseType: !1726)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 192, elements: !39)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1722, line: 35, size: 192, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1727, file: !1722, line: 35, baseType: !67, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1727, file: !1722, line: 35, baseType: !67, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1727, file: !1722, line: 35, baseType: !47, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1727, file: !1722, line: 35, baseType: !47, size: 64, offset: 128)
!1733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1734, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1735, nameTableKind: None)
!1734 = !DIFile(filename: "./lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!1735 = !{!47, !1736, !1741, !1745, !52, !1747, !5}
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1738, line: 54, size: 192, elements: !1739)
!1738 = !DIFile(filename: "lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!1739 = !{!1740, !1744, !1746}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1737, file: !1738, line: 57, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1743, line: 25, flags: DIFlagFwdDecl)
!1743 = !DIFile(filename: "./lib/randread.h", directory: "/home/mohamad/clone/coreutils")
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !1737, file: !1738, line: 64, baseType: !1745, size: 64, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1023, line: 30, baseType: !608)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !1737, file: !1738, line: 65, baseType: !1745, size: 64, offset: 128)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 64, elements: !204)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1750, nameTableKind: None)
!1749 = !DIFile(filename: "./lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1750 = !{!52, !1751, !1791, !744, !353, !1814, !1797, !685, !745, !5, !240, !350, !7, !661, !521, !8, !108, !124, !585, !1825, !1828, !1815}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1753, file: !2, line: 242, baseType: !5, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1753, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1753, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1753, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1753, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1753, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1753, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1753, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1753, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1753, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1753, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1753, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1753, file: !2, line: 260, baseType: !1768, size: 64, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1770)
!1770 = !{!1771, !1772, !1774}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1769, file: !2, line: 157, baseType: !1768, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1769, file: !2, line: 158, baseType: !1773, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1769, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1753, file: !2, line: 262, baseType: !1773, size: 64, offset: 832)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1753, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1753, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1753, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1753, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1753, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1753, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1753, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1753, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1753, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1753, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1753, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1753, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1753, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1753, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1753, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1793, line: 79, size: 33216, elements: !1794)
!1793 = !DIFile(filename: "lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!1794 = !{!1795, !1796, !1800, !1801}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1792, file: !1793, line: 83, baseType: !1751, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1792, file: !1793, line: 90, baseType: !1797, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{null, !685}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1792, file: !1793, line: 91, baseType: !685, size: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1792, file: !1793, line: 117, baseType: !1802, size: 33024, offset: 192)
!1802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1792, file: !1793, line: 96, size: 33024, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1802, file: !1793, line: 99, baseType: !353, size: 32768)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !1802, file: !1793, line: 116, baseType: !1806, size: 33024)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1793, line: 102, size: 33024, elements: !1807)
!1807 = !{!1808, !1809, !1820}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !1806, file: !1793, line: 105, baseType: !52, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1806, file: !1793, line: 108, baseType: !1810, size: 16576, offset: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1811, line: 56, size: 16576, elements: !1812)
!1811 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mohamad/clone/coreutils")
!1812 = !{!1813, !1817, !1818, !1819}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1810, file: !1811, line: 58, baseType: !1814, size: 16384)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1815, size: 16384, elements: !625)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !1811, line: 44, baseType: !1816)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !609, line: 80, baseType: !54)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1810, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1810, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16448)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1810, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16512)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1806, file: !1793, line: 115, baseType: !1821, size: 16384, offset: 16640)
!1821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1806, file: !1793, line: 111, size: 16384, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1821, file: !1793, line: 113, baseType: !1814, size: 16384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1821, file: !1793, line: 114, baseType: !1825, size: 16384)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 16384, elements: !1826)
!1826 = !{!1827}
!1827 = !DISubrange(count: 2048)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1831, nameTableKind: None)
!1830 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!1831 = !{!1815, !1828, !1814, !5, !685, !180, !181, !1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1835, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1835 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!1836 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1837, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1837 = !DIFile(filename: "./lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1377, nameTableKind: None)
!1839 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1841 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!1842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1843, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, nameTableKind: None)
!1843 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!1844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1845, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !295, retainedTypes: !1846, nameTableKind: None)
!1845 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!1846 = !{!1847, !5}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1849, file: !2, line: 242, baseType: !5, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1849, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1849, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1849, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1849, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1849, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1849, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1849, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1849, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1849, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1849, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1849, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1849, file: !2, line: 260, baseType: !1864, size: 64, offset: 768)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1866)
!1866 = !{!1867, !1868, !1870}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1865, file: !2, line: 157, baseType: !1864, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1865, file: !2, line: 158, baseType: !1869, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1865, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1849, file: !2, line: 262, baseType: !1869, size: 64, offset: 832)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1849, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1849, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1849, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1849, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1849, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1849, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1849, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1849, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1849, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1849, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1849, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1849, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1849, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1849, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1849, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1887 = !{!"clang version 9.0.0 (https://github.com/mbarbar/tir-clang 098fdcdeef42cde3f762b81318f3acc730a55c87) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!1888 = !{i32 2, !"ctir", i32 1}
!1889 = !{i32 2, !"Dwarf Version", i32 4}
!1890 = !{i32 2, !"Debug Info Version", i32 3}
!1891 = !{i32 1, !"wchar_size", i32 4}
!1892 = distinct !DISubprogram(name: "usage", scope: !63, file: !63, line: 621, type: !122, scopeLine: 622, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !295)
!1893 = !DILocalVariable(name: "status", arg: 1, scope: !1892, file: !63, line: 621, type: !5)
!1894 = !DILocation(line: 621, column: 12, scope: !1892)
!1895 = !DILocation(line: 623, column: 7, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1892, file: !63, line: 623, column: 7)
!1897 = !DILocation(line: 623, column: 14, scope: !1896)
!1898 = !DILocation(line: 623, column: 7, scope: !1892)
!1899 = !DILocation(line: 624, column: 5, scope: !1896)
!1900 = !DILocation(line: 624, column: 5, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1896, file: !63, line: 624, column: 5)
!1902 = !DILocation(line: 627, column: 15, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1896, file: !63, line: 626, column: 5)
!1904 = !DILocation(line: 633, column: 15, scope: !1903)
!1905 = !DILocation(line: 633, column: 29, scope: !1903)
!1906 = !DILocation(line: 633, column: 43, scope: !1903)
!1907 = !DILocation(line: 633, column: 57, scope: !1903)
!1908 = !DILocation(line: 627, column: 7, scope: !1903)
!1909 = !DILocation(line: 634, column: 7, scope: !1903)
!1910 = !DILocation(line: 646, column: 7, scope: !1903)
!1911 = !DILocation(line: 648, column: 7, scope: !1903)
!1912 = !DILocation(line: 657, column: 7, scope: !1903)
!1913 = !DILocation(line: 665, column: 7, scope: !1903)
!1914 = !DILocation(line: 675, column: 7, scope: !1903)
!1915 = !DILocation(line: 683, column: 7, scope: !1903)
!1916 = !DILocation(line: 684, column: 7, scope: !1903)
!1917 = !DILocation(line: 685, column: 7, scope: !1903)
!1918 = !DILocation(line: 686, column: 7, scope: !1903)
!1919 = !DILocation(line: 688, column: 9, scope: !1892)
!1920 = !DILocation(line: 688, column: 3, scope: !1892)
!1921 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !291, file: !291, line: 585, type: !694, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!1922 = !DILocation(line: 587, column: 3, scope: !1921)
!1923 = !DILocation(line: 590, column: 1, scope: !1921)
!1924 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !291, file: !291, line: 613, type: !694, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!1925 = !DILocation(line: 615, column: 3, scope: !1924)
!1926 = !DILocation(line: 622, column: 3, scope: !1924)
!1927 = !DILocation(line: 628, column: 1, scope: !1924)
!1928 = !DILocalVariable(name: "program", arg: 1, scope: !292, file: !291, line: 631, type: !180)
!1929 = !DILocation(line: 631, column: 34, scope: !292)
!1930 = !DILocalVariable(name: "infomap", scope: !292, file: !291, line: 633, type: !288)
!1931 = !DILocation(line: 633, column: 67, scope: !292)
!1932 = !DILocalVariable(name: "node", scope: !292, file: !291, line: 643, type: !180)
!1933 = !DILocation(line: 643, column: 15, scope: !292)
!1934 = !DILocation(line: 643, column: 22, scope: !292)
!1935 = !DILocalVariable(name: "map_prog", scope: !292, file: !291, line: 644, type: !301)
!1936 = !DILocation(line: 644, column: 25, scope: !292)
!1937 = !DILocation(line: 644, column: 36, scope: !292)
!1938 = !DILocation(line: 646, column: 3, scope: !292)
!1939 = !DILocation(line: 646, column: 10, scope: !292)
!1940 = !DILocation(line: 646, column: 20, scope: !292)
!1941 = !DILocation(line: 646, column: 28, scope: !292)
!1942 = !DILocation(line: 646, column: 33, scope: !292)
!1943 = !DILocation(line: 646, column: 31, scope: !292)
!1944 = !DILocation(line: 0, scope: !292)
!1945 = !DILocation(line: 647, column: 13, scope: !292)
!1946 = distinct !{!1946, !1938, !1945}
!1947 = !DILocation(line: 649, column: 7, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !292, file: !291, line: 649, column: 7)
!1949 = !DILocation(line: 649, column: 17, scope: !1948)
!1950 = !DILocation(line: 649, column: 7, scope: !292)
!1951 = !DILocation(line: 650, column: 12, scope: !1948)
!1952 = !DILocation(line: 650, column: 22, scope: !1948)
!1953 = !DILocation(line: 650, column: 10, scope: !1948)
!1954 = !DILocation(line: 650, column: 5, scope: !1948)
!1955 = !DILocation(line: 652, column: 11, scope: !292)
!1956 = !DILocation(line: 652, column: 3, scope: !292)
!1957 = !DILocalVariable(name: "lc_messages", scope: !292, file: !291, line: 656, type: !180)
!1958 = !DILocation(line: 656, column: 15, scope: !292)
!1959 = !DILocation(line: 656, column: 29, scope: !292)
!1960 = !DILocation(line: 657, column: 7, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !292, file: !291, line: 657, column: 7)
!1962 = !DILocation(line: 657, column: 19, scope: !1961)
!1963 = !DILocation(line: 657, column: 22, scope: !1961)
!1964 = !DILocation(line: 657, column: 7, scope: !292)
!1965 = !DILocation(line: 663, column: 7, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1961, file: !291, line: 658, column: 5)
!1967 = !DILocation(line: 665, column: 5, scope: !1966)
!1968 = !DILocation(line: 666, column: 11, scope: !292)
!1969 = !DILocation(line: 667, column: 24, scope: !292)
!1970 = !DILocation(line: 666, column: 3, scope: !292)
!1971 = !DILocation(line: 668, column: 11, scope: !292)
!1972 = !DILocation(line: 669, column: 11, scope: !292)
!1973 = !DILocation(line: 669, column: 17, scope: !292)
!1974 = !DILocation(line: 669, column: 25, scope: !292)
!1975 = !DILocation(line: 669, column: 22, scope: !292)
!1976 = !DILocation(line: 668, column: 3, scope: !292)
!1977 = !DILocation(line: 670, column: 1, scope: !292)
!1978 = distinct !DISubprogram(name: "main", scope: !63, file: !63, line: 793, type: !1979, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !295)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!5, !5, !206}
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1981, file: !471, line: 48, baseType: !460, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1981, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1981, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1981, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1981, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1981, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1981, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1981, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1981, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1981, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1981, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1981, file: !471, line: 91, baseType: !372, size: 128, offset: 576)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1981, file: !471, line: 92, baseType: !372, size: 128, offset: 704)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1981, file: !471, line: 93, baseType: !372, size: 128, offset: 832)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1981, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!1998 = !DILocalVariable(name: "argc", arg: 1, scope: !1978, file: !63, line: 793, type: !5)
!1999 = !DILocation(line: 793, column: 11, scope: !1978)
!2000 = !DILocalVariable(name: "argv", arg: 2, scope: !1978, file: !63, line: 793, type: !206)
!2001 = !DILocation(line: 793, column: 24, scope: !1978)
!2002 = !DILocalVariable(name: "optc", scope: !1978, file: !63, line: 795, type: !5)
!2003 = !DILocation(line: 795, column: 7, scope: !1978)
!2004 = !DILocalVariable(name: "exit_status", scope: !1978, file: !63, line: 796, type: !5)
!2005 = !DILocation(line: 796, column: 7, scope: !1978)
!2006 = !DILocalVariable(name: "specified_mode", scope: !1978, file: !63, line: 797, type: !180)
!2007 = !DILocation(line: 797, column: 15, scope: !1978)
!2008 = !DILocalVariable(name: "make_backups", scope: !1978, file: !63, line: 798, type: !139)
!2009 = !DILocation(line: 798, column: 8, scope: !1978)
!2010 = !DILocalVariable(name: "backup_suffix", scope: !1978, file: !63, line: 799, type: !180)
!2011 = !DILocation(line: 799, column: 15, scope: !1978)
!2012 = !DILocalVariable(name: "version_control_string", scope: !1978, file: !63, line: 800, type: !7)
!2013 = !DILocation(line: 800, column: 9, scope: !1978)
!2014 = !DILocalVariable(name: "mkdir_and_install", scope: !1978, file: !63, line: 801, type: !139)
!2015 = !DILocation(line: 801, column: 8, scope: !1978)
!2016 = !DILocalVariable(name: "x", scope: !1978, file: !63, line: 802, type: !129)
!2017 = !DILocation(line: 802, column: 21, scope: !1978)
!2018 = !DILocalVariable(name: "target_directory", scope: !1978, file: !63, line: 803, type: !180)
!2019 = !DILocation(line: 803, column: 15, scope: !1978)
!2020 = !DILocalVariable(name: "no_target_directory", scope: !1978, file: !63, line: 804, type: !139)
!2021 = !DILocation(line: 804, column: 8, scope: !1978)
!2022 = !DILocalVariable(name: "n_files", scope: !1978, file: !63, line: 805, type: !5)
!2023 = !DILocation(line: 805, column: 7, scope: !1978)
!2024 = !DILocalVariable(name: "file", scope: !1978, file: !63, line: 806, type: !206)
!2025 = !DILocation(line: 806, column: 10, scope: !1978)
!2026 = !DILocalVariable(name: "strip_program_specified", scope: !1978, file: !63, line: 807, type: !139)
!2027 = !DILocation(line: 807, column: 8, scope: !1978)
!2028 = !DILocalVariable(name: "scontext", scope: !1978, file: !63, line: 808, type: !180)
!2029 = !DILocation(line: 808, column: 15, scope: !1978)
!2030 = !DILocation(line: 810, column: 19, scope: !1978)
!2031 = !DILocation(line: 813, column: 21, scope: !1978)
!2032 = !DILocation(line: 813, column: 3, scope: !1978)
!2033 = !DILocation(line: 814, column: 3, scope: !1978)
!2034 = !DILocation(line: 815, column: 3, scope: !1978)
!2035 = !DILocation(line: 816, column: 3, scope: !1978)
!2036 = !DILocation(line: 818, column: 3, scope: !1978)
!2037 = !DILocation(line: 820, column: 3, scope: !1978)
!2038 = !DILocation(line: 822, column: 14, scope: !1978)
!2039 = !DILocation(line: 823, column: 14, scope: !1978)
!2040 = !DILocation(line: 824, column: 15, scope: !1978)
!2041 = !DILocation(line: 825, column: 11, scope: !1978)
!2042 = !DILocation(line: 826, column: 3, scope: !1978)
!2043 = !DILocation(line: 828, column: 3, scope: !1978)
!2044 = !DILocation(line: 828, column: 31, scope: !1978)
!2045 = !DILocation(line: 828, column: 37, scope: !1978)
!2046 = !DILocation(line: 828, column: 18, scope: !1978)
!2047 = !DILocation(line: 828, column: 16, scope: !1978)
!2048 = !DILocation(line: 829, column: 38, scope: !1978)
!2049 = !DILocation(line: 831, column: 15, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 830, column: 5)
!2051 = !DILocation(line: 831, column: 7, scope: !2050)
!2052 = !DILocation(line: 834, column: 24, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2050, file: !63, line: 832, column: 9)
!2054 = !DILocation(line: 835, column: 15, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2053, file: !63, line: 835, column: 15)
!2056 = !DILocation(line: 835, column: 15, scope: !2053)
!2057 = !DILocation(line: 836, column: 38, scope: !2055)
!2058 = !DILocation(line: 836, column: 36, scope: !2055)
!2059 = !DILocation(line: 836, column: 13, scope: !2055)
!2060 = !DILocation(line: 837, column: 11, scope: !2053)
!2061 = !DILocation(line: 839, column: 11, scope: !2053)
!2062 = !DILocation(line: 841, column: 31, scope: !2053)
!2063 = !DILocation(line: 842, column: 11, scope: !2053)
!2064 = !DILocation(line: 844, column: 23, scope: !2053)
!2065 = !DILocation(line: 847, column: 11, scope: !2053)
!2066 = !DILocation(line: 849, column: 11, scope: !2053)
!2067 = !DILocation(line: 851, column: 36, scope: !2053)
!2068 = !DILocation(line: 851, column: 27, scope: !2053)
!2069 = !DILocation(line: 851, column: 25, scope: !2053)
!2070 = !DILocation(line: 852, column: 35, scope: !2053)
!2071 = !DILocation(line: 853, column: 11, scope: !2053)
!2072 = !DILocation(line: 855, column: 19, scope: !2053)
!2073 = !DILocation(line: 856, column: 11, scope: !2053)
!2074 = !DILocation(line: 858, column: 29, scope: !2053)
!2075 = !DILocation(line: 859, column: 11, scope: !2053)
!2076 = !DILocation(line: 861, column: 13, scope: !2053)
!2077 = !DILocation(line: 861, column: 21, scope: !2053)
!2078 = !DILocation(line: 862, column: 11, scope: !2053)
!2079 = !DILocation(line: 864, column: 24, scope: !2053)
!2080 = !DILocation(line: 864, column: 22, scope: !2053)
!2081 = !DILocation(line: 865, column: 11, scope: !2053)
!2082 = !DILocation(line: 867, column: 28, scope: !2053)
!2083 = !DILocation(line: 867, column: 26, scope: !2053)
!2084 = !DILocation(line: 868, column: 11, scope: !2053)
!2085 = !DILocation(line: 870, column: 24, scope: !2053)
!2086 = !DILocation(line: 870, column: 22, scope: !2053)
!2087 = !DILocation(line: 871, column: 11, scope: !2053)
!2088 = !DILocation(line: 873, column: 13, scope: !2053)
!2089 = !DILocation(line: 873, column: 33, scope: !2053)
!2090 = !DILocation(line: 874, column: 11, scope: !2053)
!2091 = !DILocation(line: 876, column: 24, scope: !2053)
!2092 = !DILocation(line: 877, column: 27, scope: !2053)
!2093 = !DILocation(line: 877, column: 25, scope: !2053)
!2094 = !DILocation(line: 878, column: 11, scope: !2053)
!2095 = !DILocation(line: 880, column: 15, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2053, file: !63, line: 880, column: 15)
!2097 = !DILocation(line: 880, column: 15, scope: !2053)
!2098 = !DILocation(line: 881, column: 13, scope: !2096)
!2099 = !DILocation(line: 883, column: 30, scope: !2053)
!2100 = !DILocation(line: 883, column: 28, scope: !2053)
!2101 = !DILocation(line: 884, column: 11, scope: !2053)
!2102 = !DILocation(line: 886, column: 31, scope: !2053)
!2103 = !DILocation(line: 887, column: 11, scope: !2053)
!2104 = !DILocation(line: 890, column: 17, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2053, file: !63, line: 890, column: 15)
!2106 = !DILocation(line: 890, column: 15, scope: !2053)
!2107 = !DILocation(line: 892, column: 28, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2105, file: !63, line: 891, column: 13)
!2109 = !DILocation(line: 892, column: 15, scope: !2108)
!2110 = !DILocation(line: 894, column: 15, scope: !2108)
!2111 = !DILocation(line: 896, column: 13, scope: !2053)
!2112 = !DILocation(line: 896, column: 39, scope: !2053)
!2113 = !DILocation(line: 897, column: 39, scope: !2053)
!2114 = !DILocation(line: 898, column: 11, scope: !2053)
!2115 = !DILocation(line: 900, column: 15, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2053, file: !63, line: 900, column: 15)
!2117 = !DILocation(line: 900, column: 15, scope: !2053)
!2118 = !DILocation(line: 908, column: 43, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2116, file: !63, line: 901, column: 13)
!2120 = !DILocation(line: 910, column: 19, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2119, file: !63, line: 910, column: 19)
!2122 = !DILocation(line: 910, column: 19, scope: !2119)
!2123 = !DILocation(line: 911, column: 28, scope: !2121)
!2124 = !DILocation(line: 911, column: 26, scope: !2121)
!2125 = !DILocation(line: 911, column: 17, scope: !2121)
!2126 = !DILocation(line: 913, column: 19, scope: !2121)
!2127 = !DILocation(line: 913, column: 40, scope: !2121)
!2128 = !DILocation(line: 914, column: 13, scope: !2119)
!2129 = !DILocation(line: 915, column: 20, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2116, file: !63, line: 915, column: 20)
!2131 = !DILocation(line: 915, column: 20, scope: !2116)
!2132 = !DILocation(line: 918, column: 22, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2130, file: !63, line: 916, column: 13)
!2134 = !DILocation(line: 917, column: 15, scope: !2133)
!2135 = !DILocation(line: 920, column: 13, scope: !2133)
!2136 = !DILocation(line: 921, column: 11, scope: !2053)
!2137 = !DILocation(line: 922, column: 9, scope: !2053)
!2138 = !DILocation(line: 923, column: 9, scope: !2053)
!2139 = !DILocation(line: 925, column: 11, scope: !2053)
!2140 = distinct !{!2140, !2043, !2141}
!2141 = !DILocation(line: 927, column: 5, scope: !1978)
!2142 = !DILocation(line: 930, column: 7, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 930, column: 7)
!2144 = !DILocation(line: 930, column: 15, scope: !2143)
!2145 = !DILocation(line: 930, column: 18, scope: !2143)
!2146 = !DILocation(line: 930, column: 7, scope: !1978)
!2147 = !DILocation(line: 931, column: 5, scope: !2143)
!2148 = !DILocation(line: 933, column: 7, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 933, column: 7)
!2150 = !DILocation(line: 933, column: 15, scope: !2149)
!2151 = !DILocation(line: 933, column: 18, scope: !2149)
!2152 = !DILocation(line: 933, column: 7, scope: !1978)
!2153 = !DILocation(line: 934, column: 5, scope: !2149)
!2154 = !DILocation(line: 937, column: 7, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 937, column: 7)
!2156 = !DILocation(line: 937, column: 7, scope: !1978)
!2157 = !DILocalVariable(name: "st", scope: !2158, file: !63, line: 939, type: !1981)
!2158 = distinct !DILexicalBlock(scope: !2155, file: !63, line: 938, column: 5)
!2159 = !DILocation(line: 939, column: 19, scope: !2158)
!2160 = !DILocalVariable(name: "stat_success", scope: !2158, file: !63, line: 940, type: !139)
!2161 = !DILocation(line: 940, column: 12, scope: !2158)
!2162 = !DILocation(line: 940, column: 33, scope: !2158)
!2163 = !DILocation(line: 940, column: 27, scope: !2158)
!2164 = !DILocation(line: 940, column: 56, scope: !2158)
!2165 = !DILocation(line: 941, column: 13, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2158, file: !63, line: 941, column: 11)
!2167 = !DILocation(line: 941, column: 31, scope: !2166)
!2168 = !DILocation(line: 941, column: 36, scope: !2166)
!2169 = !DILocation(line: 941, column: 11, scope: !2158)
!2170 = !DILocation(line: 942, column: 9, scope: !2166)
!2171 = !DILocation(line: 944, column: 11, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2158, file: !63, line: 944, column: 11)
!2173 = !DILocation(line: 944, column: 24, scope: !2172)
!2174 = !DILocation(line: 944, column: 29, scope: !2172)
!2175 = !DILocation(line: 944, column: 11, scope: !2158)
!2176 = !DILocation(line: 945, column: 9, scope: !2172)
!2177 = !DILocation(line: 947, column: 5, scope: !2158)
!2178 = !DILocation(line: 949, column: 20, scope: !1978)
!2179 = !DILocation(line: 950, column: 36, scope: !1978)
!2180 = !DILocation(line: 951, column: 36, scope: !1978)
!2181 = !DILocation(line: 950, column: 22, scope: !1978)
!2182 = !DILocation(line: 949, column: 5, scope: !1978)
!2183 = !DILocation(line: 949, column: 17, scope: !1978)
!2184 = !DILocation(line: 953, column: 29, scope: !1978)
!2185 = !DILocation(line: 953, column: 3, scope: !1978)
!2186 = !DILocation(line: 955, column: 9, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 955, column: 7)
!2188 = !DILocation(line: 955, column: 35, scope: !2187)
!2189 = !DILocation(line: 955, column: 41, scope: !2187)
!2190 = !DILocation(line: 955, column: 62, scope: !2187)
!2191 = !DILocation(line: 955, column: 65, scope: !2187)
!2192 = !DILocation(line: 955, column: 7, scope: !1978)
!2193 = !DILocation(line: 956, column: 5, scope: !2187)
!2194 = !DILocation(line: 959, column: 7, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 959, column: 7)
!2196 = !DILocation(line: 959, column: 16, scope: !2195)
!2197 = !DILocation(line: 959, column: 45, scope: !2195)
!2198 = !DILocation(line: 959, column: 35, scope: !2195)
!2199 = !DILocation(line: 959, column: 19, scope: !2195)
!2200 = !DILocation(line: 959, column: 56, scope: !2195)
!2201 = !DILocation(line: 959, column: 7, scope: !1978)
!2202 = !DILocation(line: 960, column: 5, scope: !2195)
!2203 = !DILocation(line: 964, column: 13, scope: !1978)
!2204 = !DILocation(line: 964, column: 20, scope: !1978)
!2205 = !DILocation(line: 964, column: 18, scope: !1978)
!2206 = !DILocation(line: 964, column: 11, scope: !1978)
!2207 = !DILocation(line: 965, column: 10, scope: !1978)
!2208 = !DILocation(line: 965, column: 17, scope: !1978)
!2209 = !DILocation(line: 965, column: 15, scope: !1978)
!2210 = !DILocation(line: 965, column: 8, scope: !1978)
!2211 = !DILocation(line: 967, column: 7, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 967, column: 7)
!2213 = !DILocation(line: 967, column: 21, scope: !2212)
!2214 = !DILocation(line: 967, column: 29, scope: !2212)
!2215 = !DILocation(line: 967, column: 32, scope: !2212)
!2216 = !DILocation(line: 967, column: 18, scope: !2212)
!2217 = !DILocation(line: 967, column: 15, scope: !2212)
!2218 = !DILocation(line: 967, column: 7, scope: !1978)
!2219 = !DILocation(line: 969, column: 11, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !63, line: 969, column: 11)
!2221 = distinct !DILexicalBlock(scope: !2212, file: !63, line: 968, column: 5)
!2222 = !DILocation(line: 969, column: 19, scope: !2220)
!2223 = !DILocation(line: 969, column: 11, scope: !2221)
!2224 = !DILocation(line: 970, column: 22, scope: !2220)
!2225 = !DILocation(line: 970, column: 9, scope: !2220)
!2226 = !DILocation(line: 972, column: 22, scope: !2220)
!2227 = !DILocation(line: 973, column: 16, scope: !2220)
!2228 = !DILocation(line: 972, column: 9, scope: !2220)
!2229 = !DILocation(line: 974, column: 7, scope: !2221)
!2230 = !DILocation(line: 977, column: 7, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 977, column: 7)
!2232 = !DILocation(line: 977, column: 7, scope: !1978)
!2233 = !DILocation(line: 979, column: 11, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !63, line: 979, column: 11)
!2235 = distinct !DILexicalBlock(scope: !2231, file: !63, line: 978, column: 5)
!2236 = !DILocation(line: 979, column: 11, scope: !2235)
!2237 = !DILocation(line: 980, column: 9, scope: !2234)
!2238 = !DILocation(line: 983, column: 15, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2235, file: !63, line: 983, column: 11)
!2240 = !DILocation(line: 983, column: 13, scope: !2239)
!2241 = !DILocation(line: 983, column: 11, scope: !2235)
!2242 = !DILocation(line: 985, column: 24, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2239, file: !63, line: 984, column: 9)
!2244 = !DILocation(line: 985, column: 47, scope: !2243)
!2245 = !DILocation(line: 985, column: 11, scope: !2243)
!2246 = !DILocation(line: 986, column: 11, scope: !2243)
!2247 = !DILocation(line: 988, column: 5, scope: !2235)
!2248 = !DILocation(line: 989, column: 15, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2231, file: !63, line: 989, column: 12)
!2250 = !DILocation(line: 989, column: 23, scope: !2249)
!2251 = !DILocation(line: 989, column: 26, scope: !2249)
!2252 = !DILocation(line: 989, column: 12, scope: !2231)
!2253 = !DILocation(line: 991, column: 16, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2255, file: !63, line: 991, column: 11)
!2255 = distinct !DILexicalBlock(scope: !2249, file: !63, line: 990, column: 5)
!2256 = !DILocation(line: 991, column: 13, scope: !2254)
!2257 = !DILocation(line: 991, column: 24, scope: !2254)
!2258 = !DILocation(line: 991, column: 53, scope: !2254)
!2259 = !DILocation(line: 991, column: 58, scope: !2254)
!2260 = !DILocation(line: 991, column: 66, scope: !2254)
!2261 = !DILocation(line: 991, column: 27, scope: !2254)
!2262 = !DILocation(line: 991, column: 11, scope: !2255)
!2263 = !DILocation(line: 992, column: 28, scope: !2254)
!2264 = !DILocation(line: 992, column: 33, scope: !2254)
!2265 = !DILocation(line: 992, column: 26, scope: !2254)
!2266 = !DILocation(line: 992, column: 9, scope: !2254)
!2267 = !DILocation(line: 993, column: 20, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2254, file: !63, line: 993, column: 16)
!2269 = !DILocation(line: 993, column: 18, scope: !2268)
!2270 = !DILocation(line: 993, column: 16, scope: !2254)
!2271 = !DILocation(line: 994, column: 9, scope: !2268)
!2272 = !DILocation(line: 996, column: 5, scope: !2255)
!2273 = !DILocation(line: 998, column: 7, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 998, column: 7)
!2275 = !DILocation(line: 998, column: 7, scope: !1978)
!2276 = !DILocalVariable(name: "change", scope: !2277, file: !63, line: 1000, type: !267)
!2277 = distinct !DILexicalBlock(scope: !2274, file: !63, line: 999, column: 5)
!2278 = !DILocation(line: 1000, column: 27, scope: !2277)
!2279 = !DILocation(line: 1000, column: 50, scope: !2277)
!2280 = !DILocation(line: 1000, column: 36, scope: !2277)
!2281 = !DILocation(line: 1001, column: 12, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2277, file: !63, line: 1001, column: 11)
!2283 = !DILocation(line: 1001, column: 11, scope: !2277)
!2284 = !DILocation(line: 1002, column: 9, scope: !2282)
!2285 = !DILocation(line: 1003, column: 40, scope: !2277)
!2286 = !DILocation(line: 1003, column: 14, scope: !2277)
!2287 = !DILocation(line: 1003, column: 12, scope: !2277)
!2288 = !DILocation(line: 1004, column: 43, scope: !2277)
!2289 = !DILocation(line: 1004, column: 18, scope: !2277)
!2290 = !DILocation(line: 1004, column: 16, scope: !2277)
!2291 = !DILocation(line: 1005, column: 13, scope: !2277)
!2292 = !DILocation(line: 1005, column: 7, scope: !2277)
!2293 = !DILocation(line: 1006, column: 5, scope: !2277)
!2294 = !DILocation(line: 1008, column: 7, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 1008, column: 7)
!2296 = !DILocation(line: 1008, column: 31, scope: !2295)
!2297 = !DILocation(line: 1008, column: 35, scope: !2295)
!2298 = !DILocation(line: 1008, column: 7, scope: !1978)
!2299 = !DILocation(line: 1009, column: 18, scope: !2295)
!2300 = !DILocation(line: 1009, column: 5, scope: !2295)
!2301 = !DILocation(line: 1012, column: 7, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 1012, column: 7)
!2303 = !DILocation(line: 1012, column: 27, scope: !2302)
!2304 = !DILocation(line: 1012, column: 32, scope: !2302)
!2305 = !DILocation(line: 1012, column: 7, scope: !1978)
!2306 = !DILocation(line: 1014, column: 20, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2302, file: !63, line: 1013, column: 5)
!2308 = !DILocation(line: 1014, column: 7, scope: !2307)
!2309 = !DILocation(line: 1016, column: 7, scope: !2307)
!2310 = !DILocation(line: 1019, column: 7, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 1019, column: 7)
!2312 = !DILocation(line: 1019, column: 27, scope: !2311)
!2313 = !DILocation(line: 1019, column: 30, scope: !2311)
!2314 = !DILocation(line: 1019, column: 7, scope: !1978)
!2315 = !DILocation(line: 1021, column: 20, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2311, file: !63, line: 1020, column: 5)
!2317 = !DILocation(line: 1021, column: 7, scope: !2316)
!2318 = !DILocation(line: 1023, column: 7, scope: !2316)
!2319 = !DILocation(line: 1026, column: 7, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 1026, column: 7)
!2321 = !DILocation(line: 1026, column: 27, scope: !2320)
!2322 = !DILocation(line: 1026, column: 42, scope: !2320)
!2323 = !DILocation(line: 1026, column: 30, scope: !2320)
!2324 = !DILocation(line: 1026, column: 7, scope: !1978)
!2325 = !DILocation(line: 1027, column: 18, scope: !2320)
!2326 = !DILocation(line: 1027, column: 5, scope: !2320)
!2327 = !DILocation(line: 1030, column: 3, scope: !1978)
!2328 = !DILocation(line: 1032, column: 7, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !1978, file: !63, line: 1032, column: 7)
!2330 = !DILocation(line: 1032, column: 7, scope: !1978)
!2331 = !DILocation(line: 1033, column: 41, scope: !2329)
!2332 = !DILocation(line: 1033, column: 50, scope: !2329)
!2333 = !DILocation(line: 1033, column: 69, scope: !2329)
!2334 = !DILocation(line: 1033, column: 19, scope: !2329)
!2335 = !DILocation(line: 1033, column: 17, scope: !2329)
!2336 = !DILocation(line: 1033, column: 5, scope: !2329)
!2337 = !DILocation(line: 1038, column: 7, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2329, file: !63, line: 1035, column: 5)
!2339 = !DILocation(line: 1040, column: 12, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2338, file: !63, line: 1040, column: 11)
!2341 = !DILocation(line: 1040, column: 11, scope: !2338)
!2342 = !DILocation(line: 1042, column: 18, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !63, line: 1042, column: 15)
!2344 = distinct !DILexicalBlock(scope: !2340, file: !63, line: 1041, column: 9)
!2345 = !DILocation(line: 1042, column: 15, scope: !2344)
!2346 = !DILocation(line: 1043, column: 50, scope: !2343)
!2347 = !DILocation(line: 1043, column: 59, scope: !2343)
!2348 = !DILocation(line: 1043, column: 20, scope: !2343)
!2349 = !DILocation(line: 1044, column: 42, scope: !2343)
!2350 = !DILocation(line: 1044, column: 51, scope: !2343)
!2351 = !DILocation(line: 1044, column: 20, scope: !2343)
!2352 = !DILocation(line: 1045, column: 25, scope: !2343)
!2353 = !DILocation(line: 1045, column: 13, scope: !2343)
!2354 = !DILocation(line: 1046, column: 9, scope: !2344)
!2355 = !DILocalVariable(name: "i", scope: !2356, file: !63, line: 1049, type: !5)
!2356 = distinct !DILexicalBlock(scope: !2340, file: !63, line: 1048, column: 9)
!2357 = !DILocation(line: 1049, column: 15, scope: !2356)
!2358 = !DILocation(line: 1050, column: 11, scope: !2356)
!2359 = !DILocation(line: 1051, column: 18, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2356, file: !63, line: 1051, column: 11)
!2361 = !DILocation(line: 1051, column: 16, scope: !2360)
!2362 = !DILocation(line: 1051, column: 23, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2360, file: !63, line: 1051, column: 11)
!2364 = !DILocation(line: 1051, column: 27, scope: !2363)
!2365 = !DILocation(line: 1051, column: 25, scope: !2363)
!2366 = !DILocation(line: 1051, column: 11, scope: !2360)
!2367 = !DILocation(line: 1052, column: 40, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2363, file: !63, line: 1052, column: 17)
!2369 = !DILocation(line: 1052, column: 45, scope: !2368)
!2370 = !DILocation(line: 1052, column: 49, scope: !2368)
!2371 = !DILocation(line: 1053, column: 40, scope: !2368)
!2372 = !DILocation(line: 1053, column: 42, scope: !2368)
!2373 = !DILocation(line: 1053, column: 47, scope: !2368)
!2374 = !DILocation(line: 1053, column: 50, scope: !2368)
!2375 = !DILocation(line: 0, scope: !2368)
!2376 = !DILocation(line: 1052, column: 19, scope: !2368)
!2377 = !DILocation(line: 1052, column: 17, scope: !2363)
!2378 = !DILocation(line: 1054, column: 27, scope: !2368)
!2379 = !DILocation(line: 1054, column: 15, scope: !2368)
!2380 = !DILocation(line: 1053, column: 67, scope: !2368)
!2381 = !DILocation(line: 1051, column: 37, scope: !2363)
!2382 = !DILocation(line: 1051, column: 11, scope: !2363)
!2383 = distinct !{!2383, !2366, !2384}
!2384 = !DILocation(line: 1054, column: 29, scope: !2360)
!2385 = !DILocation(line: 1058, column: 10, scope: !1978)
!2386 = !DILocation(line: 1058, column: 3, scope: !1978)
!2387 = distinct !DISubprogram(name: "cp_option_init", scope: !63, file: !63, line: 263, type: !2388, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !128}
!2390 = !DILocalVariable(name: "x", arg: 1, scope: !2387, file: !63, line: 263, type: !128)
!2391 = !DILocation(line: 263, column: 36, scope: !2387)
!2392 = !DILocation(line: 265, column: 23, scope: !2387)
!2393 = !DILocation(line: 265, column: 3, scope: !2387)
!2394 = !DILocation(line: 266, column: 3, scope: !2387)
!2395 = !DILocation(line: 266, column: 6, scope: !2387)
!2396 = !DILocation(line: 266, column: 22, scope: !2387)
!2397 = !DILocation(line: 267, column: 3, scope: !2387)
!2398 = !DILocation(line: 267, column: 6, scope: !2387)
!2399 = !DILocation(line: 267, column: 19, scope: !2387)
!2400 = !DILocation(line: 268, column: 3, scope: !2387)
!2401 = !DILocation(line: 268, column: 6, scope: !2387)
!2402 = !DILocation(line: 268, column: 18, scope: !2387)
!2403 = !DILocation(line: 269, column: 3, scope: !2387)
!2404 = !DILocation(line: 269, column: 6, scope: !2387)
!2405 = !DILocation(line: 269, column: 33, scope: !2387)
!2406 = !DILocation(line: 270, column: 3, scope: !2387)
!2407 = !DILocation(line: 270, column: 6, scope: !2387)
!2408 = !DILocation(line: 270, column: 36, scope: !2387)
!2409 = !DILocation(line: 271, column: 3, scope: !2387)
!2410 = !DILocation(line: 271, column: 6, scope: !2387)
!2411 = !DILocation(line: 271, column: 16, scope: !2387)
!2412 = !DILocation(line: 272, column: 3, scope: !2387)
!2413 = !DILocation(line: 272, column: 6, scope: !2387)
!2414 = !DILocation(line: 272, column: 18, scope: !2387)
!2415 = !DILocation(line: 273, column: 3, scope: !2387)
!2416 = !DILocation(line: 273, column: 6, scope: !2387)
!2417 = !DILocation(line: 273, column: 16, scope: !2387)
!2418 = !DILocation(line: 274, column: 3, scope: !2387)
!2419 = !DILocation(line: 274, column: 6, scope: !2387)
!2420 = !DILocation(line: 274, column: 19, scope: !2387)
!2421 = !DILocation(line: 275, column: 3, scope: !2387)
!2422 = !DILocation(line: 275, column: 6, scope: !2387)
!2423 = !DILocation(line: 275, column: 22, scope: !2387)
!2424 = !DILocation(line: 276, column: 3, scope: !2387)
!2425 = !DILocation(line: 276, column: 6, scope: !2387)
!2426 = !DILocation(line: 276, column: 25, scope: !2387)
!2427 = !DILocation(line: 277, column: 3, scope: !2387)
!2428 = !DILocation(line: 277, column: 6, scope: !2387)
!2429 = !DILocation(line: 277, column: 21, scope: !2387)
!2430 = !DILocation(line: 278, column: 3, scope: !2387)
!2431 = !DILocation(line: 278, column: 6, scope: !2387)
!2432 = !DILocation(line: 278, column: 20, scope: !2387)
!2433 = !DILocation(line: 279, column: 3, scope: !2387)
!2434 = !DILocation(line: 279, column: 6, scope: !2387)
!2435 = !DILocation(line: 279, column: 26, scope: !2387)
!2436 = !DILocation(line: 280, column: 3, scope: !2387)
!2437 = !DILocation(line: 280, column: 6, scope: !2387)
!2438 = !DILocation(line: 280, column: 32, scope: !2387)
!2439 = !DILocation(line: 281, column: 3, scope: !2387)
!2440 = !DILocation(line: 281, column: 6, scope: !2387)
!2441 = !DILocation(line: 281, column: 24, scope: !2387)
!2442 = !DILocation(line: 282, column: 3, scope: !2387)
!2443 = !DILocation(line: 282, column: 6, scope: !2387)
!2444 = !DILocation(line: 282, column: 25, scope: !2387)
!2445 = !DILocation(line: 283, column: 3, scope: !2387)
!2446 = !DILocation(line: 283, column: 6, scope: !2387)
!2447 = !DILocation(line: 283, column: 23, scope: !2387)
!2448 = !DILocation(line: 284, column: 3, scope: !2387)
!2449 = !DILocation(line: 284, column: 6, scope: !2387)
!2450 = !DILocation(line: 284, column: 29, scope: !2387)
!2451 = !DILocation(line: 285, column: 3, scope: !2387)
!2452 = !DILocation(line: 285, column: 6, scope: !2387)
!2453 = !DILocation(line: 285, column: 16, scope: !2387)
!2454 = !DILocation(line: 286, column: 3, scope: !2387)
!2455 = !DILocation(line: 286, column: 6, scope: !2387)
!2456 = !DILocation(line: 286, column: 18, scope: !2387)
!2457 = !DILocation(line: 287, column: 3, scope: !2387)
!2458 = !DILocation(line: 287, column: 6, scope: !2387)
!2459 = !DILocation(line: 287, column: 20, scope: !2387)
!2460 = !DILocation(line: 288, column: 3, scope: !2387)
!2461 = !DILocation(line: 288, column: 6, scope: !2387)
!2462 = !DILocation(line: 288, column: 18, scope: !2387)
!2463 = !DILocation(line: 293, column: 3, scope: !2387)
!2464 = !DILocation(line: 293, column: 6, scope: !2387)
!2465 = !DILocation(line: 293, column: 15, scope: !2387)
!2466 = !DILocation(line: 294, column: 3, scope: !2387)
!2467 = !DILocation(line: 294, column: 6, scope: !2387)
!2468 = !DILocation(line: 294, column: 11, scope: !2387)
!2469 = !DILocation(line: 295, column: 3, scope: !2387)
!2470 = !DILocation(line: 295, column: 6, scope: !2387)
!2471 = !DILocation(line: 295, column: 16, scope: !2387)
!2472 = !DILocation(line: 297, column: 3, scope: !2387)
!2473 = !DILocation(line: 297, column: 6, scope: !2387)
!2474 = !DILocation(line: 297, column: 33, scope: !2387)
!2475 = !DILocation(line: 298, column: 3, scope: !2387)
!2476 = !DILocation(line: 298, column: 6, scope: !2387)
!2477 = !DILocation(line: 298, column: 13, scope: !2387)
!2478 = !DILocation(line: 299, column: 3, scope: !2387)
!2479 = !DILocation(line: 299, column: 6, scope: !2387)
!2480 = !DILocation(line: 299, column: 31, scope: !2387)
!2481 = !DILocation(line: 300, column: 3, scope: !2387)
!2482 = !DILocation(line: 300, column: 6, scope: !2387)
!2483 = !DILocation(line: 300, column: 32, scope: !2387)
!2484 = !DILocation(line: 301, column: 3, scope: !2387)
!2485 = !DILocation(line: 301, column: 6, scope: !2387)
!2486 = !DILocation(line: 301, column: 27, scope: !2387)
!2487 = !DILocation(line: 302, column: 3, scope: !2387)
!2488 = !DILocation(line: 302, column: 6, scope: !2387)
!2489 = !DILocation(line: 302, column: 21, scope: !2387)
!2490 = !DILocation(line: 303, column: 3, scope: !2387)
!2491 = !DILocation(line: 303, column: 6, scope: !2387)
!2492 = !DILocation(line: 303, column: 14, scope: !2387)
!2493 = !DILocation(line: 304, column: 3, scope: !2387)
!2494 = !DILocation(line: 304, column: 6, scope: !2387)
!2495 = !DILocation(line: 304, column: 16, scope: !2387)
!2496 = !DILocation(line: 305, column: 3, scope: !2387)
!2497 = !DILocation(line: 305, column: 6, scope: !2387)
!2498 = !DILocation(line: 305, column: 15, scope: !2387)
!2499 = !DILocation(line: 306, column: 1, scope: !2387)
!2500 = distinct !DISubprogram(name: "se_const", scope: !291, file: !291, line: 755, type: !2501, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!7, !180}
!2503 = !DILocalVariable(name: "sctx", arg: 1, scope: !2500, file: !291, line: 755, type: !180)
!2504 = !DILocation(line: 755, column: 45, scope: !2500)
!2505 = !DILocation(line: 755, column: 69, scope: !2500)
!2506 = !DILocation(line: 755, column: 53, scope: !2500)
!2507 = distinct !DISubprogram(name: "target_directory_operand", scope: !63, file: !63, line: 398, type: !359, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2508 = !DILocalVariable(name: "file", arg: 1, scope: !2507, file: !63, line: 398, type: !180)
!2509 = !DILocation(line: 398, column: 39, scope: !2507)
!2510 = !DILocalVariable(name: "b", scope: !2507, file: !63, line: 400, type: !180)
!2511 = !DILocation(line: 400, column: 15, scope: !2507)
!2512 = !DILocation(line: 400, column: 35, scope: !2507)
!2513 = !DILocation(line: 400, column: 19, scope: !2507)
!2514 = !DILocalVariable(name: "blen", scope: !2507, file: !63, line: 401, type: !52)
!2515 = !DILocation(line: 401, column: 10, scope: !2507)
!2516 = !DILocation(line: 401, column: 25, scope: !2507)
!2517 = !DILocation(line: 401, column: 17, scope: !2507)
!2518 = !DILocalVariable(name: "looks_like_a_dir", scope: !2507, file: !63, line: 402, type: !139)
!2519 = !DILocation(line: 402, column: 8, scope: !2507)
!2520 = !DILocation(line: 402, column: 28, scope: !2507)
!2521 = !DILocation(line: 402, column: 33, scope: !2507)
!2522 = !DILocation(line: 402, column: 38, scope: !2507)
!2523 = !DILocation(line: 402, column: 41, scope: !2507)
!2524 = !DILocalVariable(name: "st", scope: !2507, file: !63, line: 403, type: !1981)
!2525 = !DILocation(line: 403, column: 15, scope: !2507)
!2526 = !DILocalVariable(name: "err", scope: !2507, file: !63, line: 404, type: !5)
!2527 = !DILocation(line: 404, column: 7, scope: !2507)
!2528 = !DILocation(line: 404, column: 20, scope: !2507)
!2529 = !DILocation(line: 404, column: 14, scope: !2507)
!2530 = !DILocation(line: 404, column: 31, scope: !2507)
!2531 = !DILocation(line: 404, column: 42, scope: !2507)
!2532 = !DILocalVariable(name: "is_a_dir", scope: !2507, file: !63, line: 405, type: !139)
!2533 = !DILocation(line: 405, column: 8, scope: !2507)
!2534 = !DILocation(line: 405, column: 20, scope: !2507)
!2535 = !DILocation(line: 405, column: 24, scope: !2507)
!2536 = !DILocation(line: 405, column: 27, scope: !2507)
!2537 = !DILocation(line: 0, scope: !2507)
!2538 = !DILocation(line: 406, column: 7, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2507, file: !63, line: 406, column: 7)
!2540 = !DILocation(line: 406, column: 11, scope: !2539)
!2541 = !DILocation(line: 406, column: 14, scope: !2539)
!2542 = !DILocation(line: 406, column: 18, scope: !2539)
!2543 = !DILocation(line: 406, column: 7, scope: !2507)
!2544 = !DILocation(line: 407, column: 5, scope: !2539)
!2545 = !DILocation(line: 408, column: 7, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2507, file: !63, line: 408, column: 7)
!2547 = !DILocation(line: 408, column: 18, scope: !2546)
!2548 = !DILocation(line: 408, column: 16, scope: !2546)
!2549 = !DILocation(line: 408, column: 7, scope: !2507)
!2550 = !DILocation(line: 409, column: 5, scope: !2546)
!2551 = !DILocation(line: 411, column: 10, scope: !2507)
!2552 = !DILocation(line: 411, column: 3, scope: !2507)
!2553 = distinct !DISubprogram(name: "extra_mode", scope: !63, file: !63, line: 166, type: !2554, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!139, !136}
!2556 = !DILocalVariable(name: "input", arg: 1, scope: !2553, file: !63, line: 166, type: !136)
!2557 = !DILocation(line: 166, column: 20, scope: !2553)
!2558 = !DILocalVariable(name: "mask", scope: !2553, file: !63, line: 168, type: !136)
!2559 = !DILocation(line: 168, column: 10, scope: !2553)
!2560 = !DILocation(line: 169, column: 14, scope: !2553)
!2561 = !DILocation(line: 169, column: 24, scope: !2553)
!2562 = !DILocation(line: 169, column: 22, scope: !2553)
!2563 = !DILocation(line: 169, column: 20, scope: !2553)
!2564 = !DILocation(line: 169, column: 11, scope: !2553)
!2565 = !DILocation(line: 169, column: 10, scope: !2553)
!2566 = !DILocation(line: 169, column: 3, scope: !2553)
!2567 = distinct !DISubprogram(name: "get_ids", scope: !63, file: !63, line: 576, type: !694, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2568 = !DILocalVariable(name: "pw", scope: !2567, file: !63, line: 578, type: !320)
!2569 = !DILocation(line: 578, column: 18, scope: !2567)
!2570 = !DILocalVariable(name: "gr", scope: !2567, file: !63, line: 579, type: !331)
!2571 = !DILocation(line: 579, column: 17, scope: !2567)
!2572 = !DILocation(line: 581, column: 7, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2567, file: !63, line: 581, column: 7)
!2574 = !DILocation(line: 581, column: 7, scope: !2567)
!2575 = !DILocation(line: 583, column: 22, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2573, file: !63, line: 582, column: 5)
!2577 = !DILocation(line: 583, column: 12, scope: !2576)
!2578 = !DILocation(line: 583, column: 10, scope: !2576)
!2579 = !DILocation(line: 584, column: 11, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2576, file: !63, line: 584, column: 11)
!2581 = !DILocation(line: 584, column: 14, scope: !2580)
!2582 = !DILocation(line: 584, column: 11, scope: !2576)
!2583 = !DILocalVariable(name: "tmp", scope: !2584, file: !63, line: 586, type: !54)
!2584 = distinct !DILexicalBlock(scope: !2580, file: !63, line: 585, column: 9)
!2585 = !DILocation(line: 586, column: 29, scope: !2584)
!2586 = !DILocation(line: 587, column: 25, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2584, file: !63, line: 587, column: 15)
!2588 = !DILocation(line: 587, column: 15, scope: !2587)
!2589 = !DILocation(line: 587, column: 58, scope: !2587)
!2590 = !DILocation(line: 588, column: 15, scope: !2587)
!2591 = !DILocation(line: 588, column: 30, scope: !2587)
!2592 = !DILocation(line: 588, column: 28, scope: !2587)
!2593 = !DILocation(line: 587, column: 15, scope: !2584)
!2594 = !DILocation(line: 589, column: 13, scope: !2587)
!2595 = !DILocation(line: 591, column: 22, scope: !2584)
!2596 = !DILocation(line: 591, column: 20, scope: !2584)
!2597 = !DILocation(line: 592, column: 9, scope: !2584)
!2598 = !DILocation(line: 594, column: 20, scope: !2580)
!2599 = !DILocation(line: 594, column: 24, scope: !2580)
!2600 = !DILocation(line: 594, column: 18, scope: !2580)
!2601 = !DILocation(line: 595, column: 7, scope: !2576)
!2602 = !DILocation(line: 596, column: 5, scope: !2576)
!2603 = !DILocation(line: 598, column: 14, scope: !2573)
!2604 = !DILocation(line: 600, column: 7, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2567, file: !63, line: 600, column: 7)
!2606 = !DILocation(line: 600, column: 7, scope: !2567)
!2607 = !DILocation(line: 602, column: 22, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2605, file: !63, line: 601, column: 5)
!2609 = !DILocation(line: 602, column: 12, scope: !2608)
!2610 = !DILocation(line: 602, column: 10, scope: !2608)
!2611 = !DILocation(line: 603, column: 11, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2608, file: !63, line: 603, column: 11)
!2613 = !DILocation(line: 603, column: 14, scope: !2612)
!2614 = !DILocation(line: 603, column: 11, scope: !2608)
!2615 = !DILocalVariable(name: "tmp", scope: !2616, file: !63, line: 605, type: !54)
!2616 = distinct !DILexicalBlock(scope: !2612, file: !63, line: 604, column: 9)
!2617 = !DILocation(line: 605, column: 29, scope: !2616)
!2618 = !DILocation(line: 606, column: 25, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2616, file: !63, line: 606, column: 15)
!2620 = !DILocation(line: 606, column: 15, scope: !2619)
!2621 = !DILocation(line: 606, column: 58, scope: !2619)
!2622 = !DILocation(line: 607, column: 15, scope: !2619)
!2623 = !DILocation(line: 607, column: 30, scope: !2619)
!2624 = !DILocation(line: 607, column: 28, scope: !2619)
!2625 = !DILocation(line: 606, column: 15, scope: !2616)
!2626 = !DILocation(line: 608, column: 13, scope: !2619)
!2627 = !DILocation(line: 610, column: 22, scope: !2616)
!2628 = !DILocation(line: 610, column: 20, scope: !2616)
!2629 = !DILocation(line: 611, column: 9, scope: !2616)
!2630 = !DILocation(line: 613, column: 20, scope: !2612)
!2631 = !DILocation(line: 613, column: 24, scope: !2612)
!2632 = !DILocation(line: 613, column: 18, scope: !2612)
!2633 = !DILocation(line: 614, column: 7, scope: !2608)
!2634 = !DILocation(line: 615, column: 5, scope: !2608)
!2635 = !DILocation(line: 617, column: 14, scope: !2605)
!2636 = !DILocation(line: 618, column: 1, scope: !2567)
!2637 = distinct !DISubprogram(name: "process_dir", scope: !63, file: !63, line: 443, type: !2638, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!5, !7, !2640, !47}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!2641 = !DILocalVariable(name: "dir", arg: 1, scope: !2637, file: !63, line: 443, type: !7)
!2642 = !DILocation(line: 443, column: 20, scope: !2637)
!2643 = !DILocalVariable(name: "wd", arg: 2, scope: !2637, file: !63, line: 443, type: !2640)
!2644 = !DILocation(line: 443, column: 40, scope: !2637)
!2645 = !DILocalVariable(name: "options", arg: 3, scope: !2637, file: !63, line: 443, type: !47)
!2646 = !DILocation(line: 443, column: 50, scope: !2637)
!2647 = !DILocalVariable(name: "x", scope: !2637, file: !63, line: 445, type: !339)
!2648 = !DILocation(line: 445, column: 28, scope: !2637)
!2649 = !DILocation(line: 445, column: 32, scope: !2637)
!2650 = !DILocalVariable(name: "ret", scope: !2637, file: !63, line: 447, type: !5)
!2651 = !DILocation(line: 447, column: 7, scope: !2637)
!2652 = !DILocation(line: 447, column: 32, scope: !2637)
!2653 = !DILocation(line: 447, column: 37, scope: !2637)
!2654 = !DILocation(line: 447, column: 56, scope: !2637)
!2655 = !DILocation(line: 448, column: 32, scope: !2637)
!2656 = !DILocation(line: 449, column: 32, scope: !2637)
!2657 = !DILocation(line: 449, column: 47, scope: !2637)
!2658 = !DILocation(line: 449, column: 57, scope: !2637)
!2659 = !DILocation(line: 447, column: 14, scope: !2637)
!2660 = !DILocation(line: 458, column: 7, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2637, file: !63, line: 458, column: 7)
!2662 = !DILocation(line: 458, column: 11, scope: !2661)
!2663 = !DILocation(line: 458, column: 27, scope: !2661)
!2664 = !DILocation(line: 458, column: 30, scope: !2661)
!2665 = !DILocation(line: 458, column: 33, scope: !2661)
!2666 = !DILocation(line: 458, column: 7, scope: !2637)
!2667 = !DILocation(line: 460, column: 41, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !63, line: 460, column: 11)
!2669 = distinct !DILexicalBlock(scope: !2661, file: !63, line: 459, column: 5)
!2670 = !DILocation(line: 460, column: 25, scope: !2668)
!2671 = !DILocation(line: 460, column: 13, scope: !2668)
!2672 = !DILocation(line: 461, column: 11, scope: !2668)
!2673 = !DILocation(line: 461, column: 35, scope: !2668)
!2674 = !DILocation(line: 461, column: 16, scope: !2668)
!2675 = !DILocation(line: 460, column: 11, scope: !2669)
!2676 = !DILocation(line: 462, column: 19, scope: !2668)
!2677 = !DILocation(line: 462, column: 26, scope: !2668)
!2678 = !DILocation(line: 463, column: 16, scope: !2668)
!2679 = !DILocation(line: 462, column: 9, scope: !2668)
!2680 = !DILocation(line: 464, column: 5, scope: !2669)
!2681 = !DILocation(line: 466, column: 10, scope: !2637)
!2682 = !DILocation(line: 466, column: 3, scope: !2637)
!2683 = distinct !DISubprogram(name: "install_file_in_file_parents", scope: !63, file: !63, line: 765, type: !2684, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!139, !180, !7, !339}
!2686 = !DILocalVariable(name: "from", arg: 1, scope: !2683, file: !63, line: 765, type: !180)
!2687 = !DILocation(line: 765, column: 43, scope: !2683)
!2688 = !DILocalVariable(name: "to", arg: 2, scope: !2683, file: !63, line: 765, type: !7)
!2689 = !DILocation(line: 765, column: 55, scope: !2683)
!2690 = !DILocalVariable(name: "x", arg: 3, scope: !2683, file: !63, line: 766, type: !339)
!2691 = !DILocation(line: 766, column: 56, scope: !2683)
!2692 = !DILocation(line: 768, column: 32, scope: !2683)
!2693 = !DILocation(line: 768, column: 38, scope: !2683)
!2694 = !DILocation(line: 768, column: 63, scope: !2683)
!2695 = !DILocation(line: 768, column: 11, scope: !2683)
!2696 = !DILocation(line: 769, column: 11, scope: !2683)
!2697 = !DILocation(line: 769, column: 36, scope: !2683)
!2698 = !DILocation(line: 769, column: 42, scope: !2683)
!2699 = !DILocation(line: 769, column: 46, scope: !2683)
!2700 = !DILocation(line: 769, column: 14, scope: !2683)
!2701 = !DILocation(line: 0, scope: !2683)
!2702 = !DILocation(line: 768, column: 3, scope: !2683)
!2703 = distinct !DISubprogram(name: "install_file_in_file", scope: !63, file: !63, line: 696, type: !2704, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!139, !180, !180, !339}
!2706 = !DILocalVariable(name: "from", arg: 1, scope: !2703, file: !63, line: 696, type: !180)
!2707 = !DILocation(line: 696, column: 35, scope: !2703)
!2708 = !DILocalVariable(name: "to", arg: 2, scope: !2703, file: !63, line: 696, type: !180)
!2709 = !DILocation(line: 696, column: 53, scope: !2703)
!2710 = !DILocalVariable(name: "x", arg: 3, scope: !2703, file: !63, line: 697, type: !339)
!2711 = !DILocation(line: 697, column: 48, scope: !2703)
!2712 = !DILocalVariable(name: "from_sb", scope: !2703, file: !63, line: 699, type: !1981)
!2713 = !DILocation(line: 699, column: 15, scope: !2703)
!2714 = !DILocation(line: 700, column: 7, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2703, file: !63, line: 700, column: 7)
!2716 = !DILocation(line: 700, column: 10, scope: !2715)
!2717 = !DILocation(line: 700, column: 30, scope: !2715)
!2718 = !DILocation(line: 700, column: 39, scope: !2715)
!2719 = !DILocation(line: 700, column: 33, scope: !2715)
!2720 = !DILocation(line: 700, column: 55, scope: !2715)
!2721 = !DILocation(line: 700, column: 7, scope: !2703)
!2722 = !DILocation(line: 702, column: 17, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2715, file: !63, line: 701, column: 5)
!2724 = !DILocation(line: 702, column: 24, scope: !2723)
!2725 = !DILocation(line: 702, column: 45, scope: !2723)
!2726 = !DILocation(line: 702, column: 7, scope: !2723)
!2727 = !DILocation(line: 703, column: 7, scope: !2723)
!2728 = !DILocation(line: 705, column: 20, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2703, file: !63, line: 705, column: 7)
!2730 = !DILocation(line: 705, column: 26, scope: !2729)
!2731 = !DILocation(line: 705, column: 30, scope: !2729)
!2732 = !DILocation(line: 705, column: 9, scope: !2729)
!2733 = !DILocation(line: 705, column: 7, scope: !2703)
!2734 = !DILocation(line: 706, column: 5, scope: !2729)
!2735 = !DILocation(line: 707, column: 7, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2703, file: !63, line: 707, column: 7)
!2737 = !DILocation(line: 707, column: 7, scope: !2703)
!2738 = !DILocation(line: 708, column: 18, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2736, file: !63, line: 708, column: 9)
!2740 = !DILocation(line: 708, column: 11, scope: !2739)
!2741 = !DILocation(line: 708, column: 9, scope: !2736)
!2742 = !DILocation(line: 710, column: 21, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2744, file: !63, line: 710, column: 13)
!2744 = distinct !DILexicalBlock(scope: !2739, file: !63, line: 709, column: 7)
!2745 = !DILocation(line: 710, column: 13, scope: !2743)
!2746 = !DILocation(line: 710, column: 25, scope: !2743)
!2747 = !DILocation(line: 710, column: 13, scope: !2744)
!2748 = !DILocation(line: 711, column: 11, scope: !2743)
!2749 = !DILocation(line: 712, column: 9, scope: !2744)
!2750 = !DILocation(line: 708, column: 20, scope: !2739)
!2751 = !DILocation(line: 714, column: 7, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2703, file: !63, line: 714, column: 7)
!2753 = !DILocation(line: 714, column: 10, scope: !2752)
!2754 = !DILocation(line: 714, column: 30, scope: !2752)
!2755 = !DILocation(line: 714, column: 34, scope: !2752)
!2756 = !DILocation(line: 714, column: 46, scope: !2752)
!2757 = !DILocation(line: 714, column: 51, scope: !2752)
!2758 = !DILocation(line: 715, column: 7, scope: !2752)
!2759 = !DILocation(line: 715, column: 41, scope: !2752)
!2760 = !DILocation(line: 715, column: 12, scope: !2752)
!2761 = !DILocation(line: 714, column: 7, scope: !2703)
!2762 = !DILocation(line: 716, column: 5, scope: !2752)
!2763 = !DILocation(line: 717, column: 29, scope: !2703)
!2764 = !DILocation(line: 717, column: 10, scope: !2703)
!2765 = !DILocation(line: 717, column: 3, scope: !2703)
!2766 = !DILocation(line: 718, column: 1, scope: !2703)
!2767 = distinct !DISubprogram(name: "install_file_in_dir", scope: !63, file: !63, line: 777, type: !2768, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!139, !180, !180, !339, !139}
!2770 = !DILocalVariable(name: "from", arg: 1, scope: !2767, file: !63, line: 777, type: !180)
!2771 = !DILocation(line: 777, column: 34, scope: !2767)
!2772 = !DILocalVariable(name: "to_dir", arg: 2, scope: !2767, file: !63, line: 777, type: !180)
!2773 = !DILocation(line: 777, column: 52, scope: !2767)
!2774 = !DILocalVariable(name: "x", arg: 3, scope: !2767, file: !63, line: 778, type: !339)
!2775 = !DILocation(line: 778, column: 47, scope: !2767)
!2776 = !DILocalVariable(name: "mkdir_and_install", arg: 4, scope: !2767, file: !63, line: 778, type: !139)
!2777 = !DILocation(line: 778, column: 55, scope: !2767)
!2778 = !DILocalVariable(name: "from_base", scope: !2767, file: !63, line: 780, type: !180)
!2779 = !DILocation(line: 780, column: 15, scope: !2767)
!2780 = !DILocation(line: 780, column: 43, scope: !2767)
!2781 = !DILocation(line: 780, column: 27, scope: !2767)
!2782 = !DILocalVariable(name: "to", scope: !2767, file: !63, line: 781, type: !7)
!2783 = !DILocation(line: 781, column: 9, scope: !2767)
!2784 = !DILocation(line: 781, column: 32, scope: !2767)
!2785 = !DILocation(line: 781, column: 40, scope: !2767)
!2786 = !DILocation(line: 781, column: 14, scope: !2767)
!2787 = !DILocalVariable(name: "ret", scope: !2767, file: !63, line: 782, type: !139)
!2788 = !DILocation(line: 782, column: 8, scope: !2767)
!2789 = !DILocation(line: 784, column: 7, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2767, file: !63, line: 784, column: 7)
!2791 = !DILocation(line: 784, column: 7, scope: !2767)
!2792 = !DILocation(line: 785, column: 32, scope: !2790)
!2793 = !DILocation(line: 785, column: 38, scope: !2790)
!2794 = !DILocation(line: 785, column: 63, scope: !2790)
!2795 = !DILocation(line: 785, column: 11, scope: !2790)
!2796 = !DILocation(line: 785, column: 9, scope: !2790)
!2797 = !DILocation(line: 785, column: 5, scope: !2790)
!2798 = !DILocation(line: 787, column: 9, scope: !2767)
!2799 = !DILocation(line: 787, column: 13, scope: !2767)
!2800 = !DILocation(line: 787, column: 38, scope: !2767)
!2801 = !DILocation(line: 787, column: 44, scope: !2767)
!2802 = !DILocation(line: 787, column: 48, scope: !2767)
!2803 = !DILocation(line: 787, column: 16, scope: !2767)
!2804 = !DILocation(line: 0, scope: !2767)
!2805 = !DILocation(line: 787, column: 7, scope: !2767)
!2806 = !DILocation(line: 788, column: 9, scope: !2767)
!2807 = !DILocation(line: 788, column: 3, scope: !2767)
!2808 = !DILocation(line: 789, column: 10, scope: !2767)
!2809 = !DILocation(line: 789, column: 3, scope: !2767)
!2810 = distinct !DISubprogram(name: "mkancesdirs_safe_wd", scope: !63, file: !63, line: 725, type: !2811, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!139, !180, !7, !128, !139}
!2813 = !DILocalVariable(name: "from", arg: 1, scope: !2810, file: !63, line: 725, type: !180)
!2814 = !DILocation(line: 725, column: 34, scope: !2810)
!2815 = !DILocalVariable(name: "to", arg: 2, scope: !2810, file: !63, line: 725, type: !7)
!2816 = !DILocation(line: 725, column: 46, scope: !2810)
!2817 = !DILocalVariable(name: "x", arg: 3, scope: !2810, file: !63, line: 725, type: !128)
!2818 = !DILocation(line: 725, column: 69, scope: !2810)
!2819 = !DILocalVariable(name: "save_always", arg: 4, scope: !2810, file: !63, line: 726, type: !139)
!2820 = !DILocation(line: 726, column: 27, scope: !2810)
!2821 = !DILocalVariable(name: "save_working_directory", scope: !2810, file: !63, line: 728, type: !139)
!2822 = !DILocation(line: 728, column: 8, scope: !2810)
!2823 = !DILocation(line: 729, column: 5, scope: !2810)
!2824 = !DILocation(line: 730, column: 5, scope: !2810)
!2825 = !DILocation(line: 730, column: 11, scope: !2810)
!2826 = !DILocation(line: 730, column: 40, scope: !2810)
!2827 = !DILocation(line: 730, column: 43, scope: !2810)
!2828 = !DILocation(line: 0, scope: !2810)
!2829 = !DILocation(line: 730, column: 8, scope: !2810)
!2830 = !DILocalVariable(name: "status", scope: !2810, file: !63, line: 731, type: !5)
!2831 = !DILocation(line: 731, column: 7, scope: !2810)
!2832 = !DILocalVariable(name: "wd", scope: !2810, file: !63, line: 733, type: !99)
!2833 = !DILocation(line: 733, column: 17, scope: !2810)
!2834 = !DILocation(line: 734, column: 3, scope: !2810)
!2835 = !DILocation(line: 735, column: 9, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2810, file: !63, line: 735, column: 7)
!2837 = !DILocation(line: 735, column: 7, scope: !2810)
!2838 = !DILocation(line: 736, column: 5, scope: !2836)
!2839 = !DILocation(line: 738, column: 20, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2810, file: !63, line: 738, column: 7)
!2841 = !DILocation(line: 738, column: 44, scope: !2840)
!2842 = !DILocation(line: 738, column: 7, scope: !2840)
!2843 = !DILocation(line: 738, column: 47, scope: !2840)
!2844 = !DILocation(line: 738, column: 7, scope: !2810)
!2845 = !DILocation(line: 740, column: 17, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2840, file: !63, line: 739, column: 5)
!2847 = !DILocation(line: 740, column: 24, scope: !2846)
!2848 = !DILocation(line: 740, column: 57, scope: !2846)
!2849 = !DILocation(line: 740, column: 7, scope: !2846)
!2850 = !DILocation(line: 741, column: 14, scope: !2846)
!2851 = !DILocation(line: 742, column: 5, scope: !2846)
!2852 = !DILocation(line: 744, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2810, file: !63, line: 744, column: 7)
!2854 = !DILocation(line: 744, column: 7, scope: !2810)
!2855 = !DILocalVariable(name: "restore_result", scope: !2856, file: !63, line: 746, type: !5)
!2856 = distinct !DILexicalBlock(scope: !2853, file: !63, line: 745, column: 5)
!2857 = !DILocation(line: 746, column: 11, scope: !2856)
!2858 = !DILocation(line: 746, column: 49, scope: !2856)
!2859 = !DILocation(line: 746, column: 28, scope: !2856)
!2860 = !DILocalVariable(name: "restore_errno", scope: !2856, file: !63, line: 747, type: !5)
!2861 = !DILocation(line: 747, column: 11, scope: !2856)
!2862 = !DILocation(line: 747, column: 27, scope: !2856)
!2863 = !DILocation(line: 748, column: 7, scope: !2856)
!2864 = !DILocation(line: 749, column: 26, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2856, file: !63, line: 749, column: 11)
!2866 = !DILocation(line: 749, column: 24, scope: !2865)
!2867 = !DILocation(line: 749, column: 11, scope: !2856)
!2868 = !DILocation(line: 750, column: 9, scope: !2865)
!2869 = !DILocation(line: 751, column: 11, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2856, file: !63, line: 751, column: 11)
!2871 = !DILocation(line: 751, column: 26, scope: !2870)
!2872 = !DILocation(line: 751, column: 30, scope: !2870)
!2873 = !DILocation(line: 751, column: 33, scope: !2870)
!2874 = !DILocation(line: 751, column: 40, scope: !2870)
!2875 = !DILocation(line: 751, column: 11, scope: !2856)
!2876 = !DILocation(line: 753, column: 21, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2870, file: !63, line: 752, column: 9)
!2878 = !DILocation(line: 753, column: 36, scope: !2877)
!2879 = !DILocation(line: 754, column: 18, scope: !2877)
!2880 = !DILocation(line: 753, column: 11, scope: !2877)
!2881 = !DILocation(line: 755, column: 11, scope: !2877)
!2882 = !DILocation(line: 757, column: 5, scope: !2856)
!2883 = !DILocation(line: 758, column: 10, scope: !2810)
!2884 = !DILocation(line: 758, column: 17, scope: !2810)
!2885 = !DILocation(line: 758, column: 3, scope: !2810)
!2886 = !DILocation(line: 759, column: 1, scope: !2810)
!2887 = distinct !DISubprogram(name: "make_ancestor", scope: !63, file: !63, line: 427, type: !2888, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!5, !180, !180, !47}
!2890 = !DILocalVariable(name: "dir", arg: 1, scope: !2887, file: !63, line: 427, type: !180)
!2891 = !DILocation(line: 427, column: 28, scope: !2887)
!2892 = !DILocalVariable(name: "component", arg: 2, scope: !2887, file: !63, line: 427, type: !180)
!2893 = !DILocation(line: 427, column: 45, scope: !2887)
!2894 = !DILocalVariable(name: "options", arg: 3, scope: !2887, file: !63, line: 427, type: !47)
!2895 = !DILocation(line: 427, column: 62, scope: !2887)
!2896 = !DILocalVariable(name: "x", scope: !2887, file: !63, line: 429, type: !339)
!2897 = !DILocation(line: 429, column: 28, scope: !2887)
!2898 = !DILocation(line: 429, column: 32, scope: !2887)
!2899 = !DILocation(line: 430, column: 7, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2887, file: !63, line: 430, column: 7)
!2901 = !DILocation(line: 430, column: 10, scope: !2900)
!2902 = !DILocation(line: 430, column: 31, scope: !2900)
!2903 = !DILocation(line: 430, column: 46, scope: !2900)
!2904 = !DILocation(line: 430, column: 34, scope: !2900)
!2905 = !DILocation(line: 430, column: 66, scope: !2900)
!2906 = !DILocation(line: 431, column: 7, scope: !2900)
!2907 = !DILocation(line: 431, column: 31, scope: !2900)
!2908 = !DILocation(line: 431, column: 12, scope: !2900)
!2909 = !DILocation(line: 430, column: 7, scope: !2887)
!2910 = !DILocation(line: 432, column: 15, scope: !2900)
!2911 = !DILocation(line: 432, column: 22, scope: !2900)
!2912 = !DILocation(line: 433, column: 12, scope: !2900)
!2913 = !DILocation(line: 432, column: 5, scope: !2900)
!2914 = !DILocalVariable(name: "r", scope: !2887, file: !63, line: 435, type: !5)
!2915 = !DILocation(line: 435, column: 7, scope: !2887)
!2916 = !DILocation(line: 435, column: 18, scope: !2887)
!2917 = !DILocation(line: 435, column: 11, scope: !2887)
!2918 = !DILocation(line: 436, column: 7, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2887, file: !63, line: 436, column: 7)
!2920 = !DILocation(line: 436, column: 9, scope: !2919)
!2921 = !DILocation(line: 436, column: 7, scope: !2887)
!2922 = !DILocation(line: 437, column: 21, scope: !2919)
!2923 = !DILocation(line: 437, column: 26, scope: !2919)
!2924 = !DILocation(line: 437, column: 5, scope: !2919)
!2925 = !DILocation(line: 438, column: 10, scope: !2887)
!2926 = !DILocation(line: 438, column: 3, scope: !2887)
!2927 = distinct !DISubprogram(name: "defaultcon", scope: !2928, file: !2928, line: 44, type: !2929, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2928 = !DIFile(filename: "src/selinux.h", directory: "/home/mohamad/clone/coreutils")
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!5, !180, !136}
!2931 = !DILocalVariable(name: "path", arg: 1, scope: !2927, file: !2928, line: 44, type: !180)
!2932 = !DILocation(line: 44, column: 25, scope: !2927)
!2933 = !DILocalVariable(name: "mode", arg: 2, scope: !2927, file: !2928, line: 44, type: !136)
!2934 = !DILocation(line: 44, column: 38, scope: !2927)
!2935 = !DILocation(line: 45, column: 3, scope: !2927)
!2936 = !DILocation(line: 45, column: 9, scope: !2927)
!2937 = !DILocation(line: 45, column: 20, scope: !2927)
!2938 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !2928, file: !2928, line: 25, type: !2939, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!139, !5}
!2941 = !DILocalVariable(name: "err", arg: 1, scope: !2938, file: !2928, line: 25, type: !5)
!2942 = !DILocation(line: 25, column: 24, scope: !2938)
!2943 = !DILocation(line: 27, column: 10, scope: !2938)
!2944 = !DILocation(line: 27, column: 14, scope: !2938)
!2945 = !DILocation(line: 27, column: 25, scope: !2938)
!2946 = !DILocation(line: 27, column: 28, scope: !2938)
!2947 = !DILocation(line: 27, column: 32, scope: !2938)
!2948 = !DILocation(line: 27, column: 3, scope: !2938)
!2949 = distinct !DISubprogram(name: "announce_mkdir", scope: !63, file: !63, line: 416, type: !2950, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !180, !47}
!2952 = !DILocalVariable(name: "dir", arg: 1, scope: !2949, file: !63, line: 416, type: !180)
!2953 = !DILocation(line: 416, column: 29, scope: !2949)
!2954 = !DILocalVariable(name: "options", arg: 2, scope: !2949, file: !63, line: 416, type: !47)
!2955 = !DILocation(line: 416, column: 40, scope: !2949)
!2956 = !DILocalVariable(name: "x", scope: !2949, file: !63, line: 418, type: !339)
!2957 = !DILocation(line: 418, column: 28, scope: !2949)
!2958 = !DILocation(line: 418, column: 32, scope: !2949)
!2959 = !DILocation(line: 419, column: 7, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2949, file: !63, line: 419, column: 7)
!2961 = !DILocation(line: 419, column: 10, scope: !2960)
!2962 = !DILocation(line: 419, column: 7, scope: !2949)
!2963 = !DILocation(line: 420, column: 19, scope: !2960)
!2964 = !DILocation(line: 420, column: 27, scope: !2960)
!2965 = !DILocation(line: 420, column: 55, scope: !2960)
!2966 = !DILocation(line: 420, column: 5, scope: !2960)
!2967 = !DILocation(line: 421, column: 1, scope: !2949)
!2968 = distinct !DISubprogram(name: "copy_file", scope: !63, file: !63, line: 473, type: !2704, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!2969 = !DILocalVariable(name: "from", arg: 1, scope: !2968, file: !63, line: 473, type: !180)
!2970 = !DILocation(line: 473, column: 24, scope: !2968)
!2971 = !DILocalVariable(name: "to", arg: 2, scope: !2968, file: !63, line: 473, type: !180)
!2972 = !DILocation(line: 473, column: 42, scope: !2968)
!2973 = !DILocalVariable(name: "x", arg: 3, scope: !2968, file: !63, line: 473, type: !339)
!2974 = !DILocation(line: 473, column: 71, scope: !2968)
!2975 = !DILocalVariable(name: "copy_into_self", scope: !2968, file: !63, line: 475, type: !139)
!2976 = !DILocation(line: 475, column: 8, scope: !2968)
!2977 = !DILocation(line: 477, column: 7, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2968, file: !63, line: 477, column: 7)
!2979 = !DILocation(line: 477, column: 27, scope: !2978)
!2980 = !DILocation(line: 477, column: 42, scope: !2978)
!2981 = !DILocation(line: 477, column: 48, scope: !2978)
!2982 = !DILocation(line: 477, column: 52, scope: !2978)
!2983 = !DILocation(line: 477, column: 31, scope: !2978)
!2984 = !DILocation(line: 477, column: 7, scope: !2968)
!2985 = !DILocation(line: 478, column: 5, scope: !2978)
!2986 = !DILocation(line: 486, column: 16, scope: !2968)
!2987 = !DILocation(line: 486, column: 22, scope: !2968)
!2988 = !DILocation(line: 486, column: 33, scope: !2968)
!2989 = !DILocation(line: 486, column: 10, scope: !2968)
!2990 = !DILocation(line: 486, column: 3, scope: !2968)
!2991 = !DILocation(line: 487, column: 1, scope: !2968)
!2992 = !DILocalVariable(name: "name", arg: 1, scope: !358, file: !63, line: 547, type: !180)
!2993 = !DILocation(line: 547, column: 20, scope: !358)
!2994 = !DILocalVariable(name: "status", scope: !358, file: !63, line: 549, type: !5)
!2995 = !DILocation(line: 549, column: 7, scope: !358)
!2996 = !DILocalVariable(name: "ok", scope: !358, file: !63, line: 550, type: !139)
!2997 = !DILocation(line: 550, column: 8, scope: !358)
!2998 = !DILocalVariable(name: "pid", scope: !358, file: !63, line: 551, type: !108)
!2999 = !DILocation(line: 551, column: 9, scope: !358)
!3000 = !DILocation(line: 551, column: 15, scope: !358)
!3001 = !DILocation(line: 553, column: 11, scope: !358)
!3002 = !DILocation(line: 553, column: 3, scope: !358)
!3003 = !DILocation(line: 556, column: 17, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !358, file: !63, line: 554, column: 5)
!3005 = !DILocation(line: 556, column: 24, scope: !3004)
!3006 = !DILocation(line: 556, column: 7, scope: !3004)
!3007 = !DILocation(line: 557, column: 7, scope: !3004)
!3008 = !DILocation(line: 559, column: 15, scope: !3004)
!3009 = !DILocation(line: 559, column: 30, scope: !3004)
!3010 = !DILocation(line: 559, column: 45, scope: !3004)
!3011 = !DILocation(line: 559, column: 7, scope: !3004)
!3012 = !DILocation(line: 560, column: 7, scope: !3004)
!3013 = !DILocation(line: 562, column: 20, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3004, file: !63, line: 562, column: 11)
!3015 = !DILocation(line: 562, column: 11, scope: !3014)
!3016 = !DILocation(line: 562, column: 37, scope: !3014)
!3017 = !DILocation(line: 562, column: 11, scope: !3004)
!3018 = !DILocation(line: 563, column: 19, scope: !3014)
!3019 = !DILocation(line: 563, column: 26, scope: !3014)
!3020 = !DILocation(line: 563, column: 9, scope: !3014)
!3021 = !DILocation(line: 564, column: 18, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3014, file: !63, line: 564, column: 16)
!3023 = !DILocation(line: 564, column: 37, scope: !3022)
!3024 = !DILocation(line: 564, column: 40, scope: !3022)
!3025 = !DILocation(line: 564, column: 16, scope: !3014)
!3026 = !DILocation(line: 565, column: 22, scope: !3022)
!3027 = !DILocation(line: 565, column: 9, scope: !3022)
!3028 = !DILocation(line: 567, column: 12, scope: !3022)
!3029 = !DILocation(line: 568, column: 7, scope: !3004)
!3030 = !DILocation(line: 570, column: 10, scope: !358)
!3031 = !DILocation(line: 570, column: 3, scope: !358)
!3032 = distinct !DISubprogram(name: "change_timestamps", scope: !63, file: !63, line: 526, type: !3033, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!139, !3035, !180}
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!3037 = !DILocalVariable(name: "src_sb", arg: 1, scope: !3032, file: !63, line: 526, type: !3035)
!3038 = !DILocation(line: 526, column: 39, scope: !3032)
!3039 = !DILocalVariable(name: "dest", arg: 2, scope: !3032, file: !63, line: 526, type: !180)
!3040 = !DILocation(line: 526, column: 59, scope: !3032)
!3041 = !DILocalVariable(name: "timespec", scope: !3032, file: !63, line: 528, type: !371)
!3042 = !DILocation(line: 528, column: 19, scope: !3032)
!3043 = !DILocation(line: 529, column: 3, scope: !3032)
!3044 = !DILocation(line: 529, column: 33, scope: !3032)
!3045 = !DILocation(line: 529, column: 17, scope: !3032)
!3046 = !DILocation(line: 530, column: 3, scope: !3032)
!3047 = !DILocation(line: 530, column: 33, scope: !3032)
!3048 = !DILocation(line: 530, column: 17, scope: !3032)
!3049 = !DILocation(line: 532, column: 16, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3032, file: !63, line: 532, column: 7)
!3051 = !DILocation(line: 532, column: 22, scope: !3050)
!3052 = !DILocation(line: 532, column: 7, scope: !3050)
!3053 = !DILocation(line: 532, column: 7, scope: !3032)
!3054 = !DILocation(line: 534, column: 17, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3050, file: !63, line: 533, column: 5)
!3056 = !DILocation(line: 534, column: 24, scope: !3055)
!3057 = !DILocation(line: 534, column: 59, scope: !3055)
!3058 = !DILocation(line: 534, column: 7, scope: !3055)
!3059 = !DILocation(line: 535, column: 7, scope: !3055)
!3060 = !DILocation(line: 537, column: 3, scope: !3032)
!3061 = !DILocation(line: 538, column: 1, scope: !3032)
!3062 = distinct !DISubprogram(name: "change_attributes", scope: !63, file: !63, line: 493, type: !359, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!3063 = !DILocalVariable(name: "name", arg: 1, scope: !3062, file: !63, line: 493, type: !180)
!3064 = !DILocation(line: 493, column: 32, scope: !3062)
!3065 = !DILocalVariable(name: "ok", scope: !3062, file: !63, line: 495, type: !139)
!3066 = !DILocation(line: 495, column: 8, scope: !3062)
!3067 = !DILocation(line: 508, column: 10, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3062, file: !63, line: 508, column: 7)
!3069 = !DILocation(line: 508, column: 19, scope: !3068)
!3070 = !DILocation(line: 508, column: 33, scope: !3068)
!3071 = !DILocation(line: 508, column: 36, scope: !3068)
!3072 = !DILocation(line: 508, column: 45, scope: !3068)
!3073 = !DILocation(line: 509, column: 7, scope: !3068)
!3074 = !DILocation(line: 509, column: 18, scope: !3068)
!3075 = !DILocation(line: 509, column: 24, scope: !3068)
!3076 = !DILocation(line: 509, column: 34, scope: !3068)
!3077 = !DILocation(line: 509, column: 10, scope: !3068)
!3078 = !DILocation(line: 509, column: 44, scope: !3068)
!3079 = !DILocation(line: 508, column: 7, scope: !3062)
!3080 = !DILocation(line: 510, column: 15, scope: !3068)
!3081 = !DILocation(line: 510, column: 22, scope: !3068)
!3082 = !DILocation(line: 510, column: 58, scope: !3068)
!3083 = !DILocation(line: 510, column: 5, scope: !3068)
!3084 = !DILocation(line: 511, column: 19, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3068, file: !63, line: 511, column: 12)
!3086 = !DILocation(line: 511, column: 25, scope: !3085)
!3087 = !DILocation(line: 511, column: 12, scope: !3085)
!3088 = !DILocation(line: 511, column: 31, scope: !3085)
!3089 = !DILocation(line: 511, column: 12, scope: !3068)
!3090 = !DILocation(line: 512, column: 15, scope: !3085)
!3091 = !DILocation(line: 512, column: 22, scope: !3085)
!3092 = !DILocation(line: 512, column: 60, scope: !3085)
!3093 = !DILocation(line: 512, column: 5, scope: !3085)
!3094 = !DILocation(line: 514, column: 8, scope: !3085)
!3095 = !DILocation(line: 516, column: 7, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3062, file: !63, line: 516, column: 7)
!3097 = !DILocation(line: 516, column: 7, scope: !3062)
!3098 = !DILocation(line: 517, column: 24, scope: !3096)
!3099 = !DILocation(line: 517, column: 5, scope: !3096)
!3100 = !DILocation(line: 519, column: 10, scope: !3062)
!3101 = !DILocation(line: 519, column: 3, scope: !3062)
!3102 = !DILocalVariable(name: "file", arg: 1, scope: !430, file: !63, line: 314, type: !180)
!3103 = !DILocation(line: 314, column: 32, scope: !430)
!3104 = !DILocalVariable(name: "st", scope: !430, file: !63, line: 316, type: !1981)
!3105 = !DILocation(line: 316, column: 15, scope: !430)
!3106 = !DILocalVariable(name: "scontext", scope: !430, file: !63, line: 317, type: !7)
!3107 = !DILocation(line: 317, column: 9, scope: !430)
!3108 = !DILocation(line: 320, column: 7, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !430, file: !63, line: 320, column: 7)
!3110 = !DILocation(line: 320, column: 23, scope: !3109)
!3111 = !DILocation(line: 320, column: 7, scope: !430)
!3112 = !DILocation(line: 323, column: 7, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3109, file: !63, line: 321, column: 5)
!3114 = !DILocation(line: 325, column: 14, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !430, file: !63, line: 325, column: 7)
!3116 = !DILocation(line: 325, column: 7, scope: !3115)
!3117 = !DILocation(line: 325, column: 25, scope: !3115)
!3118 = !DILocation(line: 325, column: 7, scope: !430)
!3119 = !DILocation(line: 326, column: 5, scope: !3115)
!3120 = !DILocation(line: 328, column: 7, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !430, file: !63, line: 328, column: 7)
!3122 = !DILocation(line: 328, column: 18, scope: !3121)
!3123 = !DILocation(line: 328, column: 21, scope: !3121)
!3124 = !DILocation(line: 328, column: 7, scope: !430)
!3125 = !DILocalVariable(name: "p0", scope: !3126, file: !63, line: 337, type: !180)
!3126 = distinct !DILexicalBlock(scope: !3121, file: !63, line: 329, column: 5)
!3127 = !DILocation(line: 337, column: 19, scope: !3126)
!3128 = !DILocalVariable(name: "p", scope: !3126, file: !63, line: 338, type: !180)
!3129 = !DILocation(line: 338, column: 19, scope: !3126)
!3130 = !DILocation(line: 338, column: 23, scope: !3126)
!3131 = !DILocation(line: 338, column: 28, scope: !3126)
!3132 = !DILocation(line: 339, column: 7, scope: !3126)
!3133 = !DILocation(line: 339, column: 14, scope: !3126)
!3134 = !DILocation(line: 340, column: 9, scope: !3126)
!3135 = distinct !{!3135, !3132, !3136}
!3136 = !DILocation(line: 340, column: 11, scope: !3126)
!3137 = !DILocation(line: 343, column: 12, scope: !3126)
!3138 = !DILocation(line: 343, column: 14, scope: !3126)
!3139 = !DILocation(line: 343, column: 10, scope: !3126)
!3140 = !DILocation(line: 345, column: 12, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3126, file: !63, line: 345, column: 11)
!3142 = !DILocation(line: 345, column: 11, scope: !3141)
!3143 = !DILocation(line: 345, column: 11, scope: !3126)
!3144 = !DILocalVariable(name: "prefix", scope: !3145, file: !63, line: 347, type: !7)
!3145 = distinct !DILexicalBlock(scope: !3141, file: !63, line: 346, column: 9)
!3146 = !DILocation(line: 347, column: 17, scope: !3145)
!3147 = !DILocation(line: 348, column: 11, scope: !3145)
!3148 = !DILocation(line: 350, column: 15, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3145, file: !63, line: 349, column: 13)
!3150 = !DILocation(line: 351, column: 13, scope: !3149)
!3151 = !DILocation(line: 352, column: 19, scope: !3145)
!3152 = !DILocation(line: 352, column: 18, scope: !3145)
!3153 = !DILocation(line: 352, column: 21, scope: !3145)
!3154 = !DILocation(line: 352, column: 25, scope: !3145)
!3155 = !DILocation(line: 352, column: 24, scope: !3145)
!3156 = !DILocation(line: 0, scope: !3145)
!3157 = distinct !{!3157, !3147, !3158}
!3158 = !DILocation(line: 352, column: 37, scope: !3145)
!3159 = !DILocation(line: 354, column: 28, scope: !3145)
!3160 = !DILocation(line: 354, column: 32, scope: !3145)
!3161 = !DILocation(line: 354, column: 30, scope: !3145)
!3162 = !DILocation(line: 354, column: 35, scope: !3145)
!3163 = !DILocation(line: 354, column: 20, scope: !3145)
!3164 = !DILocation(line: 354, column: 18, scope: !3145)
!3165 = !DILocation(line: 355, column: 15, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3145, file: !63, line: 355, column: 15)
!3167 = !DILocation(line: 355, column: 15, scope: !3145)
!3168 = !DILocation(line: 357, column: 32, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !63, line: 356, column: 13)
!3170 = !DILocation(line: 357, column: 40, scope: !3169)
!3171 = !DILocation(line: 357, column: 44, scope: !3169)
!3172 = !DILocation(line: 357, column: 48, scope: !3169)
!3173 = !DILocation(line: 357, column: 46, scope: !3169)
!3174 = !DILocation(line: 357, column: 23, scope: !3169)
!3175 = !DILocation(line: 357, column: 15, scope: !3169)
!3176 = !DILocation(line: 359, column: 21, scope: !3169)
!3177 = !DILocation(line: 359, column: 15, scope: !3169)
!3178 = !DILocation(line: 360, column: 13, scope: !3169)
!3179 = !DILocation(line: 361, column: 9, scope: !3145)
!3180 = !DILocation(line: 362, column: 5, scope: !3126)
!3181 = !DILocation(line: 363, column: 14, scope: !430)
!3182 = !DILocation(line: 368, column: 22, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !430, file: !63, line: 368, column: 7)
!3184 = !DILocation(line: 368, column: 31, scope: !3183)
!3185 = !DILocation(line: 368, column: 8, scope: !3183)
!3186 = !DILocation(line: 368, column: 51, scope: !3183)
!3187 = !DILocation(line: 369, column: 7, scope: !3183)
!3188 = !DILocation(line: 369, column: 10, scope: !3183)
!3189 = !DILocation(line: 368, column: 7, scope: !430)
!3190 = !DILocation(line: 371, column: 11, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3192, file: !63, line: 371, column: 11)
!3192 = distinct !DILexicalBlock(scope: !3183, file: !63, line: 370, column: 5)
!3193 = !DILocation(line: 371, column: 20, scope: !3191)
!3194 = !DILocation(line: 371, column: 11, scope: !3192)
!3195 = !DILocation(line: 372, column: 18, scope: !3191)
!3196 = !DILocation(line: 372, column: 9, scope: !3191)
!3197 = !DILocation(line: 373, column: 7, scope: !3192)
!3198 = !DILocation(line: 376, column: 20, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !430, file: !63, line: 376, column: 7)
!3200 = !DILocation(line: 376, column: 26, scope: !3199)
!3201 = !DILocation(line: 376, column: 7, scope: !3199)
!3202 = !DILocation(line: 376, column: 36, scope: !3199)
!3203 = !DILocation(line: 376, column: 40, scope: !3199)
!3204 = !DILocation(line: 376, column: 43, scope: !3199)
!3205 = !DILocation(line: 376, column: 49, scope: !3199)
!3206 = !DILocation(line: 376, column: 7, scope: !430)
!3207 = !DILocation(line: 377, column: 15, scope: !3199)
!3208 = !DILocation(line: 378, column: 12, scope: !3199)
!3209 = !DILocation(line: 379, column: 12, scope: !3199)
!3210 = !DILocation(line: 379, column: 44, scope: !3199)
!3211 = !DILocation(line: 379, column: 32, scope: !3199)
!3212 = !DILocation(line: 377, column: 5, scope: !3199)
!3213 = !DILocation(line: 381, column: 12, scope: !430)
!3214 = !DILocation(line: 381, column: 3, scope: !430)
!3215 = !DILocation(line: 382, column: 3, scope: !430)
!3216 = !DILocation(line: 383, column: 1, scope: !430)
!3217 = distinct !DISubprogram(name: "need_copy", scope: !63, file: !63, line: 174, type: !2704, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!3218 = !DILocalVariable(name: "src_name", arg: 1, scope: !3217, file: !63, line: 174, type: !180)
!3219 = !DILocation(line: 174, column: 24, scope: !3217)
!3220 = !DILocalVariable(name: "dest_name", arg: 2, scope: !3217, file: !63, line: 174, type: !180)
!3221 = !DILocation(line: 174, column: 46, scope: !3217)
!3222 = !DILocalVariable(name: "x", arg: 3, scope: !3217, file: !63, line: 175, type: !339)
!3223 = !DILocation(line: 175, column: 37, scope: !3217)
!3224 = !DILocalVariable(name: "src_sb", scope: !3217, file: !63, line: 177, type: !1981)
!3225 = !DILocation(line: 177, column: 15, scope: !3217)
!3226 = !DILocalVariable(name: "dest_sb", scope: !3217, file: !63, line: 177, type: !1981)
!3227 = !DILocation(line: 177, column: 23, scope: !3217)
!3228 = !DILocalVariable(name: "src_fd", scope: !3217, file: !63, line: 178, type: !5)
!3229 = !DILocation(line: 178, column: 7, scope: !3217)
!3230 = !DILocalVariable(name: "dest_fd", scope: !3217, file: !63, line: 178, type: !5)
!3231 = !DILocation(line: 178, column: 15, scope: !3217)
!3232 = !DILocalVariable(name: "content_match", scope: !3217, file: !63, line: 179, type: !139)
!3233 = !DILocation(line: 179, column: 8, scope: !3217)
!3234 = !DILocation(line: 181, column: 19, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 181, column: 7)
!3236 = !DILocation(line: 181, column: 7, scope: !3235)
!3237 = !DILocation(line: 181, column: 7, scope: !3217)
!3238 = !DILocation(line: 182, column: 5, scope: !3235)
!3239 = !DILocation(line: 185, column: 14, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 185, column: 7)
!3241 = !DILocation(line: 185, column: 7, scope: !3240)
!3242 = !DILocation(line: 185, column: 33, scope: !3240)
!3243 = !DILocation(line: 185, column: 7, scope: !3217)
!3244 = !DILocation(line: 186, column: 5, scope: !3240)
!3245 = !DILocation(line: 188, column: 14, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 188, column: 7)
!3247 = !DILocation(line: 188, column: 7, scope: !3246)
!3248 = !DILocation(line: 188, column: 35, scope: !3246)
!3249 = !DILocation(line: 188, column: 7, scope: !3217)
!3250 = !DILocation(line: 189, column: 5, scope: !3246)
!3251 = !DILocation(line: 191, column: 8, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 191, column: 7)
!3253 = !DILocation(line: 191, column: 33, scope: !3252)
!3254 = !DILocation(line: 191, column: 37, scope: !3252)
!3255 = !DILocation(line: 192, column: 7, scope: !3252)
!3256 = !DILocation(line: 192, column: 29, scope: !3252)
!3257 = !DILocation(line: 192, column: 10, scope: !3252)
!3258 = !DILocation(line: 192, column: 38, scope: !3252)
!3259 = !DILocation(line: 192, column: 61, scope: !3252)
!3260 = !DILocation(line: 192, column: 41, scope: !3252)
!3261 = !DILocation(line: 191, column: 7, scope: !3217)
!3262 = !DILocation(line: 193, column: 5, scope: !3252)
!3263 = !DILocation(line: 195, column: 14, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 195, column: 7)
!3265 = !DILocation(line: 195, column: 33, scope: !3264)
!3266 = !DILocation(line: 195, column: 22, scope: !3264)
!3267 = !DILocation(line: 196, column: 7, scope: !3264)
!3268 = !DILocation(line: 196, column: 19, scope: !3264)
!3269 = !DILocation(line: 196, column: 27, scope: !3264)
!3270 = !DILocation(line: 196, column: 49, scope: !3264)
!3271 = !DILocation(line: 196, column: 46, scope: !3264)
!3272 = !DILocation(line: 195, column: 7, scope: !3217)
!3273 = !DILocation(line: 197, column: 5, scope: !3264)
!3274 = !DILocation(line: 199, column: 7, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 199, column: 7)
!3276 = !DILocation(line: 199, column: 16, scope: !3275)
!3277 = !DILocation(line: 199, column: 7, scope: !3217)
!3278 = !DILocation(line: 201, column: 7, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3275, file: !63, line: 200, column: 5)
!3280 = !DILocation(line: 201, column: 13, scope: !3279)
!3281 = !DILocalVariable(name: "ruid", scope: !3279, file: !63, line: 202, type: !124)
!3282 = !DILocation(line: 202, column: 13, scope: !3279)
!3283 = !DILocation(line: 202, column: 20, scope: !3279)
!3284 = !DILocation(line: 203, column: 12, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3279, file: !63, line: 203, column: 11)
!3286 = !DILocation(line: 203, column: 17, scope: !3285)
!3287 = !DILocation(line: 203, column: 31, scope: !3285)
!3288 = !DILocation(line: 203, column: 34, scope: !3285)
!3289 = !DILocation(line: 203, column: 41, scope: !3285)
!3290 = !DILocation(line: 203, column: 52, scope: !3285)
!3291 = !DILocation(line: 203, column: 62, scope: !3285)
!3292 = !DILocation(line: 203, column: 59, scope: !3285)
!3293 = !DILocation(line: 203, column: 11, scope: !3279)
!3294 = !DILocation(line: 204, column: 9, scope: !3285)
!3295 = !DILocation(line: 205, column: 5, scope: !3279)
!3296 = !DILocation(line: 206, column: 20, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3275, file: !63, line: 206, column: 12)
!3298 = !DILocation(line: 206, column: 30, scope: !3297)
!3299 = !DILocation(line: 206, column: 27, scope: !3297)
!3300 = !DILocation(line: 206, column: 12, scope: !3275)
!3301 = !DILocation(line: 207, column: 5, scope: !3297)
!3302 = !DILocation(line: 209, column: 7, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 209, column: 7)
!3304 = !DILocation(line: 209, column: 16, scope: !3303)
!3305 = !DILocation(line: 209, column: 7, scope: !3217)
!3306 = !DILocation(line: 211, column: 7, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3303, file: !63, line: 210, column: 5)
!3308 = !DILocation(line: 211, column: 13, scope: !3307)
!3309 = !DILocalVariable(name: "rgid", scope: !3307, file: !63, line: 212, type: !126)
!3310 = !DILocation(line: 212, column: 13, scope: !3307)
!3311 = !DILocation(line: 212, column: 20, scope: !3307)
!3312 = !DILocation(line: 213, column: 12, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3307, file: !63, line: 213, column: 11)
!3314 = !DILocation(line: 213, column: 17, scope: !3313)
!3315 = !DILocation(line: 213, column: 31, scope: !3313)
!3316 = !DILocation(line: 213, column: 34, scope: !3313)
!3317 = !DILocation(line: 213, column: 41, scope: !3313)
!3318 = !DILocation(line: 213, column: 52, scope: !3313)
!3319 = !DILocation(line: 213, column: 62, scope: !3313)
!3320 = !DILocation(line: 213, column: 59, scope: !3313)
!3321 = !DILocation(line: 213, column: 11, scope: !3307)
!3322 = !DILocation(line: 214, column: 9, scope: !3313)
!3323 = !DILocation(line: 215, column: 5, scope: !3307)
!3324 = !DILocation(line: 216, column: 20, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3303, file: !63, line: 216, column: 12)
!3326 = !DILocation(line: 216, column: 30, scope: !3325)
!3327 = !DILocation(line: 216, column: 27, scope: !3325)
!3328 = !DILocation(line: 216, column: 12, scope: !3303)
!3329 = !DILocation(line: 217, column: 5, scope: !3325)
!3330 = !DILocation(line: 220, column: 7, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 220, column: 7)
!3332 = !DILocation(line: 220, column: 23, scope: !3331)
!3333 = !DILocation(line: 220, column: 26, scope: !3331)
!3334 = !DILocation(line: 220, column: 29, scope: !3331)
!3335 = !DILocation(line: 220, column: 7, scope: !3217)
!3336 = !DILocalVariable(name: "file_scontext", scope: !3337, file: !63, line: 222, type: !7)
!3337 = distinct !DILexicalBlock(scope: !3331, file: !63, line: 221, column: 5)
!3338 = !DILocation(line: 222, column: 13, scope: !3337)
!3339 = !DILocalVariable(name: "to_scontext", scope: !3337, file: !63, line: 223, type: !7)
!3340 = !DILocation(line: 223, column: 13, scope: !3337)
!3341 = !DILocalVariable(name: "scontext_match", scope: !3337, file: !63, line: 224, type: !139)
!3342 = !DILocation(line: 224, column: 12, scope: !3337)
!3343 = !DILocation(line: 226, column: 23, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3337, file: !63, line: 226, column: 11)
!3345 = !DILocation(line: 226, column: 11, scope: !3344)
!3346 = !DILocation(line: 226, column: 49, scope: !3344)
!3347 = !DILocation(line: 226, column: 11, scope: !3337)
!3348 = !DILocation(line: 227, column: 9, scope: !3344)
!3349 = !DILocation(line: 229, column: 23, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3337, file: !63, line: 229, column: 11)
!3351 = !DILocation(line: 229, column: 11, scope: !3350)
!3352 = !DILocation(line: 229, column: 48, scope: !3350)
!3353 = !DILocation(line: 229, column: 11, scope: !3337)
!3354 = !DILocation(line: 231, column: 20, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3350, file: !63, line: 230, column: 9)
!3356 = !DILocation(line: 231, column: 11, scope: !3355)
!3357 = !DILocation(line: 232, column: 11, scope: !3355)
!3358 = !DILocation(line: 235, column: 24, scope: !3337)
!3359 = !DILocation(line: 235, column: 22, scope: !3337)
!3360 = !DILocation(line: 237, column: 16, scope: !3337)
!3361 = !DILocation(line: 237, column: 7, scope: !3337)
!3362 = !DILocation(line: 238, column: 16, scope: !3337)
!3363 = !DILocation(line: 238, column: 7, scope: !3337)
!3364 = !DILocation(line: 239, column: 12, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3337, file: !63, line: 239, column: 11)
!3366 = !DILocation(line: 239, column: 11, scope: !3337)
!3367 = !DILocation(line: 240, column: 9, scope: !3365)
!3368 = !DILocation(line: 241, column: 5, scope: !3337)
!3369 = !DILocation(line: 244, column: 18, scope: !3217)
!3370 = !DILocation(line: 244, column: 12, scope: !3217)
!3371 = !DILocation(line: 244, column: 10, scope: !3217)
!3372 = !DILocation(line: 245, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 245, column: 7)
!3374 = !DILocation(line: 245, column: 14, scope: !3373)
!3375 = !DILocation(line: 245, column: 7, scope: !3217)
!3376 = !DILocation(line: 246, column: 5, scope: !3373)
!3377 = !DILocation(line: 248, column: 19, scope: !3217)
!3378 = !DILocation(line: 248, column: 13, scope: !3217)
!3379 = !DILocation(line: 248, column: 11, scope: !3217)
!3380 = !DILocation(line: 249, column: 7, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3217, file: !63, line: 249, column: 7)
!3382 = !DILocation(line: 249, column: 15, scope: !3381)
!3383 = !DILocation(line: 249, column: 7, scope: !3217)
!3384 = !DILocation(line: 251, column: 14, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !63, line: 250, column: 5)
!3386 = !DILocation(line: 251, column: 7, scope: !3385)
!3387 = !DILocation(line: 252, column: 7, scope: !3385)
!3388 = !DILocation(line: 255, column: 38, scope: !3217)
!3389 = !DILocation(line: 255, column: 46, scope: !3217)
!3390 = !DILocation(line: 255, column: 19, scope: !3217)
!3391 = !DILocation(line: 255, column: 17, scope: !3217)
!3392 = !DILocation(line: 257, column: 10, scope: !3217)
!3393 = !DILocation(line: 257, column: 3, scope: !3217)
!3394 = !DILocation(line: 258, column: 10, scope: !3217)
!3395 = !DILocation(line: 258, column: 3, scope: !3217)
!3396 = !DILocation(line: 259, column: 11, scope: !3217)
!3397 = !DILocation(line: 259, column: 10, scope: !3217)
!3398 = !DILocation(line: 259, column: 3, scope: !3217)
!3399 = !DILocation(line: 260, column: 1, scope: !3217)
!3400 = !DILocalVariable(name: "a_fd", arg: 1, scope: !423, file: !63, line: 146, type: !5)
!3401 = !DILocation(line: 146, column: 24, scope: !423)
!3402 = !DILocalVariable(name: "b_fd", arg: 2, scope: !423, file: !63, line: 146, type: !5)
!3403 = !DILocation(line: 146, column: 34, scope: !423)
!3404 = !DILocalVariable(name: "size", scope: !423, file: !63, line: 152, type: !52)
!3405 = !DILocation(line: 152, column: 10, scope: !423)
!3406 = !DILocation(line: 153, column: 3, scope: !423)
!3407 = !DILocation(line: 153, column: 33, scope: !423)
!3408 = !DILocation(line: 153, column: 22, scope: !423)
!3409 = !DILocation(line: 153, column: 20, scope: !423)
!3410 = !DILocation(line: 153, column: 12, scope: !423)
!3411 = !DILocation(line: 154, column: 9, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !63, line: 154, column: 9)
!3413 = distinct !DILexicalBlock(scope: !423, file: !63, line: 153, column: 64)
!3414 = !DILocation(line: 154, column: 28, scope: !3412)
!3415 = !DILocation(line: 154, column: 17, scope: !3412)
!3416 = !DILocation(line: 154, column: 14, scope: !3412)
!3417 = !DILocation(line: 154, column: 9, scope: !3413)
!3418 = !DILocation(line: 155, column: 7, scope: !3412)
!3419 = !DILocation(line: 157, column: 33, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3413, file: !63, line: 157, column: 9)
!3421 = !DILocation(line: 157, column: 9, scope: !3420)
!3422 = !DILocation(line: 157, column: 39, scope: !3420)
!3423 = !DILocation(line: 157, column: 9, scope: !3413)
!3424 = !DILocation(line: 158, column: 7, scope: !3420)
!3425 = distinct !{!3425, !3406, !3426}
!3426 = !DILocation(line: 159, column: 3, scope: !423)
!3427 = !DILocation(line: 161, column: 10, scope: !423)
!3428 = !DILocation(line: 161, column: 15, scope: !423)
!3429 = !DILocation(line: 161, column: 3, scope: !423)
!3430 = !DILocation(line: 162, column: 1, scope: !423)
!3431 = distinct !DISubprogram(name: "restorecon", scope: !2928, file: !2928, line: 40, type: !3432, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !295)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!139, !180, !139, !139}
!3434 = !DILocalVariable(name: "path", arg: 1, scope: !3431, file: !2928, line: 40, type: !180)
!3435 = !DILocation(line: 40, column: 25, scope: !3431)
!3436 = !DILocalVariable(name: "recurse", arg: 2, scope: !3431, file: !2928, line: 40, type: !139)
!3437 = !DILocation(line: 40, column: 36, scope: !3431)
!3438 = !DILocalVariable(name: "preserve", arg: 3, scope: !3431, file: !2928, line: 40, type: !139)
!3439 = !DILocation(line: 40, column: 50, scope: !3431)
!3440 = !DILocation(line: 41, column: 3, scope: !3431)
!3441 = !DILocation(line: 41, column: 9, scope: !3431)
!3442 = !DILocation(line: 41, column: 20, scope: !3431)
!3443 = distinct !DISubprogram(name: "prog_fprintf", scope: !1187, file: !1187, line: 28, type: !3444, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1186, retainedNodes: !295)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{null, !3446, !180, null}
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !3448)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3449)
!3449 = !{!3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3448, file: !2, line: 242, baseType: !5, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3448, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3448, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3448, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3448, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3448, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3448, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3448, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3448, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3448, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3448, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3448, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3448, file: !2, line: 260, baseType: !3463, size: 64, offset: 768)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !3465)
!3465 = !{!3466, !3467, !3469}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3464, file: !2, line: 157, baseType: !3463, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !3464, file: !2, line: 158, baseType: !3468, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !3464, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3448, file: !2, line: 262, baseType: !3468, size: 64, offset: 832)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3448, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3448, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3448, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3448, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3448, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3448, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3448, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3448, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !3448, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !3448, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !3448, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !3448, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3448, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3448, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3448, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!3486 = !DILocalVariable(name: "fp", arg: 1, scope: !3443, file: !1187, line: 28, type: !3446)
!3487 = !DILocation(line: 28, column: 21, scope: !3443)
!3488 = !DILocalVariable(name: "fmt", arg: 2, scope: !3443, file: !1187, line: 28, type: !180)
!3489 = !DILocation(line: 28, column: 37, scope: !3443)
!3490 = !DILocalVariable(name: "ap", scope: !3443, file: !1187, line: 30, type: !1189)
!3491 = !DILocation(line: 30, column: 11, scope: !3443)
!3492 = !DILocation(line: 31, column: 3, scope: !3443)
!3493 = !DILocation(line: 32, column: 3, scope: !3443)
!3494 = !DILocation(line: 33, column: 3, scope: !3443)
!3495 = !DILocation(line: 34, column: 13, scope: !3443)
!3496 = !DILocation(line: 34, column: 17, scope: !3443)
!3497 = !DILocation(line: 34, column: 22, scope: !3443)
!3498 = !DILocation(line: 34, column: 3, scope: !3443)
!3499 = !DILocation(line: 35, column: 3, scope: !3443)
!3500 = !DILocation(line: 36, column: 3, scope: !3443)
!3501 = !DILocation(line: 37, column: 1, scope: !3443)
!3502 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !434, file: !434, line: 929, type: !3503, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!139, !180, !180, !136, !139, !3505}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !3507, file: !74, line: 100, baseType: !65, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !3507, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !3507, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !3507, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3507, file: !74, line: 115, baseType: !136, size: 32, offset: 128)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !3507, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !3507, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !3507, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !3507, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !3507, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !3507, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !3507, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !3507, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !3507, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !3507, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !3507, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !3507, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !3507, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !3507, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !3507, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !3507, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !3507, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !3507, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !3507, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !3507, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !3507, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !3507, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !3507, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !3507, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !3507, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3507, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !3507, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !3507, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !3507, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !3507, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !3507, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !3507, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !3507, file: !74, line: 273, baseType: !172, size: 64, offset: 512)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !3507, file: !74, line: 276, baseType: !172, size: 64, offset: 576)
!3548 = !DILocalVariable(name: "src_name", arg: 1, scope: !3502, file: !434, line: 929, type: !180)
!3549 = !DILocation(line: 929, column: 39, scope: !3502)
!3550 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3502, file: !434, line: 929, type: !180)
!3551 = !DILocation(line: 929, column: 61, scope: !3502)
!3552 = !DILocalVariable(name: "mode", arg: 3, scope: !3502, file: !434, line: 930, type: !136)
!3553 = !DILocation(line: 930, column: 34, scope: !3502)
!3554 = !DILocalVariable(name: "new_dst", arg: 4, scope: !3502, file: !434, line: 930, type: !139)
!3555 = !DILocation(line: 930, column: 45, scope: !3502)
!3556 = !DILocalVariable(name: "x", arg: 5, scope: !3502, file: !434, line: 930, type: !3505)
!3557 = !DILocation(line: 930, column: 79, scope: !3502)
!3558 = !DILocation(line: 932, column: 7, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3502, file: !434, line: 932, column: 7)
!3560 = !DILocation(line: 932, column: 10, scope: !3559)
!3561 = !DILocation(line: 932, column: 7, scope: !3502)
!3562 = !DILocalVariable(name: "all_errors", scope: !3563, file: !434, line: 935, type: !139)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !434, line: 933, column: 5)
!3564 = !DILocation(line: 935, column: 12, scope: !3563)
!3565 = !DILocation(line: 935, column: 26, scope: !3563)
!3566 = !DILocation(line: 935, column: 29, scope: !3563)
!3567 = !DILocation(line: 935, column: 48, scope: !3563)
!3568 = !DILocation(line: 935, column: 51, scope: !3563)
!3569 = !DILocation(line: 935, column: 54, scope: !3563)
!3570 = !DILocalVariable(name: "some_errors", scope: !3563, file: !434, line: 936, type: !139)
!3571 = !DILocation(line: 936, column: 12, scope: !3563)
!3572 = !DILocation(line: 936, column: 27, scope: !3563)
!3573 = !DILocation(line: 936, column: 38, scope: !3563)
!3574 = !DILocation(line: 936, column: 42, scope: !3563)
!3575 = !DILocation(line: 936, column: 45, scope: !3563)
!3576 = !DILocation(line: 936, column: 41, scope: !3563)
!3577 = !DILocation(line: 0, scope: !3563)
!3578 = !DILocalVariable(name: "con", scope: !3563, file: !434, line: 937, type: !7)
!3579 = !DILocation(line: 937, column: 13, scope: !3563)
!3580 = !DILocation(line: 939, column: 29, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3563, file: !434, line: 939, column: 11)
!3582 = !DILocation(line: 939, column: 16, scope: !3581)
!3583 = !DILocation(line: 939, column: 13, scope: !3581)
!3584 = !DILocation(line: 939, column: 11, scope: !3563)
!3585 = !DILocation(line: 941, column: 31, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !434, line: 941, column: 15)
!3587 = distinct !DILexicalBlock(scope: !3581, file: !434, line: 940, column: 9)
!3588 = !DILocation(line: 941, column: 15, scope: !3586)
!3589 = !DILocation(line: 941, column: 36, scope: !3586)
!3590 = !DILocation(line: 941, column: 15, scope: !3587)
!3591 = !DILocation(line: 943, column: 19, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !434, line: 943, column: 19)
!3593 = distinct !DILexicalBlock(scope: !3586, file: !434, line: 942, column: 13)
!3594 = !DILocation(line: 943, column: 30, scope: !3592)
!3595 = !DILocation(line: 943, column: 34, scope: !3592)
!3596 = !DILocation(line: 943, column: 46, scope: !3592)
!3597 = !DILocation(line: 943, column: 69, scope: !3592)
!3598 = !DILocation(line: 943, column: 50, scope: !3592)
!3599 = !DILocation(line: 943, column: 19, scope: !3593)
!3600 = !DILocation(line: 944, column: 27, scope: !3592)
!3601 = !DILocation(line: 945, column: 24, scope: !3592)
!3602 = !DILocation(line: 946, column: 31, scope: !3592)
!3603 = !DILocation(line: 946, column: 24, scope: !3592)
!3604 = !DILocation(line: 944, column: 17, scope: !3592)
!3605 = !DILocation(line: 947, column: 19, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3593, file: !434, line: 947, column: 19)
!3607 = !DILocation(line: 947, column: 22, scope: !3606)
!3608 = !DILocation(line: 947, column: 19, scope: !3593)
!3609 = !DILocation(line: 949, column: 28, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !434, line: 948, column: 17)
!3611 = !DILocation(line: 949, column: 19, scope: !3610)
!3612 = !DILocation(line: 950, column: 19, scope: !3610)
!3613 = !DILocation(line: 952, column: 13, scope: !3593)
!3614 = !DILocation(line: 953, column: 20, scope: !3587)
!3615 = !DILocation(line: 953, column: 11, scope: !3587)
!3616 = !DILocation(line: 954, column: 9, scope: !3587)
!3617 = !DILocation(line: 957, column: 15, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !434, line: 957, column: 15)
!3619 = distinct !DILexicalBlock(scope: !3581, file: !434, line: 956, column: 9)
!3620 = !DILocation(line: 957, column: 26, scope: !3618)
!3621 = !DILocation(line: 957, column: 30, scope: !3618)
!3622 = !DILocation(line: 957, column: 42, scope: !3618)
!3623 = !DILocation(line: 957, column: 65, scope: !3618)
!3624 = !DILocation(line: 957, column: 46, scope: !3618)
!3625 = !DILocation(line: 957, column: 15, scope: !3619)
!3626 = !DILocation(line: 959, column: 25, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3618, file: !434, line: 958, column: 13)
!3628 = !DILocation(line: 960, column: 22, scope: !3627)
!3629 = !DILocation(line: 961, column: 22, scope: !3627)
!3630 = !DILocation(line: 959, column: 15, scope: !3627)
!3631 = !DILocation(line: 962, column: 13, scope: !3627)
!3632 = !DILocation(line: 963, column: 15, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3619, file: !434, line: 963, column: 15)
!3634 = !DILocation(line: 963, column: 18, scope: !3633)
!3635 = !DILocation(line: 963, column: 15, scope: !3619)
!3636 = !DILocation(line: 964, column: 13, scope: !3633)
!3637 = !DILocation(line: 966, column: 5, scope: !3563)
!3638 = !DILocation(line: 967, column: 12, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3559, file: !434, line: 967, column: 12)
!3640 = !DILocation(line: 967, column: 15, scope: !3639)
!3641 = !DILocation(line: 967, column: 12, scope: !3559)
!3642 = !DILocation(line: 971, column: 11, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !434, line: 971, column: 11)
!3644 = distinct !DILexicalBlock(scope: !3639, file: !434, line: 968, column: 5)
!3645 = !DILocation(line: 971, column: 19, scope: !3643)
!3646 = !DILocation(line: 971, column: 34, scope: !3643)
!3647 = !DILocation(line: 971, column: 44, scope: !3643)
!3648 = !DILocation(line: 971, column: 22, scope: !3643)
!3649 = !DILocation(line: 971, column: 50, scope: !3643)
!3650 = !DILocation(line: 972, column: 11, scope: !3643)
!3651 = !DILocation(line: 972, column: 35, scope: !3643)
!3652 = !DILocation(line: 972, column: 16, scope: !3643)
!3653 = !DILocation(line: 971, column: 11, scope: !3644)
!3654 = !DILocation(line: 974, column: 21, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3643, file: !434, line: 973, column: 9)
!3656 = !DILocation(line: 975, column: 18, scope: !3655)
!3657 = !DILocation(line: 976, column: 18, scope: !3655)
!3658 = !DILocation(line: 974, column: 11, scope: !3655)
!3659 = !DILocation(line: 977, column: 9, scope: !3655)
!3660 = !DILocation(line: 978, column: 5, scope: !3644)
!3661 = !DILocation(line: 980, column: 3, scope: !3502)
!3662 = !DILocation(line: 981, column: 1, scope: !3502)
!3663 = distinct !DISubprogram(name: "errno_unsupported", scope: !434, file: !434, line: 632, type: !2939, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3664 = !DILocalVariable(name: "err", arg: 1, scope: !3663, file: !434, line: 632, type: !5)
!3665 = !DILocation(line: 632, column: 24, scope: !3663)
!3666 = !DILocation(line: 634, column: 10, scope: !3663)
!3667 = !DILocation(line: 634, column: 14, scope: !3663)
!3668 = !DILocation(line: 634, column: 25, scope: !3663)
!3669 = !DILocation(line: 634, column: 28, scope: !3663)
!3670 = !DILocation(line: 634, column: 32, scope: !3663)
!3671 = !DILocation(line: 634, column: 3, scope: !3663)
!3672 = distinct !DISubprogram(name: "defaultcon", scope: !2928, file: !2928, line: 44, type: !2929, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3673 = !DILocalVariable(name: "path", arg: 1, scope: !3672, file: !2928, line: 44, type: !180)
!3674 = !DILocation(line: 44, column: 25, scope: !3672)
!3675 = !DILocalVariable(name: "mode", arg: 2, scope: !3672, file: !2928, line: 44, type: !136)
!3676 = !DILocation(line: 44, column: 38, scope: !3672)
!3677 = !DILocation(line: 45, column: 3, scope: !3672)
!3678 = !DILocation(line: 45, column: 9, scope: !3672)
!3679 = !DILocation(line: 45, column: 20, scope: !3672)
!3680 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !2928, file: !2928, line: 25, type: !2939, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3681 = !DILocalVariable(name: "err", arg: 1, scope: !3680, file: !2928, line: 25, type: !5)
!3682 = !DILocation(line: 25, column: 24, scope: !3680)
!3683 = !DILocation(line: 27, column: 10, scope: !3680)
!3684 = !DILocation(line: 27, column: 14, scope: !3680)
!3685 = !DILocation(line: 27, column: 25, scope: !3680)
!3686 = !DILocation(line: 27, column: 28, scope: !3680)
!3687 = !DILocation(line: 27, column: 32, scope: !3680)
!3688 = !DILocation(line: 27, column: 3, scope: !3680)
!3689 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !434, file: !434, line: 991, type: !3690, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!139, !180, !139, !139, !3505}
!3692 = !DILocalVariable(name: "dst_name", arg: 1, scope: !3689, file: !434, line: 991, type: !180)
!3693 = !DILocation(line: 991, column: 36, scope: !3689)
!3694 = !DILocalVariable(name: "process_local", arg: 2, scope: !3689, file: !434, line: 991, type: !139)
!3695 = !DILocation(line: 991, column: 51, scope: !3689)
!3696 = !DILocalVariable(name: "recurse", arg: 3, scope: !3689, file: !434, line: 992, type: !139)
!3697 = !DILocation(line: 992, column: 29, scope: !3689)
!3698 = !DILocalVariable(name: "x", arg: 4, scope: !3689, file: !434, line: 992, type: !3505)
!3699 = !DILocation(line: 992, column: 63, scope: !3689)
!3700 = !DILocalVariable(name: "all_errors", scope: !3689, file: !434, line: 994, type: !139)
!3701 = !DILocation(line: 994, column: 8, scope: !3689)
!3702 = !DILocation(line: 994, column: 23, scope: !3689)
!3703 = !DILocation(line: 994, column: 26, scope: !3689)
!3704 = !DILocation(line: 995, column: 22, scope: !3689)
!3705 = !DILocation(line: 995, column: 25, scope: !3689)
!3706 = !DILocation(line: 995, column: 28, scope: !3689)
!3707 = !DILocalVariable(name: "some_errors", scope: !3689, file: !434, line: 996, type: !139)
!3708 = !DILocation(line: 996, column: 8, scope: !3689)
!3709 = !DILocation(line: 996, column: 23, scope: !3689)
!3710 = !DILocation(line: 996, column: 34, scope: !3689)
!3711 = !DILocation(line: 996, column: 38, scope: !3689)
!3712 = !DILocation(line: 996, column: 41, scope: !3689)
!3713 = !DILocation(line: 996, column: 37, scope: !3689)
!3714 = !DILocation(line: 0, scope: !3689)
!3715 = !DILocation(line: 998, column: 21, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3689, file: !434, line: 998, column: 7)
!3717 = !DILocation(line: 998, column: 31, scope: !3716)
!3718 = !DILocation(line: 998, column: 40, scope: !3716)
!3719 = !DILocation(line: 998, column: 9, scope: !3716)
!3720 = !DILocation(line: 998, column: 7, scope: !3689)
!3721 = !DILocation(line: 1000, column: 11, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !434, line: 1000, column: 11)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !434, line: 999, column: 5)
!3724 = !DILocation(line: 1000, column: 22, scope: !3722)
!3725 = !DILocation(line: 1000, column: 26, scope: !3722)
!3726 = !DILocation(line: 1000, column: 38, scope: !3722)
!3727 = !DILocation(line: 1000, column: 61, scope: !3722)
!3728 = !DILocation(line: 1000, column: 42, scope: !3722)
!3729 = !DILocation(line: 1000, column: 11, scope: !3723)
!3730 = !DILocation(line: 1001, column: 19, scope: !3722)
!3731 = !DILocation(line: 1001, column: 26, scope: !3722)
!3732 = !DILocation(line: 1002, column: 16, scope: !3722)
!3733 = !DILocation(line: 1001, column: 9, scope: !3722)
!3734 = !DILocation(line: 1003, column: 7, scope: !3723)
!3735 = !DILocation(line: 1006, column: 3, scope: !3689)
!3736 = !DILocation(line: 1007, column: 1, scope: !3689)
!3737 = distinct !DISubprogram(name: "restorecon", scope: !2928, file: !2928, line: 40, type: !3432, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3738 = !DILocalVariable(name: "path", arg: 1, scope: !3737, file: !2928, line: 40, type: !180)
!3739 = !DILocation(line: 40, column: 25, scope: !3737)
!3740 = !DILocalVariable(name: "recurse", arg: 2, scope: !3737, file: !2928, line: 40, type: !139)
!3741 = !DILocation(line: 40, column: 36, scope: !3737)
!3742 = !DILocalVariable(name: "preserve", arg: 3, scope: !3737, file: !2928, line: 40, type: !139)
!3743 = !DILocation(line: 40, column: 50, scope: !3737)
!3744 = !DILocation(line: 41, column: 3, scope: !3737)
!3745 = !DILocation(line: 41, column: 9, scope: !3737)
!3746 = !DILocation(line: 41, column: 20, scope: !3737)
!3747 = distinct !DISubprogram(name: "dest_info_init", scope: !434, file: !434, line: 1739, type: !3748, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !3750}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3751 = !DILocalVariable(name: "x", arg: 1, scope: !3747, file: !434, line: 1739, type: !3750)
!3752 = !DILocation(line: 1739, column: 36, scope: !3747)
!3753 = !DILocation(line: 1742, column: 7, scope: !3747)
!3754 = !DILocation(line: 1741, column: 3, scope: !3747)
!3755 = !DILocation(line: 1741, column: 6, scope: !3747)
!3756 = !DILocation(line: 1742, column: 5, scope: !3747)
!3757 = !DILocation(line: 1747, column: 1, scope: !3747)
!3758 = distinct !DISubprogram(name: "src_info_init", scope: !434, file: !434, line: 1752, type: !3748, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3759 = !DILocalVariable(name: "x", arg: 1, scope: !3758, file: !434, line: 1752, type: !3750)
!3760 = !DILocation(line: 1752, column: 35, scope: !3758)
!3761 = !DILocation(line: 1764, column: 7, scope: !3758)
!3762 = !DILocation(line: 1763, column: 3, scope: !3758)
!3763 = !DILocation(line: 1763, column: 6, scope: !3758)
!3764 = !DILocation(line: 1764, column: 5, scope: !3758)
!3765 = !DILocation(line: 1769, column: 1, scope: !3758)
!3766 = distinct !DISubprogram(name: "copy", scope: !434, file: !434, line: 3009, type: !3767, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!139, !180, !180, !139, !3505, !3769, !3769}
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!3770 = !DILocalVariable(name: "src_name", arg: 1, scope: !3766, file: !434, line: 3009, type: !180)
!3771 = !DILocation(line: 3009, column: 19, scope: !3766)
!3772 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3766, file: !434, line: 3009, type: !180)
!3773 = !DILocation(line: 3009, column: 41, scope: !3766)
!3774 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !3766, file: !434, line: 3010, type: !139)
!3775 = !DILocation(line: 3010, column: 12, scope: !3766)
!3776 = !DILocalVariable(name: "options", arg: 4, scope: !3766, file: !434, line: 3010, type: !3505)
!3777 = !DILocation(line: 3010, column: 54, scope: !3766)
!3778 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !3766, file: !434, line: 3011, type: !3769)
!3779 = !DILocation(line: 3011, column: 13, scope: !3766)
!3780 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !3766, file: !434, line: 3011, type: !3769)
!3781 = !DILocation(line: 3011, column: 35, scope: !3766)
!3782 = !DILocation(line: 3013, column: 3, scope: !3766)
!3783 = !DILocation(line: 3022, column: 24, scope: !3766)
!3784 = !DILocation(line: 3022, column: 22, scope: !3766)
!3785 = !DILocation(line: 3023, column: 24, scope: !3766)
!3786 = !DILocation(line: 3023, column: 22, scope: !3766)
!3787 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !3766, file: !434, line: 3025, type: !139)
!3788 = !DILocation(line: 3025, column: 8, scope: !3766)
!3789 = !DILocation(line: 3026, column: 25, scope: !3766)
!3790 = !DILocation(line: 3026, column: 35, scope: !3766)
!3791 = !DILocation(line: 3026, column: 45, scope: !3766)
!3792 = !DILocation(line: 3027, column: 25, scope: !3766)
!3793 = !DILocation(line: 3029, column: 25, scope: !3766)
!3794 = !DILocation(line: 3029, column: 41, scope: !3766)
!3795 = !DILocation(line: 3026, column: 10, scope: !3766)
!3796 = !DILocation(line: 3026, column: 3, scope: !3766)
!3797 = distinct !DISubprogram(name: "valid_options", scope: !434, file: !434, line: 2986, type: !3798, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!139, !3505}
!3800 = !DILocalVariable(name: "co", arg: 1, scope: !3797, file: !434, line: 2986, type: !3505)
!3801 = !DILocation(line: 2986, column: 41, scope: !3797)
!3802 = !DILocation(line: 2988, column: 3, scope: !3797)
!3803 = !DILocation(line: 2989, column: 3, scope: !3797)
!3804 = !DILocation(line: 2990, column: 3, scope: !3797)
!3805 = !DILocation(line: 2991, column: 3, scope: !3797)
!3806 = !DILocation(line: 2992, column: 3, scope: !3797)
!3807 = !DILocation(line: 2993, column: 3, scope: !3797)
!3808 = !DILocation(line: 2996, column: 3, scope: !3797)
!3809 = distinct !DISubprogram(name: "copy_internal", scope: !434, file: !434, line: 1882, type: !3810, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!139, !180, !180, !139, !519, !501, !3505, !139, !3769, !3769, !3769}
!3812 = !DILocalVariable(name: "src_name", arg: 1, scope: !3809, file: !434, line: 1882, type: !180)
!3813 = !DILocation(line: 1882, column: 28, scope: !3809)
!3814 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3809, file: !434, line: 1882, type: !180)
!3815 = !DILocation(line: 1882, column: 50, scope: !3809)
!3816 = !DILocalVariable(name: "new_dst", arg: 3, scope: !3809, file: !434, line: 1883, type: !139)
!3817 = !DILocation(line: 1883, column: 21, scope: !3809)
!3818 = !DILocalVariable(name: "parent", arg: 4, scope: !3809, file: !434, line: 1884, type: !519)
!3819 = !DILocation(line: 1884, column: 35, scope: !3809)
!3820 = !DILocalVariable(name: "ancestors", arg: 5, scope: !3809, file: !434, line: 1885, type: !501)
!3821 = !DILocation(line: 1885, column: 33, scope: !3809)
!3822 = !DILocalVariable(name: "x", arg: 6, scope: !3809, file: !434, line: 1886, type: !3505)
!3823 = !DILocation(line: 1886, column: 41, scope: !3809)
!3824 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !3809, file: !434, line: 1887, type: !139)
!3825 = !DILocation(line: 1887, column: 21, scope: !3809)
!3826 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !3809, file: !434, line: 1888, type: !3769)
!3827 = !DILocation(line: 1888, column: 22, scope: !3809)
!3828 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !3809, file: !434, line: 1889, type: !3769)
!3829 = !DILocation(line: 1889, column: 22, scope: !3809)
!3830 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !3809, file: !434, line: 1890, type: !3769)
!3831 = !DILocation(line: 1890, column: 22, scope: !3809)
!3832 = !DILocalVariable(name: "src_sb", scope: !3809, file: !434, line: 1892, type: !470)
!3833 = !DILocation(line: 1892, column: 15, scope: !3809)
!3834 = !DILocalVariable(name: "dst_sb", scope: !3809, file: !434, line: 1893, type: !470)
!3835 = !DILocation(line: 1893, column: 15, scope: !3809)
!3836 = !DILocalVariable(name: "src_mode", scope: !3809, file: !434, line: 1894, type: !136)
!3837 = !DILocation(line: 1894, column: 10, scope: !3809)
!3838 = !DILocalVariable(name: "dst_mode", scope: !3809, file: !434, line: 1895, type: !136)
!3839 = !DILocation(line: 1895, column: 10, scope: !3809)
!3840 = !DILocalVariable(name: "dst_mode_bits", scope: !3809, file: !434, line: 1896, type: !136)
!3841 = !DILocation(line: 1896, column: 10, scope: !3809)
!3842 = !DILocalVariable(name: "omitted_permissions", scope: !3809, file: !434, line: 1897, type: !136)
!3843 = !DILocation(line: 1897, column: 10, scope: !3809)
!3844 = !DILocalVariable(name: "restore_dst_mode", scope: !3809, file: !434, line: 1898, type: !139)
!3845 = !DILocation(line: 1898, column: 8, scope: !3809)
!3846 = !DILocalVariable(name: "earlier_file", scope: !3809, file: !434, line: 1899, type: !7)
!3847 = !DILocation(line: 1899, column: 9, scope: !3809)
!3848 = !DILocalVariable(name: "dst_backup", scope: !3809, file: !434, line: 1900, type: !7)
!3849 = !DILocation(line: 1900, column: 9, scope: !3809)
!3850 = !DILocalVariable(name: "delayed_ok", scope: !3809, file: !434, line: 1901, type: !139)
!3851 = !DILocation(line: 1901, column: 8, scope: !3809)
!3852 = !DILocalVariable(name: "copied_as_regular", scope: !3809, file: !434, line: 1902, type: !139)
!3853 = !DILocation(line: 1902, column: 8, scope: !3809)
!3854 = !DILocalVariable(name: "dest_is_symlink", scope: !3809, file: !434, line: 1903, type: !139)
!3855 = !DILocation(line: 1903, column: 8, scope: !3809)
!3856 = !DILocalVariable(name: "have_dst_lstat", scope: !3809, file: !434, line: 1904, type: !139)
!3857 = !DILocation(line: 1904, column: 8, scope: !3809)
!3858 = !DILocation(line: 1906, column: 4, scope: !3809)
!3859 = !DILocation(line: 1906, column: 19, scope: !3809)
!3860 = !DILocalVariable(name: "rename_errno", scope: !3809, file: !434, line: 1908, type: !5)
!3861 = !DILocation(line: 1908, column: 7, scope: !3809)
!3862 = !DILocation(line: 1908, column: 22, scope: !3809)
!3863 = !DILocation(line: 1908, column: 25, scope: !3809)
!3864 = !DILocation(line: 1909, column: 7, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 1909, column: 7)
!3866 = !DILocation(line: 1909, column: 10, scope: !3865)
!3867 = !DILocation(line: 1909, column: 7, scope: !3809)
!3868 = !DILocation(line: 1911, column: 11, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !434, line: 1911, column: 11)
!3870 = distinct !DILexicalBlock(scope: !3865, file: !434, line: 1910, column: 5)
!3871 = !DILocation(line: 1911, column: 24, scope: !3869)
!3872 = !DILocation(line: 1911, column: 11, scope: !3870)
!3873 = !DILocation(line: 1912, column: 46, scope: !3869)
!3874 = !DILocation(line: 1912, column: 66, scope: !3869)
!3875 = !DILocation(line: 1912, column: 25, scope: !3869)
!3876 = !DILocation(line: 1914, column: 27, scope: !3869)
!3877 = !DILocation(line: 1912, column: 22, scope: !3869)
!3878 = !DILocation(line: 1912, column: 9, scope: !3869)
!3879 = !DILocation(line: 1915, column: 17, scope: !3870)
!3880 = !DILocation(line: 1915, column: 30, scope: !3870)
!3881 = !DILocation(line: 1915, column: 15, scope: !3870)
!3882 = !DILocation(line: 1916, column: 11, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3870, file: !434, line: 1916, column: 11)
!3884 = !DILocation(line: 1916, column: 11, scope: !3870)
!3885 = !DILocation(line: 1917, column: 29, scope: !3883)
!3886 = !DILocation(line: 1917, column: 10, scope: !3883)
!3887 = !DILocation(line: 1917, column: 27, scope: !3883)
!3888 = !DILocation(line: 1917, column: 9, scope: !3883)
!3889 = !DILocation(line: 1918, column: 5, scope: !3870)
!3890 = !DILocation(line: 1920, column: 7, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 1920, column: 7)
!3892 = !DILocation(line: 1920, column: 20, scope: !3891)
!3893 = !DILocation(line: 1920, column: 7, scope: !3809)
!3894 = !DILocation(line: 1921, column: 10, scope: !3891)
!3895 = !DILocation(line: 1921, column: 13, scope: !3891)
!3896 = !DILocation(line: 1922, column: 9, scope: !3891)
!3897 = !DILocation(line: 1922, column: 22, scope: !3891)
!3898 = !DILocation(line: 1922, column: 32, scope: !3891)
!3899 = !DILocation(line: 1922, column: 35, scope: !3891)
!3900 = !DILocation(line: 1922, column: 38, scope: !3891)
!3901 = !DILocation(line: 1922, column: 50, scope: !3891)
!3902 = !DILocalVariable(name: "name", scope: !3903, file: !434, line: 1924, type: !180)
!3903 = distinct !DILexicalBlock(scope: !3891, file: !434, line: 1923, column: 5)
!3904 = !DILocation(line: 1924, column: 19, scope: !3903)
!3905 = !DILocation(line: 1924, column: 26, scope: !3903)
!3906 = !DILocation(line: 1924, column: 39, scope: !3903)
!3907 = !DILocation(line: 1924, column: 46, scope: !3903)
!3908 = !DILocation(line: 1924, column: 57, scope: !3903)
!3909 = !DILocalVariable(name: "fstatat_flags", scope: !3903, file: !434, line: 1925, type: !5)
!3910 = !DILocation(line: 1925, column: 11, scope: !3903)
!3911 = !DILocation(line: 1926, column: 11, scope: !3903)
!3912 = !DILocation(line: 1926, column: 14, scope: !3903)
!3913 = !DILocation(line: 1926, column: 26, scope: !3903)
!3914 = !DILocation(line: 1927, column: 37, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3903, file: !434, line: 1927, column: 11)
!3916 = !DILocation(line: 1927, column: 52, scope: !3915)
!3917 = !DILocation(line: 1927, column: 11, scope: !3915)
!3918 = !DILocation(line: 1927, column: 67, scope: !3915)
!3919 = !DILocation(line: 1927, column: 11, scope: !3903)
!3920 = !DILocation(line: 1929, column: 21, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3915, file: !434, line: 1928, column: 9)
!3922 = !DILocation(line: 1929, column: 28, scope: !3921)
!3923 = !DILocation(line: 1929, column: 49, scope: !3921)
!3924 = !DILocation(line: 1929, column: 11, scope: !3921)
!3925 = !DILocation(line: 1930, column: 11, scope: !3921)
!3926 = !DILocation(line: 1933, column: 25, scope: !3903)
!3927 = !DILocation(line: 1933, column: 16, scope: !3903)
!3928 = !DILocation(line: 1935, column: 11, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3903, file: !434, line: 1935, column: 11)
!3930 = !DILocation(line: 1935, column: 30, scope: !3929)
!3931 = !DILocation(line: 1935, column: 34, scope: !3929)
!3932 = !DILocation(line: 1935, column: 37, scope: !3929)
!3933 = !DILocation(line: 1935, column: 11, scope: !3903)
!3934 = !DILocation(line: 1937, column: 26, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !434, line: 1936, column: 9)
!3936 = !DILocation(line: 1937, column: 29, scope: !3935)
!3937 = !DILocation(line: 1937, column: 24, scope: !3935)
!3938 = !DILocation(line: 1938, column: 20, scope: !3935)
!3939 = !DILocation(line: 1939, column: 20, scope: !3935)
!3940 = !DILocation(line: 1940, column: 18, scope: !3935)
!3941 = !DILocation(line: 1937, column: 11, scope: !3935)
!3942 = !DILocation(line: 1941, column: 11, scope: !3935)
!3943 = !DILocation(line: 1943, column: 5, scope: !3903)
!3944 = !DILocation(line: 1956, column: 7, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 1956, column: 7)
!3946 = !DILocation(line: 1956, column: 24, scope: !3945)
!3947 = !DILocation(line: 1956, column: 27, scope: !3945)
!3948 = !DILocation(line: 1956, column: 30, scope: !3945)
!3949 = !DILocation(line: 1956, column: 7, scope: !3809)
!3950 = !DILocation(line: 1958, column: 14, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !434, line: 1958, column: 12)
!3952 = distinct !DILexicalBlock(scope: !3945, file: !434, line: 1957, column: 5)
!3953 = !DILocation(line: 1959, column: 12, scope: !3951)
!3954 = !DILocation(line: 1959, column: 15, scope: !3951)
!3955 = !DILocation(line: 1959, column: 18, scope: !3951)
!3956 = !DILocation(line: 1959, column: 30, scope: !3951)
!3957 = !DILocation(line: 1960, column: 12, scope: !3951)
!3958 = !DILocation(line: 1960, column: 26, scope: !3951)
!3959 = !DILocation(line: 1960, column: 29, scope: !3951)
!3960 = !DILocation(line: 1960, column: 39, scope: !3951)
!3961 = !DILocation(line: 1960, column: 15, scope: !3951)
!3962 = !DILocation(line: 1958, column: 12, scope: !3952)
!3963 = !DILocation(line: 1962, column: 24, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3951, file: !434, line: 1961, column: 9)
!3965 = !DILocation(line: 1963, column: 18, scope: !3964)
!3966 = !DILocation(line: 1962, column: 11, scope: !3964)
!3967 = !DILocation(line: 1964, column: 11, scope: !3964)
!3968 = !DILocation(line: 1967, column: 20, scope: !3952)
!3969 = !DILocation(line: 1967, column: 23, scope: !3952)
!3970 = !DILocation(line: 1967, column: 33, scope: !3952)
!3971 = !DILocation(line: 1967, column: 7, scope: !3952)
!3972 = !DILocation(line: 1968, column: 5, scope: !3952)
!3973 = !DILocalVariable(name: "dereference", scope: !3809, file: !434, line: 1970, type: !139)
!3974 = !DILocation(line: 1970, column: 8, scope: !3809)
!3975 = !DILocation(line: 1970, column: 42, scope: !3809)
!3976 = !DILocation(line: 1970, column: 45, scope: !3809)
!3977 = !DILocation(line: 1970, column: 22, scope: !3809)
!3978 = !DILocation(line: 1972, column: 8, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 1972, column: 7)
!3980 = !DILocation(line: 1972, column: 7, scope: !3809)
!3981 = !DILocation(line: 1974, column: 14, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !434, line: 1974, column: 11)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !434, line: 1973, column: 5)
!3984 = !DILocation(line: 1974, column: 27, scope: !3982)
!3985 = !DILocation(line: 1974, column: 37, scope: !3982)
!3986 = !DILocation(line: 1974, column: 40, scope: !3982)
!3987 = !DILocation(line: 1974, column: 43, scope: !3982)
!3988 = !DILocation(line: 1974, column: 55, scope: !3982)
!3989 = !DILocation(line: 1974, column: 11, scope: !3983)
!3990 = !DILocalVariable(name: "use_lstat", scope: !3991, file: !434, line: 1982, type: !139)
!3991 = distinct !DILexicalBlock(scope: !3982, file: !434, line: 1975, column: 9)
!3992 = !DILocation(line: 1982, column: 16, scope: !3991)
!3993 = !DILocation(line: 1983, column: 19, scope: !3991)
!3994 = !DILocation(line: 1984, column: 17, scope: !3991)
!3995 = !DILocation(line: 1984, column: 23, scope: !3991)
!3996 = !DILocation(line: 1984, column: 26, scope: !3991)
!3997 = !DILocation(line: 1985, column: 21, scope: !3991)
!3998 = !DILocation(line: 1985, column: 24, scope: !3991)
!3999 = !DILocation(line: 1985, column: 43, scope: !3991)
!4000 = !DILocation(line: 1985, column: 46, scope: !3991)
!4001 = !DILocation(line: 1986, column: 16, scope: !3991)
!4002 = !DILocation(line: 1986, column: 19, scope: !3991)
!4003 = !DILocation(line: 1986, column: 22, scope: !3991)
!4004 = !DILocation(line: 1986, column: 32, scope: !3991)
!4005 = !DILocation(line: 1986, column: 35, scope: !3991)
!4006 = !DILocation(line: 1986, column: 38, scope: !3991)
!4007 = !DILocation(line: 1986, column: 52, scope: !3991)
!4008 = !DILocation(line: 1986, column: 55, scope: !3991)
!4009 = !DILocation(line: 1986, column: 58, scope: !3991)
!4010 = !DILocation(line: 1987, column: 16, scope: !3991)
!4011 = !DILocation(line: 1987, column: 19, scope: !3991)
!4012 = !DILocation(line: 1987, column: 22, scope: !3991)
!4013 = !DILocation(line: 1987, column: 34, scope: !3991)
!4014 = !DILocation(line: 1988, column: 16, scope: !3991)
!4015 = !DILocation(line: 1988, column: 19, scope: !3991)
!4016 = !DILocation(line: 1988, column: 22, scope: !3991)
!4017 = !DILocalVariable(name: "fstatat_flags", scope: !3991, file: !434, line: 1989, type: !5)
!4018 = !DILocation(line: 1989, column: 15, scope: !3991)
!4019 = !DILocation(line: 1989, column: 31, scope: !3991)
!4020 = !DILocation(line: 1990, column: 41, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3991, file: !434, line: 1990, column: 15)
!4022 = !DILocation(line: 1990, column: 60, scope: !4021)
!4023 = !DILocation(line: 1990, column: 15, scope: !4021)
!4024 = !DILocation(line: 1990, column: 75, scope: !4021)
!4025 = !DILocation(line: 1990, column: 15, scope: !3991)
!4026 = !DILocation(line: 1992, column: 32, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !434, line: 1991, column: 13)
!4028 = !DILocation(line: 1992, column: 30, scope: !4027)
!4029 = !DILocation(line: 1993, column: 28, scope: !4027)
!4030 = !DILocation(line: 1994, column: 13, scope: !4027)
!4031 = !DILocation(line: 1997, column: 19, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !434, line: 1997, column: 19)
!4033 = distinct !DILexicalBlock(scope: !4021, file: !434, line: 1996, column: 13)
!4034 = !DILocation(line: 1997, column: 25, scope: !4032)
!4035 = !DILocation(line: 1997, column: 34, scope: !4032)
!4036 = !DILocation(line: 1997, column: 37, scope: !4032)
!4037 = !DILocation(line: 1997, column: 40, scope: !4032)
!4038 = !DILocation(line: 1997, column: 19, scope: !4033)
!4039 = !DILocation(line: 1999, column: 24, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4032, file: !434, line: 1999, column: 24)
!4041 = !DILocation(line: 1999, column: 30, scope: !4040)
!4042 = !DILocation(line: 1999, column: 24, scope: !4032)
!4043 = !DILocation(line: 2001, column: 29, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !434, line: 2000, column: 17)
!4045 = !DILocation(line: 2001, column: 36, scope: !4044)
!4046 = !DILocation(line: 2001, column: 57, scope: !4044)
!4047 = !DILocation(line: 2001, column: 19, scope: !4044)
!4048 = !DILocation(line: 2002, column: 19, scope: !4044)
!4049 = !DILocation(line: 2005, column: 25, scope: !4040)
!4050 = !DILocation(line: 2007, column: 9, scope: !3991)
!4051 = !DILocation(line: 2009, column: 11, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3983, file: !434, line: 2009, column: 11)
!4053 = !DILocation(line: 2009, column: 24, scope: !4052)
!4054 = !DILocation(line: 2009, column: 11, scope: !3983)
!4055 = !DILocalVariable(name: "return_now", scope: !4056, file: !434, line: 2011, type: !139)
!4056 = distinct !DILexicalBlock(scope: !4052, file: !434, line: 2010, column: 9)
!4057 = !DILocation(line: 2011, column: 16, scope: !4056)
!4058 = !DILocation(line: 2013, column: 15, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2013, column: 15)
!4060 = !DILocation(line: 2013, column: 18, scope: !4059)
!4061 = !DILocation(line: 2013, column: 30, scope: !4059)
!4062 = !DILocation(line: 2014, column: 15, scope: !4059)
!4063 = !DILocation(line: 2014, column: 34, scope: !4059)
!4064 = !DILocation(line: 2014, column: 53, scope: !4059)
!4065 = !DILocation(line: 2015, column: 34, scope: !4059)
!4066 = !DILocation(line: 2014, column: 20, scope: !4059)
!4067 = !DILocation(line: 2013, column: 15, scope: !4056)
!4068 = !DILocation(line: 2017, column: 28, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4059, file: !434, line: 2016, column: 13)
!4070 = !DILocation(line: 2018, column: 22, scope: !4069)
!4071 = !DILocation(line: 2018, column: 47, scope: !4069)
!4072 = !DILocation(line: 2017, column: 15, scope: !4069)
!4073 = !DILocation(line: 2019, column: 15, scope: !4069)
!4074 = !DILocation(line: 2022, column: 15, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2022, column: 15)
!4076 = !DILocation(line: 2022, column: 18, scope: !4075)
!4077 = !DILocation(line: 2022, column: 25, scope: !4075)
!4078 = !DILocation(line: 2022, column: 29, scope: !4075)
!4079 = !DILocation(line: 2022, column: 15, scope: !4056)
!4080 = !DILocalVariable(name: "options", scope: !4081, file: !434, line: 2028, type: !5)
!4081 = distinct !DILexicalBlock(scope: !4075, file: !434, line: 2023, column: 13)
!4082 = !DILocation(line: 2028, column: 19, scope: !4081)
!4083 = !DILocation(line: 2028, column: 31, scope: !4081)
!4084 = !DILocation(line: 2028, column: 34, scope: !4081)
!4085 = !DILocation(line: 2029, column: 31, scope: !4081)
!4086 = !DILocation(line: 2029, column: 37, scope: !4081)
!4087 = !DILocation(line: 2029, column: 40, scope: !4081)
!4088 = !DILocation(line: 2030, column: 37, scope: !4081)
!4089 = !DILocation(line: 2030, column: 47, scope: !4081)
!4090 = !DILocation(line: 2030, column: 64, scope: !4081)
!4091 = !DILocation(line: 2030, column: 54, scope: !4081)
!4092 = !DILocation(line: 0, scope: !4081)
!4093 = !DILocation(line: 2029, column: 34, scope: !4081)
!4094 = !DILocation(line: 2028, column: 30, scope: !4081)
!4095 = !DILocation(line: 2034, column: 34, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4081, file: !434, line: 2034, column: 19)
!4097 = !DILocation(line: 2034, column: 62, scope: !4096)
!4098 = !DILocation(line: 2034, column: 24, scope: !4096)
!4099 = !DILocation(line: 2034, column: 21, scope: !4096)
!4100 = !DILocation(line: 2034, column: 19, scope: !4081)
!4101 = !DILocation(line: 2040, column: 23, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !434, line: 2040, column: 23)
!4103 = distinct !DILexicalBlock(scope: !4096, file: !434, line: 2035, column: 17)
!4104 = !DILocation(line: 2040, column: 23, scope: !4103)
!4105 = !DILocation(line: 2041, column: 22, scope: !4102)
!4106 = !DILocation(line: 2041, column: 39, scope: !4102)
!4107 = !DILocation(line: 2041, column: 21, scope: !4102)
!4108 = !DILocation(line: 2048, column: 51, scope: !4103)
!4109 = !DILocation(line: 2048, column: 68, scope: !4103)
!4110 = !DILocation(line: 2049, column: 58, scope: !4103)
!4111 = !DILocation(line: 2048, column: 34, scope: !4103)
!4112 = !DILocation(line: 2048, column: 32, scope: !4103)
!4113 = !DILocation(line: 2050, column: 23, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4103, file: !434, line: 2050, column: 23)
!4115 = !DILocation(line: 2050, column: 23, scope: !4103)
!4116 = !DILocation(line: 2054, column: 47, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !434, line: 2054, column: 27)
!4118 = distinct !DILexicalBlock(scope: !4114, file: !434, line: 2051, column: 21)
!4119 = !DILocation(line: 2054, column: 61, scope: !4117)
!4120 = !DILocation(line: 2055, column: 47, scope: !4117)
!4121 = !DILocation(line: 2055, column: 50, scope: !4117)
!4122 = !DILocation(line: 2055, column: 59, scope: !4117)
!4123 = !DILocation(line: 2054, column: 29, scope: !4117)
!4124 = !DILocation(line: 2054, column: 27, scope: !4118)
!4125 = !DILocation(line: 2057, column: 27, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4117, file: !434, line: 2056, column: 25)
!4127 = !DILocation(line: 2059, column: 21, scope: !4118)
!4128 = !DILocation(line: 2061, column: 19, scope: !4103)
!4129 = !DILocation(line: 2063, column: 13, scope: !4081)
!4130 = !DILocation(line: 2072, column: 15, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2072, column: 15)
!4132 = !DILocation(line: 2072, column: 18, scope: !4131)
!4133 = !DILocation(line: 2072, column: 15, scope: !4056)
!4134 = !DILocation(line: 2074, column: 33, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !434, line: 2074, column: 19)
!4136 = distinct !DILexicalBlock(scope: !4131, file: !434, line: 2073, column: 13)
!4137 = !DILocation(line: 2074, column: 36, scope: !4135)
!4138 = !DILocation(line: 2074, column: 19, scope: !4135)
!4139 = !DILocation(line: 2074, column: 19, scope: !4136)
!4140 = !DILocation(line: 2078, column: 23, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !434, line: 2078, column: 23)
!4142 = distinct !DILexicalBlock(scope: !4135, file: !434, line: 2075, column: 17)
!4143 = !DILocation(line: 2078, column: 23, scope: !4142)
!4144 = !DILocation(line: 2079, column: 22, scope: !4141)
!4145 = !DILocation(line: 2079, column: 39, scope: !4141)
!4146 = !DILocation(line: 2079, column: 21, scope: !4141)
!4147 = !DILocation(line: 2080, column: 19, scope: !4142)
!4148 = !DILocation(line: 2082, column: 13, scope: !4136)
!4149 = !DILocation(line: 2085, column: 21, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !434, line: 2085, column: 19)
!4151 = distinct !DILexicalBlock(scope: !4131, file: !434, line: 2084, column: 13)
!4152 = !DILocation(line: 2086, column: 19, scope: !4150)
!4153 = !DILocation(line: 2086, column: 23, scope: !4150)
!4154 = !DILocation(line: 2086, column: 26, scope: !4150)
!4155 = !DILocation(line: 2086, column: 38, scope: !4150)
!4156 = !DILocation(line: 2087, column: 23, scope: !4150)
!4157 = !DILocation(line: 2087, column: 27, scope: !4150)
!4158 = !DILocation(line: 2087, column: 30, scope: !4150)
!4159 = !DILocation(line: 2087, column: 42, scope: !4150)
!4160 = !DILocation(line: 2088, column: 27, scope: !4150)
!4161 = !DILocation(line: 2088, column: 46, scope: !4150)
!4162 = !DILocation(line: 2088, column: 49, scope: !4150)
!4163 = !DILocation(line: 2088, column: 32, scope: !4150)
!4164 = !DILocation(line: 2085, column: 19, scope: !4151)
!4165 = !DILocation(line: 2089, column: 17, scope: !4150)
!4166 = !DILocation(line: 2092, column: 15, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2092, column: 15)
!4168 = !DILocation(line: 2092, column: 15, scope: !4056)
!4169 = !DILocation(line: 2093, column: 13, scope: !4167)
!4170 = !DILocation(line: 2095, column: 16, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2095, column: 15)
!4172 = !DILocation(line: 2095, column: 15, scope: !4056)
!4173 = !DILocation(line: 2097, column: 19, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !434, line: 2097, column: 19)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !434, line: 2096, column: 13)
!4176 = !DILocation(line: 2097, column: 19, scope: !4175)
!4177 = !DILocation(line: 2099, column: 23, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !434, line: 2099, column: 23)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !434, line: 2098, column: 17)
!4180 = !DILocation(line: 2099, column: 26, scope: !4178)
!4181 = !DILocation(line: 2099, column: 36, scope: !4178)
!4182 = !DILocation(line: 2099, column: 39, scope: !4178)
!4183 = !DILocation(line: 2099, column: 42, scope: !4178)
!4184 = !DILocation(line: 2099, column: 54, scope: !4178)
!4185 = !DILocation(line: 2099, column: 23, scope: !4179)
!4186 = !DILocation(line: 2103, column: 21, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4178, file: !434, line: 2100, column: 21)
!4188 = !DILocation(line: 2107, column: 24, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4178, file: !434, line: 2105, column: 21)
!4190 = !DILocation(line: 2108, column: 30, scope: !4189)
!4191 = !DILocation(line: 2108, column: 55, scope: !4189)
!4192 = !DILocation(line: 2106, column: 23, scope: !4189)
!4193 = !DILocation(line: 2109, column: 23, scope: !4189)
!4194 = !DILocation(line: 2111, column: 17, scope: !4179)
!4195 = !DILocation(line: 2120, column: 19, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4175, file: !434, line: 2120, column: 19)
!4197 = !DILocation(line: 2121, column: 19, scope: !4196)
!4198 = !DILocation(line: 2121, column: 22, scope: !4196)
!4199 = !DILocation(line: 2121, column: 25, scope: !4196)
!4200 = !DILocation(line: 2121, column: 37, scope: !4196)
!4201 = !DILocation(line: 2122, column: 19, scope: !4196)
!4202 = !DILocation(line: 2122, column: 33, scope: !4196)
!4203 = !DILocation(line: 2122, column: 36, scope: !4196)
!4204 = !DILocation(line: 2122, column: 47, scope: !4196)
!4205 = !DILocation(line: 2122, column: 22, scope: !4196)
!4206 = !DILocation(line: 2120, column: 19, scope: !4175)
!4207 = !DILocation(line: 2125, column: 26, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4196, file: !434, line: 2123, column: 17)
!4209 = !DILocation(line: 2126, column: 26, scope: !4208)
!4210 = !DILocation(line: 2126, column: 51, scope: !4208)
!4211 = !DILocation(line: 2124, column: 19, scope: !4208)
!4212 = !DILocation(line: 2127, column: 19, scope: !4208)
!4213 = !DILocation(line: 2129, column: 13, scope: !4175)
!4214 = !DILocation(line: 2131, column: 16, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2131, column: 15)
!4216 = !DILocation(line: 2131, column: 15, scope: !4056)
!4217 = !DILocation(line: 2133, column: 19, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !434, line: 2133, column: 19)
!4219 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 2132, column: 13)
!4220 = !DILocation(line: 2133, column: 19, scope: !4219)
!4221 = !DILocation(line: 2135, column: 23, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !434, line: 2135, column: 23)
!4223 = distinct !DILexicalBlock(scope: !4218, file: !434, line: 2134, column: 17)
!4224 = !DILocation(line: 2135, column: 26, scope: !4222)
!4225 = !DILocation(line: 2135, column: 36, scope: !4222)
!4226 = !DILocation(line: 2135, column: 39, scope: !4222)
!4227 = !DILocation(line: 2135, column: 42, scope: !4222)
!4228 = !DILocation(line: 2135, column: 54, scope: !4222)
!4229 = !DILocation(line: 2135, column: 23, scope: !4223)
!4230 = !DILocation(line: 2139, column: 21, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4222, file: !434, line: 2136, column: 21)
!4232 = !DILocation(line: 2143, column: 26, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4222, file: !434, line: 2141, column: 21)
!4234 = !DILocation(line: 2144, column: 30, scope: !4233)
!4235 = !DILocation(line: 2142, column: 23, scope: !4233)
!4236 = !DILocation(line: 2145, column: 23, scope: !4233)
!4237 = !DILocation(line: 2147, column: 17, scope: !4223)
!4238 = !DILocation(line: 2148, column: 13, scope: !4219)
!4239 = !DILocation(line: 2150, column: 15, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2150, column: 15)
!4241 = !DILocation(line: 2150, column: 18, scope: !4240)
!4242 = !DILocation(line: 2150, column: 15, scope: !4056)
!4243 = !DILocation(line: 2153, column: 19, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !434, line: 2153, column: 19)
!4245 = distinct !DILexicalBlock(scope: !4240, file: !434, line: 2151, column: 13)
!4246 = !DILocation(line: 2153, column: 44, scope: !4244)
!4247 = !DILocation(line: 2153, column: 48, scope: !4244)
!4248 = !DILocation(line: 2154, column: 19, scope: !4244)
!4249 = !DILocation(line: 2154, column: 22, scope: !4244)
!4250 = !DILocation(line: 2154, column: 25, scope: !4244)
!4251 = !DILocation(line: 2154, column: 37, scope: !4244)
!4252 = !DILocation(line: 2153, column: 19, scope: !4245)
!4253 = !DILocation(line: 2157, column: 24, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4244, file: !434, line: 2155, column: 17)
!4255 = !DILocation(line: 2158, column: 26, scope: !4254)
!4256 = !DILocation(line: 2158, column: 50, scope: !4254)
!4257 = !DILocation(line: 2156, column: 19, scope: !4254)
!4258 = !DILocation(line: 2159, column: 19, scope: !4254)
!4259 = !DILocation(line: 2161, column: 13, scope: !4245)
!4260 = !DILocalVariable(name: "srcbase", scope: !4056, file: !434, line: 2163, type: !180)
!4261 = !DILocation(line: 2163, column: 23, scope: !4056)
!4262 = !DILocation(line: 2164, column: 15, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 2164, column: 15)
!4264 = !DILocation(line: 2164, column: 18, scope: !4263)
!4265 = !DILocation(line: 2164, column: 30, scope: !4263)
!4266 = !DILocation(line: 2167, column: 15, scope: !4263)
!4267 = !DILocation(line: 2167, column: 61, scope: !4263)
!4268 = !DILocation(line: 2167, column: 45, scope: !4263)
!4269 = !DILocation(line: 2167, column: 43, scope: !4263)
!4270 = !DILocation(line: 2167, column: 20, scope: !4263)
!4271 = !DILocation(line: 2173, column: 15, scope: !4263)
!4272 = !DILocation(line: 2173, column: 19, scope: !4263)
!4273 = !DILocation(line: 2173, column: 22, scope: !4263)
!4274 = !DILocation(line: 2173, column: 32, scope: !4263)
!4275 = !DILocation(line: 2173, column: 37, scope: !4263)
!4276 = !DILocation(line: 2164, column: 15, scope: !4056)
!4277 = !DILocation(line: 2179, column: 19, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !434, line: 2179, column: 19)
!4279 = distinct !DILexicalBlock(scope: !4263, file: !434, line: 2174, column: 13)
!4280 = !DILocation(line: 2179, column: 22, scope: !4278)
!4281 = !DILocation(line: 2179, column: 34, scope: !4278)
!4282 = !DILocation(line: 2180, column: 19, scope: !4278)
!4283 = !DILocation(line: 2180, column: 44, scope: !4278)
!4284 = !DILocation(line: 2180, column: 62, scope: !4278)
!4285 = !DILocation(line: 2180, column: 22, scope: !4278)
!4286 = !DILocation(line: 2179, column: 19, scope: !4279)
!4287 = !DILocalVariable(name: "fmt", scope: !4288, file: !434, line: 2182, type: !180)
!4288 = distinct !DILexicalBlock(scope: !4278, file: !434, line: 2181, column: 17)
!4289 = !DILocation(line: 2182, column: 31, scope: !4288)
!4290 = !DILocation(line: 2183, column: 26, scope: !4288)
!4291 = !DILocation(line: 2183, column: 29, scope: !4288)
!4292 = !DILocation(line: 2184, column: 20, scope: !4288)
!4293 = !DILocation(line: 2185, column: 20, scope: !4288)
!4294 = !DILocation(line: 2183, column: 23, scope: !4288)
!4295 = !DILocation(line: 2186, column: 32, scope: !4288)
!4296 = !DILocation(line: 2187, column: 26, scope: !4288)
!4297 = !DILocation(line: 2188, column: 26, scope: !4288)
!4298 = !DILocation(line: 2186, column: 19, scope: !4288)
!4299 = !DILocation(line: 2189, column: 19, scope: !4288)
!4300 = !DILocalVariable(name: "tmp_backup", scope: !4279, file: !434, line: 2192, type: !7)
!4301 = !DILocation(line: 2192, column: 21, scope: !4279)
!4302 = !DILocation(line: 2192, column: 64, scope: !4279)
!4303 = !DILocation(line: 2193, column: 54, scope: !4279)
!4304 = !DILocation(line: 2193, column: 57, scope: !4279)
!4305 = !DILocation(line: 2192, column: 34, scope: !4279)
!4306 = !DILocation(line: 2200, column: 19, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4279, file: !434, line: 2200, column: 19)
!4308 = !DILocation(line: 2200, column: 19, scope: !4279)
!4309 = !DILocation(line: 2202, column: 19, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !434, line: 2201, column: 17)
!4311 = !DILocalVariable(name: "__old", scope: !4312, file: !434, line: 2202, type: !180)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !434, line: 2202, column: 19)
!4313 = distinct !DILexicalBlock(scope: !4310, file: !434, line: 2202, column: 19)
!4314 = !DILocation(line: 2202, column: 19, scope: !4312)
!4315 = !DILocalVariable(name: "__len", scope: !4312, file: !434, line: 2202, type: !52)
!4316 = !DILocalVariable(name: "__new", scope: !4312, file: !434, line: 2202, type: !7)
!4317 = !DILocation(line: 2202, column: 19, scope: !4313)
!4318 = !DILocation(line: 2203, column: 25, scope: !4310)
!4319 = !DILocation(line: 2203, column: 19, scope: !4310)
!4320 = !DILocation(line: 2204, column: 17, scope: !4310)
!4321 = !DILocation(line: 2205, column: 24, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4307, file: !434, line: 2205, column: 24)
!4323 = !DILocation(line: 2205, column: 30, scope: !4322)
!4324 = !DILocation(line: 2205, column: 24, scope: !4307)
!4325 = !DILocation(line: 2207, column: 29, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !434, line: 2206, column: 17)
!4327 = !DILocation(line: 2207, column: 36, scope: !4326)
!4328 = !DILocation(line: 2207, column: 59, scope: !4326)
!4329 = !DILocation(line: 2207, column: 19, scope: !4326)
!4330 = !DILocation(line: 2208, column: 19, scope: !4326)
!4331 = !DILocation(line: 2210, column: 23, scope: !4279)
!4332 = !DILocation(line: 2211, column: 13, scope: !4279)
!4333 = !DILocation(line: 2212, column: 22, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4263, file: !434, line: 2212, column: 20)
!4335 = !DILocation(line: 2214, column: 20, scope: !4334)
!4336 = !DILocation(line: 2214, column: 25, scope: !4334)
!4337 = !DILocation(line: 2214, column: 28, scope: !4334)
!4338 = !DILocation(line: 2215, column: 20, scope: !4334)
!4339 = !DILocation(line: 2215, column: 24, scope: !4334)
!4340 = !DILocation(line: 2215, column: 27, scope: !4334)
!4341 = !DILocation(line: 2216, column: 24, scope: !4334)
!4342 = !DILocation(line: 2216, column: 28, scope: !4334)
!4343 = !DILocation(line: 2216, column: 31, scope: !4334)
!4344 = !DILocation(line: 2216, column: 46, scope: !4334)
!4345 = !DILocation(line: 2216, column: 60, scope: !4334)
!4346 = !DILocation(line: 2216, column: 51, scope: !4334)
!4347 = !DILocation(line: 2217, column: 24, scope: !4334)
!4348 = !DILocation(line: 2217, column: 28, scope: !4334)
!4349 = !DILocation(line: 2217, column: 31, scope: !4334)
!4350 = !DILocation(line: 2217, column: 43, scope: !4334)
!4351 = !DILocation(line: 2218, column: 28, scope: !4334)
!4352 = !DILocation(line: 2218, column: 33, scope: !4334)
!4353 = !DILocation(line: 2212, column: 20, scope: !4263)
!4354 = !DILocation(line: 2221, column: 27, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !434, line: 2221, column: 19)
!4356 = distinct !DILexicalBlock(scope: !4334, file: !434, line: 2220, column: 13)
!4357 = !DILocation(line: 2221, column: 19, scope: !4355)
!4358 = !DILocation(line: 2221, column: 37, scope: !4355)
!4359 = !DILocation(line: 2221, column: 42, scope: !4355)
!4360 = !DILocation(line: 2221, column: 45, scope: !4355)
!4361 = !DILocation(line: 2221, column: 51, scope: !4355)
!4362 = !DILocation(line: 2221, column: 19, scope: !4356)
!4363 = !DILocation(line: 2223, column: 29, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4355, file: !434, line: 2222, column: 17)
!4365 = !DILocation(line: 2223, column: 36, scope: !4364)
!4366 = !DILocation(line: 2223, column: 59, scope: !4364)
!4367 = !DILocation(line: 2223, column: 19, scope: !4364)
!4368 = !DILocation(line: 2224, column: 19, scope: !4364)
!4369 = !DILocation(line: 2226, column: 23, scope: !4356)
!4370 = !DILocation(line: 2227, column: 19, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4356, file: !434, line: 2227, column: 19)
!4372 = !DILocation(line: 2227, column: 22, scope: !4371)
!4373 = !DILocation(line: 2227, column: 19, scope: !4356)
!4374 = !DILocation(line: 2228, column: 25, scope: !4371)
!4375 = !DILocation(line: 2228, column: 44, scope: !4371)
!4376 = !DILocation(line: 2228, column: 17, scope: !4371)
!4377 = !DILocation(line: 2229, column: 13, scope: !4356)
!4378 = !DILocation(line: 2230, column: 9, scope: !4056)
!4379 = !DILocation(line: 2231, column: 5, scope: !3983)
!4380 = !DILocation(line: 2235, column: 7, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2235, column: 7)
!4382 = !DILocation(line: 2236, column: 7, scope: !4381)
!4383 = !DILocation(line: 2236, column: 10, scope: !4381)
!4384 = !DILocation(line: 2236, column: 13, scope: !4381)
!4385 = !DILocation(line: 2237, column: 7, scope: !4381)
!4386 = !DILocation(line: 2237, column: 12, scope: !4381)
!4387 = !DILocation(line: 2237, column: 15, scope: !4381)
!4388 = !DILocation(line: 2238, column: 7, scope: !4381)
!4389 = !DILocation(line: 2238, column: 10, scope: !4381)
!4390 = !DILocation(line: 2238, column: 13, scope: !4381)
!4391 = !DILocation(line: 2238, column: 25, scope: !4381)
!4392 = !DILocation(line: 2235, column: 7, scope: !3809)
!4393 = !DILocalVariable(name: "lstat_ok", scope: !4394, file: !434, line: 2240, type: !139)
!4394 = distinct !DILexicalBlock(scope: !4381, file: !434, line: 2239, column: 5)
!4395 = !DILocation(line: 2240, column: 12, scope: !4394)
!4396 = !DILocalVariable(name: "tmp_buf", scope: !4394, file: !434, line: 2241, type: !470)
!4397 = !DILocation(line: 2241, column: 19, scope: !4394)
!4398 = !DILocalVariable(name: "dst_lstat_sb", scope: !4394, file: !434, line: 2242, type: !469)
!4399 = !DILocation(line: 2242, column: 20, scope: !4394)
!4400 = !DILocation(line: 2246, column: 11, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4394, file: !434, line: 2246, column: 11)
!4402 = !DILocation(line: 2246, column: 11, scope: !4394)
!4403 = !DILocation(line: 2247, column: 22, scope: !4401)
!4404 = !DILocation(line: 2247, column: 9, scope: !4401)
!4405 = !DILocation(line: 2250, column: 22, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !434, line: 2250, column: 15)
!4407 = distinct !DILexicalBlock(scope: !4401, file: !434, line: 2249, column: 9)
!4408 = !DILocation(line: 2250, column: 15, scope: !4406)
!4409 = !DILocation(line: 2250, column: 42, scope: !4406)
!4410 = !DILocation(line: 2250, column: 15, scope: !4407)
!4411 = !DILocation(line: 2251, column: 26, scope: !4406)
!4412 = !DILocation(line: 2251, column: 13, scope: !4406)
!4413 = !DILocation(line: 2253, column: 22, scope: !4406)
!4414 = !DILocation(line: 2257, column: 11, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4394, file: !434, line: 2257, column: 11)
!4416 = !DILocation(line: 2258, column: 11, scope: !4415)
!4417 = !DILocation(line: 2258, column: 14, scope: !4415)
!4418 = !DILocation(line: 2259, column: 11, scope: !4415)
!4419 = !DILocation(line: 2259, column: 25, scope: !4415)
!4420 = !DILocation(line: 2259, column: 28, scope: !4415)
!4421 = !DILocation(line: 2259, column: 39, scope: !4415)
!4422 = !DILocation(line: 2259, column: 49, scope: !4415)
!4423 = !DILocation(line: 2259, column: 14, scope: !4415)
!4424 = !DILocation(line: 2257, column: 11, scope: !4394)
!4425 = !DILocation(line: 2262, column: 18, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4415, file: !434, line: 2260, column: 9)
!4427 = !DILocation(line: 2263, column: 18, scope: !4426)
!4428 = !DILocation(line: 2263, column: 43, scope: !4426)
!4429 = !DILocation(line: 2261, column: 11, scope: !4426)
!4430 = !DILocation(line: 2264, column: 11, scope: !4426)
!4431 = !DILocation(line: 2266, column: 5, scope: !4394)
!4432 = !DILocation(line: 2272, column: 7, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2272, column: 7)
!4434 = !DILocation(line: 2272, column: 10, scope: !4433)
!4435 = !DILocation(line: 2272, column: 18, scope: !4433)
!4436 = !DILocation(line: 2272, column: 22, scope: !4433)
!4437 = !DILocation(line: 2272, column: 25, scope: !4433)
!4438 = !DILocation(line: 2272, column: 35, scope: !4433)
!4439 = !DILocation(line: 2272, column: 39, scope: !4433)
!4440 = !DILocation(line: 2272, column: 7, scope: !3809)
!4441 = !DILocation(line: 2273, column: 19, scope: !4433)
!4442 = !DILocation(line: 2273, column: 29, scope: !4433)
!4443 = !DILocation(line: 2273, column: 39, scope: !4433)
!4444 = !DILocation(line: 2273, column: 5, scope: !4433)
!4445 = !DILocation(line: 2305, column: 7, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2305, column: 7)
!4447 = !DILocation(line: 2305, column: 20, scope: !4446)
!4448 = !DILocation(line: 2305, column: 7, scope: !3809)
!4449 = !DILocation(line: 2306, column: 18, scope: !4446)
!4450 = !DILocation(line: 2306, column: 5, scope: !4446)
!4451 = !DILocation(line: 2307, column: 12, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4446, file: !434, line: 2307, column: 12)
!4453 = !DILocation(line: 2307, column: 15, scope: !4452)
!4454 = !DILocation(line: 2307, column: 25, scope: !4452)
!4455 = !DILocation(line: 2307, column: 28, scope: !4452)
!4456 = !DILocation(line: 2307, column: 12, scope: !4446)
!4457 = !DILocation(line: 2309, column: 11, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !434, line: 2309, column: 11)
!4459 = distinct !DILexicalBlock(scope: !4452, file: !434, line: 2308, column: 5)
!4460 = !DILocation(line: 2309, column: 11, scope: !4459)
!4461 = !DILocation(line: 2310, column: 41, scope: !4458)
!4462 = !DILocation(line: 2310, column: 58, scope: !4458)
!4463 = !DILocation(line: 2310, column: 73, scope: !4458)
!4464 = !DILocation(line: 2310, column: 24, scope: !4458)
!4465 = !DILocation(line: 2310, column: 22, scope: !4458)
!4466 = !DILocation(line: 2310, column: 9, scope: !4458)
!4467 = !DILocation(line: 2312, column: 51, scope: !4458)
!4468 = !DILocation(line: 2312, column: 66, scope: !4458)
!4469 = !DILocation(line: 2312, column: 24, scope: !4458)
!4470 = !DILocation(line: 2312, column: 22, scope: !4458)
!4471 = !DILocation(line: 2313, column: 5, scope: !4459)
!4472 = !DILocation(line: 2314, column: 12, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4452, file: !434, line: 2314, column: 12)
!4474 = !DILocation(line: 2314, column: 15, scope: !4473)
!4475 = !DILocation(line: 2314, column: 25, scope: !4473)
!4476 = !DILocation(line: 2314, column: 35, scope: !4473)
!4477 = !DILocation(line: 2314, column: 44, scope: !4473)
!4478 = !DILocation(line: 2314, column: 12, scope: !4452)
!4479 = !DILocation(line: 2316, column: 49, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4473, file: !434, line: 2315, column: 5)
!4481 = !DILocation(line: 2316, column: 64, scope: !4480)
!4482 = !DILocation(line: 2316, column: 22, scope: !4480)
!4483 = !DILocation(line: 2316, column: 20, scope: !4480)
!4484 = !DILocation(line: 2317, column: 5, scope: !4480)
!4485 = !DILocation(line: 2318, column: 12, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4473, file: !434, line: 2318, column: 12)
!4487 = !DILocation(line: 2318, column: 15, scope: !4486)
!4488 = !DILocation(line: 2319, column: 12, scope: !4486)
!4489 = !DILocation(line: 2319, column: 16, scope: !4486)
!4490 = !DILocation(line: 2319, column: 19, scope: !4486)
!4491 = !DILocation(line: 2320, column: 12, scope: !4486)
!4492 = !DILocation(line: 2320, column: 27, scope: !4486)
!4493 = !DILocation(line: 2320, column: 18, scope: !4486)
!4494 = !DILocation(line: 2321, column: 16, scope: !4486)
!4495 = !DILocation(line: 2321, column: 20, scope: !4486)
!4496 = !DILocation(line: 2322, column: 20, scope: !4486)
!4497 = !DILocation(line: 2322, column: 23, scope: !4486)
!4498 = !DILocation(line: 2322, column: 26, scope: !4486)
!4499 = !DILocation(line: 2322, column: 38, scope: !4486)
!4500 = !DILocation(line: 2323, column: 16, scope: !4486)
!4501 = !DILocation(line: 2323, column: 19, scope: !4486)
!4502 = !DILocation(line: 2323, column: 22, scope: !4486)
!4503 = !DILocation(line: 2323, column: 34, scope: !4486)
!4504 = !DILocation(line: 2318, column: 12, scope: !4473)
!4505 = !DILocation(line: 2325, column: 39, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4486, file: !434, line: 2324, column: 5)
!4507 = !DILocation(line: 2325, column: 56, scope: !4506)
!4508 = !DILocation(line: 2325, column: 71, scope: !4506)
!4509 = !DILocation(line: 2325, column: 22, scope: !4506)
!4510 = !DILocation(line: 2325, column: 20, scope: !4506)
!4511 = !DILocation(line: 2326, column: 5, scope: !4506)
!4512 = !DILocation(line: 2331, column: 7, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2331, column: 7)
!4514 = !DILocation(line: 2331, column: 7, scope: !3809)
!4515 = !DILocation(line: 2336, column: 11, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !434, line: 2336, column: 11)
!4517 = distinct !DILexicalBlock(scope: !4513, file: !434, line: 2332, column: 5)
!4518 = !DILocation(line: 2336, column: 11, scope: !4517)
!4519 = !DILocation(line: 2340, column: 26, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !434, line: 2340, column: 15)
!4521 = distinct !DILexicalBlock(scope: !4516, file: !434, line: 2337, column: 9)
!4522 = !DILocation(line: 2340, column: 36, scope: !4520)
!4523 = !DILocation(line: 2340, column: 15, scope: !4520)
!4524 = !DILocation(line: 2340, column: 15, scope: !4521)
!4525 = !DILocation(line: 2342, column: 28, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4520, file: !434, line: 2341, column: 13)
!4527 = !DILocation(line: 2343, column: 22, scope: !4526)
!4528 = !DILocation(line: 2344, column: 22, scope: !4526)
!4529 = !DILocation(line: 2342, column: 15, scope: !4526)
!4530 = !DILocation(line: 2345, column: 16, scope: !4526)
!4531 = !DILocation(line: 2345, column: 31, scope: !4526)
!4532 = !DILocation(line: 2346, column: 15, scope: !4526)
!4533 = !DILocation(line: 2348, column: 31, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4520, file: !434, line: 2348, column: 20)
!4535 = !DILocation(line: 2348, column: 41, scope: !4534)
!4536 = !DILocation(line: 2348, column: 20, scope: !4534)
!4537 = !DILocation(line: 2348, column: 20, scope: !4520)
!4538 = !DILocation(line: 2350, column: 28, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !434, line: 2349, column: 13)
!4540 = !DILocation(line: 2352, column: 22, scope: !4539)
!4541 = !DILocation(line: 2350, column: 15, scope: !4539)
!4542 = !DILocation(line: 2357, column: 19, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 2357, column: 19)
!4544 = !DILocation(line: 2357, column: 22, scope: !4543)
!4545 = !DILocation(line: 2357, column: 32, scope: !4543)
!4546 = !DILocation(line: 2357, column: 35, scope: !4543)
!4547 = !DILocation(line: 2357, column: 19, scope: !4539)
!4548 = !DILocation(line: 2358, column: 18, scope: !4543)
!4549 = !DILocation(line: 2358, column: 35, scope: !4543)
!4550 = !DILocation(line: 2358, column: 17, scope: !4543)
!4551 = !DILocation(line: 2361, column: 15, scope: !4539)
!4552 = !DILocation(line: 2363, column: 20, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4534, file: !434, line: 2363, column: 20)
!4554 = !DILocation(line: 2363, column: 23, scope: !4553)
!4555 = !DILocation(line: 2363, column: 35, scope: !4553)
!4556 = !DILocation(line: 2364, column: 20, scope: !4553)
!4557 = !DILocation(line: 2364, column: 24, scope: !4553)
!4558 = !DILocation(line: 2365, column: 24, scope: !4553)
!4559 = !DILocation(line: 2365, column: 27, scope: !4553)
!4560 = !DILocation(line: 2365, column: 30, scope: !4553)
!4561 = !DILocation(line: 2365, column: 42, scope: !4553)
!4562 = !DILocation(line: 2363, column: 20, scope: !4534)
!4563 = !DILocation(line: 2373, column: 13, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4553, file: !434, line: 2366, column: 13)
!4565 = !DILocation(line: 2376, column: 28, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4553, file: !434, line: 2375, column: 13)
!4567 = !DILocation(line: 2377, column: 22, scope: !4566)
!4568 = !DILocation(line: 2377, column: 47, scope: !4566)
!4569 = !DILocation(line: 2376, column: 15, scope: !4566)
!4570 = !DILocation(line: 2378, column: 15, scope: !4566)
!4571 = !DILocation(line: 2380, column: 9, scope: !4521)
!4572 = !DILocation(line: 2383, column: 35, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !434, line: 2383, column: 15)
!4574 = distinct !DILexicalBlock(scope: !4516, file: !434, line: 2382, column: 9)
!4575 = !DILocation(line: 2383, column: 49, scope: !4573)
!4576 = !DILocation(line: 2383, column: 65, scope: !4573)
!4577 = !DILocation(line: 2383, column: 68, scope: !4573)
!4578 = !DILocation(line: 2384, column: 35, scope: !4573)
!4579 = !DILocation(line: 2383, column: 17, scope: !4573)
!4580 = !DILocation(line: 2383, column: 15, scope: !4574)
!4581 = !DILocation(line: 2385, column: 13, scope: !4573)
!4582 = !DILocation(line: 2387, column: 11, scope: !4574)
!4583 = !DILocation(line: 2389, column: 5, scope: !4517)
!4584 = !DILocation(line: 2391, column: 7, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2391, column: 7)
!4586 = !DILocation(line: 2391, column: 10, scope: !4585)
!4587 = !DILocation(line: 2391, column: 7, scope: !3809)
!4588 = !DILocation(line: 2393, column: 11, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2393, column: 11)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !434, line: 2392, column: 5)
!4591 = !DILocation(line: 2393, column: 24, scope: !4589)
!4592 = !DILocation(line: 2393, column: 11, scope: !4590)
!4593 = !DILocation(line: 2394, column: 32, scope: !4589)
!4594 = !DILocation(line: 2394, column: 42, scope: !4589)
!4595 = !DILocation(line: 2394, column: 24, scope: !4589)
!4596 = !DILocation(line: 2394, column: 52, scope: !4589)
!4597 = !DILocation(line: 2394, column: 63, scope: !4589)
!4598 = !DILocation(line: 2394, column: 22, scope: !4589)
!4599 = !DILocation(line: 2394, column: 9, scope: !4589)
!4600 = !DILocation(line: 2396, column: 11, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2396, column: 11)
!4602 = !DILocation(line: 2396, column: 24, scope: !4601)
!4603 = !DILocation(line: 2396, column: 11, scope: !4590)
!4604 = !DILocation(line: 2398, column: 15, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !434, line: 2398, column: 15)
!4606 = distinct !DILexicalBlock(scope: !4601, file: !434, line: 2397, column: 9)
!4607 = !DILocation(line: 2398, column: 18, scope: !4605)
!4608 = !DILocation(line: 2398, column: 15, scope: !4606)
!4609 = !DILocation(line: 2400, column: 23, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4605, file: !434, line: 2399, column: 13)
!4611 = !DILocation(line: 2400, column: 15, scope: !4610)
!4612 = !DILocation(line: 2401, column: 29, scope: !4610)
!4613 = !DILocation(line: 2401, column: 39, scope: !4610)
!4614 = !DILocation(line: 2401, column: 49, scope: !4610)
!4615 = !DILocation(line: 2401, column: 15, scope: !4610)
!4616 = !DILocation(line: 2402, column: 13, scope: !4610)
!4617 = !DILocation(line: 2404, column: 15, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4606, file: !434, line: 2404, column: 15)
!4619 = !DILocation(line: 2404, column: 18, scope: !4618)
!4620 = !DILocation(line: 2404, column: 15, scope: !4606)
!4621 = !DILocation(line: 2407, column: 45, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !434, line: 2405, column: 13)
!4623 = !DILocation(line: 2407, column: 68, scope: !4622)
!4624 = !DILocation(line: 2407, column: 22, scope: !4622)
!4625 = !DILocation(line: 2408, column: 13, scope: !4622)
!4626 = !DILocation(line: 2410, column: 15, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4606, file: !434, line: 2410, column: 15)
!4628 = !DILocation(line: 2410, column: 15, scope: !4606)
!4629 = !DILocation(line: 2411, column: 14, scope: !4627)
!4630 = !DILocation(line: 2411, column: 31, scope: !4627)
!4631 = !DILocation(line: 2411, column: 13, scope: !4627)
!4632 = !DILocation(line: 2413, column: 15, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4606, file: !434, line: 2413, column: 15)
!4634 = !DILocation(line: 2413, column: 32, scope: !4633)
!4635 = !DILocation(line: 2413, column: 36, scope: !4633)
!4636 = !DILocation(line: 2413, column: 39, scope: !4633)
!4637 = !DILocation(line: 2413, column: 15, scope: !4606)
!4638 = !DILocation(line: 2422, column: 28, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4633, file: !434, line: 2414, column: 13)
!4640 = !DILocation(line: 2422, column: 31, scope: !4639)
!4641 = !DILocation(line: 2422, column: 42, scope: !4639)
!4642 = !DILocation(line: 2422, column: 15, scope: !4639)
!4643 = !DILocation(line: 2423, column: 13, scope: !4639)
!4644 = !DILocation(line: 2425, column: 11, scope: !4606)
!4645 = !DILocation(line: 2433, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2433, column: 11)
!4647 = !DILocation(line: 2433, column: 24, scope: !4646)
!4648 = !DILocation(line: 2433, column: 11, scope: !4590)
!4649 = !DILocation(line: 2438, column: 24, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !434, line: 2434, column: 9)
!4651 = !DILocation(line: 2439, column: 18, scope: !4650)
!4652 = !DILocation(line: 2440, column: 18, scope: !4650)
!4653 = !DILocation(line: 2438, column: 11, scope: !4650)
!4654 = !DILocation(line: 2446, column: 12, scope: !4650)
!4655 = !DILocation(line: 2446, column: 27, scope: !4650)
!4656 = !DILocation(line: 2450, column: 11, scope: !4650)
!4657 = !DILocation(line: 2468, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2468, column: 11)
!4659 = !DILocation(line: 2468, column: 24, scope: !4658)
!4660 = !DILocation(line: 2468, column: 11, scope: !4590)
!4661 = !DILocation(line: 2480, column: 21, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4658, file: !434, line: 2469, column: 9)
!4663 = !DILocation(line: 2481, column: 18, scope: !4662)
!4664 = !DILocation(line: 2482, column: 18, scope: !4662)
!4665 = !DILocation(line: 2482, column: 43, scope: !4662)
!4666 = !DILocation(line: 2480, column: 11, scope: !4662)
!4667 = !DILocation(line: 2483, column: 34, scope: !4662)
!4668 = !DILocation(line: 2483, column: 49, scope: !4662)
!4669 = !DILocation(line: 2483, column: 11, scope: !4662)
!4670 = !DILocation(line: 2484, column: 11, scope: !4662)
!4671 = !DILocation(line: 2493, column: 12, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2493, column: 11)
!4673 = !DILocation(line: 2493, column: 40, scope: !4672)
!4674 = !DILocation(line: 2493, column: 33, scope: !4672)
!4675 = !DILocation(line: 2493, column: 60, scope: !4672)
!4676 = !DILocation(line: 2493, column: 52, scope: !4672)
!4677 = !DILocation(line: 2493, column: 71, scope: !4672)
!4678 = !DILocation(line: 2494, column: 11, scope: !4672)
!4679 = !DILocation(line: 2494, column: 14, scope: !4672)
!4680 = !DILocation(line: 2494, column: 20, scope: !4672)
!4681 = !DILocation(line: 2493, column: 11, scope: !4590)
!4682 = !DILocation(line: 2496, column: 21, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4672, file: !434, line: 2495, column: 9)
!4684 = !DILocation(line: 2497, column: 14, scope: !4683)
!4685 = !DILocation(line: 2498, column: 18, scope: !4683)
!4686 = !DILocation(line: 2498, column: 43, scope: !4683)
!4687 = !DILocation(line: 2496, column: 11, scope: !4683)
!4688 = !DILocation(line: 2499, column: 34, scope: !4683)
!4689 = !DILocation(line: 2499, column: 49, scope: !4683)
!4690 = !DILocation(line: 2499, column: 11, scope: !4683)
!4691 = !DILocation(line: 2500, column: 11, scope: !4683)
!4692 = !DILocation(line: 2503, column: 11, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4590, file: !434, line: 2503, column: 11)
!4694 = !DILocation(line: 2503, column: 14, scope: !4693)
!4695 = !DILocation(line: 2503, column: 22, scope: !4693)
!4696 = !DILocation(line: 2503, column: 26, scope: !4693)
!4697 = !DILocation(line: 2503, column: 11, scope: !4590)
!4698 = !DILocation(line: 2505, column: 19, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4693, file: !434, line: 2504, column: 9)
!4700 = !DILocation(line: 2505, column: 11, scope: !4699)
!4701 = !DILocation(line: 2506, column: 25, scope: !4699)
!4702 = !DILocation(line: 2506, column: 35, scope: !4699)
!4703 = !DILocation(line: 2506, column: 45, scope: !4699)
!4704 = !DILocation(line: 2506, column: 11, scope: !4699)
!4705 = !DILocation(line: 2507, column: 9, scope: !4699)
!4706 = !DILocation(line: 2508, column: 15, scope: !4590)
!4707 = !DILocation(line: 2509, column: 5, scope: !4590)
!4708 = !DILocation(line: 2515, column: 20, scope: !3809)
!4709 = !DILocation(line: 2515, column: 23, scope: !3809)
!4710 = !DILocation(line: 2515, column: 34, scope: !3809)
!4711 = !DILocation(line: 2515, column: 37, scope: !3809)
!4712 = !DILocation(line: 2515, column: 44, scope: !3809)
!4713 = !DILocation(line: 2515, column: 54, scope: !3809)
!4714 = !DILocation(line: 2515, column: 17, scope: !3809)
!4715 = !DILocation(line: 2517, column: 6, scope: !3809)
!4716 = !DILocation(line: 2518, column: 9, scope: !3809)
!4717 = !DILocation(line: 2518, column: 12, scope: !3809)
!4718 = !DILocation(line: 2519, column: 11, scope: !3809)
!4719 = !DILocation(line: 2518, column: 6, scope: !3809)
!4720 = !DILocation(line: 2516, column: 23, scope: !3809)
!4721 = !DILocation(line: 2522, column: 14, scope: !3809)
!4722 = !DILocation(line: 2528, column: 35, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2528, column: 7)
!4724 = !DILocation(line: 2528, column: 45, scope: !4723)
!4725 = !DILocation(line: 2528, column: 55, scope: !4723)
!4726 = !DILocation(line: 2528, column: 65, scope: !4723)
!4727 = !DILocation(line: 2528, column: 74, scope: !4723)
!4728 = !DILocation(line: 2528, column: 9, scope: !4723)
!4729 = !DILocation(line: 2528, column: 7, scope: !3809)
!4730 = !DILocation(line: 2529, column: 5, scope: !4723)
!4731 = !DILocation(line: 2531, column: 7, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2531, column: 7)
!4733 = !DILocation(line: 2531, column: 7, scope: !3809)
!4734 = !DILocalVariable(name: "dir", scope: !4735, file: !434, line: 2533, type: !501)
!4735 = distinct !DILexicalBlock(scope: !4732, file: !434, line: 2532, column: 5)
!4736 = !DILocation(line: 2533, column: 24, scope: !4735)
!4737 = !DILocation(line: 2540, column: 33, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !434, line: 2540, column: 11)
!4739 = !DILocation(line: 2540, column: 11, scope: !4738)
!4740 = !DILocation(line: 2540, column: 11, scope: !4735)
!4741 = !DILocation(line: 2542, column: 24, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4738, file: !434, line: 2541, column: 9)
!4743 = !DILocation(line: 2543, column: 18, scope: !4742)
!4744 = !DILocation(line: 2542, column: 11, scope: !4742)
!4745 = !DILocation(line: 2544, column: 11, scope: !4742)
!4746 = !DILocation(line: 2549, column: 13, scope: !4735)
!4747 = !DILocation(line: 2549, column: 11, scope: !4735)
!4748 = !DILocation(line: 2550, column: 21, scope: !4735)
!4749 = !DILocation(line: 2550, column: 7, scope: !4735)
!4750 = !DILocation(line: 2550, column: 12, scope: !4735)
!4751 = !DILocation(line: 2550, column: 19, scope: !4735)
!4752 = !DILocation(line: 2551, column: 25, scope: !4735)
!4753 = !DILocation(line: 2551, column: 7, scope: !4735)
!4754 = !DILocation(line: 2551, column: 12, scope: !4735)
!4755 = !DILocation(line: 2551, column: 16, scope: !4735)
!4756 = !DILocation(line: 2552, column: 25, scope: !4735)
!4757 = !DILocation(line: 2552, column: 7, scope: !4735)
!4758 = !DILocation(line: 2552, column: 12, scope: !4735)
!4759 = !DILocation(line: 2552, column: 16, scope: !4735)
!4760 = !DILocation(line: 2554, column: 11, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4735, file: !434, line: 2554, column: 11)
!4762 = !DILocation(line: 2554, column: 19, scope: !4761)
!4763 = !DILocation(line: 2554, column: 23, scope: !4761)
!4764 = !DILocation(line: 2554, column: 11, scope: !4735)
!4765 = !DILocation(line: 2560, column: 22, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 2560, column: 15)
!4767 = distinct !DILexicalBlock(scope: !4761, file: !434, line: 2555, column: 9)
!4768 = !DILocation(line: 2560, column: 32, scope: !4766)
!4769 = !DILocation(line: 2560, column: 49, scope: !4766)
!4770 = !DILocation(line: 2560, column: 48, scope: !4766)
!4771 = !DILocation(line: 2560, column: 46, scope: !4766)
!4772 = !DILocation(line: 2560, column: 15, scope: !4766)
!4773 = !DILocation(line: 2560, column: 70, scope: !4766)
!4774 = !DILocation(line: 2560, column: 15, scope: !4767)
!4775 = !DILocation(line: 2562, column: 25, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4766, file: !434, line: 2561, column: 13)
!4777 = !DILocation(line: 2562, column: 32, scope: !4776)
!4778 = !DILocation(line: 2563, column: 22, scope: !4776)
!4779 = !DILocation(line: 2562, column: 15, scope: !4776)
!4780 = !DILocation(line: 2564, column: 15, scope: !4776)
!4781 = !DILocation(line: 2571, column: 22, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 2571, column: 15)
!4783 = !DILocation(line: 2571, column: 15, scope: !4782)
!4784 = !DILocation(line: 2571, column: 41, scope: !4782)
!4785 = !DILocation(line: 2571, column: 15, scope: !4767)
!4786 = !DILocation(line: 2573, column: 25, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !434, line: 2572, column: 13)
!4788 = !DILocation(line: 2573, column: 32, scope: !4787)
!4789 = !DILocation(line: 2573, column: 53, scope: !4787)
!4790 = !DILocation(line: 2573, column: 15, scope: !4787)
!4791 = !DILocation(line: 2574, column: 15, scope: !4787)
!4792 = !DILocation(line: 2576, column: 28, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4782, file: !434, line: 2576, column: 20)
!4794 = !DILocation(line: 2576, column: 36, scope: !4793)
!4795 = !DILocation(line: 2576, column: 47, scope: !4793)
!4796 = !DILocation(line: 2576, column: 20, scope: !4782)
!4797 = !DILocation(line: 2580, column: 33, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4793, file: !434, line: 2577, column: 13)
!4799 = !DILocation(line: 2580, column: 24, scope: !4798)
!4800 = !DILocation(line: 2581, column: 32, scope: !4798)
!4801 = !DILocation(line: 2583, column: 27, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !434, line: 2583, column: 19)
!4803 = !DILocation(line: 2583, column: 37, scope: !4802)
!4804 = !DILocation(line: 2583, column: 46, scope: !4802)
!4805 = !DILocation(line: 2583, column: 19, scope: !4802)
!4806 = !DILocation(line: 2583, column: 57, scope: !4802)
!4807 = !DILocation(line: 2583, column: 19, scope: !4798)
!4808 = !DILocation(line: 2585, column: 29, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4802, file: !434, line: 2584, column: 17)
!4810 = !DILocation(line: 2585, column: 36, scope: !4809)
!4811 = !DILocation(line: 2586, column: 26, scope: !4809)
!4812 = !DILocation(line: 2585, column: 19, scope: !4809)
!4813 = !DILocation(line: 2587, column: 19, scope: !4809)
!4814 = !DILocation(line: 2589, column: 13, scope: !4798)
!4815 = !DILocation(line: 2595, column: 17, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 2595, column: 15)
!4817 = !DILocation(line: 2595, column: 16, scope: !4816)
!4818 = !DILocation(line: 2595, column: 15, scope: !4767)
!4819 = !DILocation(line: 2597, column: 32, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !434, line: 2596, column: 13)
!4821 = !DILocation(line: 2597, column: 49, scope: !4820)
!4822 = !DILocation(line: 2597, column: 64, scope: !4820)
!4823 = !DILocation(line: 2597, column: 15, scope: !4820)
!4824 = !DILocation(line: 2598, column: 16, scope: !4820)
!4825 = !DILocation(line: 2598, column: 55, scope: !4820)
!4826 = !DILocation(line: 2599, column: 13, scope: !4820)
!4827 = !DILocation(line: 2601, column: 15, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 2601, column: 15)
!4829 = !DILocation(line: 2601, column: 18, scope: !4828)
!4830 = !DILocation(line: 2601, column: 15, scope: !4767)
!4831 = !DILocation(line: 2603, column: 19, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !434, line: 2603, column: 19)
!4833 = distinct !DILexicalBlock(scope: !4828, file: !434, line: 2602, column: 13)
!4834 = !DILocation(line: 2603, column: 22, scope: !4832)
!4835 = !DILocation(line: 2603, column: 19, scope: !4833)
!4836 = !DILocation(line: 2604, column: 25, scope: !4832)
!4837 = !DILocation(line: 2604, column: 54, scope: !4832)
!4838 = !DILocation(line: 2604, column: 17, scope: !4832)
!4839 = !DILocation(line: 2606, column: 31, scope: !4832)
!4840 = !DILocation(line: 2606, column: 41, scope: !4832)
!4841 = !DILocation(line: 2606, column: 17, scope: !4832)
!4842 = !DILocation(line: 2607, column: 13, scope: !4833)
!4843 = !DILocation(line: 2608, column: 9, scope: !4767)
!4844 = !DILocation(line: 2611, column: 31, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4761, file: !434, line: 2610, column: 9)
!4846 = !DILocation(line: 2616, column: 15, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4845, file: !434, line: 2616, column: 15)
!4848 = !DILocation(line: 2616, column: 18, scope: !4847)
!4849 = !DILocation(line: 2616, column: 39, scope: !4847)
!4850 = !DILocation(line: 2616, column: 42, scope: !4847)
!4851 = !DILocation(line: 2616, column: 45, scope: !4847)
!4852 = !DILocation(line: 2616, column: 15, scope: !4845)
!4853 = !DILocation(line: 2617, column: 42, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4847, file: !434, line: 2617, column: 17)
!4855 = !DILocation(line: 2617, column: 52, scope: !4854)
!4856 = !DILocation(line: 2617, column: 55, scope: !4854)
!4857 = !DILocation(line: 2618, column: 49, scope: !4854)
!4858 = !DILocation(line: 2617, column: 19, scope: !4854)
!4859 = !DILocation(line: 2617, column: 17, scope: !4847)
!4860 = !DILocation(line: 2620, column: 21, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !434, line: 2620, column: 21)
!4862 = distinct !DILexicalBlock(scope: !4854, file: !434, line: 2619, column: 15)
!4863 = !DILocation(line: 2620, column: 24, scope: !4861)
!4864 = !DILocation(line: 2620, column: 21, scope: !4862)
!4865 = !DILocation(line: 2621, column: 19, scope: !4861)
!4866 = !DILocation(line: 2622, column: 15, scope: !4862)
!4867 = !DILocation(line: 2618, column: 50, scope: !4854)
!4868 = !DILocation(line: 2626, column: 11, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4735, file: !434, line: 2626, column: 11)
!4870 = !DILocation(line: 2626, column: 14, scope: !4869)
!4871 = !DILocation(line: 2626, column: 30, scope: !4869)
!4872 = !DILocation(line: 2626, column: 33, scope: !4869)
!4873 = !DILocation(line: 2626, column: 40, scope: !4869)
!4874 = !DILocation(line: 2626, column: 43, scope: !4869)
!4875 = !DILocation(line: 2626, column: 51, scope: !4869)
!4876 = !DILocation(line: 2626, column: 68, scope: !4869)
!4877 = !DILocation(line: 2626, column: 58, scope: !4869)
!4878 = !DILocation(line: 2626, column: 11, scope: !4735)
!4879 = !DILocation(line: 2630, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4869, file: !434, line: 2627, column: 9)
!4881 = !DILocation(line: 2637, column: 34, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4869, file: !434, line: 2632, column: 9)
!4883 = !DILocation(line: 2637, column: 44, scope: !4882)
!4884 = !DILocation(line: 2637, column: 54, scope: !4882)
!4885 = !DILocation(line: 2637, column: 72, scope: !4882)
!4886 = !DILocation(line: 2637, column: 77, scope: !4882)
!4887 = !DILocation(line: 2638, column: 34, scope: !4882)
!4888 = !DILocation(line: 2639, column: 34, scope: !4882)
!4889 = !DILocation(line: 2637, column: 24, scope: !4882)
!4890 = !DILocation(line: 2637, column: 22, scope: !4882)
!4891 = !DILocation(line: 2641, column: 5, scope: !4735)
!4892 = !DILocation(line: 2642, column: 12, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4732, file: !434, line: 2642, column: 12)
!4894 = !DILocation(line: 2642, column: 15, scope: !4893)
!4895 = !DILocation(line: 2642, column: 12, scope: !4732)
!4896 = !DILocation(line: 2644, column: 23, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4893, file: !434, line: 2643, column: 5)
!4898 = !DILocation(line: 2645, column: 12, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4897, file: !434, line: 2645, column: 11)
!4900 = !DILocation(line: 2645, column: 11, scope: !4899)
!4901 = !DILocation(line: 2645, column: 21, scope: !4899)
!4902 = !DILocation(line: 2645, column: 11, scope: !4897)
!4903 = !DILocalVariable(name: "dot_sb", scope: !4904, file: !434, line: 2648, type: !470)
!4904 = distinct !DILexicalBlock(scope: !4899, file: !434, line: 2646, column: 9)
!4905 = !DILocation(line: 2648, column: 23, scope: !4904)
!4906 = !DILocalVariable(name: "dst_parent_sb", scope: !4904, file: !434, line: 2649, type: !470)
!4907 = !DILocation(line: 2649, column: 23, scope: !4904)
!4908 = !DILocalVariable(name: "dst_parent", scope: !4904, file: !434, line: 2650, type: !7)
!4909 = !DILocation(line: 2650, column: 17, scope: !4904)
!4910 = !DILocalVariable(name: "in_current_dir", scope: !4904, file: !434, line: 2651, type: !139)
!4911 = !DILocation(line: 2651, column: 16, scope: !4904)
!4912 = !DILocation(line: 2653, column: 34, scope: !4904)
!4913 = !DILocation(line: 2653, column: 24, scope: !4904)
!4914 = !DILocation(line: 2653, column: 22, scope: !4904)
!4915 = !DILocation(line: 2655, column: 29, scope: !4904)
!4916 = !DILocation(line: 2659, column: 29, scope: !4904)
!4917 = !DILocation(line: 2659, column: 32, scope: !4904)
!4918 = !DILocation(line: 2659, column: 52, scope: !4904)
!4919 = !DILocation(line: 2660, column: 29, scope: !4904)
!4920 = !DILocation(line: 2660, column: 38, scope: !4904)
!4921 = !DILocation(line: 2660, column: 32, scope: !4904)
!4922 = !DILocation(line: 2660, column: 66, scope: !4904)
!4923 = !DILocation(line: 2661, column: 29, scope: !4904)
!4924 = !DILocation(line: 2661, column: 32, scope: !4904)
!4925 = !DILocation(line: 0, scope: !4904)
!4926 = !DILocation(line: 2655, column: 26, scope: !4904)
!4927 = !DILocation(line: 2662, column: 17, scope: !4904)
!4928 = !DILocation(line: 2662, column: 11, scope: !4904)
!4929 = !DILocation(line: 2664, column: 17, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4904, file: !434, line: 2664, column: 15)
!4931 = !DILocation(line: 2664, column: 15, scope: !4904)
!4932 = !DILocation(line: 2667, column: 12, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !434, line: 2665, column: 13)
!4934 = !DILocation(line: 2668, column: 22, scope: !4933)
!4935 = !DILocation(line: 2666, column: 15, scope: !4933)
!4936 = !DILocation(line: 2669, column: 15, scope: !4933)
!4937 = !DILocation(line: 2671, column: 9, scope: !4904)
!4938 = !DILocalVariable(name: "err", scope: !4897, file: !434, line: 2673, type: !5)
!4939 = !DILocation(line: 2673, column: 11, scope: !4897)
!4940 = !DILocation(line: 2673, column: 34, scope: !4897)
!4941 = !DILocation(line: 2673, column: 54, scope: !4897)
!4942 = !DILocation(line: 2674, column: 34, scope: !4897)
!4943 = !DILocation(line: 2674, column: 37, scope: !4897)
!4944 = !DILocation(line: 2673, column: 17, scope: !4897)
!4945 = !DILocation(line: 2675, column: 15, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4897, file: !434, line: 2675, column: 11)
!4947 = !DILocation(line: 2675, column: 13, scope: !4946)
!4948 = !DILocation(line: 2675, column: 11, scope: !4897)
!4949 = !DILocation(line: 2677, column: 21, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4946, file: !434, line: 2676, column: 9)
!4951 = !DILocation(line: 2677, column: 26, scope: !4950)
!4952 = !DILocation(line: 2678, column: 18, scope: !4950)
!4953 = !DILocation(line: 2678, column: 43, scope: !4950)
!4954 = !DILocation(line: 2677, column: 11, scope: !4950)
!4955 = !DILocation(line: 2679, column: 11, scope: !4950)
!4956 = !DILocation(line: 2681, column: 5, scope: !4897)
!4957 = !DILocation(line: 2696, column: 12, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4893, file: !434, line: 2696, column: 12)
!4959 = !DILocation(line: 2696, column: 15, scope: !4958)
!4960 = !DILocation(line: 2696, column: 12, scope: !4893)
!4961 = !DILocalVariable(name: "replace", scope: !4962, file: !434, line: 2700, type: !139)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !434, line: 2699, column: 5)
!4963 = !DILocation(line: 2700, column: 12, scope: !4962)
!4964 = !DILocation(line: 2700, column: 23, scope: !4962)
!4965 = !DILocation(line: 2700, column: 26, scope: !4962)
!4966 = !DILocation(line: 2701, column: 23, scope: !4962)
!4967 = !DILocation(line: 2701, column: 26, scope: !4962)
!4968 = !DILocation(line: 2701, column: 29, scope: !4962)
!4969 = !DILocation(line: 2701, column: 41, scope: !4962)
!4970 = !DILocation(line: 2702, column: 31, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4962, file: !434, line: 2702, column: 11)
!4972 = !DILocation(line: 2702, column: 41, scope: !4971)
!4973 = !DILocation(line: 2702, column: 51, scope: !4971)
!4974 = !DILocation(line: 2702, column: 67, scope: !4971)
!4975 = !DILocation(line: 2702, column: 13, scope: !4971)
!4976 = !DILocation(line: 2702, column: 11, scope: !4962)
!4977 = !DILocation(line: 2703, column: 9, scope: !4971)
!4978 = !DILocation(line: 2704, column: 5, scope: !4962)
!4979 = !DILocation(line: 2705, column: 12, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4958, file: !434, line: 2705, column: 12)
!4981 = !DILocation(line: 2706, column: 12, scope: !4980)
!4982 = !DILocation(line: 2706, column: 16, scope: !4980)
!4983 = !DILocation(line: 2706, column: 19, scope: !4980)
!4984 = !DILocation(line: 2706, column: 35, scope: !4980)
!4985 = !DILocation(line: 2706, column: 39, scope: !4980)
!4986 = !DILocation(line: 2705, column: 12, scope: !4958)
!4987 = !DILocation(line: 2708, column: 25, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4980, file: !434, line: 2707, column: 5)
!4989 = !DILocation(line: 2718, column: 23, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4988, file: !434, line: 2718, column: 11)
!4991 = !DILocation(line: 2718, column: 33, scope: !4990)
!4992 = !DILocation(line: 2718, column: 43, scope: !4990)
!4993 = !DILocation(line: 2718, column: 46, scope: !4990)
!4994 = !DILocation(line: 2718, column: 60, scope: !4990)
!4995 = !DILocation(line: 2719, column: 23, scope: !4990)
!4996 = !DILocation(line: 2718, column: 13, scope: !4990)
!4997 = !DILocation(line: 2718, column: 11, scope: !4988)
!4998 = !DILocation(line: 2720, column: 9, scope: !4990)
!4999 = !DILocation(line: 2721, column: 5, scope: !4988)
!5000 = !DILocation(line: 2722, column: 12, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4980, file: !434, line: 2722, column: 12)
!5002 = !DILocation(line: 2722, column: 12, scope: !4980)
!5003 = !DILocation(line: 2728, column: 18, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !434, line: 2728, column: 11)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !434, line: 2723, column: 5)
!5006 = !DILocation(line: 2728, column: 28, scope: !5004)
!5007 = !DILocation(line: 2728, column: 40, scope: !5004)
!5008 = !DILocation(line: 2728, column: 39, scope: !5004)
!5009 = !DILocation(line: 2728, column: 37, scope: !5004)
!5010 = !DILocation(line: 2728, column: 11, scope: !5004)
!5011 = !DILocation(line: 2728, column: 64, scope: !5004)
!5012 = !DILocation(line: 2728, column: 11, scope: !5005)
!5013 = !DILocation(line: 2729, column: 21, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5004, file: !434, line: 2729, column: 13)
!5015 = !DILocation(line: 2729, column: 31, scope: !5014)
!5016 = !DILocation(line: 2729, column: 40, scope: !5014)
!5017 = !DILocation(line: 2729, column: 54, scope: !5014)
!5018 = !DILocation(line: 2729, column: 53, scope: !5014)
!5019 = !DILocation(line: 2729, column: 51, scope: !5014)
!5020 = !DILocation(line: 2729, column: 13, scope: !5014)
!5021 = !DILocation(line: 2729, column: 75, scope: !5014)
!5022 = !DILocation(line: 2729, column: 13, scope: !5004)
!5023 = !DILocation(line: 2731, column: 23, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5014, file: !434, line: 2730, column: 11)
!5025 = !DILocation(line: 2731, column: 30, scope: !5024)
!5026 = !DILocation(line: 2731, column: 58, scope: !5024)
!5027 = !DILocation(line: 2731, column: 13, scope: !5024)
!5028 = !DILocation(line: 2732, column: 13, scope: !5024)
!5029 = !DILocation(line: 2729, column: 78, scope: !5014)
!5030 = !DILocation(line: 2734, column: 5, scope: !5005)
!5031 = !DILocation(line: 2735, column: 12, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5001, file: !434, line: 2735, column: 12)
!5033 = !DILocation(line: 2735, column: 31, scope: !5032)
!5034 = !DILocation(line: 2735, column: 34, scope: !5032)
!5035 = !DILocation(line: 2735, column: 53, scope: !5032)
!5036 = !DILocation(line: 2735, column: 56, scope: !5032)
!5037 = !DILocation(line: 2735, column: 12, scope: !5001)
!5038 = !DILocation(line: 2737, column: 18, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !434, line: 2737, column: 11)
!5040 = distinct !DILexicalBlock(scope: !5032, file: !434, line: 2736, column: 5)
!5041 = !DILocation(line: 2737, column: 28, scope: !5039)
!5042 = !DILocation(line: 2737, column: 40, scope: !5039)
!5043 = !DILocation(line: 2737, column: 39, scope: !5039)
!5044 = !DILocation(line: 2737, column: 37, scope: !5039)
!5045 = !DILocation(line: 2737, column: 68, scope: !5039)
!5046 = !DILocation(line: 2737, column: 11, scope: !5039)
!5047 = !DILocation(line: 2738, column: 11, scope: !5039)
!5048 = !DILocation(line: 2737, column: 11, scope: !5040)
!5049 = !DILocation(line: 2740, column: 21, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5039, file: !434, line: 2739, column: 9)
!5051 = !DILocation(line: 2740, column: 28, scope: !5050)
!5052 = !DILocation(line: 2741, column: 18, scope: !5050)
!5053 = !DILocation(line: 2740, column: 11, scope: !5050)
!5054 = !DILocation(line: 2742, column: 11, scope: !5050)
!5055 = !DILocation(line: 2744, column: 5, scope: !5040)
!5056 = !DILocation(line: 2745, column: 12, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5032, file: !434, line: 2745, column: 12)
!5058 = !DILocation(line: 2745, column: 12, scope: !5032)
!5059 = !DILocalVariable(name: "src_link_val", scope: !5060, file: !434, line: 2747, type: !7)
!5060 = distinct !DILexicalBlock(scope: !5057, file: !434, line: 2746, column: 5)
!5061 = !DILocation(line: 2747, column: 13, scope: !5060)
!5062 = !DILocation(line: 2747, column: 49, scope: !5060)
!5063 = !DILocation(line: 2747, column: 66, scope: !5060)
!5064 = !DILocation(line: 2747, column: 28, scope: !5060)
!5065 = !DILocation(line: 2748, column: 23, scope: !5060)
!5066 = !DILocation(line: 2749, column: 11, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5060, file: !434, line: 2749, column: 11)
!5068 = !DILocation(line: 2749, column: 24, scope: !5067)
!5069 = !DILocation(line: 2749, column: 11, scope: !5060)
!5070 = !DILocation(line: 2751, column: 21, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5067, file: !434, line: 2750, column: 9)
!5072 = !DILocation(line: 2751, column: 28, scope: !5071)
!5073 = !DILocation(line: 2752, column: 18, scope: !5071)
!5074 = !DILocation(line: 2751, column: 11, scope: !5071)
!5075 = !DILocation(line: 2753, column: 11, scope: !5071)
!5076 = !DILocalVariable(name: "symlink_err", scope: !5060, file: !434, line: 2756, type: !5)
!5077 = !DILocation(line: 2756, column: 11, scope: !5060)
!5078 = !DILocation(line: 2756, column: 42, scope: !5060)
!5079 = !DILocation(line: 2756, column: 66, scope: !5060)
!5080 = !DILocation(line: 2757, column: 42, scope: !5060)
!5081 = !DILocation(line: 2757, column: 45, scope: !5060)
!5082 = !DILocation(line: 2756, column: 25, scope: !5060)
!5083 = !DILocation(line: 2758, column: 15, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5060, file: !434, line: 2758, column: 11)
!5085 = !DILocation(line: 2758, column: 13, scope: !5084)
!5086 = !DILocation(line: 2758, column: 27, scope: !5084)
!5087 = !DILocation(line: 2758, column: 30, scope: !5084)
!5088 = !DILocation(line: 2758, column: 33, scope: !5084)
!5089 = !DILocation(line: 2758, column: 40, scope: !5084)
!5090 = !DILocation(line: 2758, column: 44, scope: !5084)
!5091 = !DILocation(line: 2758, column: 52, scope: !5084)
!5092 = !DILocation(line: 2758, column: 55, scope: !5084)
!5093 = !DILocation(line: 2759, column: 11, scope: !5084)
!5094 = !DILocation(line: 2759, column: 21, scope: !5084)
!5095 = !DILocation(line: 2759, column: 40, scope: !5084)
!5096 = !DILocation(line: 2759, column: 32, scope: !5084)
!5097 = !DILocation(line: 2759, column: 29, scope: !5084)
!5098 = !DILocation(line: 2758, column: 11, scope: !5060)
!5099 = !DILocalVariable(name: "dest_link_val", scope: !5100, file: !434, line: 2765, type: !7)
!5100 = distinct !DILexicalBlock(scope: !5084, file: !434, line: 2760, column: 9)
!5101 = !DILocation(line: 2765, column: 17, scope: !5100)
!5102 = !DILocation(line: 2766, column: 34, scope: !5100)
!5103 = !DILocation(line: 2766, column: 51, scope: !5100)
!5104 = !DILocation(line: 2766, column: 13, scope: !5100)
!5105 = !DILocation(line: 2767, column: 15, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5100, file: !434, line: 2767, column: 15)
!5107 = !DILocation(line: 2767, column: 15, scope: !5100)
!5108 = !DILocation(line: 2769, column: 19, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !434, line: 2769, column: 19)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !434, line: 2768, column: 13)
!5111 = !DILocation(line: 2769, column: 19, scope: !5110)
!5112 = !DILocation(line: 2770, column: 29, scope: !5109)
!5113 = !DILocation(line: 2770, column: 17, scope: !5109)
!5114 = !DILocation(line: 2771, column: 21, scope: !5110)
!5115 = !DILocation(line: 2771, column: 15, scope: !5110)
!5116 = !DILocation(line: 2772, column: 13, scope: !5110)
!5117 = !DILocation(line: 2773, column: 9, scope: !5100)
!5118 = !DILocation(line: 2774, column: 13, scope: !5060)
!5119 = !DILocation(line: 2774, column: 7, scope: !5060)
!5120 = !DILocation(line: 2775, column: 15, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5060, file: !434, line: 2775, column: 11)
!5122 = !DILocation(line: 2775, column: 13, scope: !5121)
!5123 = !DILocation(line: 2775, column: 11, scope: !5060)
!5124 = !DILocation(line: 2777, column: 21, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5121, file: !434, line: 2776, column: 9)
!5126 = !DILocation(line: 2777, column: 34, scope: !5125)
!5127 = !DILocation(line: 2778, column: 18, scope: !5125)
!5128 = !DILocation(line: 2777, column: 11, scope: !5125)
!5129 = !DILocation(line: 2779, column: 11, scope: !5125)
!5130 = !DILocation(line: 2782, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5060, file: !434, line: 2782, column: 11)
!5132 = !DILocation(line: 2782, column: 14, scope: !5131)
!5133 = !DILocation(line: 2782, column: 11, scope: !5060)
!5134 = !DILocation(line: 2783, column: 9, scope: !5131)
!5135 = !DILocation(line: 2785, column: 11, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5060, file: !434, line: 2785, column: 11)
!5137 = !DILocation(line: 2785, column: 14, scope: !5136)
!5138 = !DILocation(line: 2785, column: 11, scope: !5060)
!5139 = !DILocation(line: 2790, column: 26, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !434, line: 2789, column: 15)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !434, line: 2786, column: 9)
!5142 = !DILocation(line: 2790, column: 43, scope: !5140)
!5143 = !DILocation(line: 2790, column: 58, scope: !5140)
!5144 = !DILocation(line: 2790, column: 18, scope: !5140)
!5145 = !DILocation(line: 2790, column: 66, scope: !5140)
!5146 = !DILocation(line: 2791, column: 15, scope: !5140)
!5147 = !DILocation(line: 2791, column: 38, scope: !5140)
!5148 = !DILocation(line: 2791, column: 20, scope: !5140)
!5149 = !DILocation(line: 2789, column: 15, scope: !5141)
!5150 = !DILocation(line: 2793, column: 25, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5140, file: !434, line: 2792, column: 13)
!5152 = !DILocation(line: 2793, column: 32, scope: !5151)
!5153 = !DILocation(line: 2794, column: 22, scope: !5151)
!5154 = !DILocation(line: 2793, column: 15, scope: !5151)
!5155 = !DILocation(line: 2795, column: 19, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5151, file: !434, line: 2795, column: 19)
!5157 = !DILocation(line: 2795, column: 22, scope: !5156)
!5158 = !DILocation(line: 2795, column: 19, scope: !5151)
!5159 = !DILocation(line: 2796, column: 17, scope: !5156)
!5160 = !DILocation(line: 2797, column: 13, scope: !5151)
!5161 = !DILocation(line: 2805, column: 9, scope: !5141)
!5162 = !DILocation(line: 2806, column: 5, scope: !5060)
!5163 = !DILocation(line: 2809, column: 20, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5057, file: !434, line: 2808, column: 5)
!5165 = !DILocation(line: 2809, column: 51, scope: !5164)
!5166 = !DILocation(line: 2809, column: 7, scope: !5164)
!5167 = !DILocation(line: 2810, column: 7, scope: !5164)
!5168 = !DILocation(line: 2815, column: 8, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2815, column: 7)
!5170 = !DILocation(line: 2815, column: 16, scope: !5169)
!5171 = !DILocation(line: 2815, column: 20, scope: !5169)
!5172 = !DILocation(line: 2815, column: 23, scope: !5169)
!5173 = !DILocation(line: 2815, column: 39, scope: !5169)
!5174 = !DILocation(line: 2815, column: 43, scope: !5169)
!5175 = !DILocation(line: 2816, column: 7, scope: !5169)
!5176 = !DILocation(line: 2816, column: 11, scope: !5169)
!5177 = !DILocation(line: 2816, column: 14, scope: !5169)
!5178 = !DILocation(line: 2816, column: 35, scope: !5169)
!5179 = !DILocation(line: 2816, column: 38, scope: !5169)
!5180 = !DILocation(line: 2816, column: 41, scope: !5169)
!5181 = !DILocation(line: 2815, column: 7, scope: !3809)
!5182 = !DILocation(line: 2818, column: 36, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !434, line: 2818, column: 11)
!5184 = distinct !DILexicalBlock(scope: !5169, file: !434, line: 2817, column: 5)
!5185 = !DILocation(line: 2818, column: 46, scope: !5183)
!5186 = !DILocation(line: 2818, column: 49, scope: !5183)
!5187 = !DILocation(line: 2819, column: 43, scope: !5183)
!5188 = !DILocation(line: 2818, column: 13, scope: !5183)
!5189 = !DILocation(line: 2818, column: 11, scope: !5184)
!5190 = !DILocation(line: 2821, column: 16, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !434, line: 2821, column: 16)
!5192 = distinct !DILexicalBlock(scope: !5183, file: !434, line: 2820, column: 9)
!5193 = !DILocation(line: 2821, column: 19, scope: !5191)
!5194 = !DILocation(line: 2821, column: 16, scope: !5192)
!5195 = !DILocation(line: 2822, column: 14, scope: !5191)
!5196 = !DILocation(line: 2823, column: 9, scope: !5192)
!5197 = !DILocation(line: 2824, column: 5, scope: !5184)
!5198 = !DILocation(line: 2826, column: 7, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2826, column: 7)
!5200 = !DILocation(line: 2826, column: 24, scope: !5199)
!5201 = !DILocation(line: 2826, column: 27, scope: !5199)
!5202 = !DILocation(line: 2826, column: 30, scope: !5199)
!5203 = !DILocation(line: 2826, column: 7, scope: !3809)
!5204 = !DILocalVariable(name: "sb", scope: !5205, file: !434, line: 2830, type: !470)
!5205 = distinct !DILexicalBlock(scope: !5199, file: !434, line: 2827, column: 5)
!5206 = !DILocation(line: 2830, column: 19, scope: !5205)
!5207 = !DILocation(line: 2831, column: 18, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5205, file: !434, line: 2831, column: 11)
!5209 = !DILocation(line: 2831, column: 11, scope: !5208)
!5210 = !DILocation(line: 2831, column: 33, scope: !5208)
!5211 = !DILocation(line: 2831, column: 11, scope: !5205)
!5212 = !DILocation(line: 2832, column: 22, scope: !5208)
!5213 = !DILocation(line: 2832, column: 25, scope: !5208)
!5214 = !DILocation(line: 2832, column: 36, scope: !5208)
!5215 = !DILocation(line: 2832, column: 9, scope: !5208)
!5216 = !DILocation(line: 2833, column: 5, scope: !5205)
!5217 = !DILocation(line: 2837, column: 7, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2837, column: 7)
!5219 = !DILocation(line: 2837, column: 10, scope: !5218)
!5220 = !DILocation(line: 2837, column: 20, scope: !5218)
!5221 = !DILocation(line: 2837, column: 25, scope: !5218)
!5222 = !DILocation(line: 2837, column: 7, scope: !3809)
!5223 = !DILocation(line: 2840, column: 12, scope: !5218)
!5224 = !DILocation(line: 2840, column: 5, scope: !5218)
!5225 = !DILocation(line: 2842, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2842, column: 7)
!5227 = !DILocation(line: 2842, column: 7, scope: !3809)
!5228 = !DILocation(line: 2843, column: 12, scope: !5226)
!5229 = !DILocation(line: 2843, column: 5, scope: !5226)
!5230 = !DILocation(line: 2857, column: 7, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2857, column: 7)
!5232 = !DILocation(line: 2857, column: 10, scope: !5231)
!5233 = !DILocation(line: 2857, column: 7, scope: !3809)
!5234 = !DILocalVariable(name: "timespec", scope: !5235, file: !434, line: 2859, type: !518)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !434, line: 2858, column: 5)
!5236 = !DILocation(line: 2859, column: 23, scope: !5235)
!5237 = !DILocation(line: 2860, column: 7, scope: !5235)
!5238 = !DILocation(line: 2860, column: 21, scope: !5235)
!5239 = !DILocation(line: 2861, column: 7, scope: !5235)
!5240 = !DILocation(line: 2861, column: 21, scope: !5235)
!5241 = !DILocation(line: 2863, column: 12, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5235, file: !434, line: 2863, column: 11)
!5243 = !DILocation(line: 2864, column: 31, scope: !5242)
!5244 = !DILocation(line: 2864, column: 41, scope: !5242)
!5245 = !DILocation(line: 2864, column: 14, scope: !5242)
!5246 = !DILocation(line: 2865, column: 23, scope: !5242)
!5247 = !DILocation(line: 2865, column: 33, scope: !5242)
!5248 = !DILocation(line: 2865, column: 14, scope: !5242)
!5249 = !DILocation(line: 2866, column: 11, scope: !5242)
!5250 = !DILocation(line: 2863, column: 11, scope: !5235)
!5251 = !DILocation(line: 2868, column: 21, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5242, file: !434, line: 2867, column: 9)
!5253 = !DILocation(line: 2868, column: 28, scope: !5252)
!5254 = !DILocation(line: 2868, column: 58, scope: !5252)
!5255 = !DILocation(line: 2868, column: 11, scope: !5252)
!5256 = !DILocation(line: 2869, column: 15, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5252, file: !434, line: 2869, column: 15)
!5258 = !DILocation(line: 2869, column: 18, scope: !5257)
!5259 = !DILocation(line: 2869, column: 15, scope: !5252)
!5260 = !DILocation(line: 2870, column: 13, scope: !5257)
!5261 = !DILocation(line: 2871, column: 9, scope: !5252)
!5262 = !DILocation(line: 2872, column: 5, scope: !5235)
!5263 = !DILocation(line: 2875, column: 8, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2875, column: 7)
!5265 = !DILocation(line: 2875, column: 24, scope: !5264)
!5266 = !DILocation(line: 2875, column: 27, scope: !5264)
!5267 = !DILocation(line: 2875, column: 30, scope: !5264)
!5268 = !DILocation(line: 2876, column: 7, scope: !5264)
!5269 = !DILocation(line: 2876, column: 11, scope: !5264)
!5270 = !DILocation(line: 2876, column: 19, scope: !5264)
!5271 = !DILocation(line: 2876, column: 23, scope: !5264)
!5272 = !DILocation(line: 2875, column: 7, scope: !3809)
!5273 = !DILocation(line: 2878, column: 26, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5264, file: !434, line: 2877, column: 5)
!5275 = !DILocation(line: 2878, column: 29, scope: !5274)
!5276 = !DILocation(line: 2878, column: 52, scope: !5274)
!5277 = !DILocation(line: 2878, column: 15, scope: !5274)
!5278 = !DILocation(line: 2878, column: 7, scope: !5274)
!5279 = !DILocation(line: 2881, column: 11, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5274, file: !434, line: 2879, column: 9)
!5281 = !DILocation(line: 2884, column: 20, scope: !5280)
!5282 = !DILocation(line: 2885, column: 11, scope: !5280)
!5283 = !DILocation(line: 2887, column: 5, scope: !5274)
!5284 = !DILocation(line: 2890, column: 7, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2890, column: 7)
!5286 = !DILocation(line: 2890, column: 10, scope: !5285)
!5287 = !DILocation(line: 2890, column: 25, scope: !5285)
!5288 = !DILocation(line: 2890, column: 41, scope: !5285)
!5289 = !DILocation(line: 2890, column: 55, scope: !5285)
!5290 = !DILocation(line: 2890, column: 69, scope: !5285)
!5291 = !DILocation(line: 2890, column: 30, scope: !5285)
!5292 = !DILocation(line: 2891, column: 7, scope: !5285)
!5293 = !DILocation(line: 2891, column: 10, scope: !5285)
!5294 = !DILocation(line: 2891, column: 13, scope: !5285)
!5295 = !DILocation(line: 2890, column: 7, scope: !3809)
!5296 = !DILocation(line: 2892, column: 5, scope: !5285)
!5297 = !DILocation(line: 2895, column: 7, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2895, column: 7)
!5299 = !DILocation(line: 2895, column: 7, scope: !3809)
!5300 = !DILocation(line: 2896, column: 12, scope: !5298)
!5301 = !DILocation(line: 2896, column: 5, scope: !5298)
!5302 = !DILocation(line: 2898, column: 15, scope: !3809)
!5303 = !DILocation(line: 2898, column: 3, scope: !3809)
!5304 = !DILocation(line: 2900, column: 7, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2900, column: 7)
!5306 = !DILocation(line: 2900, column: 10, scope: !5305)
!5307 = !DILocation(line: 2900, column: 24, scope: !5305)
!5308 = !DILocation(line: 2900, column: 27, scope: !5305)
!5309 = !DILocation(line: 2900, column: 30, scope: !5305)
!5310 = !DILocation(line: 2900, column: 7, scope: !3809)
!5311 = !DILocation(line: 2902, column: 21, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !434, line: 2902, column: 11)
!5313 = distinct !DILexicalBlock(scope: !5305, file: !434, line: 2901, column: 5)
!5314 = !DILocation(line: 2902, column: 35, scope: !5312)
!5315 = !DILocation(line: 2902, column: 49, scope: !5312)
!5316 = !DILocation(line: 2902, column: 11, scope: !5312)
!5317 = !DILocation(line: 2902, column: 59, scope: !5312)
!5318 = !DILocation(line: 2903, column: 11, scope: !5312)
!5319 = !DILocation(line: 2903, column: 14, scope: !5312)
!5320 = !DILocation(line: 2903, column: 17, scope: !5312)
!5321 = !DILocation(line: 2902, column: 11, scope: !5313)
!5322 = !DILocation(line: 2904, column: 9, scope: !5312)
!5323 = !DILocation(line: 2905, column: 5, scope: !5313)
!5324 = !DILocation(line: 2906, column: 12, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5305, file: !434, line: 2906, column: 12)
!5326 = !DILocation(line: 2906, column: 15, scope: !5325)
!5327 = !DILocation(line: 2906, column: 12, scope: !5305)
!5328 = !DILocation(line: 2908, column: 20, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !434, line: 2908, column: 11)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !434, line: 2907, column: 5)
!5331 = !DILocation(line: 2908, column: 34, scope: !5329)
!5332 = !DILocation(line: 2908, column: 37, scope: !5329)
!5333 = !DILocation(line: 2908, column: 11, scope: !5329)
!5334 = !DILocation(line: 2908, column: 43, scope: !5329)
!5335 = !DILocation(line: 2908, column: 11, scope: !5330)
!5336 = !DILocation(line: 2909, column: 9, scope: !5329)
!5337 = !DILocation(line: 2910, column: 5, scope: !5330)
!5338 = !DILocation(line: 2911, column: 12, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5325, file: !434, line: 2911, column: 12)
!5340 = !DILocation(line: 2911, column: 15, scope: !5339)
!5341 = !DILocation(line: 2911, column: 41, scope: !5339)
!5342 = !DILocation(line: 2911, column: 44, scope: !5339)
!5343 = !DILocation(line: 2911, column: 12, scope: !5325)
!5344 = !DILocalVariable(name: "default_permissions", scope: !5345, file: !434, line: 2913, type: !5)
!5345 = distinct !DILexicalBlock(scope: !5339, file: !434, line: 2912, column: 5)
!5346 = !DILocation(line: 2913, column: 11, scope: !5345)
!5347 = !DILocation(line: 2913, column: 33, scope: !5345)
!5348 = !DILocation(line: 2913, column: 52, scope: !5345)
!5349 = !DILocation(line: 2913, column: 55, scope: !5345)
!5350 = !DILocation(line: 2915, column: 20, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5345, file: !434, line: 2915, column: 11)
!5352 = !DILocation(line: 2915, column: 34, scope: !5351)
!5353 = !DILocation(line: 2915, column: 57, scope: !5351)
!5354 = !DILocation(line: 2915, column: 56, scope: !5351)
!5355 = !DILocation(line: 2915, column: 54, scope: !5351)
!5356 = !DILocation(line: 2915, column: 11, scope: !5351)
!5357 = !DILocation(line: 2915, column: 74, scope: !5351)
!5358 = !DILocation(line: 2915, column: 11, scope: !5345)
!5359 = !DILocation(line: 2916, column: 9, scope: !5351)
!5360 = !DILocation(line: 2917, column: 5, scope: !5345)
!5361 = !DILocation(line: 2920, column: 11, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !434, line: 2920, column: 11)
!5363 = distinct !DILexicalBlock(scope: !5339, file: !434, line: 2919, column: 5)
!5364 = !DILocation(line: 2920, column: 11, scope: !5363)
!5365 = !DILocation(line: 2922, column: 36, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5362, file: !434, line: 2921, column: 9)
!5367 = !DILocation(line: 2922, column: 34, scope: !5366)
!5368 = !DILocation(line: 2922, column: 31, scope: !5366)
!5369 = !DILocation(line: 2924, column: 15, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5366, file: !434, line: 2924, column: 15)
!5371 = !DILocation(line: 2924, column: 35, scope: !5370)
!5372 = !DILocation(line: 2924, column: 39, scope: !5370)
!5373 = !DILocation(line: 2924, column: 15, scope: !5366)
!5374 = !DILocation(line: 2932, column: 19, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !434, line: 2932, column: 19)
!5376 = distinct !DILexicalBlock(scope: !5370, file: !434, line: 2925, column: 13)
!5377 = !DILocation(line: 2932, column: 27, scope: !5375)
!5378 = !DILocation(line: 2932, column: 37, scope: !5375)
!5379 = !DILocation(line: 2932, column: 30, scope: !5375)
!5380 = !DILocation(line: 2932, column: 56, scope: !5375)
!5381 = !DILocation(line: 2932, column: 19, scope: !5376)
!5382 = !DILocation(line: 2934, column: 29, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5375, file: !434, line: 2933, column: 17)
!5384 = !DILocation(line: 2934, column: 36, scope: !5383)
!5385 = !DILocation(line: 2934, column: 57, scope: !5383)
!5386 = !DILocation(line: 2934, column: 19, scope: !5383)
!5387 = !DILocation(line: 2935, column: 19, scope: !5383)
!5388 = !DILocation(line: 2937, column: 33, scope: !5376)
!5389 = !DILocation(line: 2937, column: 24, scope: !5376)
!5390 = !DILocation(line: 2938, column: 19, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5376, file: !434, line: 2938, column: 19)
!5392 = !DILocation(line: 2938, column: 42, scope: !5391)
!5393 = !DILocation(line: 2938, column: 41, scope: !5391)
!5394 = !DILocation(line: 2938, column: 39, scope: !5391)
!5395 = !DILocation(line: 2938, column: 19, scope: !5376)
!5396 = !DILocation(line: 2939, column: 34, scope: !5391)
!5397 = !DILocation(line: 2939, column: 17, scope: !5391)
!5398 = !DILocation(line: 2940, column: 13, scope: !5376)
!5399 = !DILocation(line: 2941, column: 9, scope: !5366)
!5400 = !DILocation(line: 2943, column: 11, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5363, file: !434, line: 2943, column: 11)
!5402 = !DILocation(line: 2943, column: 11, scope: !5363)
!5403 = !DILocation(line: 2945, column: 23, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !434, line: 2945, column: 15)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !434, line: 2944, column: 9)
!5406 = !DILocation(line: 2945, column: 33, scope: !5404)
!5407 = !DILocation(line: 2945, column: 44, scope: !5404)
!5408 = !DILocation(line: 2945, column: 42, scope: !5404)
!5409 = !DILocation(line: 2945, column: 15, scope: !5404)
!5410 = !DILocation(line: 2945, column: 65, scope: !5404)
!5411 = !DILocation(line: 2945, column: 15, scope: !5405)
!5412 = !DILocation(line: 2947, column: 25, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5404, file: !434, line: 2946, column: 13)
!5414 = !DILocation(line: 2947, column: 32, scope: !5413)
!5415 = !DILocation(line: 2948, column: 22, scope: !5413)
!5416 = !DILocation(line: 2947, column: 15, scope: !5413)
!5417 = !DILocation(line: 2949, column: 19, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5413, file: !434, line: 2949, column: 19)
!5419 = !DILocation(line: 2949, column: 22, scope: !5418)
!5420 = !DILocation(line: 2949, column: 19, scope: !5413)
!5421 = !DILocation(line: 2950, column: 17, scope: !5418)
!5422 = !DILocation(line: 2951, column: 13, scope: !5413)
!5423 = !DILocation(line: 2952, column: 9, scope: !5405)
!5424 = !DILocation(line: 2955, column: 10, scope: !3809)
!5425 = !DILocation(line: 2955, column: 3, scope: !3809)
!5426 = !DILabel(scope: !3809, name: "un_backup", file: !434, line: 2957)
!5427 = !DILocation(line: 2957, column: 1, scope: !3809)
!5428 = !DILocation(line: 2959, column: 7, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2959, column: 7)
!5430 = !DILocation(line: 2959, column: 10, scope: !5429)
!5431 = !DILocation(line: 2959, column: 7, scope: !3809)
!5432 = !DILocation(line: 2960, column: 5, scope: !5429)
!5433 = !DILocation(line: 2968, column: 7, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2968, column: 7)
!5435 = !DILocation(line: 2968, column: 20, scope: !5434)
!5436 = !DILocation(line: 2968, column: 7, scope: !3809)
!5437 = !DILocation(line: 2969, column: 28, scope: !5434)
!5438 = !DILocation(line: 2969, column: 43, scope: !5434)
!5439 = !DILocation(line: 2969, column: 5, scope: !5434)
!5440 = !DILocation(line: 2971, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !3809, file: !434, line: 2971, column: 7)
!5442 = !DILocation(line: 2971, column: 7, scope: !3809)
!5443 = !DILocation(line: 2973, column: 19, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !434, line: 2973, column: 11)
!5445 = distinct !DILexicalBlock(scope: !5441, file: !434, line: 2972, column: 5)
!5446 = !DILocation(line: 2973, column: 31, scope: !5444)
!5447 = !DILocation(line: 2973, column: 11, scope: !5444)
!5448 = !DILocation(line: 2973, column: 41, scope: !5444)
!5449 = !DILocation(line: 2973, column: 11, scope: !5445)
!5450 = !DILocation(line: 2974, column: 19, scope: !5444)
!5451 = !DILocation(line: 2974, column: 26, scope: !5444)
!5452 = !DILocation(line: 2974, column: 52, scope: !5444)
!5453 = !DILocation(line: 2974, column: 9, scope: !5444)
!5454 = !DILocation(line: 2977, column: 15, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !434, line: 2977, column: 15)
!5456 = distinct !DILexicalBlock(scope: !5444, file: !434, line: 2976, column: 9)
!5457 = !DILocation(line: 2977, column: 18, scope: !5455)
!5458 = !DILocation(line: 2977, column: 15, scope: !5456)
!5459 = !DILocation(line: 2978, column: 21, scope: !5455)
!5460 = !DILocation(line: 2979, column: 21, scope: !5455)
!5461 = !DILocation(line: 2979, column: 48, scope: !5455)
!5462 = !DILocation(line: 2978, column: 13, scope: !5455)
!5463 = !DILocation(line: 2981, column: 5, scope: !5445)
!5464 = !DILocation(line: 2982, column: 3, scope: !3809)
!5465 = !DILocation(line: 2983, column: 1, scope: !3809)
!5466 = distinct !DISubprogram(name: "follow_fstatat", scope: !434, file: !434, line: 158, type: !5467, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!5, !5, !180, !469, !5}
!5469 = !DILocalVariable(name: "dirfd", arg: 1, scope: !5466, file: !434, line: 158, type: !5)
!5470 = !DILocation(line: 158, column: 21, scope: !5466)
!5471 = !DILocalVariable(name: "filename", arg: 2, scope: !5466, file: !434, line: 158, type: !180)
!5472 = !DILocation(line: 158, column: 40, scope: !5466)
!5473 = !DILocalVariable(name: "st", arg: 3, scope: !5466, file: !434, line: 158, type: !469)
!5474 = !DILocation(line: 158, column: 63, scope: !5466)
!5475 = !DILocalVariable(name: "flags", arg: 4, scope: !5466, file: !434, line: 158, type: !5)
!5476 = !DILocation(line: 158, column: 71, scope: !5466)
!5477 = !DILocalVariable(name: "result", scope: !5466, file: !434, line: 160, type: !5)
!5478 = !DILocation(line: 160, column: 7, scope: !5466)
!5479 = !DILocation(line: 160, column: 25, scope: !5466)
!5480 = !DILocation(line: 160, column: 32, scope: !5466)
!5481 = !DILocation(line: 160, column: 42, scope: !5466)
!5482 = !DILocation(line: 160, column: 46, scope: !5466)
!5483 = !DILocation(line: 160, column: 16, scope: !5466)
!5484 = !DILocation(line: 183, column: 10, scope: !5466)
!5485 = !DILocation(line: 183, column: 3, scope: !5466)
!5486 = distinct !DISubprogram(name: "should_dereference", scope: !434, file: !434, line: 1840, type: !5487, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!139, !3505, !139}
!5489 = !DILocalVariable(name: "x", arg: 1, scope: !5486, file: !434, line: 1840, type: !3505)
!5490 = !DILocation(line: 1840, column: 46, scope: !5486)
!5491 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !5486, file: !434, line: 1840, type: !139)
!5492 = !DILocation(line: 1840, column: 54, scope: !5486)
!5493 = !DILocation(line: 1842, column: 10, scope: !5486)
!5494 = !DILocation(line: 1842, column: 13, scope: !5486)
!5495 = !DILocation(line: 1842, column: 25, scope: !5486)
!5496 = !DILocation(line: 1843, column: 10, scope: !5486)
!5497 = !DILocation(line: 1843, column: 14, scope: !5486)
!5498 = !DILocation(line: 1843, column: 17, scope: !5486)
!5499 = !DILocation(line: 1843, column: 29, scope: !5486)
!5500 = !DILocation(line: 1844, column: 14, scope: !5486)
!5501 = !DILocation(line: 1844, column: 17, scope: !5486)
!5502 = !DILocation(line: 0, scope: !5486)
!5503 = !DILocation(line: 1842, column: 3, scope: !5486)
!5504 = distinct !DISubprogram(name: "same_file_ok", scope: !434, file: !434, line: 1464, type: !5505, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!139, !180, !519, !180, !519, !3505, !3769}
!5507 = !DILocalVariable(name: "src_name", arg: 1, scope: !5504, file: !434, line: 1464, type: !180)
!5508 = !DILocation(line: 1464, column: 27, scope: !5504)
!5509 = !DILocalVariable(name: "src_sb", arg: 2, scope: !5504, file: !434, line: 1464, type: !519)
!5510 = !DILocation(line: 1464, column: 56, scope: !5504)
!5511 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5504, file: !434, line: 1465, type: !180)
!5512 = !DILocation(line: 1465, column: 27, scope: !5504)
!5513 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !5504, file: !434, line: 1465, type: !519)
!5514 = !DILocation(line: 1465, column: 56, scope: !5504)
!5515 = !DILocalVariable(name: "x", arg: 5, scope: !5504, file: !434, line: 1466, type: !3505)
!5516 = !DILocation(line: 1466, column: 40, scope: !5504)
!5517 = !DILocalVariable(name: "return_now", arg: 6, scope: !5504, file: !434, line: 1466, type: !3769)
!5518 = !DILocation(line: 1466, column: 49, scope: !5504)
!5519 = !DILocalVariable(name: "src_sb_link", scope: !5504, file: !434, line: 1468, type: !519)
!5520 = !DILocation(line: 1468, column: 22, scope: !5504)
!5521 = !DILocalVariable(name: "dst_sb_link", scope: !5504, file: !434, line: 1469, type: !519)
!5522 = !DILocation(line: 1469, column: 22, scope: !5504)
!5523 = !DILocalVariable(name: "tmp_dst_sb", scope: !5504, file: !434, line: 1470, type: !470)
!5524 = !DILocation(line: 1470, column: 15, scope: !5504)
!5525 = !DILocalVariable(name: "tmp_src_sb", scope: !5504, file: !434, line: 1471, type: !470)
!5526 = !DILocation(line: 1471, column: 15, scope: !5504)
!5527 = !DILocalVariable(name: "same_link", scope: !5504, file: !434, line: 1473, type: !139)
!5528 = !DILocation(line: 1473, column: 8, scope: !5504)
!5529 = !DILocalVariable(name: "same", scope: !5504, file: !434, line: 1474, type: !139)
!5530 = !DILocation(line: 1474, column: 8, scope: !5504)
!5531 = !DILocation(line: 1474, column: 15, scope: !5504)
!5532 = !DILocation(line: 0, scope: !5504)
!5533 = !DILocation(line: 1476, column: 4, scope: !5504)
!5534 = !DILocation(line: 1476, column: 15, scope: !5504)
!5535 = !DILocation(line: 1483, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1483, column: 7)
!5537 = !DILocation(line: 1483, column: 12, scope: !5536)
!5538 = !DILocation(line: 1483, column: 15, scope: !5536)
!5539 = !DILocation(line: 1483, column: 18, scope: !5536)
!5540 = !DILocation(line: 1483, column: 7, scope: !5504)
!5541 = !DILocation(line: 1485, column: 8, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5536, file: !434, line: 1484, column: 5)
!5543 = !DILocation(line: 1485, column: 19, scope: !5542)
!5544 = !DILocation(line: 1486, column: 7, scope: !5542)
!5545 = !DILocation(line: 1489, column: 7, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1489, column: 7)
!5547 = !DILocation(line: 1489, column: 10, scope: !5546)
!5548 = !DILocation(line: 1489, column: 22, scope: !5546)
!5549 = !DILocation(line: 1489, column: 7, scope: !5504)
!5550 = !DILocation(line: 1491, column: 19, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5546, file: !434, line: 1490, column: 5)
!5552 = !DILocation(line: 1491, column: 17, scope: !5551)
!5553 = !DILocation(line: 1496, column: 11, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5551, file: !434, line: 1496, column: 11)
!5555 = !DILocation(line: 1496, column: 37, scope: !5554)
!5556 = !DILocation(line: 1496, column: 40, scope: !5554)
!5557 = !DILocation(line: 1496, column: 11, scope: !5551)
!5558 = !DILocalVariable(name: "sn", scope: !5559, file: !434, line: 1498, type: !139)
!5559 = distinct !DILexicalBlock(scope: !5554, file: !434, line: 1497, column: 9)
!5560 = !DILocation(line: 1498, column: 16, scope: !5559)
!5561 = !DILocation(line: 1498, column: 32, scope: !5559)
!5562 = !DILocation(line: 1498, column: 42, scope: !5559)
!5563 = !DILocation(line: 1498, column: 21, scope: !5559)
!5564 = !DILocation(line: 1499, column: 18, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !434, line: 1499, column: 16)
!5566 = !DILocation(line: 1499, column: 16, scope: !5559)
!5567 = !DILocation(line: 1502, column: 19, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !434, line: 1502, column: 19)
!5569 = distinct !DILexicalBlock(scope: !5565, file: !434, line: 1500, column: 13)
!5570 = !DILocation(line: 1502, column: 22, scope: !5568)
!5571 = !DILocation(line: 1502, column: 34, scope: !5568)
!5572 = !DILocation(line: 1502, column: 19, scope: !5569)
!5573 = !DILocation(line: 1503, column: 17, scope: !5568)
!5574 = !DILocation(line: 1509, column: 19, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5569, file: !434, line: 1509, column: 19)
!5576 = !DILocation(line: 1509, column: 19, scope: !5569)
!5577 = !DILocation(line: 1511, column: 20, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !434, line: 1510, column: 17)
!5579 = !DILocation(line: 1511, column: 31, scope: !5578)
!5580 = !DILocation(line: 1512, column: 28, scope: !5578)
!5581 = !DILocation(line: 1512, column: 31, scope: !5578)
!5582 = !DILocation(line: 1512, column: 26, scope: !5578)
!5583 = !DILocation(line: 1512, column: 19, scope: !5578)
!5584 = !DILocation(line: 1514, column: 13, scope: !5569)
!5585 = !DILocation(line: 1516, column: 20, scope: !5559)
!5586 = !DILocation(line: 1516, column: 18, scope: !5559)
!5587 = !DILocation(line: 1516, column: 11, scope: !5559)
!5588 = !DILocation(line: 1519, column: 21, scope: !5551)
!5589 = !DILocation(line: 1519, column: 19, scope: !5551)
!5590 = !DILocation(line: 1520, column: 21, scope: !5551)
!5591 = !DILocation(line: 1520, column: 19, scope: !5551)
!5592 = !DILocation(line: 1521, column: 5, scope: !5551)
!5593 = !DILocation(line: 1524, column: 12, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !434, line: 1524, column: 11)
!5595 = distinct !DILexicalBlock(scope: !5546, file: !434, line: 1523, column: 5)
!5596 = !DILocation(line: 1524, column: 11, scope: !5595)
!5597 = !DILocation(line: 1525, column: 9, scope: !5594)
!5598 = !DILocation(line: 1527, column: 18, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5595, file: !434, line: 1527, column: 11)
!5600 = !DILocation(line: 1527, column: 11, scope: !5599)
!5601 = !DILocation(line: 1527, column: 41, scope: !5599)
!5602 = !DILocation(line: 1528, column: 11, scope: !5599)
!5603 = !DILocation(line: 1528, column: 21, scope: !5599)
!5604 = !DILocation(line: 1528, column: 14, scope: !5599)
!5605 = !DILocation(line: 1528, column: 44, scope: !5599)
!5606 = !DILocation(line: 1527, column: 11, scope: !5595)
!5607 = !DILocation(line: 1529, column: 9, scope: !5599)
!5608 = !DILocation(line: 1531, column: 19, scope: !5595)
!5609 = !DILocation(line: 1532, column: 19, scope: !5595)
!5610 = !DILocation(line: 1534, column: 19, scope: !5595)
!5611 = !DILocation(line: 0, scope: !5595)
!5612 = !DILocation(line: 1534, column: 17, scope: !5595)
!5613 = !DILocation(line: 1541, column: 11, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5595, file: !434, line: 1541, column: 11)
!5615 = !DILocation(line: 1541, column: 42, scope: !5614)
!5616 = !DILocation(line: 1541, column: 45, scope: !5614)
!5617 = !DILocation(line: 1542, column: 11, scope: !5614)
!5618 = !DILocation(line: 1542, column: 14, scope: !5614)
!5619 = !DILocation(line: 1542, column: 17, scope: !5614)
!5620 = !DILocation(line: 1541, column: 11, scope: !5595)
!5621 = !DILocation(line: 1543, column: 9, scope: !5614)
!5622 = !DILocation(line: 1551, column: 7, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1551, column: 7)
!5624 = !DILocation(line: 1551, column: 10, scope: !5623)
!5625 = !DILocation(line: 1551, column: 22, scope: !5623)
!5626 = !DILocation(line: 1551, column: 7, scope: !5504)
!5627 = !DILocation(line: 1553, column: 12, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !434, line: 1553, column: 11)
!5629 = distinct !DILexicalBlock(scope: !5623, file: !434, line: 1552, column: 5)
!5630 = !DILocation(line: 1553, column: 11, scope: !5629)
!5631 = !DILocation(line: 1571, column: 18, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !434, line: 1571, column: 16)
!5633 = distinct !DILexicalBlock(scope: !5628, file: !434, line: 1554, column: 9)
!5634 = !DILocation(line: 1571, column: 21, scope: !5632)
!5635 = !DILocation(line: 1572, column: 16, scope: !5632)
!5636 = !DILocation(line: 1572, column: 19, scope: !5632)
!5637 = !DILocation(line: 1572, column: 22, scope: !5632)
!5638 = !DILocation(line: 1572, column: 34, scope: !5632)
!5639 = !DILocation(line: 1573, column: 16, scope: !5632)
!5640 = !DILocation(line: 1573, column: 19, scope: !5632)
!5641 = !DILocation(line: 1574, column: 16, scope: !5632)
!5642 = !DILocation(line: 1574, column: 21, scope: !5632)
!5643 = !DILocation(line: 1571, column: 16, scope: !5633)
!5644 = !DILocation(line: 1575, column: 13, scope: !5632)
!5645 = !DILocation(line: 1577, column: 11, scope: !5633)
!5646 = !DILocation(line: 1581, column: 27, scope: !5629)
!5647 = !DILocation(line: 1581, column: 37, scope: !5629)
!5648 = !DILocation(line: 1581, column: 16, scope: !5629)
!5649 = !DILocation(line: 1581, column: 14, scope: !5629)
!5650 = !DILocation(line: 1581, column: 7, scope: !5629)
!5651 = !DILocation(line: 1601, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1601, column: 7)
!5653 = !DILocation(line: 1601, column: 10, scope: !5652)
!5654 = !DILocation(line: 1601, column: 20, scope: !5652)
!5655 = !DILocation(line: 1601, column: 23, scope: !5652)
!5656 = !DILocation(line: 1601, column: 26, scope: !5652)
!5657 = !DILocation(line: 1601, column: 7, scope: !5504)
!5658 = !DILocation(line: 1607, column: 11, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !434, line: 1607, column: 11)
!5660 = distinct !DILexicalBlock(scope: !5652, file: !434, line: 1602, column: 5)
!5661 = !DILocation(line: 1607, column: 11, scope: !5660)
!5662 = !DILocation(line: 1608, column: 9, scope: !5659)
!5663 = !DILocation(line: 1612, column: 11, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5660, file: !434, line: 1612, column: 11)
!5665 = !DILocation(line: 1613, column: 11, scope: !5664)
!5666 = !DILocation(line: 1613, column: 18, scope: !5664)
!5667 = !DILocation(line: 1613, column: 31, scope: !5664)
!5668 = !DILocation(line: 1613, column: 16, scope: !5664)
!5669 = !DILocation(line: 1614, column: 11, scope: !5664)
!5670 = !DILocation(line: 1614, column: 27, scope: !5664)
!5671 = !DILocation(line: 1614, column: 37, scope: !5664)
!5672 = !DILocation(line: 1614, column: 16, scope: !5664)
!5673 = !DILocation(line: 1612, column: 11, scope: !5660)
!5674 = !DILocation(line: 1615, column: 18, scope: !5664)
!5675 = !DILocation(line: 1615, column: 21, scope: !5664)
!5676 = !DILocation(line: 1615, column: 16, scope: !5664)
!5677 = !DILocation(line: 1615, column: 9, scope: !5664)
!5678 = !DILocation(line: 1616, column: 5, scope: !5660)
!5679 = !DILocation(line: 1620, column: 8, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1620, column: 7)
!5681 = !DILocation(line: 1620, column: 39, scope: !5680)
!5682 = !DILocation(line: 1620, column: 43, scope: !5680)
!5683 = !DILocation(line: 1620, column: 7, scope: !5504)
!5684 = !DILocation(line: 1622, column: 12, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !434, line: 1622, column: 11)
!5686 = distinct !DILexicalBlock(scope: !5680, file: !434, line: 1621, column: 5)
!5687 = !DILocation(line: 1622, column: 11, scope: !5686)
!5688 = !DILocation(line: 1623, column: 9, scope: !5685)
!5689 = !DILocation(line: 1626, column: 11, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5686, file: !434, line: 1626, column: 11)
!5691 = !DILocation(line: 1626, column: 14, scope: !5690)
!5692 = !DILocation(line: 1626, column: 11, scope: !5686)
!5693 = !DILocation(line: 1628, column: 12, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !434, line: 1627, column: 9)
!5695 = !DILocation(line: 1628, column: 23, scope: !5694)
!5696 = !DILocation(line: 1629, column: 11, scope: !5694)
!5697 = !DILocation(line: 1631, column: 5, scope: !5686)
!5698 = !DILocation(line: 1653, column: 7, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1653, column: 7)
!5700 = !DILocation(line: 1653, column: 10, scope: !5699)
!5701 = !DILocation(line: 1654, column: 7, scope: !5699)
!5702 = !DILocation(line: 1654, column: 10, scope: !5699)
!5703 = !DILocation(line: 1655, column: 7, scope: !5699)
!5704 = !DILocation(line: 1655, column: 14, scope: !5699)
!5705 = !DILocation(line: 1655, column: 27, scope: !5699)
!5706 = !DILocation(line: 1655, column: 12, scope: !5699)
!5707 = !DILocation(line: 1653, column: 7, scope: !5504)
!5708 = !DILocalVariable(name: "abs_src", scope: !5709, file: !434, line: 1657, type: !7)
!5709 = distinct !DILexicalBlock(scope: !5699, file: !434, line: 1656, column: 5)
!5710 = !DILocation(line: 1657, column: 13, scope: !5709)
!5711 = !DILocation(line: 1657, column: 47, scope: !5709)
!5712 = !DILocation(line: 1657, column: 23, scope: !5709)
!5713 = !DILocation(line: 1658, column: 11, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !434, line: 1658, column: 11)
!5715 = !DILocation(line: 1658, column: 11, scope: !5709)
!5716 = !DILocalVariable(name: "result", scope: !5717, file: !434, line: 1660, type: !139)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !434, line: 1659, column: 9)
!5718 = !DILocation(line: 1660, column: 16, scope: !5717)
!5719 = !DILocation(line: 1660, column: 38, scope: !5717)
!5720 = !DILocation(line: 1660, column: 47, scope: !5717)
!5721 = !DILocation(line: 1660, column: 27, scope: !5717)
!5722 = !DILocation(line: 1660, column: 25, scope: !5717)
!5723 = !DILocation(line: 1661, column: 17, scope: !5717)
!5724 = !DILocation(line: 1661, column: 11, scope: !5717)
!5725 = !DILocation(line: 1662, column: 18, scope: !5717)
!5726 = !DILocation(line: 1662, column: 11, scope: !5717)
!5727 = !DILocation(line: 1664, column: 5, scope: !5709)
!5728 = !DILocation(line: 1667, column: 7, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1667, column: 7)
!5730 = !DILocation(line: 1667, column: 10, scope: !5729)
!5731 = !DILocation(line: 1667, column: 24, scope: !5729)
!5732 = !DILocation(line: 1667, column: 27, scope: !5729)
!5733 = !DILocation(line: 1667, column: 7, scope: !5504)
!5734 = !DILocation(line: 1668, column: 5, scope: !5729)
!5735 = !DILocation(line: 1670, column: 7, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5504, file: !434, line: 1670, column: 7)
!5737 = !DILocation(line: 1670, column: 10, scope: !5736)
!5738 = !DILocation(line: 1670, column: 22, scope: !5736)
!5739 = !DILocation(line: 1670, column: 7, scope: !5504)
!5740 = !DILocation(line: 1672, column: 14, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !434, line: 1672, column: 12)
!5742 = distinct !DILexicalBlock(scope: !5736, file: !434, line: 1671, column: 5)
!5743 = !DILocation(line: 1672, column: 12, scope: !5742)
!5744 = !DILocation(line: 1673, column: 23, scope: !5741)
!5745 = !DILocation(line: 1673, column: 22, scope: !5741)
!5746 = !DILocation(line: 1673, column: 9, scope: !5741)
!5747 = !DILocation(line: 1674, column: 22, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !434, line: 1674, column: 16)
!5749 = !DILocation(line: 1674, column: 16, scope: !5748)
!5750 = !DILocation(line: 1674, column: 45, scope: !5748)
!5751 = !DILocation(line: 1674, column: 16, scope: !5741)
!5752 = !DILocation(line: 1675, column: 9, scope: !5748)
!5753 = !DILocation(line: 1677, column: 14, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5742, file: !434, line: 1677, column: 12)
!5755 = !DILocation(line: 1677, column: 12, scope: !5742)
!5756 = !DILocation(line: 1678, column: 23, scope: !5754)
!5757 = !DILocation(line: 1678, column: 22, scope: !5754)
!5758 = !DILocation(line: 1678, column: 9, scope: !5754)
!5759 = !DILocation(line: 1679, column: 22, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5754, file: !434, line: 1679, column: 16)
!5761 = !DILocation(line: 1679, column: 16, scope: !5760)
!5762 = !DILocation(line: 1679, column: 45, scope: !5760)
!5763 = !DILocation(line: 1679, column: 16, scope: !5754)
!5764 = !DILocation(line: 1680, column: 9, scope: !5760)
!5765 = !DILocation(line: 1682, column: 14, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5742, file: !434, line: 1682, column: 12)
!5767 = !DILocation(line: 1682, column: 12, scope: !5742)
!5768 = !DILocation(line: 1683, column: 9, scope: !5766)
!5769 = !DILocation(line: 1685, column: 11, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5742, file: !434, line: 1685, column: 11)
!5771 = !DILocation(line: 1685, column: 14, scope: !5770)
!5772 = !DILocation(line: 1685, column: 11, scope: !5742)
!5773 = !DILocation(line: 1691, column: 27, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !434, line: 1686, column: 9)
!5775 = !DILocation(line: 1691, column: 25, scope: !5774)
!5776 = !DILocation(line: 1691, column: 12, scope: !5774)
!5777 = !DILocation(line: 1691, column: 23, scope: !5774)
!5778 = !DILocation(line: 1692, column: 11, scope: !5774)
!5779 = !DILocation(line: 1694, column: 5, scope: !5742)
!5780 = !DILocation(line: 1696, column: 3, scope: !5504)
!5781 = !DILocation(line: 1697, column: 1, scope: !5504)
!5782 = distinct !DISubprogram(name: "create_hard_link", scope: !434, file: !434, line: 1819, type: !5783, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{!139, !180, !180, !139, !139, !139}
!5785 = !DILocalVariable(name: "src_name", arg: 1, scope: !5782, file: !434, line: 1819, type: !180)
!5786 = !DILocation(line: 1819, column: 31, scope: !5782)
!5787 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5782, file: !434, line: 1819, type: !180)
!5788 = !DILocation(line: 1819, column: 53, scope: !5782)
!5789 = !DILocalVariable(name: "replace", arg: 3, scope: !5782, file: !434, line: 1820, type: !139)
!5790 = !DILocation(line: 1820, column: 24, scope: !5782)
!5791 = !DILocalVariable(name: "verbose", arg: 4, scope: !5782, file: !434, line: 1820, type: !139)
!5792 = !DILocation(line: 1820, column: 38, scope: !5782)
!5793 = !DILocalVariable(name: "dereference", arg: 5, scope: !5782, file: !434, line: 1820, type: !139)
!5794 = !DILocation(line: 1820, column: 52, scope: !5782)
!5795 = !DILocalVariable(name: "err", scope: !5782, file: !434, line: 1822, type: !5)
!5796 = !DILocation(line: 1822, column: 7, scope: !5782)
!5797 = !DILocation(line: 1822, column: 37, scope: !5782)
!5798 = !DILocation(line: 1822, column: 57, scope: !5782)
!5799 = !DILocation(line: 1823, column: 27, scope: !5782)
!5800 = !DILocation(line: 1824, column: 27, scope: !5782)
!5801 = !DILocation(line: 1822, column: 13, scope: !5782)
!5802 = !DILocation(line: 1825, column: 11, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5782, file: !434, line: 1825, column: 7)
!5804 = !DILocation(line: 1825, column: 9, scope: !5803)
!5805 = !DILocation(line: 1825, column: 7, scope: !5782)
!5806 = !DILocation(line: 1827, column: 17, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !434, line: 1826, column: 5)
!5808 = !DILocation(line: 1827, column: 22, scope: !5807)
!5809 = !DILocation(line: 1828, column: 14, scope: !5807)
!5810 = !DILocation(line: 1828, column: 39, scope: !5807)
!5811 = !DILocation(line: 1827, column: 7, scope: !5807)
!5812 = !DILocation(line: 1829, column: 7, scope: !5807)
!5813 = !DILocation(line: 1831, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5782, file: !434, line: 1831, column: 7)
!5815 = !DILocation(line: 1831, column: 11, scope: !5814)
!5816 = !DILocation(line: 1831, column: 15, scope: !5814)
!5817 = !DILocation(line: 1831, column: 18, scope: !5814)
!5818 = !DILocation(line: 1831, column: 7, scope: !5782)
!5819 = !DILocation(line: 1832, column: 13, scope: !5814)
!5820 = !DILocation(line: 1832, column: 32, scope: !5814)
!5821 = !DILocation(line: 1832, column: 5, scope: !5814)
!5822 = !DILocation(line: 1833, column: 3, scope: !5782)
!5823 = !DILocation(line: 1834, column: 1, scope: !5782)
!5824 = distinct !DISubprogram(name: "abandon_move", scope: !434, file: !434, line: 1778, type: !5825, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!139, !3505, !180, !519}
!5827 = !DILocalVariable(name: "x", arg: 1, scope: !5824, file: !434, line: 1778, type: !3505)
!5828 = !DILocation(line: 1778, column: 40, scope: !5824)
!5829 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5824, file: !434, line: 1779, type: !180)
!5830 = !DILocation(line: 1779, column: 27, scope: !5824)
!5831 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !5824, file: !434, line: 1780, type: !519)
!5832 = !DILocation(line: 1780, column: 34, scope: !5824)
!5833 = !DILocation(line: 1782, column: 3, scope: !5824)
!5834 = !DILocation(line: 1783, column: 11, scope: !5824)
!5835 = !DILocation(line: 1783, column: 14, scope: !5824)
!5836 = !DILocation(line: 1783, column: 26, scope: !5824)
!5837 = !DILocation(line: 1784, column: 11, scope: !5824)
!5838 = !DILocation(line: 1784, column: 16, scope: !5824)
!5839 = !DILocation(line: 1784, column: 19, scope: !5824)
!5840 = !DILocation(line: 1784, column: 31, scope: !5824)
!5841 = !DILocation(line: 1785, column: 16, scope: !5824)
!5842 = !DILocation(line: 1785, column: 20, scope: !5824)
!5843 = !DILocation(line: 1785, column: 23, scope: !5824)
!5844 = !DILocation(line: 1785, column: 35, scope: !5824)
!5845 = !DILocation(line: 1786, column: 20, scope: !5824)
!5846 = !DILocation(line: 1786, column: 23, scope: !5824)
!5847 = !DILocation(line: 1786, column: 26, scope: !5824)
!5848 = !DILocation(line: 1787, column: 20, scope: !5824)
!5849 = !DILocation(line: 1787, column: 47, scope: !5824)
!5850 = !DILocation(line: 1787, column: 57, scope: !5824)
!5851 = !DILocation(line: 1787, column: 65, scope: !5824)
!5852 = !DILocation(line: 1787, column: 25, scope: !5824)
!5853 = !DILocation(line: 1788, column: 15, scope: !5824)
!5854 = !DILocation(line: 1788, column: 34, scope: !5824)
!5855 = !DILocation(line: 1788, column: 37, scope: !5824)
!5856 = !DILocation(line: 1788, column: 47, scope: !5824)
!5857 = !DILocation(line: 1788, column: 20, scope: !5824)
!5858 = !DILocation(line: 1788, column: 18, scope: !5824)
!5859 = !DILocation(line: 0, scope: !5824)
!5860 = !DILocation(line: 1783, column: 3, scope: !5824)
!5861 = distinct !DISubprogram(name: "overwrite_ok", scope: !434, file: !434, line: 1710, type: !5825, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5862 = !DILocalVariable(name: "x", arg: 1, scope: !5861, file: !434, line: 1710, type: !3505)
!5863 = !DILocation(line: 1710, column: 40, scope: !5861)
!5864 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5861, file: !434, line: 1710, type: !180)
!5865 = !DILocation(line: 1710, column: 55, scope: !5861)
!5866 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !5861, file: !434, line: 1711, type: !519)
!5867 = !DILocation(line: 1711, column: 34, scope: !5861)
!5868 = !DILocation(line: 1713, column: 31, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5861, file: !434, line: 1713, column: 7)
!5870 = !DILocation(line: 1713, column: 41, scope: !5869)
!5871 = !DILocation(line: 1713, column: 49, scope: !5869)
!5872 = !DILocation(line: 1713, column: 9, scope: !5869)
!5873 = !DILocation(line: 1713, column: 7, scope: !5861)
!5874 = !DILocalVariable(name: "perms", scope: !5875, file: !434, line: 1715, type: !252)
!5875 = distinct !DILexicalBlock(scope: !5869, file: !434, line: 1714, column: 5)
!5876 = !DILocation(line: 1715, column: 12, scope: !5875)
!5877 = !DILocation(line: 1716, column: 16, scope: !5875)
!5878 = !DILocation(line: 1716, column: 24, scope: !5875)
!5879 = !DILocation(line: 1716, column: 33, scope: !5875)
!5880 = !DILocation(line: 1716, column: 7, scope: !5875)
!5881 = !DILocation(line: 1717, column: 7, scope: !5875)
!5882 = !DILocation(line: 1717, column: 17, scope: !5875)
!5883 = !DILocation(line: 1718, column: 16, scope: !5875)
!5884 = !DILocation(line: 1719, column: 17, scope: !5875)
!5885 = !DILocation(line: 1719, column: 20, scope: !5875)
!5886 = !DILocation(line: 1719, column: 30, scope: !5875)
!5887 = !DILocation(line: 1719, column: 33, scope: !5875)
!5888 = !DILocation(line: 1719, column: 36, scope: !5875)
!5889 = !DILocation(line: 1720, column: 17, scope: !5875)
!5890 = !DILocation(line: 1720, column: 20, scope: !5875)
!5891 = !DILocation(line: 1720, column: 23, scope: !5875)
!5892 = !DILocation(line: 1719, column: 16, scope: !5875)
!5893 = !DILocation(line: 1721, column: 18, scope: !5875)
!5894 = !DILocation(line: 1722, column: 18, scope: !5875)
!5895 = !DILocation(line: 1723, column: 16, scope: !5875)
!5896 = !DILocation(line: 1723, column: 30, scope: !5875)
!5897 = !DILocation(line: 1724, column: 37, scope: !5875)
!5898 = !DILocation(line: 1724, column: 45, scope: !5875)
!5899 = !DILocation(line: 1724, column: 53, scope: !5875)
!5900 = !DILocation(line: 1724, column: 16, scope: !5875)
!5901 = !DILocation(line: 1725, column: 17, scope: !5875)
!5902 = !DILocation(line: 1718, column: 7, scope: !5875)
!5903 = !DILocation(line: 1726, column: 5, scope: !5875)
!5904 = !DILocation(line: 1729, column: 16, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5869, file: !434, line: 1728, column: 5)
!5906 = !DILocation(line: 1729, column: 24, scope: !5905)
!5907 = !DILocation(line: 1730, column: 16, scope: !5905)
!5908 = !DILocation(line: 1730, column: 30, scope: !5905)
!5909 = !DILocation(line: 1729, column: 7, scope: !5905)
!5910 = !DILocation(line: 1733, column: 10, scope: !5861)
!5911 = !DILocation(line: 1733, column: 3, scope: !5861)
!5912 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !291, file: !291, line: 265, type: !359, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5913 = !DILocalVariable(name: "file_name", arg: 1, scope: !5912, file: !291, line: 265, type: !180)
!5914 = !DILocation(line: 265, column: 28, scope: !5912)
!5915 = !DILocation(line: 267, column: 7, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !291, line: 267, column: 7)
!5917 = !DILocation(line: 267, column: 20, scope: !5916)
!5918 = !DILocation(line: 267, column: 7, scope: !5912)
!5919 = !DILocalVariable(name: "sep", scope: !5920, file: !291, line: 269, type: !8)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !291, line: 268, column: 5)
!5921 = !DILocation(line: 269, column: 12, scope: !5920)
!5922 = !DILocation(line: 269, column: 18, scope: !5920)
!5923 = !DILocation(line: 269, column: 29, scope: !5920)
!5924 = !DILocation(line: 269, column: 42, scope: !5920)
!5925 = !DILocation(line: 269, column: 50, scope: !5920)
!5926 = !DILocation(line: 270, column: 17, scope: !5920)
!5927 = !DILocation(line: 270, column: 21, scope: !5920)
!5928 = !DILocation(line: 270, column: 24, scope: !5920)
!5929 = !DILocation(line: 270, column: 7, scope: !5920)
!5930 = !DILocation(line: 273, column: 5, scope: !5916)
!5931 = !DILocation(line: 274, column: 1, scope: !5912)
!5932 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !434, file: !434, line: 1850, type: !5933, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!5933 = !DISubroutineType(types: !5934)
!5934 = !{!139, !180, !519, !180}
!5935 = !DILocalVariable(name: "srcbase", arg: 1, scope: !5932, file: !434, line: 1850, type: !180)
!5936 = !DILocation(line: 1850, column: 35, scope: !5932)
!5937 = !DILocalVariable(name: "src_st", arg: 2, scope: !5932, file: !434, line: 1850, type: !519)
!5938 = !DILocation(line: 1850, column: 63, scope: !5932)
!5939 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5932, file: !434, line: 1851, type: !180)
!5940 = !DILocation(line: 1851, column: 35, scope: !5932)
!5941 = !DILocalVariable(name: "srcbaselen", scope: !5932, file: !434, line: 1853, type: !52)
!5942 = !DILocation(line: 1853, column: 10, scope: !5932)
!5943 = !DILocation(line: 1853, column: 31, scope: !5932)
!5944 = !DILocation(line: 1853, column: 23, scope: !5932)
!5945 = !DILocalVariable(name: "dstbase", scope: !5932, file: !434, line: 1854, type: !180)
!5946 = !DILocation(line: 1854, column: 15, scope: !5932)
!5947 = !DILocation(line: 1854, column: 41, scope: !5932)
!5948 = !DILocation(line: 1854, column: 25, scope: !5932)
!5949 = !DILocalVariable(name: "dstbaselen", scope: !5932, file: !434, line: 1855, type: !52)
!5950 = !DILocation(line: 1855, column: 10, scope: !5932)
!5951 = !DILocation(line: 1855, column: 31, scope: !5932)
!5952 = !DILocation(line: 1855, column: 23, scope: !5932)
!5953 = !DILocalVariable(name: "suffixlen", scope: !5932, file: !434, line: 1856, type: !52)
!5954 = !DILocation(line: 1856, column: 10, scope: !5932)
!5955 = !DILocation(line: 1856, column: 30, scope: !5932)
!5956 = !DILocation(line: 1856, column: 22, scope: !5932)
!5957 = !DILocation(line: 1857, column: 10, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5932, file: !434, line: 1857, column: 7)
!5959 = !DILocation(line: 1857, column: 24, scope: !5958)
!5960 = !DILocation(line: 1857, column: 37, scope: !5958)
!5961 = !DILocation(line: 1857, column: 35, scope: !5958)
!5962 = !DILocation(line: 1857, column: 21, scope: !5958)
!5963 = !DILocation(line: 1858, column: 10, scope: !5958)
!5964 = !DILocation(line: 1858, column: 21, scope: !5958)
!5965 = !DILocation(line: 1858, column: 30, scope: !5958)
!5966 = !DILocation(line: 1858, column: 39, scope: !5958)
!5967 = !DILocation(line: 1858, column: 13, scope: !5958)
!5968 = !DILocation(line: 1858, column: 51, scope: !5958)
!5969 = !DILocation(line: 1859, column: 10, scope: !5958)
!5970 = !DILocation(line: 1859, column: 13, scope: !5958)
!5971 = !DILocation(line: 1857, column: 7, scope: !5932)
!5972 = !DILocation(line: 1860, column: 5, scope: !5958)
!5973 = !DILocalVariable(name: "dstlen", scope: !5932, file: !434, line: 1861, type: !52)
!5974 = !DILocation(line: 1861, column: 10, scope: !5932)
!5975 = !DILocation(line: 1861, column: 27, scope: !5932)
!5976 = !DILocation(line: 1861, column: 19, scope: !5932)
!5977 = !DILocalVariable(name: "dst_back", scope: !5932, file: !434, line: 1862, type: !7)
!5978 = !DILocation(line: 1862, column: 9, scope: !5932)
!5979 = !DILocation(line: 1862, column: 29, scope: !5932)
!5980 = !DILocation(line: 1862, column: 38, scope: !5932)
!5981 = !DILocation(line: 1862, column: 36, scope: !5932)
!5982 = !DILocation(line: 1862, column: 48, scope: !5932)
!5983 = !DILocation(line: 1862, column: 20, scope: !5932)
!5984 = !DILocation(line: 1863, column: 20, scope: !5932)
!5985 = !DILocation(line: 1863, column: 30, scope: !5932)
!5986 = !DILocation(line: 1863, column: 40, scope: !5932)
!5987 = !DILocation(line: 1863, column: 11, scope: !5932)
!5988 = !DILocation(line: 1863, column: 49, scope: !5932)
!5989 = !DILocation(line: 1863, column: 3, scope: !5932)
!5990 = !DILocalVariable(name: "dst_back_sb", scope: !5932, file: !434, line: 1864, type: !470)
!5991 = !DILocation(line: 1864, column: 15, scope: !5932)
!5992 = !DILocalVariable(name: "dst_back_status", scope: !5932, file: !434, line: 1865, type: !5)
!5993 = !DILocation(line: 1865, column: 7, scope: !5932)
!5994 = !DILocation(line: 1865, column: 31, scope: !5932)
!5995 = !DILocation(line: 1865, column: 25, scope: !5932)
!5996 = !DILocation(line: 1866, column: 9, scope: !5932)
!5997 = !DILocation(line: 1866, column: 3, scope: !5932)
!5998 = !DILocation(line: 1867, column: 10, scope: !5932)
!5999 = !DILocation(line: 1867, column: 26, scope: !5932)
!6000 = !DILocation(line: 1867, column: 31, scope: !5932)
!6001 = !DILocation(line: 1867, column: 34, scope: !5932)
!6002 = !DILocation(line: 0, scope: !5932)
!6003 = !DILocation(line: 1867, column: 3, scope: !5932)
!6004 = !DILocation(line: 1868, column: 1, scope: !5932)
!6005 = distinct !DISubprogram(name: "emit_verbose", scope: !434, file: !434, line: 1795, type: !6006, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{null, !180, !180, !180}
!6008 = !DILocalVariable(name: "src", arg: 1, scope: !6005, file: !434, line: 1795, type: !180)
!6009 = !DILocation(line: 1795, column: 27, scope: !6005)
!6010 = !DILocalVariable(name: "dst", arg: 2, scope: !6005, file: !434, line: 1795, type: !180)
!6011 = !DILocation(line: 1795, column: 44, scope: !6005)
!6012 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6005, file: !434, line: 1795, type: !180)
!6013 = !DILocation(line: 1795, column: 61, scope: !6005)
!6014 = !DILocation(line: 1797, column: 23, scope: !6005)
!6015 = !DILocation(line: 1797, column: 43, scope: !6005)
!6016 = !DILocation(line: 1797, column: 3, scope: !6005)
!6017 = !DILocation(line: 1798, column: 7, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6005, file: !434, line: 1798, column: 7)
!6019 = !DILocation(line: 1798, column: 7, scope: !6005)
!6020 = !DILocation(line: 1799, column: 13, scope: !6018)
!6021 = !DILocation(line: 1799, column: 33, scope: !6018)
!6022 = !DILocation(line: 1799, column: 5, scope: !6018)
!6023 = !DILocation(line: 1800, column: 3, scope: !6005)
!6024 = !DILocation(line: 1801, column: 1, scope: !6005)
!6025 = distinct !DISubprogram(name: "is_ancestor", scope: !434, file: !434, line: 620, type: !6026, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!139, !519, !6028}
!6028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6029, size: 64)
!6029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!6030 = !DILocalVariable(name: "sb", arg: 1, scope: !6025, file: !434, line: 620, type: !519)
!6031 = !DILocation(line: 620, column: 33, scope: !6025)
!6032 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6025, file: !434, line: 620, type: !6028)
!6033 = !DILocation(line: 620, column: 60, scope: !6025)
!6034 = !DILocation(line: 622, column: 3, scope: !6025)
!6035 = !DILocation(line: 622, column: 10, scope: !6025)
!6036 = !DILocation(line: 622, column: 20, scope: !6025)
!6037 = !DILocation(line: 624, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !434, line: 624, column: 11)
!6039 = distinct !DILexicalBlock(scope: !6025, file: !434, line: 623, column: 5)
!6040 = !DILocation(line: 624, column: 22, scope: !6038)
!6041 = !DILocation(line: 624, column: 29, scope: !6038)
!6042 = !DILocation(line: 624, column: 33, scope: !6038)
!6043 = !DILocation(line: 624, column: 26, scope: !6038)
!6044 = !DILocation(line: 624, column: 40, scope: !6038)
!6045 = !DILocation(line: 624, column: 43, scope: !6038)
!6046 = !DILocation(line: 624, column: 54, scope: !6038)
!6047 = !DILocation(line: 624, column: 61, scope: !6038)
!6048 = !DILocation(line: 624, column: 65, scope: !6038)
!6049 = !DILocation(line: 624, column: 58, scope: !6038)
!6050 = !DILocation(line: 624, column: 11, scope: !6039)
!6051 = !DILocation(line: 625, column: 9, scope: !6038)
!6052 = !DILocation(line: 626, column: 19, scope: !6039)
!6053 = !DILocation(line: 626, column: 30, scope: !6039)
!6054 = !DILocation(line: 626, column: 17, scope: !6039)
!6055 = distinct !{!6055, !6034, !6056}
!6056 = !DILocation(line: 627, column: 5, scope: !6025)
!6057 = !DILocation(line: 628, column: 3, scope: !6025)
!6058 = !DILocation(line: 629, column: 1, scope: !6025)
!6059 = distinct !DISubprogram(name: "copy_dir", scope: !434, file: !434, line: 745, type: !6060, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{!139, !180, !180, !139, !519, !501, !3505, !3769, !3769}
!6062 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6059, file: !434, line: 745, type: !180)
!6063 = !DILocation(line: 745, column: 23, scope: !6059)
!6064 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6059, file: !434, line: 745, type: !180)
!6065 = !DILocation(line: 745, column: 48, scope: !6059)
!6066 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6059, file: !434, line: 745, type: !139)
!6067 = !DILocation(line: 745, column: 66, scope: !6059)
!6068 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6059, file: !434, line: 746, type: !519)
!6069 = !DILocation(line: 746, column: 30, scope: !6059)
!6070 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6059, file: !434, line: 746, type: !501)
!6071 = !DILocation(line: 746, column: 55, scope: !6059)
!6072 = !DILocalVariable(name: "x", arg: 6, scope: !6059, file: !434, line: 747, type: !3505)
!6073 = !DILocation(line: 747, column: 36, scope: !6059)
!6074 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6059, file: !434, line: 748, type: !3769)
!6075 = !DILocation(line: 748, column: 17, scope: !6059)
!6076 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6059, file: !434, line: 749, type: !3769)
!6077 = !DILocation(line: 749, column: 17, scope: !6059)
!6078 = !DILocalVariable(name: "name_space", scope: !6059, file: !434, line: 751, type: !7)
!6079 = !DILocation(line: 751, column: 9, scope: !6059)
!6080 = !DILocalVariable(name: "namep", scope: !6059, file: !434, line: 752, type: !7)
!6081 = !DILocation(line: 752, column: 9, scope: !6059)
!6082 = !DILocalVariable(name: "non_command_line_options", scope: !6059, file: !434, line: 753, type: !3507)
!6083 = !DILocation(line: 753, column: 21, scope: !6059)
!6084 = !DILocation(line: 753, column: 49, scope: !6059)
!6085 = !DILocation(line: 753, column: 48, scope: !6059)
!6086 = !DILocalVariable(name: "ok", scope: !6059, file: !434, line: 754, type: !139)
!6087 = !DILocation(line: 754, column: 8, scope: !6059)
!6088 = !DILocation(line: 756, column: 25, scope: !6059)
!6089 = !DILocation(line: 756, column: 16, scope: !6059)
!6090 = !DILocation(line: 756, column: 14, scope: !6059)
!6091 = !DILocation(line: 757, column: 7, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6059, file: !434, line: 757, column: 7)
!6093 = !DILocation(line: 757, column: 18, scope: !6092)
!6094 = !DILocation(line: 757, column: 7, scope: !6059)
!6095 = !DILocation(line: 761, column: 17, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6092, file: !434, line: 758, column: 5)
!6097 = !DILocation(line: 761, column: 24, scope: !6096)
!6098 = !DILocation(line: 761, column: 47, scope: !6096)
!6099 = !DILocation(line: 761, column: 7, scope: !6096)
!6100 = !DILocation(line: 762, column: 7, scope: !6096)
!6101 = !DILocation(line: 767, column: 7, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6059, file: !434, line: 767, column: 7)
!6103 = !DILocation(line: 767, column: 10, scope: !6102)
!6104 = !DILocation(line: 767, column: 22, scope: !6102)
!6105 = !DILocation(line: 767, column: 7, scope: !6059)
!6106 = !DILocation(line: 768, column: 30, scope: !6102)
!6107 = !DILocation(line: 768, column: 42, scope: !6102)
!6108 = !DILocation(line: 768, column: 5, scope: !6102)
!6109 = !DILocalVariable(name: "new_first_dir_created", scope: !6059, file: !434, line: 770, type: !139)
!6110 = !DILocation(line: 770, column: 8, scope: !6059)
!6111 = !DILocation(line: 771, column: 11, scope: !6059)
!6112 = !DILocation(line: 771, column: 9, scope: !6059)
!6113 = !DILocation(line: 772, column: 3, scope: !6059)
!6114 = !DILocation(line: 772, column: 11, scope: !6059)
!6115 = !DILocation(line: 772, column: 10, scope: !6059)
!6116 = !DILocation(line: 772, column: 17, scope: !6059)
!6117 = !DILocalVariable(name: "local_copy_into_self", scope: !6118, file: !434, line: 774, type: !139)
!6118 = distinct !DILexicalBlock(scope: !6059, file: !434, line: 773, column: 5)
!6119 = !DILocation(line: 774, column: 12, scope: !6118)
!6120 = !DILocalVariable(name: "src_name", scope: !6118, file: !434, line: 775, type: !7)
!6121 = !DILocation(line: 775, column: 13, scope: !6118)
!6122 = !DILocation(line: 775, column: 42, scope: !6118)
!6123 = !DILocation(line: 775, column: 55, scope: !6118)
!6124 = !DILocation(line: 775, column: 24, scope: !6118)
!6125 = !DILocalVariable(name: "dst_name", scope: !6118, file: !434, line: 776, type: !7)
!6126 = !DILocation(line: 776, column: 13, scope: !6118)
!6127 = !DILocation(line: 776, column: 42, scope: !6118)
!6128 = !DILocation(line: 776, column: 55, scope: !6118)
!6129 = !DILocation(line: 776, column: 24, scope: !6118)
!6130 = !DILocalVariable(name: "first_dir_created", scope: !6118, file: !434, line: 777, type: !139)
!6131 = !DILocation(line: 777, column: 12, scope: !6118)
!6132 = !DILocation(line: 777, column: 33, scope: !6118)
!6133 = !DILocation(line: 777, column: 32, scope: !6118)
!6134 = !DILocation(line: 779, column: 28, scope: !6118)
!6135 = !DILocation(line: 779, column: 38, scope: !6118)
!6136 = !DILocation(line: 779, column: 48, scope: !6118)
!6137 = !DILocation(line: 779, column: 57, scope: !6118)
!6138 = !DILocation(line: 780, column: 28, scope: !6118)
!6139 = !DILocation(line: 779, column: 13, scope: !6118)
!6140 = !DILocation(line: 779, column: 10, scope: !6118)
!6141 = !DILocation(line: 783, column: 26, scope: !6118)
!6142 = !DILocation(line: 783, column: 8, scope: !6118)
!6143 = !DILocation(line: 783, column: 23, scope: !6118)
!6144 = !DILocation(line: 785, column: 13, scope: !6118)
!6145 = !DILocation(line: 785, column: 7, scope: !6118)
!6146 = !DILocation(line: 786, column: 13, scope: !6118)
!6147 = !DILocation(line: 786, column: 7, scope: !6118)
!6148 = !DILocation(line: 791, column: 11, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6118, file: !434, line: 791, column: 11)
!6150 = !DILocation(line: 791, column: 11, scope: !6118)
!6151 = !DILocation(line: 792, column: 9, scope: !6149)
!6152 = !DILocation(line: 794, column: 32, scope: !6118)
!6153 = !DILocation(line: 794, column: 29, scope: !6118)
!6154 = !DILocation(line: 795, column: 24, scope: !6118)
!6155 = !DILocation(line: 795, column: 16, scope: !6118)
!6156 = !DILocation(line: 795, column: 31, scope: !6118)
!6157 = !DILocation(line: 795, column: 13, scope: !6118)
!6158 = distinct !{!6158, !6113, !6159}
!6159 = !DILocation(line: 796, column: 5, scope: !6059)
!6160 = !DILocation(line: 797, column: 9, scope: !6059)
!6161 = !DILocation(line: 797, column: 3, scope: !6059)
!6162 = !DILocation(line: 798, column: 45, scope: !6059)
!6163 = !DILocation(line: 798, column: 4, scope: !6059)
!6164 = !DILocation(line: 798, column: 43, scope: !6059)
!6165 = !DILocation(line: 800, column: 10, scope: !6059)
!6166 = !DILocation(line: 800, column: 3, scope: !6059)
!6167 = !DILocation(line: 801, column: 1, scope: !6059)
!6168 = distinct !DISubprogram(name: "copy_reg", scope: !434, file: !434, line: 1052, type: !6169, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!139, !180, !180, !3505, !136, !136, !3769, !519}
!6171 = !DILocalVariable(name: "src_name", arg: 1, scope: !6168, file: !434, line: 1052, type: !180)
!6172 = !DILocation(line: 1052, column: 23, scope: !6168)
!6173 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6168, file: !434, line: 1052, type: !180)
!6174 = !DILocation(line: 1052, column: 45, scope: !6168)
!6175 = !DILocalVariable(name: "x", arg: 3, scope: !6168, file: !434, line: 1053, type: !3505)
!6176 = !DILocation(line: 1053, column: 36, scope: !6168)
!6177 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6168, file: !434, line: 1054, type: !136)
!6178 = !DILocation(line: 1054, column: 18, scope: !6168)
!6179 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6168, file: !434, line: 1054, type: !136)
!6180 = !DILocation(line: 1054, column: 35, scope: !6168)
!6181 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6168, file: !434, line: 1054, type: !3769)
!6182 = !DILocation(line: 1054, column: 62, scope: !6168)
!6183 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6168, file: !434, line: 1055, type: !519)
!6184 = !DILocation(line: 1055, column: 30, scope: !6168)
!6185 = !DILocalVariable(name: "buf", scope: !6168, file: !434, line: 1057, type: !7)
!6186 = !DILocation(line: 1057, column: 9, scope: !6168)
!6187 = !DILocalVariable(name: "buf_alloc", scope: !6168, file: !434, line: 1058, type: !7)
!6188 = !DILocation(line: 1058, column: 9, scope: !6168)
!6189 = !DILocalVariable(name: "name_alloc", scope: !6168, file: !434, line: 1059, type: !7)
!6190 = !DILocation(line: 1059, column: 9, scope: !6168)
!6191 = !DILocalVariable(name: "dest_desc", scope: !6168, file: !434, line: 1060, type: !5)
!6192 = !DILocation(line: 1060, column: 7, scope: !6168)
!6193 = !DILocalVariable(name: "dest_errno", scope: !6168, file: !434, line: 1061, type: !5)
!6194 = !DILocation(line: 1061, column: 7, scope: !6168)
!6195 = !DILocalVariable(name: "source_desc", scope: !6168, file: !434, line: 1062, type: !5)
!6196 = !DILocation(line: 1062, column: 7, scope: !6168)
!6197 = !DILocalVariable(name: "src_mode", scope: !6168, file: !434, line: 1063, type: !136)
!6198 = !DILocation(line: 1063, column: 10, scope: !6168)
!6199 = !DILocation(line: 1063, column: 21, scope: !6168)
!6200 = !DILocation(line: 1063, column: 29, scope: !6168)
!6201 = !DILocalVariable(name: "sb", scope: !6168, file: !434, line: 1064, type: !470)
!6202 = !DILocation(line: 1064, column: 15, scope: !6168)
!6203 = !DILocalVariable(name: "src_open_sb", scope: !6168, file: !434, line: 1065, type: !470)
!6204 = !DILocation(line: 1065, column: 15, scope: !6168)
!6205 = !DILocalVariable(name: "return_val", scope: !6168, file: !434, line: 1066, type: !139)
!6206 = !DILocation(line: 1066, column: 8, scope: !6168)
!6207 = !DILocalVariable(name: "data_copy_required", scope: !6168, file: !434, line: 1067, type: !139)
!6208 = !DILocation(line: 1067, column: 8, scope: !6168)
!6209 = !DILocation(line: 1067, column: 29, scope: !6168)
!6210 = !DILocation(line: 1067, column: 32, scope: !6168)
!6211 = !DILocation(line: 1069, column: 23, scope: !6168)
!6212 = !DILocation(line: 1071, column: 27, scope: !6168)
!6213 = !DILocation(line: 1071, column: 30, scope: !6168)
!6214 = !DILocation(line: 1071, column: 42, scope: !6168)
!6215 = !DILocation(line: 1071, column: 24, scope: !6168)
!6216 = !DILocation(line: 1069, column: 17, scope: !6168)
!6217 = !DILocation(line: 1069, column: 15, scope: !6168)
!6218 = !DILocation(line: 1072, column: 7, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1072, column: 7)
!6220 = !DILocation(line: 1072, column: 19, scope: !6219)
!6221 = !DILocation(line: 1072, column: 7, scope: !6168)
!6222 = !DILocation(line: 1074, column: 17, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !434, line: 1073, column: 5)
!6224 = !DILocation(line: 1074, column: 24, scope: !6223)
!6225 = !DILocation(line: 1074, column: 57, scope: !6223)
!6226 = !DILocation(line: 1074, column: 7, scope: !6223)
!6227 = !DILocation(line: 1075, column: 7, scope: !6223)
!6228 = !DILocation(line: 1078, column: 14, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1078, column: 7)
!6230 = !DILocation(line: 1078, column: 7, scope: !6229)
!6231 = !DILocation(line: 1078, column: 41, scope: !6229)
!6232 = !DILocation(line: 1078, column: 7, scope: !6168)
!6233 = !DILocation(line: 1080, column: 17, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !434, line: 1079, column: 5)
!6235 = !DILocation(line: 1080, column: 24, scope: !6234)
!6236 = !DILocation(line: 1080, column: 46, scope: !6234)
!6237 = !DILocation(line: 1080, column: 7, scope: !6234)
!6238 = !DILocation(line: 1081, column: 18, scope: !6234)
!6239 = !DILocation(line: 1082, column: 7, scope: !6234)
!6240 = !DILocation(line: 1087, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1087, column: 7)
!6242 = !DILocation(line: 1087, column: 7, scope: !6168)
!6243 = !DILocation(line: 1090, column: 14, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !434, line: 1088, column: 5)
!6245 = !DILocation(line: 1091, column: 14, scope: !6244)
!6246 = !DILocation(line: 1089, column: 7, scope: !6244)
!6247 = !DILocation(line: 1092, column: 18, scope: !6244)
!6248 = !DILocation(line: 1093, column: 7, scope: !6244)
!6249 = !DILocation(line: 1098, column: 10, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1098, column: 7)
!6251 = !DILocation(line: 1098, column: 9, scope: !6250)
!6252 = !DILocation(line: 1098, column: 7, scope: !6168)
!6253 = !DILocalVariable(name: "open_flags", scope: !6254, file: !434, line: 1100, type: !5)
!6254 = distinct !DILexicalBlock(scope: !6250, file: !434, line: 1099, column: 5)
!6255 = !DILocation(line: 1100, column: 11, scope: !6254)
!6256 = !DILocation(line: 1101, column: 32, scope: !6254)
!6257 = !DILocation(line: 1101, column: 35, scope: !6254)
!6258 = !DILocation(line: 1101, column: 29, scope: !6254)
!6259 = !DILocation(line: 1102, column: 25, scope: !6254)
!6260 = !DILocation(line: 1102, column: 35, scope: !6254)
!6261 = !DILocation(line: 1102, column: 19, scope: !6254)
!6262 = !DILocation(line: 1102, column: 17, scope: !6254)
!6263 = !DILocation(line: 1103, column: 20, scope: !6254)
!6264 = !DILocation(line: 1103, column: 18, scope: !6254)
!6265 = !DILocation(line: 1112, column: 12, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6254, file: !434, line: 1112, column: 11)
!6267 = !DILocation(line: 1112, column: 15, scope: !6266)
!6268 = !DILocation(line: 1112, column: 36, scope: !6266)
!6269 = !DILocation(line: 1112, column: 39, scope: !6266)
!6270 = !DILocation(line: 1112, column: 42, scope: !6266)
!6271 = !DILocation(line: 1113, column: 11, scope: !6266)
!6272 = !DILocation(line: 1113, column: 19, scope: !6266)
!6273 = !DILocation(line: 1113, column: 16, scope: !6266)
!6274 = !DILocation(line: 1112, column: 11, scope: !6254)
!6275 = !DILocation(line: 1115, column: 40, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !434, line: 1115, column: 15)
!6277 = distinct !DILexicalBlock(scope: !6266, file: !434, line: 1114, column: 9)
!6278 = !DILocation(line: 1115, column: 50, scope: !6276)
!6279 = !DILocation(line: 1115, column: 53, scope: !6276)
!6280 = !DILocation(line: 1116, column: 47, scope: !6276)
!6281 = !DILocation(line: 1115, column: 17, scope: !6276)
!6282 = !DILocation(line: 1115, column: 15, scope: !6277)
!6283 = !DILocation(line: 1118, column: 19, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !434, line: 1118, column: 19)
!6285 = distinct !DILexicalBlock(scope: !6276, file: !434, line: 1117, column: 13)
!6286 = !DILocation(line: 1118, column: 22, scope: !6284)
!6287 = !DILocation(line: 1118, column: 19, scope: !6285)
!6288 = !DILocation(line: 1120, column: 30, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6284, file: !434, line: 1119, column: 17)
!6290 = !DILocation(line: 1121, column: 19, scope: !6289)
!6291 = !DILocation(line: 1123, column: 13, scope: !6285)
!6292 = !DILocation(line: 1124, column: 9, scope: !6277)
!6293 = !DILocation(line: 1126, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6254, file: !434, line: 1126, column: 11)
!6295 = !DILocation(line: 1126, column: 21, scope: !6294)
!6296 = !DILocation(line: 1126, column: 25, scope: !6294)
!6297 = !DILocation(line: 1126, column: 28, scope: !6294)
!6298 = !DILocation(line: 1126, column: 31, scope: !6294)
!6299 = !DILocation(line: 1126, column: 11, scope: !6254)
!6300 = !DILocation(line: 1128, column: 23, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !434, line: 1128, column: 15)
!6302 = distinct !DILexicalBlock(scope: !6294, file: !434, line: 1127, column: 9)
!6303 = !DILocation(line: 1128, column: 15, scope: !6301)
!6304 = !DILocation(line: 1128, column: 33, scope: !6301)
!6305 = !DILocation(line: 1128, column: 15, scope: !6302)
!6306 = !DILocation(line: 1130, column: 25, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6301, file: !434, line: 1129, column: 13)
!6308 = !DILocation(line: 1130, column: 32, scope: !6307)
!6309 = !DILocation(line: 1130, column: 55, scope: !6307)
!6310 = !DILocation(line: 1130, column: 15, scope: !6307)
!6311 = !DILocation(line: 1131, column: 26, scope: !6307)
!6312 = !DILocation(line: 1132, column: 15, scope: !6307)
!6313 = !DILocation(line: 1134, column: 15, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6302, file: !434, line: 1134, column: 15)
!6315 = !DILocation(line: 1134, column: 18, scope: !6314)
!6316 = !DILocation(line: 1134, column: 15, scope: !6302)
!6317 = !DILocation(line: 1135, column: 21, scope: !6314)
!6318 = !DILocation(line: 1135, column: 40, scope: !6314)
!6319 = !DILocation(line: 1135, column: 13, scope: !6314)
!6320 = !DILocation(line: 1138, column: 12, scope: !6302)
!6321 = !DILocation(line: 1138, column: 20, scope: !6302)
!6322 = !DILocation(line: 1142, column: 15, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6302, file: !434, line: 1142, column: 15)
!6324 = !DILocation(line: 1142, column: 18, scope: !6323)
!6325 = !DILocation(line: 1142, column: 15, scope: !6302)
!6326 = !DILocation(line: 1144, column: 47, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !434, line: 1144, column: 19)
!6328 = distinct !DILexicalBlock(scope: !6323, file: !434, line: 1143, column: 13)
!6329 = !DILocation(line: 1144, column: 57, scope: !6327)
!6330 = !DILocation(line: 1144, column: 67, scope: !6327)
!6331 = !DILocation(line: 1145, column: 48, scope: !6327)
!6332 = !DILocation(line: 1145, column: 47, scope: !6327)
!6333 = !DILocation(line: 1145, column: 57, scope: !6327)
!6334 = !DILocation(line: 1144, column: 21, scope: !6327)
!6335 = !DILocation(line: 1144, column: 19, scope: !6328)
!6336 = !DILocation(line: 1147, column: 30, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6327, file: !434, line: 1146, column: 17)
!6338 = !DILocation(line: 1148, column: 19, scope: !6337)
!6339 = !DILocation(line: 1150, column: 13, scope: !6328)
!6340 = !DILocation(line: 1151, column: 9, scope: !6302)
!6341 = !DILocation(line: 1152, column: 5, scope: !6254)
!6342 = !DILocation(line: 1154, column: 8, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1154, column: 7)
!6344 = !DILocation(line: 1154, column: 7, scope: !6343)
!6345 = !DILocation(line: 1154, column: 7, scope: !6168)
!6346 = !DILocation(line: 1155, column: 5, scope: !6343)
!6347 = !DILabel(scope: !6348, name: "open_with_O_CREAT", file: !434, line: 1156)
!6348 = distinct !DILexicalBlock(scope: !6343, file: !434, line: 1155, column: 5)
!6349 = !DILocation(line: 1156, column: 5, scope: !6348)
!6350 = !DILocalVariable(name: "open_flags", scope: !6348, file: !434, line: 1158, type: !5)
!6351 = !DILocation(line: 1158, column: 11, scope: !6348)
!6352 = !DILocation(line: 1159, column: 25, scope: !6348)
!6353 = !DILocation(line: 1159, column: 35, scope: !6348)
!6354 = !DILocation(line: 1159, column: 46, scope: !6348)
!6355 = !DILocation(line: 1160, column: 25, scope: !6348)
!6356 = !DILocation(line: 1160, column: 37, scope: !6348)
!6357 = !DILocation(line: 1160, column: 36, scope: !6348)
!6358 = !DILocation(line: 1160, column: 34, scope: !6348)
!6359 = !DILocation(line: 1159, column: 19, scope: !6348)
!6360 = !DILocation(line: 1159, column: 17, scope: !6348)
!6361 = !DILocation(line: 1161, column: 20, scope: !6348)
!6362 = !DILocation(line: 1161, column: 18, scope: !6348)
!6363 = !DILocation(line: 1173, column: 11, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6348, file: !434, line: 1173, column: 11)
!6365 = !DILocation(line: 1173, column: 21, scope: !6364)
!6366 = !DILocation(line: 1173, column: 25, scope: !6364)
!6367 = !DILocation(line: 1173, column: 28, scope: !6364)
!6368 = !DILocation(line: 1173, column: 39, scope: !6364)
!6369 = !DILocation(line: 1173, column: 49, scope: !6364)
!6370 = !DILocation(line: 1173, column: 54, scope: !6364)
!6371 = !DILocation(line: 1173, column: 57, scope: !6364)
!6372 = !DILocation(line: 1173, column: 11, scope: !6348)
!6373 = !DILocalVariable(name: "dangling_link_sb", scope: !6374, file: !434, line: 1175, type: !470)
!6374 = distinct !DILexicalBlock(scope: !6364, file: !434, line: 1174, column: 9)
!6375 = !DILocation(line: 1175, column: 23, scope: !6374)
!6376 = !DILocation(line: 1176, column: 22, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6374, file: !434, line: 1176, column: 15)
!6378 = !DILocation(line: 1176, column: 15, scope: !6377)
!6379 = !DILocation(line: 1176, column: 51, scope: !6377)
!6380 = !DILocation(line: 1177, column: 15, scope: !6377)
!6381 = !DILocation(line: 1177, column: 18, scope: !6377)
!6382 = !DILocation(line: 1176, column: 15, scope: !6374)
!6383 = !DILocation(line: 1179, column: 19, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !434, line: 1179, column: 19)
!6385 = distinct !DILexicalBlock(scope: !6377, file: !434, line: 1178, column: 13)
!6386 = !DILocation(line: 1179, column: 22, scope: !6384)
!6387 = !DILocation(line: 1179, column: 19, scope: !6385)
!6388 = !DILocation(line: 1181, column: 37, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6384, file: !434, line: 1180, column: 17)
!6390 = !DILocation(line: 1181, column: 47, scope: !6389)
!6391 = !DILocation(line: 1182, column: 37, scope: !6389)
!6392 = !DILocation(line: 1182, column: 49, scope: !6389)
!6393 = !DILocation(line: 1182, column: 48, scope: !6389)
!6394 = !DILocation(line: 1182, column: 46, scope: !6389)
!6395 = !DILocation(line: 1181, column: 31, scope: !6389)
!6396 = !DILocation(line: 1181, column: 29, scope: !6389)
!6397 = !DILocation(line: 1183, column: 32, scope: !6389)
!6398 = !DILocation(line: 1183, column: 30, scope: !6389)
!6399 = !DILocation(line: 1184, column: 17, scope: !6389)
!6400 = !DILocation(line: 1187, column: 32, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6384, file: !434, line: 1186, column: 17)
!6402 = !DILocation(line: 1188, column: 26, scope: !6401)
!6403 = !DILocation(line: 1187, column: 19, scope: !6401)
!6404 = !DILocation(line: 1189, column: 30, scope: !6401)
!6405 = !DILocation(line: 1190, column: 19, scope: !6401)
!6406 = !DILocation(line: 1192, column: 13, scope: !6385)
!6407 = !DILocation(line: 1193, column: 9, scope: !6374)
!6408 = !DILocation(line: 1197, column: 11, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6348, file: !434, line: 1197, column: 11)
!6410 = !DILocation(line: 1197, column: 21, scope: !6409)
!6411 = !DILocation(line: 1197, column: 25, scope: !6409)
!6412 = !DILocation(line: 1197, column: 28, scope: !6409)
!6413 = !DILocation(line: 1197, column: 39, scope: !6409)
!6414 = !DILocation(line: 1198, column: 11, scope: !6409)
!6415 = !DILocation(line: 1198, column: 15, scope: !6409)
!6416 = !DILocation(line: 1198, column: 14, scope: !6409)
!6417 = !DILocation(line: 1198, column: 24, scope: !6409)
!6418 = !DILocation(line: 1198, column: 27, scope: !6409)
!6419 = !DILocation(line: 1198, column: 44, scope: !6409)
!6420 = !DILocation(line: 1198, column: 36, scope: !6409)
!6421 = !DILocation(line: 1198, column: 54, scope: !6409)
!6422 = !DILocation(line: 1198, column: 59, scope: !6409)
!6423 = !DILocation(line: 1197, column: 11, scope: !6348)
!6424 = !DILocation(line: 1199, column: 20, scope: !6409)
!6425 = !DILocation(line: 1199, column: 9, scope: !6409)
!6426 = !DILocation(line: 1200, column: 5, scope: !6348)
!6427 = !DILocation(line: 1203, column: 27, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6343, file: !434, line: 1202, column: 5)
!6429 = !DILocation(line: 1206, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1206, column: 7)
!6431 = !DILocation(line: 1206, column: 17, scope: !6430)
!6432 = !DILocation(line: 1206, column: 7, scope: !6168)
!6433 = !DILocation(line: 1218, column: 11, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !434, line: 1218, column: 11)
!6435 = distinct !DILexicalBlock(scope: !6430, file: !434, line: 1207, column: 5)
!6436 = !DILocation(line: 1218, column: 22, scope: !6434)
!6437 = !DILocation(line: 1218, column: 32, scope: !6434)
!6438 = !DILocation(line: 1218, column: 38, scope: !6434)
!6439 = !DILocation(line: 1218, column: 37, scope: !6434)
!6440 = !DILocation(line: 1218, column: 46, scope: !6434)
!6441 = !DILocation(line: 1218, column: 51, scope: !6434)
!6442 = !DILocation(line: 1218, column: 54, scope: !6434)
!6443 = !DILocation(line: 1218, column: 11, scope: !6435)
!6444 = !DILocation(line: 1220, column: 12, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6434, file: !434, line: 1219, column: 9)
!6446 = !DILocation(line: 1220, column: 20, scope: !6445)
!6447 = !DILocation(line: 1221, column: 11, scope: !6445)
!6448 = !DILocation(line: 1225, column: 17, scope: !6435)
!6449 = !DILocation(line: 1225, column: 29, scope: !6435)
!6450 = !DILocation(line: 1226, column: 14, scope: !6435)
!6451 = !DILocation(line: 1225, column: 7, scope: !6435)
!6452 = !DILocation(line: 1227, column: 18, scope: !6435)
!6453 = !DILocation(line: 1228, column: 7, scope: !6435)
!6454 = !DILocation(line: 1231, column: 14, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1231, column: 7)
!6456 = !DILocation(line: 1231, column: 7, scope: !6455)
!6457 = !DILocation(line: 1231, column: 30, scope: !6455)
!6458 = !DILocation(line: 1231, column: 7, scope: !6168)
!6459 = !DILocation(line: 1233, column: 17, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6455, file: !434, line: 1232, column: 5)
!6461 = !DILocation(line: 1233, column: 24, scope: !6460)
!6462 = !DILocation(line: 1233, column: 46, scope: !6460)
!6463 = !DILocation(line: 1233, column: 7, scope: !6460)
!6464 = !DILocation(line: 1234, column: 18, scope: !6460)
!6465 = !DILocation(line: 1235, column: 7, scope: !6460)
!6466 = !DILocation(line: 1239, column: 7, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1239, column: 7)
!6468 = !DILocation(line: 1239, column: 26, scope: !6467)
!6469 = !DILocation(line: 1239, column: 29, scope: !6467)
!6470 = !DILocation(line: 1239, column: 32, scope: !6467)
!6471 = !DILocation(line: 1239, column: 7, scope: !6168)
!6472 = !DILocalVariable(name: "clone_ok", scope: !6473, file: !434, line: 1241, type: !139)
!6473 = distinct !DILexicalBlock(scope: !6467, file: !434, line: 1240, column: 5)
!6474 = !DILocation(line: 1241, column: 12, scope: !6473)
!6475 = !DILocation(line: 1241, column: 35, scope: !6473)
!6476 = !DILocation(line: 1241, column: 46, scope: !6473)
!6477 = !DILocation(line: 1241, column: 23, scope: !6473)
!6478 = !DILocation(line: 1241, column: 59, scope: !6473)
!6479 = !DILocation(line: 1242, column: 11, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6473, file: !434, line: 1242, column: 11)
!6481 = !DILocation(line: 1242, column: 20, scope: !6480)
!6482 = !DILocation(line: 1242, column: 23, scope: !6480)
!6483 = !DILocation(line: 1242, column: 26, scope: !6480)
!6484 = !DILocation(line: 1242, column: 39, scope: !6480)
!6485 = !DILocation(line: 1242, column: 11, scope: !6473)
!6486 = !DILocation(line: 1244, column: 16, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !434, line: 1244, column: 15)
!6488 = distinct !DILexicalBlock(scope: !6480, file: !434, line: 1243, column: 9)
!6489 = !DILocation(line: 1244, column: 15, scope: !6488)
!6490 = !DILocation(line: 1246, column: 25, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !434, line: 1245, column: 13)
!6492 = !DILocation(line: 1246, column: 32, scope: !6491)
!6493 = !DILocation(line: 1247, column: 22, scope: !6491)
!6494 = !DILocation(line: 1247, column: 47, scope: !6491)
!6495 = !DILocation(line: 1246, column: 15, scope: !6491)
!6496 = !DILocation(line: 1248, column: 26, scope: !6491)
!6497 = !DILocation(line: 1249, column: 15, scope: !6491)
!6498 = !DILocation(line: 1251, column: 30, scope: !6488)
!6499 = !DILocation(line: 1252, column: 9, scope: !6488)
!6500 = !DILocation(line: 1253, column: 5, scope: !6473)
!6501 = !DILocation(line: 1255, column: 7, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1255, column: 7)
!6503 = !DILocation(line: 1255, column: 7, scope: !6168)
!6504 = !DILocalVariable(name: "buf_alignment", scope: !6505, file: !434, line: 1258, type: !52)
!6505 = distinct !DILexicalBlock(scope: !6502, file: !434, line: 1256, column: 5)
!6506 = !DILocation(line: 1258, column: 14, scope: !6505)
!6507 = !DILocation(line: 1258, column: 30, scope: !6505)
!6508 = !DILocalVariable(name: "buf_size", scope: !6505, file: !434, line: 1259, type: !52)
!6509 = !DILocation(line: 1259, column: 14, scope: !6505)
!6510 = !DILocation(line: 1259, column: 25, scope: !6505)
!6511 = !DILocalVariable(name: "hole_size", scope: !6505, file: !434, line: 1260, type: !52)
!6512 = !DILocation(line: 1260, column: 14, scope: !6505)
!6513 = !DILocation(line: 1260, column: 26, scope: !6505)
!6514 = !DILocation(line: 1262, column: 17, scope: !6505)
!6515 = !DILocation(line: 1262, column: 7, scope: !6505)
!6516 = !DILocalVariable(name: "make_holes", scope: !6505, file: !434, line: 1265, type: !139)
!6517 = !DILocation(line: 1265, column: 12, scope: !6505)
!6518 = !DILocalVariable(name: "sparse_src", scope: !6505, file: !434, line: 1266, type: !139)
!6519 = !DILocation(line: 1266, column: 12, scope: !6505)
!6520 = !DILocation(line: 1266, column: 25, scope: !6505)
!6521 = !DILocation(line: 1268, column: 11, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6505, file: !434, line: 1268, column: 11)
!6523 = !DILocation(line: 1268, column: 11, scope: !6505)
!6524 = !DILocation(line: 1272, column: 15, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !434, line: 1272, column: 15)
!6526 = distinct !DILexicalBlock(scope: !6522, file: !434, line: 1269, column: 9)
!6527 = !DILocation(line: 1272, column: 18, scope: !6525)
!6528 = !DILocation(line: 1272, column: 30, scope: !6525)
!6529 = !DILocation(line: 1272, column: 15, scope: !6526)
!6530 = !DILocation(line: 1273, column: 24, scope: !6525)
!6531 = !DILocation(line: 1273, column: 13, scope: !6525)
!6532 = !DILocation(line: 1279, column: 15, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6526, file: !434, line: 1279, column: 15)
!6534 = !DILocation(line: 1279, column: 18, scope: !6533)
!6535 = !DILocation(line: 1279, column: 30, scope: !6533)
!6536 = !DILocation(line: 1279, column: 45, scope: !6533)
!6537 = !DILocation(line: 1279, column: 48, scope: !6533)
!6538 = !DILocation(line: 1279, column: 15, scope: !6526)
!6539 = !DILocation(line: 1280, column: 24, scope: !6533)
!6540 = !DILocation(line: 1280, column: 13, scope: !6533)
!6541 = !DILocation(line: 1281, column: 9, scope: !6526)
!6542 = !DILocation(line: 1285, column: 13, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6505, file: !434, line: 1285, column: 11)
!6544 = !DILocation(line: 1285, column: 11, scope: !6505)
!6545 = !DILocalVariable(name: "blcm_max", scope: !6546, file: !434, line: 1289, type: !52)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !434, line: 1286, column: 9)
!6547 = !DILocation(line: 1289, column: 18, scope: !6546)
!6548 = !DILocation(line: 1289, column: 57, scope: !6546)
!6549 = !DILocation(line: 1289, column: 55, scope: !6546)
!6550 = !DILocalVariable(name: "blcm", scope: !6546, file: !434, line: 1290, type: !52)
!6551 = !DILocation(line: 1290, column: 18, scope: !6546)
!6552 = !DILocation(line: 1290, column: 37, scope: !6546)
!6553 = !DILocation(line: 1290, column: 63, scope: !6546)
!6554 = !DILocation(line: 1291, column: 37, scope: !6546)
!6555 = !DILocation(line: 1290, column: 25, scope: !6546)
!6556 = !DILocation(line: 1295, column: 15, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6546, file: !434, line: 1295, column: 15)
!6558 = !DILocation(line: 1295, column: 45, scope: !6557)
!6559 = !DILocation(line: 1295, column: 60, scope: !6557)
!6560 = !DILocation(line: 1295, column: 70, scope: !6557)
!6561 = !DILocation(line: 1295, column: 68, scope: !6557)
!6562 = !DILocation(line: 1295, column: 15, scope: !6546)
!6563 = !DILocation(line: 1296, column: 36, scope: !6557)
!6564 = !DILocation(line: 1296, column: 44, scope: !6557)
!6565 = !DILocation(line: 1296, column: 22, scope: !6557)
!6566 = !DILocation(line: 1296, column: 13, scope: !6557)
!6567 = !DILocation(line: 1301, column: 23, scope: !6546)
!6568 = !DILocation(line: 1301, column: 28, scope: !6546)
!6569 = !DILocation(line: 1301, column: 20, scope: !6546)
!6570 = !DILocation(line: 1302, column: 23, scope: !6546)
!6571 = !DILocation(line: 1302, column: 34, scope: !6546)
!6572 = !DILocation(line: 1302, column: 32, scope: !6546)
!6573 = !DILocation(line: 1302, column: 20, scope: !6546)
!6574 = !DILocation(line: 1303, column: 15, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6546, file: !434, line: 1303, column: 15)
!6576 = !DILocation(line: 1303, column: 24, scope: !6575)
!6577 = !DILocation(line: 1303, column: 29, scope: !6575)
!6578 = !DILocation(line: 1303, column: 32, scope: !6575)
!6579 = !DILocation(line: 1303, column: 43, scope: !6575)
!6580 = !DILocation(line: 1303, column: 41, scope: !6575)
!6581 = !DILocation(line: 1303, column: 15, scope: !6546)
!6582 = !DILocation(line: 1304, column: 24, scope: !6575)
!6583 = !DILocation(line: 1304, column: 22, scope: !6575)
!6584 = !DILocation(line: 1304, column: 13, scope: !6575)
!6585 = !DILocation(line: 1305, column: 9, scope: !6546)
!6586 = !DILocation(line: 1307, column: 28, scope: !6505)
!6587 = !DILocation(line: 1307, column: 39, scope: !6505)
!6588 = !DILocation(line: 1307, column: 37, scope: !6505)
!6589 = !DILocation(line: 1307, column: 19, scope: !6505)
!6590 = !DILocation(line: 1307, column: 17, scope: !6505)
!6591 = !DILocation(line: 1308, column: 24, scope: !6505)
!6592 = !DILocation(line: 1308, column: 35, scope: !6505)
!6593 = !DILocation(line: 1308, column: 13, scope: !6505)
!6594 = !DILocation(line: 1308, column: 11, scope: !6505)
!6595 = !DILocation(line: 1310, column: 11, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6505, file: !434, line: 1310, column: 11)
!6597 = !DILocation(line: 1310, column: 11, scope: !6505)
!6598 = !DILocalVariable(name: "normal_copy_required", scope: !6599, file: !434, line: 1312, type: !139)
!6599 = distinct !DILexicalBlock(scope: !6596, file: !434, line: 1311, column: 9)
!6600 = !DILocation(line: 1312, column: 16, scope: !6599)
!6601 = !DILocation(line: 1318, column: 28, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !434, line: 1318, column: 15)
!6603 = !DILocation(line: 1318, column: 41, scope: !6602)
!6604 = !DILocation(line: 1318, column: 52, scope: !6602)
!6605 = !DILocation(line: 1318, column: 57, scope: !6602)
!6606 = !DILocation(line: 1318, column: 67, scope: !6602)
!6607 = !DILocation(line: 1319, column: 40, scope: !6602)
!6608 = !DILocation(line: 1320, column: 28, scope: !6602)
!6609 = !DILocation(line: 1320, column: 41, scope: !6602)
!6610 = !DILocation(line: 1320, column: 44, scope: !6602)
!6611 = !DILocation(line: 1321, column: 28, scope: !6602)
!6612 = !DILocation(line: 1321, column: 38, scope: !6602)
!6613 = !DILocation(line: 1318, column: 15, scope: !6602)
!6614 = !DILocation(line: 1318, column: 15, scope: !6599)
!6615 = !DILocation(line: 1322, column: 13, scope: !6602)
!6616 = !DILocation(line: 1324, column: 17, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6599, file: !434, line: 1324, column: 15)
!6618 = !DILocation(line: 1324, column: 15, scope: !6599)
!6619 = !DILocation(line: 1326, column: 26, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !434, line: 1325, column: 13)
!6621 = !DILocation(line: 1327, column: 15, scope: !6620)
!6622 = !DILocation(line: 1329, column: 9, scope: !6599)
!6623 = !DILocalVariable(name: "n_read", scope: !6505, file: !434, line: 1331, type: !437)
!6624 = !DILocation(line: 1331, column: 13, scope: !6505)
!6625 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !6505, file: !434, line: 1332, type: !139)
!6626 = !DILocation(line: 1332, column: 12, scope: !6505)
!6627 = !DILocation(line: 1333, column: 26, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6505, file: !434, line: 1333, column: 11)
!6629 = !DILocation(line: 1333, column: 39, scope: !6628)
!6630 = !DILocation(line: 1333, column: 50, scope: !6628)
!6631 = !DILocation(line: 1333, column: 55, scope: !6628)
!6632 = !DILocation(line: 1334, column: 26, scope: !6628)
!6633 = !DILocation(line: 1334, column: 39, scope: !6628)
!6634 = !DILocation(line: 1335, column: 26, scope: !6628)
!6635 = !DILocation(line: 1335, column: 29, scope: !6628)
!6636 = !DILocation(line: 1335, column: 41, scope: !6628)
!6637 = !DILocation(line: 1335, column: 59, scope: !6628)
!6638 = !DILocation(line: 1335, column: 69, scope: !6628)
!6639 = !DILocation(line: 1333, column: 13, scope: !6628)
!6640 = !DILocation(line: 1333, column: 11, scope: !6505)
!6641 = !DILocation(line: 1339, column: 22, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6628, file: !434, line: 1338, column: 9)
!6643 = !DILocation(line: 1340, column: 11, scope: !6642)
!6644 = !DILocation(line: 1342, column: 16, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6628, file: !434, line: 1342, column: 16)
!6646 = !DILocation(line: 1342, column: 34, scope: !6645)
!6647 = !DILocation(line: 1342, column: 48, scope: !6645)
!6648 = !DILocation(line: 1342, column: 59, scope: !6645)
!6649 = !DILocation(line: 1342, column: 37, scope: !6645)
!6650 = !DILocation(line: 1342, column: 67, scope: !6645)
!6651 = !DILocation(line: 1342, column: 16, scope: !6628)
!6652 = !DILocation(line: 1344, column: 21, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6645, file: !434, line: 1343, column: 9)
!6654 = !DILocation(line: 1344, column: 28, scope: !6653)
!6655 = !DILocation(line: 1344, column: 54, scope: !6653)
!6656 = !DILocation(line: 1344, column: 11, scope: !6653)
!6657 = !DILocation(line: 1345, column: 22, scope: !6653)
!6658 = !DILocation(line: 1346, column: 11, scope: !6653)
!6659 = !DILocation(line: 1348, column: 5, scope: !6505)
!6660 = !DILabel(scope: !6168, name: "preserve_metadata", file: !434, line: 1350)
!6661 = !DILocation(line: 1350, column: 1, scope: !6168)
!6662 = !DILocation(line: 1351, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1351, column: 7)
!6664 = !DILocation(line: 1351, column: 10, scope: !6663)
!6665 = !DILocation(line: 1351, column: 7, scope: !6168)
!6666 = !DILocalVariable(name: "timespec", scope: !6667, file: !434, line: 1353, type: !518)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !434, line: 1352, column: 5)
!6668 = !DILocation(line: 1353, column: 23, scope: !6667)
!6669 = !DILocation(line: 1354, column: 7, scope: !6667)
!6670 = !DILocation(line: 1354, column: 37, scope: !6667)
!6671 = !DILocation(line: 1354, column: 21, scope: !6667)
!6672 = !DILocation(line: 1355, column: 7, scope: !6667)
!6673 = !DILocation(line: 1355, column: 37, scope: !6667)
!6674 = !DILocation(line: 1355, column: 21, scope: !6667)
!6675 = !DILocation(line: 1357, column: 22, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6667, file: !434, line: 1357, column: 11)
!6677 = !DILocation(line: 1357, column: 33, scope: !6676)
!6678 = !DILocation(line: 1357, column: 43, scope: !6676)
!6679 = !DILocation(line: 1357, column: 11, scope: !6676)
!6680 = !DILocation(line: 1357, column: 53, scope: !6676)
!6681 = !DILocation(line: 1357, column: 11, scope: !6667)
!6682 = !DILocation(line: 1359, column: 21, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6676, file: !434, line: 1358, column: 9)
!6684 = !DILocation(line: 1359, column: 28, scope: !6683)
!6685 = !DILocation(line: 1359, column: 58, scope: !6683)
!6686 = !DILocation(line: 1359, column: 11, scope: !6683)
!6687 = !DILocation(line: 1360, column: 15, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !434, line: 1360, column: 15)
!6689 = !DILocation(line: 1360, column: 18, scope: !6688)
!6690 = !DILocation(line: 1360, column: 15, scope: !6683)
!6691 = !DILocation(line: 1362, column: 26, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6688, file: !434, line: 1361, column: 13)
!6693 = !DILocation(line: 1363, column: 15, scope: !6692)
!6694 = !DILocation(line: 1365, column: 9, scope: !6683)
!6695 = !DILocation(line: 1366, column: 5, scope: !6667)
!6696 = !DILocation(line: 1370, column: 7, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1370, column: 7)
!6698 = !DILocation(line: 1370, column: 10, scope: !6697)
!6699 = !DILocation(line: 1370, column: 29, scope: !6697)
!6700 = !DILocation(line: 1370, column: 34, scope: !6697)
!6701 = !DILocation(line: 1370, column: 7, scope: !6168)
!6702 = !DILocation(line: 1372, column: 26, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !434, line: 1371, column: 5)
!6704 = !DILocation(line: 1372, column: 29, scope: !6703)
!6705 = !DILocation(line: 1372, column: 39, scope: !6703)
!6706 = !DILocation(line: 1372, column: 50, scope: !6703)
!6707 = !DILocation(line: 1372, column: 59, scope: !6703)
!6708 = !DILocation(line: 1372, column: 58, scope: !6703)
!6709 = !DILocation(line: 1372, column: 15, scope: !6703)
!6710 = !DILocation(line: 1372, column: 7, scope: !6703)
!6711 = !DILocation(line: 1375, column: 22, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6703, file: !434, line: 1373, column: 9)
!6713 = !DILocation(line: 1376, column: 11, scope: !6712)
!6714 = !DILocation(line: 1379, column: 20, scope: !6712)
!6715 = !DILocation(line: 1380, column: 11, scope: !6712)
!6716 = !DILocation(line: 1382, column: 5, scope: !6703)
!6717 = !DILocation(line: 1387, column: 7, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1387, column: 7)
!6719 = !DILocation(line: 1387, column: 10, scope: !6718)
!6720 = !DILocation(line: 1387, column: 7, scope: !6168)
!6721 = !DILocalVariable(name: "access_changed", scope: !6722, file: !434, line: 1389, type: !139)
!6722 = distinct !DILexicalBlock(scope: !6718, file: !434, line: 1388, column: 5)
!6723 = !DILocation(line: 1389, column: 12, scope: !6722)
!6724 = !DILocation(line: 1391, column: 16, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6722, file: !434, line: 1391, column: 11)
!6726 = !DILocation(line: 1391, column: 24, scope: !6725)
!6727 = !DILocation(line: 1391, column: 35, scope: !6725)
!6728 = !DILocation(line: 1391, column: 38, scope: !6725)
!6729 = !DILocation(line: 1391, column: 49, scope: !6725)
!6730 = !DILocation(line: 1391, column: 11, scope: !6722)
!6731 = !DILocation(line: 1393, column: 46, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6725, file: !434, line: 1392, column: 9)
!6733 = !DILocation(line: 1393, column: 57, scope: !6732)
!6734 = !DILocation(line: 1393, column: 28, scope: !6732)
!6735 = !DILocation(line: 1394, column: 65, scope: !6732)
!6736 = !DILocation(line: 1393, column: 26, scope: !6732)
!6737 = !DILocation(line: 1395, column: 9, scope: !6732)
!6738 = !DILocation(line: 1397, column: 23, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6722, file: !434, line: 1397, column: 11)
!6740 = !DILocation(line: 1397, column: 33, scope: !6739)
!6741 = !DILocation(line: 1397, column: 46, scope: !6739)
!6742 = !DILocation(line: 1397, column: 56, scope: !6739)
!6743 = !DILocation(line: 1397, column: 67, scope: !6739)
!6744 = !DILocation(line: 1397, column: 12, scope: !6739)
!6745 = !DILocation(line: 1398, column: 11, scope: !6739)
!6746 = !DILocation(line: 1398, column: 14, scope: !6739)
!6747 = !DILocation(line: 1398, column: 17, scope: !6739)
!6748 = !DILocation(line: 1397, column: 11, scope: !6722)
!6749 = !DILocation(line: 1399, column: 20, scope: !6739)
!6750 = !DILocation(line: 1399, column: 9, scope: !6739)
!6751 = !DILocation(line: 1401, column: 11, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6722, file: !434, line: 1401, column: 11)
!6753 = !DILocation(line: 1401, column: 11, scope: !6722)
!6754 = !DILocation(line: 1402, column: 27, scope: !6752)
!6755 = !DILocation(line: 1402, column: 38, scope: !6752)
!6756 = !DILocation(line: 1402, column: 48, scope: !6752)
!6757 = !DILocation(line: 1402, column: 60, scope: !6752)
!6758 = !DILocation(line: 1402, column: 59, scope: !6752)
!6759 = !DILocation(line: 1402, column: 57, scope: !6752)
!6760 = !DILocation(line: 1402, column: 9, scope: !6752)
!6761 = !DILocation(line: 1403, column: 5, scope: !6722)
!6762 = !DILocation(line: 1405, column: 15, scope: !6168)
!6763 = !DILocation(line: 1405, column: 25, scope: !6168)
!6764 = !DILocation(line: 1405, column: 36, scope: !6168)
!6765 = !DILocation(line: 1405, column: 3, scope: !6168)
!6766 = !DILocation(line: 1407, column: 7, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1407, column: 7)
!6768 = !DILocation(line: 1407, column: 10, scope: !6767)
!6769 = !DILocation(line: 1407, column: 24, scope: !6767)
!6770 = !DILocation(line: 1407, column: 27, scope: !6767)
!6771 = !DILocation(line: 1407, column: 30, scope: !6767)
!6772 = !DILocation(line: 1407, column: 7, scope: !6168)
!6773 = !DILocation(line: 1409, column: 21, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !434, line: 1409, column: 11)
!6775 = distinct !DILexicalBlock(scope: !6767, file: !434, line: 1408, column: 5)
!6776 = !DILocation(line: 1409, column: 31, scope: !6774)
!6777 = !DILocation(line: 1409, column: 44, scope: !6774)
!6778 = !DILocation(line: 1409, column: 54, scope: !6774)
!6779 = !DILocation(line: 1409, column: 65, scope: !6774)
!6780 = !DILocation(line: 1409, column: 11, scope: !6774)
!6781 = !DILocation(line: 1409, column: 75, scope: !6774)
!6782 = !DILocation(line: 1410, column: 11, scope: !6774)
!6783 = !DILocation(line: 1410, column: 14, scope: !6774)
!6784 = !DILocation(line: 1410, column: 17, scope: !6774)
!6785 = !DILocation(line: 1409, column: 11, scope: !6775)
!6786 = !DILocation(line: 1411, column: 20, scope: !6774)
!6787 = !DILocation(line: 1411, column: 9, scope: !6774)
!6788 = !DILocation(line: 1412, column: 5, scope: !6775)
!6789 = !DILocation(line: 1413, column: 12, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6767, file: !434, line: 1413, column: 12)
!6791 = !DILocation(line: 1413, column: 15, scope: !6790)
!6792 = !DILocation(line: 1413, column: 12, scope: !6767)
!6793 = !DILocation(line: 1415, column: 20, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !434, line: 1415, column: 11)
!6795 = distinct !DILexicalBlock(scope: !6790, file: !434, line: 1414, column: 5)
!6796 = !DILocation(line: 1415, column: 30, scope: !6794)
!6797 = !DILocation(line: 1415, column: 41, scope: !6794)
!6798 = !DILocation(line: 1415, column: 44, scope: !6794)
!6799 = !DILocation(line: 1415, column: 11, scope: !6794)
!6800 = !DILocation(line: 1415, column: 50, scope: !6794)
!6801 = !DILocation(line: 1415, column: 11, scope: !6795)
!6802 = !DILocation(line: 1416, column: 20, scope: !6794)
!6803 = !DILocation(line: 1416, column: 9, scope: !6794)
!6804 = !DILocation(line: 1417, column: 5, scope: !6795)
!6805 = !DILocation(line: 1418, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6790, file: !434, line: 1418, column: 12)
!6807 = !DILocation(line: 1418, column: 15, scope: !6806)
!6808 = !DILocation(line: 1418, column: 41, scope: !6806)
!6809 = !DILocation(line: 1418, column: 45, scope: !6806)
!6810 = !DILocation(line: 1418, column: 44, scope: !6806)
!6811 = !DILocation(line: 1418, column: 12, scope: !6790)
!6812 = !DILocation(line: 1420, column: 20, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !434, line: 1420, column: 11)
!6814 = distinct !DILexicalBlock(scope: !6806, file: !434, line: 1419, column: 5)
!6815 = !DILocation(line: 1420, column: 30, scope: !6813)
!6816 = !DILocation(line: 1420, column: 56, scope: !6813)
!6817 = !DILocation(line: 1420, column: 55, scope: !6813)
!6818 = !DILocation(line: 1420, column: 53, scope: !6813)
!6819 = !DILocation(line: 1420, column: 11, scope: !6813)
!6820 = !DILocation(line: 1420, column: 73, scope: !6813)
!6821 = !DILocation(line: 1420, column: 11, scope: !6814)
!6822 = !DILocation(line: 1421, column: 20, scope: !6813)
!6823 = !DILocation(line: 1421, column: 9, scope: !6813)
!6824 = !DILocation(line: 1422, column: 5, scope: !6814)
!6825 = !DILocation(line: 1423, column: 12, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6806, file: !434, line: 1423, column: 12)
!6827 = !DILocation(line: 1423, column: 12, scope: !6806)
!6828 = !DILocation(line: 1425, column: 32, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6826, file: !434, line: 1424, column: 5)
!6830 = !DILocation(line: 1425, column: 30, scope: !6829)
!6831 = !DILocation(line: 1425, column: 27, scope: !6829)
!6832 = !DILocation(line: 1426, column: 11, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6829, file: !434, line: 1426, column: 11)
!6834 = !DILocation(line: 1427, column: 11, scope: !6833)
!6835 = !DILocation(line: 1427, column: 32, scope: !6833)
!6836 = !DILocation(line: 1427, column: 43, scope: !6833)
!6837 = !DILocation(line: 1427, column: 53, scope: !6833)
!6838 = !DILocation(line: 1427, column: 14, scope: !6833)
!6839 = !DILocation(line: 1427, column: 63, scope: !6833)
!6840 = !DILocation(line: 1426, column: 11, scope: !6829)
!6841 = !DILocation(line: 1429, column: 21, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6833, file: !434, line: 1428, column: 9)
!6843 = !DILocation(line: 1429, column: 28, scope: !6842)
!6844 = !DILocation(line: 1430, column: 18, scope: !6842)
!6845 = !DILocation(line: 1429, column: 11, scope: !6842)
!6846 = !DILocation(line: 1431, column: 15, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6842, file: !434, line: 1431, column: 15)
!6848 = !DILocation(line: 1431, column: 18, scope: !6847)
!6849 = !DILocation(line: 1431, column: 15, scope: !6842)
!6850 = !DILocation(line: 1432, column: 24, scope: !6847)
!6851 = !DILocation(line: 1432, column: 13, scope: !6847)
!6852 = !DILocation(line: 1433, column: 9, scope: !6842)
!6853 = !DILocation(line: 1434, column: 5, scope: !6829)
!6854 = !DILabel(scope: !6168, name: "close_src_and_dst_desc", file: !434, line: 1436)
!6855 = !DILocation(line: 1436, column: 1, scope: !6168)
!6856 = !DILocation(line: 1437, column: 14, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1437, column: 7)
!6858 = !DILocation(line: 1437, column: 7, scope: !6857)
!6859 = !DILocation(line: 1437, column: 25, scope: !6857)
!6860 = !DILocation(line: 1437, column: 7, scope: !6168)
!6861 = !DILocation(line: 1439, column: 17, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6857, file: !434, line: 1438, column: 5)
!6863 = !DILocation(line: 1439, column: 24, scope: !6862)
!6864 = !DILocation(line: 1439, column: 49, scope: !6862)
!6865 = !DILocation(line: 1439, column: 7, scope: !6862)
!6866 = !DILocation(line: 1440, column: 18, scope: !6862)
!6867 = !DILocation(line: 1441, column: 5, scope: !6862)
!6868 = !DILocation(line: 1437, column: 27, scope: !6857)
!6869 = !DILabel(scope: !6168, name: "close_src_desc", file: !434, line: 1442)
!6870 = !DILocation(line: 1442, column: 1, scope: !6168)
!6871 = !DILocation(line: 1443, column: 14, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6168, file: !434, line: 1443, column: 7)
!6873 = !DILocation(line: 1443, column: 7, scope: !6872)
!6874 = !DILocation(line: 1443, column: 27, scope: !6872)
!6875 = !DILocation(line: 1443, column: 7, scope: !6168)
!6876 = !DILocation(line: 1445, column: 17, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !434, line: 1444, column: 5)
!6878 = !DILocation(line: 1445, column: 24, scope: !6877)
!6879 = !DILocation(line: 1445, column: 49, scope: !6877)
!6880 = !DILocation(line: 1445, column: 7, scope: !6877)
!6881 = !DILocation(line: 1446, column: 18, scope: !6877)
!6882 = !DILocation(line: 1447, column: 5, scope: !6877)
!6883 = !DILocation(line: 1449, column: 9, scope: !6168)
!6884 = !DILocation(line: 1449, column: 3, scope: !6168)
!6885 = !DILocation(line: 1450, column: 9, scope: !6168)
!6886 = !DILocation(line: 1450, column: 3, scope: !6168)
!6887 = !DILocation(line: 1451, column: 10, scope: !6168)
!6888 = !DILocation(line: 1451, column: 3, scope: !6168)
!6889 = !DILocation(line: 1452, column: 1, scope: !6168)
!6890 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !434, file: !434, line: 1805, type: !694, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6891 = !DILocation(line: 1807, column: 7, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6890, file: !434, line: 1807, column: 7)
!6893 = !DILocation(line: 1807, column: 29, scope: !6892)
!6894 = !DILocation(line: 1807, column: 7, scope: !6890)
!6895 = !DILocation(line: 1808, column: 5, scope: !6892)
!6896 = !DILocation(line: 1810, column: 1, scope: !6890)
!6897 = distinct !DISubprogram(name: "chown_failure_ok", scope: !434, file: !434, line: 3061, type: !3798, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6898 = !DILocalVariable(name: "x", arg: 1, scope: !6897, file: !434, line: 3061, type: !3505)
!6899 = !DILocation(line: 3061, column: 44, scope: !6897)
!6900 = !DILocation(line: 3067, column: 12, scope: !6897)
!6901 = !DILocation(line: 3067, column: 18, scope: !6897)
!6902 = !DILocation(line: 3067, column: 27, scope: !6897)
!6903 = !DILocation(line: 3067, column: 30, scope: !6897)
!6904 = !DILocation(line: 3067, column: 36, scope: !6897)
!6905 = !DILocation(line: 3067, column: 47, scope: !6897)
!6906 = !DILocation(line: 3067, column: 51, scope: !6897)
!6907 = !DILocation(line: 3067, column: 54, scope: !6897)
!6908 = !DILocation(line: 3067, column: 50, scope: !6897)
!6909 = !DILocation(line: 0, scope: !6897)
!6910 = !DILocation(line: 3067, column: 3, scope: !6897)
!6911 = distinct !DISubprogram(name: "utimens_symlink", scope: !434, file: !434, line: 189, type: !6912, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!5, !180, !6914}
!6914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6915, size: 64)
!6915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!6916 = !DILocalVariable(name: "file", arg: 1, scope: !6911, file: !434, line: 189, type: !180)
!6917 = !DILocation(line: 189, column: 30, scope: !6911)
!6918 = !DILocalVariable(name: "timespec", arg: 2, scope: !6911, file: !434, line: 189, type: !6914)
!6919 = !DILocation(line: 189, column: 59, scope: !6911)
!6920 = !DILocalVariable(name: "err", scope: !6911, file: !434, line: 191, type: !5)
!6921 = !DILocation(line: 191, column: 7, scope: !6911)
!6922 = !DILocation(line: 191, column: 23, scope: !6911)
!6923 = !DILocation(line: 191, column: 29, scope: !6911)
!6924 = !DILocation(line: 191, column: 13, scope: !6911)
!6925 = !DILocation(line: 195, column: 7, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6911, file: !434, line: 195, column: 7)
!6927 = !DILocation(line: 195, column: 11, scope: !6926)
!6928 = !DILocation(line: 195, column: 14, scope: !6926)
!6929 = !DILocation(line: 195, column: 20, scope: !6926)
!6930 = !DILocation(line: 195, column: 7, scope: !6911)
!6931 = !DILocation(line: 196, column: 9, scope: !6926)
!6932 = !DILocation(line: 196, column: 5, scope: !6926)
!6933 = !DILocation(line: 197, column: 10, scope: !6911)
!6934 = !DILocation(line: 197, column: 3, scope: !6911)
!6935 = distinct !DISubprogram(name: "set_owner", scope: !434, file: !434, line: 816, type: !6936, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!6936 = !DISubroutineType(types: !6937)
!6937 = !{!5, !3505, !180, !5, !519, !139, !519}
!6938 = !DILocalVariable(name: "x", arg: 1, scope: !6935, file: !434, line: 816, type: !3505)
!6939 = !DILocation(line: 816, column: 37, scope: !6935)
!6940 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6935, file: !434, line: 816, type: !180)
!6941 = !DILocation(line: 816, column: 52, scope: !6935)
!6942 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !6935, file: !434, line: 816, type: !5)
!6943 = !DILocation(line: 816, column: 66, scope: !6935)
!6944 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6935, file: !434, line: 817, type: !519)
!6945 = !DILocation(line: 817, column: 31, scope: !6935)
!6946 = !DILocalVariable(name: "new_dst", arg: 5, scope: !6935, file: !434, line: 817, type: !139)
!6947 = !DILocation(line: 817, column: 44, scope: !6935)
!6948 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !6935, file: !434, line: 818, type: !519)
!6949 = !DILocation(line: 818, column: 31, scope: !6935)
!6950 = !DILocalVariable(name: "uid", scope: !6935, file: !434, line: 820, type: !124)
!6951 = !DILocation(line: 820, column: 9, scope: !6935)
!6952 = !DILocation(line: 820, column: 15, scope: !6935)
!6953 = !DILocation(line: 820, column: 23, scope: !6935)
!6954 = !DILocalVariable(name: "gid", scope: !6935, file: !434, line: 821, type: !126)
!6955 = !DILocation(line: 821, column: 9, scope: !6935)
!6956 = !DILocation(line: 821, column: 15, scope: !6935)
!6957 = !DILocation(line: 821, column: 23, scope: !6935)
!6958 = !DILocation(line: 829, column: 8, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6935, file: !434, line: 829, column: 7)
!6960 = !DILocation(line: 829, column: 16, scope: !6959)
!6961 = !DILocation(line: 829, column: 20, scope: !6959)
!6962 = !DILocation(line: 829, column: 23, scope: !6959)
!6963 = !DILocation(line: 829, column: 37, scope: !6959)
!6964 = !DILocation(line: 829, column: 40, scope: !6959)
!6965 = !DILocation(line: 829, column: 43, scope: !6959)
!6966 = !DILocation(line: 829, column: 53, scope: !6959)
!6967 = !DILocation(line: 829, column: 56, scope: !6959)
!6968 = !DILocation(line: 829, column: 59, scope: !6959)
!6969 = !DILocation(line: 829, column: 7, scope: !6935)
!6970 = !DILocalVariable(name: "old_mode", scope: !6971, file: !434, line: 831, type: !136)
!6971 = distinct !DILexicalBlock(scope: !6959, file: !434, line: 830, column: 5)
!6972 = !DILocation(line: 831, column: 14, scope: !6971)
!6973 = !DILocation(line: 831, column: 25, scope: !6971)
!6974 = !DILocation(line: 831, column: 33, scope: !6971)
!6975 = !DILocalVariable(name: "new_mode", scope: !6971, file: !434, line: 832, type: !136)
!6976 = !DILocation(line: 832, column: 14, scope: !6971)
!6977 = !DILocation(line: 833, column: 10, scope: !6971)
!6978 = !DILocation(line: 833, column: 13, scope: !6971)
!6979 = !DILocation(line: 833, column: 27, scope: !6971)
!6980 = !DILocation(line: 833, column: 30, scope: !6971)
!6981 = !DILocation(line: 833, column: 33, scope: !6971)
!6982 = !DILocation(line: 833, column: 45, scope: !6971)
!6983 = !DILocation(line: 833, column: 53, scope: !6971)
!6984 = !DILocation(line: 833, column: 63, scope: !6971)
!6985 = !DILocation(line: 833, column: 66, scope: !6971)
!6986 = !DILocalVariable(name: "restrictive_temp_mode", scope: !6971, file: !434, line: 834, type: !136)
!6987 = !DILocation(line: 834, column: 14, scope: !6971)
!6988 = !DILocation(line: 834, column: 38, scope: !6971)
!6989 = !DILocation(line: 834, column: 49, scope: !6971)
!6990 = !DILocation(line: 834, column: 47, scope: !6971)
!6991 = !DILocation(line: 834, column: 58, scope: !6971)
!6992 = !DILocation(line: 837, column: 16, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6971, file: !434, line: 836, column: 11)
!6994 = !DILocation(line: 837, column: 25, scope: !6993)
!6995 = !DILocation(line: 838, column: 20, scope: !6993)
!6996 = !DILocation(line: 838, column: 19, scope: !6993)
!6997 = !DILocation(line: 838, column: 29, scope: !6993)
!6998 = !DILocation(line: 838, column: 39, scope: !6993)
!6999 = !DILocation(line: 838, column: 49, scope: !6993)
!7000 = !DILocation(line: 838, column: 16, scope: !6993)
!7001 = !DILocation(line: 839, column: 11, scope: !6993)
!7002 = !DILocation(line: 839, column: 24, scope: !6993)
!7003 = !DILocation(line: 839, column: 34, scope: !6993)
!7004 = !DILocation(line: 839, column: 45, scope: !6993)
!7005 = !DILocation(line: 839, column: 14, scope: !6993)
!7006 = !DILocation(line: 839, column: 68, scope: !6993)
!7007 = !DILocation(line: 836, column: 11, scope: !6971)
!7008 = !DILocation(line: 841, column: 35, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !434, line: 841, column: 15)
!7010 = distinct !DILexicalBlock(scope: !6993, file: !434, line: 840, column: 9)
!7011 = !DILocation(line: 841, column: 17, scope: !7009)
!7012 = !DILocation(line: 841, column: 15, scope: !7010)
!7013 = !DILocation(line: 842, column: 23, scope: !7009)
!7014 = !DILocation(line: 842, column: 30, scope: !7009)
!7015 = !DILocation(line: 843, column: 20, scope: !7009)
!7016 = !DILocation(line: 842, column: 13, scope: !7009)
!7017 = !DILocation(line: 844, column: 19, scope: !7010)
!7018 = !DILocation(line: 844, column: 22, scope: !7010)
!7019 = !DILocation(line: 844, column: 18, scope: !7010)
!7020 = !DILocation(line: 844, column: 11, scope: !7010)
!7021 = !DILocation(line: 846, column: 5, scope: !6971)
!7022 = !DILocation(line: 848, column: 22, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6935, file: !434, line: 848, column: 7)
!7024 = !DILocation(line: 848, column: 32, scope: !7023)
!7025 = !DILocation(line: 848, column: 7, scope: !6935)
!7026 = !DILocation(line: 850, column: 19, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !434, line: 850, column: 11)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !434, line: 849, column: 5)
!7029 = !DILocation(line: 850, column: 30, scope: !7027)
!7030 = !DILocation(line: 850, column: 35, scope: !7027)
!7031 = !DILocation(line: 850, column: 11, scope: !7027)
!7032 = !DILocation(line: 850, column: 40, scope: !7027)
!7033 = !DILocation(line: 850, column: 11, scope: !7028)
!7034 = !DILocation(line: 851, column: 9, scope: !7027)
!7035 = !DILocation(line: 852, column: 11, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7028, file: !434, line: 852, column: 11)
!7037 = !DILocation(line: 852, column: 17, scope: !7036)
!7038 = !DILocation(line: 852, column: 26, scope: !7036)
!7039 = !DILocation(line: 852, column: 29, scope: !7036)
!7040 = !DILocation(line: 852, column: 35, scope: !7036)
!7041 = !DILocation(line: 852, column: 11, scope: !7028)
!7042 = !DILocalVariable(name: "saved_errno", scope: !7043, file: !434, line: 856, type: !5)
!7043 = distinct !DILexicalBlock(scope: !7036, file: !434, line: 853, column: 9)
!7044 = !DILocation(line: 856, column: 15, scope: !7043)
!7045 = !DILocation(line: 856, column: 29, scope: !7043)
!7046 = !DILocalVariable(name: "__x", scope: !7047, file: !434, line: 857, type: !5)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !434, line: 857, column: 11)
!7048 = !DILocation(line: 857, column: 11, scope: !7047)
!7049 = !DILocation(line: 858, column: 19, scope: !7043)
!7050 = !DILocation(line: 858, column: 11, scope: !7043)
!7051 = !DILocation(line: 858, column: 17, scope: !7043)
!7052 = !DILocation(line: 859, column: 9, scope: !7043)
!7053 = !DILocation(line: 860, column: 5, scope: !7028)
!7054 = !DILocation(line: 863, column: 19, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !434, line: 863, column: 11)
!7056 = distinct !DILexicalBlock(scope: !7023, file: !434, line: 862, column: 5)
!7057 = !DILocation(line: 863, column: 29, scope: !7055)
!7058 = !DILocation(line: 863, column: 34, scope: !7055)
!7059 = !DILocation(line: 863, column: 11, scope: !7055)
!7060 = !DILocation(line: 863, column: 39, scope: !7055)
!7061 = !DILocation(line: 863, column: 11, scope: !7056)
!7062 = !DILocation(line: 864, column: 9, scope: !7055)
!7063 = !DILocation(line: 865, column: 11, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7056, file: !434, line: 865, column: 11)
!7065 = !DILocation(line: 865, column: 17, scope: !7064)
!7066 = !DILocation(line: 865, column: 26, scope: !7064)
!7067 = !DILocation(line: 865, column: 29, scope: !7064)
!7068 = !DILocation(line: 865, column: 35, scope: !7064)
!7069 = !DILocation(line: 865, column: 11, scope: !7056)
!7070 = !DILocalVariable(name: "saved_errno", scope: !7071, file: !434, line: 869, type: !5)
!7071 = distinct !DILexicalBlock(scope: !7064, file: !434, line: 866, column: 9)
!7072 = !DILocation(line: 869, column: 15, scope: !7071)
!7073 = !DILocation(line: 869, column: 29, scope: !7071)
!7074 = !DILocalVariable(name: "__x", scope: !7075, file: !434, line: 870, type: !5)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !434, line: 870, column: 11)
!7076 = !DILocation(line: 870, column: 11, scope: !7075)
!7077 = !DILocation(line: 871, column: 19, scope: !7071)
!7078 = !DILocation(line: 871, column: 11, scope: !7071)
!7079 = !DILocation(line: 871, column: 17, scope: !7071)
!7080 = !DILocation(line: 872, column: 9, scope: !7071)
!7081 = !DILocation(line: 875, column: 27, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !6935, file: !434, line: 875, column: 7)
!7083 = !DILocation(line: 875, column: 9, scope: !7082)
!7084 = !DILocation(line: 875, column: 7, scope: !6935)
!7085 = !DILocation(line: 877, column: 17, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7082, file: !434, line: 876, column: 5)
!7087 = !DILocation(line: 877, column: 24, scope: !7086)
!7088 = !DILocation(line: 878, column: 14, scope: !7086)
!7089 = !DILocation(line: 877, column: 7, scope: !7086)
!7090 = !DILocation(line: 879, column: 11, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7086, file: !434, line: 879, column: 11)
!7092 = !DILocation(line: 879, column: 14, scope: !7091)
!7093 = !DILocation(line: 879, column: 11, scope: !7086)
!7094 = !DILocation(line: 880, column: 9, scope: !7091)
!7095 = !DILocation(line: 881, column: 5, scope: !7086)
!7096 = !DILocation(line: 883, column: 3, scope: !6935)
!7097 = !DILocation(line: 884, column: 1, scope: !6935)
!7098 = distinct !DISubprogram(name: "copy_attr", scope: !434, file: !434, line: 722, type: !7099, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!139, !180, !5, !180, !5, !3505}
!7101 = !DILocalVariable(name: "src_path", arg: 1, scope: !7098, file: !434, line: 722, type: !180)
!7102 = !DILocation(line: 722, column: 24, scope: !7098)
!7103 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7098, file: !434, line: 723, type: !5)
!7104 = !DILocation(line: 723, column: 16, scope: !7098)
!7105 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7098, file: !434, line: 724, type: !180)
!7106 = !DILocation(line: 724, column: 24, scope: !7098)
!7107 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7098, file: !434, line: 725, type: !5)
!7108 = !DILocation(line: 725, column: 16, scope: !7098)
!7109 = !DILocalVariable(name: "x", arg: 5, scope: !7098, file: !434, line: 726, type: !3505)
!7110 = !DILocation(line: 726, column: 37, scope: !7098)
!7111 = !DILocation(line: 728, column: 3, scope: !7098)
!7112 = distinct !DISubprogram(name: "set_author", scope: !434, file: !434, line: 892, type: !7113, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{null, !180, !5, !519}
!7115 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7112, file: !434, line: 892, type: !180)
!7116 = !DILocation(line: 892, column: 25, scope: !7112)
!7117 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7112, file: !434, line: 892, type: !5)
!7118 = !DILocation(line: 892, column: 39, scope: !7112)
!7119 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7112, file: !434, line: 892, type: !519)
!7120 = !DILocation(line: 892, column: 69, scope: !7112)
!7121 = !DILocation(line: 913, column: 10, scope: !7112)
!7122 = !DILocation(line: 914, column: 10, scope: !7112)
!7123 = !DILocation(line: 915, column: 10, scope: !7112)
!7124 = !DILocation(line: 917, column: 1, scope: !7112)
!7125 = !DILocation(line: 3090, column: 7, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !589, file: !434, line: 3090, column: 7)
!7127 = !DILocation(line: 3090, column: 12, scope: !7126)
!7128 = !DILocation(line: 3090, column: 7, scope: !589)
!7129 = !DILocation(line: 3092, column: 14, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7126, file: !434, line: 3091, column: 5)
!7131 = !DILocation(line: 3092, column: 12, scope: !7130)
!7132 = !DILocation(line: 3093, column: 14, scope: !7130)
!7133 = !DILocation(line: 3093, column: 7, scope: !7130)
!7134 = !DILocation(line: 3094, column: 5, scope: !7130)
!7135 = !DILocation(line: 3095, column: 10, scope: !589)
!7136 = !DILocation(line: 3095, column: 3, scope: !589)
!7137 = distinct !DISubprogram(name: "owner_failure_ok", scope: !434, file: !434, line: 3075, type: !3798, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7138 = !DILocalVariable(name: "x", arg: 1, scope: !7137, file: !434, line: 3075, type: !3505)
!7139 = !DILocation(line: 3075, column: 44, scope: !7137)
!7140 = !DILocation(line: 3077, column: 12, scope: !7137)
!7141 = !DILocation(line: 3077, column: 18, scope: !7137)
!7142 = !DILocation(line: 3077, column: 27, scope: !7137)
!7143 = !DILocation(line: 3077, column: 30, scope: !7137)
!7144 = !DILocation(line: 3077, column: 36, scope: !7137)
!7145 = !DILocation(line: 3077, column: 47, scope: !7137)
!7146 = !DILocation(line: 3077, column: 51, scope: !7137)
!7147 = !DILocation(line: 3077, column: 54, scope: !7137)
!7148 = !DILocation(line: 3077, column: 50, scope: !7137)
!7149 = !DILocation(line: 0, scope: !7137)
!7150 = !DILocation(line: 3077, column: 3, scope: !7137)
!7151 = distinct !DISubprogram(name: "clone_file", scope: !434, file: !434, line: 370, type: !1170, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7152 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7151, file: !434, line: 370, type: !5)
!7153 = !DILocation(line: 370, column: 17, scope: !7151)
!7154 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7151, file: !434, line: 370, type: !5)
!7155 = !DILocation(line: 370, column: 30, scope: !7151)
!7156 = !DILocation(line: 373, column: 17, scope: !7151)
!7157 = !DILocation(line: 373, column: 35, scope: !7151)
!7158 = !DILocation(line: 373, column: 10, scope: !7151)
!7159 = !DILocation(line: 373, column: 3, scope: !7151)
!7160 = distinct !DISubprogram(name: "io_blksize", scope: !7161, file: !7161, line: 75, type: !7162, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7161 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mohamad/clone/coreutils")
!7162 = !DISubroutineType(types: !7163)
!7163 = !{!52, !470}
!7164 = !DILocalVariable(name: "sb", arg: 1, scope: !7160, file: !7161, line: 75, type: !470)
!7165 = !DILocation(line: 75, column: 25, scope: !7160)
!7166 = !DILocation(line: 77, column: 10, scope: !7160)
!7167 = !DILocation(line: 77, column: 3, scope: !7160)
!7168 = distinct !DISubprogram(name: "is_probably_sparse", scope: !434, file: !434, line: 1031, type: !7169, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!139, !519}
!7171 = !DILocalVariable(name: "sb", arg: 1, scope: !7168, file: !434, line: 1031, type: !519)
!7172 = !DILocation(line: 1031, column: 40, scope: !7168)
!7173 = !DILocation(line: 1034, column: 14, scope: !7168)
!7174 = !DILocation(line: 1035, column: 11, scope: !7168)
!7175 = !DILocation(line: 1035, column: 14, scope: !7168)
!7176 = !DILocation(line: 1035, column: 33, scope: !7168)
!7177 = !DILocation(line: 1035, column: 37, scope: !7168)
!7178 = !DILocation(line: 1035, column: 45, scope: !7168)
!7179 = !DILocation(line: 1035, column: 31, scope: !7168)
!7180 = !DILocation(line: 0, scope: !7168)
!7181 = !DILocation(line: 1033, column: 3, scope: !7168)
!7182 = distinct !DISubprogram(name: "ptr_align", scope: !291, file: !291, line: 498, type: !7183, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!47, !685, !52}
!7185 = !DILocalVariable(name: "ptr", arg: 1, scope: !7182, file: !291, line: 498, type: !685)
!7186 = !DILocation(line: 498, column: 24, scope: !7182)
!7187 = !DILocalVariable(name: "alignment", arg: 2, scope: !7182, file: !291, line: 498, type: !52)
!7188 = !DILocation(line: 498, column: 36, scope: !7182)
!7189 = !DILocalVariable(name: "p0", scope: !7182, file: !291, line: 500, type: !180)
!7190 = !DILocation(line: 500, column: 15, scope: !7182)
!7191 = !DILocation(line: 500, column: 20, scope: !7182)
!7192 = !DILocalVariable(name: "p1", scope: !7182, file: !291, line: 501, type: !180)
!7193 = !DILocation(line: 501, column: 15, scope: !7182)
!7194 = !DILocation(line: 501, column: 20, scope: !7182)
!7195 = !DILocation(line: 501, column: 25, scope: !7182)
!7196 = !DILocation(line: 501, column: 23, scope: !7182)
!7197 = !DILocation(line: 501, column: 35, scope: !7182)
!7198 = !DILocation(line: 502, column: 20, scope: !7182)
!7199 = !DILocation(line: 502, column: 34, scope: !7182)
!7200 = !DILocation(line: 502, column: 25, scope: !7182)
!7201 = !DILocation(line: 502, column: 39, scope: !7182)
!7202 = !DILocation(line: 502, column: 37, scope: !7182)
!7203 = !DILocation(line: 502, column: 23, scope: !7182)
!7204 = !DILocation(line: 502, column: 3, scope: !7182)
!7205 = distinct !DISubprogram(name: "extent_copy", scope: !434, file: !434, line: 423, type: !7206, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!139, !5, !5, !7, !52, !52, !437, !86, !180, !180, !3769}
!7208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !573, line: 36, size: 384, elements: !7209)
!7209 = !{!7210, !7211, !7212, !7213, !7214, !7215, !7216}
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7208, file: !573, line: 39, baseType: !5, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !7208, file: !573, line: 42, baseType: !437, size: 64, offset: 64)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !7208, file: !573, line: 45, baseType: !67, size: 32, offset: 128)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !7208, file: !573, line: 48, baseType: !52, size: 64, offset: 192)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !7208, file: !573, line: 52, baseType: !139, size: 8, offset: 256)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !7208, file: !573, line: 55, baseType: !139, size: 8, offset: 264)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !7208, file: !573, line: 58, baseType: !571, size: 64, offset: 320)
!7217 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7205, file: !434, line: 423, type: !5)
!7218 = !DILocation(line: 423, column: 18, scope: !7205)
!7219 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7205, file: !434, line: 423, type: !5)
!7220 = !DILocation(line: 423, column: 30, scope: !7205)
!7221 = !DILocalVariable(name: "buf", arg: 3, scope: !7205, file: !434, line: 423, type: !7)
!7222 = !DILocation(line: 423, column: 45, scope: !7205)
!7223 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7205, file: !434, line: 423, type: !52)
!7224 = !DILocation(line: 423, column: 57, scope: !7205)
!7225 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7205, file: !434, line: 424, type: !52)
!7226 = !DILocation(line: 424, column: 21, scope: !7205)
!7227 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7205, file: !434, line: 424, type: !437)
!7228 = !DILocation(line: 424, column: 38, scope: !7205)
!7229 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7205, file: !434, line: 425, type: !86)
!7230 = !DILocation(line: 425, column: 31, scope: !7205)
!7231 = !DILocalVariable(name: "src_name", arg: 8, scope: !7205, file: !434, line: 426, type: !180)
!7232 = !DILocation(line: 426, column: 26, scope: !7205)
!7233 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7205, file: !434, line: 426, type: !180)
!7234 = !DILocation(line: 426, column: 48, scope: !7205)
!7235 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7205, file: !434, line: 427, type: !3769)
!7236 = !DILocation(line: 427, column: 20, scope: !7205)
!7237 = !DILocalVariable(name: "scan", scope: !7205, file: !434, line: 429, type: !7208)
!7238 = !DILocation(line: 429, column: 22, scope: !7205)
!7239 = !DILocalVariable(name: "last_ext_start", scope: !7205, file: !434, line: 430, type: !437)
!7240 = !DILocation(line: 430, column: 9, scope: !7205)
!7241 = !DILocalVariable(name: "last_ext_len", scope: !7205, file: !434, line: 431, type: !437)
!7242 = !DILocation(line: 431, column: 9, scope: !7205)
!7243 = !DILocalVariable(name: "dest_pos", scope: !7205, file: !434, line: 435, type: !437)
!7244 = !DILocation(line: 435, column: 9, scope: !7205)
!7245 = !DILocation(line: 437, column: 21, scope: !7205)
!7246 = !DILocation(line: 437, column: 3, scope: !7205)
!7247 = !DILocation(line: 439, column: 4, scope: !7205)
!7248 = !DILocation(line: 439, column: 24, scope: !7205)
!7249 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7205, file: !434, line: 440, type: !139)
!7250 = !DILocation(line: 440, column: 8, scope: !7205)
!7251 = !DILocation(line: 441, column: 3, scope: !7205)
!7252 = !DILocalVariable(name: "ok", scope: !7253, file: !434, line: 443, type: !139)
!7253 = distinct !DILexicalBlock(scope: !7205, file: !434, line: 442, column: 5)
!7254 = !DILocation(line: 443, column: 12, scope: !7253)
!7255 = !DILocation(line: 443, column: 17, scope: !7253)
!7256 = !DILocation(line: 444, column: 13, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !434, line: 444, column: 11)
!7258 = !DILocation(line: 444, column: 11, scope: !7253)
!7259 = !DILocation(line: 446, column: 20, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !434, line: 446, column: 15)
!7261 = distinct !DILexicalBlock(scope: !7257, file: !434, line: 445, column: 9)
!7262 = !DILocation(line: 446, column: 15, scope: !7261)
!7263 = !DILocation(line: 447, column: 13, scope: !7260)
!7264 = !DILocation(line: 449, column: 20, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7261, file: !434, line: 449, column: 15)
!7266 = !DILocation(line: 449, column: 15, scope: !7261)
!7267 = !DILocation(line: 451, column: 16, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7265, file: !434, line: 450, column: 13)
!7269 = !DILocation(line: 451, column: 36, scope: !7268)
!7270 = !DILocation(line: 452, column: 15, scope: !7268)
!7271 = !DILocation(line: 455, column: 21, scope: !7261)
!7272 = !DILocation(line: 455, column: 28, scope: !7261)
!7273 = !DILocation(line: 456, column: 18, scope: !7261)
!7274 = !DILocation(line: 455, column: 11, scope: !7261)
!7275 = !DILocation(line: 457, column: 11, scope: !7261)
!7276 = !DILocalVariable(name: "empty_extent", scope: !7253, file: !434, line: 460, type: !139)
!7277 = !DILocation(line: 460, column: 12, scope: !7253)
!7278 = !DILocalVariable(name: "i", scope: !7279, file: !434, line: 461, type: !67)
!7279 = distinct !DILexicalBlock(scope: !7253, file: !434, line: 461, column: 7)
!7280 = !DILocation(line: 461, column: 25, scope: !7279)
!7281 = !DILocation(line: 461, column: 12, scope: !7279)
!7282 = !DILocation(line: 461, column: 32, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7279, file: !434, line: 461, column: 7)
!7284 = !DILocation(line: 461, column: 41, scope: !7283)
!7285 = !DILocation(line: 461, column: 34, scope: !7283)
!7286 = !DILocation(line: 461, column: 50, scope: !7283)
!7287 = !DILocation(line: 461, column: 53, scope: !7283)
!7288 = !DILocation(line: 461, column: 7, scope: !7279)
!7289 = !DILocalVariable(name: "ext_start", scope: !7290, file: !434, line: 463, type: !437)
!7290 = distinct !DILexicalBlock(scope: !7283, file: !434, line: 462, column: 9)
!7291 = !DILocation(line: 463, column: 17, scope: !7290)
!7292 = !DILocalVariable(name: "ext_len", scope: !7290, file: !434, line: 464, type: !437)
!7293 = !DILocation(line: 464, column: 17, scope: !7290)
!7294 = !DILocalVariable(name: "ext_hole_size", scope: !7290, file: !434, line: 465, type: !437)
!7295 = !DILocation(line: 465, column: 17, scope: !7290)
!7296 = !DILocation(line: 467, column: 15, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7290, file: !434, line: 467, column: 15)
!7298 = !DILocation(line: 467, column: 24, scope: !7297)
!7299 = !DILocation(line: 467, column: 17, scope: !7297)
!7300 = !DILocation(line: 467, column: 15, scope: !7290)
!7301 = !DILocation(line: 469, column: 32, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7297, file: !434, line: 468, column: 13)
!7303 = !DILocation(line: 469, column: 41, scope: !7302)
!7304 = !DILocation(line: 469, column: 27, scope: !7302)
!7305 = !DILocation(line: 469, column: 44, scope: !7302)
!7306 = !DILocation(line: 469, column: 25, scope: !7302)
!7307 = !DILocation(line: 470, column: 30, scope: !7302)
!7308 = !DILocation(line: 470, column: 39, scope: !7302)
!7309 = !DILocation(line: 470, column: 25, scope: !7302)
!7310 = !DILocation(line: 470, column: 42, scope: !7302)
!7311 = !DILocation(line: 470, column: 23, scope: !7302)
!7312 = !DILocation(line: 471, column: 13, scope: !7302)
!7313 = !DILocation(line: 474, column: 16, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7297, file: !434, line: 473, column: 13)
!7315 = !DILocation(line: 475, column: 27, scope: !7314)
!7316 = !DILocation(line: 475, column: 49, scope: !7314)
!7317 = !DILocation(line: 475, column: 58, scope: !7314)
!7318 = !DILocation(line: 475, column: 44, scope: !7314)
!7319 = !DILocation(line: 475, column: 61, scope: !7314)
!7320 = !DILocation(line: 475, column: 42, scope: !7314)
!7321 = !DILocation(line: 475, column: 25, scope: !7314)
!7322 = !DILocation(line: 476, column: 23, scope: !7314)
!7323 = !DILocation(line: 486, column: 15, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7290, file: !434, line: 486, column: 15)
!7325 = !DILocation(line: 486, column: 32, scope: !7324)
!7326 = !DILocation(line: 486, column: 44, scope: !7324)
!7327 = !DILocation(line: 486, column: 42, scope: !7324)
!7328 = !DILocation(line: 486, column: 30, scope: !7324)
!7329 = !DILocation(line: 486, column: 15, scope: !7290)
!7330 = !DILocation(line: 488, column: 19, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !434, line: 488, column: 19)
!7332 = distinct !DILexicalBlock(scope: !7324, file: !434, line: 487, column: 13)
!7333 = !DILocation(line: 488, column: 36, scope: !7331)
!7334 = !DILocation(line: 488, column: 34, scope: !7331)
!7335 = !DILocation(line: 488, column: 19, scope: !7332)
!7336 = !DILocation(line: 489, column: 29, scope: !7331)
!7337 = !DILocation(line: 489, column: 27, scope: !7331)
!7338 = !DILocation(line: 489, column: 17, scope: !7331)
!7339 = !DILocation(line: 490, column: 25, scope: !7332)
!7340 = !DILocation(line: 490, column: 42, scope: !7332)
!7341 = !DILocation(line: 490, column: 40, scope: !7332)
!7342 = !DILocation(line: 490, column: 23, scope: !7332)
!7343 = !DILocation(line: 491, column: 13, scope: !7332)
!7344 = !DILocation(line: 493, column: 27, scope: !7290)
!7345 = !DILocation(line: 493, column: 39, scope: !7290)
!7346 = !DILocation(line: 493, column: 37, scope: !7290)
!7347 = !DILocation(line: 493, column: 56, scope: !7290)
!7348 = !DILocation(line: 493, column: 54, scope: !7290)
!7349 = !DILocation(line: 493, column: 25, scope: !7290)
!7350 = !DILocation(line: 495, column: 29, scope: !7290)
!7351 = !DILocation(line: 497, column: 15, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7290, file: !434, line: 497, column: 15)
!7353 = !DILocation(line: 497, column: 15, scope: !7290)
!7354 = !DILocation(line: 499, column: 26, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !434, line: 499, column: 19)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !434, line: 498, column: 13)
!7357 = !DILocation(line: 499, column: 34, scope: !7355)
!7358 = !DILocation(line: 499, column: 19, scope: !7355)
!7359 = !DILocation(line: 499, column: 55, scope: !7355)
!7360 = !DILocation(line: 499, column: 19, scope: !7356)
!7361 = !DILocation(line: 501, column: 29, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7355, file: !434, line: 500, column: 17)
!7363 = !DILocation(line: 501, column: 36, scope: !7362)
!7364 = !DILocation(line: 501, column: 58, scope: !7362)
!7365 = !DILocation(line: 501, column: 19, scope: !7362)
!7366 = !DILabel(scope: !7362, name: "fail", file: !434, line: 502)
!7367 = !DILocation(line: 502, column: 17, scope: !7362)
!7368 = !DILocation(line: 503, column: 19, scope: !7362)
!7369 = !DILocation(line: 504, column: 19, scope: !7362)
!7370 = !DILocation(line: 507, column: 20, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7356, file: !434, line: 507, column: 19)
!7372 = !DILocation(line: 507, column: 33, scope: !7371)
!7373 = !DILocation(line: 507, column: 36, scope: !7371)
!7374 = !DILocation(line: 507, column: 48, scope: !7371)
!7375 = !DILocation(line: 508, column: 19, scope: !7371)
!7376 = !DILocation(line: 508, column: 24, scope: !7371)
!7377 = !DILocation(line: 508, column: 37, scope: !7371)
!7378 = !DILocation(line: 508, column: 40, scope: !7371)
!7379 = !DILocation(line: 508, column: 52, scope: !7371)
!7380 = !DILocation(line: 507, column: 19, scope: !7356)
!7381 = !DILocation(line: 510, column: 38, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !434, line: 510, column: 23)
!7383 = distinct !DILexicalBlock(scope: !7371, file: !434, line: 509, column: 17)
!7384 = !DILocation(line: 510, column: 47, scope: !7382)
!7385 = !DILocation(line: 511, column: 38, scope: !7382)
!7386 = !DILocation(line: 511, column: 50, scope: !7382)
!7387 = !DILocation(line: 512, column: 38, scope: !7382)
!7388 = !DILocation(line: 510, column: 25, scope: !7382)
!7389 = !DILocation(line: 510, column: 23, scope: !7383)
!7390 = !DILocation(line: 513, column: 21, scope: !7382)
!7391 = !DILocation(line: 514, column: 37, scope: !7383)
!7392 = !DILocation(line: 515, column: 17, scope: !7383)
!7393 = !DILocalVariable(name: "nzeros", scope: !7394, file: !434, line: 521, type: !437)
!7394 = distinct !DILexicalBlock(scope: !7371, file: !434, line: 517, column: 17)
!7395 = !DILocation(line: 521, column: 25, scope: !7394)
!7396 = !DILocation(line: 521, column: 34, scope: !7394)
!7397 = !DILocation(line: 522, column: 23, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7394, file: !434, line: 522, column: 23)
!7399 = !DILocation(line: 522, column: 23, scope: !7394)
!7400 = !DILocation(line: 523, column: 30, scope: !7398)
!7401 = !DILocation(line: 523, column: 28, scope: !7398)
!7402 = !DILocation(line: 523, column: 21, scope: !7398)
!7403 = !DILocation(line: 525, column: 38, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7394, file: !434, line: 525, column: 23)
!7405 = !DILocation(line: 525, column: 47, scope: !7404)
!7406 = !DILocation(line: 525, column: 25, scope: !7404)
!7407 = !DILocation(line: 525, column: 23, scope: !7394)
!7408 = !DILocation(line: 527, column: 33, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7404, file: !434, line: 526, column: 21)
!7410 = !DILocation(line: 527, column: 40, scope: !7409)
!7411 = !DILocation(line: 528, column: 30, scope: !7409)
!7412 = !DILocation(line: 527, column: 23, scope: !7409)
!7413 = !DILocation(line: 529, column: 23, scope: !7409)
!7414 = !DILocation(line: 532, column: 30, scope: !7394)
!7415 = !DILocation(line: 532, column: 28, scope: !7394)
!7416 = !DILocation(line: 534, column: 13, scope: !7356)
!7417 = !DILocation(line: 536, column: 28, scope: !7290)
!7418 = !DILocation(line: 536, column: 26, scope: !7290)
!7419 = !DILocalVariable(name: "n_read", scope: !7420, file: !434, line: 553, type: !437)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !434, line: 552, column: 13)
!7421 = distinct !DILexicalBlock(scope: !7290, file: !434, line: 544, column: 15)
!7422 = !DILocation(line: 553, column: 21, scope: !7420)
!7423 = !DILocation(line: 554, column: 28, scope: !7420)
!7424 = !DILocation(line: 555, column: 30, scope: !7420)
!7425 = !DILocation(line: 555, column: 28, scope: !7420)
!7426 = !DILocalVariable(name: "read_hole", scope: !7420, file: !434, line: 556, type: !139)
!7427 = !DILocation(line: 556, column: 20, scope: !7420)
!7428 = !DILocation(line: 558, column: 35, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7420, file: !434, line: 558, column: 20)
!7430 = !DILocation(line: 558, column: 43, scope: !7429)
!7431 = !DILocation(line: 558, column: 52, scope: !7429)
!7432 = !DILocation(line: 558, column: 57, scope: !7429)
!7433 = !DILocation(line: 559, column: 35, scope: !7429)
!7434 = !DILocation(line: 559, column: 47, scope: !7429)
!7435 = !DILocation(line: 559, column: 66, scope: !7429)
!7436 = !DILocation(line: 560, column: 41, scope: !7429)
!7437 = !DILocation(line: 560, column: 51, scope: !7429)
!7438 = !DILocation(line: 560, column: 61, scope: !7429)
!7439 = !DILocation(line: 558, column: 22, scope: !7429)
!7440 = !DILocation(line: 558, column: 20, scope: !7420)
!7441 = !DILocation(line: 562, column: 17, scope: !7429)
!7442 = !DILocation(line: 564, column: 26, scope: !7420)
!7443 = !DILocation(line: 564, column: 38, scope: !7420)
!7444 = !DILocation(line: 564, column: 36, scope: !7420)
!7445 = !DILocation(line: 564, column: 24, scope: !7420)
!7446 = !DILocation(line: 565, column: 19, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7420, file: !434, line: 565, column: 19)
!7448 = !DILocation(line: 565, column: 19, scope: !7420)
!7449 = !DILocation(line: 566, column: 37, scope: !7447)
!7450 = !DILocation(line: 566, column: 35, scope: !7447)
!7451 = !DILocation(line: 566, column: 17, scope: !7447)
!7452 = !DILocation(line: 574, column: 15, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7290, file: !434, line: 574, column: 15)
!7454 = !DILocation(line: 574, column: 27, scope: !7453)
!7455 = !DILocation(line: 574, column: 24, scope: !7453)
!7456 = !DILocation(line: 574, column: 15, scope: !7290)
!7457 = !DILocation(line: 576, column: 20, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7453, file: !434, line: 575, column: 13)
!7459 = !DILocation(line: 576, column: 37, scope: !7458)
!7460 = !DILocation(line: 577, column: 15, scope: !7458)
!7461 = !DILocation(line: 579, column: 9, scope: !7290)
!7462 = !DILocation(line: 461, column: 68, scope: !7283)
!7463 = !DILocation(line: 461, column: 7, scope: !7283)
!7464 = distinct !{!7464, !7288, !7465}
!7465 = !DILocation(line: 579, column: 9, scope: !7279)
!7466 = !DILocation(line: 582, column: 7, scope: !7253)
!7467 = !DILocation(line: 584, column: 5, scope: !7253)
!7468 = !DILocation(line: 585, column: 17, scope: !7205)
!7469 = !DILocation(line: 585, column: 10, scope: !7205)
!7470 = distinct !{!7470, !7251, !7471}
!7471 = !DILocation(line: 585, column: 33, scope: !7205)
!7472 = !DILocation(line: 595, column: 8, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7205, file: !434, line: 595, column: 7)
!7474 = !DILocation(line: 595, column: 19, scope: !7473)
!7475 = !DILocation(line: 595, column: 17, scope: !7473)
!7476 = !DILocation(line: 595, column: 34, scope: !7473)
!7477 = !DILocation(line: 595, column: 37, scope: !7473)
!7478 = !DILocation(line: 596, column: 7, scope: !7473)
!7479 = !DILocation(line: 596, column: 11, scope: !7473)
!7480 = !DILocation(line: 596, column: 23, scope: !7473)
!7481 = !DILocation(line: 595, column: 7, scope: !7205)
!7482 = !DILocation(line: 597, column: 24, scope: !7473)
!7483 = !DILocation(line: 597, column: 33, scope: !7473)
!7484 = !DILocation(line: 597, column: 13, scope: !7473)
!7485 = !DILocation(line: 598, column: 28, scope: !7473)
!7486 = !DILocation(line: 598, column: 37, scope: !7473)
!7487 = !DILocation(line: 598, column: 54, scope: !7473)
!7488 = !DILocation(line: 598, column: 52, scope: !7473)
!7489 = !DILocation(line: 598, column: 15, scope: !7473)
!7490 = !DILocation(line: 600, column: 17, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7473, file: !434, line: 599, column: 5)
!7492 = !DILocation(line: 600, column: 24, scope: !7491)
!7493 = !DILocation(line: 600, column: 50, scope: !7491)
!7494 = !DILocation(line: 600, column: 7, scope: !7491)
!7495 = !DILocation(line: 601, column: 7, scope: !7491)
!7496 = !DILocation(line: 604, column: 7, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7205, file: !434, line: 604, column: 7)
!7498 = !DILocation(line: 604, column: 19, scope: !7497)
!7499 = !DILocation(line: 604, column: 36, scope: !7497)
!7500 = !DILocation(line: 604, column: 39, scope: !7497)
!7501 = !DILocation(line: 604, column: 50, scope: !7497)
!7502 = !DILocation(line: 604, column: 48, scope: !7497)
!7503 = !DILocation(line: 605, column: 7, scope: !7497)
!7504 = !DILocation(line: 605, column: 22, scope: !7497)
!7505 = !DILocation(line: 605, column: 31, scope: !7497)
!7506 = !DILocation(line: 605, column: 41, scope: !7497)
!7507 = !DILocation(line: 605, column: 58, scope: !7497)
!7508 = !DILocation(line: 605, column: 56, scope: !7497)
!7509 = !DILocation(line: 605, column: 10, scope: !7497)
!7510 = !DILocation(line: 605, column: 68, scope: !7497)
!7511 = !DILocation(line: 604, column: 7, scope: !7205)
!7512 = !DILocation(line: 607, column: 17, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7497, file: !434, line: 606, column: 5)
!7514 = !DILocation(line: 607, column: 24, scope: !7513)
!7515 = !DILocation(line: 607, column: 52, scope: !7513)
!7516 = !DILocation(line: 607, column: 7, scope: !7513)
!7517 = !DILocation(line: 608, column: 7, scope: !7513)
!7518 = !DILocation(line: 611, column: 3, scope: !7205)
!7519 = !DILocation(line: 612, column: 1, scope: !7205)
!7520 = distinct !DISubprogram(name: "sparse_copy", scope: !434, file: !434, line: 260, type: !7521, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{!139, !5, !5, !7, !52, !52, !139, !180, !180, !608, !7523, !3769}
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!7524 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7520, file: !434, line: 260, type: !5)
!7525 = !DILocation(line: 260, column: 18, scope: !7520)
!7526 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7520, file: !434, line: 260, type: !5)
!7527 = !DILocation(line: 260, column: 30, scope: !7520)
!7528 = !DILocalVariable(name: "buf", arg: 3, scope: !7520, file: !434, line: 260, type: !7)
!7529 = !DILocation(line: 260, column: 45, scope: !7520)
!7530 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7520, file: !434, line: 260, type: !52)
!7531 = !DILocation(line: 260, column: 57, scope: !7520)
!7532 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7520, file: !434, line: 261, type: !52)
!7533 = !DILocation(line: 261, column: 21, scope: !7520)
!7534 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !7520, file: !434, line: 261, type: !139)
!7535 = !DILocation(line: 261, column: 37, scope: !7520)
!7536 = !DILocalVariable(name: "src_name", arg: 7, scope: !7520, file: !434, line: 262, type: !180)
!7537 = !DILocation(line: 262, column: 26, scope: !7520)
!7538 = !DILocalVariable(name: "dst_name", arg: 8, scope: !7520, file: !434, line: 262, type: !180)
!7539 = !DILocation(line: 262, column: 48, scope: !7520)
!7540 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !7520, file: !434, line: 263, type: !608)
!7541 = !DILocation(line: 263, column: 24, scope: !7520)
!7542 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !7520, file: !434, line: 263, type: !7523)
!7543 = !DILocation(line: 263, column: 43, scope: !7520)
!7544 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !7520, file: !434, line: 264, type: !3769)
!7545 = !DILocation(line: 264, column: 20, scope: !7520)
!7546 = !DILocation(line: 266, column: 4, scope: !7520)
!7547 = !DILocation(line: 266, column: 25, scope: !7520)
!7548 = !DILocation(line: 267, column: 4, scope: !7520)
!7549 = !DILocation(line: 267, column: 17, scope: !7520)
!7550 = !DILocalVariable(name: "make_hole", scope: !7520, file: !434, line: 268, type: !139)
!7551 = !DILocation(line: 268, column: 8, scope: !7520)
!7552 = !DILocalVariable(name: "psize", scope: !7520, file: !434, line: 269, type: !437)
!7553 = !DILocation(line: 269, column: 9, scope: !7520)
!7554 = !DILocation(line: 271, column: 3, scope: !7520)
!7555 = !DILocation(line: 271, column: 10, scope: !7520)
!7556 = !DILocalVariable(name: "n_read", scope: !7557, file: !434, line: 273, type: !581)
!7557 = distinct !DILexicalBlock(scope: !7520, file: !434, line: 272, column: 5)
!7558 = !DILocation(line: 273, column: 15, scope: !7557)
!7559 = !DILocation(line: 273, column: 30, scope: !7557)
!7560 = !DILocation(line: 273, column: 38, scope: !7557)
!7561 = !DILocation(line: 273, column: 43, scope: !7557)
!7562 = !DILocation(line: 273, column: 24, scope: !7557)
!7563 = !DILocation(line: 274, column: 11, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7557, file: !434, line: 274, column: 11)
!7565 = !DILocation(line: 274, column: 18, scope: !7564)
!7566 = !DILocation(line: 274, column: 11, scope: !7557)
!7567 = !DILocation(line: 276, column: 15, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !434, line: 276, column: 15)
!7569 = distinct !DILexicalBlock(scope: !7564, file: !434, line: 275, column: 9)
!7570 = !DILocation(line: 276, column: 21, scope: !7568)
!7571 = !DILocation(line: 276, column: 15, scope: !7569)
!7572 = !DILocation(line: 277, column: 13, scope: !7568)
!7573 = distinct !{!7573, !7554, !7574}
!7574 = !DILocation(line: 357, column: 5, scope: !7520)
!7575 = !DILocation(line: 278, column: 21, scope: !7569)
!7576 = !DILocation(line: 278, column: 28, scope: !7569)
!7577 = !DILocation(line: 278, column: 51, scope: !7569)
!7578 = !DILocation(line: 278, column: 11, scope: !7569)
!7579 = !DILocation(line: 279, column: 11, scope: !7569)
!7580 = !DILocation(line: 281, column: 11, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7557, file: !434, line: 281, column: 11)
!7582 = !DILocation(line: 281, column: 18, scope: !7581)
!7583 = !DILocation(line: 281, column: 11, scope: !7557)
!7584 = !DILocation(line: 282, column: 9, scope: !7581)
!7585 = !DILocation(line: 283, column: 21, scope: !7557)
!7586 = !DILocation(line: 283, column: 18, scope: !7557)
!7587 = !DILocation(line: 284, column: 24, scope: !7557)
!7588 = !DILocation(line: 284, column: 8, scope: !7557)
!7589 = !DILocation(line: 284, column: 21, scope: !7557)
!7590 = !DILocalVariable(name: "csize", scope: !7557, file: !434, line: 287, type: !52)
!7591 = !DILocation(line: 287, column: 14, scope: !7557)
!7592 = !DILocation(line: 287, column: 22, scope: !7557)
!7593 = !DILocation(line: 287, column: 34, scope: !7557)
!7594 = !DILocation(line: 287, column: 46, scope: !7557)
!7595 = !DILocalVariable(name: "cbuf", scope: !7557, file: !434, line: 288, type: !7)
!7596 = !DILocation(line: 288, column: 13, scope: !7557)
!7597 = !DILocation(line: 288, column: 20, scope: !7557)
!7598 = !DILocalVariable(name: "pbuf", scope: !7557, file: !434, line: 289, type: !7)
!7599 = !DILocation(line: 289, column: 13, scope: !7557)
!7600 = !DILocation(line: 289, column: 20, scope: !7557)
!7601 = !DILocation(line: 291, column: 7, scope: !7557)
!7602 = !DILocation(line: 291, column: 14, scope: !7557)
!7603 = !DILocalVariable(name: "prev_hole", scope: !7604, file: !434, line: 293, type: !139)
!7604 = distinct !DILexicalBlock(scope: !7557, file: !434, line: 292, column: 9)
!7605 = !DILocation(line: 293, column: 16, scope: !7604)
!7606 = !DILocation(line: 293, column: 28, scope: !7604)
!7607 = !DILocation(line: 294, column: 19, scope: !7604)
!7608 = !DILocation(line: 294, column: 17, scope: !7604)
!7609 = !DILocation(line: 296, column: 15, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7604, file: !434, line: 296, column: 15)
!7611 = !DILocation(line: 296, column: 25, scope: !7610)
!7612 = !DILocation(line: 296, column: 28, scope: !7610)
!7613 = !DILocation(line: 296, column: 15, scope: !7604)
!7614 = !DILocation(line: 297, column: 33, scope: !7610)
!7615 = !DILocation(line: 297, column: 39, scope: !7610)
!7616 = !DILocation(line: 297, column: 25, scope: !7610)
!7617 = !DILocation(line: 297, column: 23, scope: !7610)
!7618 = !DILocation(line: 297, column: 13, scope: !7610)
!7619 = !DILocalVariable(name: "transition", scope: !7604, file: !434, line: 299, type: !139)
!7620 = !DILocation(line: 299, column: 16, scope: !7604)
!7621 = !DILocation(line: 299, column: 30, scope: !7604)
!7622 = !DILocation(line: 299, column: 43, scope: !7604)
!7623 = !DILocation(line: 299, column: 40, scope: !7604)
!7624 = !DILocation(line: 299, column: 54, scope: !7604)
!7625 = !DILocation(line: 299, column: 57, scope: !7604)
!7626 = !DILocation(line: 0, scope: !7604)
!7627 = !DILocalVariable(name: "last_chunk", scope: !7604, file: !434, line: 300, type: !139)
!7628 = !DILocation(line: 300, column: 16, scope: !7604)
!7629 = !DILocation(line: 300, column: 30, scope: !7604)
!7630 = !DILocation(line: 300, column: 40, scope: !7604)
!7631 = !DILocation(line: 300, column: 37, scope: !7604)
!7632 = !DILocation(line: 300, column: 46, scope: !7604)
!7633 = !DILocation(line: 300, column: 51, scope: !7604)
!7634 = !DILocation(line: 300, column: 62, scope: !7604)
!7635 = !DILocation(line: 300, column: 67, scope: !7604)
!7636 = !DILocation(line: 300, column: 65, scope: !7604)
!7637 = !DILocation(line: 302, column: 15, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7604, file: !434, line: 302, column: 15)
!7639 = !DILocation(line: 302, column: 26, scope: !7638)
!7640 = !DILocation(line: 302, column: 29, scope: !7638)
!7641 = !DILocation(line: 302, column: 15, scope: !7604)
!7642 = !DILocation(line: 304, column: 21, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !434, line: 304, column: 19)
!7644 = distinct !DILexicalBlock(scope: !7638, file: !434, line: 303, column: 13)
!7645 = !DILocation(line: 304, column: 19, scope: !7644)
!7646 = !DILocation(line: 305, column: 26, scope: !7643)
!7647 = !DILocation(line: 305, column: 23, scope: !7643)
!7648 = !DILocation(line: 305, column: 17, scope: !7643)
!7649 = !DILocation(line: 307, column: 21, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7644, file: !434, line: 307, column: 19)
!7651 = !DILocation(line: 307, column: 19, scope: !7644)
!7652 = !DILocation(line: 309, column: 35, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !434, line: 309, column: 23)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !434, line: 308, column: 17)
!7655 = !DILocation(line: 309, column: 44, scope: !7653)
!7656 = !DILocation(line: 309, column: 50, scope: !7653)
!7657 = !DILocation(line: 309, column: 23, scope: !7653)
!7658 = !DILocation(line: 309, column: 60, scope: !7653)
!7659 = !DILocation(line: 309, column: 57, scope: !7653)
!7660 = !DILocation(line: 309, column: 23, scope: !7654)
!7661 = !DILocation(line: 311, column: 33, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7653, file: !434, line: 310, column: 21)
!7663 = !DILocation(line: 311, column: 40, scope: !7662)
!7664 = !DILocation(line: 312, column: 30, scope: !7662)
!7665 = !DILocation(line: 311, column: 23, scope: !7662)
!7666 = !DILocation(line: 313, column: 23, scope: !7662)
!7667 = !DILocation(line: 315, column: 17, scope: !7654)
!7668 = !DILocation(line: 318, column: 38, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !434, line: 318, column: 23)
!7670 = distinct !DILexicalBlock(scope: !7650, file: !434, line: 317, column: 17)
!7671 = !DILocation(line: 318, column: 47, scope: !7669)
!7672 = !DILocation(line: 318, column: 57, scope: !7669)
!7673 = !DILocation(line: 318, column: 70, scope: !7669)
!7674 = !DILocation(line: 318, column: 25, scope: !7669)
!7675 = !DILocation(line: 318, column: 23, scope: !7670)
!7676 = !DILocation(line: 319, column: 21, scope: !7669)
!7677 = !DILocation(line: 322, column: 22, scope: !7644)
!7678 = !DILocation(line: 322, column: 20, scope: !7644)
!7679 = !DILocation(line: 323, column: 23, scope: !7644)
!7680 = !DILocation(line: 323, column: 21, scope: !7644)
!7681 = !DILocation(line: 325, column: 19, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7644, file: !434, line: 325, column: 19)
!7683 = !DILocation(line: 325, column: 19, scope: !7644)
!7684 = !DILocation(line: 327, column: 25, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !434, line: 327, column: 23)
!7686 = distinct !DILexicalBlock(scope: !7682, file: !434, line: 326, column: 17)
!7687 = !DILocation(line: 327, column: 23, scope: !7686)
!7688 = !DILocation(line: 328, column: 28, scope: !7685)
!7689 = !DILocation(line: 328, column: 21, scope: !7685)
!7690 = !DILocation(line: 330, column: 23, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7686, file: !434, line: 330, column: 23)
!7692 = !DILocation(line: 330, column: 23, scope: !7686)
!7693 = !DILocation(line: 331, column: 27, scope: !7691)
!7694 = !DILocation(line: 331, column: 21, scope: !7691)
!7695 = !DILocation(line: 333, column: 27, scope: !7691)
!7696 = !DILocation(line: 334, column: 17, scope: !7686)
!7697 = !DILocation(line: 335, column: 13, scope: !7644)
!7698 = !DILocation(line: 338, column: 19, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !434, line: 338, column: 19)
!7700 = distinct !DILexicalBlock(scope: !7638, file: !434, line: 337, column: 13)
!7701 = !DILocation(line: 338, column: 40, scope: !7699)
!7702 = !DILocation(line: 338, column: 38, scope: !7699)
!7703 = !DILocation(line: 338, column: 25, scope: !7699)
!7704 = !DILocation(line: 338, column: 19, scope: !7700)
!7705 = !DILocation(line: 339, column: 26, scope: !7699)
!7706 = !DILocation(line: 339, column: 23, scope: !7699)
!7707 = !DILocation(line: 339, column: 17, scope: !7699)
!7708 = !DILocation(line: 342, column: 32, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7699, file: !434, line: 341, column: 17)
!7710 = !DILocation(line: 342, column: 58, scope: !7709)
!7711 = !DILocation(line: 342, column: 19, scope: !7709)
!7712 = !DILocation(line: 343, column: 19, scope: !7709)
!7713 = !DILocation(line: 347, column: 21, scope: !7604)
!7714 = !DILocation(line: 347, column: 18, scope: !7604)
!7715 = !DILocation(line: 348, column: 19, scope: !7604)
!7716 = !DILocation(line: 348, column: 16, scope: !7604)
!7717 = distinct !{!7717, !7601, !7718}
!7718 = !DILocation(line: 349, column: 9, scope: !7557)
!7719 = !DILocation(line: 351, column: 31, scope: !7557)
!7720 = !DILocation(line: 351, column: 8, scope: !7557)
!7721 = !DILocation(line: 351, column: 29, scope: !7557)
!7722 = !DILocation(line: 361, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7520, file: !434, line: 361, column: 7)
!7724 = !DILocation(line: 361, column: 17, scope: !7723)
!7725 = !DILocation(line: 361, column: 35, scope: !7723)
!7726 = !DILocation(line: 361, column: 44, scope: !7723)
!7727 = !DILocation(line: 361, column: 54, scope: !7723)
!7728 = !DILocation(line: 361, column: 67, scope: !7723)
!7729 = !DILocation(line: 361, column: 22, scope: !7723)
!7730 = !DILocation(line: 361, column: 7, scope: !7520)
!7731 = !DILocation(line: 362, column: 5, scope: !7723)
!7732 = !DILocation(line: 364, column: 5, scope: !7723)
!7733 = !DILocation(line: 365, column: 1, scope: !7520)
!7734 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !434, file: !434, line: 1013, type: !7735, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!5, !5, !180, !136}
!7737 = !DILocalVariable(name: "desc", arg: 1, scope: !7734, file: !434, line: 1013, type: !5)
!7738 = !DILocation(line: 1013, column: 23, scope: !7734)
!7739 = !DILocalVariable(name: "name", arg: 2, scope: !7734, file: !434, line: 1013, type: !180)
!7740 = !DILocation(line: 1013, column: 41, scope: !7734)
!7741 = !DILocalVariable(name: "mode", arg: 3, scope: !7734, file: !434, line: 1013, type: !136)
!7742 = !DILocation(line: 1013, column: 54, scope: !7734)
!7743 = !DILocation(line: 1016, column: 12, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7734, file: !434, line: 1016, column: 7)
!7745 = !DILocation(line: 1016, column: 9, scope: !7744)
!7746 = !DILocation(line: 1016, column: 7, scope: !7734)
!7747 = !DILocation(line: 1017, column: 20, scope: !7744)
!7748 = !DILocation(line: 1017, column: 26, scope: !7744)
!7749 = !DILocation(line: 1017, column: 12, scope: !7744)
!7750 = !DILocation(line: 1017, column: 5, scope: !7744)
!7751 = !DILocation(line: 1019, column: 18, scope: !7734)
!7752 = !DILocation(line: 1019, column: 24, scope: !7734)
!7753 = !DILocation(line: 1019, column: 10, scope: !7734)
!7754 = !DILocation(line: 1019, column: 3, scope: !7734)
!7755 = !DILocation(line: 1020, column: 1, scope: !7734)
!7756 = distinct !DISubprogram(name: "is_nul", scope: !291, file: !291, line: 509, type: !7757, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!139, !685, !52}
!7759 = !DILocalVariable(name: "buf", arg: 1, scope: !7756, file: !291, line: 509, type: !685)
!7760 = !DILocation(line: 509, column: 21, scope: !7756)
!7761 = !DILocalVariable(name: "length", arg: 2, scope: !7756, file: !291, line: 509, type: !52)
!7762 = !DILocation(line: 509, column: 33, scope: !7756)
!7763 = !DILocalVariable(name: "p", scope: !7756, file: !291, line: 511, type: !583)
!7764 = !DILocation(line: 511, column: 24, scope: !7756)
!7765 = !DILocation(line: 511, column: 28, scope: !7756)
!7766 = !DILocalVariable(name: "word", scope: !7756, file: !291, line: 521, type: !585)
!7767 = !DILocation(line: 521, column: 17, scope: !7756)
!7768 = !DILocation(line: 524, column: 9, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7756, file: !291, line: 524, column: 7)
!7770 = !DILocation(line: 524, column: 7, scope: !7756)
!7771 = !DILocation(line: 525, column: 7, scope: !7769)
!7772 = !DILocation(line: 528, column: 3, scope: !7756)
!7773 = !DILocation(line: 528, column: 10, scope: !7756)
!7774 = !DILocation(line: 530, column: 12, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !291, line: 530, column: 11)
!7776 = distinct !DILexicalBlock(scope: !7756, file: !291, line: 529, column: 5)
!7777 = !DILocation(line: 530, column: 11, scope: !7775)
!7778 = !DILocation(line: 530, column: 11, scope: !7776)
!7779 = !DILocation(line: 531, column: 9, scope: !7775)
!7780 = !DILocation(line: 532, column: 8, scope: !7776)
!7781 = !DILocation(line: 533, column: 13, scope: !7776)
!7782 = !DILocation(line: 534, column: 13, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7776, file: !291, line: 534, column: 11)
!7784 = !DILocation(line: 534, column: 11, scope: !7776)
!7785 = !DILocation(line: 535, column: 9, scope: !7783)
!7786 = distinct !{!7786, !7772, !7787}
!7787 = !DILocation(line: 536, column: 4, scope: !7756)
!7788 = !DILocation(line: 539, column: 3, scope: !7756)
!7789 = !DILocation(line: 541, column: 22, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !291, line: 540, column: 5)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !291, line: 539, column: 3)
!7792 = distinct !DILexicalBlock(scope: !7756, file: !291, line: 539, column: 3)
!7793 = !DILocation(line: 541, column: 7, scope: !7790)
!7794 = !DILocation(line: 542, column: 11, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7790, file: !291, line: 542, column: 11)
!7796 = !DILocation(line: 542, column: 11, scope: !7790)
!7797 = !DILocation(line: 543, column: 9, scope: !7795)
!7798 = !DILocation(line: 544, column: 9, scope: !7790)
!7799 = !DILocation(line: 545, column: 14, scope: !7790)
!7800 = !DILocation(line: 546, column: 13, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7790, file: !291, line: 546, column: 11)
!7802 = !DILocation(line: 546, column: 11, scope: !7790)
!7803 = !DILocation(line: 547, column: 9, scope: !7801)
!7804 = !DILocation(line: 548, column: 11, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7790, file: !291, line: 548, column: 11)
!7806 = !DILocation(line: 548, column: 34, scope: !7805)
!7807 = !DILocation(line: 548, column: 11, scope: !7790)
!7808 = !DILocation(line: 549, column: 9, scope: !7805)
!7809 = !DILocation(line: 539, column: 3, scope: !7791)
!7810 = distinct !{!7810, !7811, !7812}
!7811 = !DILocation(line: 539, column: 3, scope: !7792)
!7812 = !DILocation(line: 550, column: 4, scope: !7792)
!7813 = !DILocation(line: 553, column: 19, scope: !7756)
!7814 = !DILocation(line: 553, column: 24, scope: !7756)
!7815 = !DILocation(line: 553, column: 27, scope: !7756)
!7816 = !DILocation(line: 553, column: 11, scope: !7756)
!7817 = !DILocation(line: 553, column: 35, scope: !7756)
!7818 = !DILocation(line: 553, column: 4, scope: !7756)
!7819 = !DILocation(line: 554, column: 1, scope: !7756)
!7820 = distinct !DISubprogram(name: "create_hole", scope: !434, file: !434, line: 224, type: !7821, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!139, !5, !180, !139, !437}
!7823 = !DILocalVariable(name: "fd", arg: 1, scope: !7820, file: !434, line: 224, type: !5)
!7824 = !DILocation(line: 224, column: 18, scope: !7820)
!7825 = !DILocalVariable(name: "name", arg: 2, scope: !7820, file: !434, line: 224, type: !180)
!7826 = !DILocation(line: 224, column: 34, scope: !7820)
!7827 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !7820, file: !434, line: 224, type: !139)
!7828 = !DILocation(line: 224, column: 45, scope: !7820)
!7829 = !DILocalVariable(name: "size", arg: 4, scope: !7820, file: !434, line: 224, type: !437)
!7830 = !DILocation(line: 224, column: 64, scope: !7820)
!7831 = !DILocalVariable(name: "file_end", scope: !7820, file: !434, line: 226, type: !437)
!7832 = !DILocation(line: 226, column: 9, scope: !7820)
!7833 = !DILocation(line: 226, column: 27, scope: !7820)
!7834 = !DILocation(line: 226, column: 31, scope: !7820)
!7835 = !DILocation(line: 226, column: 20, scope: !7820)
!7836 = !DILocation(line: 228, column: 7, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7820, file: !434, line: 228, column: 7)
!7838 = !DILocation(line: 228, column: 16, scope: !7837)
!7839 = !DILocation(line: 228, column: 7, scope: !7820)
!7840 = !DILocation(line: 230, column: 17, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7837, file: !434, line: 229, column: 5)
!7842 = !DILocation(line: 230, column: 24, scope: !7841)
!7843 = !DILocation(line: 230, column: 46, scope: !7841)
!7844 = !DILocation(line: 230, column: 7, scope: !7841)
!7845 = !DILocation(line: 231, column: 7, scope: !7841)
!7846 = !DILocation(line: 238, column: 7, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7820, file: !434, line: 238, column: 7)
!7848 = !DILocation(line: 238, column: 19, scope: !7847)
!7849 = !DILocation(line: 238, column: 34, scope: !7847)
!7850 = !DILocation(line: 238, column: 38, scope: !7847)
!7851 = !DILocation(line: 238, column: 49, scope: !7847)
!7852 = !DILocation(line: 238, column: 47, scope: !7847)
!7853 = !DILocation(line: 238, column: 55, scope: !7847)
!7854 = !DILocation(line: 238, column: 22, scope: !7847)
!7855 = !DILocation(line: 238, column: 61, scope: !7847)
!7856 = !DILocation(line: 238, column: 7, scope: !7820)
!7857 = !DILocation(line: 240, column: 17, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7847, file: !434, line: 239, column: 5)
!7859 = !DILocation(line: 240, column: 24, scope: !7858)
!7860 = !DILocation(line: 240, column: 52, scope: !7858)
!7861 = !DILocation(line: 240, column: 7, scope: !7858)
!7862 = !DILocation(line: 241, column: 7, scope: !7858)
!7863 = !DILocation(line: 244, column: 3, scope: !7820)
!7864 = !DILocation(line: 245, column: 1, scope: !7820)
!7865 = distinct !DISubprogram(name: "punch_hole", scope: !434, file: !434, line: 205, type: !7866, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!5, !5, !437, !437}
!7868 = !DILocalVariable(name: "fd", arg: 1, scope: !7865, file: !434, line: 205, type: !5)
!7869 = !DILocation(line: 205, column: 17, scope: !7865)
!7870 = !DILocalVariable(name: "offset", arg: 2, scope: !7865, file: !434, line: 205, type: !437)
!7871 = !DILocation(line: 205, column: 27, scope: !7865)
!7872 = !DILocalVariable(name: "length", arg: 3, scope: !7865, file: !434, line: 205, type: !437)
!7873 = !DILocation(line: 205, column: 41, scope: !7865)
!7874 = !DILocalVariable(name: "ret", scope: !7865, file: !434, line: 207, type: !5)
!7875 = !DILocation(line: 207, column: 7, scope: !7865)
!7876 = !DILocation(line: 211, column: 20, scope: !7865)
!7877 = !DILocation(line: 212, column: 20, scope: !7865)
!7878 = !DILocation(line: 212, column: 28, scope: !7865)
!7879 = !DILocation(line: 211, column: 9, scope: !7865)
!7880 = !DILocation(line: 211, column: 7, scope: !7865)
!7881 = !DILocation(line: 213, column: 7, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7865, file: !434, line: 213, column: 7)
!7883 = !DILocation(line: 213, column: 11, scope: !7882)
!7884 = !DILocation(line: 213, column: 15, scope: !7882)
!7885 = !DILocation(line: 213, column: 31, scope: !7882)
!7886 = !DILocation(line: 213, column: 19, scope: !7882)
!7887 = !DILocation(line: 213, column: 38, scope: !7882)
!7888 = !DILocation(line: 213, column: 41, scope: !7882)
!7889 = !DILocation(line: 213, column: 47, scope: !7882)
!7890 = !DILocation(line: 213, column: 7, scope: !7865)
!7891 = !DILocation(line: 214, column: 9, scope: !7882)
!7892 = !DILocation(line: 214, column: 5, scope: !7882)
!7893 = !DILocation(line: 217, column: 10, scope: !7865)
!7894 = !DILocation(line: 217, column: 3, scope: !7865)
!7895 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !291, file: !291, line: 762, type: !2939, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7896 = !DILocalVariable(name: "err", arg: 1, scope: !7895, file: !291, line: 762, type: !5)
!7897 = !DILocation(line: 762, column: 17, scope: !7895)
!7898 = !DILocation(line: 764, column: 10, scope: !7895)
!7899 = !DILocation(line: 764, column: 14, scope: !7895)
!7900 = !DILocation(line: 764, column: 28, scope: !7895)
!7901 = !DILocation(line: 764, column: 3, scope: !7895)
!7902 = distinct !DISubprogram(name: "extent_scan_free", scope: !573, file: !573, line: 66, type: !7903, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{null, !7905}
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7208, size: 64)
!7906 = !DILocalVariable(name: "scan", arg: 1, scope: !7902, file: !573, line: 66, type: !7905)
!7907 = !DILocation(line: 66, column: 39, scope: !7902)
!7908 = !DILocation(line: 68, column: 9, scope: !7902)
!7909 = !DILocation(line: 68, column: 15, scope: !7902)
!7910 = !DILocation(line: 68, column: 3, scope: !7902)
!7911 = !DILocation(line: 69, column: 3, scope: !7902)
!7912 = !DILocation(line: 69, column: 9, scope: !7902)
!7913 = !DILocation(line: 69, column: 18, scope: !7902)
!7914 = !DILocation(line: 70, column: 3, scope: !7902)
!7915 = !DILocation(line: 70, column: 9, scope: !7902)
!7916 = !DILocation(line: 70, column: 18, scope: !7902)
!7917 = !DILocation(line: 71, column: 1, scope: !7902)
!7918 = !DILocalVariable(name: "fd", arg: 1, scope: !596, file: !434, line: 385, type: !5)
!7919 = !DILocation(line: 385, column: 18, scope: !596)
!7920 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !596, file: !434, line: 385, type: !437)
!7921 = !DILocation(line: 385, column: 28, scope: !596)
!7922 = !DILocation(line: 393, column: 7, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !596, file: !434, line: 393, column: 7)
!7924 = !DILocation(line: 393, column: 13, scope: !7923)
!7925 = !DILocation(line: 393, column: 7, scope: !596)
!7926 = !DILocation(line: 396, column: 23, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !434, line: 394, column: 5)
!7928 = !DILocation(line: 396, column: 15, scope: !7927)
!7929 = !DILocation(line: 396, column: 13, scope: !7927)
!7930 = !DILocation(line: 397, column: 11, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !434, line: 397, column: 11)
!7932 = !DILocation(line: 397, column: 17, scope: !7931)
!7933 = !DILocation(line: 397, column: 11, scope: !7927)
!7934 = !DILocation(line: 399, column: 17, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7931, file: !434, line: 398, column: 9)
!7936 = !DILocation(line: 400, column: 14, scope: !7935)
!7937 = !DILocation(line: 401, column: 9, scope: !7935)
!7938 = !DILocation(line: 402, column: 5, scope: !7927)
!7939 = !DILocation(line: 404, column: 3, scope: !596)
!7940 = !DILocation(line: 404, column: 10, scope: !596)
!7941 = !DILocalVariable(name: "n", scope: !7942, file: !434, line: 406, type: !52)
!7942 = distinct !DILexicalBlock(scope: !596, file: !434, line: 405, column: 5)
!7943 = !DILocation(line: 406, column: 14, scope: !7942)
!7944 = !DILocation(line: 406, column: 18, scope: !7942)
!7945 = !DILocation(line: 407, column: 24, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7942, file: !434, line: 407, column: 11)
!7947 = !DILocation(line: 407, column: 28, scope: !7946)
!7948 = !DILocation(line: 407, column: 35, scope: !7946)
!7949 = !DILocation(line: 407, column: 12, scope: !7946)
!7950 = !DILocation(line: 407, column: 42, scope: !7946)
!7951 = !DILocation(line: 407, column: 39, scope: !7946)
!7952 = !DILocation(line: 407, column: 11, scope: !7942)
!7953 = !DILocation(line: 408, column: 9, scope: !7946)
!7954 = !DILocation(line: 409, column: 18, scope: !7942)
!7955 = !DILocation(line: 409, column: 15, scope: !7942)
!7956 = distinct !{!7956, !7939, !7957}
!7957 = !DILocation(line: 410, column: 5, scope: !596)
!7958 = !DILocation(line: 412, column: 3, scope: !596)
!7959 = !DILocation(line: 413, column: 1, scope: !596)
!7960 = distinct !DISubprogram(name: "writable_destination", scope: !434, file: !434, line: 1702, type: !7961, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{!139, !180, !136}
!7963 = !DILocalVariable(name: "file", arg: 1, scope: !7960, file: !434, line: 1702, type: !180)
!7964 = !DILocation(line: 1702, column: 35, scope: !7960)
!7965 = !DILocalVariable(name: "mode", arg: 2, scope: !7960, file: !434, line: 1702, type: !136)
!7966 = !DILocation(line: 1702, column: 48, scope: !7960)
!7967 = !DILocation(line: 1704, column: 11, scope: !7960)
!7968 = !DILocation(line: 1705, column: 11, scope: !7960)
!7969 = !DILocation(line: 1705, column: 14, scope: !7960)
!7970 = !DILocation(line: 1706, column: 11, scope: !7960)
!7971 = !DILocation(line: 1706, column: 26, scope: !7960)
!7972 = !DILocation(line: 1706, column: 14, scope: !7960)
!7973 = !DILocation(line: 1706, column: 38, scope: !7960)
!7974 = !DILocation(line: 1704, column: 3, scope: !7960)
!7975 = distinct !DISubprogram(name: "cp_options_default", scope: !434, file: !434, line: 3035, type: !3748, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !433, retainedNodes: !295)
!7976 = !DILocalVariable(name: "x", arg: 1, scope: !7975, file: !434, line: 3035, type: !3750)
!7977 = !DILocation(line: 3035, column: 40, scope: !7975)
!7978 = !DILocation(line: 3037, column: 11, scope: !7975)
!7979 = !DILocation(line: 3037, column: 3, scope: !7975)
!7980 = !DILocation(line: 3051, column: 48, scope: !7975)
!7981 = !DILocation(line: 3051, column: 59, scope: !7975)
!7982 = !DILocation(line: 3051, column: 25, scope: !7975)
!7983 = !DILocation(line: 3051, column: 28, scope: !7975)
!7984 = !DILocation(line: 3051, column: 45, scope: !7975)
!7985 = !DILocation(line: 3051, column: 3, scope: !7975)
!7986 = !DILocation(line: 3051, column: 6, scope: !7975)
!7987 = !DILocation(line: 3051, column: 23, scope: !7975)
!7988 = !DILocation(line: 3053, column: 3, scope: !7975)
!7989 = !DILocation(line: 3053, column: 6, scope: !7975)
!7990 = !DILocation(line: 3053, column: 19, scope: !7975)
!7991 = !DILocation(line: 3054, column: 1, scope: !7975)
!7992 = distinct !DISubprogram(name: "forget_created", scope: !606, file: !606, line: 82, type: !7993, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !295)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{null, !506, !508}
!7995 = !DILocalVariable(name: "ino", arg: 1, scope: !7992, file: !606, line: 82, type: !506)
!7996 = !DILocation(line: 82, column: 23, scope: !7992)
!7997 = !DILocalVariable(name: "dev", arg: 2, scope: !7992, file: !606, line: 82, type: !508)
!7998 = !DILocation(line: 82, column: 34, scope: !7992)
!7999 = !DILocalVariable(name: "probe", scope: !7992, file: !606, line: 84, type: !611)
!8000 = !DILocation(line: 84, column: 22, scope: !7992)
!8001 = !DILocalVariable(name: "ent", scope: !7992, file: !606, line: 85, type: !610)
!8002 = !DILocation(line: 85, column: 23, scope: !7992)
!8003 = !DILocation(line: 87, column: 18, scope: !7992)
!8004 = !DILocation(line: 87, column: 9, scope: !7992)
!8005 = !DILocation(line: 87, column: 16, scope: !7992)
!8006 = !DILocation(line: 88, column: 18, scope: !7992)
!8007 = !DILocation(line: 88, column: 9, scope: !7992)
!8008 = !DILocation(line: 88, column: 16, scope: !7992)
!8009 = !DILocation(line: 89, column: 9, scope: !7992)
!8010 = !DILocation(line: 89, column: 14, scope: !7992)
!8011 = !DILocation(line: 91, column: 22, scope: !7992)
!8012 = !DILocation(line: 91, column: 35, scope: !7992)
!8013 = !DILocation(line: 91, column: 9, scope: !7992)
!8014 = !DILocation(line: 91, column: 7, scope: !7992)
!8015 = !DILocation(line: 92, column: 7, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !7992, file: !606, line: 92, column: 7)
!8017 = !DILocation(line: 92, column: 7, scope: !7992)
!8018 = !DILocation(line: 93, column: 23, scope: !8016)
!8019 = !DILocation(line: 93, column: 5, scope: !8016)
!8020 = !DILocation(line: 94, column: 1, scope: !7992)
!8021 = distinct !DISubprogram(name: "src_to_dest_free", scope: !606, file: !606, line: 72, type: !849, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8022 = !DILocalVariable(name: "x", arg: 1, scope: !8021, file: !606, line: 72, type: !47)
!8023 = !DILocation(line: 72, column: 25, scope: !8021)
!8024 = !DILocalVariable(name: "a", scope: !8021, file: !606, line: 74, type: !610)
!8025 = !DILocation(line: 74, column: 23, scope: !8021)
!8026 = !DILocation(line: 74, column: 27, scope: !8021)
!8027 = !DILocation(line: 75, column: 9, scope: !8021)
!8028 = !DILocation(line: 75, column: 12, scope: !8021)
!8029 = !DILocation(line: 75, column: 3, scope: !8021)
!8030 = !DILocation(line: 76, column: 9, scope: !8021)
!8031 = !DILocation(line: 76, column: 3, scope: !8021)
!8032 = !DILocation(line: 77, column: 1, scope: !8021)
!8033 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !606, file: !606, line: 100, type: !8034, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!7, !506, !508}
!8036 = !DILocalVariable(name: "ino", arg: 1, scope: !8033, file: !606, line: 100, type: !506)
!8037 = !DILocation(line: 100, column: 27, scope: !8033)
!8038 = !DILocalVariable(name: "dev", arg: 2, scope: !8033, file: !606, line: 100, type: !508)
!8039 = !DILocation(line: 100, column: 38, scope: !8033)
!8040 = !DILocalVariable(name: "ent", scope: !8033, file: !606, line: 102, type: !611)
!8041 = !DILocation(line: 102, column: 22, scope: !8033)
!8042 = !DILocalVariable(name: "e", scope: !8033, file: !606, line: 103, type: !616)
!8043 = !DILocation(line: 103, column: 29, scope: !8033)
!8044 = !DILocation(line: 104, column: 16, scope: !8033)
!8045 = !DILocation(line: 104, column: 7, scope: !8033)
!8046 = !DILocation(line: 104, column: 14, scope: !8033)
!8047 = !DILocation(line: 105, column: 16, scope: !8033)
!8048 = !DILocation(line: 105, column: 7, scope: !8033)
!8049 = !DILocation(line: 105, column: 14, scope: !8033)
!8050 = !DILocation(line: 106, column: 20, scope: !8033)
!8051 = !DILocation(line: 106, column: 33, scope: !8033)
!8052 = !DILocation(line: 106, column: 7, scope: !8033)
!8053 = !DILocation(line: 106, column: 5, scope: !8033)
!8054 = !DILocation(line: 107, column: 10, scope: !8033)
!8055 = !DILocation(line: 107, column: 14, scope: !8033)
!8056 = !DILocation(line: 107, column: 17, scope: !8033)
!8057 = !DILocation(line: 107, column: 3, scope: !8033)
!8058 = distinct !DISubprogram(name: "remember_copied", scope: !606, file: !606, line: 115, type: !8059, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!7, !180, !506, !508}
!8061 = !DILocalVariable(name: "name", arg: 1, scope: !8058, file: !606, line: 115, type: !180)
!8062 = !DILocation(line: 115, column: 30, scope: !8058)
!8063 = !DILocalVariable(name: "ino", arg: 2, scope: !8058, file: !606, line: 115, type: !506)
!8064 = !DILocation(line: 115, column: 42, scope: !8058)
!8065 = !DILocalVariable(name: "dev", arg: 3, scope: !8058, file: !606, line: 115, type: !508)
!8066 = !DILocation(line: 115, column: 53, scope: !8058)
!8067 = !DILocalVariable(name: "ent", scope: !8058, file: !606, line: 117, type: !610)
!8068 = !DILocation(line: 117, column: 23, scope: !8058)
!8069 = !DILocalVariable(name: "ent_from_table", scope: !8058, file: !606, line: 118, type: !610)
!8070 = !DILocation(line: 118, column: 23, scope: !8058)
!8071 = !DILocation(line: 120, column: 9, scope: !8058)
!8072 = !DILocation(line: 120, column: 7, scope: !8058)
!8073 = !DILocation(line: 121, column: 24, scope: !8058)
!8074 = !DILocation(line: 121, column: 15, scope: !8058)
!8075 = !DILocation(line: 121, column: 3, scope: !8058)
!8076 = !DILocation(line: 121, column: 8, scope: !8058)
!8077 = !DILocation(line: 121, column: 13, scope: !8058)
!8078 = !DILocation(line: 122, column: 17, scope: !8058)
!8079 = !DILocation(line: 122, column: 3, scope: !8058)
!8080 = !DILocation(line: 122, column: 8, scope: !8058)
!8081 = !DILocation(line: 122, column: 15, scope: !8058)
!8082 = !DILocation(line: 123, column: 17, scope: !8058)
!8083 = !DILocation(line: 123, column: 3, scope: !8058)
!8084 = !DILocation(line: 123, column: 8, scope: !8058)
!8085 = !DILocation(line: 123, column: 15, scope: !8058)
!8086 = !DILocation(line: 125, column: 33, scope: !8058)
!8087 = !DILocation(line: 125, column: 46, scope: !8058)
!8088 = !DILocation(line: 125, column: 20, scope: !8058)
!8089 = !DILocation(line: 125, column: 18, scope: !8058)
!8090 = !DILocation(line: 126, column: 7, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8058, file: !606, line: 126, column: 7)
!8092 = !DILocation(line: 126, column: 22, scope: !8091)
!8093 = !DILocation(line: 126, column: 7, scope: !8058)
!8094 = !DILocation(line: 129, column: 7, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8091, file: !606, line: 127, column: 5)
!8096 = !DILocation(line: 135, column: 7, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8058, file: !606, line: 135, column: 7)
!8098 = !DILocation(line: 135, column: 25, scope: !8097)
!8099 = !DILocation(line: 135, column: 22, scope: !8097)
!8100 = !DILocation(line: 135, column: 7, scope: !8058)
!8101 = !DILocation(line: 137, column: 25, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8097, file: !606, line: 136, column: 5)
!8103 = !DILocation(line: 137, column: 7, scope: !8102)
!8104 = !DILocation(line: 138, column: 23, scope: !8102)
!8105 = !DILocation(line: 138, column: 39, scope: !8102)
!8106 = !DILocation(line: 138, column: 7, scope: !8102)
!8107 = !DILocation(line: 142, column: 3, scope: !8058)
!8108 = !DILocation(line: 143, column: 1, scope: !8058)
!8109 = distinct !DISubprogram(name: "hash_init", scope: !606, file: !606, line: 147, type: !694, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8110 = !DILocation(line: 149, column: 17, scope: !8109)
!8111 = !DILocation(line: 149, column: 15, scope: !8109)
!8112 = !DILocation(line: 153, column: 7, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8109, file: !606, line: 153, column: 7)
!8114 = !DILocation(line: 153, column: 19, scope: !8113)
!8115 = !DILocation(line: 153, column: 7, scope: !8109)
!8116 = !DILocation(line: 154, column: 5, scope: !8113)
!8117 = !DILocation(line: 155, column: 1, scope: !8109)
!8118 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !606, file: !606, line: 51, type: !839, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8119 = !DILocalVariable(name: "x", arg: 1, scope: !8118, file: !606, line: 51, type: !685)
!8120 = !DILocation(line: 51, column: 31, scope: !8118)
!8121 = !DILocalVariable(name: "table_size", arg: 2, scope: !8118, file: !606, line: 51, type: !52)
!8122 = !DILocation(line: 51, column: 41, scope: !8118)
!8123 = !DILocalVariable(name: "p", scope: !8118, file: !606, line: 53, type: !616)
!8124 = !DILocation(line: 53, column: 29, scope: !8118)
!8125 = !DILocation(line: 53, column: 33, scope: !8118)
!8126 = !DILocation(line: 58, column: 22, scope: !8118)
!8127 = !DILocation(line: 58, column: 25, scope: !8118)
!8128 = !DILocation(line: 58, column: 34, scope: !8118)
!8129 = !DILocation(line: 58, column: 32, scope: !8118)
!8130 = !DILocation(line: 58, column: 3, scope: !8118)
!8131 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !606, file: !606, line: 64, type: !844, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8132 = !DILocalVariable(name: "x", arg: 1, scope: !8131, file: !606, line: 64, type: !685)
!8133 = !DILocation(line: 64, column: 34, scope: !8131)
!8134 = !DILocalVariable(name: "y", arg: 2, scope: !8131, file: !606, line: 64, type: !685)
!8135 = !DILocation(line: 64, column: 49, scope: !8131)
!8136 = !DILocalVariable(name: "a", scope: !8131, file: !606, line: 66, type: !616)
!8137 = !DILocation(line: 66, column: 29, scope: !8131)
!8138 = !DILocation(line: 66, column: 33, scope: !8131)
!8139 = !DILocalVariable(name: "b", scope: !8131, file: !606, line: 67, type: !616)
!8140 = !DILocation(line: 67, column: 29, scope: !8131)
!8141 = !DILocation(line: 67, column: 33, scope: !8131)
!8142 = !DILocation(line: 68, column: 10, scope: !8131)
!8143 = !DILocation(line: 0, scope: !8131)
!8144 = !DILocation(line: 68, column: 3, scope: !8131)
!8145 = distinct !DISubprogram(name: "forget_all", scope: !606, file: !606, line: 161, type: !694, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !605, retainedNodes: !295)
!8146 = !DILocation(line: 163, column: 14, scope: !8145)
!8147 = !DILocation(line: 163, column: 3, scope: !8145)
!8148 = !DILocation(line: 164, column: 1, scope: !8145)
!8149 = distinct !DISubprogram(name: "extent_scan_init", scope: !1200, file: !1200, line: 69, type: !8150, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1199, retainedNodes: !295)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{null, !5, !8152}
!8152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8153, size: 64)
!8153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !573, line: 36, size: 384, elements: !8154)
!8154 = !{!8155, !8156, !8157, !8158, !8159, !8160, !8161}
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8153, file: !573, line: 39, baseType: !5, size: 32)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !8153, file: !573, line: 42, baseType: !1202, size: 64, offset: 64)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !8153, file: !573, line: 45, baseType: !67, size: 32, offset: 128)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !8153, file: !573, line: 48, baseType: !52, size: 64, offset: 192)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !8153, file: !573, line: 52, baseType: !139, size: 8, offset: 256)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !8153, file: !573, line: 55, baseType: !139, size: 8, offset: 264)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !8153, file: !573, line: 58, baseType: !1203, size: 64, offset: 320)
!8162 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8149, file: !1200, line: 69, type: !5)
!8163 = !DILocation(line: 69, column: 23, scope: !8149)
!8164 = !DILocalVariable(name: "scan", arg: 2, scope: !8149, file: !1200, line: 69, type: !8152)
!8165 = !DILocation(line: 69, column: 51, scope: !8149)
!8166 = !DILocation(line: 71, column: 14, scope: !8149)
!8167 = !DILocation(line: 71, column: 3, scope: !8149)
!8168 = !DILocation(line: 71, column: 9, scope: !8149)
!8169 = !DILocation(line: 71, column: 12, scope: !8149)
!8170 = !DILocation(line: 72, column: 3, scope: !8149)
!8171 = !DILocation(line: 72, column: 9, scope: !8149)
!8172 = !DILocation(line: 72, column: 18, scope: !8149)
!8173 = !DILocation(line: 73, column: 3, scope: !8149)
!8174 = !DILocation(line: 73, column: 9, scope: !8149)
!8175 = !DILocation(line: 73, column: 18, scope: !8149)
!8176 = !DILocation(line: 74, column: 3, scope: !8149)
!8177 = !DILocation(line: 74, column: 9, scope: !8149)
!8178 = !DILocation(line: 74, column: 20, scope: !8149)
!8179 = !DILocation(line: 75, column: 3, scope: !8149)
!8180 = !DILocation(line: 75, column: 9, scope: !8149)
!8181 = !DILocation(line: 75, column: 29, scope: !8149)
!8182 = !DILocation(line: 76, column: 3, scope: !8149)
!8183 = !DILocation(line: 76, column: 9, scope: !8149)
!8184 = !DILocation(line: 76, column: 26, scope: !8149)
!8185 = !DILocation(line: 77, column: 20, scope: !8149)
!8186 = !DILocation(line: 77, column: 3, scope: !8149)
!8187 = !DILocation(line: 77, column: 9, scope: !8149)
!8188 = !DILocation(line: 77, column: 18, scope: !8149)
!8189 = !DILocation(line: 78, column: 1, scope: !8149)
!8190 = distinct !DISubprogram(name: "extent_need_sync", scope: !1200, file: !1200, line: 33, type: !1113, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1199, retainedNodes: !295)
!8191 = !DILocation(line: 39, column: 3, scope: !8190)
!8192 = distinct !DISubprogram(name: "extent_scan_read", scope: !1200, file: !1200, line: 87, type: !8193, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1199, retainedNodes: !295)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!139, !8152}
!8195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8192, file: !1200, line: 94, size: 32768, elements: !8196)
!8196 = !{!8197, !8198}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8195, file: !1200, line: 94, baseType: !1210, size: 256)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8195, file: !1200, line: 94, baseType: !353, size: 32768)
!8199 = !DILocalVariable(name: "scan", arg: 1, scope: !8192, file: !1200, line: 87, type: !8152)
!8200 = !DILocation(line: 87, column: 39, scope: !8192)
!8201 = !DILocalVariable(name: "si", scope: !8192, file: !1200, line: 89, type: !67)
!8202 = !DILocation(line: 89, column: 16, scope: !8192)
!8203 = !DILocalVariable(name: "last_ei", scope: !8192, file: !1200, line: 90, type: !1203)
!8204 = !DILocation(line: 90, column: 23, scope: !8192)
!8205 = !DILocation(line: 90, column: 33, scope: !8192)
!8206 = !DILocation(line: 90, column: 39, scope: !8192)
!8207 = !DILocation(line: 92, column: 3, scope: !8192)
!8208 = !DILocalVariable(name: "fiemap_buf", scope: !8209, file: !1200, line: 94, type: !8195)
!8209 = distinct !DILexicalBlock(scope: !8192, file: !1200, line: 93, column: 5)
!8210 = !DILocation(line: 94, column: 48, scope: !8209)
!8211 = !DILocalVariable(name: "fiemap", scope: !8209, file: !1200, line: 95, type: !1209)
!8212 = !DILocation(line: 95, column: 22, scope: !8209)
!8213 = !DILocation(line: 95, column: 43, scope: !8209)
!8214 = !DILocalVariable(name: "fm_extents", scope: !8209, file: !1200, line: 96, type: !1235)
!8215 = !DILocation(line: 96, column: 29, scope: !8209)
!8216 = !DILocation(line: 96, column: 43, scope: !8209)
!8217 = !DILocation(line: 96, column: 51, scope: !8209)
!8218 = !DILocation(line: 104, column: 7, scope: !8209)
!8219 = !DILocation(line: 106, column: 26, scope: !8209)
!8220 = !DILocation(line: 106, column: 32, scope: !8209)
!8221 = !DILocation(line: 106, column: 7, scope: !8209)
!8222 = !DILocation(line: 106, column: 15, scope: !8209)
!8223 = !DILocation(line: 106, column: 24, scope: !8209)
!8224 = !DILocation(line: 107, column: 26, scope: !8209)
!8225 = !DILocation(line: 107, column: 32, scope: !8209)
!8226 = !DILocation(line: 107, column: 7, scope: !8209)
!8227 = !DILocation(line: 107, column: 15, scope: !8209)
!8228 = !DILocation(line: 107, column: 24, scope: !8209)
!8229 = !DILocation(line: 108, column: 7, scope: !8209)
!8230 = !DILocation(line: 108, column: 15, scope: !8209)
!8231 = !DILocation(line: 108, column: 31, scope: !8209)
!8232 = !DILocation(line: 109, column: 47, scope: !8209)
!8233 = !DILocation(line: 109, column: 53, scope: !8209)
!8234 = !DILocation(line: 109, column: 45, scope: !8209)
!8235 = !DILocation(line: 109, column: 7, scope: !8209)
!8236 = !DILocation(line: 109, column: 15, scope: !8209)
!8237 = !DILocation(line: 109, column: 25, scope: !8209)
!8238 = !DILocation(line: 113, column: 18, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 113, column: 11)
!8240 = !DILocation(line: 113, column: 24, scope: !8239)
!8241 = !DILocation(line: 113, column: 43, scope: !8239)
!8242 = !DILocation(line: 113, column: 11, scope: !8239)
!8243 = !DILocation(line: 113, column: 51, scope: !8239)
!8244 = !DILocation(line: 113, column: 11, scope: !8209)
!8245 = !DILocation(line: 115, column: 15, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8247, file: !1200, line: 115, column: 15)
!8247 = distinct !DILexicalBlock(scope: !8239, file: !1200, line: 114, column: 9)
!8248 = !DILocation(line: 115, column: 21, scope: !8246)
!8249 = !DILocation(line: 115, column: 32, scope: !8246)
!8250 = !DILocation(line: 115, column: 15, scope: !8247)
!8251 = !DILocation(line: 116, column: 13, scope: !8246)
!8252 = !DILocation(line: 116, column: 19, scope: !8246)
!8253 = !DILocation(line: 116, column: 39, scope: !8246)
!8254 = !DILocation(line: 117, column: 11, scope: !8247)
!8255 = !DILocation(line: 121, column: 11, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 121, column: 11)
!8257 = !DILocation(line: 121, column: 19, scope: !8256)
!8258 = !DILocation(line: 121, column: 37, scope: !8256)
!8259 = !DILocation(line: 121, column: 11, scope: !8209)
!8260 = !DILocation(line: 123, column: 11, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8256, file: !1200, line: 122, column: 9)
!8262 = !DILocation(line: 123, column: 17, scope: !8261)
!8263 = !DILocation(line: 123, column: 34, scope: !8261)
!8264 = !DILocation(line: 124, column: 18, scope: !8261)
!8265 = !DILocation(line: 124, column: 24, scope: !8261)
!8266 = !DILocation(line: 124, column: 35, scope: !8261)
!8267 = !DILocation(line: 124, column: 11, scope: !8261)
!8268 = !DILocation(line: 127, column: 7, scope: !8209)
!8269 = !DILocation(line: 128, column: 25, scope: !8209)
!8270 = !DILocation(line: 128, column: 33, scope: !8209)
!8271 = !DILocation(line: 128, column: 7, scope: !8209)
!8272 = !DILocation(line: 128, column: 13, scope: !8209)
!8273 = !DILocation(line: 128, column: 22, scope: !8209)
!8274 = !DILocalVariable(name: "prev_idx", scope: !8275, file: !1200, line: 132, type: !52)
!8275 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 129, column: 7)
!8276 = !DILocation(line: 132, column: 16, scope: !8275)
!8277 = !DILocation(line: 132, column: 27, scope: !8275)
!8278 = !DILocation(line: 132, column: 37, scope: !8275)
!8279 = !DILocation(line: 132, column: 43, scope: !8275)
!8280 = !DILocation(line: 132, column: 35, scope: !8275)
!8281 = !DILocation(line: 133, column: 37, scope: !8275)
!8282 = !DILocation(line: 133, column: 43, scope: !8275)
!8283 = !DILocation(line: 133, column: 53, scope: !8275)
!8284 = !DILocation(line: 133, column: 59, scope: !8275)
!8285 = !DILocation(line: 133, column: 26, scope: !8275)
!8286 = !DILocation(line: 133, column: 9, scope: !8275)
!8287 = !DILocation(line: 133, column: 15, scope: !8275)
!8288 = !DILocation(line: 133, column: 24, scope: !8275)
!8289 = !DILocation(line: 135, column: 19, scope: !8275)
!8290 = !DILocation(line: 135, column: 25, scope: !8275)
!8291 = !DILocation(line: 135, column: 36, scope: !8275)
!8292 = !DILocation(line: 135, column: 34, scope: !8275)
!8293 = !DILocation(line: 135, column: 17, scope: !8275)
!8294 = !DILocalVariable(name: "i", scope: !8209, file: !1200, line: 138, type: !67)
!8295 = !DILocation(line: 138, column: 20, scope: !8209)
!8296 = !DILocation(line: 139, column: 14, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 139, column: 7)
!8298 = !DILocation(line: 139, column: 12, scope: !8297)
!8299 = !DILocation(line: 139, column: 19, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8297, file: !1200, line: 139, column: 7)
!8301 = !DILocation(line: 139, column: 23, scope: !8300)
!8302 = !DILocation(line: 139, column: 31, scope: !8300)
!8303 = !DILocation(line: 139, column: 21, scope: !8300)
!8304 = !DILocation(line: 139, column: 7, scope: !8297)
!8305 = !DILocation(line: 141, column: 11, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8300, file: !1200, line: 140, column: 9)
!8307 = !DILocation(line: 146, column: 15, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8306, file: !1200, line: 146, column: 15)
!8309 = !DILocation(line: 146, column: 18, scope: !8308)
!8310 = !DILocation(line: 146, column: 21, scope: !8308)
!8311 = !DILocation(line: 146, column: 30, scope: !8308)
!8312 = !DILocation(line: 147, column: 19, scope: !8308)
!8313 = !DILocation(line: 147, column: 30, scope: !8308)
!8314 = !DILocation(line: 147, column: 33, scope: !8308)
!8315 = !DILocation(line: 147, column: 42, scope: !8308)
!8316 = !DILocation(line: 147, column: 15, scope: !8308)
!8317 = !DILocation(line: 148, column: 15, scope: !8308)
!8318 = !DILocation(line: 148, column: 19, scope: !8308)
!8319 = !DILocation(line: 148, column: 28, scope: !8308)
!8320 = !DILocation(line: 148, column: 42, scope: !8308)
!8321 = !DILocation(line: 148, column: 51, scope: !8308)
!8322 = !DILocation(line: 148, column: 40, scope: !8308)
!8323 = !DILocation(line: 149, column: 22, scope: !8308)
!8324 = !DILocation(line: 149, column: 33, scope: !8308)
!8325 = !DILocation(line: 149, column: 36, scope: !8308)
!8326 = !DILocation(line: 149, column: 19, scope: !8308)
!8327 = !DILocation(line: 146, column: 15, scope: !8306)
!8328 = !DILocation(line: 152, column: 38, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8308, file: !1200, line: 150, column: 13)
!8330 = !DILocation(line: 152, column: 49, scope: !8329)
!8331 = !DILocation(line: 152, column: 52, scope: !8329)
!8332 = !DILocation(line: 152, column: 15, scope: !8329)
!8333 = !DILocation(line: 152, column: 24, scope: !8329)
!8334 = !DILocation(line: 152, column: 35, scope: !8329)
!8335 = !DILocation(line: 154, column: 36, scope: !8329)
!8336 = !DILocation(line: 154, column: 47, scope: !8329)
!8337 = !DILocation(line: 154, column: 50, scope: !8329)
!8338 = !DILocation(line: 154, column: 15, scope: !8329)
!8339 = !DILocation(line: 154, column: 24, scope: !8329)
!8340 = !DILocation(line: 154, column: 34, scope: !8329)
!8341 = !DILocation(line: 155, column: 13, scope: !8329)
!8342 = !DILocation(line: 156, column: 21, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8308, file: !1200, line: 156, column: 20)
!8344 = !DILocation(line: 156, column: 24, scope: !8343)
!8345 = !DILocation(line: 156, column: 29, scope: !8343)
!8346 = !DILocation(line: 156, column: 32, scope: !8343)
!8347 = !DILocation(line: 156, column: 38, scope: !8343)
!8348 = !DILocation(line: 156, column: 51, scope: !8343)
!8349 = !DILocation(line: 156, column: 62, scope: !8343)
!8350 = !DILocation(line: 156, column: 65, scope: !8343)
!8351 = !DILocation(line: 156, column: 49, scope: !8343)
!8352 = !DILocation(line: 157, column: 20, scope: !8343)
!8353 = !DILocation(line: 157, column: 24, scope: !8343)
!8354 = !DILocation(line: 157, column: 27, scope: !8343)
!8355 = !DILocation(line: 157, column: 31, scope: !8343)
!8356 = !DILocation(line: 157, column: 40, scope: !8343)
!8357 = !DILocation(line: 157, column: 54, scope: !8343)
!8358 = !DILocation(line: 157, column: 63, scope: !8343)
!8359 = !DILocation(line: 157, column: 52, scope: !8343)
!8360 = !DILocation(line: 158, column: 33, scope: !8343)
!8361 = !DILocation(line: 158, column: 44, scope: !8343)
!8362 = !DILocation(line: 158, column: 47, scope: !8343)
!8363 = !DILocation(line: 158, column: 31, scope: !8343)
!8364 = !DILocation(line: 156, column: 20, scope: !8308)
!8365 = !DILocalVariable(name: "new_logical", scope: !8366, file: !1200, line: 164, type: !1214)
!8366 = distinct !DILexicalBlock(scope: !8343, file: !1200, line: 159, column: 13)
!8367 = !DILocation(line: 164, column: 24, scope: !8366)
!8368 = !DILocalVariable(name: "length_adjust", scope: !8366, file: !1200, line: 165, type: !1214)
!8369 = !DILocation(line: 165, column: 24, scope: !8366)
!8370 = !DILocation(line: 166, column: 19, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8366, file: !1200, line: 166, column: 19)
!8372 = !DILocation(line: 166, column: 22, scope: !8371)
!8373 = !DILocation(line: 166, column: 19, scope: !8366)
!8374 = !DILocation(line: 167, column: 31, scope: !8371)
!8375 = !DILocation(line: 167, column: 37, scope: !8371)
!8376 = !DILocation(line: 167, column: 29, scope: !8371)
!8377 = !DILocation(line: 167, column: 17, scope: !8371)
!8378 = !DILocation(line: 172, column: 33, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8371, file: !1200, line: 169, column: 17)
!8380 = !DILocation(line: 172, column: 42, scope: !8379)
!8381 = !DILocation(line: 172, column: 56, scope: !8379)
!8382 = !DILocation(line: 172, column: 65, scope: !8379)
!8383 = !DILocation(line: 172, column: 54, scope: !8379)
!8384 = !DILocation(line: 172, column: 31, scope: !8379)
!8385 = !DILocation(line: 174, column: 31, scope: !8366)
!8386 = !DILocation(line: 174, column: 45, scope: !8366)
!8387 = !DILocation(line: 174, column: 56, scope: !8366)
!8388 = !DILocation(line: 174, column: 59, scope: !8366)
!8389 = !DILocation(line: 174, column: 43, scope: !8366)
!8390 = !DILocation(line: 174, column: 29, scope: !8366)
!8391 = !DILocation(line: 176, column: 19, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8366, file: !1200, line: 176, column: 19)
!8393 = !DILocation(line: 176, column: 35, scope: !8392)
!8394 = !DILocation(line: 176, column: 46, scope: !8392)
!8395 = !DILocation(line: 176, column: 49, scope: !8392)
!8396 = !DILocation(line: 176, column: 33, scope: !8392)
!8397 = !DILocation(line: 176, column: 19, scope: !8366)
!8398 = !DILocation(line: 178, column: 23, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !1200, line: 178, column: 23)
!8400 = distinct !DILexicalBlock(scope: !8392, file: !1200, line: 177, column: 17)
!8401 = !DILocation(line: 178, column: 29, scope: !8399)
!8402 = !DILocation(line: 178, column: 40, scope: !8399)
!8403 = !DILocation(line: 178, column: 23, scope: !8400)
!8404 = !DILocation(line: 179, column: 21, scope: !8399)
!8405 = !DILocation(line: 179, column: 27, scope: !8399)
!8406 = !DILocation(line: 179, column: 47, scope: !8399)
!8407 = !DILocation(line: 180, column: 19, scope: !8400)
!8408 = !DILocation(line: 182, column: 42, scope: !8366)
!8409 = !DILocation(line: 182, column: 15, scope: !8366)
!8410 = !DILocation(line: 182, column: 26, scope: !8366)
!8411 = !DILocation(line: 182, column: 29, scope: !8366)
!8412 = !DILocation(line: 182, column: 40, scope: !8366)
!8413 = !DILocation(line: 183, column: 42, scope: !8366)
!8414 = !DILocation(line: 183, column: 15, scope: !8366)
!8415 = !DILocation(line: 183, column: 26, scope: !8366)
!8416 = !DILocation(line: 183, column: 29, scope: !8366)
!8417 = !DILocation(line: 183, column: 39, scope: !8366)
!8418 = !DILocation(line: 185, column: 16, scope: !8366)
!8419 = !DILocation(line: 186, column: 15, scope: !8366)
!8420 = !DILocation(line: 190, column: 25, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8343, file: !1200, line: 189, column: 13)
!8422 = !DILocation(line: 190, column: 31, scope: !8421)
!8423 = !DILocation(line: 190, column: 42, scope: !8421)
!8424 = !DILocation(line: 190, column: 40, scope: !8421)
!8425 = !DILocation(line: 190, column: 23, scope: !8421)
!8426 = !DILocation(line: 191, column: 38, scope: !8421)
!8427 = !DILocation(line: 191, column: 49, scope: !8421)
!8428 = !DILocation(line: 191, column: 52, scope: !8421)
!8429 = !DILocation(line: 191, column: 15, scope: !8421)
!8430 = !DILocation(line: 191, column: 24, scope: !8421)
!8431 = !DILocation(line: 191, column: 36, scope: !8421)
!8432 = !DILocation(line: 192, column: 37, scope: !8421)
!8433 = !DILocation(line: 192, column: 48, scope: !8421)
!8434 = !DILocation(line: 192, column: 51, scope: !8421)
!8435 = !DILocation(line: 192, column: 15, scope: !8421)
!8436 = !DILocation(line: 192, column: 24, scope: !8421)
!8437 = !DILocation(line: 192, column: 35, scope: !8421)
!8438 = !DILocation(line: 193, column: 36, scope: !8421)
!8439 = !DILocation(line: 193, column: 47, scope: !8421)
!8440 = !DILocation(line: 193, column: 50, scope: !8421)
!8441 = !DILocation(line: 193, column: 15, scope: !8421)
!8442 = !DILocation(line: 193, column: 24, scope: !8421)
!8443 = !DILocation(line: 193, column: 34, scope: !8421)
!8444 = !DILocation(line: 194, column: 17, scope: !8421)
!8445 = !DILocation(line: 196, column: 9, scope: !8306)
!8446 = !DILocation(line: 139, column: 51, scope: !8300)
!8447 = !DILocation(line: 139, column: 7, scope: !8300)
!8448 = distinct !{!8448, !8304, !8449}
!8449 = !DILocation(line: 196, column: 9, scope: !8297)
!8450 = !DILocation(line: 198, column: 11, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 198, column: 11)
!8452 = !DILocation(line: 198, column: 20, scope: !8451)
!8453 = !DILocation(line: 198, column: 30, scope: !8451)
!8454 = !DILocation(line: 198, column: 11, scope: !8209)
!8455 = !DILocation(line: 199, column: 9, scope: !8451)
!8456 = !DILocation(line: 199, column: 15, scope: !8451)
!8457 = !DILocation(line: 199, column: 32, scope: !8451)
!8458 = !DILocation(line: 203, column: 11, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 203, column: 11)
!8460 = !DILocation(line: 203, column: 14, scope: !8459)
!8461 = !DILocation(line: 203, column: 22, scope: !8459)
!8462 = !DILocation(line: 203, column: 26, scope: !8459)
!8463 = !DILocation(line: 203, column: 32, scope: !8459)
!8464 = !DILocation(line: 203, column: 11, scope: !8209)
!8465 = !DILocation(line: 204, column: 19, scope: !8459)
!8466 = !DILocation(line: 204, column: 25, scope: !8459)
!8467 = !DILocation(line: 204, column: 36, scope: !8459)
!8468 = !DILocation(line: 204, column: 34, scope: !8459)
!8469 = !DILocation(line: 204, column: 41, scope: !8459)
!8470 = !DILocation(line: 204, column: 17, scope: !8459)
!8471 = !DILocation(line: 204, column: 9, scope: !8459)
!8472 = !DILocation(line: 207, column: 24, scope: !8209)
!8473 = !DILocation(line: 207, column: 7, scope: !8209)
!8474 = !DILocation(line: 207, column: 13, scope: !8209)
!8475 = !DILocation(line: 207, column: 22, scope: !8209)
!8476 = !DILocation(line: 209, column: 11, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 209, column: 11)
!8478 = !DILocation(line: 209, column: 17, scope: !8477)
!8479 = !DILocation(line: 209, column: 11, scope: !8209)
!8480 = !DILocation(line: 210, column: 9, scope: !8477)
!8481 = !DILocation(line: 212, column: 28, scope: !8477)
!8482 = !DILocation(line: 212, column: 37, scope: !8477)
!8483 = !DILocation(line: 212, column: 51, scope: !8477)
!8484 = !DILocation(line: 212, column: 60, scope: !8477)
!8485 = !DILocation(line: 212, column: 49, scope: !8477)
!8486 = !DILocation(line: 212, column: 9, scope: !8477)
!8487 = !DILocation(line: 212, column: 15, scope: !8477)
!8488 = !DILocation(line: 212, column: 26, scope: !8477)
!8489 = !DILocation(line: 214, column: 11, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8209, file: !1200, line: 214, column: 11)
!8491 = !DILocation(line: 214, column: 14, scope: !8490)
!8492 = !DILocation(line: 214, column: 11, scope: !8209)
!8493 = !DILocation(line: 215, column: 9, scope: !8490)
!8494 = distinct !{!8494, !8207, !8495}
!8495 = !DILocation(line: 216, column: 5, scope: !8192)
!8496 = !DILocation(line: 218, column: 3, scope: !8192)
!8497 = !DILocation(line: 219, column: 1, scope: !8192)
!8498 = distinct !DISubprogram(name: "force_linkat", scope: !622, file: !622, line: 95, type: !8499, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !621, retainedNodes: !295)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!5, !5, !180, !5, !180, !5, !139, !5}
!8501 = !DILocalVariable(name: "srcdir", arg: 1, scope: !8498, file: !622, line: 95, type: !5)
!8502 = !DILocation(line: 95, column: 19, scope: !8498)
!8503 = !DILocalVariable(name: "srcname", arg: 2, scope: !8498, file: !622, line: 95, type: !180)
!8504 = !DILocation(line: 95, column: 39, scope: !8498)
!8505 = !DILocalVariable(name: "dstdir", arg: 3, scope: !8498, file: !622, line: 96, type: !5)
!8506 = !DILocation(line: 96, column: 19, scope: !8498)
!8507 = !DILocalVariable(name: "dstname", arg: 4, scope: !8498, file: !622, line: 96, type: !180)
!8508 = !DILocation(line: 96, column: 39, scope: !8498)
!8509 = !DILocalVariable(name: "flags", arg: 5, scope: !8498, file: !622, line: 96, type: !5)
!8510 = !DILocation(line: 96, column: 52, scope: !8498)
!8511 = !DILocalVariable(name: "force", arg: 6, scope: !8498, file: !622, line: 96, type: !139)
!8512 = !DILocation(line: 96, column: 64, scope: !8498)
!8513 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !8498, file: !622, line: 97, type: !5)
!8514 = !DILocation(line: 97, column: 19, scope: !8498)
!8515 = !DILocation(line: 99, column: 7, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8498, file: !622, line: 99, column: 7)
!8517 = !DILocation(line: 99, column: 20, scope: !8516)
!8518 = !DILocation(line: 99, column: 7, scope: !8498)
!8519 = !DILocation(line: 100, column: 29, scope: !8516)
!8520 = !DILocation(line: 100, column: 37, scope: !8516)
!8521 = !DILocation(line: 100, column: 46, scope: !8516)
!8522 = !DILocation(line: 100, column: 54, scope: !8516)
!8523 = !DILocation(line: 100, column: 63, scope: !8516)
!8524 = !DILocation(line: 100, column: 21, scope: !8516)
!8525 = !DILocation(line: 100, column: 70, scope: !8516)
!8526 = !DILocation(line: 101, column: 27, scope: !8516)
!8527 = !DILocation(line: 100, column: 18, scope: !8516)
!8528 = !DILocation(line: 100, column: 5, scope: !8516)
!8529 = !DILocation(line: 102, column: 8, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8498, file: !622, line: 102, column: 7)
!8531 = !DILocation(line: 102, column: 14, scope: !8530)
!8532 = !DILocation(line: 102, column: 17, scope: !8530)
!8533 = !DILocation(line: 102, column: 30, scope: !8530)
!8534 = !DILocation(line: 102, column: 7, scope: !8498)
!8535 = !DILocation(line: 103, column: 12, scope: !8530)
!8536 = !DILocation(line: 103, column: 5, scope: !8530)
!8537 = !DILocalVariable(name: "buf", scope: !8498, file: !622, line: 105, type: !624)
!8538 = !DILocation(line: 105, column: 8, scope: !8498)
!8539 = !DILocalVariable(name: "dsttmp", scope: !8498, file: !622, line: 106, type: !7)
!8540 = !DILocation(line: 106, column: 9, scope: !8498)
!8541 = !DILocation(line: 106, column: 36, scope: !8498)
!8542 = !DILocation(line: 106, column: 45, scope: !8498)
!8543 = !DILocation(line: 106, column: 18, scope: !8498)
!8544 = !DILocation(line: 107, column: 9, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8498, file: !622, line: 107, column: 7)
!8546 = !DILocation(line: 107, column: 7, scope: !8498)
!8547 = !DILocation(line: 108, column: 12, scope: !8545)
!8548 = !DILocation(line: 108, column: 5, scope: !8545)
!8549 = !DILocalVariable(name: "arg", scope: !8498, file: !622, line: 109, type: !630)
!8550 = !DILocation(line: 109, column: 19, scope: !8498)
!8551 = !DILocation(line: 109, column: 25, scope: !8498)
!8552 = !DILocation(line: 109, column: 27, scope: !8498)
!8553 = !DILocation(line: 109, column: 35, scope: !8498)
!8554 = !DILocation(line: 109, column: 44, scope: !8498)
!8555 = !DILocation(line: 109, column: 52, scope: !8498)
!8556 = !DILocalVariable(name: "err", scope: !8498, file: !622, line: 110, type: !5)
!8557 = !DILocation(line: 110, column: 7, scope: !8498)
!8558 = !DILocation(line: 112, column: 25, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8498, file: !622, line: 112, column: 7)
!8560 = !DILocation(line: 112, column: 36, scope: !8559)
!8561 = !DILocation(line: 112, column: 7, scope: !8559)
!8562 = !DILocation(line: 112, column: 66, scope: !8559)
!8563 = !DILocation(line: 112, column: 7, scope: !8498)
!8564 = !DILocation(line: 113, column: 11, scope: !8559)
!8565 = !DILocation(line: 113, column: 9, scope: !8559)
!8566 = !DILocation(line: 113, column: 5, scope: !8559)
!8567 = !DILocation(line: 116, column: 23, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8559, file: !622, line: 115, column: 5)
!8569 = !DILocation(line: 116, column: 31, scope: !8568)
!8570 = !DILocation(line: 116, column: 39, scope: !8568)
!8571 = !DILocation(line: 116, column: 47, scope: !8568)
!8572 = !DILocation(line: 116, column: 13, scope: !8568)
!8573 = !DILocation(line: 116, column: 56, scope: !8568)
!8574 = !DILocation(line: 116, column: 68, scope: !8568)
!8575 = !DILocation(line: 116, column: 11, scope: !8568)
!8576 = !DILocation(line: 120, column: 17, scope: !8568)
!8577 = !DILocation(line: 120, column: 25, scope: !8568)
!8578 = !DILocation(line: 120, column: 7, scope: !8568)
!8579 = !DILocation(line: 123, column: 7, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8498, file: !622, line: 123, column: 7)
!8581 = !DILocation(line: 123, column: 17, scope: !8580)
!8582 = !DILocation(line: 123, column: 14, scope: !8580)
!8583 = !DILocation(line: 123, column: 7, scope: !8498)
!8584 = !DILocation(line: 124, column: 11, scope: !8580)
!8585 = !DILocation(line: 124, column: 5, scope: !8580)
!8586 = !DILocation(line: 125, column: 10, scope: !8498)
!8587 = !DILocation(line: 125, column: 3, scope: !8498)
!8588 = !DILocation(line: 126, column: 1, scope: !8498)
!8589 = distinct !DISubprogram(name: "samedir_template", scope: !622, file: !622, line: 51, type: !8590, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !295)
!8590 = !DISubroutineType(types: !8591)
!8591 = !{!7, !180, !7}
!8592 = !DILocalVariable(name: "dstname", arg: 1, scope: !8589, file: !622, line: 51, type: !180)
!8593 = !DILocation(line: 51, column: 31, scope: !8589)
!8594 = !DILocalVariable(name: "buf", arg: 2, scope: !8589, file: !622, line: 51, type: !7)
!8595 = !DILocation(line: 51, column: 45, scope: !8589)
!8596 = !DILocalVariable(name: "dstdirlen", scope: !8589, file: !622, line: 53, type: !627)
!8597 = !DILocation(line: 53, column: 13, scope: !8589)
!8598 = !DILocation(line: 53, column: 41, scope: !8589)
!8599 = !DILocation(line: 53, column: 25, scope: !8589)
!8600 = !DILocation(line: 53, column: 52, scope: !8589)
!8601 = !DILocation(line: 53, column: 50, scope: !8589)
!8602 = !DILocalVariable(name: "dsttmpsize", scope: !8589, file: !622, line: 54, type: !52)
!8603 = !DILocation(line: 54, column: 10, scope: !8589)
!8604 = !DILocation(line: 54, column: 23, scope: !8589)
!8605 = !DILocation(line: 54, column: 33, scope: !8589)
!8606 = !DILocalVariable(name: "dsttmp", scope: !8589, file: !622, line: 55, type: !7)
!8607 = !DILocation(line: 55, column: 9, scope: !8589)
!8608 = !DILocation(line: 56, column: 7, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8589, file: !622, line: 56, column: 7)
!8610 = !DILocation(line: 56, column: 18, scope: !8609)
!8611 = !DILocation(line: 56, column: 7, scope: !8589)
!8612 = !DILocation(line: 57, column: 14, scope: !8609)
!8613 = !DILocation(line: 57, column: 12, scope: !8609)
!8614 = !DILocation(line: 57, column: 5, scope: !8609)
!8615 = !DILocation(line: 60, column: 24, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8609, file: !622, line: 59, column: 5)
!8617 = !DILocation(line: 60, column: 16, scope: !8616)
!8618 = !DILocation(line: 60, column: 14, scope: !8616)
!8619 = !DILocation(line: 61, column: 12, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !622, line: 61, column: 11)
!8621 = !DILocation(line: 61, column: 11, scope: !8616)
!8622 = !DILocation(line: 62, column: 16, scope: !8620)
!8623 = !DILocation(line: 62, column: 9, scope: !8620)
!8624 = !DILocation(line: 64, column: 20, scope: !8589)
!8625 = !DILocation(line: 64, column: 28, scope: !8589)
!8626 = !DILocation(line: 64, column: 37, scope: !8589)
!8627 = !DILocation(line: 64, column: 11, scope: !8589)
!8628 = !DILocation(line: 64, column: 3, scope: !8589)
!8629 = !DILocation(line: 65, column: 10, scope: !8589)
!8630 = !DILocation(line: 65, column: 3, scope: !8589)
!8631 = !DILocation(line: 66, column: 1, scope: !8589)
!8632 = distinct !DISubprogram(name: "try_link", scope: !622, file: !622, line: 80, type: !1026, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !295)
!8633 = !DILocalVariable(name: "dest", arg: 1, scope: !8632, file: !622, line: 80, type: !7)
!8634 = !DILocation(line: 80, column: 17, scope: !8632)
!8635 = !DILocalVariable(name: "arg", arg: 2, scope: !8632, file: !622, line: 80, type: !47)
!8636 = !DILocation(line: 80, column: 29, scope: !8632)
!8637 = !DILocalVariable(name: "a", scope: !8632, file: !622, line: 82, type: !629)
!8638 = !DILocation(line: 82, column: 20, scope: !8632)
!8639 = !DILocation(line: 82, column: 24, scope: !8632)
!8640 = !DILocation(line: 83, column: 18, scope: !8632)
!8641 = !DILocation(line: 83, column: 21, scope: !8632)
!8642 = !DILocation(line: 83, column: 29, scope: !8632)
!8643 = !DILocation(line: 83, column: 32, scope: !8632)
!8644 = !DILocation(line: 83, column: 41, scope: !8632)
!8645 = !DILocation(line: 83, column: 44, scope: !8632)
!8646 = !DILocation(line: 83, column: 52, scope: !8632)
!8647 = !DILocation(line: 83, column: 58, scope: !8632)
!8648 = !DILocation(line: 83, column: 61, scope: !8632)
!8649 = !DILocation(line: 83, column: 10, scope: !8632)
!8650 = !DILocation(line: 83, column: 3, scope: !8632)
!8651 = distinct !DISubprogram(name: "force_symlinkat", scope: !622, file: !622, line: 152, type: !8652, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !621, retainedNodes: !295)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{!5, !180, !5, !180, !139, !5}
!8654 = !DILocalVariable(name: "srcname", arg: 1, scope: !8651, file: !622, line: 152, type: !180)
!8655 = !DILocation(line: 152, column: 30, scope: !8651)
!8656 = !DILocalVariable(name: "dstdir", arg: 2, scope: !8651, file: !622, line: 152, type: !5)
!8657 = !DILocation(line: 152, column: 43, scope: !8651)
!8658 = !DILocalVariable(name: "dstname", arg: 3, scope: !8651, file: !622, line: 152, type: !180)
!8659 = !DILocation(line: 152, column: 63, scope: !8651)
!8660 = !DILocalVariable(name: "force", arg: 4, scope: !8651, file: !622, line: 153, type: !139)
!8661 = !DILocation(line: 153, column: 23, scope: !8651)
!8662 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !8651, file: !622, line: 153, type: !5)
!8663 = !DILocation(line: 153, column: 34, scope: !8651)
!8664 = !DILocation(line: 155, column: 7, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8651, file: !622, line: 155, column: 7)
!8666 = !DILocation(line: 155, column: 23, scope: !8665)
!8667 = !DILocation(line: 155, column: 7, scope: !8651)
!8668 = !DILocation(line: 156, column: 34, scope: !8665)
!8669 = !DILocation(line: 156, column: 43, scope: !8665)
!8670 = !DILocation(line: 156, column: 51, scope: !8665)
!8671 = !DILocation(line: 156, column: 23, scope: !8665)
!8672 = !DILocation(line: 156, column: 60, scope: !8665)
!8673 = !DILocation(line: 156, column: 71, scope: !8665)
!8674 = !DILocation(line: 156, column: 21, scope: !8665)
!8675 = !DILocation(line: 156, column: 5, scope: !8665)
!8676 = !DILocation(line: 157, column: 8, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8651, file: !622, line: 157, column: 7)
!8678 = !DILocation(line: 157, column: 14, scope: !8677)
!8679 = !DILocation(line: 157, column: 17, scope: !8677)
!8680 = !DILocation(line: 157, column: 33, scope: !8677)
!8681 = !DILocation(line: 157, column: 7, scope: !8651)
!8682 = !DILocation(line: 158, column: 12, scope: !8677)
!8683 = !DILocation(line: 158, column: 5, scope: !8677)
!8684 = !DILocalVariable(name: "buf", scope: !8651, file: !622, line: 160, type: !624)
!8685 = !DILocation(line: 160, column: 8, scope: !8651)
!8686 = !DILocalVariable(name: "dsttmp", scope: !8651, file: !622, line: 161, type: !7)
!8687 = !DILocation(line: 161, column: 9, scope: !8651)
!8688 = !DILocation(line: 161, column: 36, scope: !8651)
!8689 = !DILocation(line: 161, column: 45, scope: !8651)
!8690 = !DILocation(line: 161, column: 18, scope: !8651)
!8691 = !DILocation(line: 162, column: 8, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8651, file: !622, line: 162, column: 7)
!8693 = !DILocation(line: 162, column: 7, scope: !8651)
!8694 = !DILocation(line: 163, column: 12, scope: !8692)
!8695 = !DILocation(line: 163, column: 5, scope: !8692)
!8696 = !DILocalVariable(name: "arg", scope: !8651, file: !622, line: 164, type: !637)
!8697 = !DILocation(line: 164, column: 22, scope: !8651)
!8698 = !DILocation(line: 164, column: 28, scope: !8651)
!8699 = !DILocation(line: 164, column: 30, scope: !8651)
!8700 = !DILocation(line: 164, column: 39, scope: !8651)
!8701 = !DILocalVariable(name: "err", scope: !8651, file: !622, line: 165, type: !5)
!8702 = !DILocation(line: 165, column: 7, scope: !8651)
!8703 = !DILocation(line: 167, column: 25, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8651, file: !622, line: 167, column: 7)
!8705 = !DILocation(line: 167, column: 36, scope: !8704)
!8706 = !DILocation(line: 167, column: 7, scope: !8704)
!8707 = !DILocation(line: 167, column: 69, scope: !8704)
!8708 = !DILocation(line: 167, column: 7, scope: !8651)
!8709 = !DILocation(line: 168, column: 11, scope: !8704)
!8710 = !DILocation(line: 168, column: 9, scope: !8704)
!8711 = !DILocation(line: 168, column: 5, scope: !8704)
!8712 = !DILocation(line: 169, column: 22, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8704, file: !622, line: 169, column: 12)
!8714 = !DILocation(line: 169, column: 30, scope: !8713)
!8715 = !DILocation(line: 169, column: 38, scope: !8713)
!8716 = !DILocation(line: 169, column: 46, scope: !8713)
!8717 = !DILocation(line: 169, column: 12, scope: !8713)
!8718 = !DILocation(line: 169, column: 55, scope: !8713)
!8719 = !DILocation(line: 169, column: 12, scope: !8704)
!8720 = !DILocation(line: 171, column: 13, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8713, file: !622, line: 170, column: 5)
!8722 = !DILocation(line: 171, column: 11, scope: !8721)
!8723 = !DILocation(line: 172, column: 17, scope: !8721)
!8724 = !DILocation(line: 172, column: 25, scope: !8721)
!8725 = !DILocation(line: 172, column: 7, scope: !8721)
!8726 = !DILocation(line: 173, column: 5, scope: !8721)
!8727 = !DILocation(line: 178, column: 11, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8713, file: !622, line: 175, column: 5)
!8729 = !DILocation(line: 181, column: 7, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8651, file: !622, line: 181, column: 7)
!8731 = !DILocation(line: 181, column: 17, scope: !8730)
!8732 = !DILocation(line: 181, column: 14, scope: !8730)
!8733 = !DILocation(line: 181, column: 7, scope: !8651)
!8734 = !DILocation(line: 182, column: 11, scope: !8730)
!8735 = !DILocation(line: 182, column: 5, scope: !8730)
!8736 = !DILocation(line: 183, column: 10, scope: !8651)
!8737 = !DILocation(line: 183, column: 3, scope: !8651)
!8738 = !DILocation(line: 184, column: 1, scope: !8651)
!8739 = distinct !DISubprogram(name: "try_symlink", scope: !622, file: !622, line: 138, type: !1026, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !295)
!8740 = !DILocalVariable(name: "dest", arg: 1, scope: !8739, file: !622, line: 138, type: !7)
!8741 = !DILocation(line: 138, column: 20, scope: !8739)
!8742 = !DILocalVariable(name: "arg", arg: 2, scope: !8739, file: !622, line: 138, type: !47)
!8743 = !DILocation(line: 138, column: 32, scope: !8739)
!8744 = !DILocalVariable(name: "a", scope: !8739, file: !622, line: 140, type: !636)
!8745 = !DILocation(line: 140, column: 23, scope: !8739)
!8746 = !DILocation(line: 140, column: 27, scope: !8739)
!8747 = !DILocation(line: 141, column: 21, scope: !8739)
!8748 = !DILocation(line: 141, column: 24, scope: !8739)
!8749 = !DILocation(line: 141, column: 33, scope: !8739)
!8750 = !DILocation(line: 141, column: 36, scope: !8739)
!8751 = !DILocation(line: 141, column: 44, scope: !8739)
!8752 = !DILocation(line: 141, column: 10, scope: !8739)
!8753 = !DILocation(line: 141, column: 3, scope: !8739)
!8754 = distinct !DISubprogram(name: "copy_acl", scope: !8755, file: !8755, line: 43, type: !8756, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1245, retainedNodes: !295)
!8755 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!8756 = !DISubroutineType(types: !8757)
!8757 = !{!5, !180, !5, !180, !5, !136}
!8758 = !DILocalVariable(name: "src_name", arg: 1, scope: !8754, file: !8755, line: 43, type: !180)
!8759 = !DILocation(line: 43, column: 23, scope: !8754)
!8760 = !DILocalVariable(name: "source_desc", arg: 2, scope: !8754, file: !8755, line: 43, type: !5)
!8761 = !DILocation(line: 43, column: 37, scope: !8754)
!8762 = !DILocalVariable(name: "dst_name", arg: 3, scope: !8754, file: !8755, line: 43, type: !180)
!8763 = !DILocation(line: 43, column: 62, scope: !8754)
!8764 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !8754, file: !8755, line: 44, type: !5)
!8765 = !DILocation(line: 44, column: 15, scope: !8754)
!8766 = !DILocalVariable(name: "mode", arg: 5, scope: !8754, file: !8755, line: 44, type: !136)
!8767 = !DILocation(line: 44, column: 33, scope: !8754)
!8768 = !DILocalVariable(name: "ret", scope: !8754, file: !8755, line: 46, type: !5)
!8769 = !DILocation(line: 46, column: 7, scope: !8754)
!8770 = !DILocation(line: 46, column: 24, scope: !8754)
!8771 = !DILocation(line: 46, column: 34, scope: !8754)
!8772 = !DILocation(line: 46, column: 47, scope: !8754)
!8773 = !DILocation(line: 46, column: 57, scope: !8754)
!8774 = !DILocation(line: 46, column: 68, scope: !8754)
!8775 = !DILocation(line: 46, column: 13, scope: !8754)
!8776 = !DILocation(line: 47, column: 11, scope: !8754)
!8777 = !DILocation(line: 47, column: 3, scope: !8754)
!8778 = !DILocation(line: 50, column: 17, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8754, file: !8755, line: 48, column: 5)
!8780 = !DILocation(line: 50, column: 37, scope: !8779)
!8781 = !DILocation(line: 50, column: 30, scope: !8779)
!8782 = !DILocation(line: 50, column: 7, scope: !8779)
!8783 = !DILocation(line: 51, column: 7, scope: !8779)
!8784 = !DILocation(line: 54, column: 17, scope: !8779)
!8785 = !DILocation(line: 54, column: 24, scope: !8779)
!8786 = !DILocation(line: 54, column: 67, scope: !8779)
!8787 = !DILocation(line: 54, column: 60, scope: !8779)
!8788 = !DILocation(line: 54, column: 7, scope: !8779)
!8789 = !DILocation(line: 55, column: 7, scope: !8779)
!8790 = !DILocation(line: 58, column: 7, scope: !8779)
!8791 = !DILocation(line: 60, column: 10, scope: !8754)
!8792 = !DILocation(line: 60, column: 3, scope: !8754)
!8793 = distinct !DISubprogram(name: "set_acl", scope: !8794, file: !8794, line: 42, type: !8795, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1248, retainedNodes: !295)
!8794 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!5, !180, !5, !136}
!8797 = !DILocalVariable(name: "name", arg: 1, scope: !8793, file: !8794, line: 42, type: !180)
!8798 = !DILocation(line: 42, column: 22, scope: !8793)
!8799 = !DILocalVariable(name: "desc", arg: 2, scope: !8793, file: !8794, line: 42, type: !5)
!8800 = !DILocation(line: 42, column: 32, scope: !8793)
!8801 = !DILocalVariable(name: "mode", arg: 3, scope: !8793, file: !8794, line: 42, type: !136)
!8802 = !DILocation(line: 42, column: 45, scope: !8793)
!8803 = !DILocalVariable(name: "ret", scope: !8793, file: !8794, line: 44, type: !5)
!8804 = !DILocation(line: 44, column: 7, scope: !8793)
!8805 = !DILocation(line: 44, column: 23, scope: !8793)
!8806 = !DILocation(line: 44, column: 29, scope: !8793)
!8807 = !DILocation(line: 44, column: 35, scope: !8793)
!8808 = !DILocation(line: 44, column: 13, scope: !8793)
!8809 = !DILocation(line: 45, column: 7, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8793, file: !8794, line: 45, column: 7)
!8811 = !DILocation(line: 45, column: 11, scope: !8810)
!8812 = !DILocation(line: 45, column: 7, scope: !8793)
!8813 = !DILocation(line: 46, column: 15, scope: !8810)
!8814 = !DILocation(line: 46, column: 22, scope: !8810)
!8815 = !DILocation(line: 46, column: 62, scope: !8810)
!8816 = !DILocation(line: 46, column: 55, scope: !8810)
!8817 = !DILocation(line: 46, column: 5, scope: !8810)
!8818 = !DILocation(line: 47, column: 10, scope: !8793)
!8819 = !DILocation(line: 47, column: 3, scope: !8793)
!8820 = distinct !DISubprogram(name: "areadlink_with_size", scope: !8821, file: !8821, line: 53, type: !8822, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1251, retainedNodes: !295)
!8821 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!7, !180, !52}
!8824 = !DILocalVariable(name: "file", arg: 1, scope: !8820, file: !8821, line: 53, type: !180)
!8825 = !DILocation(line: 53, column: 34, scope: !8820)
!8826 = !DILocalVariable(name: "size", arg: 2, scope: !8820, file: !8821, line: 53, type: !52)
!8827 = !DILocation(line: 53, column: 47, scope: !8820)
!8828 = !DILocalVariable(name: "symlink_max", scope: !8820, file: !8821, line: 58, type: !52)
!8829 = !DILocation(line: 58, column: 10, scope: !8820)
!8830 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !8820, file: !8821, line: 59, type: !52)
!8831 = !DILocation(line: 59, column: 10, scope: !8820)
!8832 = !DILocalVariable(name: "initial_limit", scope: !8820, file: !8821, line: 60, type: !52)
!8833 = !DILocation(line: 60, column: 10, scope: !8820)
!8834 = !DILocation(line: 60, column: 27, scope: !8820)
!8835 = !DILocation(line: 60, column: 41, scope: !8820)
!8836 = !DILocation(line: 60, column: 39, scope: !8820)
!8837 = !DILocation(line: 61, column: 29, scope: !8820)
!8838 = !DILocation(line: 61, column: 41, scope: !8820)
!8839 = !DILocation(line: 62, column: 29, scope: !8820)
!8840 = !DILocalVariable(name: "buf_size", scope: !8820, file: !8821, line: 67, type: !52)
!8841 = !DILocation(line: 67, column: 10, scope: !8820)
!8842 = !DILocation(line: 67, column: 22, scope: !8820)
!8843 = !DILocation(line: 67, column: 27, scope: !8820)
!8844 = !DILocation(line: 68, column: 24, scope: !8820)
!8845 = !DILocation(line: 68, column: 31, scope: !8820)
!8846 = !DILocation(line: 68, column: 29, scope: !8820)
!8847 = !DILocation(line: 68, column: 47, scope: !8820)
!8848 = !DILocation(line: 68, column: 52, scope: !8820)
!8849 = !DILocation(line: 68, column: 58, scope: !8820)
!8850 = !DILocation(line: 70, column: 3, scope: !8820)
!8851 = !DILocalVariable(name: "r", scope: !8852, file: !8821, line: 72, type: !661)
!8852 = distinct !DILexicalBlock(scope: !8820, file: !8821, line: 71, column: 5)
!8853 = !DILocation(line: 72, column: 15, scope: !8852)
!8854 = !DILocalVariable(name: "link_length", scope: !8852, file: !8821, line: 73, type: !52)
!8855 = !DILocation(line: 73, column: 14, scope: !8852)
!8856 = !DILocalVariable(name: "stackbuf", scope: !8852, file: !8821, line: 74, type: !1254)
!8857 = !DILocation(line: 74, column: 12, scope: !8852)
!8858 = !DILocalVariable(name: "buf", scope: !8852, file: !8821, line: 75, type: !7)
!8859 = !DILocation(line: 75, column: 13, scope: !8852)
!8860 = !DILocation(line: 75, column: 19, scope: !8852)
!8861 = !DILocalVariable(name: "buffer", scope: !8852, file: !8821, line: 76, type: !7)
!8862 = !DILocation(line: 76, column: 13, scope: !8852)
!8863 = !DILocation(line: 78, column: 14, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8852, file: !8821, line: 78, column: 11)
!8865 = !DILocation(line: 78, column: 19, scope: !8864)
!8866 = !DILocation(line: 78, column: 24, scope: !8864)
!8867 = !DILocation(line: 78, column: 27, scope: !8864)
!8868 = !DILocation(line: 78, column: 36, scope: !8864)
!8869 = !DILocation(line: 78, column: 11, scope: !8852)
!8870 = !DILocation(line: 80, column: 34, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8864, file: !8821, line: 79, column: 9)
!8872 = !DILocation(line: 80, column: 26, scope: !8871)
!8873 = !DILocation(line: 80, column: 24, scope: !8871)
!8874 = !DILocation(line: 80, column: 15, scope: !8871)
!8875 = !DILocation(line: 81, column: 16, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !8821, line: 81, column: 15)
!8877 = !DILocation(line: 81, column: 15, scope: !8871)
!8878 = !DILocation(line: 82, column: 13, scope: !8876)
!8879 = !DILocation(line: 83, column: 9, scope: !8871)
!8880 = !DILocation(line: 85, column: 21, scope: !8852)
!8881 = !DILocation(line: 85, column: 27, scope: !8852)
!8882 = !DILocation(line: 85, column: 32, scope: !8852)
!8883 = !DILocation(line: 85, column: 11, scope: !8852)
!8884 = !DILocation(line: 85, column: 9, scope: !8852)
!8885 = !DILocation(line: 86, column: 21, scope: !8852)
!8886 = !DILocation(line: 86, column: 19, scope: !8852)
!8887 = !DILocation(line: 90, column: 11, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8852, file: !8821, line: 90, column: 11)
!8889 = !DILocation(line: 90, column: 13, scope: !8888)
!8890 = !DILocation(line: 90, column: 17, scope: !8888)
!8891 = !DILocation(line: 90, column: 20, scope: !8888)
!8892 = !DILocation(line: 90, column: 26, scope: !8888)
!8893 = !DILocation(line: 90, column: 11, scope: !8852)
!8894 = !DILocalVariable(name: "saved_errno", scope: !8895, file: !8821, line: 92, type: !5)
!8895 = distinct !DILexicalBlock(scope: !8888, file: !8821, line: 91, column: 9)
!8896 = !DILocation(line: 92, column: 15, scope: !8895)
!8897 = !DILocation(line: 92, column: 29, scope: !8895)
!8898 = !DILocation(line: 93, column: 17, scope: !8895)
!8899 = !DILocation(line: 93, column: 11, scope: !8895)
!8900 = !DILocation(line: 94, column: 19, scope: !8895)
!8901 = !DILocation(line: 94, column: 11, scope: !8895)
!8902 = !DILocation(line: 94, column: 17, scope: !8895)
!8903 = !DILocation(line: 95, column: 11, scope: !8895)
!8904 = !DILocation(line: 98, column: 11, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8852, file: !8821, line: 98, column: 11)
!8906 = !DILocation(line: 98, column: 25, scope: !8905)
!8907 = !DILocation(line: 98, column: 23, scope: !8905)
!8908 = !DILocation(line: 98, column: 11, scope: !8852)
!8909 = !DILocation(line: 100, column: 11, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8905, file: !8821, line: 99, column: 9)
!8911 = !DILocation(line: 100, column: 15, scope: !8910)
!8912 = !DILocation(line: 100, column: 28, scope: !8910)
!8913 = !DILocation(line: 101, column: 16, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !8821, line: 101, column: 15)
!8915 = !DILocation(line: 101, column: 15, scope: !8910)
!8916 = !DILocation(line: 103, column: 32, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !8821, line: 102, column: 13)
!8918 = !DILocation(line: 103, column: 44, scope: !8917)
!8919 = !DILocation(line: 103, column: 24, scope: !8917)
!8920 = !DILocation(line: 103, column: 22, scope: !8917)
!8921 = !DILocation(line: 104, column: 19, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8917, file: !8821, line: 104, column: 19)
!8923 = !DILocation(line: 104, column: 19, scope: !8917)
!8924 = !DILocation(line: 105, column: 32, scope: !8922)
!8925 = !DILocation(line: 105, column: 40, scope: !8922)
!8926 = !DILocation(line: 105, column: 45, scope: !8922)
!8927 = !DILocation(line: 105, column: 57, scope: !8922)
!8928 = !DILocation(line: 105, column: 24, scope: !8922)
!8929 = !DILocation(line: 105, column: 17, scope: !8922)
!8930 = !DILocation(line: 106, column: 13, scope: !8917)
!8931 = !DILocation(line: 107, column: 20, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8914, file: !8821, line: 107, column: 20)
!8933 = !DILocation(line: 107, column: 32, scope: !8932)
!8934 = !DILocation(line: 107, column: 38, scope: !8932)
!8935 = !DILocation(line: 107, column: 36, scope: !8932)
!8936 = !DILocation(line: 107, column: 20, scope: !8914)
!8937 = !DILocalVariable(name: "shrinked_buffer", scope: !8938, file: !8821, line: 110, type: !7)
!8938 = distinct !DILexicalBlock(scope: !8932, file: !8821, line: 108, column: 13)
!8939 = !DILocation(line: 110, column: 21, scope: !8938)
!8940 = !DILocation(line: 110, column: 48, scope: !8938)
!8941 = !DILocation(line: 110, column: 56, scope: !8938)
!8942 = !DILocation(line: 110, column: 68, scope: !8938)
!8943 = !DILocation(line: 110, column: 39, scope: !8938)
!8944 = !DILocation(line: 111, column: 19, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8938, file: !8821, line: 111, column: 19)
!8946 = !DILocation(line: 111, column: 35, scope: !8945)
!8947 = !DILocation(line: 111, column: 19, scope: !8938)
!8948 = !DILocation(line: 112, column: 26, scope: !8945)
!8949 = !DILocation(line: 112, column: 24, scope: !8945)
!8950 = !DILocation(line: 112, column: 17, scope: !8945)
!8951 = !DILocation(line: 113, column: 13, scope: !8938)
!8952 = !DILocation(line: 114, column: 18, scope: !8910)
!8953 = !DILocation(line: 114, column: 11, scope: !8910)
!8954 = !DILocation(line: 117, column: 13, scope: !8852)
!8955 = !DILocation(line: 117, column: 7, scope: !8852)
!8956 = !DILocation(line: 118, column: 11, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8852, file: !8821, line: 118, column: 11)
!8958 = !DILocation(line: 118, column: 20, scope: !8957)
!8959 = !DILocation(line: 118, column: 11, scope: !8852)
!8960 = !DILocation(line: 119, column: 18, scope: !8957)
!8961 = !DILocation(line: 119, column: 9, scope: !8957)
!8962 = !DILocation(line: 120, column: 16, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8957, file: !8821, line: 120, column: 16)
!8964 = !DILocation(line: 120, column: 25, scope: !8963)
!8965 = !DILocation(line: 120, column: 16, scope: !8957)
!8966 = !DILocation(line: 121, column: 18, scope: !8963)
!8967 = !DILocation(line: 121, column: 9, scope: !8963)
!8968 = !DILocation(line: 124, column: 11, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8963, file: !8821, line: 123, column: 9)
!8970 = !DILocation(line: 124, column: 17, scope: !8969)
!8971 = !DILocation(line: 125, column: 11, scope: !8969)
!8972 = distinct !{!8972, !8850, !8973}
!8973 = !DILocation(line: 127, column: 5, scope: !8820)
!8974 = !DILocation(line: 128, column: 1, scope: !8820)
!8975 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !654, file: !654, line: 88, type: !293, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !650, retainedNodes: !295)
!8976 = !DILocalVariable(name: "s", arg: 1, scope: !8975, file: !654, line: 88, type: !180)
!8977 = !DILocation(line: 88, column: 39, scope: !8975)
!8978 = !DILocation(line: 90, column: 8, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8975, file: !654, line: 90, column: 7)
!8980 = !DILocation(line: 90, column: 7, scope: !8975)
!8981 = !DILocation(line: 91, column: 9, scope: !8979)
!8982 = !DILocation(line: 91, column: 7, scope: !8979)
!8983 = !DILocation(line: 91, column: 5, scope: !8979)
!8984 = !DILocation(line: 92, column: 26, scope: !8975)
!8985 = !DILocation(line: 92, column: 28, scope: !8975)
!8986 = !DILocation(line: 92, column: 32, scope: !8975)
!8987 = !DILocation(line: 92, column: 31, scope: !8975)
!8988 = !DILocation(line: 92, column: 34, scope: !8975)
!8989 = !DILocation(line: 92, column: 37, scope: !8975)
!8990 = !DILocation(line: 92, column: 58, scope: !8975)
!8991 = !DILocation(line: 92, column: 42, scope: !8975)
!8992 = !DILocation(line: 92, column: 39, scope: !8975)
!8993 = !DILocation(line: 92, column: 63, scope: !8975)
!8994 = !DILocation(line: 92, column: 24, scope: !8975)
!8995 = !DILocation(line: 93, column: 1, scope: !8975)
!8996 = distinct !DISubprogram(name: "backupfile_internal", scope: !654, file: !654, line: 314, type: !8997, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !650, retainedNodes: !295)
!8997 = !DISubroutineType(types: !8998)
!8998 = !{!7, !5, !180, !65, !139}
!8999 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !8996, file: !654, line: 314, type: !5)
!9000 = !DILocation(line: 314, column: 26, scope: !8996)
!9001 = !DILocalVariable(name: "file", arg: 2, scope: !8996, file: !654, line: 314, type: !180)
!9002 = !DILocation(line: 314, column: 46, scope: !8996)
!9003 = !DILocalVariable(name: "backup_type", arg: 3, scope: !8996, file: !654, line: 315, type: !65)
!9004 = !DILocation(line: 315, column: 39, scope: !8996)
!9005 = !DILocalVariable(name: "rename", arg: 4, scope: !8996, file: !654, line: 315, type: !139)
!9006 = !DILocation(line: 315, column: 57, scope: !8996)
!9007 = !DILocalVariable(name: "base_offset", scope: !8996, file: !654, line: 317, type: !627)
!9008 = !DILocation(line: 317, column: 13, scope: !8996)
!9009 = !DILocation(line: 317, column: 43, scope: !8996)
!9010 = !DILocation(line: 317, column: 27, scope: !8996)
!9011 = !DILocation(line: 317, column: 51, scope: !8996)
!9012 = !DILocation(line: 317, column: 49, scope: !8996)
!9013 = !DILocalVariable(name: "filelen", scope: !8996, file: !654, line: 318, type: !52)
!9014 = !DILocation(line: 318, column: 10, scope: !8996)
!9015 = !DILocation(line: 318, column: 20, scope: !8996)
!9016 = !DILocation(line: 318, column: 42, scope: !8996)
!9017 = !DILocation(line: 318, column: 49, scope: !8996)
!9018 = !DILocation(line: 318, column: 47, scope: !8996)
!9019 = !DILocation(line: 318, column: 34, scope: !8996)
!9020 = !DILocation(line: 318, column: 32, scope: !8996)
!9021 = !DILocation(line: 320, column: 9, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !8996, file: !654, line: 320, column: 7)
!9023 = !DILocation(line: 320, column: 7, scope: !8996)
!9024 = !DILocation(line: 321, column: 5, scope: !9022)
!9025 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !8996, file: !654, line: 325, type: !52)
!9026 = !DILocation(line: 325, column: 10, scope: !8996)
!9027 = !DILocation(line: 325, column: 46, scope: !8996)
!9028 = !DILocation(line: 325, column: 38, scope: !8996)
!9029 = !DILocation(line: 325, column: 68, scope: !8996)
!9030 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !8996, file: !654, line: 326, type: !52)
!9031 = !DILocation(line: 326, column: 10, scope: !8996)
!9032 = !DILocation(line: 326, column: 37, scope: !8996)
!9033 = !DILocation(line: 328, column: 7, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8996, file: !654, line: 328, column: 7)
!9035 = !DILocation(line: 328, column: 32, scope: !9034)
!9036 = !DILocation(line: 328, column: 7, scope: !8996)
!9037 = !DILocation(line: 329, column: 30, scope: !9034)
!9038 = !DILocation(line: 329, column: 5, scope: !9034)
!9039 = !DILocalVariable(name: "ssize", scope: !8996, file: !654, line: 331, type: !661)
!9040 = !DILocation(line: 331, column: 11, scope: !8996)
!9041 = !DILocation(line: 331, column: 19, scope: !8996)
!9042 = !DILocation(line: 331, column: 29, scope: !8996)
!9043 = !DILocation(line: 331, column: 27, scope: !8996)
!9044 = !DILocation(line: 331, column: 54, scope: !8996)
!9045 = !DILocalVariable(name: "s", scope: !8996, file: !654, line: 332, type: !7)
!9046 = !DILocation(line: 332, column: 9, scope: !8996)
!9047 = !DILocation(line: 332, column: 21, scope: !8996)
!9048 = !DILocation(line: 332, column: 13, scope: !8996)
!9049 = !DILocation(line: 333, column: 8, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8996, file: !654, line: 333, column: 7)
!9051 = !DILocation(line: 333, column: 7, scope: !8996)
!9052 = !DILocation(line: 334, column: 12, scope: !9050)
!9053 = !DILocation(line: 334, column: 5, scope: !9050)
!9054 = !DILocalVariable(name: "dirp", scope: !8996, file: !654, line: 336, type: !662)
!9055 = !DILocation(line: 336, column: 8, scope: !8996)
!9056 = !DILocalVariable(name: "sdir", scope: !8996, file: !654, line: 337, type: !5)
!9057 = !DILocation(line: 337, column: 7, scope: !8996)
!9058 = !DILocalVariable(name: "base_max", scope: !8996, file: !654, line: 338, type: !52)
!9059 = !DILocation(line: 338, column: 10, scope: !8996)
!9060 = !DILocation(line: 339, column: 3, scope: !8996)
!9061 = !DILocation(line: 341, column: 15, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8996, file: !654, line: 340, column: 5)
!9063 = !DILocation(line: 341, column: 18, scope: !9062)
!9064 = !DILocation(line: 341, column: 24, scope: !9062)
!9065 = !DILocation(line: 341, column: 32, scope: !9062)
!9066 = !DILocation(line: 341, column: 7, scope: !9062)
!9067 = !DILocation(line: 343, column: 11, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9062, file: !654, line: 343, column: 11)
!9069 = !DILocation(line: 343, column: 23, scope: !9068)
!9070 = !DILocation(line: 343, column: 11, scope: !9062)
!9071 = !DILocation(line: 344, column: 17, scope: !9068)
!9072 = !DILocation(line: 344, column: 21, scope: !9068)
!9073 = !DILocation(line: 344, column: 19, scope: !9068)
!9074 = !DILocation(line: 344, column: 30, scope: !9068)
!9075 = !DILocation(line: 344, column: 52, scope: !9068)
!9076 = !DILocation(line: 344, column: 9, scope: !9068)
!9077 = !DILocation(line: 346, column: 34, scope: !9068)
!9078 = !DILocation(line: 346, column: 46, scope: !9068)
!9079 = !DILocation(line: 346, column: 53, scope: !9068)
!9080 = !DILocation(line: 346, column: 62, scope: !9068)
!9081 = !DILocation(line: 346, column: 17, scope: !9068)
!9082 = !DILocation(line: 346, column: 9, scope: !9068)
!9083 = !DILocation(line: 350, column: 13, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9068, file: !654, line: 348, column: 11)
!9085 = !DILocation(line: 353, column: 17, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9084, file: !654, line: 353, column: 17)
!9087 = !DILocation(line: 353, column: 29, scope: !9086)
!9088 = !DILocation(line: 353, column: 17, scope: !9084)
!9089 = !DILocation(line: 355, column: 29, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9086, file: !654, line: 354, column: 15)
!9091 = !DILocation(line: 356, column: 25, scope: !9090)
!9092 = !DILocation(line: 356, column: 29, scope: !9090)
!9093 = !DILocation(line: 356, column: 27, scope: !9090)
!9094 = !DILocation(line: 356, column: 38, scope: !9090)
!9095 = !DILocation(line: 357, column: 25, scope: !9090)
!9096 = !DILocation(line: 356, column: 17, scope: !9090)
!9097 = !DILocation(line: 358, column: 15, scope: !9090)
!9098 = !DILocation(line: 359, column: 13, scope: !9084)
!9099 = !DILocation(line: 361, column: 30, scope: !9084)
!9100 = !DILocation(line: 361, column: 33, scope: !9084)
!9101 = !DILocation(line: 361, column: 47, scope: !9084)
!9102 = !DILocation(line: 361, column: 13, scope: !9084)
!9103 = !DILocation(line: 362, column: 13, scope: !9084)
!9104 = !DILocation(line: 365, column: 17, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9084, file: !654, line: 365, column: 17)
!9106 = !DILocation(line: 365, column: 17, scope: !9084)
!9107 = !DILocation(line: 366, column: 25, scope: !9105)
!9108 = !DILocation(line: 366, column: 15, scope: !9105)
!9109 = !DILocation(line: 367, column: 19, scope: !9084)
!9110 = !DILocation(line: 367, column: 13, scope: !9084)
!9111 = !DILocation(line: 368, column: 13, scope: !9084)
!9112 = !DILocation(line: 368, column: 19, scope: !9084)
!9113 = !DILocation(line: 369, column: 13, scope: !9084)
!9114 = !DILocation(line: 372, column: 13, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9062, file: !654, line: 372, column: 11)
!9116 = !DILocation(line: 372, column: 11, scope: !9062)
!9117 = !DILocation(line: 373, column: 9, scope: !9115)
!9118 = !DILocation(line: 375, column: 11, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9062, file: !654, line: 375, column: 11)
!9120 = !DILocation(line: 375, column: 16, scope: !9119)
!9121 = !DILocation(line: 375, column: 11, scope: !9062)
!9122 = !DILocation(line: 377, column: 16, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !654, line: 376, column: 9)
!9124 = !DILocation(line: 378, column: 23, scope: !9123)
!9125 = !DILocation(line: 379, column: 9, scope: !9123)
!9126 = !DILocalVariable(name: "flags", scope: !9062, file: !654, line: 380, type: !67)
!9127 = !DILocation(line: 380, column: 16, scope: !9062)
!9128 = !DILocation(line: 380, column: 24, scope: !9062)
!9129 = !DILocation(line: 380, column: 36, scope: !9062)
!9130 = !DILocation(line: 381, column: 32, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9062, file: !654, line: 381, column: 11)
!9132 = !DILocation(line: 381, column: 38, scope: !9131)
!9133 = !DILocation(line: 381, column: 44, scope: !9131)
!9134 = !DILocation(line: 381, column: 48, scope: !9131)
!9135 = !DILocation(line: 381, column: 46, scope: !9131)
!9136 = !DILocation(line: 381, column: 61, scope: !9131)
!9137 = !DILocation(line: 381, column: 11, scope: !9131)
!9138 = !DILocation(line: 381, column: 68, scope: !9131)
!9139 = !DILocation(line: 381, column: 11, scope: !9062)
!9140 = !DILocation(line: 382, column: 9, scope: !9131)
!9141 = !DILocalVariable(name: "e", scope: !9062, file: !654, line: 383, type: !5)
!9142 = !DILocation(line: 383, column: 11, scope: !9062)
!9143 = !DILocation(line: 383, column: 15, scope: !9062)
!9144 = !DILocation(line: 384, column: 11, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9062, file: !654, line: 384, column: 11)
!9146 = !DILocation(line: 384, column: 13, scope: !9145)
!9147 = !DILocation(line: 384, column: 11, scope: !9062)
!9148 = !DILocation(line: 386, column: 15, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !654, line: 386, column: 15)
!9150 = distinct !DILexicalBlock(scope: !9145, file: !654, line: 385, column: 9)
!9151 = !DILocation(line: 386, column: 15, scope: !9150)
!9152 = !DILocation(line: 387, column: 23, scope: !9149)
!9153 = !DILocation(line: 387, column: 13, scope: !9149)
!9154 = !DILocation(line: 388, column: 17, scope: !9150)
!9155 = !DILocation(line: 388, column: 11, scope: !9150)
!9156 = !DILocation(line: 389, column: 19, scope: !9150)
!9157 = !DILocation(line: 389, column: 11, scope: !9150)
!9158 = !DILocation(line: 389, column: 17, scope: !9150)
!9159 = !DILocation(line: 390, column: 11, scope: !9150)
!9160 = distinct !{!9160, !9060, !9161}
!9161 = !DILocation(line: 392, column: 5, scope: !8996)
!9162 = !DILocation(line: 394, column: 7, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !8996, file: !654, line: 394, column: 7)
!9164 = !DILocation(line: 394, column: 7, scope: !8996)
!9165 = !DILocation(line: 395, column: 15, scope: !9163)
!9166 = !DILocation(line: 395, column: 5, scope: !9163)
!9167 = !DILocation(line: 396, column: 10, scope: !8996)
!9168 = !DILocation(line: 396, column: 3, scope: !8996)
!9169 = !DILocation(line: 397, column: 1, scope: !8996)
!9170 = distinct !DISubprogram(name: "numbered_backup", scope: !654, file: !654, line: 207, type: !9171, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !650, retainedNodes: !295)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{!653, !5, !206, !52, !52, !627, !9173, !224}
!9173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!9174 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9170, file: !654, line: 207, type: !5)
!9175 = !DILocation(line: 207, column: 22, scope: !9170)
!9176 = !DILocalVariable(name: "buffer", arg: 2, scope: !9170, file: !654, line: 207, type: !206)
!9177 = !DILocation(line: 207, column: 37, scope: !9170)
!9178 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9170, file: !654, line: 207, type: !52)
!9179 = !DILocation(line: 207, column: 52, scope: !9170)
!9180 = !DILocalVariable(name: "filelen", arg: 4, scope: !9170, file: !654, line: 207, type: !52)
!9181 = !DILocation(line: 207, column: 72, scope: !9170)
!9182 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9170, file: !654, line: 208, type: !627)
!9183 = !DILocation(line: 208, column: 28, scope: !9170)
!9184 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9170, file: !654, line: 208, type: !9173)
!9185 = !DILocation(line: 208, column: 47, scope: !9170)
!9186 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9170, file: !654, line: 208, type: !224)
!9187 = !DILocation(line: 208, column: 59, scope: !9170)
!9188 = !DILocalVariable(name: "result", scope: !9170, file: !654, line: 210, type: !653)
!9189 = !DILocation(line: 210, column: 31, scope: !9170)
!9190 = !DILocalVariable(name: "dirp", scope: !9170, file: !654, line: 211, type: !662)
!9191 = !DILocation(line: 211, column: 8, scope: !9170)
!9192 = !DILocation(line: 211, column: 16, scope: !9170)
!9193 = !DILocation(line: 211, column: 15, scope: !9170)
!9194 = !DILocalVariable(name: "dp", scope: !9170, file: !654, line: 212, type: !666)
!9195 = !DILocation(line: 212, column: 18, scope: !9170)
!9196 = !DILocalVariable(name: "buf", scope: !9170, file: !654, line: 213, type: !7)
!9197 = !DILocation(line: 213, column: 9, scope: !9170)
!9198 = !DILocation(line: 213, column: 16, scope: !9170)
!9199 = !DILocation(line: 213, column: 15, scope: !9170)
!9200 = !DILocalVariable(name: "versionlenmax", scope: !9170, file: !654, line: 214, type: !52)
!9201 = !DILocation(line: 214, column: 10, scope: !9170)
!9202 = !DILocalVariable(name: "base", scope: !9170, file: !654, line: 215, type: !7)
!9203 = !DILocation(line: 215, column: 9, scope: !9170)
!9204 = !DILocation(line: 215, column: 16, scope: !9170)
!9205 = !DILocation(line: 215, column: 22, scope: !9170)
!9206 = !DILocation(line: 215, column: 20, scope: !9170)
!9207 = !DILocalVariable(name: "baselen", scope: !9170, file: !654, line: 216, type: !52)
!9208 = !DILocation(line: 216, column: 10, scope: !9170)
!9209 = !DILocation(line: 216, column: 30, scope: !9170)
!9210 = !DILocation(line: 216, column: 20, scope: !9170)
!9211 = !DILocation(line: 218, column: 7, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9170, file: !654, line: 218, column: 7)
!9213 = !DILocation(line: 218, column: 7, scope: !9170)
!9214 = !DILocation(line: 219, column: 16, scope: !9212)
!9215 = !DILocation(line: 219, column: 5, scope: !9212)
!9216 = !DILocalVariable(name: "tmp", scope: !9217, file: !654, line: 224, type: !387)
!9217 = distinct !DILexicalBlock(scope: !9212, file: !654, line: 221, column: 5)
!9218 = !DILocation(line: 224, column: 12, scope: !9217)
!9219 = !DILocation(line: 225, column: 7, scope: !9217)
!9220 = !DILocation(line: 225, column: 20, scope: !9217)
!9221 = !DILocation(line: 226, column: 15, scope: !9217)
!9222 = !DILocation(line: 226, column: 7, scope: !9217)
!9223 = !DILocation(line: 227, column: 25, scope: !9217)
!9224 = !DILocation(line: 227, column: 33, scope: !9217)
!9225 = !DILocation(line: 227, column: 41, scope: !9217)
!9226 = !DILocation(line: 227, column: 14, scope: !9217)
!9227 = !DILocation(line: 227, column: 12, scope: !9217)
!9228 = !DILocation(line: 228, column: 12, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9217, file: !654, line: 228, column: 11)
!9230 = !DILocation(line: 228, column: 17, scope: !9229)
!9231 = !DILocation(line: 228, column: 20, scope: !9229)
!9232 = !DILocation(line: 228, column: 26, scope: !9229)
!9233 = !DILocation(line: 228, column: 11, scope: !9217)
!9234 = !DILocation(line: 229, column: 16, scope: !9229)
!9235 = !DILocation(line: 229, column: 9, scope: !9229)
!9236 = !DILocation(line: 230, column: 15, scope: !9217)
!9237 = !DILocation(line: 230, column: 7, scope: !9217)
!9238 = !DILocation(line: 231, column: 15, scope: !9217)
!9239 = !DILocation(line: 231, column: 22, scope: !9217)
!9240 = !DILocation(line: 231, column: 20, scope: !9217)
!9241 = !DILocation(line: 231, column: 7, scope: !9217)
!9242 = !DILocation(line: 232, column: 12, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9217, file: !654, line: 232, column: 11)
!9244 = !DILocation(line: 232, column: 11, scope: !9217)
!9245 = !DILocation(line: 233, column: 16, scope: !9243)
!9246 = !DILocation(line: 233, column: 9, scope: !9243)
!9247 = !DILocation(line: 234, column: 16, scope: !9217)
!9248 = !DILocation(line: 234, column: 8, scope: !9217)
!9249 = !DILocation(line: 234, column: 14, scope: !9217)
!9250 = !DILocation(line: 237, column: 3, scope: !9170)
!9251 = !DILocation(line: 237, column: 25, scope: !9170)
!9252 = !DILocation(line: 237, column: 16, scope: !9170)
!9253 = !DILocation(line: 237, column: 14, scope: !9170)
!9254 = !DILocation(line: 237, column: 32, scope: !9170)
!9255 = !DILocalVariable(name: "p", scope: !9256, file: !654, line: 239, type: !180)
!9256 = distinct !DILexicalBlock(scope: !9170, file: !654, line: 238, column: 5)
!9257 = !DILocation(line: 239, column: 19, scope: !9256)
!9258 = !DILocalVariable(name: "q", scope: !9256, file: !654, line: 240, type: !7)
!9259 = !DILocation(line: 240, column: 13, scope: !9256)
!9260 = !DILocalVariable(name: "all_9s", scope: !9256, file: !654, line: 241, type: !139)
!9261 = !DILocation(line: 241, column: 12, scope: !9256)
!9262 = !DILocalVariable(name: "versionlen", scope: !9256, file: !654, line: 242, type: !52)
!9263 = !DILocation(line: 242, column: 14, scope: !9256)
!9264 = !DILocation(line: 244, column: 11, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 244, column: 11)
!9266 = !DILocation(line: 244, column: 34, scope: !9265)
!9267 = !DILocation(line: 244, column: 42, scope: !9265)
!9268 = !DILocation(line: 244, column: 32, scope: !9265)
!9269 = !DILocation(line: 244, column: 11, scope: !9256)
!9270 = !DILocation(line: 245, column: 9, scope: !9265)
!9271 = distinct !{!9271, !9250, !9272}
!9272 = !DILocation(line: 301, column: 5, scope: !9170)
!9273 = !DILocation(line: 247, column: 19, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 247, column: 11)
!9275 = !DILocation(line: 247, column: 25, scope: !9274)
!9276 = !DILocation(line: 247, column: 23, scope: !9274)
!9277 = !DILocation(line: 247, column: 38, scope: !9274)
!9278 = !DILocation(line: 247, column: 42, scope: !9274)
!9279 = !DILocation(line: 247, column: 50, scope: !9274)
!9280 = !DILocation(line: 247, column: 58, scope: !9274)
!9281 = !DILocation(line: 247, column: 11, scope: !9274)
!9282 = !DILocation(line: 247, column: 63, scope: !9274)
!9283 = !DILocation(line: 247, column: 11, scope: !9256)
!9284 = !DILocation(line: 248, column: 9, scope: !9274)
!9285 = !DILocation(line: 250, column: 11, scope: !9256)
!9286 = !DILocation(line: 250, column: 15, scope: !9256)
!9287 = !DILocation(line: 250, column: 24, scope: !9256)
!9288 = !DILocation(line: 250, column: 22, scope: !9256)
!9289 = !DILocation(line: 250, column: 32, scope: !9256)
!9290 = !DILocation(line: 250, column: 9, scope: !9256)
!9291 = !DILocation(line: 256, column: 22, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 256, column: 11)
!9293 = !DILocation(line: 256, column: 21, scope: !9292)
!9294 = !DILocation(line: 256, column: 18, scope: !9292)
!9295 = !DILocation(line: 256, column: 24, scope: !9292)
!9296 = !DILocation(line: 256, column: 28, scope: !9292)
!9297 = !DILocation(line: 256, column: 27, scope: !9292)
!9298 = !DILocation(line: 256, column: 30, scope: !9292)
!9299 = !DILocation(line: 256, column: 11, scope: !9256)
!9300 = !DILocation(line: 257, column: 9, scope: !9292)
!9301 = !DILocation(line: 258, column: 18, scope: !9256)
!9302 = !DILocation(line: 258, column: 17, scope: !9256)
!9303 = !DILocation(line: 258, column: 20, scope: !9256)
!9304 = !DILocation(line: 258, column: 14, scope: !9256)
!9305 = !DILocation(line: 259, column: 23, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 259, column: 7)
!9307 = !DILocation(line: 259, column: 12, scope: !9306)
!9308 = !DILocation(line: 259, column: 28, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9306, file: !654, line: 259, column: 7)
!9310 = !DILocation(line: 259, column: 7, scope: !9306)
!9311 = !DILocation(line: 260, column: 20, scope: !9309)
!9312 = !DILocation(line: 260, column: 22, scope: !9309)
!9313 = !DILocation(line: 260, column: 34, scope: !9309)
!9314 = !DILocation(line: 260, column: 16, scope: !9309)
!9315 = !DILocation(line: 260, column: 9, scope: !9309)
!9316 = !DILocation(line: 259, column: 63, scope: !9309)
!9317 = !DILocation(line: 259, column: 7, scope: !9309)
!9318 = distinct !{!9318, !9310, !9319}
!9319 = !DILocation(line: 260, column: 40, scope: !9306)
!9320 = !DILocation(line: 262, column: 14, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 262, column: 11)
!9322 = !DILocation(line: 262, column: 16, scope: !9321)
!9323 = !DILocation(line: 262, column: 28, scope: !9321)
!9324 = !DILocation(line: 262, column: 35, scope: !9321)
!9325 = !DILocation(line: 262, column: 39, scope: !9321)
!9326 = !DILocation(line: 262, column: 41, scope: !9321)
!9327 = !DILocation(line: 262, column: 52, scope: !9321)
!9328 = !DILocation(line: 263, column: 14, scope: !9321)
!9329 = !DILocation(line: 263, column: 18, scope: !9321)
!9330 = !DILocation(line: 263, column: 34, scope: !9321)
!9331 = !DILocation(line: 263, column: 32, scope: !9321)
!9332 = !DILocation(line: 264, column: 18, scope: !9321)
!9333 = !DILocation(line: 264, column: 22, scope: !9321)
!9334 = !DILocation(line: 264, column: 39, scope: !9321)
!9335 = !DILocation(line: 264, column: 36, scope: !9321)
!9336 = !DILocation(line: 265, column: 22, scope: !9321)
!9337 = !DILocation(line: 265, column: 33, scope: !9321)
!9338 = !DILocation(line: 265, column: 39, scope: !9321)
!9339 = !DILocation(line: 265, column: 37, scope: !9321)
!9340 = !DILocation(line: 265, column: 47, scope: !9321)
!9341 = !DILocation(line: 265, column: 52, scope: !9321)
!9342 = !DILocation(line: 265, column: 55, scope: !9321)
!9343 = !DILocation(line: 265, column: 25, scope: !9321)
!9344 = !DILocation(line: 265, column: 67, scope: !9321)
!9345 = !DILocation(line: 262, column: 11, scope: !9256)
!9346 = !DILocation(line: 266, column: 9, scope: !9321)
!9347 = !DILocation(line: 272, column: 23, scope: !9256)
!9348 = !DILocation(line: 272, column: 32, scope: !9256)
!9349 = !DILocation(line: 272, column: 30, scope: !9256)
!9350 = !DILocation(line: 272, column: 21, scope: !9256)
!9351 = !DILocation(line: 273, column: 17, scope: !9256)
!9352 = !DILocation(line: 273, column: 14, scope: !9256)
!9353 = !DILocalVariable(name: "new_buffer_size", scope: !9256, file: !654, line: 274, type: !52)
!9354 = !DILocation(line: 274, column: 14, scope: !9256)
!9355 = !DILocation(line: 274, column: 32, scope: !9256)
!9356 = !DILocation(line: 274, column: 40, scope: !9256)
!9357 = !DILocation(line: 274, column: 46, scope: !9256)
!9358 = !DILocation(line: 274, column: 44, scope: !9256)
!9359 = !DILocation(line: 274, column: 60, scope: !9256)
!9360 = !DILocation(line: 275, column: 11, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9256, file: !654, line: 275, column: 11)
!9362 = !DILocation(line: 275, column: 25, scope: !9361)
!9363 = !DILocation(line: 275, column: 23, scope: !9361)
!9364 = !DILocation(line: 275, column: 11, scope: !9256)
!9365 = !DILocation(line: 277, column: 17, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !654, line: 277, column: 15)
!9367 = distinct !DILexicalBlock(scope: !9361, file: !654, line: 276, column: 9)
!9368 = !DILocation(line: 277, column: 15, scope: !9367)
!9369 = !DILocation(line: 278, column: 29, scope: !9366)
!9370 = !DILocation(line: 278, column: 13, scope: !9366)
!9371 = !DILocalVariable(name: "new_buf", scope: !9367, file: !654, line: 279, type: !7)
!9372 = !DILocation(line: 279, column: 17, scope: !9367)
!9373 = !DILocation(line: 279, column: 36, scope: !9367)
!9374 = !DILocation(line: 279, column: 41, scope: !9367)
!9375 = !DILocation(line: 279, column: 27, scope: !9367)
!9376 = !DILocation(line: 280, column: 16, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9367, file: !654, line: 280, column: 15)
!9378 = !DILocation(line: 280, column: 15, scope: !9367)
!9379 = !DILocation(line: 282, column: 25, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9377, file: !654, line: 281, column: 13)
!9381 = !DILocation(line: 282, column: 16, scope: !9380)
!9382 = !DILocation(line: 282, column: 23, scope: !9380)
!9383 = !DILocation(line: 283, column: 15, scope: !9380)
!9384 = !DILocation(line: 285, column: 17, scope: !9367)
!9385 = !DILocation(line: 285, column: 15, scope: !9367)
!9386 = !DILocation(line: 286, column: 25, scope: !9367)
!9387 = !DILocation(line: 286, column: 23, scope: !9367)
!9388 = !DILocation(line: 287, column: 9, scope: !9367)
!9389 = !DILocation(line: 288, column: 11, scope: !9256)
!9390 = !DILocation(line: 288, column: 17, scope: !9256)
!9391 = !DILocation(line: 288, column: 15, scope: !9256)
!9392 = !DILocation(line: 288, column: 9, scope: !9256)
!9393 = !DILocation(line: 289, column: 9, scope: !9256)
!9394 = !DILocation(line: 289, column: 12, scope: !9256)
!9395 = !DILocation(line: 290, column: 9, scope: !9256)
!9396 = !DILocation(line: 290, column: 12, scope: !9256)
!9397 = !DILocation(line: 291, column: 8, scope: !9256)
!9398 = !DILocation(line: 291, column: 10, scope: !9256)
!9399 = !DILocation(line: 292, column: 12, scope: !9256)
!9400 = !DILocation(line: 292, column: 9, scope: !9256)
!9401 = !DILocation(line: 293, column: 15, scope: !9256)
!9402 = !DILocation(line: 293, column: 18, scope: !9256)
!9403 = !DILocation(line: 293, column: 21, scope: !9256)
!9404 = !DILocation(line: 293, column: 32, scope: !9256)
!9405 = !DILocation(line: 293, column: 7, scope: !9256)
!9406 = !DILocation(line: 297, column: 12, scope: !9256)
!9407 = !DILocation(line: 297, column: 9, scope: !9256)
!9408 = !DILocation(line: 298, column: 7, scope: !9256)
!9409 = !DILocation(line: 298, column: 15, scope: !9256)
!9410 = !DILocation(line: 298, column: 14, scope: !9256)
!9411 = !DILocation(line: 298, column: 19, scope: !9256)
!9412 = !DILocation(line: 299, column: 10, scope: !9256)
!9413 = !DILocation(line: 299, column: 12, scope: !9256)
!9414 = distinct !{!9414, !9408, !9415}
!9415 = !DILocation(line: 299, column: 14, scope: !9256)
!9416 = !DILocation(line: 300, column: 10, scope: !9256)
!9417 = !DILocation(line: 300, column: 7, scope: !9256)
!9418 = !DILocation(line: 303, column: 13, scope: !9170)
!9419 = !DILocation(line: 303, column: 4, scope: !9170)
!9420 = !DILocation(line: 303, column: 11, scope: !9170)
!9421 = !DILocation(line: 304, column: 10, scope: !9170)
!9422 = !DILocation(line: 304, column: 3, scope: !9170)
!9423 = !DILocation(line: 305, column: 1, scope: !9170)
!9424 = distinct !DISubprogram(name: "check_extension", scope: !654, file: !654, line: 105, type: !9425, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !650, retainedNodes: !295)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{null, !7, !52, !8, !5, !9427}
!9427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!9428 = !DILocalVariable(name: "file", arg: 1, scope: !9424, file: !654, line: 105, type: !7)
!9429 = !DILocation(line: 105, column: 24, scope: !9424)
!9430 = !DILocalVariable(name: "filelen", arg: 2, scope: !9424, file: !654, line: 105, type: !52)
!9431 = !DILocation(line: 105, column: 37, scope: !9424)
!9432 = !DILocalVariable(name: "e", arg: 3, scope: !9424, file: !654, line: 105, type: !8)
!9433 = !DILocation(line: 105, column: 51, scope: !9424)
!9434 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !9424, file: !654, line: 106, type: !5)
!9435 = !DILocation(line: 106, column: 22, scope: !9424)
!9436 = !DILocalVariable(name: "base_max", arg: 5, scope: !9424, file: !654, line: 106, type: !9427)
!9437 = !DILocation(line: 106, column: 38, scope: !9424)
!9438 = !DILocalVariable(name: "base", scope: !9424, file: !654, line: 108, type: !7)
!9439 = !DILocation(line: 108, column: 9, scope: !9424)
!9440 = !DILocation(line: 108, column: 32, scope: !9424)
!9441 = !DILocation(line: 108, column: 16, scope: !9424)
!9442 = !DILocalVariable(name: "baselen", scope: !9424, file: !654, line: 109, type: !52)
!9443 = !DILocation(line: 109, column: 10, scope: !9424)
!9444 = !DILocation(line: 109, column: 30, scope: !9424)
!9445 = !DILocation(line: 109, column: 20, scope: !9424)
!9446 = !DILocalVariable(name: "baselen_max", scope: !9424, file: !654, line: 110, type: !52)
!9447 = !DILocation(line: 110, column: 10, scope: !9424)
!9448 = !DILocation(line: 112, column: 49, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9424, file: !654, line: 112, column: 7)
!9450 = !DILocation(line: 112, column: 47, scope: !9449)
!9451 = !DILocation(line: 112, column: 7, scope: !9424)
!9452 = !DILocation(line: 115, column: 12, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !654, line: 115, column: 11)
!9454 = distinct !DILexicalBlock(scope: !9449, file: !654, line: 113, column: 5)
!9455 = !DILocation(line: 115, column: 11, scope: !9453)
!9456 = !DILocation(line: 115, column: 21, scope: !9453)
!9457 = !DILocation(line: 115, column: 11, scope: !9454)
!9458 = !DILocalVariable(name: "name_max", scope: !9459, file: !654, line: 117, type: !32)
!9459 = distinct !DILexicalBlock(scope: !9453, file: !654, line: 116, column: 9)
!9460 = !DILocation(line: 117, column: 16, scope: !9459)
!9461 = !DILocation(line: 118, column: 15, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9459, file: !654, line: 118, column: 15)
!9463 = !DILocation(line: 118, column: 22, scope: !9462)
!9464 = !DILocation(line: 118, column: 15, scope: !9459)
!9465 = !DILocalVariable(name: "tmp", scope: !9466, file: !654, line: 123, type: !387)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !654, line: 119, column: 13)
!9467 = !DILocation(line: 123, column: 20, scope: !9466)
!9468 = !DILocation(line: 124, column: 15, scope: !9466)
!9469 = !DILocation(line: 124, column: 28, scope: !9466)
!9470 = !DILocation(line: 125, column: 23, scope: !9466)
!9471 = !DILocation(line: 125, column: 15, scope: !9466)
!9472 = !DILocation(line: 126, column: 15, scope: !9466)
!9473 = !DILocation(line: 126, column: 21, scope: !9466)
!9474 = !DILocation(line: 127, column: 36, scope: !9466)
!9475 = !DILocation(line: 127, column: 26, scope: !9466)
!9476 = !DILocation(line: 127, column: 24, scope: !9466)
!9477 = !DILocation(line: 128, column: 28, scope: !9466)
!9478 = !DILocation(line: 128, column: 27, scope: !9466)
!9479 = !DILocation(line: 128, column: 24, scope: !9466)
!9480 = !DILocation(line: 129, column: 23, scope: !9466)
!9481 = !DILocation(line: 129, column: 15, scope: !9466)
!9482 = !DILocation(line: 130, column: 13, scope: !9466)
!9483 = !DILocation(line: 133, column: 15, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9462, file: !654, line: 132, column: 13)
!9485 = !DILocation(line: 133, column: 21, scope: !9484)
!9486 = !DILocation(line: 134, column: 37, scope: !9484)
!9487 = !DILocation(line: 134, column: 26, scope: !9484)
!9488 = !DILocation(line: 134, column: 24, scope: !9484)
!9489 = !DILocation(line: 135, column: 28, scope: !9484)
!9490 = !DILocation(line: 135, column: 27, scope: !9484)
!9491 = !DILocation(line: 135, column: 24, scope: !9484)
!9492 = !DILocation(line: 138, column: 29, scope: !9459)
!9493 = !DILocation(line: 138, column: 26, scope: !9459)
!9494 = !DILocation(line: 138, column: 38, scope: !9459)
!9495 = !DILocation(line: 138, column: 41, scope: !9459)
!9496 = !DILocation(line: 138, column: 50, scope: !9459)
!9497 = !DILocation(line: 138, column: 24, scope: !9459)
!9498 = !DILocation(line: 138, column: 64, scope: !9459)
!9499 = !DILocation(line: 139, column: 26, scope: !9459)
!9500 = !DILocation(line: 139, column: 35, scope: !9459)
!9501 = !DILocation(line: 138, column: 12, scope: !9459)
!9502 = !DILocation(line: 138, column: 21, scope: !9459)
!9503 = !DILocation(line: 140, column: 9, scope: !9459)
!9504 = !DILocation(line: 142, column: 22, scope: !9454)
!9505 = !DILocation(line: 142, column: 21, scope: !9454)
!9506 = !DILocation(line: 142, column: 19, scope: !9454)
!9507 = !DILocation(line: 143, column: 5, scope: !9454)
!9508 = !DILocation(line: 160, column: 7, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9424, file: !654, line: 160, column: 7)
!9510 = !DILocation(line: 160, column: 21, scope: !9509)
!9511 = !DILocation(line: 160, column: 19, scope: !9509)
!9512 = !DILocation(line: 160, column: 7, scope: !9424)
!9513 = !DILocation(line: 162, column: 17, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9509, file: !654, line: 161, column: 5)
!9515 = !DILocation(line: 162, column: 24, scope: !9514)
!9516 = !DILocation(line: 162, column: 22, scope: !9514)
!9517 = !DILocation(line: 162, column: 34, scope: !9514)
!9518 = !DILocation(line: 162, column: 32, scope: !9514)
!9519 = !DILocation(line: 162, column: 15, scope: !9514)
!9520 = !DILocation(line: 163, column: 11, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9514, file: !654, line: 163, column: 11)
!9522 = !DILocation(line: 163, column: 26, scope: !9521)
!9523 = !DILocation(line: 163, column: 23, scope: !9521)
!9524 = !DILocation(line: 163, column: 11, scope: !9514)
!9525 = !DILocation(line: 164, column: 19, scope: !9521)
!9526 = !DILocation(line: 164, column: 31, scope: !9521)
!9527 = !DILocation(line: 164, column: 17, scope: !9521)
!9528 = !DILocation(line: 164, column: 9, scope: !9521)
!9529 = !DILocation(line: 165, column: 23, scope: !9514)
!9530 = !DILocation(line: 165, column: 7, scope: !9514)
!9531 = !DILocation(line: 165, column: 12, scope: !9514)
!9532 = !DILocation(line: 165, column: 21, scope: !9514)
!9533 = !DILocation(line: 166, column: 7, scope: !9514)
!9534 = !DILocation(line: 166, column: 12, scope: !9514)
!9535 = !DILocation(line: 166, column: 20, scope: !9514)
!9536 = !DILocation(line: 166, column: 25, scope: !9514)
!9537 = !DILocation(line: 167, column: 5, scope: !9514)
!9538 = !DILocation(line: 168, column: 1, scope: !9424)
!9539 = distinct !DISubprogram(name: "backup_file_rename", scope: !9540, file: !9540, line: 28, type: !9541, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !295)
!9540 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!7, !5, !180, !65}
!9543 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9539, file: !9540, line: 28, type: !5)
!9544 = !DILocation(line: 28, column: 25, scope: !9539)
!9545 = !DILocalVariable(name: "file", arg: 2, scope: !9539, file: !9540, line: 28, type: !180)
!9546 = !DILocation(line: 28, column: 45, scope: !9539)
!9547 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9539, file: !9540, line: 28, type: !65)
!9548 = !DILocation(line: 28, column: 68, scope: !9539)
!9549 = !DILocation(line: 30, column: 31, scope: !9539)
!9550 = !DILocation(line: 30, column: 39, scope: !9539)
!9551 = !DILocation(line: 30, column: 45, scope: !9539)
!9552 = !DILocation(line: 30, column: 10, scope: !9539)
!9553 = !DILocation(line: 30, column: 3, scope: !9539)
!9554 = distinct !DISubprogram(name: "find_backup_file_name", scope: !699, file: !699, line: 33, type: !9541, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !295)
!9555 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9554, file: !699, line: 33, type: !5)
!9556 = !DILocation(line: 33, column: 28, scope: !9554)
!9557 = !DILocalVariable(name: "file", arg: 2, scope: !9554, file: !699, line: 33, type: !180)
!9558 = !DILocation(line: 33, column: 48, scope: !9554)
!9559 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9554, file: !699, line: 34, type: !65)
!9560 = !DILocation(line: 34, column: 41, scope: !9554)
!9561 = !DILocalVariable(name: "result", scope: !9554, file: !699, line: 36, type: !7)
!9562 = !DILocation(line: 36, column: 9, scope: !9554)
!9563 = !DILocation(line: 36, column: 39, scope: !9554)
!9564 = !DILocation(line: 36, column: 47, scope: !9554)
!9565 = !DILocation(line: 36, column: 53, scope: !9554)
!9566 = !DILocation(line: 36, column: 18, scope: !9554)
!9567 = !DILocation(line: 37, column: 8, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9554, file: !699, line: 37, column: 7)
!9569 = !DILocation(line: 37, column: 7, scope: !9554)
!9570 = !DILocation(line: 38, column: 5, scope: !9568)
!9571 = !DILocation(line: 39, column: 10, scope: !9554)
!9572 = !DILocation(line: 39, column: 3, scope: !9554)
!9573 = distinct !DISubprogram(name: "get_version", scope: !699, file: !699, line: 71, type: !9574, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !295)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{!65, !180, !180}
!9576 = !DILocalVariable(name: "context", arg: 1, scope: !9573, file: !699, line: 71, type: !180)
!9577 = !DILocation(line: 71, column: 26, scope: !9573)
!9578 = !DILocalVariable(name: "version", arg: 2, scope: !9573, file: !699, line: 71, type: !180)
!9579 = !DILocation(line: 71, column: 47, scope: !9573)
!9580 = !DILocation(line: 73, column: 7, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9573, file: !699, line: 73, column: 7)
!9582 = !DILocation(line: 73, column: 15, scope: !9581)
!9583 = !DILocation(line: 73, column: 20, scope: !9581)
!9584 = !DILocation(line: 73, column: 24, scope: !9581)
!9585 = !DILocation(line: 73, column: 23, scope: !9581)
!9586 = !DILocation(line: 73, column: 32, scope: !9581)
!9587 = !DILocation(line: 73, column: 7, scope: !9573)
!9588 = !DILocation(line: 74, column: 5, scope: !9581)
!9589 = !DILocation(line: 76, column: 12, scope: !9581)
!9590 = !DILocation(line: 76, column: 5, scope: !9581)
!9591 = !DILocation(line: 77, column: 1, scope: !9573)
!9592 = distinct !DISubprogram(name: "xget_version", scope: !699, file: !699, line: 87, type: !9574, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !295)
!9593 = !DILocalVariable(name: "context", arg: 1, scope: !9592, file: !699, line: 87, type: !180)
!9594 = !DILocation(line: 87, column: 27, scope: !9592)
!9595 = !DILocalVariable(name: "version", arg: 2, scope: !9592, file: !699, line: 87, type: !180)
!9596 = !DILocation(line: 87, column: 48, scope: !9592)
!9597 = !DILocation(line: 89, column: 7, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9592, file: !699, line: 89, column: 7)
!9599 = !DILocation(line: 89, column: 15, scope: !9598)
!9600 = !DILocation(line: 89, column: 19, scope: !9598)
!9601 = !DILocation(line: 89, column: 18, scope: !9598)
!9602 = !DILocation(line: 89, column: 7, scope: !9592)
!9603 = !DILocation(line: 90, column: 25, scope: !9598)
!9604 = !DILocation(line: 90, column: 34, scope: !9598)
!9605 = !DILocation(line: 90, column: 12, scope: !9598)
!9606 = !DILocation(line: 90, column: 5, scope: !9598)
!9607 = !DILocation(line: 92, column: 45, scope: !9598)
!9608 = !DILocation(line: 92, column: 12, scope: !9598)
!9609 = !DILocation(line: 92, column: 5, scope: !9598)
!9610 = !DILocation(line: 93, column: 1, scope: !9592)
!9611 = distinct !DISubprogram(name: "buffer_lcm", scope: !9612, file: !9612, line: 28, type: !9613, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1259, retainedNodes: !295)
!9612 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!9613 = !DISubroutineType(types: !9614)
!9614 = !{!52, !52, !52, !52}
!9615 = !DILocalVariable(name: "a", arg: 1, scope: !9611, file: !9612, line: 28, type: !52)
!9616 = !DILocation(line: 28, column: 20, scope: !9611)
!9617 = !DILocalVariable(name: "b", arg: 2, scope: !9611, file: !9612, line: 28, type: !52)
!9618 = !DILocation(line: 28, column: 30, scope: !9611)
!9619 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !9611, file: !9612, line: 28, type: !52)
!9620 = !DILocation(line: 28, column: 40, scope: !9611)
!9621 = !DILocalVariable(name: "size", scope: !9611, file: !9612, line: 30, type: !52)
!9622 = !DILocation(line: 30, column: 10, scope: !9611)
!9623 = !DILocation(line: 33, column: 8, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9611, file: !9612, line: 33, column: 7)
!9625 = !DILocation(line: 33, column: 7, scope: !9611)
!9626 = !DILocation(line: 34, column: 12, scope: !9624)
!9627 = !DILocation(line: 34, column: 16, scope: !9624)
!9628 = !DILocation(line: 34, column: 10, scope: !9624)
!9629 = !DILocation(line: 34, column: 5, scope: !9624)
!9630 = !DILocation(line: 37, column: 11, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !9612, line: 37, column: 11)
!9632 = distinct !DILexicalBlock(scope: !9624, file: !9612, line: 36, column: 5)
!9633 = !DILocation(line: 37, column: 11, scope: !9632)
!9634 = !DILocalVariable(name: "lcm", scope: !9635, file: !9612, line: 42, type: !52)
!9635 = distinct !DILexicalBlock(scope: !9631, file: !9612, line: 38, column: 9)
!9636 = !DILocation(line: 42, column: 18, scope: !9635)
!9637 = !DILocalVariable(name: "m", scope: !9635, file: !9612, line: 42, type: !52)
!9638 = !DILocation(line: 42, column: 23, scope: !9635)
!9639 = !DILocalVariable(name: "n", scope: !9635, file: !9612, line: 42, type: !52)
!9640 = !DILocation(line: 42, column: 26, scope: !9635)
!9641 = !DILocalVariable(name: "q", scope: !9635, file: !9612, line: 42, type: !52)
!9642 = !DILocation(line: 42, column: 29, scope: !9635)
!9643 = !DILocalVariable(name: "r", scope: !9635, file: !9612, line: 42, type: !52)
!9644 = !DILocation(line: 42, column: 32, scope: !9635)
!9645 = !DILocation(line: 45, column: 20, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9635, file: !9612, line: 45, column: 11)
!9647 = !DILocation(line: 45, column: 18, scope: !9646)
!9648 = !DILocation(line: 45, column: 27, scope: !9646)
!9649 = !DILocation(line: 45, column: 25, scope: !9646)
!9650 = !DILocation(line: 45, column: 16, scope: !9646)
!9651 = !DILocation(line: 45, column: 36, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9646, file: !9612, line: 45, column: 11)
!9653 = !DILocation(line: 45, column: 40, scope: !9652)
!9654 = !DILocation(line: 45, column: 38, scope: !9652)
!9655 = !DILocation(line: 45, column: 34, scope: !9652)
!9656 = !DILocation(line: 45, column: 43, scope: !9652)
!9657 = !DILocation(line: 45, column: 11, scope: !9646)
!9658 = !DILocation(line: 46, column: 13, scope: !9652)
!9659 = !DILocation(line: 45, column: 54, scope: !9652)
!9660 = !DILocation(line: 45, column: 52, scope: !9652)
!9661 = !DILocation(line: 45, column: 61, scope: !9652)
!9662 = !DILocation(line: 45, column: 59, scope: !9652)
!9663 = !DILocation(line: 45, column: 11, scope: !9652)
!9664 = distinct !{!9664, !9657, !9665}
!9665 = !DILocation(line: 46, column: 13, scope: !9646)
!9666 = !DILocation(line: 49, column: 15, scope: !9635)
!9667 = !DILocation(line: 49, column: 19, scope: !9635)
!9668 = !DILocation(line: 49, column: 17, scope: !9635)
!9669 = !DILocation(line: 49, column: 13, scope: !9635)
!9670 = !DILocation(line: 50, column: 17, scope: !9635)
!9671 = !DILocation(line: 50, column: 21, scope: !9635)
!9672 = !DILocation(line: 50, column: 19, scope: !9635)
!9673 = !DILocation(line: 50, column: 15, scope: !9635)
!9674 = !DILocation(line: 51, column: 15, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9635, file: !9612, line: 51, column: 15)
!9676 = !DILocation(line: 51, column: 22, scope: !9675)
!9677 = !DILocation(line: 51, column: 19, scope: !9675)
!9678 = !DILocation(line: 51, column: 30, scope: !9675)
!9679 = !DILocation(line: 51, column: 33, scope: !9675)
!9680 = !DILocation(line: 51, column: 39, scope: !9675)
!9681 = !DILocation(line: 51, column: 37, scope: !9675)
!9682 = !DILocation(line: 51, column: 44, scope: !9675)
!9683 = !DILocation(line: 51, column: 41, scope: !9675)
!9684 = !DILocation(line: 51, column: 15, scope: !9635)
!9685 = !DILocation(line: 52, column: 20, scope: !9675)
!9686 = !DILocation(line: 52, column: 13, scope: !9675)
!9687 = !DILocation(line: 53, column: 9, scope: !9635)
!9688 = !DILocation(line: 55, column: 14, scope: !9632)
!9689 = !DILocation(line: 55, column: 12, scope: !9632)
!9690 = !DILocation(line: 58, column: 10, scope: !9611)
!9691 = !DILocation(line: 58, column: 18, scope: !9611)
!9692 = !DILocation(line: 58, column: 15, scope: !9611)
!9693 = !DILocation(line: 58, column: 28, scope: !9611)
!9694 = !DILocation(line: 58, column: 35, scope: !9611)
!9695 = !DILocation(line: 58, column: 3, scope: !9611)
!9696 = !DILocation(line: 59, column: 1, scope: !9611)
!9697 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !747, file: !747, line: 43, type: !293, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !702, retainedNodes: !295)
!9698 = !DILocalVariable(name: "file", arg: 1, scope: !9697, file: !747, line: 43, type: !180)
!9699 = !DILocation(line: 43, column: 40, scope: !9697)
!9700 = !DILocation(line: 45, column: 15, scope: !9697)
!9701 = !DILocation(line: 45, column: 13, scope: !9697)
!9702 = !DILocation(line: 46, column: 1, scope: !9697)
!9703 = distinct !DISubprogram(name: "close_stdin", scope: !747, file: !747, line: 79, type: !694, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !702, retainedNodes: !295)
!9704 = !DILocalVariable(name: "fail", scope: !9703, file: !747, line: 81, type: !139)
!9705 = !DILocation(line: 81, column: 8, scope: !9703)
!9706 = !DILocation(line: 87, column: 19, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9703, file: !747, line: 87, column: 7)
!9708 = !DILocation(line: 87, column: 7, scope: !9707)
!9709 = !DILocation(line: 87, column: 26, scope: !9707)
!9710 = !DILocation(line: 87, column: 7, scope: !9703)
!9711 = !DILocation(line: 91, column: 19, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !747, line: 91, column: 11)
!9713 = distinct !DILexicalBlock(scope: !9707, file: !747, line: 88, column: 5)
!9714 = !DILocation(line: 91, column: 11, scope: !9712)
!9715 = !DILocation(line: 91, column: 39, scope: !9712)
!9716 = !DILocation(line: 91, column: 44, scope: !9712)
!9717 = !DILocation(line: 91, column: 55, scope: !9712)
!9718 = !DILocation(line: 91, column: 47, scope: !9712)
!9719 = !DILocation(line: 91, column: 62, scope: !9712)
!9720 = !DILocation(line: 91, column: 11, scope: !9713)
!9721 = !DILocation(line: 92, column: 14, scope: !9712)
!9722 = !DILocation(line: 92, column: 9, scope: !9712)
!9723 = !DILocation(line: 93, column: 5, scope: !9713)
!9724 = !DILocation(line: 94, column: 21, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9703, file: !747, line: 94, column: 7)
!9726 = !DILocation(line: 94, column: 7, scope: !9725)
!9727 = !DILocation(line: 94, column: 28, scope: !9725)
!9728 = !DILocation(line: 94, column: 7, scope: !9703)
!9729 = !DILocation(line: 95, column: 10, scope: !9725)
!9730 = !DILocation(line: 95, column: 5, scope: !9725)
!9731 = !DILocation(line: 96, column: 7, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9703, file: !747, line: 96, column: 7)
!9733 = !DILocation(line: 96, column: 7, scope: !9703)
!9734 = !DILocalVariable(name: "close_error", scope: !9735, file: !747, line: 100, type: !180)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !747, line: 97, column: 5)
!9736 = !DILocation(line: 100, column: 19, scope: !9735)
!9737 = !DILocation(line: 100, column: 33, scope: !9735)
!9738 = !DILocation(line: 101, column: 11, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9735, file: !747, line: 101, column: 11)
!9740 = !DILocation(line: 101, column: 11, scope: !9735)
!9741 = !DILocation(line: 102, column: 19, scope: !9739)
!9742 = !DILocation(line: 102, column: 52, scope: !9739)
!9743 = !DILocation(line: 102, column: 36, scope: !9739)
!9744 = !DILocation(line: 103, column: 16, scope: !9739)
!9745 = !DILocation(line: 102, column: 9, scope: !9739)
!9746 = !DILocation(line: 105, column: 19, scope: !9739)
!9747 = !DILocation(line: 105, column: 32, scope: !9739)
!9748 = !DILocation(line: 105, column: 9, scope: !9739)
!9749 = !DILocation(line: 106, column: 5, scope: !9735)
!9750 = !DILocation(line: 108, column: 3, scope: !9703)
!9751 = !DILocation(line: 110, column: 7, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9703, file: !747, line: 110, column: 7)
!9753 = !DILocation(line: 110, column: 7, scope: !9703)
!9754 = !DILocation(line: 111, column: 12, scope: !9752)
!9755 = !DILocation(line: 111, column: 5, scope: !9752)
!9756 = !DILocation(line: 112, column: 1, scope: !9703)
!9757 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !794, file: !794, line: 51, type: !293, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !750, retainedNodes: !295)
!9758 = !DILocalVariable(name: "file", arg: 1, scope: !9757, file: !794, line: 51, type: !180)
!9759 = !DILocation(line: 51, column: 41, scope: !9757)
!9760 = !DILocation(line: 53, column: 15, scope: !9757)
!9761 = !DILocation(line: 53, column: 13, scope: !9757)
!9762 = !DILocation(line: 54, column: 1, scope: !9757)
!9763 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !794, file: !794, line: 88, type: !9764, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !750, retainedNodes: !295)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{null, !139}
!9766 = !DILocalVariable(name: "ignore", arg: 1, scope: !9763, file: !794, line: 88, type: !139)
!9767 = !DILocation(line: 88, column: 37, scope: !9763)
!9768 = !DILocation(line: 90, column: 18, scope: !9763)
!9769 = !DILocation(line: 90, column: 16, scope: !9763)
!9770 = !DILocation(line: 91, column: 1, scope: !9763)
!9771 = distinct !DISubprogram(name: "close_stdout", scope: !794, file: !794, line: 117, type: !694, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !750, retainedNodes: !295)
!9772 = !DILocation(line: 119, column: 21, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9771, file: !794, line: 119, column: 7)
!9774 = !DILocation(line: 119, column: 7, scope: !9773)
!9775 = !DILocation(line: 119, column: 29, scope: !9773)
!9776 = !DILocation(line: 120, column: 7, scope: !9773)
!9777 = !DILocation(line: 120, column: 12, scope: !9773)
!9778 = !DILocation(line: 120, column: 25, scope: !9773)
!9779 = !DILocation(line: 120, column: 28, scope: !9773)
!9780 = !DILocation(line: 120, column: 34, scope: !9773)
!9781 = !DILocation(line: 119, column: 7, scope: !9771)
!9782 = !DILocalVariable(name: "write_error", scope: !9783, file: !794, line: 122, type: !180)
!9783 = distinct !DILexicalBlock(scope: !9773, file: !794, line: 121, column: 5)
!9784 = !DILocation(line: 122, column: 19, scope: !9783)
!9785 = !DILocation(line: 122, column: 33, scope: !9783)
!9786 = !DILocation(line: 123, column: 11, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9783, file: !794, line: 123, column: 11)
!9788 = !DILocation(line: 123, column: 11, scope: !9783)
!9789 = !DILocation(line: 124, column: 19, scope: !9787)
!9790 = !DILocation(line: 124, column: 52, scope: !9787)
!9791 = !DILocation(line: 124, column: 36, scope: !9787)
!9792 = !DILocation(line: 125, column: 16, scope: !9787)
!9793 = !DILocation(line: 124, column: 9, scope: !9787)
!9794 = !DILocation(line: 127, column: 19, scope: !9787)
!9795 = !DILocation(line: 127, column: 32, scope: !9787)
!9796 = !DILocation(line: 127, column: 9, scope: !9787)
!9797 = !DILocation(line: 129, column: 14, scope: !9783)
!9798 = !DILocation(line: 129, column: 7, scope: !9783)
!9799 = !DILocation(line: 134, column: 42, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9771, file: !794, line: 134, column: 7)
!9801 = !DILocation(line: 134, column: 28, scope: !9800)
!9802 = !DILocation(line: 134, column: 50, scope: !9800)
!9803 = !DILocation(line: 134, column: 7, scope: !9771)
!9804 = !DILocation(line: 135, column: 12, scope: !9800)
!9805 = !DILocation(line: 135, column: 5, scope: !9800)
!9806 = !DILocation(line: 136, column: 1, scope: !9771)
!9807 = distinct !DISubprogram(name: "dir_name", scope: !9808, file: !9808, line: 32, type: !2501, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1262, retainedNodes: !295)
!9808 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!9809 = !DILocalVariable(name: "file", arg: 1, scope: !9807, file: !9808, line: 32, type: !180)
!9810 = !DILocation(line: 32, column: 23, scope: !9807)
!9811 = !DILocalVariable(name: "result", scope: !9807, file: !9808, line: 34, type: !7)
!9812 = !DILocation(line: 34, column: 9, scope: !9807)
!9813 = !DILocation(line: 34, column: 29, scope: !9807)
!9814 = !DILocation(line: 34, column: 18, scope: !9807)
!9815 = !DILocation(line: 35, column: 8, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9807, file: !9808, line: 35, column: 7)
!9817 = !DILocation(line: 35, column: 7, scope: !9807)
!9818 = !DILocation(line: 36, column: 5, scope: !9816)
!9819 = !DILocation(line: 37, column: 10, scope: !9807)
!9820 = !DILocation(line: 37, column: 3, scope: !9807)
!9821 = distinct !DISubprogram(name: "dir_len", scope: !9822, file: !9822, line: 32, type: !9823, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1265, retainedNodes: !295)
!9822 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!52, !180}
!9825 = !DILocalVariable(name: "file", arg: 1, scope: !9821, file: !9822, line: 32, type: !180)
!9826 = !DILocation(line: 32, column: 22, scope: !9821)
!9827 = !DILocalVariable(name: "prefix_length", scope: !9821, file: !9822, line: 34, type: !52)
!9828 = !DILocation(line: 34, column: 10, scope: !9821)
!9829 = !DILocalVariable(name: "length", scope: !9821, file: !9822, line: 35, type: !52)
!9830 = !DILocation(line: 35, column: 10, scope: !9821)
!9831 = !DILocation(line: 38, column: 21, scope: !9821)
!9832 = !DILocation(line: 38, column: 35, scope: !9821)
!9833 = !DILocation(line: 41, column: 24, scope: !9821)
!9834 = !DILocation(line: 38, column: 20, scope: !9821)
!9835 = !DILocation(line: 38, column: 17, scope: !9821)
!9836 = !DILocation(line: 48, column: 33, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9821, file: !9822, line: 48, column: 3)
!9838 = !DILocation(line: 48, column: 17, scope: !9837)
!9839 = !DILocation(line: 48, column: 41, scope: !9837)
!9840 = !DILocation(line: 48, column: 39, scope: !9837)
!9841 = !DILocation(line: 48, column: 15, scope: !9837)
!9842 = !DILocation(line: 48, column: 8, scope: !9837)
!9843 = !DILocation(line: 49, column: 8, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9837, file: !9822, line: 48, column: 3)
!9845 = !DILocation(line: 49, column: 24, scope: !9844)
!9846 = !DILocation(line: 49, column: 22, scope: !9844)
!9847 = !DILocation(line: 48, column: 3, scope: !9837)
!9848 = !DILocation(line: 50, column: 11, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9844, file: !9822, line: 50, column: 9)
!9850 = !DILocation(line: 50, column: 9, scope: !9844)
!9851 = !DILocation(line: 51, column: 7, scope: !9849)
!9852 = !DILocation(line: 49, column: 38, scope: !9844)
!9853 = !DILocation(line: 48, column: 3, scope: !9844)
!9854 = distinct !{!9854, !9847, !9855}
!9855 = !DILocation(line: 51, column: 7, scope: !9837)
!9856 = !DILocation(line: 52, column: 10, scope: !9821)
!9857 = !DILocation(line: 52, column: 3, scope: !9821)
!9858 = distinct !DISubprogram(name: "mdir_name", scope: !9822, file: !9822, line: 71, type: !2501, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1265, retainedNodes: !295)
!9859 = !DILocalVariable(name: "file", arg: 1, scope: !9858, file: !9822, line: 71, type: !180)
!9860 = !DILocation(line: 71, column: 24, scope: !9858)
!9861 = !DILocalVariable(name: "length", scope: !9858, file: !9822, line: 73, type: !52)
!9862 = !DILocation(line: 73, column: 10, scope: !9858)
!9863 = !DILocation(line: 73, column: 28, scope: !9858)
!9864 = !DILocation(line: 73, column: 19, scope: !9858)
!9865 = !DILocalVariable(name: "append_dot", scope: !9858, file: !9822, line: 74, type: !139)
!9866 = !DILocation(line: 74, column: 8, scope: !9858)
!9867 = !DILocation(line: 74, column: 22, scope: !9858)
!9868 = !DILocation(line: 74, column: 29, scope: !9858)
!9869 = !DILocation(line: 75, column: 22, scope: !9858)
!9870 = !DILocalVariable(name: "dir", scope: !9858, file: !9822, line: 78, type: !7)
!9871 = !DILocation(line: 78, column: 9, scope: !9858)
!9872 = !DILocation(line: 78, column: 23, scope: !9858)
!9873 = !DILocation(line: 78, column: 32, scope: !9858)
!9874 = !DILocation(line: 78, column: 30, scope: !9858)
!9875 = !DILocation(line: 78, column: 43, scope: !9858)
!9876 = !DILocation(line: 78, column: 15, scope: !9858)
!9877 = !DILocation(line: 79, column: 8, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9858, file: !9822, line: 79, column: 7)
!9879 = !DILocation(line: 79, column: 7, scope: !9858)
!9880 = !DILocation(line: 80, column: 5, scope: !9878)
!9881 = !DILocation(line: 81, column: 11, scope: !9858)
!9882 = !DILocation(line: 81, column: 16, scope: !9858)
!9883 = !DILocation(line: 81, column: 22, scope: !9858)
!9884 = !DILocation(line: 81, column: 3, scope: !9858)
!9885 = !DILocation(line: 82, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9858, file: !9822, line: 82, column: 7)
!9887 = !DILocation(line: 82, column: 7, scope: !9858)
!9888 = !DILocation(line: 83, column: 5, scope: !9886)
!9889 = !DILocation(line: 83, column: 15, scope: !9886)
!9890 = !DILocation(line: 83, column: 19, scope: !9886)
!9891 = !DILocation(line: 84, column: 3, scope: !9858)
!9892 = !DILocation(line: 84, column: 7, scope: !9858)
!9893 = !DILocation(line: 84, column: 15, scope: !9858)
!9894 = !DILocation(line: 85, column: 10, scope: !9858)
!9895 = !DILocation(line: 85, column: 3, scope: !9858)
!9896 = !DILocation(line: 86, column: 1, scope: !9858)
!9897 = distinct !DISubprogram(name: "last_component", scope: !9898, file: !9898, line: 30, type: !2501, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1268, retainedNodes: !295)
!9898 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!9899 = !DILocalVariable(name: "name", arg: 1, scope: !9897, file: !9898, line: 30, type: !180)
!9900 = !DILocation(line: 30, column: 29, scope: !9897)
!9901 = !DILocalVariable(name: "base", scope: !9897, file: !9898, line: 32, type: !180)
!9902 = !DILocation(line: 32, column: 15, scope: !9897)
!9903 = !DILocation(line: 32, column: 22, scope: !9897)
!9904 = !DILocation(line: 32, column: 27, scope: !9897)
!9905 = !DILocalVariable(name: "p", scope: !9897, file: !9898, line: 33, type: !180)
!9906 = !DILocation(line: 33, column: 15, scope: !9897)
!9907 = !DILocalVariable(name: "saw_slash", scope: !9897, file: !9898, line: 34, type: !139)
!9908 = !DILocation(line: 34, column: 8, scope: !9897)
!9909 = !DILocation(line: 36, column: 3, scope: !9897)
!9910 = !DILocation(line: 36, column: 10, scope: !9897)
!9911 = !DILocation(line: 37, column: 9, scope: !9897)
!9912 = distinct !{!9912, !9909, !9911}
!9913 = !DILocation(line: 39, column: 12, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9897, file: !9898, line: 39, column: 3)
!9915 = !DILocation(line: 39, column: 10, scope: !9914)
!9916 = !DILocation(line: 39, column: 8, scope: !9914)
!9917 = !DILocation(line: 39, column: 19, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9914, file: !9898, line: 39, column: 3)
!9919 = !DILocation(line: 39, column: 18, scope: !9918)
!9920 = !DILocation(line: 39, column: 3, scope: !9914)
!9921 = !DILocation(line: 41, column: 11, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9898, line: 41, column: 11)
!9923 = distinct !DILexicalBlock(scope: !9918, file: !9898, line: 40, column: 5)
!9924 = !DILocation(line: 41, column: 11, scope: !9923)
!9925 = !DILocation(line: 42, column: 19, scope: !9922)
!9926 = !DILocation(line: 42, column: 9, scope: !9922)
!9927 = !DILocation(line: 43, column: 16, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9922, file: !9898, line: 43, column: 16)
!9929 = !DILocation(line: 43, column: 16, scope: !9922)
!9930 = !DILocation(line: 45, column: 18, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9928, file: !9898, line: 44, column: 9)
!9932 = !DILocation(line: 45, column: 16, scope: !9931)
!9933 = !DILocation(line: 46, column: 21, scope: !9931)
!9934 = !DILocation(line: 47, column: 9, scope: !9931)
!9935 = !DILocation(line: 48, column: 5, scope: !9923)
!9936 = !DILocation(line: 39, column: 23, scope: !9918)
!9937 = !DILocation(line: 39, column: 3, scope: !9918)
!9938 = distinct !{!9938, !9920, !9939}
!9939 = !DILocation(line: 48, column: 5, scope: !9914)
!9940 = !DILocation(line: 50, column: 19, scope: !9897)
!9941 = !DILocation(line: 50, column: 3, scope: !9897)
!9942 = distinct !DISubprogram(name: "base_len", scope: !9898, file: !9898, line: 58, type: !9823, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1268, retainedNodes: !295)
!9943 = !DILocalVariable(name: "name", arg: 1, scope: !9942, file: !9898, line: 58, type: !180)
!9944 = !DILocation(line: 58, column: 23, scope: !9942)
!9945 = !DILocalVariable(name: "len", scope: !9942, file: !9898, line: 60, type: !52)
!9946 = !DILocation(line: 60, column: 10, scope: !9942)
!9947 = !DILocalVariable(name: "prefix_len", scope: !9942, file: !9898, line: 61, type: !52)
!9948 = !DILocation(line: 61, column: 10, scope: !9942)
!9949 = !DILocation(line: 63, column: 22, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9942, file: !9898, line: 63, column: 3)
!9951 = !DILocation(line: 63, column: 14, scope: !9950)
!9952 = !DILocation(line: 63, column: 12, scope: !9950)
!9953 = !DILocation(line: 63, column: 8, scope: !9950)
!9954 = !DILocation(line: 63, column: 34, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9950, file: !9898, line: 63, column: 3)
!9956 = !DILocation(line: 63, column: 32, scope: !9955)
!9957 = !DILocation(line: 63, column: 38, scope: !9955)
!9958 = !DILocation(line: 63, column: 41, scope: !9955)
!9959 = !DILocation(line: 0, scope: !9955)
!9960 = !DILocation(line: 63, column: 3, scope: !9950)
!9961 = !DILocation(line: 64, column: 5, scope: !9955)
!9962 = !DILocation(line: 63, column: 70, scope: !9955)
!9963 = !DILocation(line: 63, column: 3, scope: !9955)
!9964 = distinct !{!9964, !9960, !9965}
!9965 = !DILocation(line: 64, column: 5, scope: !9950)
!9966 = !DILocation(line: 74, column: 10, scope: !9942)
!9967 = !DILocation(line: 74, column: 3, scope: !9942)
!9968 = distinct !DISubprogram(name: "fdadvise", scope: !9969, file: !9969, line: 31, type: !9970, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1271, retainedNodes: !295)
!9969 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!9970 = !DISubroutineType(types: !9971)
!9971 = !{null, !5, !437, !437, !9972}
!9972 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1275, line: 52, baseType: !1274)
!9973 = !DILocalVariable(name: "fd", arg: 1, scope: !9968, file: !9969, line: 31, type: !5)
!9974 = !DILocation(line: 31, column: 15, scope: !9968)
!9975 = !DILocalVariable(name: "offset", arg: 2, scope: !9968, file: !9969, line: 31, type: !437)
!9976 = !DILocation(line: 31, column: 25, scope: !9968)
!9977 = !DILocalVariable(name: "len", arg: 3, scope: !9968, file: !9969, line: 31, type: !437)
!9978 = !DILocation(line: 31, column: 39, scope: !9968)
!9979 = !DILocalVariable(name: "advice", arg: 4, scope: !9968, file: !9969, line: 31, type: !9972)
!9980 = !DILocation(line: 31, column: 54, scope: !9968)
!9981 = !DILocalVariable(name: "__x", scope: !9982, file: !9969, line: 34, type: !5)
!9982 = distinct !DILexicalBlock(scope: !9968, file: !9969, line: 34, column: 3)
!9983 = !DILocation(line: 34, column: 3, scope: !9982)
!9984 = !DILocation(line: 36, column: 1, scope: !9968)
!9985 = distinct !DISubprogram(name: "fadvise", scope: !9969, file: !9969, line: 39, type: !9986, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1271, retainedNodes: !295)
!9986 = !DISubroutineType(types: !9987)
!9987 = !{null, !9988, !9972}
!9988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9989, size: 64)
!9989 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !9990)
!9990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !9991)
!9991 = !{!9992, !9993, !9994, !9995, !9996, !9997, !9998, !9999, !10000, !10001, !10002, !10003, !10004, !10012, !10013, !10014, !10015, !10016, !10017, !10018, !10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027}
!9992 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !9990, file: !2, line: 242, baseType: !5, size: 32)
!9993 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !9990, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!9994 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !9990, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !9990, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !9990, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !9990, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !9990, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !9990, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !9990, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!10001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !9990, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !9990, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !9990, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !9990, file: !2, line: 260, baseType: !10005, size: 64, offset: 768)
!10005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10006, size: 64)
!10006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !10007)
!10007 = !{!10008, !10009, !10011}
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10006, file: !2, line: 157, baseType: !10005, size: 64)
!10009 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10006, file: !2, line: 158, baseType: !10010, size: 64, offset: 64)
!10010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9990, size: 64)
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10006, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !9990, file: !2, line: 262, baseType: !10010, size: 64, offset: 832)
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !9990, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!10014 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !9990, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!10015 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !9990, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !9990, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!10017 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !9990, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !9990, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !9990, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !9990, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !9990, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !9990, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !9990, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !9990, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !9990, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !9990, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !9990, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!10028 = !DILocalVariable(name: "fp", arg: 1, scope: !9985, file: !9969, line: 39, type: !9988)
!10029 = !DILocation(line: 39, column: 16, scope: !9985)
!10030 = !DILocalVariable(name: "advice", arg: 2, scope: !9985, file: !9969, line: 39, type: !9972)
!10031 = !DILocation(line: 39, column: 30, scope: !9985)
!10032 = !DILocation(line: 41, column: 7, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9985, file: !9969, line: 41, column: 7)
!10034 = !DILocation(line: 41, column: 7, scope: !9985)
!10035 = !DILocation(line: 42, column: 23, scope: !10033)
!10036 = !DILocation(line: 42, column: 15, scope: !10033)
!10037 = !DILocation(line: 42, column: 34, scope: !10033)
!10038 = !DILocation(line: 42, column: 5, scope: !10033)
!10039 = !DILocation(line: 43, column: 1, scope: !9985)
!10040 = distinct !DISubprogram(name: "open_safer", scope: !10041, file: !10041, line: 29, type: !10042, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1283, retainedNodes: !295)
!10041 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!5, !180, !5, null}
!10044 = !DILocalVariable(name: "file", arg: 1, scope: !10040, file: !10041, line: 29, type: !180)
!10045 = !DILocation(line: 29, column: 25, scope: !10040)
!10046 = !DILocalVariable(name: "flags", arg: 2, scope: !10040, file: !10041, line: 29, type: !5)
!10047 = !DILocation(line: 29, column: 35, scope: !10040)
!10048 = !DILocalVariable(name: "mode", scope: !10040, file: !10041, line: 31, type: !136)
!10049 = !DILocation(line: 31, column: 10, scope: !10040)
!10050 = !DILocation(line: 33, column: 7, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10040, file: !10041, line: 33, column: 7)
!10052 = !DILocation(line: 33, column: 13, scope: !10051)
!10053 = !DILocation(line: 33, column: 7, scope: !10040)
!10054 = !DILocalVariable(name: "ap", scope: !10055, file: !10041, line: 35, type: !1286)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !10041, line: 34, column: 5)
!10056 = !DILocation(line: 35, column: 15, scope: !10055)
!10057 = !DILocation(line: 36, column: 7, scope: !10055)
!10058 = !DILocation(line: 40, column: 14, scope: !10055)
!10059 = !DILocation(line: 40, column: 12, scope: !10055)
!10060 = !DILocation(line: 42, column: 7, scope: !10055)
!10061 = !DILocation(line: 43, column: 5, scope: !10055)
!10062 = !DILocation(line: 45, column: 26, scope: !10040)
!10063 = !DILocation(line: 45, column: 32, scope: !10040)
!10064 = !DILocation(line: 45, column: 39, scope: !10040)
!10065 = !DILocation(line: 45, column: 20, scope: !10040)
!10066 = !DILocation(line: 45, column: 10, scope: !10040)
!10067 = !DILocation(line: 45, column: 3, scope: !10040)
!10068 = distinct !DISubprogram(name: "record_file", scope: !10069, file: !10069, line: 29, type: !10070, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1295, retainedNodes: !295)
!10069 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!10070 = !DISubroutineType(types: !10071)
!10071 = !{null, !172, !180, !10072}
!10072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10073, size: 64)
!10073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10074)
!10074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !10075)
!10075 = !{!10076, !10077, !10078, !10079, !10080, !10081, !10082, !10083, !10084, !10085, !10086, !10087, !10092, !10093, !10094}
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10074, file: !471, line: 48, baseType: !460, size: 64)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10074, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10074, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10074, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10074, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10074, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10074, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10074, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10074, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10074, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10074, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10074, file: !471, line: 91, baseType: !10088, size: 128, offset: 576)
!10088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !10089)
!10089 = !{!10090, !10091}
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10088, file: !373, line: 122, baseType: !376, size: 64)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10088, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10074, file: !471, line: 92, baseType: !10088, size: 128, offset: 704)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10074, file: !471, line: 93, baseType: !10088, size: 128, offset: 832)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10074, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!10095 = !DILocalVariable(name: "ht", arg: 1, scope: !10068, file: !10069, line: 29, type: !172)
!10096 = !DILocation(line: 29, column: 26, scope: !10068)
!10097 = !DILocalVariable(name: "file", arg: 2, scope: !10068, file: !10069, line: 29, type: !180)
!10098 = !DILocation(line: 29, column: 42, scope: !10068)
!10099 = !DILocalVariable(name: "stats", arg: 3, scope: !10068, file: !10069, line: 29, type: !10072)
!10100 = !DILocation(line: 29, column: 67, scope: !10068)
!10101 = !DILocalVariable(name: "ent", scope: !10068, file: !10069, line: 31, type: !1298)
!10102 = !DILocation(line: 31, column: 20, scope: !10068)
!10103 = !DILocation(line: 33, column: 7, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10068, file: !10069, line: 33, column: 7)
!10105 = !DILocation(line: 33, column: 10, scope: !10104)
!10106 = !DILocation(line: 33, column: 7, scope: !10068)
!10107 = !DILocation(line: 34, column: 5, scope: !10104)
!10108 = !DILocation(line: 36, column: 9, scope: !10068)
!10109 = !DILocation(line: 36, column: 7, scope: !10068)
!10110 = !DILocation(line: 37, column: 24, scope: !10068)
!10111 = !DILocation(line: 37, column: 15, scope: !10068)
!10112 = !DILocation(line: 37, column: 3, scope: !10068)
!10113 = !DILocation(line: 37, column: 8, scope: !10068)
!10114 = !DILocation(line: 37, column: 13, scope: !10068)
!10115 = !DILocation(line: 38, column: 17, scope: !10068)
!10116 = !DILocation(line: 38, column: 24, scope: !10068)
!10117 = !DILocation(line: 38, column: 3, scope: !10068)
!10118 = !DILocation(line: 38, column: 8, scope: !10068)
!10119 = !DILocation(line: 38, column: 15, scope: !10068)
!10120 = !DILocation(line: 39, column: 17, scope: !10068)
!10121 = !DILocation(line: 39, column: 24, scope: !10068)
!10122 = !DILocation(line: 39, column: 3, scope: !10068)
!10123 = !DILocation(line: 39, column: 8, scope: !10068)
!10124 = !DILocation(line: 39, column: 15, scope: !10068)
!10125 = !DILocalVariable(name: "ent_from_table", scope: !10126, file: !10069, line: 42, type: !1298)
!10126 = distinct !DILexicalBlock(scope: !10068, file: !10069, line: 41, column: 3)
!10127 = !DILocation(line: 42, column: 22, scope: !10126)
!10128 = !DILocation(line: 42, column: 52, scope: !10126)
!10129 = !DILocation(line: 42, column: 56, scope: !10126)
!10130 = !DILocation(line: 42, column: 39, scope: !10126)
!10131 = !DILocation(line: 43, column: 9, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10126, file: !10069, line: 43, column: 9)
!10133 = !DILocation(line: 43, column: 24, scope: !10132)
!10134 = !DILocation(line: 43, column: 9, scope: !10126)
!10135 = !DILocation(line: 46, column: 9, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10132, file: !10069, line: 44, column: 7)
!10137 = !DILocation(line: 49, column: 9, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10126, file: !10069, line: 49, column: 9)
!10139 = !DILocation(line: 49, column: 27, scope: !10138)
!10140 = !DILocation(line: 49, column: 24, scope: !10138)
!10141 = !DILocation(line: 49, column: 9, scope: !10126)
!10142 = !DILocation(line: 53, column: 22, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10138, file: !10069, line: 50, column: 7)
!10144 = !DILocation(line: 53, column: 9, scope: !10143)
!10145 = !DILocation(line: 54, column: 7, scope: !10143)
!10146 = !DILocation(line: 56, column: 1, scope: !10068)
!10147 = distinct !DISubprogram(name: "seen_file", scope: !10069, file: !10069, line: 61, type: !10148, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1295, retainedNodes: !295)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!139, !10150, !180, !10072}
!10150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10151, size: 64)
!10151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!10152 = !DILocalVariable(name: "ht", arg: 1, scope: !10147, file: !10069, line: 61, type: !10150)
!10153 = !DILocation(line: 61, column: 30, scope: !10147)
!10154 = !DILocalVariable(name: "file", arg: 2, scope: !10147, file: !10069, line: 61, type: !180)
!10155 = !DILocation(line: 61, column: 46, scope: !10147)
!10156 = !DILocalVariable(name: "stats", arg: 3, scope: !10147, file: !10069, line: 62, type: !10072)
!10157 = !DILocation(line: 62, column: 31, scope: !10147)
!10158 = !DILocalVariable(name: "new_ent", scope: !10147, file: !10069, line: 64, type: !1299)
!10159 = !DILocation(line: 64, column: 19, scope: !10147)
!10160 = !DILocation(line: 66, column: 7, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10147, file: !10069, line: 66, column: 7)
!10162 = !DILocation(line: 66, column: 10, scope: !10161)
!10163 = !DILocation(line: 66, column: 7, scope: !10147)
!10164 = !DILocation(line: 67, column: 5, scope: !10161)
!10165 = !DILocation(line: 69, column: 27, scope: !10147)
!10166 = !DILocation(line: 69, column: 11, scope: !10147)
!10167 = !DILocation(line: 69, column: 16, scope: !10147)
!10168 = !DILocation(line: 70, column: 20, scope: !10147)
!10169 = !DILocation(line: 70, column: 27, scope: !10147)
!10170 = !DILocation(line: 70, column: 11, scope: !10147)
!10171 = !DILocation(line: 70, column: 18, scope: !10147)
!10172 = !DILocation(line: 71, column: 20, scope: !10147)
!10173 = !DILocation(line: 71, column: 27, scope: !10147)
!10174 = !DILocation(line: 71, column: 11, scope: !10147)
!10175 = !DILocation(line: 71, column: 18, scope: !10147)
!10176 = !DILocation(line: 73, column: 25, scope: !10147)
!10177 = !DILocation(line: 73, column: 29, scope: !10147)
!10178 = !DILocation(line: 73, column: 12, scope: !10147)
!10179 = !DILocation(line: 73, column: 11, scope: !10147)
!10180 = !DILocation(line: 73, column: 10, scope: !10147)
!10181 = !DILocation(line: 73, column: 3, scope: !10147)
!10182 = !DILocation(line: 74, column: 1, scope: !10147)
!10183 = distinct !DISubprogram(name: "strmode", scope: !10184, file: !10184, line: 96, type: !10185, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !295)
!10184 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!10185 = !DISubroutineType(types: !10186)
!10186 = !{null, !136, !7}
!10187 = !DILocalVariable(name: "mode", arg: 1, scope: !10183, file: !10184, line: 96, type: !136)
!10188 = !DILocation(line: 96, column: 17, scope: !10183)
!10189 = !DILocalVariable(name: "str", arg: 2, scope: !10183, file: !10184, line: 96, type: !7)
!10190 = !DILocation(line: 96, column: 29, scope: !10183)
!10191 = !DILocation(line: 98, column: 22, scope: !10183)
!10192 = !DILocation(line: 98, column: 12, scope: !10183)
!10193 = !DILocation(line: 98, column: 3, scope: !10183)
!10194 = !DILocation(line: 98, column: 10, scope: !10183)
!10195 = !DILocation(line: 99, column: 12, scope: !10183)
!10196 = !DILocation(line: 99, column: 17, scope: !10183)
!10197 = !DILocation(line: 99, column: 3, scope: !10183)
!10198 = !DILocation(line: 99, column: 10, scope: !10183)
!10199 = !DILocation(line: 100, column: 12, scope: !10183)
!10200 = !DILocation(line: 100, column: 17, scope: !10183)
!10201 = !DILocation(line: 100, column: 3, scope: !10183)
!10202 = !DILocation(line: 100, column: 10, scope: !10183)
!10203 = !DILocation(line: 101, column: 13, scope: !10183)
!10204 = !DILocation(line: 101, column: 18, scope: !10183)
!10205 = !DILocation(line: 102, column: 16, scope: !10183)
!10206 = !DILocation(line: 102, column: 21, scope: !10183)
!10207 = !DILocation(line: 103, column: 16, scope: !10183)
!10208 = !DILocation(line: 103, column: 21, scope: !10183)
!10209 = !DILocation(line: 101, column: 12, scope: !10183)
!10210 = !DILocation(line: 101, column: 3, scope: !10183)
!10211 = !DILocation(line: 101, column: 10, scope: !10183)
!10212 = !DILocation(line: 104, column: 12, scope: !10183)
!10213 = !DILocation(line: 104, column: 17, scope: !10183)
!10214 = !DILocation(line: 104, column: 3, scope: !10183)
!10215 = !DILocation(line: 104, column: 10, scope: !10183)
!10216 = !DILocation(line: 105, column: 12, scope: !10183)
!10217 = !DILocation(line: 105, column: 17, scope: !10183)
!10218 = !DILocation(line: 105, column: 3, scope: !10183)
!10219 = !DILocation(line: 105, column: 10, scope: !10183)
!10220 = !DILocation(line: 106, column: 13, scope: !10183)
!10221 = !DILocation(line: 106, column: 18, scope: !10183)
!10222 = !DILocation(line: 107, column: 16, scope: !10183)
!10223 = !DILocation(line: 107, column: 21, scope: !10183)
!10224 = !DILocation(line: 108, column: 16, scope: !10183)
!10225 = !DILocation(line: 108, column: 21, scope: !10183)
!10226 = !DILocation(line: 106, column: 12, scope: !10183)
!10227 = !DILocation(line: 106, column: 3, scope: !10183)
!10228 = !DILocation(line: 106, column: 10, scope: !10183)
!10229 = !DILocation(line: 109, column: 12, scope: !10183)
!10230 = !DILocation(line: 109, column: 17, scope: !10183)
!10231 = !DILocation(line: 109, column: 3, scope: !10183)
!10232 = !DILocation(line: 109, column: 10, scope: !10183)
!10233 = !DILocation(line: 110, column: 12, scope: !10183)
!10234 = !DILocation(line: 110, column: 17, scope: !10183)
!10235 = !DILocation(line: 110, column: 3, scope: !10183)
!10236 = !DILocation(line: 110, column: 10, scope: !10183)
!10237 = !DILocation(line: 111, column: 13, scope: !10183)
!10238 = !DILocation(line: 111, column: 18, scope: !10183)
!10239 = !DILocation(line: 112, column: 16, scope: !10183)
!10240 = !DILocation(line: 112, column: 21, scope: !10183)
!10241 = !DILocation(line: 113, column: 16, scope: !10183)
!10242 = !DILocation(line: 113, column: 21, scope: !10183)
!10243 = !DILocation(line: 111, column: 12, scope: !10183)
!10244 = !DILocation(line: 111, column: 3, scope: !10183)
!10245 = !DILocation(line: 111, column: 10, scope: !10183)
!10246 = !DILocation(line: 114, column: 3, scope: !10183)
!10247 = !DILocation(line: 114, column: 11, scope: !10183)
!10248 = !DILocation(line: 115, column: 3, scope: !10183)
!10249 = !DILocation(line: 115, column: 11, scope: !10183)
!10250 = !DILocation(line: 116, column: 1, scope: !10183)
!10251 = distinct !DISubprogram(name: "ftypelet", scope: !10184, file: !10184, line: 54, type: !10252, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1305, retainedNodes: !295)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{!8, !136}
!10254 = !DILocalVariable(name: "bits", arg: 1, scope: !10251, file: !10184, line: 54, type: !136)
!10255 = !DILocation(line: 54, column: 18, scope: !10251)
!10256 = !DILocation(line: 57, column: 7, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 57, column: 7)
!10258 = !DILocation(line: 57, column: 7, scope: !10251)
!10259 = !DILocation(line: 58, column: 5, scope: !10257)
!10260 = !DILocation(line: 59, column: 7, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 59, column: 7)
!10262 = !DILocation(line: 59, column: 7, scope: !10251)
!10263 = !DILocation(line: 60, column: 5, scope: !10261)
!10264 = !DILocation(line: 63, column: 7, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 63, column: 7)
!10266 = !DILocation(line: 63, column: 7, scope: !10251)
!10267 = !DILocation(line: 64, column: 5, scope: !10265)
!10268 = !DILocation(line: 65, column: 7, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 65, column: 7)
!10270 = !DILocation(line: 65, column: 7, scope: !10251)
!10271 = !DILocation(line: 66, column: 5, scope: !10269)
!10272 = !DILocation(line: 67, column: 7, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 67, column: 7)
!10274 = !DILocation(line: 67, column: 7, scope: !10251)
!10275 = !DILocation(line: 68, column: 5, scope: !10273)
!10276 = !DILocation(line: 69, column: 7, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 69, column: 7)
!10278 = !DILocation(line: 69, column: 7, scope: !10251)
!10279 = !DILocation(line: 70, column: 5, scope: !10277)
!10280 = !DILocation(line: 73, column: 7, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10251, file: !10184, line: 73, column: 7)
!10282 = !DILocation(line: 73, column: 7, scope: !10251)
!10283 = !DILocation(line: 74, column: 5, scope: !10281)
!10284 = !DILocation(line: 90, column: 3, scope: !10251)
!10285 = !DILocation(line: 91, column: 1, scope: !10251)
!10286 = distinct !DISubprogram(name: "filemodestring", scope: !10184, file: !10184, line: 166, type: !10287, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !295)
!10287 = !DISubroutineType(types: !10288)
!10288 = !{null, !10289, !7}
!10289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10290, size: 64)
!10290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10291)
!10291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !10292)
!10292 = !{!10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10309, !10310, !10311}
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10291, file: !471, line: 48, baseType: !460, size: 64)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10291, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10291, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10291, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10291, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10291, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10291, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10291, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10291, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10291, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10291, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10291, file: !471, line: 91, baseType: !10305, size: 128, offset: 576)
!10305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !10306)
!10306 = !{!10307, !10308}
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10305, file: !373, line: 122, baseType: !376, size: 64)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10305, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10291, file: !471, line: 92, baseType: !10305, size: 128, offset: 704)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10291, file: !471, line: 93, baseType: !10305, size: 128, offset: 832)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10291, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!10312 = !DILocalVariable(name: "statp", arg: 1, scope: !10286, file: !10184, line: 166, type: !10289)
!10313 = !DILocation(line: 166, column: 36, scope: !10286)
!10314 = !DILocalVariable(name: "str", arg: 2, scope: !10286, file: !10184, line: 166, type: !7)
!10315 = !DILocation(line: 166, column: 49, scope: !10286)
!10316 = !DILocation(line: 168, column: 12, scope: !10286)
!10317 = !DILocation(line: 168, column: 19, scope: !10286)
!10318 = !DILocation(line: 168, column: 28, scope: !10286)
!10319 = !DILocation(line: 168, column: 3, scope: !10286)
!10320 = !DILocation(line: 170, column: 7, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10286, file: !10184, line: 170, column: 7)
!10322 = !DILocation(line: 170, column: 7, scope: !10286)
!10323 = !DILocation(line: 171, column: 5, scope: !10321)
!10324 = !DILocation(line: 171, column: 12, scope: !10321)
!10325 = !DILocation(line: 174, column: 12, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !10184, line: 174, column: 12)
!10327 = distinct !DILexicalBlock(scope: !10321, file: !10184, line: 172, column: 12)
!10328 = !DILocation(line: 174, column: 12, scope: !10327)
!10329 = !DILocation(line: 175, column: 5, scope: !10326)
!10330 = !DILocation(line: 175, column: 12, scope: !10326)
!10331 = !DILocation(line: 176, column: 12, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !10184, line: 176, column: 12)
!10333 = !DILocation(line: 176, column: 12, scope: !10326)
!10334 = !DILocation(line: 177, column: 5, scope: !10332)
!10335 = !DILocation(line: 177, column: 12, scope: !10332)
!10336 = !DILocation(line: 180, column: 1, scope: !10286)
!10337 = distinct !DISubprogram(name: "file_name_concat", scope: !10338, file: !10338, line: 35, type: !10339, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1308, retainedNodes: !295)
!10338 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!7, !180, !180, !206}
!10341 = !DILocalVariable(name: "dir", arg: 1, scope: !10337, file: !10338, line: 35, type: !180)
!10342 = !DILocation(line: 35, column: 31, scope: !10337)
!10343 = !DILocalVariable(name: "base", arg: 2, scope: !10337, file: !10338, line: 35, type: !180)
!10344 = !DILocation(line: 35, column: 48, scope: !10337)
!10345 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10337, file: !10338, line: 35, type: !206)
!10346 = !DILocation(line: 35, column: 61, scope: !10337)
!10347 = !DILocalVariable(name: "p", scope: !10337, file: !10338, line: 37, type: !7)
!10348 = !DILocation(line: 37, column: 9, scope: !10337)
!10349 = !DILocation(line: 37, column: 32, scope: !10337)
!10350 = !DILocation(line: 37, column: 37, scope: !10337)
!10351 = !DILocation(line: 37, column: 43, scope: !10337)
!10352 = !DILocation(line: 37, column: 13, scope: !10337)
!10353 = !DILocation(line: 38, column: 7, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10337, file: !10338, line: 38, column: 7)
!10355 = !DILocation(line: 38, column: 9, scope: !10354)
!10356 = !DILocation(line: 38, column: 7, scope: !10337)
!10357 = !DILocation(line: 39, column: 5, scope: !10354)
!10358 = !DILocation(line: 40, column: 10, scope: !10337)
!10359 = !DILocation(line: 40, column: 3, scope: !10337)
!10360 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10361, file: !10361, line: 47, type: !10339, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1311, retainedNodes: !295)
!10361 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10362 = !DILocalVariable(name: "dir", arg: 1, scope: !10360, file: !10361, line: 47, type: !180)
!10363 = !DILocation(line: 47, column: 32, scope: !10360)
!10364 = !DILocalVariable(name: "base", arg: 2, scope: !10360, file: !10361, line: 47, type: !180)
!10365 = !DILocation(line: 47, column: 49, scope: !10360)
!10366 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10360, file: !10361, line: 47, type: !206)
!10367 = !DILocation(line: 47, column: 62, scope: !10360)
!10368 = !DILocalVariable(name: "dirbase", scope: !10360, file: !10361, line: 49, type: !180)
!10369 = !DILocation(line: 49, column: 15, scope: !10360)
!10370 = !DILocation(line: 49, column: 41, scope: !10360)
!10371 = !DILocation(line: 49, column: 25, scope: !10360)
!10372 = !DILocalVariable(name: "dirbaselen", scope: !10360, file: !10361, line: 50, type: !52)
!10373 = !DILocation(line: 50, column: 10, scope: !10360)
!10374 = !DILocation(line: 50, column: 33, scope: !10360)
!10375 = !DILocation(line: 50, column: 23, scope: !10360)
!10376 = !DILocalVariable(name: "dirlen", scope: !10360, file: !10361, line: 51, type: !52)
!10377 = !DILocation(line: 51, column: 10, scope: !10360)
!10378 = !DILocation(line: 51, column: 19, scope: !10360)
!10379 = !DILocation(line: 51, column: 29, scope: !10360)
!10380 = !DILocation(line: 51, column: 27, scope: !10360)
!10381 = !DILocation(line: 51, column: 35, scope: !10360)
!10382 = !DILocation(line: 51, column: 33, scope: !10360)
!10383 = !DILocalVariable(name: "baselen", scope: !10360, file: !10361, line: 52, type: !52)
!10384 = !DILocation(line: 52, column: 10, scope: !10360)
!10385 = !DILocation(line: 52, column: 28, scope: !10360)
!10386 = !DILocation(line: 52, column: 20, scope: !10360)
!10387 = !DILocalVariable(name: "sep", scope: !10360, file: !10361, line: 53, type: !8)
!10388 = !DILocation(line: 53, column: 8, scope: !10360)
!10389 = !DILocation(line: 54, column: 7, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10360, file: !10361, line: 54, column: 7)
!10391 = !DILocation(line: 54, column: 7, scope: !10360)
!10392 = !DILocation(line: 57, column: 13, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !10361, line: 57, column: 11)
!10394 = distinct !DILexicalBlock(scope: !10390, file: !10361, line: 55, column: 5)
!10395 = !DILocation(line: 57, column: 39, scope: !10393)
!10396 = !DILocation(line: 57, column: 44, scope: !10393)
!10397 = !DILocation(line: 57, column: 11, scope: !10394)
!10398 = !DILocation(line: 58, column: 13, scope: !10393)
!10399 = !DILocation(line: 58, column: 9, scope: !10393)
!10400 = !DILocation(line: 59, column: 5, scope: !10394)
!10401 = !DILocation(line: 60, column: 12, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10390, file: !10361, line: 60, column: 12)
!10403 = !DILocation(line: 60, column: 12, scope: !10390)
!10404 = !DILocation(line: 67, column: 11, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10402, file: !10361, line: 61, column: 5)
!10406 = !DILocation(line: 68, column: 5, scope: !10405)
!10407 = !DILocalVariable(name: "p_concat", scope: !10360, file: !10361, line: 70, type: !7)
!10408 = !DILocation(line: 70, column: 9, scope: !10360)
!10409 = !DILocation(line: 70, column: 28, scope: !10360)
!10410 = !DILocation(line: 70, column: 38, scope: !10360)
!10411 = !DILocation(line: 70, column: 42, scope: !10360)
!10412 = !DILocation(line: 70, column: 37, scope: !10360)
!10413 = !DILocation(line: 70, column: 35, scope: !10360)
!10414 = !DILocation(line: 70, column: 54, scope: !10360)
!10415 = !DILocation(line: 70, column: 52, scope: !10360)
!10416 = !DILocation(line: 70, column: 62, scope: !10360)
!10417 = !DILocation(line: 70, column: 20, scope: !10360)
!10418 = !DILocalVariable(name: "p", scope: !10360, file: !10361, line: 71, type: !7)
!10419 = !DILocation(line: 71, column: 9, scope: !10360)
!10420 = !DILocation(line: 73, column: 7, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10360, file: !10361, line: 73, column: 7)
!10422 = !DILocation(line: 73, column: 16, scope: !10421)
!10423 = !DILocation(line: 73, column: 7, scope: !10360)
!10424 = !DILocation(line: 74, column: 5, scope: !10421)
!10425 = !DILocation(line: 76, column: 16, scope: !10360)
!10426 = !DILocation(line: 76, column: 26, scope: !10360)
!10427 = !DILocation(line: 76, column: 31, scope: !10360)
!10428 = !DILocation(line: 76, column: 7, scope: !10360)
!10429 = !DILocation(line: 76, column: 5, scope: !10360)
!10430 = !DILocation(line: 77, column: 8, scope: !10360)
!10431 = !DILocation(line: 77, column: 4, scope: !10360)
!10432 = !DILocation(line: 77, column: 6, scope: !10360)
!10433 = !DILocation(line: 78, column: 8, scope: !10360)
!10434 = !DILocation(line: 78, column: 12, scope: !10360)
!10435 = !DILocation(line: 78, column: 5, scope: !10360)
!10436 = !DILocation(line: 80, column: 7, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10360, file: !10361, line: 80, column: 7)
!10438 = !DILocation(line: 80, column: 7, scope: !10360)
!10439 = !DILocation(line: 81, column: 23, scope: !10437)
!10440 = !DILocation(line: 81, column: 6, scope: !10437)
!10441 = !DILocation(line: 81, column: 21, scope: !10437)
!10442 = !DILocation(line: 81, column: 5, scope: !10437)
!10443 = !DILocation(line: 83, column: 16, scope: !10360)
!10444 = !DILocation(line: 83, column: 19, scope: !10360)
!10445 = !DILocation(line: 83, column: 25, scope: !10360)
!10446 = !DILocation(line: 83, column: 7, scope: !10360)
!10447 = !DILocation(line: 83, column: 5, scope: !10360)
!10448 = !DILocation(line: 84, column: 4, scope: !10360)
!10449 = !DILocation(line: 84, column: 6, scope: !10360)
!10450 = !DILocation(line: 86, column: 10, scope: !10360)
!10451 = !DILocation(line: 86, column: 3, scope: !10360)
!10452 = !DILocation(line: 87, column: 1, scope: !10360)
!10453 = distinct !DISubprogram(name: "full_read", scope: !1318, file: !1318, line: 58, type: !10454, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1314, retainedNodes: !295)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{!52, !5, !47, !52}
!10456 = !DILocalVariable(name: "fd", arg: 1, scope: !10453, file: !1318, line: 58, type: !5)
!10457 = !DILocation(line: 58, column: 14, scope: !10453)
!10458 = !DILocalVariable(name: "buf", arg: 2, scope: !10453, file: !1318, line: 58, type: !47)
!10459 = !DILocation(line: 58, column: 30, scope: !10453)
!10460 = !DILocalVariable(name: "count", arg: 3, scope: !10453, file: !1318, line: 58, type: !52)
!10461 = !DILocation(line: 58, column: 42, scope: !10453)
!10462 = !DILocalVariable(name: "total", scope: !10453, file: !1318, line: 60, type: !52)
!10463 = !DILocation(line: 60, column: 10, scope: !10453)
!10464 = !DILocalVariable(name: "ptr", scope: !10453, file: !1318, line: 61, type: !7)
!10465 = !DILocation(line: 61, column: 15, scope: !10453)
!10466 = !DILocation(line: 61, column: 36, scope: !10453)
!10467 = !DILocation(line: 63, column: 3, scope: !10453)
!10468 = !DILocation(line: 63, column: 10, scope: !10453)
!10469 = !DILocation(line: 63, column: 16, scope: !10453)
!10470 = !DILocalVariable(name: "n_rw", scope: !10471, file: !1318, line: 65, type: !52)
!10471 = distinct !DILexicalBlock(scope: !10453, file: !1318, line: 64, column: 5)
!10472 = !DILocation(line: 65, column: 14, scope: !10471)
!10473 = !DILocation(line: 65, column: 30, scope: !10471)
!10474 = !DILocation(line: 65, column: 34, scope: !10471)
!10475 = !DILocation(line: 65, column: 39, scope: !10471)
!10476 = !DILocation(line: 65, column: 21, scope: !10471)
!10477 = !DILocation(line: 66, column: 11, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10471, file: !1318, line: 66, column: 11)
!10479 = !DILocation(line: 66, column: 16, scope: !10478)
!10480 = !DILocation(line: 66, column: 11, scope: !10471)
!10481 = !DILocation(line: 67, column: 9, scope: !10478)
!10482 = !DILocation(line: 68, column: 11, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10471, file: !1318, line: 68, column: 11)
!10484 = !DILocation(line: 68, column: 16, scope: !10483)
!10485 = !DILocation(line: 68, column: 11, scope: !10471)
!10486 = !DILocation(line: 70, column: 11, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10483, file: !1318, line: 69, column: 9)
!10488 = !DILocation(line: 70, column: 17, scope: !10487)
!10489 = !DILocation(line: 71, column: 11, scope: !10487)
!10490 = !DILocation(line: 73, column: 16, scope: !10471)
!10491 = !DILocation(line: 73, column: 13, scope: !10471)
!10492 = !DILocation(line: 74, column: 14, scope: !10471)
!10493 = !DILocation(line: 74, column: 11, scope: !10471)
!10494 = !DILocation(line: 75, column: 16, scope: !10471)
!10495 = !DILocation(line: 75, column: 13, scope: !10471)
!10496 = distinct !{!10496, !10467, !10497}
!10497 = !DILocation(line: 76, column: 5, scope: !10453)
!10498 = !DILocation(line: 78, column: 10, scope: !10453)
!10499 = !DILocation(line: 78, column: 3, scope: !10453)
!10500 = distinct !DISubprogram(name: "full_write", scope: !10501, file: !10501, line: 58, type: !10502, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1317, retainedNodes: !295)
!10501 = !DIFile(filename: "lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!52, !5, !685, !52}
!10504 = !DILocalVariable(name: "fd", arg: 1, scope: !10500, file: !10501, line: 58, type: !5)
!10505 = !DILocation(line: 58, column: 14, scope: !10500)
!10506 = !DILocalVariable(name: "buf", arg: 2, scope: !10500, file: !10501, line: 58, type: !685)
!10507 = !DILocation(line: 58, column: 30, scope: !10500)
!10508 = !DILocalVariable(name: "count", arg: 3, scope: !10500, file: !10501, line: 58, type: !52)
!10509 = !DILocation(line: 58, column: 42, scope: !10500)
!10510 = !DILocalVariable(name: "total", scope: !10500, file: !10501, line: 60, type: !52)
!10511 = !DILocation(line: 60, column: 10, scope: !10500)
!10512 = !DILocalVariable(name: "ptr", scope: !10500, file: !10501, line: 61, type: !180)
!10513 = !DILocation(line: 61, column: 15, scope: !10500)
!10514 = !DILocation(line: 61, column: 36, scope: !10500)
!10515 = !DILocation(line: 63, column: 3, scope: !10500)
!10516 = !DILocation(line: 63, column: 10, scope: !10500)
!10517 = !DILocation(line: 63, column: 16, scope: !10500)
!10518 = !DILocalVariable(name: "n_rw", scope: !10519, file: !10501, line: 65, type: !52)
!10519 = distinct !DILexicalBlock(scope: !10500, file: !10501, line: 64, column: 5)
!10520 = !DILocation(line: 65, column: 14, scope: !10519)
!10521 = !DILocation(line: 65, column: 30, scope: !10519)
!10522 = !DILocation(line: 65, column: 34, scope: !10519)
!10523 = !DILocation(line: 65, column: 39, scope: !10519)
!10524 = !DILocation(line: 65, column: 21, scope: !10519)
!10525 = !DILocation(line: 66, column: 11, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !10501, line: 66, column: 11)
!10527 = !DILocation(line: 66, column: 16, scope: !10526)
!10528 = !DILocation(line: 66, column: 11, scope: !10519)
!10529 = !DILocation(line: 67, column: 9, scope: !10526)
!10530 = !DILocation(line: 68, column: 11, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10519, file: !10501, line: 68, column: 11)
!10532 = !DILocation(line: 68, column: 16, scope: !10531)
!10533 = !DILocation(line: 68, column: 11, scope: !10519)
!10534 = !DILocation(line: 70, column: 11, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10531, file: !10501, line: 69, column: 9)
!10536 = !DILocation(line: 70, column: 17, scope: !10535)
!10537 = !DILocation(line: 71, column: 11, scope: !10535)
!10538 = !DILocation(line: 73, column: 16, scope: !10519)
!10539 = !DILocation(line: 73, column: 13, scope: !10519)
!10540 = !DILocation(line: 74, column: 14, scope: !10519)
!10541 = !DILocation(line: 74, column: 11, scope: !10519)
!10542 = !DILocation(line: 75, column: 16, scope: !10519)
!10543 = !DILocation(line: 75, column: 13, scope: !10519)
!10544 = distinct !{!10544, !10515, !10545}
!10545 = !DILocation(line: 76, column: 5, scope: !10500)
!10546 = !DILocation(line: 78, column: 10, scope: !10500)
!10547 = !DILocation(line: 78, column: 3, scope: !10500)
!10548 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !810, file: !810, line: 150, type: !10549, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{!52, !10551}
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!10552 = !DILocalVariable(name: "table", arg: 1, scope: !10548, file: !810, line: 150, type: !10551)
!10553 = !DILocation(line: 150, column: 39, scope: !10548)
!10554 = !DILocation(line: 152, column: 10, scope: !10548)
!10555 = !DILocation(line: 152, column: 17, scope: !10548)
!10556 = !DILocation(line: 152, column: 3, scope: !10548)
!10557 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !810, file: !810, line: 158, type: !10549, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10558 = !DILocalVariable(name: "table", arg: 1, scope: !10557, file: !810, line: 158, type: !10551)
!10559 = !DILocation(line: 158, column: 44, scope: !10557)
!10560 = !DILocation(line: 160, column: 10, scope: !10557)
!10561 = !DILocation(line: 160, column: 17, scope: !10557)
!10562 = !DILocation(line: 160, column: 3, scope: !10557)
!10563 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !810, file: !810, line: 166, type: !10549, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10564 = !DILocalVariable(name: "table", arg: 1, scope: !10563, file: !810, line: 166, type: !10551)
!10565 = !DILocation(line: 166, column: 39, scope: !10563)
!10566 = !DILocation(line: 168, column: 10, scope: !10563)
!10567 = !DILocation(line: 168, column: 17, scope: !10563)
!10568 = !DILocation(line: 168, column: 3, scope: !10563)
!10569 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !810, file: !810, line: 174, type: !10549, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10570 = !DILocalVariable(name: "table", arg: 1, scope: !10569, file: !810, line: 174, type: !10551)
!10571 = !DILocation(line: 174, column: 47, scope: !10569)
!10572 = !DILocalVariable(name: "bucket", scope: !10569, file: !810, line: 176, type: !819)
!10573 = !DILocation(line: 176, column: 28, scope: !10569)
!10574 = !DILocalVariable(name: "max_bucket_length", scope: !10569, file: !810, line: 177, type: !52)
!10575 = !DILocation(line: 177, column: 10, scope: !10569)
!10576 = !DILocation(line: 179, column: 17, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10569, file: !810, line: 179, column: 3)
!10578 = !DILocation(line: 179, column: 24, scope: !10577)
!10579 = !DILocation(line: 179, column: 15, scope: !10577)
!10580 = !DILocation(line: 179, column: 8, scope: !10577)
!10581 = !DILocation(line: 179, column: 32, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10577, file: !810, line: 179, column: 3)
!10583 = !DILocation(line: 179, column: 41, scope: !10582)
!10584 = !DILocation(line: 179, column: 48, scope: !10582)
!10585 = !DILocation(line: 179, column: 39, scope: !10582)
!10586 = !DILocation(line: 179, column: 3, scope: !10577)
!10587 = !DILocation(line: 181, column: 11, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !810, line: 181, column: 11)
!10589 = distinct !DILexicalBlock(scope: !10582, file: !810, line: 180, column: 5)
!10590 = !DILocation(line: 181, column: 19, scope: !10588)
!10591 = !DILocation(line: 181, column: 11, scope: !10589)
!10592 = !DILocalVariable(name: "cursor", scope: !10593, file: !810, line: 183, type: !819)
!10593 = distinct !DILexicalBlock(scope: !10588, file: !810, line: 182, column: 9)
!10594 = !DILocation(line: 183, column: 36, scope: !10593)
!10595 = !DILocation(line: 183, column: 45, scope: !10593)
!10596 = !DILocalVariable(name: "bucket_length", scope: !10593, file: !810, line: 184, type: !52)
!10597 = !DILocation(line: 184, column: 18, scope: !10593)
!10598 = !DILocation(line: 186, column: 11, scope: !10593)
!10599 = !DILocation(line: 186, column: 27, scope: !10593)
!10600 = !DILocation(line: 186, column: 35, scope: !10593)
!10601 = !DILocation(line: 186, column: 25, scope: !10593)
!10602 = !DILocation(line: 186, column: 41, scope: !10593)
!10603 = !DILocation(line: 187, column: 26, scope: !10593)
!10604 = distinct !{!10604, !10598, !10603}
!10605 = !DILocation(line: 189, column: 15, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10593, file: !810, line: 189, column: 15)
!10607 = !DILocation(line: 189, column: 31, scope: !10606)
!10608 = !DILocation(line: 189, column: 29, scope: !10606)
!10609 = !DILocation(line: 189, column: 15, scope: !10593)
!10610 = !DILocation(line: 190, column: 33, scope: !10606)
!10611 = !DILocation(line: 190, column: 31, scope: !10606)
!10612 = !DILocation(line: 190, column: 13, scope: !10606)
!10613 = !DILocation(line: 191, column: 9, scope: !10593)
!10614 = !DILocation(line: 192, column: 5, scope: !10589)
!10615 = !DILocation(line: 179, column: 68, scope: !10582)
!10616 = !DILocation(line: 179, column: 3, scope: !10582)
!10617 = distinct !{!10617, !10586, !10618}
!10618 = !DILocation(line: 192, column: 5, scope: !10577)
!10619 = !DILocation(line: 194, column: 10, scope: !10569)
!10620 = !DILocation(line: 194, column: 3, scope: !10569)
!10621 = distinct !DISubprogram(name: "hash_table_ok", scope: !810, file: !810, line: 201, type: !10622, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{!139, !10551}
!10624 = !DILocalVariable(name: "table", arg: 1, scope: !10621, file: !810, line: 201, type: !10551)
!10625 = !DILocation(line: 201, column: 34, scope: !10621)
!10626 = !DILocalVariable(name: "bucket", scope: !10621, file: !810, line: 203, type: !819)
!10627 = !DILocation(line: 203, column: 28, scope: !10621)
!10628 = !DILocalVariable(name: "n_buckets_used", scope: !10621, file: !810, line: 204, type: !52)
!10629 = !DILocation(line: 204, column: 10, scope: !10621)
!10630 = !DILocalVariable(name: "n_entries", scope: !10621, file: !810, line: 205, type: !52)
!10631 = !DILocation(line: 205, column: 10, scope: !10621)
!10632 = !DILocation(line: 207, column: 17, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10621, file: !810, line: 207, column: 3)
!10634 = !DILocation(line: 207, column: 24, scope: !10633)
!10635 = !DILocation(line: 207, column: 15, scope: !10633)
!10636 = !DILocation(line: 207, column: 8, scope: !10633)
!10637 = !DILocation(line: 207, column: 32, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10633, file: !810, line: 207, column: 3)
!10639 = !DILocation(line: 207, column: 41, scope: !10638)
!10640 = !DILocation(line: 207, column: 48, scope: !10638)
!10641 = !DILocation(line: 207, column: 39, scope: !10638)
!10642 = !DILocation(line: 207, column: 3, scope: !10633)
!10643 = !DILocation(line: 209, column: 11, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !810, line: 209, column: 11)
!10645 = distinct !DILexicalBlock(scope: !10638, file: !810, line: 208, column: 5)
!10646 = !DILocation(line: 209, column: 19, scope: !10644)
!10647 = !DILocation(line: 209, column: 11, scope: !10645)
!10648 = !DILocalVariable(name: "cursor", scope: !10649, file: !810, line: 211, type: !819)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !810, line: 210, column: 9)
!10650 = !DILocation(line: 211, column: 36, scope: !10649)
!10651 = !DILocation(line: 211, column: 45, scope: !10649)
!10652 = !DILocation(line: 214, column: 25, scope: !10649)
!10653 = !DILocation(line: 215, column: 20, scope: !10649)
!10654 = !DILocation(line: 218, column: 11, scope: !10649)
!10655 = !DILocation(line: 218, column: 27, scope: !10649)
!10656 = !DILocation(line: 218, column: 35, scope: !10649)
!10657 = !DILocation(line: 218, column: 25, scope: !10649)
!10658 = !DILocation(line: 218, column: 41, scope: !10649)
!10659 = !DILocation(line: 219, column: 22, scope: !10649)
!10660 = distinct !{!10660, !10654, !10659}
!10661 = !DILocation(line: 220, column: 9, scope: !10649)
!10662 = !DILocation(line: 221, column: 5, scope: !10645)
!10663 = !DILocation(line: 207, column: 68, scope: !10638)
!10664 = !DILocation(line: 207, column: 3, scope: !10638)
!10665 = distinct !{!10665, !10642, !10666}
!10666 = !DILocation(line: 221, column: 5, scope: !10633)
!10667 = !DILocation(line: 223, column: 7, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10621, file: !810, line: 223, column: 7)
!10669 = !DILocation(line: 223, column: 25, scope: !10668)
!10670 = !DILocation(line: 223, column: 32, scope: !10668)
!10671 = !DILocation(line: 223, column: 22, scope: !10668)
!10672 = !DILocation(line: 223, column: 47, scope: !10668)
!10673 = !DILocation(line: 223, column: 50, scope: !10668)
!10674 = !DILocation(line: 223, column: 63, scope: !10668)
!10675 = !DILocation(line: 223, column: 70, scope: !10668)
!10676 = !DILocation(line: 223, column: 60, scope: !10668)
!10677 = !DILocation(line: 223, column: 7, scope: !10621)
!10678 = !DILocation(line: 224, column: 5, scope: !10668)
!10679 = !DILocation(line: 226, column: 3, scope: !10621)
!10680 = !DILocation(line: 227, column: 1, scope: !10621)
!10681 = distinct !DISubprogram(name: "hash_print_statistics", scope: !810, file: !810, line: 230, type: !10682, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{null, !10551, !10684}
!10684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10685, size: 64)
!10685 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !10686)
!10686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !10687)
!10687 = !{!10688, !10689, !10690, !10691, !10692, !10693, !10694, !10695, !10696, !10697, !10698, !10699, !10700, !10708, !10709, !10710, !10711, !10712, !10713, !10714, !10715, !10716, !10717, !10718, !10719, !10720, !10721, !10722, !10723}
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10686, file: !2, line: 242, baseType: !5, size: 32)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10686, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10686, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10686, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10686, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10686, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10686, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10686, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10686, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10686, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10686, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!10699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10686, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10686, file: !2, line: 260, baseType: !10701, size: 64, offset: 768)
!10701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10702, size: 64)
!10702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !10703)
!10703 = !{!10704, !10705, !10707}
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !10702, file: !2, line: 157, baseType: !10701, size: 64)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !10702, file: !2, line: 158, baseType: !10706, size: 64, offset: 64)
!10706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10686, size: 64)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !10702, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10686, file: !2, line: 262, baseType: !10706, size: 64, offset: 832)
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10686, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10686, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10686, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10686, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!10713 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10686, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10686, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10686, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10686, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !10686, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !10686, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !10686, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !10686, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10686, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10686, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10686, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!10724 = !DILocalVariable(name: "table", arg: 1, scope: !10681, file: !810, line: 230, type: !10551)
!10725 = !DILocation(line: 230, column: 42, scope: !10681)
!10726 = !DILocalVariable(name: "stream", arg: 2, scope: !10681, file: !810, line: 230, type: !10684)
!10727 = !DILocation(line: 230, column: 55, scope: !10681)
!10728 = !DILocalVariable(name: "n_entries", scope: !10681, file: !810, line: 232, type: !52)
!10729 = !DILocation(line: 232, column: 10, scope: !10681)
!10730 = !DILocation(line: 232, column: 42, scope: !10681)
!10731 = !DILocation(line: 232, column: 22, scope: !10681)
!10732 = !DILocalVariable(name: "n_buckets", scope: !10681, file: !810, line: 233, type: !52)
!10733 = !DILocation(line: 233, column: 10, scope: !10681)
!10734 = !DILocation(line: 233, column: 42, scope: !10681)
!10735 = !DILocation(line: 233, column: 22, scope: !10681)
!10736 = !DILocalVariable(name: "n_buckets_used", scope: !10681, file: !810, line: 234, type: !52)
!10737 = !DILocation(line: 234, column: 10, scope: !10681)
!10738 = !DILocation(line: 234, column: 52, scope: !10681)
!10739 = !DILocation(line: 234, column: 27, scope: !10681)
!10740 = !DILocalVariable(name: "max_bucket_length", scope: !10681, file: !810, line: 235, type: !52)
!10741 = !DILocation(line: 235, column: 10, scope: !10681)
!10742 = !DILocation(line: 235, column: 58, scope: !10681)
!10743 = !DILocation(line: 235, column: 30, scope: !10681)
!10744 = !DILocation(line: 237, column: 12, scope: !10681)
!10745 = !DILocation(line: 237, column: 68, scope: !10681)
!10746 = !DILocation(line: 237, column: 3, scope: !10681)
!10747 = !DILocation(line: 238, column: 12, scope: !10681)
!10748 = !DILocation(line: 238, column: 68, scope: !10681)
!10749 = !DILocation(line: 238, column: 3, scope: !10681)
!10750 = !DILocation(line: 239, column: 12, scope: !10681)
!10751 = !DILocation(line: 240, column: 32, scope: !10681)
!10752 = !DILocation(line: 241, column: 21, scope: !10681)
!10753 = !DILocation(line: 241, column: 19, scope: !10681)
!10754 = !DILocation(line: 241, column: 39, scope: !10681)
!10755 = !DILocation(line: 241, column: 37, scope: !10681)
!10756 = !DILocation(line: 239, column: 3, scope: !10681)
!10757 = !DILocation(line: 242, column: 12, scope: !10681)
!10758 = !DILocation(line: 243, column: 32, scope: !10681)
!10759 = !DILocation(line: 242, column: 3, scope: !10681)
!10760 = !DILocation(line: 244, column: 1, scope: !10681)
!10761 = distinct !DISubprogram(name: "hash_lookup", scope: !810, file: !810, line: 261, type: !10762, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10762 = !DISubroutineType(types: !10763)
!10763 = !{!47, !10551, !685}
!10764 = !DILocalVariable(name: "table", arg: 1, scope: !10761, file: !810, line: 261, type: !10551)
!10765 = !DILocation(line: 261, column: 32, scope: !10761)
!10766 = !DILocalVariable(name: "entry", arg: 2, scope: !10761, file: !810, line: 261, type: !685)
!10767 = !DILocation(line: 261, column: 51, scope: !10761)
!10768 = !DILocalVariable(name: "bucket", scope: !10761, file: !810, line: 263, type: !819)
!10769 = !DILocation(line: 263, column: 28, scope: !10761)
!10770 = !DILocation(line: 263, column: 50, scope: !10761)
!10771 = !DILocation(line: 263, column: 57, scope: !10761)
!10772 = !DILocation(line: 263, column: 37, scope: !10761)
!10773 = !DILocalVariable(name: "cursor", scope: !10761, file: !810, line: 264, type: !819)
!10774 = !DILocation(line: 264, column: 28, scope: !10761)
!10775 = !DILocation(line: 266, column: 7, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10761, file: !810, line: 266, column: 7)
!10777 = !DILocation(line: 266, column: 15, scope: !10776)
!10778 = !DILocation(line: 266, column: 20, scope: !10776)
!10779 = !DILocation(line: 266, column: 7, scope: !10761)
!10780 = !DILocation(line: 267, column: 5, scope: !10776)
!10781 = !DILocation(line: 269, column: 17, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10761, file: !810, line: 269, column: 3)
!10783 = !DILocation(line: 269, column: 15, scope: !10782)
!10784 = !DILocation(line: 269, column: 8, scope: !10782)
!10785 = !DILocation(line: 269, column: 25, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10782, file: !810, line: 269, column: 3)
!10787 = !DILocation(line: 269, column: 3, scope: !10782)
!10788 = !DILocation(line: 270, column: 9, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10786, file: !810, line: 270, column: 9)
!10790 = !DILocation(line: 270, column: 18, scope: !10789)
!10791 = !DILocation(line: 270, column: 26, scope: !10789)
!10792 = !DILocation(line: 270, column: 15, scope: !10789)
!10793 = !DILocation(line: 270, column: 31, scope: !10789)
!10794 = !DILocation(line: 270, column: 34, scope: !10789)
!10795 = !DILocation(line: 270, column: 41, scope: !10789)
!10796 = !DILocation(line: 270, column: 53, scope: !10789)
!10797 = !DILocation(line: 270, column: 60, scope: !10789)
!10798 = !DILocation(line: 270, column: 68, scope: !10789)
!10799 = !DILocation(line: 270, column: 9, scope: !10786)
!10800 = !DILocation(line: 271, column: 14, scope: !10789)
!10801 = !DILocation(line: 271, column: 22, scope: !10789)
!10802 = !DILocation(line: 271, column: 7, scope: !10789)
!10803 = !DILocation(line: 270, column: 72, scope: !10789)
!10804 = !DILocation(line: 269, column: 42, scope: !10786)
!10805 = !DILocation(line: 269, column: 50, scope: !10786)
!10806 = !DILocation(line: 269, column: 40, scope: !10786)
!10807 = !DILocation(line: 269, column: 3, scope: !10786)
!10808 = distinct !{!10808, !10787, !10809}
!10809 = !DILocation(line: 271, column: 22, scope: !10782)
!10810 = !DILocation(line: 273, column: 3, scope: !10761)
!10811 = !DILocation(line: 274, column: 1, scope: !10761)
!10812 = distinct !DISubprogram(name: "safe_hasher", scope: !810, file: !810, line: 249, type: !10813, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10813 = !DISubroutineType(types: !10814)
!10814 = !{!813, !10551, !685}
!10815 = !DILocalVariable(name: "table", arg: 1, scope: !10812, file: !810, line: 249, type: !10551)
!10816 = !DILocation(line: 249, column: 32, scope: !10812)
!10817 = !DILocalVariable(name: "key", arg: 2, scope: !10812, file: !810, line: 249, type: !685)
!10818 = !DILocation(line: 249, column: 51, scope: !10812)
!10819 = !DILocalVariable(name: "n", scope: !10812, file: !810, line: 251, type: !52)
!10820 = !DILocation(line: 251, column: 10, scope: !10812)
!10821 = !DILocation(line: 251, column: 14, scope: !10812)
!10822 = !DILocation(line: 251, column: 21, scope: !10812)
!10823 = !DILocation(line: 251, column: 29, scope: !10812)
!10824 = !DILocation(line: 251, column: 34, scope: !10812)
!10825 = !DILocation(line: 251, column: 41, scope: !10812)
!10826 = !DILocation(line: 252, column: 10, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10812, file: !810, line: 252, column: 7)
!10828 = !DILocation(line: 252, column: 14, scope: !10827)
!10829 = !DILocation(line: 252, column: 21, scope: !10827)
!10830 = !DILocation(line: 252, column: 12, scope: !10827)
!10831 = !DILocation(line: 252, column: 7, scope: !10812)
!10832 = !DILocation(line: 253, column: 5, scope: !10827)
!10833 = !DILocation(line: 254, column: 10, scope: !10812)
!10834 = !DILocation(line: 254, column: 17, scope: !10812)
!10835 = !DILocation(line: 254, column: 26, scope: !10812)
!10836 = !DILocation(line: 254, column: 24, scope: !10812)
!10837 = !DILocation(line: 254, column: 3, scope: !10812)
!10838 = distinct !DISubprogram(name: "hash_get_first", scope: !810, file: !810, line: 288, type: !10839, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10839 = !DISubroutineType(types: !10840)
!10840 = !{!47, !10551}
!10841 = !DILocalVariable(name: "table", arg: 1, scope: !10838, file: !810, line: 288, type: !10551)
!10842 = !DILocation(line: 288, column: 35, scope: !10838)
!10843 = !DILocalVariable(name: "bucket", scope: !10838, file: !810, line: 290, type: !819)
!10844 = !DILocation(line: 290, column: 28, scope: !10838)
!10845 = !DILocation(line: 292, column: 7, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10838, file: !810, line: 292, column: 7)
!10847 = !DILocation(line: 292, column: 14, scope: !10846)
!10848 = !DILocation(line: 292, column: 24, scope: !10846)
!10849 = !DILocation(line: 292, column: 7, scope: !10838)
!10850 = !DILocation(line: 293, column: 5, scope: !10846)
!10851 = !DILocation(line: 295, column: 17, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10838, file: !810, line: 295, column: 3)
!10853 = !DILocation(line: 295, column: 24, scope: !10852)
!10854 = !DILocation(line: 295, column: 15, scope: !10852)
!10855 = !DILocation(line: 295, column: 8, scope: !10852)
!10856 = !DILocation(line: 296, column: 12, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !810, line: 296, column: 9)
!10858 = distinct !DILexicalBlock(scope: !10852, file: !810, line: 295, column: 3)
!10859 = !DILocation(line: 296, column: 21, scope: !10857)
!10860 = !DILocation(line: 296, column: 28, scope: !10857)
!10861 = !DILocation(line: 296, column: 19, scope: !10857)
!10862 = !DILocation(line: 296, column: 9, scope: !10858)
!10863 = !DILocation(line: 297, column: 7, scope: !10857)
!10864 = !DILocation(line: 298, column: 14, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10857, file: !810, line: 298, column: 14)
!10866 = !DILocation(line: 298, column: 22, scope: !10865)
!10867 = !DILocation(line: 298, column: 14, scope: !10857)
!10868 = !DILocation(line: 299, column: 14, scope: !10865)
!10869 = !DILocation(line: 299, column: 22, scope: !10865)
!10870 = !DILocation(line: 299, column: 7, scope: !10865)
!10871 = !DILocation(line: 296, column: 40, scope: !10857)
!10872 = !DILocation(line: 295, column: 40, scope: !10858)
!10873 = !DILocation(line: 295, column: 3, scope: !10858)
!10874 = distinct !{!10874, !10875, !10876}
!10875 = !DILocation(line: 295, column: 3, scope: !10852)
!10876 = !DILocation(line: 299, column: 22, scope: !10852)
!10877 = !DILocation(line: 300, column: 1, scope: !10838)
!10878 = distinct !DISubprogram(name: "hash_get_next", scope: !810, file: !810, line: 307, type: !10762, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10879 = !DILocalVariable(name: "table", arg: 1, scope: !10878, file: !810, line: 307, type: !10551)
!10880 = !DILocation(line: 307, column: 34, scope: !10878)
!10881 = !DILocalVariable(name: "entry", arg: 2, scope: !10878, file: !810, line: 307, type: !685)
!10882 = !DILocation(line: 307, column: 53, scope: !10878)
!10883 = !DILocalVariable(name: "bucket", scope: !10878, file: !810, line: 309, type: !819)
!10884 = !DILocation(line: 309, column: 28, scope: !10878)
!10885 = !DILocation(line: 309, column: 50, scope: !10878)
!10886 = !DILocation(line: 309, column: 57, scope: !10878)
!10887 = !DILocation(line: 309, column: 37, scope: !10878)
!10888 = !DILocalVariable(name: "cursor", scope: !10878, file: !810, line: 310, type: !819)
!10889 = !DILocation(line: 310, column: 28, scope: !10878)
!10890 = !DILocation(line: 313, column: 12, scope: !10878)
!10891 = !DILocation(line: 313, column: 10, scope: !10878)
!10892 = !DILocation(line: 314, column: 3, scope: !10878)
!10893 = !DILocation(line: 316, column: 11, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !810, line: 316, column: 11)
!10895 = distinct !DILexicalBlock(scope: !10878, file: !810, line: 315, column: 5)
!10896 = !DILocation(line: 316, column: 19, scope: !10894)
!10897 = !DILocation(line: 316, column: 27, scope: !10894)
!10898 = !DILocation(line: 316, column: 24, scope: !10894)
!10899 = !DILocation(line: 316, column: 33, scope: !10894)
!10900 = !DILocation(line: 316, column: 36, scope: !10894)
!10901 = !DILocation(line: 316, column: 44, scope: !10894)
!10902 = !DILocation(line: 316, column: 11, scope: !10895)
!10903 = !DILocation(line: 317, column: 16, scope: !10894)
!10904 = !DILocation(line: 317, column: 24, scope: !10894)
!10905 = !DILocation(line: 317, column: 30, scope: !10894)
!10906 = !DILocation(line: 317, column: 9, scope: !10894)
!10907 = !DILocation(line: 318, column: 16, scope: !10895)
!10908 = !DILocation(line: 318, column: 24, scope: !10895)
!10909 = !DILocation(line: 318, column: 14, scope: !10895)
!10910 = !DILocation(line: 319, column: 5, scope: !10895)
!10911 = !DILocation(line: 320, column: 10, scope: !10878)
!10912 = !DILocation(line: 320, column: 17, scope: !10878)
!10913 = distinct !{!10913, !10892, !10914}
!10914 = !DILocation(line: 320, column: 24, scope: !10878)
!10915 = !DILocation(line: 323, column: 3, scope: !10878)
!10916 = !DILocation(line: 323, column: 10, scope: !10878)
!10917 = !DILocation(line: 323, column: 21, scope: !10878)
!10918 = !DILocation(line: 323, column: 28, scope: !10878)
!10919 = !DILocation(line: 323, column: 19, scope: !10878)
!10920 = !DILocation(line: 324, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10878, file: !810, line: 324, column: 9)
!10922 = !DILocation(line: 324, column: 17, scope: !10921)
!10923 = !DILocation(line: 324, column: 9, scope: !10878)
!10924 = !DILocation(line: 325, column: 14, scope: !10921)
!10925 = !DILocation(line: 325, column: 22, scope: !10921)
!10926 = !DILocation(line: 325, column: 7, scope: !10921)
!10927 = distinct !{!10927, !10915, !10928}
!10928 = !DILocation(line: 325, column: 22, scope: !10878)
!10929 = !DILocation(line: 328, column: 3, scope: !10878)
!10930 = !DILocation(line: 329, column: 1, scope: !10878)
!10931 = distinct !DISubprogram(name: "hash_get_entries", scope: !810, file: !810, line: 336, type: !10932, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!52, !10551, !852, !52}
!10934 = !DILocalVariable(name: "table", arg: 1, scope: !10931, file: !810, line: 336, type: !10551)
!10935 = !DILocation(line: 336, column: 37, scope: !10931)
!10936 = !DILocalVariable(name: "buffer", arg: 2, scope: !10931, file: !810, line: 336, type: !852)
!10937 = !DILocation(line: 336, column: 51, scope: !10931)
!10938 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !10931, file: !810, line: 337, type: !52)
!10939 = !DILocation(line: 337, column: 26, scope: !10931)
!10940 = !DILocalVariable(name: "counter", scope: !10931, file: !810, line: 339, type: !52)
!10941 = !DILocation(line: 339, column: 10, scope: !10931)
!10942 = !DILocalVariable(name: "bucket", scope: !10931, file: !810, line: 340, type: !819)
!10943 = !DILocation(line: 340, column: 28, scope: !10931)
!10944 = !DILocalVariable(name: "cursor", scope: !10931, file: !810, line: 341, type: !819)
!10945 = !DILocation(line: 341, column: 28, scope: !10931)
!10946 = !DILocation(line: 343, column: 17, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10931, file: !810, line: 343, column: 3)
!10948 = !DILocation(line: 343, column: 24, scope: !10947)
!10949 = !DILocation(line: 343, column: 15, scope: !10947)
!10950 = !DILocation(line: 343, column: 8, scope: !10947)
!10951 = !DILocation(line: 343, column: 32, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !810, line: 343, column: 3)
!10953 = !DILocation(line: 343, column: 41, scope: !10952)
!10954 = !DILocation(line: 343, column: 48, scope: !10952)
!10955 = !DILocation(line: 343, column: 39, scope: !10952)
!10956 = !DILocation(line: 343, column: 3, scope: !10947)
!10957 = !DILocation(line: 345, column: 11, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !810, line: 345, column: 11)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !810, line: 344, column: 5)
!10960 = !DILocation(line: 345, column: 19, scope: !10958)
!10961 = !DILocation(line: 345, column: 11, scope: !10959)
!10962 = !DILocation(line: 347, column: 25, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !810, line: 347, column: 11)
!10964 = distinct !DILexicalBlock(scope: !10958, file: !810, line: 346, column: 9)
!10965 = !DILocation(line: 347, column: 23, scope: !10963)
!10966 = !DILocation(line: 347, column: 16, scope: !10963)
!10967 = !DILocation(line: 347, column: 33, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10963, file: !810, line: 347, column: 11)
!10969 = !DILocation(line: 347, column: 11, scope: !10963)
!10970 = !DILocation(line: 349, column: 19, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !810, line: 349, column: 19)
!10972 = distinct !DILexicalBlock(scope: !10968, file: !810, line: 348, column: 13)
!10973 = !DILocation(line: 349, column: 30, scope: !10971)
!10974 = !DILocation(line: 349, column: 27, scope: !10971)
!10975 = !DILocation(line: 349, column: 19, scope: !10972)
!10976 = !DILocation(line: 350, column: 24, scope: !10971)
!10977 = !DILocation(line: 350, column: 17, scope: !10971)
!10978 = !DILocation(line: 351, column: 35, scope: !10972)
!10979 = !DILocation(line: 351, column: 43, scope: !10972)
!10980 = !DILocation(line: 351, column: 15, scope: !10972)
!10981 = !DILocation(line: 351, column: 29, scope: !10972)
!10982 = !DILocation(line: 351, column: 33, scope: !10972)
!10983 = !DILocation(line: 352, column: 13, scope: !10972)
!10984 = !DILocation(line: 347, column: 50, scope: !10968)
!10985 = !DILocation(line: 347, column: 58, scope: !10968)
!10986 = !DILocation(line: 347, column: 48, scope: !10968)
!10987 = !DILocation(line: 347, column: 11, scope: !10968)
!10988 = distinct !{!10988, !10969, !10989}
!10989 = !DILocation(line: 352, column: 13, scope: !10963)
!10990 = !DILocation(line: 353, column: 9, scope: !10964)
!10991 = !DILocation(line: 354, column: 5, scope: !10959)
!10992 = !DILocation(line: 343, column: 68, scope: !10952)
!10993 = !DILocation(line: 343, column: 3, scope: !10952)
!10994 = distinct !{!10994, !10956, !10995}
!10995 = !DILocation(line: 354, column: 5, scope: !10947)
!10996 = !DILocation(line: 356, column: 10, scope: !10931)
!10997 = !DILocation(line: 356, column: 3, scope: !10931)
!10998 = !DILocation(line: 357, column: 1, scope: !10931)
!10999 = distinct !DISubprogram(name: "hash_do_for_each", scope: !810, file: !810, line: 368, type: !11000, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{!52, !10551, !11002, !47}
!11002 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !174, line: 51, baseType: !11003)
!11003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11004, size: 64)
!11004 = !DISubroutineType(types: !11005)
!11005 = !{!139, !47, !47}
!11006 = !DILocalVariable(name: "table", arg: 1, scope: !10999, file: !810, line: 368, type: !10551)
!11007 = !DILocation(line: 368, column: 37, scope: !10999)
!11008 = !DILocalVariable(name: "processor", arg: 2, scope: !10999, file: !810, line: 368, type: !11002)
!11009 = !DILocation(line: 368, column: 59, scope: !10999)
!11010 = !DILocalVariable(name: "processor_data", arg: 3, scope: !10999, file: !810, line: 369, type: !47)
!11011 = !DILocation(line: 369, column: 25, scope: !10999)
!11012 = !DILocalVariable(name: "counter", scope: !10999, file: !810, line: 371, type: !52)
!11013 = !DILocation(line: 371, column: 10, scope: !10999)
!11014 = !DILocalVariable(name: "bucket", scope: !10999, file: !810, line: 372, type: !819)
!11015 = !DILocation(line: 372, column: 28, scope: !10999)
!11016 = !DILocalVariable(name: "cursor", scope: !10999, file: !810, line: 373, type: !819)
!11017 = !DILocation(line: 373, column: 28, scope: !10999)
!11018 = !DILocation(line: 375, column: 17, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10999, file: !810, line: 375, column: 3)
!11020 = !DILocation(line: 375, column: 24, scope: !11019)
!11021 = !DILocation(line: 375, column: 15, scope: !11019)
!11022 = !DILocation(line: 375, column: 8, scope: !11019)
!11023 = !DILocation(line: 375, column: 32, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11019, file: !810, line: 375, column: 3)
!11025 = !DILocation(line: 375, column: 41, scope: !11024)
!11026 = !DILocation(line: 375, column: 48, scope: !11024)
!11027 = !DILocation(line: 375, column: 39, scope: !11024)
!11028 = !DILocation(line: 375, column: 3, scope: !11019)
!11029 = !DILocation(line: 377, column: 11, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !810, line: 377, column: 11)
!11031 = distinct !DILexicalBlock(scope: !11024, file: !810, line: 376, column: 5)
!11032 = !DILocation(line: 377, column: 19, scope: !11030)
!11033 = !DILocation(line: 377, column: 11, scope: !11031)
!11034 = !DILocation(line: 379, column: 25, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !810, line: 379, column: 11)
!11036 = distinct !DILexicalBlock(scope: !11030, file: !810, line: 378, column: 9)
!11037 = !DILocation(line: 379, column: 23, scope: !11035)
!11038 = !DILocation(line: 379, column: 16, scope: !11035)
!11039 = !DILocation(line: 379, column: 33, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !810, line: 379, column: 11)
!11041 = !DILocation(line: 379, column: 11, scope: !11035)
!11042 = !DILocation(line: 381, column: 21, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !810, line: 381, column: 19)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !810, line: 380, column: 13)
!11045 = !DILocation(line: 381, column: 32, scope: !11043)
!11046 = !DILocation(line: 381, column: 40, scope: !11043)
!11047 = !DILocation(line: 381, column: 46, scope: !11043)
!11048 = !DILocation(line: 381, column: 19, scope: !11044)
!11049 = !DILocation(line: 382, column: 24, scope: !11043)
!11050 = !DILocation(line: 382, column: 17, scope: !11043)
!11051 = !DILocation(line: 383, column: 22, scope: !11044)
!11052 = !DILocation(line: 384, column: 13, scope: !11044)
!11053 = !DILocation(line: 379, column: 50, scope: !11040)
!11054 = !DILocation(line: 379, column: 58, scope: !11040)
!11055 = !DILocation(line: 379, column: 48, scope: !11040)
!11056 = !DILocation(line: 379, column: 11, scope: !11040)
!11057 = distinct !{!11057, !11041, !11058}
!11058 = !DILocation(line: 384, column: 13, scope: !11035)
!11059 = !DILocation(line: 385, column: 9, scope: !11036)
!11060 = !DILocation(line: 386, column: 5, scope: !11031)
!11061 = !DILocation(line: 375, column: 68, scope: !11024)
!11062 = !DILocation(line: 375, column: 3, scope: !11024)
!11063 = distinct !{!11063, !11028, !11064}
!11064 = !DILocation(line: 386, column: 5, scope: !11019)
!11065 = !DILocation(line: 388, column: 10, scope: !10999)
!11066 = !DILocation(line: 388, column: 3, scope: !10999)
!11067 = !DILocation(line: 389, column: 1, scope: !10999)
!11068 = distinct !DISubprogram(name: "hash_string", scope: !810, file: !810, line: 428, type: !11069, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{!52, !180, !52}
!11071 = !DILocalVariable(name: "string", arg: 1, scope: !11068, file: !810, line: 428, type: !180)
!11072 = !DILocation(line: 428, column: 26, scope: !11068)
!11073 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11068, file: !810, line: 428, type: !52)
!11074 = !DILocation(line: 428, column: 41, scope: !11068)
!11075 = !DILocalVariable(name: "value", scope: !11068, file: !810, line: 430, type: !52)
!11076 = !DILocation(line: 430, column: 10, scope: !11068)
!11077 = !DILocalVariable(name: "ch", scope: !11068, file: !810, line: 431, type: !585)
!11078 = !DILocation(line: 431, column: 17, scope: !11068)
!11079 = !DILocation(line: 433, column: 3, scope: !11068)
!11080 = !DILocation(line: 433, column: 17, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !810, line: 433, column: 3)
!11082 = distinct !DILexicalBlock(scope: !11068, file: !810, line: 433, column: 3)
!11083 = !DILocation(line: 433, column: 16, scope: !11081)
!11084 = !DILocation(line: 433, column: 14, scope: !11081)
!11085 = !DILocation(line: 433, column: 3, scope: !11082)
!11086 = !DILocation(line: 434, column: 14, scope: !11081)
!11087 = !DILocation(line: 434, column: 20, scope: !11081)
!11088 = !DILocation(line: 434, column: 27, scope: !11081)
!11089 = !DILocation(line: 434, column: 25, scope: !11081)
!11090 = !DILocation(line: 434, column: 33, scope: !11081)
!11091 = !DILocation(line: 434, column: 31, scope: !11081)
!11092 = !DILocation(line: 434, column: 11, scope: !11081)
!11093 = !DILocation(line: 434, column: 5, scope: !11081)
!11094 = !DILocation(line: 433, column: 32, scope: !11081)
!11095 = !DILocation(line: 433, column: 3, scope: !11081)
!11096 = distinct !{!11096, !11085, !11097}
!11097 = !DILocation(line: 434, column: 33, scope: !11082)
!11098 = !DILocation(line: 435, column: 10, scope: !11068)
!11099 = !DILocation(line: 435, column: 3, scope: !11068)
!11100 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !810, file: !810, line: 479, type: !11101, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11101 = !DISubroutineType(types: !11102)
!11102 = !{null, !11103}
!11103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!11104 = !DILocalVariable(name: "tuning", arg: 1, scope: !11100, file: !810, line: 479, type: !11103)
!11105 = !DILocation(line: 479, column: 33, scope: !11100)
!11106 = !DILocation(line: 481, column: 4, scope: !11100)
!11107 = !DILocation(line: 481, column: 13, scope: !11100)
!11108 = !DILocation(line: 482, column: 1, scope: !11100)
!11109 = distinct !DISubprogram(name: "hash_initialize", scope: !810, file: !810, line: 594, type: !11110, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{!853, !52, !825, !837, !842, !847}
!11112 = !DILocalVariable(name: "candidate", arg: 1, scope: !11109, file: !810, line: 594, type: !52)
!11113 = !DILocation(line: 594, column: 25, scope: !11109)
!11114 = !DILocalVariable(name: "tuning", arg: 2, scope: !11109, file: !810, line: 594, type: !825)
!11115 = !DILocation(line: 594, column: 55, scope: !11109)
!11116 = !DILocalVariable(name: "hasher", arg: 3, scope: !11109, file: !810, line: 595, type: !837)
!11117 = !DILocation(line: 595, column: 30, scope: !11109)
!11118 = !DILocalVariable(name: "comparator", arg: 4, scope: !11109, file: !810, line: 595, type: !842)
!11119 = !DILocation(line: 595, column: 54, scope: !11109)
!11120 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11109, file: !810, line: 596, type: !847)
!11121 = !DILocation(line: 596, column: 34, scope: !11109)
!11122 = !DILocalVariable(name: "table", scope: !11109, file: !810, line: 598, type: !853)
!11123 = !DILocation(line: 598, column: 15, scope: !11109)
!11124 = !DILocation(line: 600, column: 7, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 600, column: 7)
!11126 = !DILocation(line: 600, column: 14, scope: !11125)
!11127 = !DILocation(line: 600, column: 7, scope: !11109)
!11128 = !DILocation(line: 601, column: 12, scope: !11125)
!11129 = !DILocation(line: 601, column: 5, scope: !11125)
!11130 = !DILocation(line: 602, column: 7, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 602, column: 7)
!11132 = !DILocation(line: 602, column: 18, scope: !11131)
!11133 = !DILocation(line: 602, column: 7, scope: !11109)
!11134 = !DILocation(line: 603, column: 16, scope: !11131)
!11135 = !DILocation(line: 603, column: 5, scope: !11131)
!11136 = !DILocation(line: 605, column: 11, scope: !11109)
!11137 = !DILocation(line: 605, column: 9, scope: !11109)
!11138 = !DILocation(line: 606, column: 7, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 606, column: 7)
!11140 = !DILocation(line: 606, column: 13, scope: !11139)
!11141 = !DILocation(line: 606, column: 7, scope: !11109)
!11142 = !DILocation(line: 607, column: 5, scope: !11139)
!11143 = !DILocation(line: 609, column: 8, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 609, column: 7)
!11145 = !DILocation(line: 609, column: 7, scope: !11109)
!11146 = !DILocation(line: 610, column: 12, scope: !11144)
!11147 = !DILocation(line: 610, column: 5, scope: !11144)
!11148 = !DILocation(line: 611, column: 19, scope: !11109)
!11149 = !DILocation(line: 611, column: 3, scope: !11109)
!11150 = !DILocation(line: 611, column: 10, scope: !11109)
!11151 = !DILocation(line: 611, column: 17, scope: !11109)
!11152 = !DILocation(line: 612, column: 22, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 612, column: 7)
!11154 = !DILocation(line: 612, column: 8, scope: !11153)
!11155 = !DILocation(line: 612, column: 7, scope: !11109)
!11156 = !DILocation(line: 619, column: 7, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11153, file: !810, line: 613, column: 5)
!11158 = !DILocation(line: 622, column: 43, scope: !11109)
!11159 = !DILocation(line: 622, column: 54, scope: !11109)
!11160 = !DILocation(line: 622, column: 22, scope: !11109)
!11161 = !DILocation(line: 622, column: 3, scope: !11109)
!11162 = !DILocation(line: 622, column: 10, scope: !11109)
!11163 = !DILocation(line: 622, column: 20, scope: !11109)
!11164 = !DILocation(line: 623, column: 8, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 623, column: 7)
!11166 = !DILocation(line: 623, column: 15, scope: !11165)
!11167 = !DILocation(line: 623, column: 7, scope: !11109)
!11168 = !DILocation(line: 624, column: 5, scope: !11165)
!11169 = !DILocation(line: 626, column: 27, scope: !11109)
!11170 = !DILocation(line: 626, column: 34, scope: !11109)
!11171 = !DILocation(line: 626, column: 19, scope: !11109)
!11172 = !DILocation(line: 626, column: 3, scope: !11109)
!11173 = !DILocation(line: 626, column: 10, scope: !11109)
!11174 = !DILocation(line: 626, column: 17, scope: !11109)
!11175 = !DILocation(line: 627, column: 7, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11109, file: !810, line: 627, column: 7)
!11177 = !DILocation(line: 627, column: 14, scope: !11176)
!11178 = !DILocation(line: 627, column: 21, scope: !11176)
!11179 = !DILocation(line: 627, column: 7, scope: !11109)
!11180 = !DILocation(line: 628, column: 5, scope: !11176)
!11181 = !DILocation(line: 629, column: 25, scope: !11109)
!11182 = !DILocation(line: 629, column: 32, scope: !11109)
!11183 = !DILocation(line: 629, column: 41, scope: !11109)
!11184 = !DILocation(line: 629, column: 48, scope: !11109)
!11185 = !DILocation(line: 629, column: 39, scope: !11109)
!11186 = !DILocation(line: 629, column: 3, scope: !11109)
!11187 = !DILocation(line: 629, column: 10, scope: !11109)
!11188 = !DILocation(line: 629, column: 23, scope: !11109)
!11189 = !DILocation(line: 630, column: 3, scope: !11109)
!11190 = !DILocation(line: 630, column: 10, scope: !11109)
!11191 = !DILocation(line: 630, column: 25, scope: !11109)
!11192 = !DILocation(line: 631, column: 3, scope: !11109)
!11193 = !DILocation(line: 631, column: 10, scope: !11109)
!11194 = !DILocation(line: 631, column: 20, scope: !11109)
!11195 = !DILocation(line: 633, column: 19, scope: !11109)
!11196 = !DILocation(line: 633, column: 3, scope: !11109)
!11197 = !DILocation(line: 633, column: 10, scope: !11109)
!11198 = !DILocation(line: 633, column: 17, scope: !11109)
!11199 = !DILocation(line: 634, column: 23, scope: !11109)
!11200 = !DILocation(line: 634, column: 3, scope: !11109)
!11201 = !DILocation(line: 634, column: 10, scope: !11109)
!11202 = !DILocation(line: 634, column: 21, scope: !11109)
!11203 = !DILocation(line: 635, column: 23, scope: !11109)
!11204 = !DILocation(line: 635, column: 3, scope: !11109)
!11205 = !DILocation(line: 635, column: 10, scope: !11109)
!11206 = !DILocation(line: 635, column: 21, scope: !11109)
!11207 = !DILocation(line: 637, column: 3, scope: !11109)
!11208 = !DILocation(line: 637, column: 10, scope: !11109)
!11209 = !DILocation(line: 637, column: 26, scope: !11109)
!11210 = !DILocation(line: 641, column: 10, scope: !11109)
!11211 = !DILocation(line: 641, column: 3, scope: !11109)
!11212 = !DILabel(scope: !11109, name: "fail", file: !810, line: 643)
!11213 = !DILocation(line: 643, column: 2, scope: !11109)
!11214 = !DILocation(line: 644, column: 9, scope: !11109)
!11215 = !DILocation(line: 644, column: 3, scope: !11109)
!11216 = !DILocation(line: 645, column: 3, scope: !11109)
!11217 = !DILocation(line: 646, column: 1, scope: !11109)
!11218 = distinct !DISubprogram(name: "raw_hasher", scope: !810, file: !810, line: 486, type: !839, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11219 = !DILocalVariable(name: "data", arg: 1, scope: !11218, file: !810, line: 486, type: !685)
!11220 = !DILocation(line: 486, column: 25, scope: !11218)
!11221 = !DILocalVariable(name: "n", arg: 2, scope: !11218, file: !810, line: 486, type: !52)
!11222 = !DILocation(line: 486, column: 38, scope: !11218)
!11223 = !DILocalVariable(name: "val", scope: !11218, file: !810, line: 493, type: !52)
!11224 = !DILocation(line: 493, column: 10, scope: !11218)
!11225 = !DILocation(line: 493, column: 34, scope: !11218)
!11226 = !DILocation(line: 493, column: 25, scope: !11218)
!11227 = !DILocation(line: 493, column: 16, scope: !11218)
!11228 = !DILocation(line: 494, column: 10, scope: !11218)
!11229 = !DILocation(line: 494, column: 16, scope: !11218)
!11230 = !DILocation(line: 494, column: 14, scope: !11218)
!11231 = !DILocation(line: 494, column: 3, scope: !11218)
!11232 = distinct !DISubprogram(name: "raw_comparator", scope: !810, file: !810, line: 499, type: !844, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11233 = !DILocalVariable(name: "a", arg: 1, scope: !11232, file: !810, line: 499, type: !685)
!11234 = !DILocation(line: 499, column: 29, scope: !11232)
!11235 = !DILocalVariable(name: "b", arg: 2, scope: !11232, file: !810, line: 499, type: !685)
!11236 = !DILocation(line: 499, column: 44, scope: !11232)
!11237 = !DILocation(line: 501, column: 10, scope: !11232)
!11238 = !DILocation(line: 501, column: 15, scope: !11232)
!11239 = !DILocation(line: 501, column: 12, scope: !11232)
!11240 = !DILocation(line: 501, column: 3, scope: !11232)
!11241 = distinct !DISubprogram(name: "check_tuning", scope: !810, file: !810, line: 512, type: !11242, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!139, !853}
!11244 = !DILocalVariable(name: "table", arg: 1, scope: !11241, file: !810, line: 512, type: !853)
!11245 = !DILocation(line: 512, column: 27, scope: !11241)
!11246 = !DILocalVariable(name: "tuning", scope: !11241, file: !810, line: 514, type: !825)
!11247 = !DILocation(line: 514, column: 22, scope: !11241)
!11248 = !DILocation(line: 514, column: 31, scope: !11241)
!11249 = !DILocation(line: 514, column: 38, scope: !11241)
!11250 = !DILocalVariable(name: "epsilon", scope: !11241, file: !810, line: 515, type: !831)
!11251 = !DILocation(line: 515, column: 9, scope: !11241)
!11252 = !DILocation(line: 516, column: 7, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11241, file: !810, line: 516, column: 7)
!11254 = !DILocation(line: 516, column: 14, scope: !11253)
!11255 = !DILocation(line: 516, column: 7, scope: !11241)
!11256 = !DILocation(line: 517, column: 5, scope: !11253)
!11257 = !DILocation(line: 524, column: 11, scope: !11241)
!11258 = !DILocation(line: 526, column: 7, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11241, file: !810, line: 526, column: 7)
!11260 = !DILocation(line: 526, column: 17, scope: !11259)
!11261 = !DILocation(line: 526, column: 25, scope: !11259)
!11262 = !DILocation(line: 526, column: 15, scope: !11259)
!11263 = !DILocation(line: 527, column: 7, scope: !11259)
!11264 = !DILocation(line: 527, column: 10, scope: !11259)
!11265 = !DILocation(line: 527, column: 18, scope: !11259)
!11266 = !DILocation(line: 527, column: 41, scope: !11259)
!11267 = !DILocation(line: 527, column: 39, scope: !11259)
!11268 = !DILocation(line: 527, column: 35, scope: !11259)
!11269 = !DILocation(line: 528, column: 7, scope: !11259)
!11270 = !DILocation(line: 528, column: 14, scope: !11259)
!11271 = !DILocation(line: 528, column: 12, scope: !11259)
!11272 = !DILocation(line: 528, column: 24, scope: !11259)
!11273 = !DILocation(line: 528, column: 32, scope: !11259)
!11274 = !DILocation(line: 528, column: 22, scope: !11259)
!11275 = !DILocation(line: 529, column: 7, scope: !11259)
!11276 = !DILocation(line: 529, column: 15, scope: !11259)
!11277 = !DILocation(line: 529, column: 23, scope: !11259)
!11278 = !DILocation(line: 529, column: 12, scope: !11259)
!11279 = !DILocation(line: 530, column: 7, scope: !11259)
!11280 = !DILocation(line: 530, column: 10, scope: !11259)
!11281 = !DILocation(line: 530, column: 18, scope: !11259)
!11282 = !DILocation(line: 530, column: 37, scope: !11259)
!11283 = !DILocation(line: 530, column: 35, scope: !11259)
!11284 = !DILocation(line: 530, column: 47, scope: !11259)
!11285 = !DILocation(line: 530, column: 55, scope: !11259)
!11286 = !DILocation(line: 530, column: 45, scope: !11259)
!11287 = !DILocation(line: 531, column: 7, scope: !11259)
!11288 = !DILocation(line: 531, column: 10, scope: !11259)
!11289 = !DILocation(line: 531, column: 18, scope: !11259)
!11290 = !DILocation(line: 531, column: 32, scope: !11259)
!11291 = !DILocation(line: 532, column: 7, scope: !11259)
!11292 = !DILocation(line: 532, column: 10, scope: !11259)
!11293 = !DILocation(line: 532, column: 18, scope: !11259)
!11294 = !DILocation(line: 532, column: 37, scope: !11259)
!11295 = !DILocation(line: 532, column: 35, scope: !11259)
!11296 = !DILocation(line: 532, column: 47, scope: !11259)
!11297 = !DILocation(line: 532, column: 55, scope: !11259)
!11298 = !DILocation(line: 532, column: 45, scope: !11259)
!11299 = !DILocation(line: 526, column: 7, scope: !11241)
!11300 = !DILocation(line: 533, column: 5, scope: !11259)
!11301 = !DILocation(line: 535, column: 3, scope: !11241)
!11302 = !DILocation(line: 535, column: 10, scope: !11241)
!11303 = !DILocation(line: 535, column: 17, scope: !11241)
!11304 = !DILocation(line: 536, column: 3, scope: !11241)
!11305 = !DILocation(line: 537, column: 1, scope: !11241)
!11306 = distinct !DISubprogram(name: "compute_bucket_size", scope: !810, file: !810, line: 544, type: !11307, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11307 = !DISubroutineType(types: !11308)
!11308 = !{!52, !52, !825}
!11309 = !DILocalVariable(name: "candidate", arg: 1, scope: !11306, file: !810, line: 544, type: !52)
!11310 = !DILocation(line: 544, column: 29, scope: !11306)
!11311 = !DILocalVariable(name: "tuning", arg: 2, scope: !11306, file: !810, line: 544, type: !825)
!11312 = !DILocation(line: 544, column: 59, scope: !11306)
!11313 = !DILocation(line: 546, column: 8, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11306, file: !810, line: 546, column: 7)
!11315 = !DILocation(line: 546, column: 16, scope: !11314)
!11316 = !DILocation(line: 546, column: 7, scope: !11306)
!11317 = !DILocalVariable(name: "new_candidate", scope: !11318, file: !810, line: 548, type: !831)
!11318 = distinct !DILexicalBlock(scope: !11314, file: !810, line: 547, column: 5)
!11319 = !DILocation(line: 548, column: 13, scope: !11318)
!11320 = !DILocation(line: 548, column: 29, scope: !11318)
!11321 = !DILocation(line: 548, column: 41, scope: !11318)
!11322 = !DILocation(line: 548, column: 49, scope: !11318)
!11323 = !DILocation(line: 548, column: 39, scope: !11318)
!11324 = !DILocation(line: 549, column: 23, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11318, file: !810, line: 549, column: 11)
!11326 = !DILocation(line: 549, column: 20, scope: !11325)
!11327 = !DILocation(line: 549, column: 11, scope: !11318)
!11328 = !DILocation(line: 550, column: 9, scope: !11325)
!11329 = !DILocation(line: 551, column: 19, scope: !11318)
!11330 = !DILocation(line: 551, column: 17, scope: !11318)
!11331 = !DILocation(line: 552, column: 5, scope: !11318)
!11332 = !DILocation(line: 553, column: 27, scope: !11306)
!11333 = !DILocation(line: 553, column: 15, scope: !11306)
!11334 = !DILocation(line: 553, column: 13, scope: !11306)
!11335 = !DILocation(line: 554, column: 7, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11306, file: !810, line: 554, column: 7)
!11337 = !DILocation(line: 554, column: 7, scope: !11306)
!11338 = !DILocation(line: 555, column: 5, scope: !11336)
!11339 = !DILocation(line: 556, column: 10, scope: !11306)
!11340 = !DILocation(line: 556, column: 3, scope: !11306)
!11341 = !DILocation(line: 557, column: 1, scope: !11306)
!11342 = distinct !DISubprogram(name: "next_prime", scope: !810, file: !810, line: 463, type: !11343, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{!52, !52}
!11345 = !DILocalVariable(name: "candidate", arg: 1, scope: !11342, file: !810, line: 463, type: !52)
!11346 = !DILocation(line: 463, column: 20, scope: !11342)
!11347 = !DILocation(line: 466, column: 7, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !810, line: 466, column: 7)
!11349 = !DILocation(line: 466, column: 17, scope: !11348)
!11350 = !DILocation(line: 466, column: 7, scope: !11342)
!11351 = !DILocation(line: 467, column: 15, scope: !11348)
!11352 = !DILocation(line: 467, column: 5, scope: !11348)
!11353 = !DILocation(line: 470, column: 13, scope: !11342)
!11354 = !DILocation(line: 472, column: 3, scope: !11342)
!11355 = !DILocation(line: 472, column: 22, scope: !11342)
!11356 = !DILocation(line: 472, column: 19, scope: !11342)
!11357 = !DILocation(line: 472, column: 32, scope: !11342)
!11358 = !DILocation(line: 472, column: 46, scope: !11342)
!11359 = !DILocation(line: 472, column: 36, scope: !11342)
!11360 = !DILocation(line: 472, column: 35, scope: !11342)
!11361 = !DILocation(line: 0, scope: !11342)
!11362 = !DILocation(line: 473, column: 15, scope: !11342)
!11363 = distinct !{!11363, !11354, !11364}
!11364 = !DILocation(line: 473, column: 18, scope: !11342)
!11365 = !DILocation(line: 475, column: 10, scope: !11342)
!11366 = !DILocation(line: 475, column: 3, scope: !11342)
!11367 = distinct !DISubprogram(name: "is_prime", scope: !810, file: !810, line: 444, type: !11368, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!139, !52}
!11370 = !DILocalVariable(name: "candidate", arg: 1, scope: !11367, file: !810, line: 444, type: !52)
!11371 = !DILocation(line: 444, column: 18, scope: !11367)
!11372 = !DILocalVariable(name: "divisor", scope: !11367, file: !810, line: 446, type: !52)
!11373 = !DILocation(line: 446, column: 10, scope: !11367)
!11374 = !DILocalVariable(name: "square", scope: !11367, file: !810, line: 447, type: !52)
!11375 = !DILocation(line: 447, column: 10, scope: !11367)
!11376 = !DILocation(line: 447, column: 19, scope: !11367)
!11377 = !DILocation(line: 447, column: 29, scope: !11367)
!11378 = !DILocation(line: 447, column: 27, scope: !11367)
!11379 = !DILocation(line: 449, column: 3, scope: !11367)
!11380 = !DILocation(line: 449, column: 10, scope: !11367)
!11381 = !DILocation(line: 449, column: 19, scope: !11367)
!11382 = !DILocation(line: 449, column: 17, scope: !11367)
!11383 = !DILocation(line: 449, column: 29, scope: !11367)
!11384 = !DILocation(line: 449, column: 33, scope: !11367)
!11385 = !DILocation(line: 449, column: 45, scope: !11367)
!11386 = !DILocation(line: 449, column: 43, scope: !11367)
!11387 = !DILocation(line: 0, scope: !11367)
!11388 = !DILocation(line: 451, column: 14, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11367, file: !810, line: 450, column: 5)
!11390 = !DILocation(line: 452, column: 21, scope: !11389)
!11391 = !DILocation(line: 452, column: 19, scope: !11389)
!11392 = !DILocation(line: 452, column: 14, scope: !11389)
!11393 = !DILocation(line: 453, column: 14, scope: !11389)
!11394 = distinct !{!11394, !11379, !11395}
!11395 = !DILocation(line: 454, column: 5, scope: !11367)
!11396 = !DILocation(line: 456, column: 11, scope: !11367)
!11397 = !DILocation(line: 456, column: 23, scope: !11367)
!11398 = !DILocation(line: 456, column: 21, scope: !11367)
!11399 = !DILocation(line: 456, column: 10, scope: !11367)
!11400 = !DILocation(line: 456, column: 3, scope: !11367)
!11401 = distinct !DISubprogram(name: "hash_clear", scope: !810, file: !810, line: 653, type: !11402, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11402 = !DISubroutineType(types: !11403)
!11403 = !{null, !853}
!11404 = !DILocalVariable(name: "table", arg: 1, scope: !11401, file: !810, line: 653, type: !853)
!11405 = !DILocation(line: 653, column: 25, scope: !11401)
!11406 = !DILocalVariable(name: "bucket", scope: !11401, file: !810, line: 655, type: !813)
!11407 = !DILocation(line: 655, column: 22, scope: !11401)
!11408 = !DILocation(line: 657, column: 17, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11401, file: !810, line: 657, column: 3)
!11410 = !DILocation(line: 657, column: 24, scope: !11409)
!11411 = !DILocation(line: 657, column: 15, scope: !11409)
!11412 = !DILocation(line: 657, column: 8, scope: !11409)
!11413 = !DILocation(line: 657, column: 32, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11409, file: !810, line: 657, column: 3)
!11415 = !DILocation(line: 657, column: 41, scope: !11414)
!11416 = !DILocation(line: 657, column: 48, scope: !11414)
!11417 = !DILocation(line: 657, column: 39, scope: !11414)
!11418 = !DILocation(line: 657, column: 3, scope: !11409)
!11419 = !DILocation(line: 659, column: 11, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !810, line: 659, column: 11)
!11421 = distinct !DILexicalBlock(scope: !11414, file: !810, line: 658, column: 5)
!11422 = !DILocation(line: 659, column: 19, scope: !11420)
!11423 = !DILocation(line: 659, column: 11, scope: !11421)
!11424 = !DILocalVariable(name: "cursor", scope: !11425, file: !810, line: 661, type: !813)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !810, line: 660, column: 9)
!11426 = !DILocation(line: 661, column: 30, scope: !11425)
!11427 = !DILocalVariable(name: "next", scope: !11425, file: !810, line: 662, type: !813)
!11428 = !DILocation(line: 662, column: 30, scope: !11425)
!11429 = !DILocation(line: 665, column: 25, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11425, file: !810, line: 665, column: 11)
!11431 = !DILocation(line: 665, column: 33, scope: !11430)
!11432 = !DILocation(line: 665, column: 23, scope: !11430)
!11433 = !DILocation(line: 665, column: 16, scope: !11430)
!11434 = !DILocation(line: 665, column: 39, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11430, file: !810, line: 665, column: 11)
!11436 = !DILocation(line: 665, column: 11, scope: !11430)
!11437 = !DILocation(line: 667, column: 19, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !810, line: 667, column: 19)
!11439 = distinct !DILexicalBlock(scope: !11435, file: !810, line: 666, column: 13)
!11440 = !DILocation(line: 667, column: 26, scope: !11438)
!11441 = !DILocation(line: 667, column: 19, scope: !11439)
!11442 = !DILocation(line: 668, column: 17, scope: !11438)
!11443 = !DILocation(line: 668, column: 24, scope: !11438)
!11444 = !DILocation(line: 668, column: 36, scope: !11438)
!11445 = !DILocation(line: 668, column: 44, scope: !11438)
!11446 = !DILocation(line: 669, column: 15, scope: !11439)
!11447 = !DILocation(line: 669, column: 23, scope: !11439)
!11448 = !DILocation(line: 669, column: 28, scope: !11439)
!11449 = !DILocation(line: 671, column: 22, scope: !11439)
!11450 = !DILocation(line: 671, column: 30, scope: !11439)
!11451 = !DILocation(line: 671, column: 20, scope: !11439)
!11452 = !DILocation(line: 674, column: 30, scope: !11439)
!11453 = !DILocation(line: 674, column: 37, scope: !11439)
!11454 = !DILocation(line: 674, column: 15, scope: !11439)
!11455 = !DILocation(line: 674, column: 23, scope: !11439)
!11456 = !DILocation(line: 674, column: 28, scope: !11439)
!11457 = !DILocation(line: 675, column: 40, scope: !11439)
!11458 = !DILocation(line: 675, column: 15, scope: !11439)
!11459 = !DILocation(line: 675, column: 22, scope: !11439)
!11460 = !DILocation(line: 675, column: 38, scope: !11439)
!11461 = !DILocation(line: 676, column: 13, scope: !11439)
!11462 = !DILocation(line: 665, column: 56, scope: !11435)
!11463 = !DILocation(line: 665, column: 54, scope: !11435)
!11464 = !DILocation(line: 665, column: 11, scope: !11435)
!11465 = distinct !{!11465, !11436, !11466}
!11466 = !DILocation(line: 676, column: 13, scope: !11430)
!11467 = !DILocation(line: 679, column: 15, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11425, file: !810, line: 679, column: 15)
!11469 = !DILocation(line: 679, column: 22, scope: !11468)
!11470 = !DILocation(line: 679, column: 15, scope: !11425)
!11471 = !DILocation(line: 680, column: 13, scope: !11468)
!11472 = !DILocation(line: 680, column: 20, scope: !11468)
!11473 = !DILocation(line: 680, column: 32, scope: !11468)
!11474 = !DILocation(line: 680, column: 40, scope: !11468)
!11475 = !DILocation(line: 681, column: 11, scope: !11425)
!11476 = !DILocation(line: 681, column: 19, scope: !11425)
!11477 = !DILocation(line: 681, column: 24, scope: !11425)
!11478 = !DILocation(line: 682, column: 11, scope: !11425)
!11479 = !DILocation(line: 682, column: 19, scope: !11425)
!11480 = !DILocation(line: 682, column: 24, scope: !11425)
!11481 = !DILocation(line: 683, column: 9, scope: !11425)
!11482 = !DILocation(line: 684, column: 5, scope: !11421)
!11483 = !DILocation(line: 657, column: 68, scope: !11414)
!11484 = !DILocation(line: 657, column: 3, scope: !11414)
!11485 = distinct !{!11485, !11418, !11486}
!11486 = !DILocation(line: 684, column: 5, scope: !11409)
!11487 = !DILocation(line: 686, column: 3, scope: !11401)
!11488 = !DILocation(line: 686, column: 10, scope: !11401)
!11489 = !DILocation(line: 686, column: 25, scope: !11401)
!11490 = !DILocation(line: 687, column: 3, scope: !11401)
!11491 = !DILocation(line: 687, column: 10, scope: !11401)
!11492 = !DILocation(line: 687, column: 20, scope: !11401)
!11493 = !DILocation(line: 688, column: 1, scope: !11401)
!11494 = distinct !DISubprogram(name: "hash_free", scope: !810, file: !810, line: 696, type: !11402, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11495 = !DILocalVariable(name: "table", arg: 1, scope: !11494, file: !810, line: 696, type: !853)
!11496 = !DILocation(line: 696, column: 24, scope: !11494)
!11497 = !DILocalVariable(name: "bucket", scope: !11494, file: !810, line: 698, type: !813)
!11498 = !DILocation(line: 698, column: 22, scope: !11494)
!11499 = !DILocalVariable(name: "cursor", scope: !11494, file: !810, line: 699, type: !813)
!11500 = !DILocation(line: 699, column: 22, scope: !11494)
!11501 = !DILocalVariable(name: "next", scope: !11494, file: !810, line: 700, type: !813)
!11502 = !DILocation(line: 700, column: 22, scope: !11494)
!11503 = !DILocation(line: 703, column: 7, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11494, file: !810, line: 703, column: 7)
!11505 = !DILocation(line: 703, column: 14, scope: !11504)
!11506 = !DILocation(line: 703, column: 25, scope: !11504)
!11507 = !DILocation(line: 703, column: 28, scope: !11504)
!11508 = !DILocation(line: 703, column: 35, scope: !11504)
!11509 = !DILocation(line: 703, column: 7, scope: !11494)
!11510 = !DILocation(line: 705, column: 21, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !810, line: 705, column: 7)
!11512 = distinct !DILexicalBlock(scope: !11504, file: !810, line: 704, column: 5)
!11513 = !DILocation(line: 705, column: 28, scope: !11511)
!11514 = !DILocation(line: 705, column: 19, scope: !11511)
!11515 = !DILocation(line: 705, column: 12, scope: !11511)
!11516 = !DILocation(line: 705, column: 36, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11511, file: !810, line: 705, column: 7)
!11518 = !DILocation(line: 705, column: 45, scope: !11517)
!11519 = !DILocation(line: 705, column: 52, scope: !11517)
!11520 = !DILocation(line: 705, column: 43, scope: !11517)
!11521 = !DILocation(line: 705, column: 7, scope: !11511)
!11522 = !DILocation(line: 707, column: 15, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !810, line: 707, column: 15)
!11524 = distinct !DILexicalBlock(scope: !11517, file: !810, line: 706, column: 9)
!11525 = !DILocation(line: 707, column: 23, scope: !11523)
!11526 = !DILocation(line: 707, column: 15, scope: !11524)
!11527 = !DILocation(line: 709, column: 29, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !810, line: 709, column: 15)
!11529 = distinct !DILexicalBlock(scope: !11523, file: !810, line: 708, column: 13)
!11530 = !DILocation(line: 709, column: 27, scope: !11528)
!11531 = !DILocation(line: 709, column: 20, scope: !11528)
!11532 = !DILocation(line: 709, column: 37, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11528, file: !810, line: 709, column: 15)
!11534 = !DILocation(line: 709, column: 15, scope: !11528)
!11535 = !DILocation(line: 710, column: 17, scope: !11533)
!11536 = !DILocation(line: 710, column: 24, scope: !11533)
!11537 = !DILocation(line: 710, column: 36, scope: !11533)
!11538 = !DILocation(line: 710, column: 44, scope: !11533)
!11539 = !DILocation(line: 709, column: 54, scope: !11533)
!11540 = !DILocation(line: 709, column: 62, scope: !11533)
!11541 = !DILocation(line: 709, column: 52, scope: !11533)
!11542 = !DILocation(line: 709, column: 15, scope: !11533)
!11543 = distinct !{!11543, !11534, !11544}
!11544 = !DILocation(line: 710, column: 48, scope: !11528)
!11545 = !DILocation(line: 711, column: 13, scope: !11529)
!11546 = !DILocation(line: 712, column: 9, scope: !11524)
!11547 = !DILocation(line: 705, column: 72, scope: !11517)
!11548 = !DILocation(line: 705, column: 7, scope: !11517)
!11549 = distinct !{!11549, !11521, !11550}
!11550 = !DILocation(line: 712, column: 9, scope: !11511)
!11551 = !DILocation(line: 713, column: 5, scope: !11512)
!11552 = !DILocation(line: 722, column: 17, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11494, file: !810, line: 722, column: 3)
!11554 = !DILocation(line: 722, column: 24, scope: !11553)
!11555 = !DILocation(line: 722, column: 15, scope: !11553)
!11556 = !DILocation(line: 722, column: 8, scope: !11553)
!11557 = !DILocation(line: 722, column: 32, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11553, file: !810, line: 722, column: 3)
!11559 = !DILocation(line: 722, column: 41, scope: !11558)
!11560 = !DILocation(line: 722, column: 48, scope: !11558)
!11561 = !DILocation(line: 722, column: 39, scope: !11558)
!11562 = !DILocation(line: 722, column: 3, scope: !11553)
!11563 = !DILocation(line: 724, column: 21, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !810, line: 724, column: 7)
!11565 = distinct !DILexicalBlock(scope: !11558, file: !810, line: 723, column: 5)
!11566 = !DILocation(line: 724, column: 29, scope: !11564)
!11567 = !DILocation(line: 724, column: 19, scope: !11564)
!11568 = !DILocation(line: 724, column: 12, scope: !11564)
!11569 = !DILocation(line: 724, column: 35, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11564, file: !810, line: 724, column: 7)
!11571 = !DILocation(line: 724, column: 7, scope: !11564)
!11572 = !DILocation(line: 726, column: 18, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !810, line: 725, column: 9)
!11574 = !DILocation(line: 726, column: 26, scope: !11573)
!11575 = !DILocation(line: 726, column: 16, scope: !11573)
!11576 = !DILocation(line: 727, column: 17, scope: !11573)
!11577 = !DILocation(line: 727, column: 11, scope: !11573)
!11578 = !DILocation(line: 728, column: 9, scope: !11573)
!11579 = !DILocation(line: 724, column: 52, scope: !11570)
!11580 = !DILocation(line: 724, column: 50, scope: !11570)
!11581 = !DILocation(line: 724, column: 7, scope: !11570)
!11582 = distinct !{!11582, !11571, !11583}
!11583 = !DILocation(line: 728, column: 9, scope: !11564)
!11584 = !DILocation(line: 729, column: 5, scope: !11565)
!11585 = !DILocation(line: 722, column: 68, scope: !11558)
!11586 = !DILocation(line: 722, column: 3, scope: !11558)
!11587 = distinct !{!11587, !11562, !11588}
!11588 = !DILocation(line: 729, column: 5, scope: !11553)
!11589 = !DILocation(line: 732, column: 17, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11494, file: !810, line: 732, column: 3)
!11591 = !DILocation(line: 732, column: 24, scope: !11590)
!11592 = !DILocation(line: 732, column: 15, scope: !11590)
!11593 = !DILocation(line: 732, column: 8, scope: !11590)
!11594 = !DILocation(line: 732, column: 41, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11590, file: !810, line: 732, column: 3)
!11596 = !DILocation(line: 732, column: 3, scope: !11590)
!11597 = !DILocation(line: 734, column: 14, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11595, file: !810, line: 733, column: 5)
!11599 = !DILocation(line: 734, column: 22, scope: !11598)
!11600 = !DILocation(line: 734, column: 12, scope: !11598)
!11601 = !DILocation(line: 735, column: 13, scope: !11598)
!11602 = !DILocation(line: 735, column: 7, scope: !11598)
!11603 = !DILocation(line: 736, column: 5, scope: !11598)
!11604 = !DILocation(line: 732, column: 58, scope: !11595)
!11605 = !DILocation(line: 732, column: 56, scope: !11595)
!11606 = !DILocation(line: 732, column: 3, scope: !11595)
!11607 = distinct !{!11607, !11596, !11608}
!11608 = !DILocation(line: 736, column: 5, scope: !11590)
!11609 = !DILocation(line: 741, column: 9, scope: !11494)
!11610 = !DILocation(line: 741, column: 16, scope: !11494)
!11611 = !DILocation(line: 741, column: 3, scope: !11494)
!11612 = !DILocation(line: 742, column: 9, scope: !11494)
!11613 = !DILocation(line: 742, column: 3, scope: !11494)
!11614 = !DILocation(line: 743, column: 1, scope: !11494)
!11615 = distinct !DISubprogram(name: "hash_rehash", scope: !810, file: !810, line: 943, type: !11616, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{!139, !853, !52}
!11618 = !DILocalVariable(name: "table", arg: 1, scope: !11615, file: !810, line: 943, type: !853)
!11619 = !DILocation(line: 943, column: 26, scope: !11615)
!11620 = !DILocalVariable(name: "candidate", arg: 2, scope: !11615, file: !810, line: 943, type: !52)
!11621 = !DILocation(line: 943, column: 40, scope: !11615)
!11622 = !DILocalVariable(name: "storage", scope: !11615, file: !810, line: 945, type: !808)
!11623 = !DILocation(line: 945, column: 14, scope: !11615)
!11624 = !DILocalVariable(name: "new_table", scope: !11615, file: !810, line: 946, type: !853)
!11625 = !DILocation(line: 946, column: 15, scope: !11615)
!11626 = !DILocalVariable(name: "new_size", scope: !11615, file: !810, line: 947, type: !52)
!11627 = !DILocation(line: 947, column: 10, scope: !11615)
!11628 = !DILocation(line: 947, column: 42, scope: !11615)
!11629 = !DILocation(line: 947, column: 53, scope: !11615)
!11630 = !DILocation(line: 947, column: 60, scope: !11615)
!11631 = !DILocation(line: 947, column: 21, scope: !11615)
!11632 = !DILocation(line: 949, column: 8, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11615, file: !810, line: 949, column: 7)
!11634 = !DILocation(line: 949, column: 7, scope: !11615)
!11635 = !DILocation(line: 950, column: 5, scope: !11633)
!11636 = !DILocation(line: 951, column: 7, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11615, file: !810, line: 951, column: 7)
!11638 = !DILocation(line: 951, column: 19, scope: !11637)
!11639 = !DILocation(line: 951, column: 26, scope: !11637)
!11640 = !DILocation(line: 951, column: 16, scope: !11637)
!11641 = !DILocation(line: 951, column: 7, scope: !11615)
!11642 = !DILocation(line: 952, column: 5, scope: !11637)
!11643 = !DILocation(line: 953, column: 13, scope: !11615)
!11644 = !DILocation(line: 954, column: 31, scope: !11615)
!11645 = !DILocation(line: 954, column: 23, scope: !11615)
!11646 = !DILocation(line: 954, column: 3, scope: !11615)
!11647 = !DILocation(line: 954, column: 14, scope: !11615)
!11648 = !DILocation(line: 954, column: 21, scope: !11615)
!11649 = !DILocation(line: 955, column: 7, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11615, file: !810, line: 955, column: 7)
!11651 = !DILocation(line: 955, column: 18, scope: !11650)
!11652 = !DILocation(line: 955, column: 25, scope: !11650)
!11653 = !DILocation(line: 955, column: 7, scope: !11615)
!11654 = !DILocation(line: 956, column: 5, scope: !11650)
!11655 = !DILocation(line: 957, column: 26, scope: !11615)
!11656 = !DILocation(line: 957, column: 3, scope: !11615)
!11657 = !DILocation(line: 957, column: 14, scope: !11615)
!11658 = !DILocation(line: 957, column: 24, scope: !11615)
!11659 = !DILocation(line: 958, column: 29, scope: !11615)
!11660 = !DILocation(line: 958, column: 40, scope: !11615)
!11661 = !DILocation(line: 958, column: 49, scope: !11615)
!11662 = !DILocation(line: 958, column: 47, scope: !11615)
!11663 = !DILocation(line: 958, column: 3, scope: !11615)
!11664 = !DILocation(line: 958, column: 14, scope: !11615)
!11665 = !DILocation(line: 958, column: 27, scope: !11615)
!11666 = !DILocation(line: 959, column: 3, scope: !11615)
!11667 = !DILocation(line: 959, column: 14, scope: !11615)
!11668 = !DILocation(line: 959, column: 29, scope: !11615)
!11669 = !DILocation(line: 960, column: 3, scope: !11615)
!11670 = !DILocation(line: 960, column: 14, scope: !11615)
!11671 = !DILocation(line: 960, column: 24, scope: !11615)
!11672 = !DILocation(line: 961, column: 23, scope: !11615)
!11673 = !DILocation(line: 961, column: 30, scope: !11615)
!11674 = !DILocation(line: 961, column: 3, scope: !11615)
!11675 = !DILocation(line: 961, column: 14, scope: !11615)
!11676 = !DILocation(line: 961, column: 21, scope: !11615)
!11677 = !DILocation(line: 962, column: 23, scope: !11615)
!11678 = !DILocation(line: 962, column: 30, scope: !11615)
!11679 = !DILocation(line: 962, column: 3, scope: !11615)
!11680 = !DILocation(line: 962, column: 14, scope: !11615)
!11681 = !DILocation(line: 962, column: 21, scope: !11615)
!11682 = !DILocation(line: 963, column: 27, scope: !11615)
!11683 = !DILocation(line: 963, column: 34, scope: !11615)
!11684 = !DILocation(line: 963, column: 3, scope: !11615)
!11685 = !DILocation(line: 963, column: 14, scope: !11615)
!11686 = !DILocation(line: 963, column: 25, scope: !11615)
!11687 = !DILocation(line: 964, column: 27, scope: !11615)
!11688 = !DILocation(line: 964, column: 34, scope: !11615)
!11689 = !DILocation(line: 964, column: 3, scope: !11615)
!11690 = !DILocation(line: 964, column: 14, scope: !11615)
!11691 = !DILocation(line: 964, column: 25, scope: !11615)
!11692 = !DILocation(line: 984, column: 32, scope: !11615)
!11693 = !DILocation(line: 984, column: 39, scope: !11615)
!11694 = !DILocation(line: 984, column: 3, scope: !11615)
!11695 = !DILocation(line: 984, column: 14, scope: !11615)
!11696 = !DILocation(line: 984, column: 30, scope: !11615)
!11697 = !DILocation(line: 986, column: 25, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11615, file: !810, line: 986, column: 7)
!11699 = !DILocation(line: 986, column: 36, scope: !11698)
!11700 = !DILocation(line: 986, column: 7, scope: !11698)
!11701 = !DILocation(line: 986, column: 7, scope: !11615)
!11702 = !DILocation(line: 989, column: 13, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11698, file: !810, line: 987, column: 5)
!11704 = !DILocation(line: 989, column: 20, scope: !11703)
!11705 = !DILocation(line: 989, column: 7, scope: !11703)
!11706 = !DILocation(line: 990, column: 23, scope: !11703)
!11707 = !DILocation(line: 990, column: 34, scope: !11703)
!11708 = !DILocation(line: 990, column: 7, scope: !11703)
!11709 = !DILocation(line: 990, column: 14, scope: !11703)
!11710 = !DILocation(line: 990, column: 21, scope: !11703)
!11711 = !DILocation(line: 991, column: 29, scope: !11703)
!11712 = !DILocation(line: 991, column: 40, scope: !11703)
!11713 = !DILocation(line: 991, column: 7, scope: !11703)
!11714 = !DILocation(line: 991, column: 14, scope: !11703)
!11715 = !DILocation(line: 991, column: 27, scope: !11703)
!11716 = !DILocation(line: 992, column: 26, scope: !11703)
!11717 = !DILocation(line: 992, column: 37, scope: !11703)
!11718 = !DILocation(line: 992, column: 7, scope: !11703)
!11719 = !DILocation(line: 992, column: 14, scope: !11703)
!11720 = !DILocation(line: 992, column: 24, scope: !11703)
!11721 = !DILocation(line: 993, column: 31, scope: !11703)
!11722 = !DILocation(line: 993, column: 42, scope: !11703)
!11723 = !DILocation(line: 993, column: 7, scope: !11703)
!11724 = !DILocation(line: 993, column: 14, scope: !11703)
!11725 = !DILocation(line: 993, column: 29, scope: !11703)
!11726 = !DILocation(line: 994, column: 32, scope: !11703)
!11727 = !DILocation(line: 994, column: 43, scope: !11703)
!11728 = !DILocation(line: 994, column: 7, scope: !11703)
!11729 = !DILocation(line: 994, column: 14, scope: !11703)
!11730 = !DILocation(line: 994, column: 30, scope: !11703)
!11731 = !DILocation(line: 996, column: 7, scope: !11703)
!11732 = !DILocation(line: 1012, column: 28, scope: !11615)
!11733 = !DILocation(line: 1012, column: 39, scope: !11615)
!11734 = !DILocation(line: 1012, column: 3, scope: !11615)
!11735 = !DILocation(line: 1012, column: 10, scope: !11615)
!11736 = !DILocation(line: 1012, column: 26, scope: !11615)
!11737 = !DILocation(line: 1013, column: 28, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11615, file: !810, line: 1013, column: 7)
!11739 = !DILocation(line: 1013, column: 35, scope: !11738)
!11740 = !DILocation(line: 1013, column: 10, scope: !11738)
!11741 = !DILocation(line: 1014, column: 10, scope: !11738)
!11742 = !DILocation(line: 1014, column: 31, scope: !11738)
!11743 = !DILocation(line: 1014, column: 38, scope: !11738)
!11744 = !DILocation(line: 1014, column: 13, scope: !11738)
!11745 = !DILocation(line: 1013, column: 7, scope: !11615)
!11746 = !DILocation(line: 1015, column: 5, scope: !11738)
!11747 = !DILocation(line: 1017, column: 9, scope: !11615)
!11748 = !DILocation(line: 1017, column: 20, scope: !11615)
!11749 = !DILocation(line: 1017, column: 3, scope: !11615)
!11750 = !DILocation(line: 1018, column: 3, scope: !11615)
!11751 = !DILocation(line: 1019, column: 1, scope: !11615)
!11752 = distinct !DISubprogram(name: "transfer_entries", scope: !810, file: !810, line: 860, type: !11753, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11753 = !DISubroutineType(types: !11754)
!11754 = !{!139, !853, !853, !139}
!11755 = !DILocalVariable(name: "dst", arg: 1, scope: !11752, file: !810, line: 860, type: !853)
!11756 = !DILocation(line: 860, column: 31, scope: !11752)
!11757 = !DILocalVariable(name: "src", arg: 2, scope: !11752, file: !810, line: 860, type: !853)
!11758 = !DILocation(line: 860, column: 48, scope: !11752)
!11759 = !DILocalVariable(name: "safe", arg: 3, scope: !11752, file: !810, line: 860, type: !139)
!11760 = !DILocation(line: 860, column: 58, scope: !11752)
!11761 = !DILocalVariable(name: "bucket", scope: !11752, file: !810, line: 862, type: !813)
!11762 = !DILocation(line: 862, column: 22, scope: !11752)
!11763 = !DILocalVariable(name: "cursor", scope: !11752, file: !810, line: 863, type: !813)
!11764 = !DILocation(line: 863, column: 22, scope: !11752)
!11765 = !DILocalVariable(name: "next", scope: !11752, file: !810, line: 864, type: !813)
!11766 = !DILocation(line: 864, column: 22, scope: !11752)
!11767 = !DILocation(line: 865, column: 17, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11752, file: !810, line: 865, column: 3)
!11769 = !DILocation(line: 865, column: 22, scope: !11768)
!11770 = !DILocation(line: 865, column: 15, scope: !11768)
!11771 = !DILocation(line: 865, column: 8, scope: !11768)
!11772 = !DILocation(line: 865, column: 30, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11768, file: !810, line: 865, column: 3)
!11774 = !DILocation(line: 865, column: 39, scope: !11773)
!11775 = !DILocation(line: 865, column: 44, scope: !11773)
!11776 = !DILocation(line: 865, column: 37, scope: !11773)
!11777 = !DILocation(line: 865, column: 3, scope: !11768)
!11778 = !DILocation(line: 866, column: 9, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11773, file: !810, line: 866, column: 9)
!11780 = !DILocation(line: 866, column: 17, scope: !11779)
!11781 = !DILocation(line: 866, column: 9, scope: !11773)
!11782 = !DILocalVariable(name: "data", scope: !11783, file: !810, line: 868, type: !47)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !810, line: 867, column: 7)
!11784 = !DILocation(line: 868, column: 15, scope: !11783)
!11785 = !DILocalVariable(name: "new_bucket", scope: !11783, file: !810, line: 869, type: !813)
!11786 = !DILocation(line: 869, column: 28, scope: !11783)
!11787 = !DILocation(line: 877, column: 23, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11783, file: !810, line: 877, column: 9)
!11789 = !DILocation(line: 877, column: 31, scope: !11788)
!11790 = !DILocation(line: 877, column: 21, scope: !11788)
!11791 = !DILocation(line: 877, column: 14, scope: !11788)
!11792 = !DILocation(line: 877, column: 37, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11788, file: !810, line: 877, column: 9)
!11794 = !DILocation(line: 877, column: 9, scope: !11788)
!11795 = !DILocation(line: 879, column: 20, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11793, file: !810, line: 878, column: 11)
!11797 = !DILocation(line: 879, column: 28, scope: !11796)
!11798 = !DILocation(line: 879, column: 18, scope: !11796)
!11799 = !DILocation(line: 880, column: 39, scope: !11796)
!11800 = !DILocation(line: 880, column: 44, scope: !11796)
!11801 = !DILocation(line: 880, column: 26, scope: !11796)
!11802 = !DILocation(line: 880, column: 24, scope: !11796)
!11803 = !DILocation(line: 882, column: 20, scope: !11796)
!11804 = !DILocation(line: 882, column: 28, scope: !11796)
!11805 = !DILocation(line: 882, column: 18, scope: !11796)
!11806 = !DILocation(line: 884, column: 17, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11796, file: !810, line: 884, column: 17)
!11808 = !DILocation(line: 884, column: 29, scope: !11807)
!11809 = !DILocation(line: 884, column: 17, scope: !11796)
!11810 = !DILocation(line: 888, column: 32, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11807, file: !810, line: 885, column: 15)
!11812 = !DILocation(line: 888, column: 44, scope: !11811)
!11813 = !DILocation(line: 888, column: 17, scope: !11811)
!11814 = !DILocation(line: 888, column: 25, scope: !11811)
!11815 = !DILocation(line: 888, column: 30, scope: !11811)
!11816 = !DILocation(line: 889, column: 36, scope: !11811)
!11817 = !DILocation(line: 889, column: 17, scope: !11811)
!11818 = !DILocation(line: 889, column: 29, scope: !11811)
!11819 = !DILocation(line: 889, column: 34, scope: !11811)
!11820 = !DILocation(line: 890, column: 15, scope: !11811)
!11821 = !DILocation(line: 895, column: 36, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11807, file: !810, line: 892, column: 15)
!11823 = !DILocation(line: 895, column: 17, scope: !11822)
!11824 = !DILocation(line: 895, column: 29, scope: !11822)
!11825 = !DILocation(line: 895, column: 34, scope: !11822)
!11826 = !DILocation(line: 896, column: 17, scope: !11822)
!11827 = !DILocation(line: 896, column: 22, scope: !11822)
!11828 = !DILocation(line: 896, column: 36, scope: !11822)
!11829 = !DILocation(line: 897, column: 29, scope: !11822)
!11830 = !DILocation(line: 897, column: 34, scope: !11822)
!11831 = !DILocation(line: 897, column: 17, scope: !11822)
!11832 = !DILocation(line: 899, column: 11, scope: !11796)
!11833 = !DILocation(line: 877, column: 54, scope: !11793)
!11834 = !DILocation(line: 877, column: 52, scope: !11793)
!11835 = !DILocation(line: 877, column: 9, scope: !11793)
!11836 = distinct !{!11836, !11794, !11837}
!11837 = !DILocation(line: 899, column: 11, scope: !11788)
!11838 = !DILocation(line: 903, column: 16, scope: !11783)
!11839 = !DILocation(line: 903, column: 24, scope: !11783)
!11840 = !DILocation(line: 903, column: 14, scope: !11783)
!11841 = !DILocation(line: 904, column: 9, scope: !11783)
!11842 = !DILocation(line: 904, column: 17, scope: !11783)
!11843 = !DILocation(line: 904, column: 22, scope: !11783)
!11844 = !DILocation(line: 905, column: 13, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11783, file: !810, line: 905, column: 13)
!11846 = !DILocation(line: 905, column: 13, scope: !11783)
!11847 = !DILocation(line: 906, column: 11, scope: !11845)
!11848 = !DILocation(line: 907, column: 35, scope: !11783)
!11849 = !DILocation(line: 907, column: 40, scope: !11783)
!11850 = !DILocation(line: 907, column: 22, scope: !11783)
!11851 = !DILocation(line: 907, column: 20, scope: !11783)
!11852 = !DILocation(line: 909, column: 13, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11783, file: !810, line: 909, column: 13)
!11854 = !DILocation(line: 909, column: 25, scope: !11853)
!11855 = !DILocation(line: 909, column: 13, scope: !11783)
!11856 = !DILocalVariable(name: "new_entry", scope: !11857, file: !810, line: 913, type: !813)
!11857 = distinct !DILexicalBlock(scope: !11853, file: !810, line: 910, column: 11)
!11858 = !DILocation(line: 913, column: 32, scope: !11857)
!11859 = !DILocation(line: 913, column: 60, scope: !11857)
!11860 = !DILocation(line: 913, column: 44, scope: !11857)
!11861 = !DILocation(line: 915, column: 17, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11857, file: !810, line: 915, column: 17)
!11863 = !DILocation(line: 915, column: 27, scope: !11862)
!11864 = !DILocation(line: 915, column: 17, scope: !11857)
!11865 = !DILocation(line: 916, column: 15, scope: !11862)
!11866 = !DILocation(line: 918, column: 31, scope: !11857)
!11867 = !DILocation(line: 918, column: 13, scope: !11857)
!11868 = !DILocation(line: 918, column: 24, scope: !11857)
!11869 = !DILocation(line: 918, column: 29, scope: !11857)
!11870 = !DILocation(line: 919, column: 31, scope: !11857)
!11871 = !DILocation(line: 919, column: 43, scope: !11857)
!11872 = !DILocation(line: 919, column: 13, scope: !11857)
!11873 = !DILocation(line: 919, column: 24, scope: !11857)
!11874 = !DILocation(line: 919, column: 29, scope: !11857)
!11875 = !DILocation(line: 920, column: 32, scope: !11857)
!11876 = !DILocation(line: 920, column: 13, scope: !11857)
!11877 = !DILocation(line: 920, column: 25, scope: !11857)
!11878 = !DILocation(line: 920, column: 30, scope: !11857)
!11879 = !DILocation(line: 921, column: 11, scope: !11857)
!11880 = !DILocation(line: 925, column: 32, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11853, file: !810, line: 923, column: 11)
!11882 = !DILocation(line: 925, column: 13, scope: !11881)
!11883 = !DILocation(line: 925, column: 25, scope: !11881)
!11884 = !DILocation(line: 925, column: 30, scope: !11881)
!11885 = !DILocation(line: 926, column: 13, scope: !11881)
!11886 = !DILocation(line: 926, column: 18, scope: !11881)
!11887 = !DILocation(line: 926, column: 32, scope: !11881)
!11888 = !DILocation(line: 928, column: 9, scope: !11783)
!11889 = !DILocation(line: 928, column: 17, scope: !11783)
!11890 = !DILocation(line: 928, column: 22, scope: !11783)
!11891 = !DILocation(line: 929, column: 9, scope: !11783)
!11892 = !DILocation(line: 929, column: 14, scope: !11783)
!11893 = !DILocation(line: 929, column: 28, scope: !11783)
!11894 = !DILocation(line: 930, column: 7, scope: !11783)
!11895 = !DILocation(line: 865, column: 64, scope: !11773)
!11896 = !DILocation(line: 865, column: 3, scope: !11773)
!11897 = distinct !{!11897, !11777, !11898}
!11898 = !DILocation(line: 930, column: 7, scope: !11768)
!11899 = !DILocation(line: 931, column: 3, scope: !11752)
!11900 = !DILocation(line: 932, column: 1, scope: !11752)
!11901 = distinct !DISubprogram(name: "free_entry", scope: !810, file: !810, line: 776, type: !11902, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11902 = !DISubroutineType(types: !11903)
!11903 = !{null, !853, !813}
!11904 = !DILocalVariable(name: "table", arg: 1, scope: !11901, file: !810, line: 776, type: !853)
!11905 = !DILocation(line: 776, column: 25, scope: !11901)
!11906 = !DILocalVariable(name: "entry", arg: 2, scope: !11901, file: !810, line: 776, type: !813)
!11907 = !DILocation(line: 776, column: 51, scope: !11901)
!11908 = !DILocation(line: 778, column: 3, scope: !11901)
!11909 = !DILocation(line: 778, column: 10, scope: !11901)
!11910 = !DILocation(line: 778, column: 15, scope: !11901)
!11911 = !DILocation(line: 779, column: 17, scope: !11901)
!11912 = !DILocation(line: 779, column: 24, scope: !11901)
!11913 = !DILocation(line: 779, column: 3, scope: !11901)
!11914 = !DILocation(line: 779, column: 10, scope: !11901)
!11915 = !DILocation(line: 779, column: 15, scope: !11901)
!11916 = !DILocation(line: 780, column: 28, scope: !11901)
!11917 = !DILocation(line: 780, column: 3, scope: !11901)
!11918 = !DILocation(line: 780, column: 10, scope: !11901)
!11919 = !DILocation(line: 780, column: 26, scope: !11901)
!11920 = !DILocation(line: 781, column: 1, scope: !11901)
!11921 = distinct !DISubprogram(name: "allocate_entry", scope: !810, file: !810, line: 751, type: !11922, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!813, !853}
!11924 = !DILocalVariable(name: "table", arg: 1, scope: !11921, file: !810, line: 751, type: !853)
!11925 = !DILocation(line: 751, column: 29, scope: !11921)
!11926 = !DILocalVariable(name: "new", scope: !11921, file: !810, line: 753, type: !813)
!11927 = !DILocation(line: 753, column: 22, scope: !11921)
!11928 = !DILocation(line: 755, column: 7, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11921, file: !810, line: 755, column: 7)
!11930 = !DILocation(line: 755, column: 14, scope: !11929)
!11931 = !DILocation(line: 755, column: 7, scope: !11921)
!11932 = !DILocation(line: 757, column: 13, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !810, line: 756, column: 5)
!11934 = !DILocation(line: 757, column: 20, scope: !11933)
!11935 = !DILocation(line: 757, column: 11, scope: !11933)
!11936 = !DILocation(line: 758, column: 32, scope: !11933)
!11937 = !DILocation(line: 758, column: 37, scope: !11933)
!11938 = !DILocation(line: 758, column: 7, scope: !11933)
!11939 = !DILocation(line: 758, column: 14, scope: !11933)
!11940 = !DILocation(line: 758, column: 30, scope: !11933)
!11941 = !DILocation(line: 759, column: 5, scope: !11933)
!11942 = !DILocation(line: 765, column: 13, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11929, file: !810, line: 761, column: 5)
!11944 = !DILocation(line: 765, column: 11, scope: !11943)
!11945 = !DILocation(line: 769, column: 10, scope: !11921)
!11946 = !DILocation(line: 769, column: 3, scope: !11921)
!11947 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !810, file: !810, line: 1038, type: !11948, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!5, !853, !685, !11950}
!11950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!11951 = !DILocalVariable(name: "table", arg: 1, scope: !11947, file: !810, line: 1038, type: !853)
!11952 = !DILocation(line: 1038, column: 36, scope: !11947)
!11953 = !DILocalVariable(name: "entry", arg: 2, scope: !11947, file: !810, line: 1038, type: !685)
!11954 = !DILocation(line: 1038, column: 55, scope: !11947)
!11955 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !11947, file: !810, line: 1039, type: !11950)
!11956 = !DILocation(line: 1039, column: 37, scope: !11947)
!11957 = !DILocalVariable(name: "data", scope: !11947, file: !810, line: 1041, type: !47)
!11958 = !DILocation(line: 1041, column: 9, scope: !11947)
!11959 = !DILocalVariable(name: "bucket", scope: !11947, file: !810, line: 1042, type: !813)
!11960 = !DILocation(line: 1042, column: 22, scope: !11947)
!11961 = !DILocation(line: 1047, column: 9, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11947, file: !810, line: 1047, column: 7)
!11963 = !DILocation(line: 1047, column: 7, scope: !11947)
!11964 = !DILocation(line: 1048, column: 5, scope: !11962)
!11965 = !DILocation(line: 1051, column: 32, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11947, file: !810, line: 1051, column: 7)
!11967 = !DILocation(line: 1051, column: 39, scope: !11966)
!11968 = !DILocation(line: 1051, column: 15, scope: !11966)
!11969 = !DILocation(line: 1051, column: 13, scope: !11966)
!11970 = !DILocation(line: 1051, column: 63, scope: !11966)
!11971 = !DILocation(line: 1051, column: 7, scope: !11947)
!11972 = !DILocation(line: 1053, column: 11, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !810, line: 1053, column: 11)
!11974 = distinct !DILexicalBlock(scope: !11966, file: !810, line: 1052, column: 5)
!11975 = !DILocation(line: 1053, column: 11, scope: !11974)
!11976 = !DILocation(line: 1054, column: 24, scope: !11973)
!11977 = !DILocation(line: 1054, column: 10, scope: !11973)
!11978 = !DILocation(line: 1054, column: 22, scope: !11973)
!11979 = !DILocation(line: 1054, column: 9, scope: !11973)
!11980 = !DILocation(line: 1055, column: 7, scope: !11974)
!11981 = !DILocation(line: 1063, column: 7, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11947, file: !810, line: 1063, column: 7)
!11983 = !DILocation(line: 1063, column: 14, scope: !11982)
!11984 = !DILocation(line: 1064, column: 9, scope: !11982)
!11985 = !DILocation(line: 1064, column: 16, scope: !11982)
!11986 = !DILocation(line: 1064, column: 24, scope: !11982)
!11987 = !DILocation(line: 1064, column: 43, scope: !11982)
!11988 = !DILocation(line: 1064, column: 50, scope: !11982)
!11989 = !DILocation(line: 1064, column: 41, scope: !11982)
!11990 = !DILocation(line: 1064, column: 7, scope: !11982)
!11991 = !DILocation(line: 1063, column: 7, scope: !11947)
!11992 = !DILocation(line: 1068, column: 21, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11982, file: !810, line: 1065, column: 5)
!11994 = !DILocation(line: 1068, column: 7, scope: !11993)
!11995 = !DILocation(line: 1069, column: 11, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11993, file: !810, line: 1069, column: 11)
!11997 = !DILocation(line: 1069, column: 18, scope: !11996)
!11998 = !DILocation(line: 1070, column: 13, scope: !11996)
!11999 = !DILocation(line: 1070, column: 20, scope: !11996)
!12000 = !DILocation(line: 1070, column: 28, scope: !11996)
!12001 = !DILocation(line: 1070, column: 47, scope: !11996)
!12002 = !DILocation(line: 1070, column: 54, scope: !11996)
!12003 = !DILocation(line: 1070, column: 45, scope: !11996)
!12004 = !DILocation(line: 1070, column: 11, scope: !11996)
!12005 = !DILocation(line: 1069, column: 11, scope: !11993)
!12006 = !DILocalVariable(name: "tuning", scope: !12007, file: !810, line: 1072, type: !825)
!12007 = distinct !DILexicalBlock(scope: !11996, file: !810, line: 1071, column: 9)
!12008 = !DILocation(line: 1072, column: 30, scope: !12007)
!12009 = !DILocation(line: 1072, column: 39, scope: !12007)
!12010 = !DILocation(line: 1072, column: 46, scope: !12007)
!12011 = !DILocalVariable(name: "candidate", scope: !12007, file: !810, line: 1073, type: !831)
!12012 = !DILocation(line: 1073, column: 17, scope: !12007)
!12013 = !DILocation(line: 1074, column: 14, scope: !12007)
!12014 = !DILocation(line: 1074, column: 22, scope: !12007)
!12015 = !DILocation(line: 1075, column: 17, scope: !12007)
!12016 = !DILocation(line: 1075, column: 24, scope: !12007)
!12017 = !DILocation(line: 1075, column: 36, scope: !12007)
!12018 = !DILocation(line: 1075, column: 44, scope: !12007)
!12019 = !DILocation(line: 1075, column: 34, scope: !12007)
!12020 = !DILocation(line: 1076, column: 17, scope: !12007)
!12021 = !DILocation(line: 1076, column: 24, scope: !12007)
!12022 = !DILocation(line: 1076, column: 36, scope: !12007)
!12023 = !DILocation(line: 1076, column: 44, scope: !12007)
!12024 = !DILocation(line: 1076, column: 34, scope: !12007)
!12025 = !DILocation(line: 1077, column: 19, scope: !12007)
!12026 = !DILocation(line: 1077, column: 27, scope: !12007)
!12027 = !DILocation(line: 1077, column: 17, scope: !12007)
!12028 = !DILocation(line: 1079, column: 27, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12007, file: !810, line: 1079, column: 15)
!12030 = !DILocation(line: 1079, column: 24, scope: !12029)
!12031 = !DILocation(line: 1079, column: 15, scope: !12007)
!12032 = !DILocation(line: 1080, column: 13, scope: !12029)
!12033 = !DILocation(line: 1083, column: 29, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12007, file: !810, line: 1083, column: 15)
!12035 = !DILocation(line: 1083, column: 36, scope: !12034)
!12036 = !DILocation(line: 1083, column: 16, scope: !12034)
!12037 = !DILocation(line: 1083, column: 15, scope: !12007)
!12038 = !DILocation(line: 1084, column: 13, scope: !12034)
!12039 = !DILocation(line: 1087, column: 32, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12007, file: !810, line: 1087, column: 15)
!12041 = !DILocation(line: 1087, column: 39, scope: !12040)
!12042 = !DILocation(line: 1087, column: 15, scope: !12040)
!12043 = !DILocation(line: 1087, column: 62, scope: !12040)
!12044 = !DILocation(line: 1087, column: 15, scope: !12007)
!12045 = !DILocation(line: 1088, column: 13, scope: !12040)
!12046 = !DILocation(line: 1089, column: 9, scope: !12007)
!12047 = !DILocation(line: 1090, column: 5, scope: !11993)
!12048 = !DILocation(line: 1094, column: 7, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !11947, file: !810, line: 1094, column: 7)
!12050 = !DILocation(line: 1094, column: 15, scope: !12049)
!12051 = !DILocation(line: 1094, column: 7, scope: !11947)
!12052 = !DILocalVariable(name: "new_entry", scope: !12053, file: !810, line: 1096, type: !813)
!12053 = distinct !DILexicalBlock(scope: !12049, file: !810, line: 1095, column: 5)
!12054 = !DILocation(line: 1096, column: 26, scope: !12053)
!12055 = !DILocation(line: 1096, column: 54, scope: !12053)
!12056 = !DILocation(line: 1096, column: 38, scope: !12053)
!12057 = !DILocation(line: 1098, column: 11, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12053, file: !810, line: 1098, column: 11)
!12059 = !DILocation(line: 1098, column: 21, scope: !12058)
!12060 = !DILocation(line: 1098, column: 11, scope: !12053)
!12061 = !DILocation(line: 1099, column: 9, scope: !12058)
!12062 = !DILocation(line: 1103, column: 34, scope: !12053)
!12063 = !DILocation(line: 1103, column: 7, scope: !12053)
!12064 = !DILocation(line: 1103, column: 18, scope: !12053)
!12065 = !DILocation(line: 1103, column: 23, scope: !12053)
!12066 = !DILocation(line: 1104, column: 25, scope: !12053)
!12067 = !DILocation(line: 1104, column: 33, scope: !12053)
!12068 = !DILocation(line: 1104, column: 7, scope: !12053)
!12069 = !DILocation(line: 1104, column: 18, scope: !12053)
!12070 = !DILocation(line: 1104, column: 23, scope: !12053)
!12071 = !DILocation(line: 1105, column: 22, scope: !12053)
!12072 = !DILocation(line: 1105, column: 7, scope: !12053)
!12073 = !DILocation(line: 1105, column: 15, scope: !12053)
!12074 = !DILocation(line: 1105, column: 20, scope: !12053)
!12075 = !DILocation(line: 1106, column: 7, scope: !12053)
!12076 = !DILocation(line: 1106, column: 14, scope: !12053)
!12077 = !DILocation(line: 1106, column: 23, scope: !12053)
!12078 = !DILocation(line: 1107, column: 7, scope: !12053)
!12079 = !DILocation(line: 1112, column: 27, scope: !11947)
!12080 = !DILocation(line: 1112, column: 3, scope: !11947)
!12081 = !DILocation(line: 1112, column: 11, scope: !11947)
!12082 = !DILocation(line: 1112, column: 16, scope: !11947)
!12083 = !DILocation(line: 1113, column: 3, scope: !11947)
!12084 = !DILocation(line: 1113, column: 10, scope: !11947)
!12085 = !DILocation(line: 1113, column: 19, scope: !11947)
!12086 = !DILocation(line: 1114, column: 3, scope: !11947)
!12087 = !DILocation(line: 1114, column: 10, scope: !11947)
!12088 = !DILocation(line: 1114, column: 24, scope: !11947)
!12089 = !DILocation(line: 1116, column: 3, scope: !11947)
!12090 = !DILocation(line: 1117, column: 1, scope: !11947)
!12091 = distinct !DISubprogram(name: "hash_find_entry", scope: !810, file: !810, line: 790, type: !12092, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !804, retainedNodes: !295)
!12092 = !DISubroutineType(types: !12093)
!12093 = !{!47, !853, !685, !12094, !139}
!12094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!12095 = !DILocalVariable(name: "table", arg: 1, scope: !12091, file: !810, line: 790, type: !853)
!12096 = !DILocation(line: 790, column: 30, scope: !12091)
!12097 = !DILocalVariable(name: "entry", arg: 2, scope: !12091, file: !810, line: 790, type: !685)
!12098 = !DILocation(line: 790, column: 49, scope: !12091)
!12099 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12091, file: !810, line: 791, type: !12094)
!12100 = !DILocation(line: 791, column: 38, scope: !12091)
!12101 = !DILocalVariable(name: "delete", arg: 4, scope: !12091, file: !810, line: 791, type: !139)
!12102 = !DILocation(line: 791, column: 56, scope: !12091)
!12103 = !DILocalVariable(name: "bucket", scope: !12091, file: !810, line: 793, type: !813)
!12104 = !DILocation(line: 793, column: 22, scope: !12091)
!12105 = !DILocation(line: 793, column: 44, scope: !12091)
!12106 = !DILocation(line: 793, column: 51, scope: !12091)
!12107 = !DILocation(line: 793, column: 31, scope: !12091)
!12108 = !DILocalVariable(name: "cursor", scope: !12091, file: !810, line: 794, type: !813)
!12109 = !DILocation(line: 794, column: 22, scope: !12091)
!12110 = !DILocation(line: 796, column: 18, scope: !12091)
!12111 = !DILocation(line: 796, column: 4, scope: !12091)
!12112 = !DILocation(line: 796, column: 16, scope: !12091)
!12113 = !DILocation(line: 799, column: 7, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12091, file: !810, line: 799, column: 7)
!12115 = !DILocation(line: 799, column: 15, scope: !12114)
!12116 = !DILocation(line: 799, column: 20, scope: !12114)
!12117 = !DILocation(line: 799, column: 7, scope: !12091)
!12118 = !DILocation(line: 800, column: 5, scope: !12114)
!12119 = !DILocation(line: 803, column: 7, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12091, file: !810, line: 803, column: 7)
!12121 = !DILocation(line: 803, column: 16, scope: !12120)
!12122 = !DILocation(line: 803, column: 24, scope: !12120)
!12123 = !DILocation(line: 803, column: 13, scope: !12120)
!12124 = !DILocation(line: 803, column: 29, scope: !12120)
!12125 = !DILocation(line: 803, column: 32, scope: !12120)
!12126 = !DILocation(line: 803, column: 39, scope: !12120)
!12127 = !DILocation(line: 803, column: 51, scope: !12120)
!12128 = !DILocation(line: 803, column: 58, scope: !12120)
!12129 = !DILocation(line: 803, column: 66, scope: !12120)
!12130 = !DILocation(line: 803, column: 7, scope: !12091)
!12131 = !DILocalVariable(name: "data", scope: !12132, file: !810, line: 805, type: !47)
!12132 = distinct !DILexicalBlock(scope: !12120, file: !810, line: 804, column: 5)
!12133 = !DILocation(line: 805, column: 13, scope: !12132)
!12134 = !DILocation(line: 805, column: 20, scope: !12132)
!12135 = !DILocation(line: 805, column: 28, scope: !12132)
!12136 = !DILocation(line: 807, column: 11, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12132, file: !810, line: 807, column: 11)
!12138 = !DILocation(line: 807, column: 11, scope: !12132)
!12139 = !DILocation(line: 809, column: 15, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !810, line: 809, column: 15)
!12141 = distinct !DILexicalBlock(scope: !12137, file: !810, line: 808, column: 9)
!12142 = !DILocation(line: 809, column: 23, scope: !12140)
!12143 = !DILocation(line: 809, column: 15, scope: !12141)
!12144 = !DILocalVariable(name: "next", scope: !12145, file: !810, line: 811, type: !813)
!12145 = distinct !DILexicalBlock(scope: !12140, file: !810, line: 810, column: 13)
!12146 = !DILocation(line: 811, column: 34, scope: !12145)
!12147 = !DILocation(line: 811, column: 41, scope: !12145)
!12148 = !DILocation(line: 811, column: 49, scope: !12145)
!12149 = !DILocation(line: 815, column: 16, scope: !12145)
!12150 = !DILocation(line: 815, column: 26, scope: !12145)
!12151 = !DILocation(line: 815, column: 25, scope: !12145)
!12152 = !DILocation(line: 816, column: 27, scope: !12145)
!12153 = !DILocation(line: 816, column: 34, scope: !12145)
!12154 = !DILocation(line: 816, column: 15, scope: !12145)
!12155 = !DILocation(line: 817, column: 13, scope: !12145)
!12156 = !DILocation(line: 820, column: 15, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12140, file: !810, line: 819, column: 13)
!12158 = !DILocation(line: 820, column: 23, scope: !12157)
!12159 = !DILocation(line: 820, column: 28, scope: !12157)
!12160 = !DILocation(line: 822, column: 9, scope: !12141)
!12161 = !DILocation(line: 824, column: 14, scope: !12132)
!12162 = !DILocation(line: 824, column: 7, scope: !12132)
!12163 = !DILocation(line: 828, column: 17, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12091, file: !810, line: 828, column: 3)
!12165 = !DILocation(line: 828, column: 15, scope: !12164)
!12166 = !DILocation(line: 828, column: 8, scope: !12164)
!12167 = !DILocation(line: 828, column: 25, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !810, line: 828, column: 3)
!12169 = !DILocation(line: 828, column: 33, scope: !12168)
!12170 = !DILocation(line: 828, column: 3, scope: !12164)
!12171 = !DILocation(line: 830, column: 11, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !810, line: 830, column: 11)
!12173 = distinct !DILexicalBlock(scope: !12168, file: !810, line: 829, column: 5)
!12174 = !DILocation(line: 830, column: 20, scope: !12172)
!12175 = !DILocation(line: 830, column: 28, scope: !12172)
!12176 = !DILocation(line: 830, column: 34, scope: !12172)
!12177 = !DILocation(line: 830, column: 17, scope: !12172)
!12178 = !DILocation(line: 831, column: 11, scope: !12172)
!12179 = !DILocation(line: 831, column: 14, scope: !12172)
!12180 = !DILocation(line: 831, column: 21, scope: !12172)
!12181 = !DILocation(line: 831, column: 33, scope: !12172)
!12182 = !DILocation(line: 831, column: 40, scope: !12172)
!12183 = !DILocation(line: 831, column: 48, scope: !12172)
!12184 = !DILocation(line: 831, column: 54, scope: !12172)
!12185 = !DILocation(line: 830, column: 11, scope: !12173)
!12186 = !DILocalVariable(name: "data", scope: !12187, file: !810, line: 833, type: !47)
!12187 = distinct !DILexicalBlock(scope: !12172, file: !810, line: 832, column: 9)
!12188 = !DILocation(line: 833, column: 17, scope: !12187)
!12189 = !DILocation(line: 833, column: 24, scope: !12187)
!12190 = !DILocation(line: 833, column: 32, scope: !12187)
!12191 = !DILocation(line: 833, column: 38, scope: !12187)
!12192 = !DILocation(line: 835, column: 15, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12187, file: !810, line: 835, column: 15)
!12194 = !DILocation(line: 835, column: 15, scope: !12187)
!12195 = !DILocalVariable(name: "next", scope: !12196, file: !810, line: 837, type: !813)
!12196 = distinct !DILexicalBlock(scope: !12193, file: !810, line: 836, column: 13)
!12197 = !DILocation(line: 837, column: 34, scope: !12196)
!12198 = !DILocation(line: 837, column: 41, scope: !12196)
!12199 = !DILocation(line: 837, column: 49, scope: !12196)
!12200 = !DILocation(line: 841, column: 30, scope: !12196)
!12201 = !DILocation(line: 841, column: 36, scope: !12196)
!12202 = !DILocation(line: 841, column: 15, scope: !12196)
!12203 = !DILocation(line: 841, column: 23, scope: !12196)
!12204 = !DILocation(line: 841, column: 28, scope: !12196)
!12205 = !DILocation(line: 842, column: 27, scope: !12196)
!12206 = !DILocation(line: 842, column: 34, scope: !12196)
!12207 = !DILocation(line: 842, column: 15, scope: !12196)
!12208 = !DILocation(line: 843, column: 13, scope: !12196)
!12209 = !DILocation(line: 845, column: 18, scope: !12187)
!12210 = !DILocation(line: 845, column: 11, scope: !12187)
!12211 = !DILocation(line: 847, column: 5, scope: !12173)
!12212 = !DILocation(line: 828, column: 48, scope: !12168)
!12213 = !DILocation(line: 828, column: 56, scope: !12168)
!12214 = !DILocation(line: 828, column: 46, scope: !12168)
!12215 = !DILocation(line: 828, column: 3, scope: !12168)
!12216 = distinct !{!12216, !12170, !12217}
!12217 = !DILocation(line: 847, column: 5, scope: !12164)
!12218 = !DILocation(line: 850, column: 3, scope: !12091)
!12219 = !DILocation(line: 851, column: 1, scope: !12091)
!12220 = distinct !DISubprogram(name: "hash_insert", scope: !810, file: !810, line: 1126, type: !12221, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{!47, !853, !685}
!12223 = !DILocalVariable(name: "table", arg: 1, scope: !12220, file: !810, line: 1126, type: !853)
!12224 = !DILocation(line: 1126, column: 26, scope: !12220)
!12225 = !DILocalVariable(name: "entry", arg: 2, scope: !12220, file: !810, line: 1126, type: !685)
!12226 = !DILocation(line: 1126, column: 45, scope: !12220)
!12227 = !DILocalVariable(name: "matched_ent", scope: !12220, file: !810, line: 1128, type: !685)
!12228 = !DILocation(line: 1128, column: 15, scope: !12220)
!12229 = !DILocalVariable(name: "err", scope: !12220, file: !810, line: 1129, type: !5)
!12230 = !DILocation(line: 1129, column: 7, scope: !12220)
!12231 = !DILocation(line: 1129, column: 36, scope: !12220)
!12232 = !DILocation(line: 1129, column: 43, scope: !12220)
!12233 = !DILocation(line: 1129, column: 13, scope: !12220)
!12234 = !DILocation(line: 1130, column: 11, scope: !12220)
!12235 = !DILocation(line: 1130, column: 15, scope: !12220)
!12236 = !DILocation(line: 1132, column: 23, scope: !12220)
!12237 = !DILocation(line: 1132, column: 27, scope: !12220)
!12238 = !DILocation(line: 1132, column: 34, scope: !12220)
!12239 = !DILocation(line: 1132, column: 48, scope: !12220)
!12240 = !DILocation(line: 1130, column: 3, scope: !12220)
!12241 = distinct !DISubprogram(name: "hash_delete", scope: !810, file: !810, line: 1140, type: !12221, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !804, retainedNodes: !295)
!12242 = !DILocalVariable(name: "table", arg: 1, scope: !12241, file: !810, line: 1140, type: !853)
!12243 = !DILocation(line: 1140, column: 26, scope: !12241)
!12244 = !DILocalVariable(name: "entry", arg: 2, scope: !12241, file: !810, line: 1140, type: !685)
!12245 = !DILocation(line: 1140, column: 45, scope: !12241)
!12246 = !DILocalVariable(name: "data", scope: !12241, file: !810, line: 1142, type: !47)
!12247 = !DILocation(line: 1142, column: 9, scope: !12241)
!12248 = !DILocalVariable(name: "bucket", scope: !12241, file: !810, line: 1143, type: !813)
!12249 = !DILocation(line: 1143, column: 22, scope: !12241)
!12250 = !DILocation(line: 1145, column: 27, scope: !12241)
!12251 = !DILocation(line: 1145, column: 34, scope: !12241)
!12252 = !DILocation(line: 1145, column: 10, scope: !12241)
!12253 = !DILocation(line: 1145, column: 8, scope: !12241)
!12254 = !DILocation(line: 1146, column: 8, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12241, file: !810, line: 1146, column: 7)
!12256 = !DILocation(line: 1146, column: 7, scope: !12241)
!12257 = !DILocation(line: 1147, column: 5, scope: !12255)
!12258 = !DILocation(line: 1149, column: 3, scope: !12241)
!12259 = !DILocation(line: 1149, column: 10, scope: !12241)
!12260 = !DILocation(line: 1149, column: 19, scope: !12241)
!12261 = !DILocation(line: 1150, column: 8, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12241, file: !810, line: 1150, column: 7)
!12263 = !DILocation(line: 1150, column: 16, scope: !12262)
!12264 = !DILocation(line: 1150, column: 7, scope: !12241)
!12265 = !DILocation(line: 1152, column: 7, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12262, file: !810, line: 1151, column: 5)
!12267 = !DILocation(line: 1152, column: 14, scope: !12266)
!12268 = !DILocation(line: 1152, column: 28, scope: !12266)
!12269 = !DILocation(line: 1157, column: 11, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12266, file: !810, line: 1157, column: 11)
!12271 = !DILocation(line: 1157, column: 18, scope: !12270)
!12272 = !DILocation(line: 1158, column: 13, scope: !12270)
!12273 = !DILocation(line: 1158, column: 20, scope: !12270)
!12274 = !DILocation(line: 1158, column: 28, scope: !12270)
!12275 = !DILocation(line: 1158, column: 47, scope: !12270)
!12276 = !DILocation(line: 1158, column: 54, scope: !12270)
!12277 = !DILocation(line: 1158, column: 45, scope: !12270)
!12278 = !DILocation(line: 1158, column: 11, scope: !12270)
!12279 = !DILocation(line: 1157, column: 11, scope: !12266)
!12280 = !DILocation(line: 1162, column: 25, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12270, file: !810, line: 1159, column: 9)
!12282 = !DILocation(line: 1162, column: 11, scope: !12281)
!12283 = !DILocation(line: 1163, column: 15, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12281, file: !810, line: 1163, column: 15)
!12285 = !DILocation(line: 1163, column: 22, scope: !12284)
!12286 = !DILocation(line: 1164, column: 17, scope: !12284)
!12287 = !DILocation(line: 1164, column: 24, scope: !12284)
!12288 = !DILocation(line: 1164, column: 32, scope: !12284)
!12289 = !DILocation(line: 1164, column: 51, scope: !12284)
!12290 = !DILocation(line: 1164, column: 58, scope: !12284)
!12291 = !DILocation(line: 1164, column: 49, scope: !12284)
!12292 = !DILocation(line: 1164, column: 15, scope: !12284)
!12293 = !DILocation(line: 1163, column: 15, scope: !12281)
!12294 = !DILocalVariable(name: "tuning", scope: !12295, file: !810, line: 1166, type: !825)
!12295 = distinct !DILexicalBlock(scope: !12284, file: !810, line: 1165, column: 13)
!12296 = !DILocation(line: 1166, column: 34, scope: !12295)
!12297 = !DILocation(line: 1166, column: 43, scope: !12295)
!12298 = !DILocation(line: 1166, column: 50, scope: !12295)
!12299 = !DILocalVariable(name: "candidate", scope: !12295, file: !810, line: 1167, type: !52)
!12300 = !DILocation(line: 1167, column: 22, scope: !12295)
!12301 = !DILocation(line: 1168, column: 18, scope: !12295)
!12302 = !DILocation(line: 1168, column: 26, scope: !12295)
!12303 = !DILocation(line: 1169, column: 20, scope: !12295)
!12304 = !DILocation(line: 1169, column: 27, scope: !12295)
!12305 = !DILocation(line: 1169, column: 39, scope: !12295)
!12306 = !DILocation(line: 1169, column: 47, scope: !12295)
!12307 = !DILocation(line: 1169, column: 37, scope: !12295)
!12308 = !DILocation(line: 1170, column: 21, scope: !12295)
!12309 = !DILocation(line: 1170, column: 28, scope: !12295)
!12310 = !DILocation(line: 1170, column: 40, scope: !12295)
!12311 = !DILocation(line: 1170, column: 48, scope: !12295)
!12312 = !DILocation(line: 1170, column: 38, scope: !12295)
!12313 = !DILocation(line: 1171, column: 23, scope: !12295)
!12314 = !DILocation(line: 1171, column: 31, scope: !12295)
!12315 = !DILocation(line: 1171, column: 21, scope: !12295)
!12316 = !DILocation(line: 1168, column: 17, scope: !12295)
!12317 = !DILocation(line: 1173, column: 33, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12295, file: !810, line: 1173, column: 19)
!12319 = !DILocation(line: 1173, column: 40, scope: !12318)
!12320 = !DILocation(line: 1173, column: 20, scope: !12318)
!12321 = !DILocation(line: 1173, column: 19, scope: !12295)
!12322 = !DILocalVariable(name: "cursor", scope: !12323, file: !810, line: 1181, type: !813)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !810, line: 1174, column: 17)
!12324 = !DILocation(line: 1181, column: 38, scope: !12323)
!12325 = !DILocation(line: 1181, column: 47, scope: !12323)
!12326 = !DILocation(line: 1181, column: 54, scope: !12323)
!12327 = !DILocalVariable(name: "next", scope: !12323, file: !810, line: 1182, type: !813)
!12328 = !DILocation(line: 1182, column: 38, scope: !12323)
!12329 = !DILocation(line: 1183, column: 19, scope: !12323)
!12330 = !DILocation(line: 1183, column: 26, scope: !12323)
!12331 = !DILocation(line: 1185, column: 30, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12323, file: !810, line: 1184, column: 21)
!12333 = !DILocation(line: 1185, column: 38, scope: !12332)
!12334 = !DILocation(line: 1185, column: 28, scope: !12332)
!12335 = !DILocation(line: 1186, column: 29, scope: !12332)
!12336 = !DILocation(line: 1186, column: 23, scope: !12332)
!12337 = !DILocation(line: 1187, column: 32, scope: !12332)
!12338 = !DILocation(line: 1187, column: 30, scope: !12332)
!12339 = distinct !{!12339, !12329, !12340}
!12340 = !DILocation(line: 1188, column: 21, scope: !12323)
!12341 = !DILocation(line: 1189, column: 19, scope: !12323)
!12342 = !DILocation(line: 1189, column: 26, scope: !12323)
!12343 = !DILocation(line: 1189, column: 42, scope: !12323)
!12344 = !DILocation(line: 1191, column: 17, scope: !12323)
!12345 = !DILocation(line: 1192, column: 13, scope: !12295)
!12346 = !DILocation(line: 1193, column: 9, scope: !12281)
!12347 = !DILocation(line: 1194, column: 5, scope: !12266)
!12348 = !DILocation(line: 1196, column: 10, scope: !12241)
!12349 = !DILocation(line: 1196, column: 3, scope: !12241)
!12350 = !DILocation(line: 1197, column: 1, scope: !12241)
!12351 = distinct !DISubprogram(name: "triple_hash", scope: !12352, file: !12352, line: 34, type: !839, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1320, retainedNodes: !295)
!12352 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!12353 = !DILocalVariable(name: "x", arg: 1, scope: !12351, file: !12352, line: 34, type: !685)
!12354 = !DILocation(line: 34, column: 26, scope: !12351)
!12355 = !DILocalVariable(name: "table_size", arg: 2, scope: !12351, file: !12352, line: 34, type: !52)
!12356 = !DILocation(line: 34, column: 36, scope: !12351)
!12357 = !DILocalVariable(name: "p", scope: !12351, file: !12352, line: 36, type: !1323)
!12358 = !DILocation(line: 36, column: 26, scope: !12351)
!12359 = !DILocation(line: 36, column: 30, scope: !12351)
!12360 = !DILocalVariable(name: "tmp", scope: !12351, file: !12352, line: 37, type: !52)
!12361 = !DILocation(line: 37, column: 10, scope: !12351)
!12362 = !DILocation(line: 37, column: 26, scope: !12351)
!12363 = !DILocation(line: 37, column: 29, scope: !12351)
!12364 = !DILocation(line: 37, column: 35, scope: !12351)
!12365 = !DILocation(line: 37, column: 16, scope: !12351)
!12366 = !DILocation(line: 40, column: 11, scope: !12351)
!12367 = !DILocation(line: 40, column: 17, scope: !12351)
!12368 = !DILocation(line: 40, column: 20, scope: !12351)
!12369 = !DILocation(line: 40, column: 15, scope: !12351)
!12370 = !DILocation(line: 40, column: 30, scope: !12351)
!12371 = !DILocation(line: 40, column: 28, scope: !12351)
!12372 = !DILocation(line: 40, column: 3, scope: !12351)
!12373 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12352, file: !12352, line: 45, type: !839, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1320, retainedNodes: !295)
!12374 = !DILocalVariable(name: "x", arg: 1, scope: !12373, file: !12352, line: 45, type: !685)
!12375 = !DILocation(line: 45, column: 34, scope: !12373)
!12376 = !DILocalVariable(name: "table_size", arg: 2, scope: !12373, file: !12352, line: 45, type: !52)
!12377 = !DILocation(line: 45, column: 44, scope: !12373)
!12378 = !DILocalVariable(name: "p", scope: !12373, file: !12352, line: 47, type: !1323)
!12379 = !DILocation(line: 47, column: 26, scope: !12373)
!12380 = !DILocation(line: 47, column: 30, scope: !12373)
!12381 = !DILocation(line: 50, column: 10, scope: !12373)
!12382 = !DILocation(line: 50, column: 13, scope: !12373)
!12383 = !DILocation(line: 50, column: 22, scope: !12373)
!12384 = !DILocation(line: 50, column: 20, scope: !12373)
!12385 = !DILocation(line: 50, column: 3, scope: !12373)
!12386 = distinct !DISubprogram(name: "triple_compare", scope: !12352, file: !12352, line: 55, type: !844, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1320, retainedNodes: !295)
!12387 = !DILocalVariable(name: "x", arg: 1, scope: !12386, file: !12352, line: 55, type: !685)
!12388 = !DILocation(line: 55, column: 29, scope: !12386)
!12389 = !DILocalVariable(name: "y", arg: 2, scope: !12386, file: !12352, line: 55, type: !685)
!12390 = !DILocation(line: 55, column: 44, scope: !12386)
!12391 = !DILocalVariable(name: "a", scope: !12386, file: !12352, line: 57, type: !1323)
!12392 = !DILocation(line: 57, column: 26, scope: !12386)
!12393 = !DILocation(line: 57, column: 30, scope: !12386)
!12394 = !DILocalVariable(name: "b", scope: !12386, file: !12352, line: 58, type: !1323)
!12395 = !DILocation(line: 58, column: 26, scope: !12386)
!12396 = !DILocation(line: 58, column: 30, scope: !12386)
!12397 = !DILocation(line: 59, column: 11, scope: !12386)
!12398 = !DILocation(line: 59, column: 31, scope: !12386)
!12399 = !DILocation(line: 59, column: 45, scope: !12386)
!12400 = !DILocation(line: 59, column: 48, scope: !12386)
!12401 = !DILocation(line: 59, column: 54, scope: !12386)
!12402 = !DILocation(line: 59, column: 57, scope: !12386)
!12403 = !DILocation(line: 59, column: 34, scope: !12386)
!12404 = !DILocation(line: 0, scope: !12386)
!12405 = !DILocation(line: 59, column: 10, scope: !12386)
!12406 = !DILocation(line: 59, column: 3, scope: !12386)
!12407 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12352, file: !12352, line: 63, type: !844, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1320, retainedNodes: !295)
!12408 = !DILocalVariable(name: "x", arg: 1, scope: !12407, file: !12352, line: 63, type: !685)
!12409 = !DILocation(line: 63, column: 37, scope: !12407)
!12410 = !DILocalVariable(name: "y", arg: 2, scope: !12407, file: !12352, line: 63, type: !685)
!12411 = !DILocation(line: 63, column: 52, scope: !12407)
!12412 = !DILocalVariable(name: "a", scope: !12407, file: !12352, line: 65, type: !1323)
!12413 = !DILocation(line: 65, column: 26, scope: !12407)
!12414 = !DILocation(line: 65, column: 30, scope: !12407)
!12415 = !DILocalVariable(name: "b", scope: !12407, file: !12352, line: 66, type: !1323)
!12416 = !DILocation(line: 66, column: 26, scope: !12407)
!12417 = !DILocation(line: 66, column: 30, scope: !12407)
!12418 = !DILocation(line: 67, column: 11, scope: !12407)
!12419 = !DILocation(line: 67, column: 31, scope: !12407)
!12420 = !DILocation(line: 67, column: 34, scope: !12407)
!12421 = !DILocation(line: 0, scope: !12407)
!12422 = !DILocation(line: 67, column: 10, scope: !12407)
!12423 = !DILocation(line: 67, column: 3, scope: !12407)
!12424 = distinct !DISubprogram(name: "triple_free", scope: !12352, file: !12352, line: 72, type: !849, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1320, retainedNodes: !295)
!12425 = !DILocalVariable(name: "x", arg: 1, scope: !12424, file: !12352, line: 72, type: !47)
!12426 = !DILocation(line: 72, column: 20, scope: !12424)
!12427 = !DILocalVariable(name: "a", scope: !12424, file: !12352, line: 74, type: !1330)
!12428 = !DILocation(line: 74, column: 20, scope: !12424)
!12429 = !DILocation(line: 74, column: 24, scope: !12424)
!12430 = !DILocation(line: 75, column: 9, scope: !12424)
!12431 = !DILocation(line: 75, column: 12, scope: !12424)
!12432 = !DILocation(line: 75, column: 3, scope: !12424)
!12433 = !DILocation(line: 76, column: 9, scope: !12424)
!12434 = !DILocation(line: 76, column: 3, scope: !12424)
!12435 = !DILocation(line: 77, column: 1, scope: !12424)
!12436 = distinct !DISubprogram(name: "mkancesdirs", scope: !12437, file: !12437, line: 65, type: !12438, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1331, retainedNodes: !295)
!12437 = !DIFile(filename: "lib/mkancesdirs.c", directory: "/home/mohamad/clone/coreutils")
!12438 = !DISubroutineType(types: !12439)
!12439 = !{!627, !7, !12440, !12441, !47}
!12440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!12441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!12442 = !DILocalVariable(name: "file", arg: 1, scope: !12436, file: !12437, line: 65, type: !7)
!12443 = !DILocation(line: 65, column: 20, scope: !12436)
!12444 = !DILocalVariable(name: "wd", arg: 2, scope: !12436, file: !12437, line: 65, type: !12440)
!12445 = !DILocation(line: 65, column: 41, scope: !12436)
!12446 = !DILocalVariable(name: "make_dir", arg: 3, scope: !12436, file: !12437, line: 66, type: !12441)
!12447 = !DILocation(line: 66, column: 20, scope: !12436)
!12448 = !DILocalVariable(name: "make_dir_arg", arg: 4, scope: !12436, file: !12437, line: 67, type: !47)
!12449 = !DILocation(line: 67, column: 20, scope: !12436)
!12450 = !DILocalVariable(name: "sep", scope: !12436, file: !12437, line: 72, type: !7)
!12451 = !DILocation(line: 72, column: 9, scope: !12436)
!12452 = !DILocalVariable(name: "component", scope: !12436, file: !12437, line: 76, type: !7)
!12453 = !DILocation(line: 76, column: 9, scope: !12436)
!12454 = !DILocation(line: 76, column: 21, scope: !12436)
!12455 = !DILocalVariable(name: "p", scope: !12436, file: !12437, line: 78, type: !7)
!12456 = !DILocation(line: 78, column: 9, scope: !12436)
!12457 = !DILocation(line: 78, column: 13, scope: !12436)
!12458 = !DILocation(line: 78, column: 18, scope: !12436)
!12459 = !DILocalVariable(name: "c", scope: !12436, file: !12437, line: 79, type: !8)
!12460 = !DILocation(line: 79, column: 8, scope: !12436)
!12461 = !DILocalVariable(name: "made_dir", scope: !12436, file: !12437, line: 80, type: !139)
!12462 = !DILocation(line: 80, column: 8, scope: !12436)
!12463 = !DILocation(line: 88, column: 3, scope: !12436)
!12464 = !DILocation(line: 88, column: 17, scope: !12436)
!12465 = !DILocation(line: 88, column: 15, scope: !12436)
!12466 = !DILocation(line: 88, column: 13, scope: !12436)
!12467 = !DILocation(line: 89, column: 9, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12436, file: !12437, line: 89, column: 9)
!12469 = !DILocation(line: 89, column: 9, scope: !12436)
!12470 = !DILocation(line: 91, column: 15, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !12437, line: 91, column: 13)
!12472 = distinct !DILexicalBlock(scope: !12468, file: !12437, line: 90, column: 7)
!12473 = !DILocation(line: 91, column: 13, scope: !12472)
!12474 = !DILocation(line: 92, column: 17, scope: !12471)
!12475 = !DILocation(line: 92, column: 15, scope: !12471)
!12476 = !DILocation(line: 92, column: 11, scope: !12471)
!12477 = !DILocation(line: 93, column: 7, scope: !12472)
!12478 = !DILocation(line: 94, column: 14, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12468, file: !12437, line: 94, column: 14)
!12480 = !DILocation(line: 94, column: 26, scope: !12479)
!12481 = !DILocation(line: 94, column: 30, scope: !12479)
!12482 = !DILocation(line: 94, column: 29, scope: !12479)
!12483 = !DILocation(line: 94, column: 32, scope: !12479)
!12484 = !DILocation(line: 94, column: 35, scope: !12479)
!12485 = !DILocation(line: 94, column: 14, scope: !12468)
!12486 = !DILocation(line: 98, column: 16, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !12437, line: 98, column: 13)
!12488 = distinct !DILexicalBlock(scope: !12479, file: !12437, line: 95, column: 7)
!12489 = !DILocation(line: 98, column: 22, scope: !12487)
!12490 = !DILocation(line: 98, column: 20, scope: !12487)
!12491 = !DILocation(line: 98, column: 32, scope: !12487)
!12492 = !DILocation(line: 98, column: 37, scope: !12487)
!12493 = !DILocation(line: 98, column: 40, scope: !12487)
!12494 = !DILocation(line: 98, column: 53, scope: !12487)
!12495 = !DILocation(line: 98, column: 13, scope: !12488)
!12496 = !DILocalVariable(name: "make_dir_errno", scope: !12497, file: !12437, line: 100, type: !5)
!12497 = distinct !DILexicalBlock(scope: !12487, file: !12437, line: 99, column: 11)
!12498 = !DILocation(line: 100, column: 17, scope: !12497)
!12499 = !DILocalVariable(name: "savewd_chdir_options", scope: !12497, file: !12437, line: 101, type: !5)
!12500 = !DILocation(line: 101, column: 17, scope: !12497)
!12501 = !DILocalVariable(name: "chdir_result", scope: !12497, file: !12437, line: 102, type: !5)
!12502 = !DILocation(line: 102, column: 17, scope: !12497)
!12503 = !DILocation(line: 106, column: 14, scope: !12497)
!12504 = !DILocation(line: 106, column: 18, scope: !12497)
!12505 = !DILocation(line: 110, column: 17, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12497, file: !12437, line: 110, column: 17)
!12507 = !DILocation(line: 110, column: 23, scope: !12506)
!12508 = !DILocation(line: 110, column: 21, scope: !12506)
!12509 = !DILocation(line: 110, column: 33, scope: !12506)
!12510 = !DILocation(line: 111, column: 17, scope: !12506)
!12511 = !DILocation(line: 111, column: 20, scope: !12506)
!12512 = !DILocation(line: 111, column: 33, scope: !12506)
!12513 = !DILocation(line: 111, column: 40, scope: !12506)
!12514 = !DILocation(line: 111, column: 43, scope: !12506)
!12515 = !DILocation(line: 111, column: 56, scope: !12506)
!12516 = !DILocation(line: 110, column: 17, scope: !12497)
!12517 = !DILocation(line: 112, column: 24, scope: !12506)
!12518 = !DILocation(line: 112, column: 15, scope: !12506)
!12519 = !DILocation(line: 113, column: 22, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12506, file: !12437, line: 113, column: 22)
!12521 = !DILocation(line: 113, column: 32, scope: !12520)
!12522 = !DILocation(line: 113, column: 38, scope: !12520)
!12523 = !DILocation(line: 113, column: 49, scope: !12520)
!12524 = !DILocation(line: 113, column: 63, scope: !12520)
!12525 = !DILocation(line: 113, column: 22, scope: !12506)
!12526 = !DILocation(line: 114, column: 32, scope: !12520)
!12527 = !DILocation(line: 114, column: 30, scope: !12520)
!12528 = !DILocation(line: 114, column: 15, scope: !12520)
!12529 = !DILocation(line: 116, column: 24, scope: !12520)
!12530 = !DILocation(line: 118, column: 17, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12497, file: !12437, line: 118, column: 17)
!12532 = !DILocation(line: 118, column: 17, scope: !12497)
!12533 = !DILocation(line: 119, column: 36, scope: !12531)
!12534 = !DILocation(line: 119, column: 15, scope: !12531)
!12535 = !DILocation(line: 122, column: 29, scope: !12497)
!12536 = !DILocation(line: 122, column: 33, scope: !12497)
!12537 = !DILocation(line: 122, column: 44, scope: !12497)
!12538 = !DILocation(line: 122, column: 15, scope: !12497)
!12539 = !DILocation(line: 121, column: 26, scope: !12497)
!12540 = !DILocation(line: 126, column: 17, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12497, file: !12437, line: 126, column: 17)
!12542 = !DILocation(line: 126, column: 30, scope: !12541)
!12543 = !DILocation(line: 126, column: 17, scope: !12497)
!12544 = !DILocation(line: 127, column: 16, scope: !12541)
!12545 = !DILocation(line: 127, column: 20, scope: !12541)
!12546 = !DILocation(line: 127, column: 15, scope: !12541)
!12547 = !DILocation(line: 129, column: 17, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12497, file: !12437, line: 129, column: 17)
!12549 = !DILocation(line: 129, column: 30, scope: !12548)
!12550 = !DILocation(line: 129, column: 17, scope: !12497)
!12551 = !DILocation(line: 131, column: 21, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12437, line: 131, column: 21)
!12553 = distinct !DILexicalBlock(scope: !12548, file: !12437, line: 130, column: 15)
!12554 = !DILocation(line: 131, column: 36, scope: !12552)
!12555 = !DILocation(line: 131, column: 41, scope: !12552)
!12556 = !DILocation(line: 131, column: 44, scope: !12552)
!12557 = !DILocation(line: 131, column: 50, scope: !12552)
!12558 = !DILocation(line: 131, column: 21, scope: !12553)
!12559 = !DILocation(line: 132, column: 27, scope: !12552)
!12560 = !DILocation(line: 132, column: 19, scope: !12552)
!12561 = !DILocation(line: 132, column: 25, scope: !12552)
!12562 = !DILocation(line: 133, column: 24, scope: !12553)
!12563 = !DILocation(line: 133, column: 17, scope: !12553)
!12564 = !DILocation(line: 135, column: 11, scope: !12497)
!12565 = !DILocation(line: 137, column: 21, scope: !12488)
!12566 = !DILocation(line: 137, column: 19, scope: !12488)
!12567 = !DILocation(line: 138, column: 7, scope: !12488)
!12568 = distinct !{!12568, !12463, !12569}
!12569 = !DILocation(line: 138, column: 7, scope: !12436)
!12570 = !DILocation(line: 140, column: 10, scope: !12436)
!12571 = !DILocation(line: 140, column: 22, scope: !12436)
!12572 = !DILocation(line: 140, column: 20, scope: !12436)
!12573 = !DILocation(line: 140, column: 3, scope: !12436)
!12574 = !DILocation(line: 141, column: 1, scope: !12436)
!12575 = distinct !DISubprogram(name: "make_dir_parents", scope: !12576, file: !12576, line: 85, type: !12577, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1345, retainedNodes: !295)
!12576 = !DIFile(filename: "lib/mkdir-p.c", directory: "/home/mohamad/clone/coreutils")
!12577 = !DISubroutineType(types: !12578)
!12578 = !{!139, !7, !12579, !12441, !47, !136, !12580, !136, !124, !126, !139}
!12579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!12580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!12581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !12582)
!12582 = !{!12583, !12584, !12585, !12586, !12587, !12588, !12589, !12590, !12591, !12592, !12593, !12594, !12599, !12600, !12601}
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12581, file: !471, line: 48, baseType: !460, size: 64)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12581, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12581, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12581, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12581, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12581, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !12581, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12581, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12581, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12581, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12581, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12581, file: !471, line: 91, baseType: !12595, size: 128, offset: 576)
!12595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !12596)
!12596 = !{!12597, !12598}
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12595, file: !373, line: 122, baseType: !376, size: 64)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12595, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12581, file: !471, line: 92, baseType: !12595, size: 128, offset: 704)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12581, file: !471, line: 93, baseType: !12595, size: 128, offset: 832)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !12581, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!12602 = !DILocalVariable(name: "dir", arg: 1, scope: !12575, file: !12576, line: 85, type: !7)
!12603 = !DILocation(line: 85, column: 25, scope: !12575)
!12604 = !DILocalVariable(name: "wd", arg: 2, scope: !12575, file: !12576, line: 86, type: !12579)
!12605 = !DILocation(line: 86, column: 34, scope: !12575)
!12606 = !DILocalVariable(name: "make_ancestor", arg: 3, scope: !12575, file: !12576, line: 87, type: !12441)
!12607 = !DILocation(line: 87, column: 25, scope: !12575)
!12608 = !DILocalVariable(name: "options", arg: 4, scope: !12575, file: !12576, line: 88, type: !47)
!12609 = !DILocation(line: 88, column: 25, scope: !12575)
!12610 = !DILocalVariable(name: "mode", arg: 5, scope: !12575, file: !12576, line: 89, type: !136)
!12611 = !DILocation(line: 89, column: 26, scope: !12575)
!12612 = !DILocalVariable(name: "announce", arg: 6, scope: !12575, file: !12576, line: 90, type: !12580)
!12613 = !DILocation(line: 90, column: 26, scope: !12575)
!12614 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !12575, file: !12576, line: 91, type: !136)
!12615 = !DILocation(line: 91, column: 26, scope: !12575)
!12616 = !DILocalVariable(name: "owner", arg: 8, scope: !12575, file: !12576, line: 92, type: !124)
!12617 = !DILocation(line: 92, column: 25, scope: !12575)
!12618 = !DILocalVariable(name: "group", arg: 9, scope: !12575, file: !12576, line: 93, type: !126)
!12619 = !DILocation(line: 93, column: 25, scope: !12575)
!12620 = !DILocalVariable(name: "preserve_existing", arg: 10, scope: !12575, file: !12576, line: 94, type: !139)
!12621 = !DILocation(line: 94, column: 24, scope: !12575)
!12622 = !DILocalVariable(name: "mkdir_errno", scope: !12575, file: !12576, line: 96, type: !5)
!12623 = !DILocation(line: 96, column: 7, scope: !12575)
!12624 = !DILocation(line: 96, column: 22, scope: !12575)
!12625 = !DILocation(line: 96, column: 70, scope: !12575)
!12626 = !DILocation(line: 96, column: 56, scope: !12575)
!12627 = !DILocation(line: 98, column: 7, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12575, file: !12576, line: 98, column: 7)
!12629 = !DILocation(line: 98, column: 19, scope: !12628)
!12630 = !DILocation(line: 98, column: 7, scope: !12575)
!12631 = !DILocalVariable(name: "prefix_len", scope: !12632, file: !12576, line: 100, type: !627)
!12632 = distinct !DILexicalBlock(scope: !12628, file: !12576, line: 99, column: 5)
!12633 = !DILocation(line: 100, column: 17, scope: !12632)
!12634 = !DILocalVariable(name: "savewd_chdir_options", scope: !12632, file: !12576, line: 101, type: !5)
!12635 = !DILocation(line: 101, column: 11, scope: !12632)
!12636 = !DILocation(line: 103, column: 11, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12632, file: !12576, line: 103, column: 11)
!12638 = !DILocation(line: 103, column: 11, scope: !12632)
!12639 = !DILocation(line: 105, column: 37, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12637, file: !12576, line: 104, column: 9)
!12641 = !DILocation(line: 105, column: 42, scope: !12640)
!12642 = !DILocation(line: 105, column: 46, scope: !12640)
!12643 = !DILocation(line: 105, column: 61, scope: !12640)
!12644 = !DILocation(line: 105, column: 24, scope: !12640)
!12645 = !DILocation(line: 105, column: 22, scope: !12640)
!12646 = !DILocation(line: 106, column: 15, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12640, file: !12576, line: 106, column: 15)
!12648 = !DILocation(line: 106, column: 26, scope: !12647)
!12649 = !DILocation(line: 106, column: 15, scope: !12640)
!12650 = !DILocation(line: 108, column: 19, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12652, file: !12576, line: 108, column: 19)
!12652 = distinct !DILexicalBlock(scope: !12647, file: !12576, line: 107, column: 13)
!12653 = !DILocation(line: 108, column: 30, scope: !12651)
!12654 = !DILocation(line: 108, column: 19, scope: !12652)
!12655 = !DILocation(line: 109, column: 17, scope: !12651)
!12656 = !DILocation(line: 110, column: 29, scope: !12652)
!12657 = !DILocation(line: 110, column: 27, scope: !12652)
!12658 = !DILocation(line: 111, column: 13, scope: !12652)
!12659 = !DILocation(line: 112, column: 9, scope: !12640)
!12660 = !DILocation(line: 114, column: 16, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12632, file: !12576, line: 114, column: 11)
!12662 = !DILocation(line: 114, column: 13, scope: !12661)
!12663 = !DILocation(line: 114, column: 11, scope: !12632)
!12664 = !DILocalVariable(name: "keep_owner", scope: !12665, file: !12576, line: 121, type: !139)
!12665 = distinct !DILexicalBlock(scope: !12661, file: !12576, line: 115, column: 9)
!12666 = !DILocation(line: 121, column: 16, scope: !12665)
!12667 = !DILocation(line: 121, column: 29, scope: !12665)
!12668 = !DILocation(line: 121, column: 35, scope: !12665)
!12669 = !DILocation(line: 121, column: 49, scope: !12665)
!12670 = !DILocation(line: 121, column: 52, scope: !12665)
!12671 = !DILocation(line: 121, column: 58, scope: !12665)
!12672 = !DILocation(line: 0, scope: !12665)
!12673 = !DILocalVariable(name: "keep_special_mode_bits", scope: !12665, file: !12576, line: 122, type: !139)
!12674 = !DILocation(line: 122, column: 16, scope: !12665)
!12675 = !DILocation(line: 123, column: 15, scope: !12665)
!12676 = !DILocation(line: 123, column: 25, scope: !12665)
!12677 = !DILocation(line: 123, column: 51, scope: !12665)
!12678 = !DILocation(line: 123, column: 56, scope: !12665)
!12679 = !DILocation(line: 123, column: 48, scope: !12665)
!12680 = !DILocation(line: 123, column: 68, scope: !12665)
!12681 = !DILocalVariable(name: "mkdir_mode", scope: !12665, file: !12576, line: 124, type: !136)
!12682 = !DILocation(line: 124, column: 18, scope: !12665)
!12683 = !DILocation(line: 124, column: 31, scope: !12665)
!12684 = !DILocation(line: 125, column: 17, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12665, file: !12576, line: 125, column: 15)
!12686 = !DILocation(line: 125, column: 15, scope: !12665)
!12687 = !DILocation(line: 126, column: 24, scope: !12685)
!12688 = !DILocation(line: 126, column: 13, scope: !12685)
!12689 = !DILocation(line: 127, column: 22, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12685, file: !12576, line: 127, column: 20)
!12691 = !DILocation(line: 127, column: 20, scope: !12685)
!12692 = !DILocation(line: 128, column: 24, scope: !12690)
!12693 = !DILocation(line: 128, column: 13, scope: !12690)
!12694 = !DILocation(line: 130, column: 22, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12665, file: !12576, line: 130, column: 15)
!12696 = !DILocation(line: 130, column: 28, scope: !12695)
!12697 = !DILocation(line: 130, column: 26, scope: !12695)
!12698 = !DILocation(line: 130, column: 40, scope: !12695)
!12699 = !DILocation(line: 130, column: 15, scope: !12695)
!12700 = !DILocation(line: 130, column: 52, scope: !12695)
!12701 = !DILocation(line: 130, column: 15, scope: !12665)
!12702 = !DILocalVariable(name: "umask_must_be_ok", scope: !12703, file: !12576, line: 134, type: !139)
!12703 = distinct !DILexicalBlock(scope: !12695, file: !12576, line: 131, column: 13)
!12704 = !DILocation(line: 134, column: 20, scope: !12703)
!12705 = !DILocation(line: 134, column: 40, scope: !12703)
!12706 = !DILocation(line: 134, column: 47, scope: !12703)
!12707 = !DILocation(line: 134, column: 45, scope: !12703)
!12708 = !DILocation(line: 134, column: 57, scope: !12703)
!12709 = !DILocation(line: 134, column: 70, scope: !12703)
!12710 = !DILocation(line: 136, column: 15, scope: !12703)
!12711 = !DILocation(line: 136, column: 25, scope: !12703)
!12712 = !DILocation(line: 136, column: 30, scope: !12703)
!12713 = !DILocation(line: 137, column: 36, scope: !12703)
!12714 = !DILocation(line: 137, column: 49, scope: !12703)
!12715 = !DILocation(line: 137, column: 47, scope: !12703)
!12716 = !DILocation(line: 138, column: 38, scope: !12703)
!12717 = !DILocation(line: 138, column: 36, scope: !12703)
!12718 = !DILocation(line: 137, column: 35, scope: !12703)
!12719 = !DILocation(line: 137, column: 33, scope: !12703)
!12720 = !DILocation(line: 139, column: 36, scope: !12703)
!12721 = !DILocation(line: 140, column: 13, scope: !12703)
!12722 = !DILocation(line: 143, column: 29, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12695, file: !12576, line: 142, column: 13)
!12724 = !DILocation(line: 143, column: 27, scope: !12723)
!12725 = !DILocation(line: 144, column: 26, scope: !12723)
!12726 = !DILocation(line: 147, column: 15, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12665, file: !12576, line: 147, column: 15)
!12728 = !DILocation(line: 147, column: 15, scope: !12665)
!12729 = !DILocation(line: 149, column: 19, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !12576, line: 149, column: 19)
!12731 = distinct !DILexicalBlock(scope: !12727, file: !12576, line: 148, column: 13)
!12732 = !DILocation(line: 149, column: 31, scope: !12730)
!12733 = !DILocation(line: 149, column: 19, scope: !12731)
!12734 = !DILocation(line: 150, column: 17, scope: !12730)
!12735 = !DILocation(line: 151, column: 19, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12731, file: !12576, line: 151, column: 19)
!12737 = !DILocation(line: 151, column: 31, scope: !12736)
!12738 = !DILocation(line: 151, column: 41, scope: !12736)
!12739 = !DILocation(line: 151, column: 44, scope: !12736)
!12740 = !DILocation(line: 151, column: 19, scope: !12731)
!12741 = !DILocalVariable(name: "st", scope: !12742, file: !12576, line: 153, type: !12581)
!12742 = distinct !DILexicalBlock(scope: !12736, file: !12576, line: 152, column: 17)
!12743 = !DILocation(line: 153, column: 31, scope: !12742)
!12744 = !DILocation(line: 154, column: 29, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12742, file: !12576, line: 154, column: 23)
!12746 = !DILocation(line: 154, column: 35, scope: !12745)
!12747 = !DILocation(line: 154, column: 33, scope: !12745)
!12748 = !DILocation(line: 154, column: 23, scope: !12745)
!12749 = !DILocation(line: 154, column: 52, scope: !12745)
!12750 = !DILocation(line: 154, column: 23, scope: !12742)
!12751 = !DILocation(line: 156, column: 27, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !12576, line: 156, column: 27)
!12753 = distinct !DILexicalBlock(scope: !12745, file: !12576, line: 155, column: 21)
!12754 = !DILocation(line: 156, column: 27, scope: !12753)
!12755 = !DILocation(line: 157, column: 25, scope: !12752)
!12756 = !DILocation(line: 158, column: 21, scope: !12753)
!12757 = !DILocation(line: 159, column: 28, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12745, file: !12576, line: 159, column: 28)
!12759 = !DILocation(line: 159, column: 40, scope: !12758)
!12760 = !DILocation(line: 160, column: 28, scope: !12758)
!12761 = !DILocation(line: 160, column: 31, scope: !12758)
!12762 = !DILocation(line: 160, column: 37, scope: !12758)
!12763 = !DILocation(line: 160, column: 47, scope: !12758)
!12764 = !DILocation(line: 160, column: 50, scope: !12758)
!12765 = !DILocation(line: 160, column: 56, scope: !12758)
!12766 = !DILocation(line: 159, column: 28, scope: !12745)
!12767 = !DILocation(line: 162, column: 33, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12758, file: !12576, line: 161, column: 21)
!12769 = !DILocation(line: 162, column: 40, scope: !12768)
!12770 = !DILocation(line: 162, column: 68, scope: !12768)
!12771 = !DILocation(line: 162, column: 61, scope: !12768)
!12772 = !DILocation(line: 162, column: 23, scope: !12768)
!12773 = !DILocation(line: 163, column: 23, scope: !12768)
!12774 = !DILocation(line: 165, column: 17, scope: !12742)
!12775 = !DILocation(line: 166, column: 13, scope: !12731)
!12776 = !DILocalVariable(name: "open_result", scope: !12777, file: !12576, line: 169, type: !1359)
!12777 = distinct !DILexicalBlock(scope: !12727, file: !12576, line: 168, column: 13)
!12778 = !DILocation(line: 169, column: 19, scope: !12777)
!12779 = !DILocalVariable(name: "chdir_result", scope: !12777, file: !12576, line: 170, type: !5)
!12780 = !DILocation(line: 170, column: 19, scope: !12777)
!12781 = !DILocation(line: 171, column: 31, scope: !12777)
!12782 = !DILocation(line: 171, column: 35, scope: !12777)
!12783 = !DILocation(line: 171, column: 41, scope: !12777)
!12784 = !DILocation(line: 171, column: 39, scope: !12777)
!12785 = !DILocation(line: 172, column: 31, scope: !12777)
!12786 = !DILocation(line: 172, column: 53, scope: !12777)
!12787 = !DILocation(line: 171, column: 17, scope: !12777)
!12788 = !DILocation(line: 173, column: 19, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12777, file: !12576, line: 173, column: 19)
!12790 = !DILocation(line: 173, column: 32, scope: !12789)
!12791 = !DILocation(line: 173, column: 19, scope: !12777)
!12792 = !DILocation(line: 174, column: 17, scope: !12789)
!12793 = !DILocalVariable(name: "chdir_ok", scope: !12794, file: !12576, line: 177, type: !139)
!12794 = distinct !DILexicalBlock(scope: !12789, file: !12576, line: 176, column: 17)
!12795 = !DILocation(line: 177, column: 24, scope: !12794)
!12796 = !DILocation(line: 177, column: 36, scope: !12794)
!12797 = !DILocation(line: 177, column: 49, scope: !12794)
!12798 = !DILocalVariable(name: "subdir", scope: !12794, file: !12576, line: 178, type: !180)
!12799 = !DILocation(line: 178, column: 31, scope: !12794)
!12800 = !DILocation(line: 178, column: 41, scope: !12794)
!12801 = !DILocation(line: 178, column: 58, scope: !12794)
!12802 = !DILocation(line: 178, column: 64, scope: !12794)
!12803 = !DILocation(line: 178, column: 62, scope: !12794)
!12804 = !DILocation(line: 179, column: 36, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12794, file: !12576, line: 179, column: 23)
!12806 = !DILocation(line: 179, column: 52, scope: !12805)
!12807 = !DILocation(line: 179, column: 60, scope: !12805)
!12808 = !DILocation(line: 180, column: 36, scope: !12805)
!12809 = !DILocation(line: 180, column: 43, scope: !12805)
!12810 = !DILocation(line: 180, column: 50, scope: !12805)
!12811 = !DILocation(line: 180, column: 56, scope: !12805)
!12812 = !DILocation(line: 179, column: 23, scope: !12805)
!12813 = !DILocation(line: 181, column: 23, scope: !12805)
!12814 = !DILocation(line: 179, column: 23, scope: !12794)
!12815 = !DILocation(line: 182, column: 21, scope: !12805)
!12816 = !DILocation(line: 184, column: 23, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12794, file: !12576, line: 184, column: 23)
!12818 = !DILocation(line: 184, column: 35, scope: !12817)
!12819 = !DILocation(line: 185, column: 23, scope: !12817)
!12820 = !DILocation(line: 185, column: 27, scope: !12817)
!12821 = !DILocation(line: 185, column: 39, scope: !12817)
!12822 = !DILocation(line: 185, column: 49, scope: !12817)
!12823 = !DILocation(line: 185, column: 52, scope: !12817)
!12824 = !DILocation(line: 186, column: 27, scope: !12817)
!12825 = !DILocation(line: 186, column: 30, scope: !12817)
!12826 = !DILocation(line: 186, column: 36, scope: !12817)
!12827 = !DILocation(line: 184, column: 23, scope: !12794)
!12828 = !DILocation(line: 188, column: 33, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12817, file: !12576, line: 187, column: 21)
!12830 = !DILocation(line: 189, column: 30, scope: !12829)
!12831 = !DILocation(line: 192, column: 37, scope: !12829)
!12832 = !DILocation(line: 192, column: 30, scope: !12829)
!12833 = !DILocation(line: 188, column: 23, scope: !12829)
!12834 = !DILocation(line: 193, column: 23, scope: !12829)
!12835 = !DILocation(line: 197, column: 9, scope: !12665)
!12836 = !DILocation(line: 198, column: 5, scope: !12632)
!12837 = !DILocation(line: 200, column: 13, scope: !12575)
!12838 = !DILocation(line: 200, column: 26, scope: !12575)
!12839 = !DILocation(line: 200, column: 66, scope: !12575)
!12840 = !DILocation(line: 200, column: 59, scope: !12575)
!12841 = !DILocation(line: 200, column: 3, scope: !12575)
!12842 = !DILocation(line: 201, column: 3, scope: !12575)
!12843 = !DILocation(line: 202, column: 1, scope: !12575)
!12844 = distinct !DISubprogram(name: "mode_compile", scope: !1365, file: !1365, line: 134, type: !12845, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !295)
!12845 = !DISubroutineType(types: !12846)
!12846 = !{!1363, !180}
!12847 = !DILocalVariable(name: "mode_string", arg: 1, scope: !12844, file: !1365, line: 134, type: !180)
!12848 = !DILocation(line: 134, column: 27, scope: !12844)
!12849 = !DILocalVariable(name: "mc", scope: !12844, file: !1365, line: 137, type: !1363)
!12850 = !DILocation(line: 137, column: 23, scope: !12844)
!12851 = !DILocalVariable(name: "used", scope: !12844, file: !1365, line: 138, type: !52)
!12852 = !DILocation(line: 138, column: 10, scope: !12844)
!12853 = !DILocalVariable(name: "p", scope: !12844, file: !1365, line: 139, type: !180)
!12854 = !DILocation(line: 139, column: 15, scope: !12844)
!12855 = !DILocation(line: 141, column: 15, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12844, file: !1365, line: 141, column: 7)
!12857 = !DILocation(line: 141, column: 14, scope: !12856)
!12858 = !DILocation(line: 141, column: 11, scope: !12856)
!12859 = !DILocation(line: 141, column: 27, scope: !12856)
!12860 = !DILocation(line: 141, column: 31, scope: !12856)
!12861 = !DILocation(line: 141, column: 30, scope: !12856)
!12862 = !DILocation(line: 141, column: 43, scope: !12856)
!12863 = !DILocation(line: 141, column: 7, scope: !12844)
!12864 = !DILocalVariable(name: "octal_mode", scope: !12865, file: !1365, line: 143, type: !67)
!12865 = distinct !DILexicalBlock(scope: !12856, file: !1365, line: 142, column: 5)
!12866 = !DILocation(line: 143, column: 20, scope: !12865)
!12867 = !DILocalVariable(name: "mode", scope: !12865, file: !1365, line: 144, type: !136)
!12868 = !DILocation(line: 144, column: 14, scope: !12865)
!12869 = !DILocalVariable(name: "mentioned", scope: !12865, file: !1365, line: 145, type: !136)
!12870 = !DILocation(line: 145, column: 14, scope: !12865)
!12871 = !DILocation(line: 147, column: 11, scope: !12865)
!12872 = !DILocation(line: 147, column: 9, scope: !12865)
!12873 = !DILocation(line: 148, column: 7, scope: !12865)
!12874 = !DILocation(line: 150, column: 28, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12865, file: !1365, line: 149, column: 9)
!12876 = !DILocation(line: 150, column: 26, scope: !12875)
!12877 = !DILocation(line: 150, column: 43, scope: !12875)
!12878 = !DILocation(line: 150, column: 41, scope: !12875)
!12879 = !DILocation(line: 150, column: 39, scope: !12875)
!12880 = !DILocation(line: 150, column: 46, scope: !12875)
!12881 = !DILocation(line: 150, column: 22, scope: !12875)
!12882 = !DILocation(line: 151, column: 22, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12875, file: !1365, line: 151, column: 15)
!12884 = !DILocation(line: 151, column: 20, scope: !12883)
!12885 = !DILocation(line: 151, column: 15, scope: !12875)
!12886 = !DILocation(line: 152, column: 13, scope: !12883)
!12887 = !DILocation(line: 153, column: 9, scope: !12875)
!12888 = !DILocation(line: 154, column: 22, scope: !12865)
!12889 = !DILocation(line: 154, column: 21, scope: !12865)
!12890 = !DILocation(line: 154, column: 18, scope: !12865)
!12891 = !DILocation(line: 154, column: 24, scope: !12865)
!12892 = !DILocation(line: 154, column: 28, scope: !12865)
!12893 = !DILocation(line: 154, column: 27, scope: !12865)
!12894 = !DILocation(line: 154, column: 30, scope: !12865)
!12895 = !DILocation(line: 0, scope: !12865)
!12896 = distinct !{!12896, !12873, !12897}
!12897 = !DILocation(line: 154, column: 35, scope: !12865)
!12898 = !DILocation(line: 156, column: 12, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12865, file: !1365, line: 156, column: 11)
!12900 = !DILocation(line: 156, column: 11, scope: !12899)
!12901 = !DILocation(line: 156, column: 11, scope: !12865)
!12902 = !DILocation(line: 157, column: 9, scope: !12899)
!12903 = !DILocation(line: 159, column: 29, scope: !12865)
!12904 = !DILocation(line: 159, column: 14, scope: !12865)
!12905 = !DILocation(line: 159, column: 12, scope: !12865)
!12906 = !DILocation(line: 160, column: 20, scope: !12865)
!12907 = !DILocation(line: 160, column: 24, scope: !12865)
!12908 = !DILocation(line: 160, column: 22, scope: !12865)
!12909 = !DILocation(line: 160, column: 36, scope: !12865)
!12910 = !DILocation(line: 161, column: 23, scope: !12865)
!12911 = !DILocation(line: 161, column: 28, scope: !12865)
!12912 = !DILocation(line: 161, column: 51, scope: !12865)
!12913 = !DILocation(line: 161, column: 61, scope: !12865)
!12914 = !DILocation(line: 160, column: 17, scope: !12865)
!12915 = !DILocation(line: 163, column: 35, scope: !12865)
!12916 = !DILocation(line: 163, column: 41, scope: !12865)
!12917 = !DILocation(line: 163, column: 14, scope: !12865)
!12918 = !DILocation(line: 163, column: 7, scope: !12865)
!12919 = !DILocalVariable(name: "needed", scope: !12920, file: !1365, line: 168, type: !52)
!12920 = distinct !DILexicalBlock(scope: !12844, file: !1365, line: 167, column: 3)
!12921 = !DILocation(line: 168, column: 12, scope: !12920)
!12922 = !DILocation(line: 169, column: 14, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12920, file: !1365, line: 169, column: 5)
!12924 = !DILocation(line: 169, column: 12, scope: !12923)
!12925 = !DILocation(line: 169, column: 10, scope: !12923)
!12926 = !DILocation(line: 169, column: 28, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12923, file: !1365, line: 169, column: 5)
!12928 = !DILocation(line: 169, column: 27, scope: !12927)
!12929 = !DILocation(line: 169, column: 5, scope: !12923)
!12930 = !DILocation(line: 170, column: 19, scope: !12927)
!12931 = !DILocation(line: 170, column: 18, scope: !12927)
!12932 = !DILocation(line: 170, column: 21, scope: !12927)
!12933 = !DILocation(line: 170, column: 28, scope: !12927)
!12934 = !DILocation(line: 170, column: 32, scope: !12927)
!12935 = !DILocation(line: 170, column: 31, scope: !12927)
!12936 = !DILocation(line: 170, column: 34, scope: !12927)
!12937 = !DILocation(line: 170, column: 41, scope: !12927)
!12938 = !DILocation(line: 170, column: 45, scope: !12927)
!12939 = !DILocation(line: 170, column: 44, scope: !12927)
!12940 = !DILocation(line: 170, column: 47, scope: !12927)
!12941 = !DILocation(line: 170, column: 17, scope: !12927)
!12942 = !DILocation(line: 170, column: 14, scope: !12927)
!12943 = !DILocation(line: 170, column: 7, scope: !12927)
!12944 = !DILocation(line: 169, column: 32, scope: !12927)
!12945 = !DILocation(line: 169, column: 5, scope: !12927)
!12946 = distinct !{!12946, !12929, !12947}
!12947 = !DILocation(line: 170, column: 53, scope: !12923)
!12948 = !DILocation(line: 171, column: 20, scope: !12920)
!12949 = !DILocation(line: 171, column: 10, scope: !12920)
!12950 = !DILocation(line: 171, column: 8, scope: !12920)
!12951 = !DILocation(line: 176, column: 12, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12844, file: !1365, line: 176, column: 3)
!12953 = !DILocation(line: 176, column: 10, scope: !12952)
!12954 = !DILocation(line: 176, column: 8, scope: !12952)
!12955 = !DILocalVariable(name: "affected", scope: !12956, file: !1365, line: 179, type: !136)
!12956 = distinct !DILexicalBlock(scope: !12957, file: !1365, line: 177, column: 5)
!12957 = distinct !DILexicalBlock(scope: !12952, file: !1365, line: 176, column: 3)
!12958 = !DILocation(line: 179, column: 14, scope: !12956)
!12959 = !DILocation(line: 182, column: 7, scope: !12956)
!12960 = !DILocation(line: 183, column: 18, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !1365, line: 182, column: 7)
!12962 = distinct !DILexicalBlock(scope: !12956, file: !1365, line: 182, column: 7)
!12963 = !DILocation(line: 183, column: 17, scope: !12961)
!12964 = !DILocation(line: 183, column: 9, scope: !12961)
!12965 = !DILocation(line: 186, column: 13, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12961, file: !1365, line: 184, column: 11)
!12967 = !DILocation(line: 188, column: 22, scope: !12966)
!12968 = !DILocation(line: 189, column: 13, scope: !12966)
!12969 = !DILocation(line: 191, column: 22, scope: !12966)
!12970 = !DILocation(line: 192, column: 13, scope: !12966)
!12971 = !DILocation(line: 194, column: 22, scope: !12966)
!12972 = !DILocation(line: 195, column: 13, scope: !12966)
!12973 = !DILocation(line: 197, column: 22, scope: !12966)
!12974 = !DILocation(line: 198, column: 13, scope: !12966)
!12975 = !DILocation(line: 200, column: 13, scope: !12966)
!12976 = !DILocation(line: 201, column: 11, scope: !12966)
!12977 = !DILocation(line: 182, column: 16, scope: !12961)
!12978 = !DILocation(line: 182, column: 7, scope: !12961)
!12979 = distinct !{!12979, !12980, !12981}
!12980 = !DILocation(line: 182, column: 7, scope: !12962)
!12981 = !DILocation(line: 201, column: 11, scope: !12962)
!12982 = !DILabel(scope: !12956, name: "no_more_affected", file: !1365, line: 202)
!12983 = !DILocation(line: 202, column: 5, scope: !12956)
!12984 = !DILocation(line: 204, column: 7, scope: !12956)
!12985 = !DILocalVariable(name: "op", scope: !12986, file: !1365, line: 206, type: !8)
!12986 = distinct !DILexicalBlock(scope: !12956, file: !1365, line: 205, column: 9)
!12987 = !DILocation(line: 206, column: 16, scope: !12986)
!12988 = !DILocation(line: 206, column: 23, scope: !12986)
!12989 = !DILocation(line: 206, column: 21, scope: !12986)
!12990 = !DILocalVariable(name: "value", scope: !12986, file: !1365, line: 207, type: !136)
!12991 = !DILocation(line: 207, column: 18, scope: !12986)
!12992 = !DILocalVariable(name: "mentioned", scope: !12986, file: !1365, line: 208, type: !136)
!12993 = !DILocation(line: 208, column: 18, scope: !12986)
!12994 = !DILocalVariable(name: "flag", scope: !12986, file: !1365, line: 209, type: !8)
!12995 = !DILocation(line: 209, column: 16, scope: !12986)
!12996 = !DILocalVariable(name: "change", scope: !12986, file: !1365, line: 210, type: !1363)
!12997 = !DILocation(line: 210, column: 31, scope: !12986)
!12998 = !DILocation(line: 212, column: 20, scope: !12986)
!12999 = !DILocation(line: 212, column: 19, scope: !12986)
!13000 = !DILocation(line: 212, column: 11, scope: !12986)
!13001 = !DILocalVariable(name: "octal_mode", scope: !13002, file: !1365, line: 217, type: !67)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !1365, line: 216, column: 15)
!13003 = distinct !DILexicalBlock(scope: !12986, file: !1365, line: 213, column: 13)
!13004 = !DILocation(line: 217, column: 30, scope: !13002)
!13005 = !DILocation(line: 219, column: 17, scope: !13002)
!13006 = !DILocation(line: 221, column: 38, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13002, file: !1365, line: 220, column: 19)
!13008 = !DILocation(line: 221, column: 36, scope: !13007)
!13009 = !DILocation(line: 221, column: 53, scope: !13007)
!13010 = !DILocation(line: 221, column: 51, scope: !13007)
!13011 = !DILocation(line: 221, column: 49, scope: !13007)
!13012 = !DILocation(line: 221, column: 56, scope: !13007)
!13013 = !DILocation(line: 221, column: 32, scope: !13007)
!13014 = !DILocation(line: 222, column: 32, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13007, file: !1365, line: 222, column: 25)
!13016 = !DILocation(line: 222, column: 30, scope: !13015)
!13017 = !DILocation(line: 222, column: 25, scope: !13007)
!13018 = !DILocation(line: 223, column: 23, scope: !13015)
!13019 = !DILocation(line: 224, column: 19, scope: !13007)
!13020 = !DILocation(line: 225, column: 32, scope: !13002)
!13021 = !DILocation(line: 225, column: 31, scope: !13002)
!13022 = !DILocation(line: 225, column: 28, scope: !13002)
!13023 = !DILocation(line: 225, column: 34, scope: !13002)
!13024 = !DILocation(line: 225, column: 38, scope: !13002)
!13025 = !DILocation(line: 225, column: 37, scope: !13002)
!13026 = !DILocation(line: 225, column: 40, scope: !13002)
!13027 = !DILocation(line: 0, scope: !13002)
!13028 = distinct !{!13028, !13005, !13029}
!13029 = !DILocation(line: 225, column: 45, scope: !13002)
!13030 = !DILocation(line: 227, column: 21, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13002, file: !1365, line: 227, column: 21)
!13032 = !DILocation(line: 227, column: 30, scope: !13031)
!13033 = !DILocation(line: 227, column: 35, scope: !13031)
!13034 = !DILocation(line: 227, column: 34, scope: !13031)
!13035 = !DILocation(line: 227, column: 37, scope: !13031)
!13036 = !DILocation(line: 227, column: 41, scope: !13031)
!13037 = !DILocation(line: 227, column: 40, scope: !13031)
!13038 = !DILocation(line: 227, column: 43, scope: !13031)
!13039 = !DILocation(line: 227, column: 21, scope: !13002)
!13040 = !DILocation(line: 228, column: 19, scope: !13031)
!13041 = !DILocation(line: 229, column: 38, scope: !13002)
!13042 = !DILocation(line: 229, column: 26, scope: !13002)
!13043 = !DILocation(line: 230, column: 40, scope: !13002)
!13044 = !DILocation(line: 230, column: 25, scope: !13002)
!13045 = !DILocation(line: 230, column: 23, scope: !13002)
!13046 = !DILocation(line: 231, column: 22, scope: !13002)
!13047 = !DILocation(line: 232, column: 17, scope: !13002)
!13048 = !DILocation(line: 238, column: 21, scope: !13003)
!13049 = !DILocation(line: 239, column: 16, scope: !13003)
!13050 = !DILocation(line: 240, column: 15, scope: !13003)
!13051 = !DILocation(line: 244, column: 21, scope: !13003)
!13052 = !DILocation(line: 245, column: 16, scope: !13003)
!13053 = !DILocation(line: 246, column: 15, scope: !13003)
!13054 = !DILocation(line: 250, column: 21, scope: !13003)
!13055 = !DILocation(line: 251, column: 16, scope: !13003)
!13056 = !DILocation(line: 252, column: 15, scope: !13003)
!13057 = !DILocation(line: 255, column: 21, scope: !13003)
!13058 = !DILocation(line: 256, column: 20, scope: !13003)
!13059 = !DILocation(line: 258, column: 15, scope: !13003)
!13060 = !DILocation(line: 259, column: 26, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13062, file: !1365, line: 258, column: 15)
!13062 = distinct !DILexicalBlock(scope: !13003, file: !1365, line: 258, column: 15)
!13063 = !DILocation(line: 259, column: 25, scope: !13061)
!13064 = !DILocation(line: 259, column: 17, scope: !13061)
!13065 = !DILocation(line: 262, column: 27, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13061, file: !1365, line: 260, column: 19)
!13067 = !DILocation(line: 263, column: 21, scope: !13066)
!13068 = !DILocation(line: 265, column: 27, scope: !13066)
!13069 = !DILocation(line: 266, column: 21, scope: !13066)
!13070 = !DILocation(line: 268, column: 27, scope: !13066)
!13071 = !DILocation(line: 269, column: 21, scope: !13066)
!13072 = !DILocation(line: 271, column: 26, scope: !13066)
!13073 = !DILocation(line: 272, column: 21, scope: !13066)
!13074 = !DILocation(line: 275, column: 27, scope: !13066)
!13075 = !DILocation(line: 276, column: 21, scope: !13066)
!13076 = !DILocation(line: 279, column: 27, scope: !13066)
!13077 = !DILocation(line: 280, column: 21, scope: !13066)
!13078 = !DILocation(line: 282, column: 21, scope: !13066)
!13079 = !DILocation(line: 283, column: 19, scope: !13066)
!13080 = !DILocation(line: 258, column: 24, scope: !13061)
!13081 = !DILocation(line: 258, column: 15, scope: !13061)
!13082 = distinct !{!13082, !13083, !13084}
!13083 = !DILocation(line: 258, column: 15, scope: !13062)
!13084 = !DILocation(line: 283, column: 19, scope: !13062)
!13085 = !DILabel(scope: !13003, name: "no_more_values", file: !1365, line: 284)
!13086 = !DILocation(line: 284, column: 13, scope: !13003)
!13087 = !DILocation(line: 285, column: 13, scope: !13003)
!13088 = !DILocation(line: 287, column: 21, scope: !12986)
!13089 = !DILocation(line: 287, column: 28, scope: !12986)
!13090 = !DILocation(line: 287, column: 18, scope: !12986)
!13091 = !DILocation(line: 288, column: 24, scope: !12986)
!13092 = !DILocation(line: 288, column: 11, scope: !12986)
!13093 = !DILocation(line: 288, column: 19, scope: !12986)
!13094 = !DILocation(line: 288, column: 22, scope: !12986)
!13095 = !DILocation(line: 289, column: 26, scope: !12986)
!13096 = !DILocation(line: 289, column: 11, scope: !12986)
!13097 = !DILocation(line: 289, column: 19, scope: !12986)
!13098 = !DILocation(line: 289, column: 24, scope: !12986)
!13099 = !DILocation(line: 290, column: 30, scope: !12986)
!13100 = !DILocation(line: 290, column: 11, scope: !12986)
!13101 = !DILocation(line: 290, column: 19, scope: !12986)
!13102 = !DILocation(line: 290, column: 28, scope: !12986)
!13103 = !DILocation(line: 291, column: 27, scope: !12986)
!13104 = !DILocation(line: 291, column: 11, scope: !12986)
!13105 = !DILocation(line: 291, column: 19, scope: !12986)
!13106 = !DILocation(line: 291, column: 25, scope: !12986)
!13107 = !DILocation(line: 293, column: 14, scope: !12986)
!13108 = !DILocation(line: 293, column: 26, scope: !12986)
!13109 = !DILocation(line: 293, column: 38, scope: !12986)
!13110 = !DILocation(line: 293, column: 49, scope: !12986)
!13111 = !DILocation(line: 293, column: 60, scope: !12986)
!13112 = !DILocation(line: 293, column: 58, scope: !12986)
!13113 = !DILocation(line: 293, column: 68, scope: !12986)
!13114 = !DILocation(line: 292, column: 11, scope: !12986)
!13115 = !DILocation(line: 292, column: 19, scope: !12986)
!13116 = !DILocation(line: 292, column: 29, scope: !12986)
!13117 = !DILocation(line: 294, column: 9, scope: !12986)
!13118 = !DILocation(line: 295, column: 15, scope: !12956)
!13119 = !DILocation(line: 295, column: 14, scope: !12956)
!13120 = !DILocation(line: 295, column: 17, scope: !12956)
!13121 = !DILocation(line: 295, column: 24, scope: !12956)
!13122 = !DILocation(line: 295, column: 28, scope: !12956)
!13123 = !DILocation(line: 295, column: 27, scope: !12956)
!13124 = !DILocation(line: 295, column: 30, scope: !12956)
!13125 = !DILocation(line: 295, column: 37, scope: !12956)
!13126 = !DILocation(line: 295, column: 41, scope: !12956)
!13127 = !DILocation(line: 295, column: 40, scope: !12956)
!13128 = !DILocation(line: 295, column: 43, scope: !12956)
!13129 = distinct !{!13129, !12984, !13130}
!13130 = !DILocation(line: 295, column: 49, scope: !12956)
!13131 = !DILocation(line: 297, column: 12, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !12956, file: !1365, line: 297, column: 11)
!13133 = !DILocation(line: 297, column: 11, scope: !13132)
!13134 = !DILocation(line: 297, column: 14, scope: !13132)
!13135 = !DILocation(line: 297, column: 11, scope: !12956)
!13136 = !DILocation(line: 298, column: 9, scope: !13132)
!13137 = !DILocation(line: 299, column: 5, scope: !12956)
!13138 = !DILocation(line: 176, column: 28, scope: !12957)
!13139 = !DILocation(line: 176, column: 3, scope: !12957)
!13140 = distinct !{!13140, !13141, !13142}
!13141 = !DILocation(line: 176, column: 3, scope: !12952)
!13142 = !DILocation(line: 299, column: 5, scope: !12952)
!13143 = !DILocation(line: 301, column: 8, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !12844, file: !1365, line: 301, column: 7)
!13145 = !DILocation(line: 301, column: 7, scope: !13144)
!13146 = !DILocation(line: 301, column: 10, scope: !13144)
!13147 = !DILocation(line: 301, column: 7, scope: !12844)
!13148 = !DILocation(line: 303, column: 7, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13144, file: !1365, line: 302, column: 5)
!13150 = !DILocation(line: 303, column: 10, scope: !13149)
!13151 = !DILocation(line: 303, column: 16, scope: !13149)
!13152 = !DILocation(line: 303, column: 21, scope: !13149)
!13153 = !DILocation(line: 304, column: 14, scope: !13149)
!13154 = !DILocation(line: 304, column: 7, scope: !13149)
!13155 = !DILocation(line: 301, column: 13, scope: !13144)
!13156 = !DILabel(scope: !12844, name: "invalid", file: !1365, line: 307)
!13157 = !DILocation(line: 307, column: 1, scope: !12844)
!13158 = !DILocation(line: 308, column: 9, scope: !12844)
!13159 = !DILocation(line: 308, column: 3, scope: !12844)
!13160 = !DILocation(line: 309, column: 3, scope: !12844)
!13161 = !DILocation(line: 310, column: 1, scope: !12844)
!13162 = distinct !DISubprogram(name: "octal_to_mode", scope: !1365, file: !1365, line: 54, type: !13163, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !295)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{!136, !67}
!13165 = !DILocalVariable(name: "octal", arg: 1, scope: !13162, file: !1365, line: 54, type: !67)
!13166 = !DILocation(line: 54, column: 29, scope: !13162)
!13167 = !DILocation(line: 62, column: 13, scope: !13162)
!13168 = !DILocation(line: 58, column: 3, scope: !13162)
!13169 = distinct !DISubprogram(name: "make_node_op_equals", scope: !1365, file: !1365, line: 112, type: !13170, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1360, retainedNodes: !295)
!13170 = !DISubroutineType(types: !13171)
!13171 = !{!1363, !136, !136}
!13172 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13169, file: !1365, line: 112, type: !136)
!13173 = !DILocation(line: 112, column: 29, scope: !13169)
!13174 = !DILocalVariable(name: "mentioned", arg: 2, scope: !13169, file: !1365, line: 112, type: !136)
!13175 = !DILocation(line: 112, column: 46, scope: !13169)
!13176 = !DILocalVariable(name: "p", scope: !13169, file: !1365, line: 114, type: !1363)
!13177 = !DILocation(line: 114, column: 23, scope: !13169)
!13178 = !DILocation(line: 114, column: 27, scope: !13169)
!13179 = !DILocation(line: 115, column: 3, scope: !13169)
!13180 = !DILocation(line: 115, column: 6, scope: !13169)
!13181 = !DILocation(line: 115, column: 9, scope: !13169)
!13182 = !DILocation(line: 116, column: 3, scope: !13169)
!13183 = !DILocation(line: 116, column: 6, scope: !13169)
!13184 = !DILocation(line: 116, column: 11, scope: !13169)
!13185 = !DILocation(line: 117, column: 3, scope: !13169)
!13186 = !DILocation(line: 117, column: 6, scope: !13169)
!13187 = !DILocation(line: 117, column: 15, scope: !13169)
!13188 = !DILocation(line: 118, column: 14, scope: !13169)
!13189 = !DILocation(line: 118, column: 3, scope: !13169)
!13190 = !DILocation(line: 118, column: 6, scope: !13169)
!13191 = !DILocation(line: 118, column: 12, scope: !13169)
!13192 = !DILocation(line: 119, column: 18, scope: !13169)
!13193 = !DILocation(line: 119, column: 3, scope: !13169)
!13194 = !DILocation(line: 119, column: 6, scope: !13169)
!13195 = !DILocation(line: 119, column: 16, scope: !13169)
!13196 = !DILocation(line: 120, column: 3, scope: !13169)
!13197 = !DILocation(line: 120, column: 8, scope: !13169)
!13198 = !DILocation(line: 120, column: 13, scope: !13169)
!13199 = !DILocation(line: 121, column: 10, scope: !13169)
!13200 = !DILocation(line: 121, column: 3, scope: !13169)
!13201 = distinct !DISubprogram(name: "mode_create_from_ref", scope: !1365, file: !1365, line: 316, type: !12845, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !295)
!13202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !13203)
!13203 = !{!13204, !13205, !13206, !13207, !13208, !13209, !13210, !13211, !13212, !13213, !13214, !13215, !13220, !13221, !13222}
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13202, file: !471, line: 48, baseType: !460, size: 64)
!13205 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13202, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13202, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13202, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13202, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13202, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13202, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13202, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13202, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13202, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13202, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13202, file: !471, line: 91, baseType: !13216, size: 128, offset: 576)
!13216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !13217)
!13217 = !{!13218, !13219}
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13216, file: !373, line: 122, baseType: !376, size: 64)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13216, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13202, file: !471, line: 92, baseType: !13216, size: 128, offset: 704)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13202, file: !471, line: 93, baseType: !13216, size: 128, offset: 832)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13202, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!13223 = !DILocalVariable(name: "ref_file", arg: 1, scope: !13201, file: !1365, line: 316, type: !180)
!13224 = !DILocation(line: 316, column: 35, scope: !13201)
!13225 = !DILocalVariable(name: "ref_stats", scope: !13201, file: !1365, line: 318, type: !13202)
!13226 = !DILocation(line: 318, column: 15, scope: !13201)
!13227 = !DILocation(line: 320, column: 13, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13201, file: !1365, line: 320, column: 7)
!13229 = !DILocation(line: 320, column: 7, scope: !13228)
!13230 = !DILocation(line: 320, column: 35, scope: !13228)
!13231 = !DILocation(line: 320, column: 7, scope: !13201)
!13232 = !DILocation(line: 321, column: 5, scope: !13228)
!13233 = !DILocation(line: 322, column: 41, scope: !13201)
!13234 = !DILocation(line: 322, column: 10, scope: !13201)
!13235 = !DILocation(line: 322, column: 3, scope: !13201)
!13236 = !DILocation(line: 323, column: 1, scope: !13201)
!13237 = distinct !DISubprogram(name: "mode_adjust", scope: !1365, file: !1365, line: 339, type: !13238, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !295)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!136, !136, !139, !136, !13240, !13242}
!13240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13241, size: 64)
!13241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!13242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!13243 = !DILocalVariable(name: "oldmode", arg: 1, scope: !13237, file: !1365, line: 339, type: !136)
!13244 = !DILocation(line: 339, column: 21, scope: !13237)
!13245 = !DILocalVariable(name: "dir", arg: 2, scope: !13237, file: !1365, line: 339, type: !139)
!13246 = !DILocation(line: 339, column: 35, scope: !13237)
!13247 = !DILocalVariable(name: "umask_value", arg: 3, scope: !13237, file: !1365, line: 339, type: !136)
!13248 = !DILocation(line: 339, column: 47, scope: !13237)
!13249 = !DILocalVariable(name: "changes", arg: 4, scope: !13237, file: !1365, line: 340, type: !13240)
!13250 = !DILocation(line: 340, column: 40, scope: !13237)
!13251 = !DILocalVariable(name: "pmode_bits", arg: 5, scope: !13237, file: !1365, line: 340, type: !13242)
!13252 = !DILocation(line: 340, column: 57, scope: !13237)
!13253 = !DILocalVariable(name: "newmode", scope: !13237, file: !1365, line: 343, type: !136)
!13254 = !DILocation(line: 343, column: 10, scope: !13237)
!13255 = !DILocation(line: 343, column: 20, scope: !13237)
!13256 = !DILocation(line: 343, column: 28, scope: !13237)
!13257 = !DILocalVariable(name: "mode_bits", scope: !13237, file: !1365, line: 346, type: !136)
!13258 = !DILocation(line: 346, column: 10, scope: !13237)
!13259 = !DILocation(line: 348, column: 3, scope: !13237)
!13260 = !DILocation(line: 348, column: 10, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !1365, line: 348, column: 3)
!13262 = distinct !DILexicalBlock(scope: !13237, file: !1365, line: 348, column: 3)
!13263 = !DILocation(line: 348, column: 19, scope: !13261)
!13264 = !DILocation(line: 348, column: 24, scope: !13261)
!13265 = !DILocation(line: 348, column: 3, scope: !13262)
!13266 = !DILocalVariable(name: "affected", scope: !13267, file: !1365, line: 350, type: !136)
!13267 = distinct !DILexicalBlock(scope: !13261, file: !1365, line: 349, column: 5)
!13268 = !DILocation(line: 350, column: 14, scope: !13267)
!13269 = !DILocation(line: 350, column: 25, scope: !13267)
!13270 = !DILocation(line: 350, column: 34, scope: !13267)
!13271 = !DILocalVariable(name: "omit_change", scope: !13267, file: !1365, line: 351, type: !136)
!13272 = !DILocation(line: 351, column: 14, scope: !13267)
!13273 = !DILocation(line: 352, column: 10, scope: !13267)
!13274 = !DILocation(line: 352, column: 43, scope: !13267)
!13275 = !DILocation(line: 352, column: 52, scope: !13267)
!13276 = !DILocation(line: 352, column: 41, scope: !13267)
!13277 = !DILocation(line: 352, column: 39, scope: !13267)
!13278 = !DILocalVariable(name: "value", scope: !13267, file: !1365, line: 353, type: !136)
!13279 = !DILocation(line: 353, column: 14, scope: !13267)
!13280 = !DILocation(line: 353, column: 22, scope: !13267)
!13281 = !DILocation(line: 353, column: 31, scope: !13267)
!13282 = !DILocation(line: 355, column: 15, scope: !13267)
!13283 = !DILocation(line: 355, column: 24, scope: !13267)
!13284 = !DILocation(line: 355, column: 7, scope: !13267)
!13285 = !DILocation(line: 358, column: 11, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13267, file: !1365, line: 356, column: 9)
!13287 = !DILocation(line: 362, column: 20, scope: !13286)
!13288 = !DILocation(line: 362, column: 17, scope: !13286)
!13289 = !DILocation(line: 365, column: 22, scope: !13286)
!13290 = !DILocation(line: 365, column: 28, scope: !13286)
!13291 = !DILocation(line: 367, column: 24, scope: !13286)
!13292 = !DILocation(line: 367, column: 30, scope: !13286)
!13293 = !DILocation(line: 367, column: 21, scope: !13286)
!13294 = !DILocation(line: 369, column: 24, scope: !13286)
!13295 = !DILocation(line: 369, column: 30, scope: !13286)
!13296 = !DILocation(line: 369, column: 21, scope: !13286)
!13297 = !DILocation(line: 365, column: 17, scope: !13286)
!13298 = !DILocation(line: 371, column: 11, scope: !13286)
!13299 = !DILocation(line: 376, column: 16, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13286, file: !1365, line: 376, column: 15)
!13301 = !DILocation(line: 376, column: 24, scope: !13300)
!13302 = !DILocation(line: 376, column: 59, scope: !13300)
!13303 = !DILocation(line: 376, column: 57, scope: !13300)
!13304 = !DILocation(line: 376, column: 15, scope: !13286)
!13305 = !DILocation(line: 377, column: 19, scope: !13300)
!13306 = !DILocation(line: 377, column: 13, scope: !13300)
!13307 = !DILocation(line: 378, column: 11, scope: !13286)
!13308 = !DILocation(line: 384, column: 17, scope: !13267)
!13309 = !DILocation(line: 384, column: 28, scope: !13267)
!13310 = !DILocation(line: 384, column: 40, scope: !13267)
!13311 = !DILocation(line: 384, column: 39, scope: !13267)
!13312 = !DILocation(line: 384, column: 57, scope: !13267)
!13313 = !DILocation(line: 384, column: 55, scope: !13267)
!13314 = !DILocation(line: 384, column: 53, scope: !13267)
!13315 = !DILocation(line: 384, column: 13, scope: !13267)
!13316 = !DILocation(line: 386, column: 15, scope: !13267)
!13317 = !DILocation(line: 386, column: 24, scope: !13267)
!13318 = !DILocation(line: 386, column: 7, scope: !13267)
!13319 = !DILocalVariable(name: "preserved", scope: !13320, file: !1365, line: 393, type: !136)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !1365, line: 392, column: 11)
!13321 = distinct !DILexicalBlock(scope: !13267, file: !1365, line: 387, column: 9)
!13322 = !DILocation(line: 393, column: 20, scope: !13320)
!13323 = !DILocation(line: 393, column: 33, scope: !13320)
!13324 = !DILocation(line: 393, column: 45, scope: !13320)
!13325 = !DILocation(line: 393, column: 44, scope: !13320)
!13326 = !DILocation(line: 393, column: 61, scope: !13320)
!13327 = !DILocation(line: 393, column: 59, scope: !13320)
!13328 = !DILocation(line: 394, column: 45, scope: !13320)
!13329 = !DILocation(line: 394, column: 44, scope: !13320)
!13330 = !DILocation(line: 394, column: 42, scope: !13320)
!13331 = !DILocation(line: 394, column: 23, scope: !13320)
!13332 = !DILocation(line: 395, column: 24, scope: !13320)
!13333 = !DILocation(line: 395, column: 34, scope: !13320)
!13334 = !DILocation(line: 395, column: 32, scope: !13320)
!13335 = !DILocation(line: 395, column: 47, scope: !13320)
!13336 = !DILocation(line: 395, column: 45, scope: !13320)
!13337 = !DILocation(line: 395, column: 21, scope: !13320)
!13338 = !DILocation(line: 396, column: 13, scope: !13320)
!13339 = !DILocation(line: 400, column: 24, scope: !13321)
!13340 = !DILocation(line: 400, column: 21, scope: !13321)
!13341 = !DILocation(line: 401, column: 22, scope: !13321)
!13342 = !DILocation(line: 401, column: 19, scope: !13321)
!13343 = !DILocation(line: 402, column: 11, scope: !13321)
!13344 = !DILocation(line: 405, column: 24, scope: !13321)
!13345 = !DILocation(line: 405, column: 21, scope: !13321)
!13346 = !DILocation(line: 406, column: 23, scope: !13321)
!13347 = !DILocation(line: 406, column: 22, scope: !13321)
!13348 = !DILocation(line: 406, column: 19, scope: !13321)
!13349 = !DILocation(line: 407, column: 11, scope: !13321)
!13350 = !DILocation(line: 409, column: 5, scope: !13267)
!13351 = !DILocation(line: 348, column: 45, scope: !13261)
!13352 = !DILocation(line: 348, column: 3, scope: !13261)
!13353 = distinct !{!13353, !13265, !13354}
!13354 = !DILocation(line: 409, column: 5, scope: !13262)
!13355 = !DILocation(line: 411, column: 7, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13237, file: !1365, line: 411, column: 7)
!13357 = !DILocation(line: 411, column: 7, scope: !13237)
!13358 = !DILocation(line: 412, column: 19, scope: !13356)
!13359 = !DILocation(line: 412, column: 6, scope: !13356)
!13360 = !DILocation(line: 412, column: 17, scope: !13356)
!13361 = !DILocation(line: 412, column: 5, scope: !13356)
!13362 = !DILocation(line: 413, column: 10, scope: !13237)
!13363 = !DILocation(line: 413, column: 3, scope: !13237)
!13364 = distinct !DISubprogram(name: "opendirat", scope: !13365, file: !13365, line: 36, type: !13366, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1372, retainedNodes: !295)
!13365 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!13366 = !DISubroutineType(types: !13367)
!13367 = !{!662, !5, !180, !5, !224}
!13368 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13364, file: !13365, line: 36, type: !5)
!13369 = !DILocation(line: 36, column: 16, scope: !13364)
!13370 = !DILocalVariable(name: "dir", arg: 2, scope: !13364, file: !13365, line: 36, type: !180)
!13371 = !DILocation(line: 36, column: 36, scope: !13364)
!13372 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13364, file: !13365, line: 36, type: !5)
!13373 = !DILocation(line: 36, column: 45, scope: !13364)
!13374 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13364, file: !13365, line: 36, type: !224)
!13375 = !DILocation(line: 36, column: 63, scope: !13364)
!13376 = !DILocalVariable(name: "open_flags", scope: !13364, file: !13365, line: 38, type: !5)
!13377 = !DILocation(line: 38, column: 7, scope: !13364)
!13378 = !DILocation(line: 39, column: 36, scope: !13364)
!13379 = !DILocation(line: 39, column: 34, scope: !13364)
!13380 = !DILocalVariable(name: "new_fd", scope: !13364, file: !13365, line: 40, type: !5)
!13381 = !DILocation(line: 40, column: 7, scope: !13364)
!13382 = !DILocation(line: 40, column: 24, scope: !13364)
!13383 = !DILocation(line: 40, column: 32, scope: !13364)
!13384 = !DILocation(line: 40, column: 37, scope: !13364)
!13385 = !DILocation(line: 40, column: 16, scope: !13364)
!13386 = !DILocation(line: 42, column: 7, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13364, file: !13365, line: 42, column: 7)
!13388 = !DILocation(line: 42, column: 14, scope: !13387)
!13389 = !DILocation(line: 42, column: 7, scope: !13364)
!13390 = !DILocation(line: 43, column: 5, scope: !13387)
!13391 = !DILocalVariable(name: "dirp", scope: !13364, file: !13365, line: 44, type: !662)
!13392 = !DILocation(line: 44, column: 8, scope: !13364)
!13393 = !DILocation(line: 44, column: 26, scope: !13364)
!13394 = !DILocation(line: 44, column: 15, scope: !13364)
!13395 = !DILocation(line: 45, column: 7, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13364, file: !13365, line: 45, column: 7)
!13397 = !DILocation(line: 45, column: 7, scope: !13364)
!13398 = !DILocation(line: 46, column: 16, scope: !13396)
!13399 = !DILocation(line: 46, column: 6, scope: !13396)
!13400 = !DILocation(line: 46, column: 14, scope: !13396)
!13401 = !DILocation(line: 46, column: 5, scope: !13396)
!13402 = !DILocalVariable(name: "fdopendir_errno", scope: !13403, file: !13365, line: 49, type: !5)
!13403 = distinct !DILexicalBlock(scope: !13396, file: !13365, line: 48, column: 5)
!13404 = !DILocation(line: 49, column: 11, scope: !13403)
!13405 = !DILocation(line: 49, column: 29, scope: !13403)
!13406 = !DILocation(line: 50, column: 14, scope: !13403)
!13407 = !DILocation(line: 50, column: 7, scope: !13403)
!13408 = !DILocation(line: 51, column: 15, scope: !13403)
!13409 = !DILocation(line: 51, column: 7, scope: !13403)
!13410 = !DILocation(line: 51, column: 13, scope: !13403)
!13411 = !DILocation(line: 53, column: 10, scope: !13364)
!13412 = !DILocation(line: 53, column: 3, scope: !13364)
!13413 = !DILocation(line: 54, column: 1, scope: !13364)
!13414 = distinct !DISubprogram(name: "set_program_name", scope: !899, file: !899, line: 39, type: !293, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !857, retainedNodes: !295)
!13415 = !DILocalVariable(name: "argv0", arg: 1, scope: !13414, file: !899, line: 39, type: !180)
!13416 = !DILocation(line: 39, column: 31, scope: !13414)
!13417 = !DILocalVariable(name: "slash", scope: !13414, file: !899, line: 46, type: !180)
!13418 = !DILocation(line: 46, column: 15, scope: !13414)
!13419 = !DILocalVariable(name: "base", scope: !13414, file: !899, line: 47, type: !180)
!13420 = !DILocation(line: 47, column: 15, scope: !13414)
!13421 = !DILocation(line: 51, column: 7, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13414, file: !899, line: 51, column: 7)
!13423 = !DILocation(line: 51, column: 13, scope: !13422)
!13424 = !DILocation(line: 51, column: 7, scope: !13414)
!13425 = !DILocation(line: 55, column: 14, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13422, file: !899, line: 52, column: 5)
!13427 = !DILocation(line: 54, column: 7, scope: !13426)
!13428 = !DILocation(line: 56, column: 7, scope: !13426)
!13429 = !DILocation(line: 59, column: 20, scope: !13414)
!13430 = !DILocation(line: 59, column: 11, scope: !13414)
!13431 = !DILocation(line: 59, column: 9, scope: !13414)
!13432 = !DILocation(line: 60, column: 11, scope: !13414)
!13433 = !DILocation(line: 60, column: 17, scope: !13414)
!13434 = !DILocation(line: 60, column: 27, scope: !13414)
!13435 = !DILocation(line: 60, column: 33, scope: !13414)
!13436 = !DILocation(line: 60, column: 39, scope: !13414)
!13437 = !DILocation(line: 60, column: 8, scope: !13414)
!13438 = !DILocation(line: 61, column: 7, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13414, file: !899, line: 61, column: 7)
!13440 = !DILocation(line: 61, column: 14, scope: !13439)
!13441 = !DILocation(line: 61, column: 12, scope: !13439)
!13442 = !DILocation(line: 61, column: 20, scope: !13439)
!13443 = !DILocation(line: 61, column: 25, scope: !13439)
!13444 = !DILocation(line: 61, column: 37, scope: !13439)
!13445 = !DILocation(line: 61, column: 42, scope: !13439)
!13446 = !DILocation(line: 61, column: 28, scope: !13439)
!13447 = !DILocation(line: 61, column: 61, scope: !13439)
!13448 = !DILocation(line: 61, column: 7, scope: !13414)
!13449 = !DILocation(line: 63, column: 15, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13439, file: !899, line: 62, column: 5)
!13451 = !DILocation(line: 63, column: 13, scope: !13450)
!13452 = !DILocation(line: 64, column: 20, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !899, line: 64, column: 11)
!13454 = !DILocation(line: 64, column: 11, scope: !13453)
!13455 = !DILocation(line: 64, column: 36, scope: !13453)
!13456 = !DILocation(line: 64, column: 11, scope: !13450)
!13457 = !DILocation(line: 66, column: 19, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13453, file: !899, line: 65, column: 9)
!13459 = !DILocation(line: 66, column: 24, scope: !13458)
!13460 = !DILocation(line: 66, column: 17, scope: !13458)
!13461 = !DILocation(line: 70, column: 52, scope: !13458)
!13462 = !DILocation(line: 70, column: 41, scope: !13458)
!13463 = !DILocation(line: 72, column: 9, scope: !13458)
!13464 = !DILocation(line: 73, column: 5, scope: !13450)
!13465 = !DILocation(line: 84, column: 18, scope: !13414)
!13466 = !DILocation(line: 84, column: 16, scope: !13414)
!13467 = !DILocation(line: 90, column: 38, scope: !13414)
!13468 = !DILocation(line: 90, column: 27, scope: !13414)
!13469 = !DILocation(line: 92, column: 1, scope: !13414)
!13470 = distinct !DISubprogram(name: "qcopy_acl", scope: !13471, file: !13471, line: 39, type: !8756, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1375, retainedNodes: !295)
!13471 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!13472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13473, line: 260, size: 32, elements: !13474)
!13473 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mohamad/clone/coreutils")
!13474 = !{!13475}
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13472, file: !13473, line: 261, baseType: !136, size: 32)
!13476 = !DILocalVariable(name: "src_name", arg: 1, scope: !13470, file: !13471, line: 39, type: !180)
!13477 = !DILocation(line: 39, column: 24, scope: !13470)
!13478 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13470, file: !13471, line: 39, type: !5)
!13479 = !DILocation(line: 39, column: 38, scope: !13470)
!13480 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13470, file: !13471, line: 39, type: !180)
!13481 = !DILocation(line: 39, column: 63, scope: !13470)
!13482 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13470, file: !13471, line: 40, type: !5)
!13483 = !DILocation(line: 40, column: 16, scope: !13470)
!13484 = !DILocalVariable(name: "mode", arg: 5, scope: !13470, file: !13471, line: 40, type: !136)
!13485 = !DILocation(line: 40, column: 34, scope: !13470)
!13486 = !DILocalVariable(name: "ctx", scope: !13470, file: !13471, line: 42, type: !13472)
!13487 = !DILocation(line: 42, column: 29, scope: !13470)
!13488 = !DILocalVariable(name: "ret", scope: !13470, file: !13471, line: 43, type: !5)
!13489 = !DILocation(line: 43, column: 7, scope: !13470)
!13490 = !DILocation(line: 45, column: 26, scope: !13470)
!13491 = !DILocation(line: 45, column: 36, scope: !13470)
!13492 = !DILocation(line: 45, column: 49, scope: !13470)
!13493 = !DILocation(line: 45, column: 9, scope: !13470)
!13494 = !DILocation(line: 45, column: 7, scope: !13470)
!13495 = !DILocation(line: 46, column: 7, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13470, file: !13471, line: 46, column: 7)
!13497 = !DILocation(line: 46, column: 11, scope: !13496)
!13498 = !DILocation(line: 46, column: 7, scope: !13470)
!13499 = !DILocation(line: 47, column: 5, scope: !13496)
!13500 = !DILocation(line: 48, column: 32, scope: !13470)
!13501 = !DILocation(line: 48, column: 42, scope: !13470)
!13502 = !DILocation(line: 48, column: 9, scope: !13470)
!13503 = !DILocation(line: 48, column: 7, scope: !13470)
!13504 = !DILocation(line: 49, column: 3, scope: !13470)
!13505 = !DILocation(line: 50, column: 10, scope: !13470)
!13506 = !DILocation(line: 50, column: 3, scope: !13470)
!13507 = !DILocation(line: 51, column: 1, scope: !13470)
!13508 = distinct !DISubprogram(name: "qset_acl", scope: !13509, file: !13509, line: 39, type: !8795, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1378, retainedNodes: !295)
!13509 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!13510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13473, line: 260, size: 32, elements: !13511)
!13511 = !{!13512}
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13510, file: !13473, line: 261, baseType: !136, size: 32)
!13513 = !DILocalVariable(name: "name", arg: 1, scope: !13508, file: !13509, line: 39, type: !180)
!13514 = !DILocation(line: 39, column: 23, scope: !13508)
!13515 = !DILocalVariable(name: "desc", arg: 2, scope: !13508, file: !13509, line: 39, type: !5)
!13516 = !DILocation(line: 39, column: 33, scope: !13508)
!13517 = !DILocalVariable(name: "mode", arg: 3, scope: !13508, file: !13509, line: 39, type: !136)
!13518 = !DILocation(line: 39, column: 46, scope: !13508)
!13519 = !DILocalVariable(name: "ctx", scope: !13508, file: !13509, line: 41, type: !13510)
!13520 = !DILocation(line: 41, column: 29, scope: !13508)
!13521 = !DILocalVariable(name: "ret", scope: !13508, file: !13509, line: 42, type: !5)
!13522 = !DILocation(line: 42, column: 7, scope: !13508)
!13523 = !DILocation(line: 44, column: 3, scope: !13508)
!13524 = !DILocation(line: 45, column: 14, scope: !13508)
!13525 = !DILocation(line: 45, column: 7, scope: !13508)
!13526 = !DILocation(line: 45, column: 12, scope: !13508)
!13527 = !DILocation(line: 46, column: 32, scope: !13508)
!13528 = !DILocation(line: 46, column: 38, scope: !13508)
!13529 = !DILocation(line: 46, column: 9, scope: !13508)
!13530 = !DILocation(line: 46, column: 7, scope: !13508)
!13531 = !DILocation(line: 47, column: 3, scope: !13508)
!13532 = !DILocation(line: 48, column: 10, scope: !13508)
!13533 = !DILocation(line: 48, column: 3, scope: !13508)
!13534 = distinct !DISubprogram(name: "clone_quoting_options", scope: !925, file: !925, line: 122, type: !13535, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13535 = !DISubroutineType(types: !13536)
!13536 = !{!923, !923}
!13537 = !DILocalVariable(name: "o", arg: 1, scope: !13534, file: !925, line: 122, type: !923)
!13538 = !DILocation(line: 122, column: 48, scope: !13534)
!13539 = !DILocalVariable(name: "e", scope: !13534, file: !925, line: 124, type: !5)
!13540 = !DILocation(line: 124, column: 7, scope: !13534)
!13541 = !DILocation(line: 124, column: 11, scope: !13534)
!13542 = !DILocalVariable(name: "p", scope: !13534, file: !925, line: 125, type: !923)
!13543 = !DILocation(line: 125, column: 27, scope: !13534)
!13544 = !DILocation(line: 125, column: 40, scope: !13534)
!13545 = !DILocation(line: 125, column: 44, scope: !13534)
!13546 = !DILocation(line: 125, column: 31, scope: !13534)
!13547 = !DILocation(line: 127, column: 11, scope: !13534)
!13548 = !DILocation(line: 127, column: 3, scope: !13534)
!13549 = !DILocation(line: 127, column: 9, scope: !13534)
!13550 = !DILocation(line: 128, column: 10, scope: !13534)
!13551 = !DILocation(line: 128, column: 3, scope: !13534)
!13552 = distinct !DISubprogram(name: "get_quoting_style", scope: !925, file: !925, line: 133, type: !13553, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!905, !934}
!13555 = !DILocalVariable(name: "o", arg: 1, scope: !13552, file: !925, line: 133, type: !934)
!13556 = !DILocation(line: 133, column: 50, scope: !13552)
!13557 = !DILocation(line: 135, column: 11, scope: !13552)
!13558 = !DILocation(line: 135, column: 15, scope: !13552)
!13559 = !DILocation(line: 135, column: 46, scope: !13552)
!13560 = !DILocation(line: 135, column: 3, scope: !13552)
!13561 = distinct !DISubprogram(name: "set_quoting_style", scope: !925, file: !925, line: 141, type: !13562, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{null, !923, !905}
!13564 = !DILocalVariable(name: "o", arg: 1, scope: !13561, file: !925, line: 141, type: !923)
!13565 = !DILocation(line: 141, column: 44, scope: !13561)
!13566 = !DILocalVariable(name: "s", arg: 2, scope: !13561, file: !925, line: 141, type: !905)
!13567 = !DILocation(line: 141, column: 66, scope: !13561)
!13568 = !DILocation(line: 143, column: 47, scope: !13561)
!13569 = !DILocation(line: 143, column: 4, scope: !13561)
!13570 = !DILocation(line: 143, column: 8, scope: !13561)
!13571 = !DILocation(line: 143, column: 39, scope: !13561)
!13572 = !DILocation(line: 143, column: 45, scope: !13561)
!13573 = !DILocation(line: 144, column: 1, scope: !13561)
!13574 = distinct !DISubprogram(name: "set_char_quoting", scope: !925, file: !925, line: 152, type: !13575, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{!5, !923, !8, !5}
!13577 = !DILocalVariable(name: "o", arg: 1, scope: !13574, file: !925, line: 152, type: !923)
!13578 = !DILocation(line: 152, column: 43, scope: !13574)
!13579 = !DILocalVariable(name: "c", arg: 2, scope: !13574, file: !925, line: 152, type: !8)
!13580 = !DILocation(line: 152, column: 51, scope: !13574)
!13581 = !DILocalVariable(name: "i", arg: 3, scope: !13574, file: !925, line: 152, type: !5)
!13582 = !DILocation(line: 152, column: 58, scope: !13574)
!13583 = !DILocalVariable(name: "uc", scope: !13574, file: !925, line: 154, type: !585)
!13584 = !DILocation(line: 154, column: 17, scope: !13574)
!13585 = !DILocation(line: 154, column: 22, scope: !13574)
!13586 = !DILocalVariable(name: "p", scope: !13574, file: !925, line: 155, type: !933)
!13587 = !DILocation(line: 155, column: 17, scope: !13574)
!13588 = !DILocation(line: 156, column: 6, scope: !13574)
!13589 = !DILocation(line: 156, column: 10, scope: !13574)
!13590 = !DILocation(line: 156, column: 41, scope: !13574)
!13591 = !DILocation(line: 156, column: 5, scope: !13574)
!13592 = !DILocation(line: 156, column: 59, scope: !13574)
!13593 = !DILocation(line: 156, column: 62, scope: !13574)
!13594 = !DILocation(line: 156, column: 57, scope: !13574)
!13595 = !DILocalVariable(name: "shift", scope: !13574, file: !925, line: 157, type: !5)
!13596 = !DILocation(line: 157, column: 7, scope: !13574)
!13597 = !DILocation(line: 157, column: 15, scope: !13574)
!13598 = !DILocation(line: 157, column: 18, scope: !13574)
!13599 = !DILocalVariable(name: "r", scope: !13574, file: !925, line: 158, type: !5)
!13600 = !DILocation(line: 158, column: 7, scope: !13574)
!13601 = !DILocation(line: 158, column: 13, scope: !13574)
!13602 = !DILocation(line: 158, column: 12, scope: !13574)
!13603 = !DILocation(line: 158, column: 18, scope: !13574)
!13604 = !DILocation(line: 158, column: 15, scope: !13574)
!13605 = !DILocation(line: 158, column: 25, scope: !13574)
!13606 = !DILocation(line: 159, column: 11, scope: !13574)
!13607 = !DILocation(line: 159, column: 13, scope: !13574)
!13608 = !DILocation(line: 159, column: 20, scope: !13574)
!13609 = !DILocation(line: 159, column: 18, scope: !13574)
!13610 = !DILocation(line: 159, column: 26, scope: !13574)
!13611 = !DILocation(line: 159, column: 23, scope: !13574)
!13612 = !DILocation(line: 159, column: 4, scope: !13574)
!13613 = !DILocation(line: 159, column: 6, scope: !13574)
!13614 = !DILocation(line: 160, column: 10, scope: !13574)
!13615 = !DILocation(line: 160, column: 3, scope: !13574)
!13616 = distinct !DISubprogram(name: "set_quoting_flags", scope: !925, file: !925, line: 168, type: !13617, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13617 = !DISubroutineType(types: !13618)
!13618 = !{!5, !923, !5}
!13619 = !DILocalVariable(name: "o", arg: 1, scope: !13616, file: !925, line: 168, type: !923)
!13620 = !DILocation(line: 168, column: 44, scope: !13616)
!13621 = !DILocalVariable(name: "i", arg: 2, scope: !13616, file: !925, line: 168, type: !5)
!13622 = !DILocation(line: 168, column: 51, scope: !13616)
!13623 = !DILocalVariable(name: "r", scope: !13616, file: !925, line: 170, type: !5)
!13624 = !DILocation(line: 170, column: 7, scope: !13616)
!13625 = !DILocation(line: 171, column: 8, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13616, file: !925, line: 171, column: 7)
!13627 = !DILocation(line: 171, column: 7, scope: !13616)
!13628 = !DILocation(line: 172, column: 7, scope: !13626)
!13629 = !DILocation(line: 172, column: 5, scope: !13626)
!13630 = !DILocation(line: 173, column: 7, scope: !13616)
!13631 = !DILocation(line: 173, column: 10, scope: !13616)
!13632 = !DILocation(line: 173, column: 5, scope: !13616)
!13633 = !DILocation(line: 174, column: 14, scope: !13616)
!13634 = !DILocation(line: 174, column: 3, scope: !13616)
!13635 = !DILocation(line: 174, column: 6, scope: !13616)
!13636 = !DILocation(line: 174, column: 12, scope: !13616)
!13637 = !DILocation(line: 175, column: 10, scope: !13616)
!13638 = !DILocation(line: 175, column: 3, scope: !13616)
!13639 = distinct !DISubprogram(name: "set_custom_quoting", scope: !925, file: !925, line: 179, type: !13640, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13640 = !DISubroutineType(types: !13641)
!13641 = !{null, !923, !180, !180}
!13642 = !DILocalVariable(name: "o", arg: 1, scope: !13639, file: !925, line: 179, type: !923)
!13643 = !DILocation(line: 179, column: 45, scope: !13639)
!13644 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13639, file: !925, line: 180, type: !180)
!13645 = !DILocation(line: 180, column: 33, scope: !13639)
!13646 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13639, file: !925, line: 180, type: !180)
!13647 = !DILocation(line: 180, column: 57, scope: !13639)
!13648 = !DILocation(line: 182, column: 8, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13639, file: !925, line: 182, column: 7)
!13650 = !DILocation(line: 182, column: 7, scope: !13639)
!13651 = !DILocation(line: 183, column: 7, scope: !13649)
!13652 = !DILocation(line: 183, column: 5, scope: !13649)
!13653 = !DILocation(line: 184, column: 3, scope: !13639)
!13654 = !DILocation(line: 184, column: 6, scope: !13639)
!13655 = !DILocation(line: 184, column: 12, scope: !13639)
!13656 = !DILocation(line: 185, column: 8, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13639, file: !925, line: 185, column: 7)
!13658 = !DILocation(line: 185, column: 19, scope: !13657)
!13659 = !DILocation(line: 185, column: 23, scope: !13657)
!13660 = !DILocation(line: 185, column: 7, scope: !13639)
!13661 = !DILocation(line: 186, column: 5, scope: !13657)
!13662 = !DILocation(line: 187, column: 19, scope: !13639)
!13663 = !DILocation(line: 187, column: 3, scope: !13639)
!13664 = !DILocation(line: 187, column: 6, scope: !13639)
!13665 = !DILocation(line: 187, column: 17, scope: !13639)
!13666 = !DILocation(line: 188, column: 20, scope: !13639)
!13667 = !DILocation(line: 188, column: 3, scope: !13639)
!13668 = !DILocation(line: 188, column: 6, scope: !13639)
!13669 = !DILocation(line: 188, column: 18, scope: !13639)
!13670 = !DILocation(line: 189, column: 1, scope: !13639)
!13671 = distinct !DISubprogram(name: "quotearg_buffer", scope: !925, file: !925, line: 784, type: !13672, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{!52, !7, !52, !180, !52, !934}
!13674 = !DILocalVariable(name: "buffer", arg: 1, scope: !13671, file: !925, line: 784, type: !7)
!13675 = !DILocation(line: 784, column: 24, scope: !13671)
!13676 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13671, file: !925, line: 784, type: !52)
!13677 = !DILocation(line: 784, column: 39, scope: !13671)
!13678 = !DILocalVariable(name: "arg", arg: 3, scope: !13671, file: !925, line: 785, type: !180)
!13679 = !DILocation(line: 785, column: 30, scope: !13671)
!13680 = !DILocalVariable(name: "argsize", arg: 4, scope: !13671, file: !925, line: 785, type: !52)
!13681 = !DILocation(line: 785, column: 42, scope: !13671)
!13682 = !DILocalVariable(name: "o", arg: 5, scope: !13671, file: !925, line: 786, type: !934)
!13683 = !DILocation(line: 786, column: 48, scope: !13671)
!13684 = !DILocalVariable(name: "p", scope: !13671, file: !925, line: 788, type: !934)
!13685 = !DILocation(line: 788, column: 33, scope: !13671)
!13686 = !DILocation(line: 788, column: 37, scope: !13671)
!13687 = !DILocation(line: 788, column: 41, scope: !13671)
!13688 = !DILocalVariable(name: "e", scope: !13671, file: !925, line: 789, type: !5)
!13689 = !DILocation(line: 789, column: 7, scope: !13671)
!13690 = !DILocation(line: 789, column: 11, scope: !13671)
!13691 = !DILocalVariable(name: "r", scope: !13671, file: !925, line: 790, type: !52)
!13692 = !DILocation(line: 790, column: 10, scope: !13671)
!13693 = !DILocation(line: 790, column: 40, scope: !13671)
!13694 = !DILocation(line: 790, column: 48, scope: !13671)
!13695 = !DILocation(line: 790, column: 60, scope: !13671)
!13696 = !DILocation(line: 790, column: 65, scope: !13671)
!13697 = !DILocation(line: 791, column: 40, scope: !13671)
!13698 = !DILocation(line: 791, column: 43, scope: !13671)
!13699 = !DILocation(line: 791, column: 50, scope: !13671)
!13700 = !DILocation(line: 791, column: 53, scope: !13671)
!13701 = !DILocation(line: 791, column: 60, scope: !13671)
!13702 = !DILocation(line: 791, column: 63, scope: !13671)
!13703 = !DILocation(line: 792, column: 40, scope: !13671)
!13704 = !DILocation(line: 792, column: 43, scope: !13671)
!13705 = !DILocation(line: 792, column: 55, scope: !13671)
!13706 = !DILocation(line: 792, column: 58, scope: !13671)
!13707 = !DILocation(line: 790, column: 14, scope: !13671)
!13708 = !DILocation(line: 793, column: 11, scope: !13671)
!13709 = !DILocation(line: 793, column: 3, scope: !13671)
!13710 = !DILocation(line: 793, column: 9, scope: !13671)
!13711 = !DILocation(line: 794, column: 10, scope: !13671)
!13712 = !DILocation(line: 794, column: 3, scope: !13671)
!13713 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !925, file: !925, line: 256, type: !13714, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !902, retainedNodes: !295)
!13714 = !DISubroutineType(types: !13715)
!13715 = !{!52, !7, !52, !180, !52, !905, !5, !956, !180, !180}
!13716 = !DILocalVariable(name: "buffer", arg: 1, scope: !13713, file: !925, line: 256, type: !7)
!13717 = !DILocation(line: 256, column: 33, scope: !13713)
!13718 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13713, file: !925, line: 256, type: !52)
!13719 = !DILocation(line: 256, column: 48, scope: !13713)
!13720 = !DILocalVariable(name: "arg", arg: 3, scope: !13713, file: !925, line: 257, type: !180)
!13721 = !DILocation(line: 257, column: 39, scope: !13713)
!13722 = !DILocalVariable(name: "argsize", arg: 4, scope: !13713, file: !925, line: 257, type: !52)
!13723 = !DILocation(line: 257, column: 51, scope: !13713)
!13724 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13713, file: !925, line: 258, type: !905)
!13725 = !DILocation(line: 258, column: 46, scope: !13713)
!13726 = !DILocalVariable(name: "flags", arg: 6, scope: !13713, file: !925, line: 258, type: !5)
!13727 = !DILocation(line: 258, column: 65, scope: !13713)
!13728 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13713, file: !925, line: 259, type: !956)
!13729 = !DILocation(line: 259, column: 47, scope: !13713)
!13730 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13713, file: !925, line: 260, type: !180)
!13731 = !DILocation(line: 260, column: 39, scope: !13713)
!13732 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13713, file: !925, line: 261, type: !180)
!13733 = !DILocation(line: 261, column: 39, scope: !13713)
!13734 = !DILocalVariable(name: "i", scope: !13713, file: !925, line: 263, type: !52)
!13735 = !DILocation(line: 263, column: 10, scope: !13713)
!13736 = !DILocalVariable(name: "len", scope: !13713, file: !925, line: 264, type: !52)
!13737 = !DILocation(line: 264, column: 10, scope: !13713)
!13738 = !DILocalVariable(name: "orig_buffersize", scope: !13713, file: !925, line: 265, type: !52)
!13739 = !DILocation(line: 265, column: 10, scope: !13713)
!13740 = !DILocalVariable(name: "quote_string", scope: !13713, file: !925, line: 266, type: !180)
!13741 = !DILocation(line: 266, column: 15, scope: !13713)
!13742 = !DILocalVariable(name: "quote_string_len", scope: !13713, file: !925, line: 267, type: !52)
!13743 = !DILocation(line: 267, column: 10, scope: !13713)
!13744 = !DILocalVariable(name: "backslash_escapes", scope: !13713, file: !925, line: 268, type: !139)
!13745 = !DILocation(line: 268, column: 8, scope: !13713)
!13746 = !DILocalVariable(name: "unibyte_locale", scope: !13713, file: !925, line: 269, type: !139)
!13747 = !DILocation(line: 269, column: 8, scope: !13713)
!13748 = !DILocation(line: 269, column: 25, scope: !13713)
!13749 = !DILocation(line: 269, column: 36, scope: !13713)
!13750 = !DILocalVariable(name: "elide_outer_quotes", scope: !13713, file: !925, line: 270, type: !139)
!13751 = !DILocation(line: 270, column: 8, scope: !13713)
!13752 = !DILocation(line: 270, column: 30, scope: !13713)
!13753 = !DILocation(line: 270, column: 36, scope: !13713)
!13754 = !DILocation(line: 270, column: 61, scope: !13713)
!13755 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13713, file: !925, line: 271, type: !139)
!13756 = !DILocation(line: 271, column: 8, scope: !13713)
!13757 = !DILocalVariable(name: "encountered_single_quote", scope: !13713, file: !925, line: 272, type: !139)
!13758 = !DILocation(line: 272, column: 8, scope: !13713)
!13759 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13713, file: !925, line: 273, type: !139)
!13760 = !DILocation(line: 273, column: 8, scope: !13713)
!13761 = !DILocation(line: 273, column: 3, scope: !13713)
!13762 = !DILabel(scope: !13713, name: "process_input", file: !925, line: 314)
!13763 = !DILocation(line: 314, column: 2, scope: !13713)
!13764 = !DILocation(line: 316, column: 11, scope: !13713)
!13765 = !DILocation(line: 316, column: 3, scope: !13713)
!13766 = !DILocation(line: 319, column: 21, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 317, column: 5)
!13768 = !DILocation(line: 320, column: 26, scope: !13767)
!13769 = !DILocation(line: 321, column: 7, scope: !13767)
!13770 = !DILocation(line: 323, column: 12, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13767, file: !925, line: 323, column: 11)
!13772 = !DILocation(line: 323, column: 11, scope: !13767)
!13773 = !DILocation(line: 324, column: 9, scope: !13771)
!13774 = !DILocation(line: 324, column: 9, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13776, file: !925, line: 324, column: 9)
!13776 = distinct !DILexicalBlock(scope: !13771, file: !925, line: 324, column: 9)
!13777 = !DILocation(line: 324, column: 9, scope: !13776)
!13778 = !DILocation(line: 325, column: 25, scope: !13767)
!13779 = !DILocation(line: 326, column: 20, scope: !13767)
!13780 = !DILocation(line: 327, column: 24, scope: !13767)
!13781 = !DILocation(line: 328, column: 7, scope: !13767)
!13782 = !DILocation(line: 331, column: 25, scope: !13767)
!13783 = !DILocation(line: 332, column: 26, scope: !13767)
!13784 = !DILocation(line: 333, column: 7, scope: !13767)
!13785 = !DILocation(line: 339, column: 13, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !925, line: 339, column: 13)
!13787 = distinct !DILexicalBlock(scope: !13767, file: !925, line: 338, column: 7)
!13788 = !DILocation(line: 339, column: 27, scope: !13786)
!13789 = !DILocation(line: 339, column: 13, scope: !13787)
!13790 = !DILocation(line: 362, column: 50, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13786, file: !925, line: 340, column: 11)
!13792 = !DILocation(line: 362, column: 26, scope: !13791)
!13793 = !DILocation(line: 362, column: 24, scope: !13791)
!13794 = !DILocation(line: 363, column: 51, scope: !13791)
!13795 = !DILocation(line: 363, column: 27, scope: !13791)
!13796 = !DILocation(line: 363, column: 25, scope: !13791)
!13797 = !DILocation(line: 364, column: 11, scope: !13791)
!13798 = !DILocation(line: 365, column: 14, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13787, file: !925, line: 365, column: 13)
!13800 = !DILocation(line: 365, column: 13, scope: !13787)
!13801 = !DILocation(line: 366, column: 31, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13799, file: !925, line: 366, column: 11)
!13803 = !DILocation(line: 366, column: 29, scope: !13802)
!13804 = !DILocation(line: 366, column: 16, scope: !13802)
!13805 = !DILocation(line: 366, column: 44, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13802, file: !925, line: 366, column: 11)
!13807 = !DILocation(line: 366, column: 43, scope: !13806)
!13808 = !DILocation(line: 366, column: 11, scope: !13802)
!13809 = !DILocation(line: 367, column: 13, scope: !13806)
!13810 = !DILocation(line: 367, column: 13, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13812, file: !925, line: 367, column: 13)
!13812 = distinct !DILexicalBlock(scope: !13806, file: !925, line: 367, column: 13)
!13813 = !DILocation(line: 367, column: 13, scope: !13812)
!13814 = !DILocation(line: 366, column: 70, scope: !13806)
!13815 = !DILocation(line: 366, column: 11, scope: !13806)
!13816 = distinct !{!13816, !13808, !13817}
!13817 = !DILocation(line: 367, column: 13, scope: !13802)
!13818 = !DILocation(line: 368, column: 27, scope: !13787)
!13819 = !DILocation(line: 369, column: 24, scope: !13787)
!13820 = !DILocation(line: 369, column: 22, scope: !13787)
!13821 = !DILocation(line: 370, column: 36, scope: !13787)
!13822 = !DILocation(line: 370, column: 28, scope: !13787)
!13823 = !DILocation(line: 370, column: 26, scope: !13787)
!13824 = !DILocation(line: 372, column: 7, scope: !13767)
!13825 = !DILocation(line: 375, column: 25, scope: !13767)
!13826 = !DILocation(line: 376, column: 7, scope: !13767)
!13827 = !DILocation(line: 378, column: 26, scope: !13767)
!13828 = !DILocation(line: 379, column: 7, scope: !13767)
!13829 = !DILocation(line: 381, column: 12, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13767, file: !925, line: 381, column: 11)
!13831 = !DILocation(line: 381, column: 11, scope: !13767)
!13832 = !DILocation(line: 382, column: 27, scope: !13830)
!13833 = !DILocation(line: 382, column: 9, scope: !13830)
!13834 = !DILocation(line: 383, column: 7, scope: !13767)
!13835 = !DILocation(line: 385, column: 21, scope: !13767)
!13836 = !DILocation(line: 386, column: 12, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13767, file: !925, line: 386, column: 11)
!13838 = !DILocation(line: 386, column: 11, scope: !13767)
!13839 = !DILocation(line: 387, column: 9, scope: !13837)
!13840 = !DILocation(line: 387, column: 9, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13842, file: !925, line: 387, column: 9)
!13842 = distinct !DILexicalBlock(scope: !13837, file: !925, line: 387, column: 9)
!13843 = !DILocation(line: 387, column: 9, scope: !13842)
!13844 = !DILocation(line: 388, column: 20, scope: !13767)
!13845 = !DILocation(line: 389, column: 24, scope: !13767)
!13846 = !DILocation(line: 390, column: 7, scope: !13767)
!13847 = !DILocation(line: 393, column: 26, scope: !13767)
!13848 = !DILocation(line: 394, column: 7, scope: !13767)
!13849 = !DILocation(line: 397, column: 7, scope: !13767)
!13850 = !DILocation(line: 400, column: 10, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 400, column: 3)
!13852 = !DILocation(line: 400, column: 8, scope: !13851)
!13853 = !DILocation(line: 400, column: 19, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13851, file: !925, line: 400, column: 3)
!13855 = !DILocation(line: 400, column: 27, scope: !13854)
!13856 = !DILocation(line: 400, column: 41, scope: !13854)
!13857 = !DILocation(line: 400, column: 45, scope: !13854)
!13858 = !DILocation(line: 400, column: 48, scope: !13854)
!13859 = !DILocation(line: 400, column: 58, scope: !13854)
!13860 = !DILocation(line: 400, column: 63, scope: !13854)
!13861 = !DILocation(line: 400, column: 60, scope: !13854)
!13862 = !DILocation(line: 400, column: 16, scope: !13854)
!13863 = !DILocation(line: 400, column: 3, scope: !13851)
!13864 = !DILocalVariable(name: "c", scope: !13865, file: !925, line: 402, type: !585)
!13865 = distinct !DILexicalBlock(scope: !13854, file: !925, line: 401, column: 5)
!13866 = !DILocation(line: 402, column: 21, scope: !13865)
!13867 = !DILocalVariable(name: "esc", scope: !13865, file: !925, line: 403, type: !585)
!13868 = !DILocation(line: 403, column: 21, scope: !13865)
!13869 = !DILocalVariable(name: "is_right_quote", scope: !13865, file: !925, line: 404, type: !139)
!13870 = !DILocation(line: 404, column: 12, scope: !13865)
!13871 = !DILocalVariable(name: "escaping", scope: !13865, file: !925, line: 405, type: !139)
!13872 = !DILocation(line: 405, column: 12, scope: !13865)
!13873 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13865, file: !925, line: 406, type: !139)
!13874 = !DILocation(line: 406, column: 12, scope: !13865)
!13875 = !DILocation(line: 408, column: 11, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 408, column: 11)
!13877 = !DILocation(line: 409, column: 11, scope: !13876)
!13878 = !DILocation(line: 409, column: 14, scope: !13876)
!13879 = !DILocation(line: 409, column: 28, scope: !13876)
!13880 = !DILocation(line: 410, column: 11, scope: !13876)
!13881 = !DILocation(line: 410, column: 14, scope: !13876)
!13882 = !DILocation(line: 411, column: 11, scope: !13876)
!13883 = !DILocation(line: 411, column: 15, scope: !13876)
!13884 = !DILocation(line: 411, column: 19, scope: !13876)
!13885 = !DILocation(line: 411, column: 17, scope: !13876)
!13886 = !DILocation(line: 412, column: 19, scope: !13876)
!13887 = !DILocation(line: 412, column: 27, scope: !13876)
!13888 = !DILocation(line: 412, column: 39, scope: !13876)
!13889 = !DILocation(line: 412, column: 46, scope: !13876)
!13890 = !DILocation(line: 412, column: 44, scope: !13876)
!13891 = !DILocation(line: 416, column: 40, scope: !13876)
!13892 = !DILocation(line: 416, column: 32, scope: !13876)
!13893 = !DILocation(line: 416, column: 30, scope: !13876)
!13894 = !DILocation(line: 416, column: 48, scope: !13876)
!13895 = !DILocation(line: 412, column: 15, scope: !13876)
!13896 = !DILocation(line: 417, column: 11, scope: !13876)
!13897 = !DILocation(line: 417, column: 22, scope: !13876)
!13898 = !DILocation(line: 417, column: 28, scope: !13876)
!13899 = !DILocation(line: 417, column: 26, scope: !13876)
!13900 = !DILocation(line: 417, column: 31, scope: !13876)
!13901 = !DILocation(line: 417, column: 45, scope: !13876)
!13902 = !DILocation(line: 417, column: 14, scope: !13876)
!13903 = !DILocation(line: 417, column: 63, scope: !13876)
!13904 = !DILocation(line: 408, column: 11, scope: !13865)
!13905 = !DILocation(line: 419, column: 15, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !925, line: 419, column: 15)
!13907 = distinct !DILexicalBlock(scope: !13876, file: !925, line: 418, column: 9)
!13908 = !DILocation(line: 419, column: 15, scope: !13907)
!13909 = !DILocation(line: 420, column: 13, scope: !13906)
!13910 = !DILocation(line: 421, column: 26, scope: !13907)
!13911 = !DILocation(line: 422, column: 9, scope: !13907)
!13912 = !DILocation(line: 424, column: 11, scope: !13865)
!13913 = !DILocation(line: 424, column: 15, scope: !13865)
!13914 = !DILocation(line: 424, column: 9, scope: !13865)
!13915 = !DILocation(line: 425, column: 15, scope: !13865)
!13916 = !DILocation(line: 425, column: 7, scope: !13865)
!13917 = !DILocation(line: 428, column: 15, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 428, column: 15)
!13919 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 426, column: 9)
!13920 = !DILocation(line: 428, column: 15, scope: !13919)
!13921 = !DILocation(line: 430, column: 15, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !925, line: 429, column: 13)
!13923 = !DILocation(line: 430, column: 15, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !925, line: 430, column: 15)
!13925 = distinct !DILexicalBlock(scope: !13922, file: !925, line: 430, column: 15)
!13926 = !DILocation(line: 430, column: 15, scope: !13925)
!13927 = !DILocation(line: 430, column: 15, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13925, file: !925, line: 430, column: 15)
!13929 = !DILocation(line: 430, column: 15, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13928, file: !925, line: 430, column: 15)
!13931 = !DILocation(line: 430, column: 15, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !925, line: 430, column: 15)
!13933 = distinct !DILexicalBlock(scope: !13930, file: !925, line: 430, column: 15)
!13934 = !DILocation(line: 430, column: 15, scope: !13933)
!13935 = !DILocation(line: 430, column: 15, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13937, file: !925, line: 430, column: 15)
!13937 = distinct !DILexicalBlock(scope: !13930, file: !925, line: 430, column: 15)
!13938 = !DILocation(line: 430, column: 15, scope: !13937)
!13939 = !DILocation(line: 430, column: 15, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !925, line: 430, column: 15)
!13941 = distinct !DILexicalBlock(scope: !13930, file: !925, line: 430, column: 15)
!13942 = !DILocation(line: 430, column: 15, scope: !13941)
!13943 = !DILocation(line: 430, column: 15, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13945, file: !925, line: 430, column: 15)
!13945 = distinct !DILexicalBlock(scope: !13925, file: !925, line: 430, column: 15)
!13946 = !DILocation(line: 430, column: 15, scope: !13945)
!13947 = !DILocation(line: 437, column: 19, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13922, file: !925, line: 437, column: 19)
!13949 = !DILocation(line: 437, column: 33, scope: !13948)
!13950 = !DILocation(line: 438, column: 19, scope: !13948)
!13951 = !DILocation(line: 438, column: 22, scope: !13948)
!13952 = !DILocation(line: 438, column: 24, scope: !13948)
!13953 = !DILocation(line: 438, column: 30, scope: !13948)
!13954 = !DILocation(line: 438, column: 28, scope: !13948)
!13955 = !DILocation(line: 438, column: 38, scope: !13948)
!13956 = !DILocation(line: 438, column: 48, scope: !13948)
!13957 = !DILocation(line: 438, column: 52, scope: !13948)
!13958 = !DILocation(line: 438, column: 54, scope: !13948)
!13959 = !DILocation(line: 438, column: 45, scope: !13948)
!13960 = !DILocation(line: 438, column: 59, scope: !13948)
!13961 = !DILocation(line: 438, column: 62, scope: !13948)
!13962 = !DILocation(line: 438, column: 66, scope: !13948)
!13963 = !DILocation(line: 438, column: 68, scope: !13948)
!13964 = !DILocation(line: 438, column: 73, scope: !13948)
!13965 = !DILocation(line: 437, column: 19, scope: !13922)
!13966 = !DILocation(line: 440, column: 19, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13948, file: !925, line: 439, column: 17)
!13968 = !DILocation(line: 440, column: 19, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13970, file: !925, line: 440, column: 19)
!13970 = distinct !DILexicalBlock(scope: !13967, file: !925, line: 440, column: 19)
!13971 = !DILocation(line: 440, column: 19, scope: !13970)
!13972 = !DILocation(line: 441, column: 19, scope: !13967)
!13973 = !DILocation(line: 441, column: 19, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !925, line: 441, column: 19)
!13975 = distinct !DILexicalBlock(scope: !13967, file: !925, line: 441, column: 19)
!13976 = !DILocation(line: 441, column: 19, scope: !13975)
!13977 = !DILocation(line: 442, column: 17, scope: !13967)
!13978 = !DILocation(line: 443, column: 17, scope: !13922)
!13979 = !DILocation(line: 448, column: 13, scope: !13922)
!13980 = !DILocation(line: 449, column: 20, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13918, file: !925, line: 449, column: 20)
!13982 = !DILocation(line: 449, column: 26, scope: !13981)
!13983 = !DILocation(line: 449, column: 20, scope: !13918)
!13984 = !DILocation(line: 450, column: 13, scope: !13981)
!13985 = !DILocation(line: 451, column: 11, scope: !13919)
!13986 = !DILocation(line: 454, column: 19, scope: !13919)
!13987 = !DILocation(line: 454, column: 11, scope: !13919)
!13988 = !DILocation(line: 457, column: 19, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !925, line: 457, column: 19)
!13990 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 455, column: 13)
!13991 = !DILocation(line: 457, column: 19, scope: !13990)
!13992 = !DILocation(line: 458, column: 17, scope: !13989)
!13993 = !DILocation(line: 459, column: 15, scope: !13990)
!13994 = !DILocation(line: 462, column: 20, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13990, file: !925, line: 462, column: 19)
!13996 = !DILocation(line: 462, column: 26, scope: !13995)
!13997 = !DILocation(line: 463, column: 19, scope: !13995)
!13998 = !DILocation(line: 463, column: 22, scope: !13995)
!13999 = !DILocation(line: 463, column: 24, scope: !13995)
!14000 = !DILocation(line: 463, column: 30, scope: !13995)
!14001 = !DILocation(line: 463, column: 28, scope: !13995)
!14002 = !DILocation(line: 463, column: 38, scope: !13995)
!14003 = !DILocation(line: 463, column: 41, scope: !13995)
!14004 = !DILocation(line: 463, column: 45, scope: !13995)
!14005 = !DILocation(line: 463, column: 47, scope: !13995)
!14006 = !DILocation(line: 463, column: 52, scope: !13995)
!14007 = !DILocation(line: 462, column: 19, scope: !13990)
!14008 = !DILocation(line: 464, column: 25, scope: !13995)
!14009 = !DILocation(line: 464, column: 29, scope: !13995)
!14010 = !DILocation(line: 464, column: 31, scope: !13995)
!14011 = !DILocation(line: 464, column: 17, scope: !13995)
!14012 = !DILocation(line: 471, column: 25, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !925, line: 471, column: 25)
!14014 = distinct !DILexicalBlock(scope: !13995, file: !925, line: 465, column: 19)
!14015 = !DILocation(line: 471, column: 25, scope: !14014)
!14016 = !DILocation(line: 472, column: 23, scope: !14013)
!14017 = !DILocation(line: 473, column: 25, scope: !14014)
!14018 = !DILocation(line: 473, column: 29, scope: !14014)
!14019 = !DILocation(line: 473, column: 31, scope: !14014)
!14020 = !DILocation(line: 473, column: 23, scope: !14014)
!14021 = !DILocation(line: 474, column: 23, scope: !14014)
!14022 = !DILocation(line: 475, column: 21, scope: !14014)
!14023 = !DILocation(line: 475, column: 21, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !925, line: 475, column: 21)
!14025 = distinct !DILexicalBlock(scope: !14014, file: !925, line: 475, column: 21)
!14026 = !DILocation(line: 475, column: 21, scope: !14025)
!14027 = !DILocation(line: 476, column: 21, scope: !14014)
!14028 = !DILocation(line: 476, column: 21, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !925, line: 476, column: 21)
!14030 = distinct !DILexicalBlock(scope: !14014, file: !925, line: 476, column: 21)
!14031 = !DILocation(line: 476, column: 21, scope: !14030)
!14032 = !DILocation(line: 477, column: 21, scope: !14014)
!14033 = !DILocation(line: 477, column: 21, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !925, line: 477, column: 21)
!14035 = distinct !DILexicalBlock(scope: !14014, file: !925, line: 477, column: 21)
!14036 = !DILocation(line: 477, column: 21, scope: !14035)
!14037 = !DILocation(line: 478, column: 21, scope: !14014)
!14038 = !DILocation(line: 478, column: 21, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !925, line: 478, column: 21)
!14040 = distinct !DILexicalBlock(scope: !14014, file: !925, line: 478, column: 21)
!14041 = !DILocation(line: 478, column: 21, scope: !14040)
!14042 = !DILocation(line: 479, column: 21, scope: !14014)
!14043 = !DILocation(line: 482, column: 21, scope: !14014)
!14044 = !DILocation(line: 483, column: 19, scope: !14014)
!14045 = !DILocation(line: 484, column: 15, scope: !13990)
!14046 = !DILocation(line: 487, column: 15, scope: !13990)
!14047 = !DILocation(line: 489, column: 11, scope: !13919)
!14048 = !DILocation(line: 491, column: 24, scope: !13919)
!14049 = !DILocation(line: 491, column: 31, scope: !13919)
!14050 = !DILocation(line: 492, column: 24, scope: !13919)
!14051 = !DILocation(line: 492, column: 31, scope: !13919)
!14052 = !DILocation(line: 493, column: 24, scope: !13919)
!14053 = !DILocation(line: 493, column: 31, scope: !13919)
!14054 = !DILocation(line: 494, column: 24, scope: !13919)
!14055 = !DILocation(line: 494, column: 31, scope: !13919)
!14056 = !DILocation(line: 495, column: 24, scope: !13919)
!14057 = !DILocation(line: 495, column: 31, scope: !13919)
!14058 = !DILocation(line: 496, column: 24, scope: !13919)
!14059 = !DILocation(line: 496, column: 31, scope: !13919)
!14060 = !DILocation(line: 497, column: 24, scope: !13919)
!14061 = !DILocation(line: 497, column: 31, scope: !13919)
!14062 = !DILocation(line: 498, column: 26, scope: !13919)
!14063 = !DILocation(line: 498, column: 24, scope: !13919)
!14064 = !DILocation(line: 500, column: 15, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 500, column: 15)
!14066 = !DILocation(line: 500, column: 29, scope: !14065)
!14067 = !DILocation(line: 500, column: 15, scope: !13919)
!14068 = !DILocation(line: 502, column: 19, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !925, line: 502, column: 19)
!14070 = distinct !DILexicalBlock(scope: !14065, file: !925, line: 501, column: 13)
!14071 = !DILocation(line: 502, column: 19, scope: !14070)
!14072 = !DILocation(line: 503, column: 17, scope: !14069)
!14073 = !DILocation(line: 504, column: 15, scope: !14070)
!14074 = !DILocation(line: 509, column: 15, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 509, column: 15)
!14076 = !DILocation(line: 509, column: 33, scope: !14075)
!14077 = !DILocation(line: 509, column: 36, scope: !14075)
!14078 = !DILocation(line: 509, column: 55, scope: !14075)
!14079 = !DILocation(line: 509, column: 58, scope: !14075)
!14080 = !DILocation(line: 509, column: 15, scope: !13919)
!14081 = !DILocation(line: 510, column: 13, scope: !14075)
!14082 = !DILabel(scope: !13919, name: "c_and_shell_escape", file: !925, line: 512)
!14083 = !DILocation(line: 512, column: 9, scope: !13919)
!14084 = !DILocation(line: 513, column: 15, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 513, column: 15)
!14086 = !DILocation(line: 513, column: 29, scope: !14085)
!14087 = !DILocation(line: 514, column: 15, scope: !14085)
!14088 = !DILocation(line: 514, column: 18, scope: !14085)
!14089 = !DILocation(line: 513, column: 15, scope: !13919)
!14090 = !DILocation(line: 515, column: 13, scope: !14085)
!14091 = !DILabel(scope: !13919, name: "c_escape", file: !925, line: 517)
!14092 = !DILocation(line: 517, column: 9, scope: !13919)
!14093 = !DILocation(line: 518, column: 15, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 518, column: 15)
!14095 = !DILocation(line: 518, column: 15, scope: !13919)
!14096 = !DILocation(line: 520, column: 19, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14094, file: !925, line: 519, column: 13)
!14098 = !DILocation(line: 520, column: 17, scope: !14097)
!14099 = !DILocation(line: 521, column: 15, scope: !14097)
!14100 = !DILocation(line: 523, column: 11, scope: !13919)
!14101 = !DILocation(line: 526, column: 18, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 526, column: 15)
!14103 = !DILocation(line: 526, column: 26, scope: !14102)
!14104 = !DILocation(line: 526, column: 15, scope: !13919)
!14105 = !DILocation(line: 526, column: 40, scope: !14102)
!14106 = !DILocation(line: 526, column: 47, scope: !14102)
!14107 = !DILocation(line: 526, column: 57, scope: !14102)
!14108 = !DILocation(line: 526, column: 65, scope: !14102)
!14109 = !DILocation(line: 527, column: 13, scope: !14102)
!14110 = !DILocation(line: 528, column: 11, scope: !13919)
!14111 = !DILocation(line: 530, column: 15, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 530, column: 15)
!14113 = !DILocation(line: 530, column: 17, scope: !14112)
!14114 = !DILocation(line: 530, column: 15, scope: !13919)
!14115 = !DILocation(line: 531, column: 13, scope: !14112)
!14116 = !DILocation(line: 532, column: 11, scope: !13919)
!14117 = !DILocation(line: 534, column: 36, scope: !13919)
!14118 = !DILocation(line: 535, column: 11, scope: !13919)
!14119 = !DILocation(line: 548, column: 15, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 548, column: 15)
!14121 = !DILocation(line: 548, column: 29, scope: !14120)
!14122 = !DILocation(line: 549, column: 15, scope: !14120)
!14123 = !DILocation(line: 549, column: 18, scope: !14120)
!14124 = !DILocation(line: 548, column: 15, scope: !13919)
!14125 = !DILocation(line: 550, column: 13, scope: !14120)
!14126 = !DILocation(line: 551, column: 11, scope: !13919)
!14127 = !DILocation(line: 554, column: 36, scope: !13919)
!14128 = !DILocation(line: 555, column: 36, scope: !13919)
!14129 = !DILocation(line: 556, column: 15, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 556, column: 15)
!14131 = !DILocation(line: 556, column: 29, scope: !14130)
!14132 = !DILocation(line: 556, column: 15, scope: !13919)
!14133 = !DILocation(line: 558, column: 19, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !925, line: 558, column: 19)
!14135 = distinct !DILexicalBlock(scope: !14130, file: !925, line: 557, column: 13)
!14136 = !DILocation(line: 558, column: 19, scope: !14135)
!14137 = !DILocation(line: 559, column: 17, scope: !14134)
!14138 = !DILocation(line: 561, column: 19, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !925, line: 561, column: 19)
!14140 = !DILocation(line: 561, column: 30, scope: !14139)
!14141 = !DILocation(line: 561, column: 35, scope: !14139)
!14142 = !DILocation(line: 561, column: 19, scope: !14135)
!14143 = !DILocation(line: 566, column: 37, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14139, file: !925, line: 562, column: 17)
!14145 = !DILocation(line: 566, column: 35, scope: !14144)
!14146 = !DILocation(line: 567, column: 30, scope: !14144)
!14147 = !DILocation(line: 568, column: 17, scope: !14144)
!14148 = !DILocation(line: 570, column: 15, scope: !14135)
!14149 = !DILocation(line: 570, column: 15, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !925, line: 570, column: 15)
!14151 = distinct !DILexicalBlock(scope: !14135, file: !925, line: 570, column: 15)
!14152 = !DILocation(line: 570, column: 15, scope: !14151)
!14153 = !DILocation(line: 571, column: 15, scope: !14135)
!14154 = !DILocation(line: 571, column: 15, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14156, file: !925, line: 571, column: 15)
!14156 = distinct !DILexicalBlock(scope: !14135, file: !925, line: 571, column: 15)
!14157 = !DILocation(line: 571, column: 15, scope: !14156)
!14158 = !DILocation(line: 572, column: 15, scope: !14135)
!14159 = !DILocation(line: 572, column: 15, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14161, file: !925, line: 572, column: 15)
!14161 = distinct !DILexicalBlock(scope: !14135, file: !925, line: 572, column: 15)
!14162 = !DILocation(line: 572, column: 15, scope: !14161)
!14163 = !DILocation(line: 573, column: 40, scope: !14135)
!14164 = !DILocation(line: 574, column: 13, scope: !14135)
!14165 = !DILocation(line: 575, column: 11, scope: !13919)
!14166 = !DILocation(line: 599, column: 36, scope: !13919)
!14167 = !DILocation(line: 600, column: 11, scope: !13919)
!14168 = !DILocalVariable(name: "m", scope: !14169, file: !925, line: 610, type: !52)
!14169 = distinct !DILexicalBlock(scope: !13919, file: !925, line: 608, column: 11)
!14170 = !DILocation(line: 610, column: 20, scope: !14169)
!14171 = !DILocalVariable(name: "printable", scope: !14169, file: !925, line: 612, type: !139)
!14172 = !DILocation(line: 612, column: 18, scope: !14169)
!14173 = !DILocation(line: 614, column: 17, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14169, file: !925, line: 614, column: 17)
!14175 = !DILocation(line: 614, column: 17, scope: !14169)
!14176 = !DILocation(line: 616, column: 19, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14174, file: !925, line: 615, column: 15)
!14178 = !DILocation(line: 617, column: 29, scope: !14177)
!14179 = !DILocation(line: 617, column: 41, scope: !14177)
!14180 = !DILocation(line: 617, column: 27, scope: !14177)
!14181 = !DILocation(line: 618, column: 15, scope: !14177)
!14182 = !DILocalVariable(name: "mbstate", scope: !14183, file: !925, line: 621, type: !944)
!14183 = distinct !DILexicalBlock(scope: !14174, file: !925, line: 620, column: 15)
!14184 = !DILocation(line: 621, column: 27, scope: !14183)
!14185 = !DILocation(line: 622, column: 17, scope: !14183)
!14186 = !DILocation(line: 624, column: 19, scope: !14183)
!14187 = !DILocation(line: 625, column: 27, scope: !14183)
!14188 = !DILocation(line: 626, column: 21, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14183, file: !925, line: 626, column: 21)
!14190 = !DILocation(line: 626, column: 29, scope: !14189)
!14191 = !DILocation(line: 626, column: 21, scope: !14183)
!14192 = !DILocation(line: 627, column: 37, scope: !14189)
!14193 = !DILocation(line: 627, column: 29, scope: !14189)
!14194 = !DILocation(line: 627, column: 27, scope: !14189)
!14195 = !DILocation(line: 627, column: 19, scope: !14189)
!14196 = !DILocation(line: 629, column: 17, scope: !14183)
!14197 = !DILocalVariable(name: "w", scope: !14198, file: !925, line: 631, type: !955)
!14198 = distinct !DILexicalBlock(scope: !14183, file: !925, line: 630, column: 19)
!14199 = !DILocation(line: 631, column: 29, scope: !14198)
!14200 = !DILocalVariable(name: "bytes", scope: !14198, file: !925, line: 632, type: !52)
!14201 = !DILocation(line: 632, column: 28, scope: !14198)
!14202 = !DILocation(line: 632, column: 50, scope: !14198)
!14203 = !DILocation(line: 632, column: 54, scope: !14198)
!14204 = !DILocation(line: 632, column: 58, scope: !14198)
!14205 = !DILocation(line: 632, column: 56, scope: !14198)
!14206 = !DILocation(line: 633, column: 45, scope: !14198)
!14207 = !DILocation(line: 633, column: 56, scope: !14198)
!14208 = !DILocation(line: 633, column: 60, scope: !14198)
!14209 = !DILocation(line: 633, column: 58, scope: !14198)
!14210 = !DILocation(line: 633, column: 53, scope: !14198)
!14211 = !DILocation(line: 632, column: 36, scope: !14198)
!14212 = !DILocation(line: 634, column: 25, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14198, file: !925, line: 634, column: 25)
!14214 = !DILocation(line: 634, column: 31, scope: !14213)
!14215 = !DILocation(line: 634, column: 25, scope: !14198)
!14216 = !DILocation(line: 635, column: 23, scope: !14213)
!14217 = !DILocation(line: 636, column: 30, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14213, file: !925, line: 636, column: 30)
!14219 = !DILocation(line: 636, column: 36, scope: !14218)
!14220 = !DILocation(line: 636, column: 30, scope: !14213)
!14221 = !DILocation(line: 638, column: 35, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14218, file: !925, line: 637, column: 23)
!14223 = !DILocation(line: 639, column: 25, scope: !14222)
!14224 = !DILocation(line: 641, column: 30, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14218, file: !925, line: 641, column: 30)
!14226 = !DILocation(line: 641, column: 36, scope: !14225)
!14227 = !DILocation(line: 641, column: 30, scope: !14218)
!14228 = !DILocation(line: 643, column: 35, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14225, file: !925, line: 642, column: 23)
!14230 = !DILocation(line: 644, column: 25, scope: !14229)
!14231 = !DILocation(line: 644, column: 32, scope: !14229)
!14232 = !DILocation(line: 644, column: 36, scope: !14229)
!14233 = !DILocation(line: 644, column: 34, scope: !14229)
!14234 = !DILocation(line: 644, column: 40, scope: !14229)
!14235 = !DILocation(line: 644, column: 38, scope: !14229)
!14236 = !DILocation(line: 644, column: 48, scope: !14229)
!14237 = !DILocation(line: 644, column: 51, scope: !14229)
!14238 = !DILocation(line: 644, column: 55, scope: !14229)
!14239 = !DILocation(line: 644, column: 59, scope: !14229)
!14240 = !DILocation(line: 644, column: 57, scope: !14229)
!14241 = !DILocation(line: 0, scope: !14229)
!14242 = !DILocation(line: 645, column: 28, scope: !14229)
!14243 = distinct !{!14243, !14230, !14242}
!14244 = !DILocation(line: 646, column: 25, scope: !14229)
!14245 = !DILocation(line: 654, column: 44, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !925, line: 654, column: 29)
!14247 = distinct !DILexicalBlock(scope: !14225, file: !925, line: 649, column: 23)
!14248 = !DILocation(line: 655, column: 29, scope: !14246)
!14249 = !DILocation(line: 655, column: 32, scope: !14246)
!14250 = !DILocation(line: 655, column: 46, scope: !14246)
!14251 = !DILocation(line: 654, column: 29, scope: !14247)
!14252 = !DILocalVariable(name: "j", scope: !14253, file: !925, line: 657, type: !52)
!14253 = distinct !DILexicalBlock(scope: !14246, file: !925, line: 656, column: 27)
!14254 = !DILocation(line: 657, column: 36, scope: !14253)
!14255 = !DILocation(line: 658, column: 36, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14253, file: !925, line: 658, column: 29)
!14257 = !DILocation(line: 658, column: 34, scope: !14256)
!14258 = !DILocation(line: 658, column: 41, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14256, file: !925, line: 658, column: 29)
!14260 = !DILocation(line: 658, column: 45, scope: !14259)
!14261 = !DILocation(line: 658, column: 43, scope: !14259)
!14262 = !DILocation(line: 658, column: 29, scope: !14256)
!14263 = !DILocation(line: 659, column: 39, scope: !14259)
!14264 = !DILocation(line: 659, column: 43, scope: !14259)
!14265 = !DILocation(line: 659, column: 47, scope: !14259)
!14266 = !DILocation(line: 659, column: 45, scope: !14259)
!14267 = !DILocation(line: 659, column: 51, scope: !14259)
!14268 = !DILocation(line: 659, column: 49, scope: !14259)
!14269 = !DILocation(line: 659, column: 31, scope: !14259)
!14270 = !DILocation(line: 663, column: 35, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14259, file: !925, line: 660, column: 33)
!14272 = !DILocation(line: 666, column: 35, scope: !14271)
!14273 = !DILocation(line: 667, column: 33, scope: !14271)
!14274 = !DILocation(line: 658, column: 53, scope: !14259)
!14275 = !DILocation(line: 658, column: 29, scope: !14259)
!14276 = distinct !{!14276, !14262, !14277}
!14277 = !DILocation(line: 667, column: 33, scope: !14256)
!14278 = !DILocation(line: 668, column: 27, scope: !14253)
!14279 = !DILocation(line: 670, column: 41, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14247, file: !925, line: 670, column: 29)
!14281 = !DILocation(line: 670, column: 31, scope: !14280)
!14282 = !DILocation(line: 670, column: 29, scope: !14247)
!14283 = !DILocation(line: 671, column: 37, scope: !14280)
!14284 = !DILocation(line: 671, column: 27, scope: !14280)
!14285 = !DILocation(line: 672, column: 30, scope: !14247)
!14286 = !DILocation(line: 672, column: 27, scope: !14247)
!14287 = !DILocation(line: 674, column: 19, scope: !14198)
!14288 = !DILocation(line: 675, column: 26, scope: !14183)
!14289 = !DILocation(line: 675, column: 24, scope: !14183)
!14290 = distinct !{!14290, !14196, !14291}
!14291 = !DILocation(line: 675, column: 44, scope: !14183)
!14292 = !DILocation(line: 678, column: 40, scope: !14169)
!14293 = !DILocation(line: 678, column: 38, scope: !14169)
!14294 = !DILocation(line: 680, column: 21, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14169, file: !925, line: 680, column: 17)
!14296 = !DILocation(line: 680, column: 19, scope: !14295)
!14297 = !DILocation(line: 680, column: 23, scope: !14295)
!14298 = !DILocation(line: 680, column: 27, scope: !14295)
!14299 = !DILocation(line: 680, column: 45, scope: !14295)
!14300 = !DILocation(line: 680, column: 50, scope: !14295)
!14301 = !DILocation(line: 680, column: 17, scope: !14169)
!14302 = !DILocalVariable(name: "ilim", scope: !14303, file: !925, line: 684, type: !52)
!14303 = distinct !DILexicalBlock(scope: !14295, file: !925, line: 681, column: 15)
!14304 = !DILocation(line: 684, column: 24, scope: !14303)
!14305 = !DILocation(line: 684, column: 31, scope: !14303)
!14306 = !DILocation(line: 684, column: 35, scope: !14303)
!14307 = !DILocation(line: 684, column: 33, scope: !14303)
!14308 = !DILocation(line: 686, column: 17, scope: !14303)
!14309 = !DILocation(line: 688, column: 25, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !925, line: 688, column: 25)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !925, line: 687, column: 19)
!14312 = distinct !DILexicalBlock(scope: !14313, file: !925, line: 686, column: 17)
!14313 = distinct !DILexicalBlock(scope: !14303, file: !925, line: 686, column: 17)
!14314 = !DILocation(line: 688, column: 43, scope: !14310)
!14315 = !DILocation(line: 688, column: 48, scope: !14310)
!14316 = !DILocation(line: 688, column: 25, scope: !14311)
!14317 = !DILocation(line: 690, column: 25, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14310, file: !925, line: 689, column: 23)
!14319 = !DILocation(line: 690, column: 25, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14321, file: !925, line: 690, column: 25)
!14321 = distinct !DILexicalBlock(scope: !14318, file: !925, line: 690, column: 25)
!14322 = !DILocation(line: 690, column: 25, scope: !14321)
!14323 = !DILocation(line: 690, column: 25, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14321, file: !925, line: 690, column: 25)
!14325 = !DILocation(line: 690, column: 25, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14324, file: !925, line: 690, column: 25)
!14327 = !DILocation(line: 690, column: 25, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !925, line: 690, column: 25)
!14329 = distinct !DILexicalBlock(scope: !14326, file: !925, line: 690, column: 25)
!14330 = !DILocation(line: 690, column: 25, scope: !14329)
!14331 = !DILocation(line: 690, column: 25, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !925, line: 690, column: 25)
!14333 = distinct !DILexicalBlock(scope: !14326, file: !925, line: 690, column: 25)
!14334 = !DILocation(line: 690, column: 25, scope: !14333)
!14335 = !DILocation(line: 690, column: 25, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14337, file: !925, line: 690, column: 25)
!14337 = distinct !DILexicalBlock(scope: !14326, file: !925, line: 690, column: 25)
!14338 = !DILocation(line: 690, column: 25, scope: !14337)
!14339 = !DILocation(line: 690, column: 25, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !925, line: 690, column: 25)
!14341 = distinct !DILexicalBlock(scope: !14321, file: !925, line: 690, column: 25)
!14342 = !DILocation(line: 690, column: 25, scope: !14341)
!14343 = !DILocation(line: 691, column: 25, scope: !14318)
!14344 = !DILocation(line: 691, column: 25, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14346, file: !925, line: 691, column: 25)
!14346 = distinct !DILexicalBlock(scope: !14318, file: !925, line: 691, column: 25)
!14347 = !DILocation(line: 691, column: 25, scope: !14346)
!14348 = !DILocation(line: 692, column: 25, scope: !14318)
!14349 = !DILocation(line: 692, column: 25, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !925, line: 692, column: 25)
!14351 = distinct !DILexicalBlock(scope: !14318, file: !925, line: 692, column: 25)
!14352 = !DILocation(line: 692, column: 25, scope: !14351)
!14353 = !DILocation(line: 693, column: 36, scope: !14318)
!14354 = !DILocation(line: 693, column: 38, scope: !14318)
!14355 = !DILocation(line: 693, column: 33, scope: !14318)
!14356 = !DILocation(line: 693, column: 29, scope: !14318)
!14357 = !DILocation(line: 693, column: 27, scope: !14318)
!14358 = !DILocation(line: 694, column: 23, scope: !14318)
!14359 = !DILocation(line: 695, column: 30, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14310, file: !925, line: 695, column: 30)
!14361 = !DILocation(line: 695, column: 30, scope: !14310)
!14362 = !DILocation(line: 697, column: 25, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14360, file: !925, line: 696, column: 23)
!14364 = !DILocation(line: 697, column: 25, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14366, file: !925, line: 697, column: 25)
!14366 = distinct !DILexicalBlock(scope: !14363, file: !925, line: 697, column: 25)
!14367 = !DILocation(line: 697, column: 25, scope: !14366)
!14368 = !DILocation(line: 698, column: 40, scope: !14363)
!14369 = !DILocation(line: 699, column: 23, scope: !14363)
!14370 = !DILocation(line: 700, column: 25, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14311, file: !925, line: 700, column: 25)
!14372 = !DILocation(line: 700, column: 33, scope: !14371)
!14373 = !DILocation(line: 700, column: 35, scope: !14371)
!14374 = !DILocation(line: 700, column: 30, scope: !14371)
!14375 = !DILocation(line: 700, column: 25, scope: !14311)
!14376 = !DILocation(line: 701, column: 23, scope: !14371)
!14377 = !DILocation(line: 702, column: 21, scope: !14311)
!14378 = !DILocation(line: 702, column: 21, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !925, line: 702, column: 21)
!14380 = distinct !DILexicalBlock(scope: !14311, file: !925, line: 702, column: 21)
!14381 = !DILocation(line: 702, column: 21, scope: !14380)
!14382 = !DILocation(line: 702, column: 21, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14379, file: !925, line: 702, column: 21)
!14384 = !DILocation(line: 702, column: 21, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !925, line: 702, column: 21)
!14386 = distinct !DILexicalBlock(scope: !14383, file: !925, line: 702, column: 21)
!14387 = !DILocation(line: 702, column: 21, scope: !14386)
!14388 = !DILocation(line: 702, column: 21, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14390, file: !925, line: 702, column: 21)
!14390 = distinct !DILexicalBlock(scope: !14383, file: !925, line: 702, column: 21)
!14391 = !DILocation(line: 702, column: 21, scope: !14390)
!14392 = !DILocation(line: 703, column: 21, scope: !14311)
!14393 = !DILocation(line: 703, column: 21, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !925, line: 703, column: 21)
!14395 = distinct !DILexicalBlock(scope: !14311, file: !925, line: 703, column: 21)
!14396 = !DILocation(line: 703, column: 21, scope: !14395)
!14397 = !DILocation(line: 704, column: 25, scope: !14311)
!14398 = !DILocation(line: 704, column: 29, scope: !14311)
!14399 = !DILocation(line: 704, column: 23, scope: !14311)
!14400 = !DILocation(line: 686, column: 17, scope: !14312)
!14401 = distinct !{!14401, !14402, !14403}
!14402 = !DILocation(line: 686, column: 17, scope: !14313)
!14403 = !DILocation(line: 705, column: 19, scope: !14313)
!14404 = !DILocation(line: 707, column: 17, scope: !14303)
!14405 = !DILocation(line: 710, column: 9, scope: !13919)
!14406 = !DILocation(line: 712, column: 16, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 712, column: 11)
!14408 = !DILocation(line: 712, column: 34, scope: !14407)
!14409 = !DILocation(line: 712, column: 37, scope: !14407)
!14410 = !DILocation(line: 712, column: 51, scope: !14407)
!14411 = !DILocation(line: 713, column: 15, scope: !14407)
!14412 = !DILocation(line: 713, column: 18, scope: !14407)
!14413 = !DILocation(line: 714, column: 14, scope: !14407)
!14414 = !DILocation(line: 714, column: 17, scope: !14407)
!14415 = !DILocation(line: 715, column: 14, scope: !14407)
!14416 = !DILocation(line: 715, column: 17, scope: !14407)
!14417 = !DILocation(line: 715, column: 33, scope: !14407)
!14418 = !DILocation(line: 715, column: 35, scope: !14407)
!14419 = !DILocation(line: 715, column: 51, scope: !14407)
!14420 = !DILocation(line: 715, column: 53, scope: !14407)
!14421 = !DILocation(line: 715, column: 47, scope: !14407)
!14422 = !DILocation(line: 715, column: 65, scope: !14407)
!14423 = !DILocation(line: 716, column: 11, scope: !14407)
!14424 = !DILocation(line: 716, column: 15, scope: !14407)
!14425 = !DILocation(line: 712, column: 11, scope: !13865)
!14426 = !DILocation(line: 717, column: 9, scope: !14407)
!14427 = !DILabel(scope: !13865, name: "store_escape", file: !925, line: 719)
!14428 = !DILocation(line: 719, column: 5, scope: !13865)
!14429 = !DILocation(line: 720, column: 7, scope: !13865)
!14430 = !DILocation(line: 720, column: 7, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14432, file: !925, line: 720, column: 7)
!14432 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 720, column: 7)
!14433 = !DILocation(line: 720, column: 7, scope: !14432)
!14434 = !DILocation(line: 720, column: 7, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14432, file: !925, line: 720, column: 7)
!14436 = !DILocation(line: 720, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14435, file: !925, line: 720, column: 7)
!14438 = !DILocation(line: 720, column: 7, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !925, line: 720, column: 7)
!14440 = distinct !DILexicalBlock(scope: !14437, file: !925, line: 720, column: 7)
!14441 = !DILocation(line: 720, column: 7, scope: !14440)
!14442 = !DILocation(line: 720, column: 7, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !925, line: 720, column: 7)
!14444 = distinct !DILexicalBlock(scope: !14437, file: !925, line: 720, column: 7)
!14445 = !DILocation(line: 720, column: 7, scope: !14444)
!14446 = !DILocation(line: 720, column: 7, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14448, file: !925, line: 720, column: 7)
!14448 = distinct !DILexicalBlock(scope: !14437, file: !925, line: 720, column: 7)
!14449 = !DILocation(line: 720, column: 7, scope: !14448)
!14450 = !DILocation(line: 720, column: 7, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14452, file: !925, line: 720, column: 7)
!14452 = distinct !DILexicalBlock(scope: !14432, file: !925, line: 720, column: 7)
!14453 = !DILocation(line: 720, column: 7, scope: !14452)
!14454 = !DILabel(scope: !13865, name: "store_c", file: !925, line: 722)
!14455 = !DILocation(line: 722, column: 5, scope: !13865)
!14456 = !DILocation(line: 723, column: 7, scope: !13865)
!14457 = !DILocation(line: 723, column: 7, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !925, line: 723, column: 7)
!14459 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 723, column: 7)
!14460 = !DILocation(line: 723, column: 7, scope: !14459)
!14461 = !DILocation(line: 723, column: 7, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14458, file: !925, line: 723, column: 7)
!14463 = !DILocation(line: 723, column: 7, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !925, line: 723, column: 7)
!14465 = distinct !DILexicalBlock(scope: !14462, file: !925, line: 723, column: 7)
!14466 = !DILocation(line: 723, column: 7, scope: !14465)
!14467 = !DILocation(line: 723, column: 7, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14469, file: !925, line: 723, column: 7)
!14469 = distinct !DILexicalBlock(scope: !14462, file: !925, line: 723, column: 7)
!14470 = !DILocation(line: 723, column: 7, scope: !14469)
!14471 = !DILocation(line: 724, column: 7, scope: !13865)
!14472 = !DILocation(line: 724, column: 7, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14474, file: !925, line: 724, column: 7)
!14474 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 724, column: 7)
!14475 = !DILocation(line: 724, column: 7, scope: !14474)
!14476 = !DILocation(line: 726, column: 13, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !13865, file: !925, line: 726, column: 11)
!14478 = !DILocation(line: 726, column: 11, scope: !13865)
!14479 = !DILocation(line: 727, column: 38, scope: !14477)
!14480 = !DILocation(line: 727, column: 9, scope: !14477)
!14481 = !DILocation(line: 728, column: 5, scope: !13865)
!14482 = !DILocation(line: 400, column: 75, scope: !13854)
!14483 = !DILocation(line: 400, column: 3, scope: !13854)
!14484 = distinct !{!14484, !13863, !14485}
!14485 = !DILocation(line: 728, column: 5, scope: !13851)
!14486 = !DILocation(line: 730, column: 7, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 730, column: 7)
!14488 = !DILocation(line: 730, column: 11, scope: !14487)
!14489 = !DILocation(line: 730, column: 16, scope: !14487)
!14490 = !DILocation(line: 730, column: 19, scope: !14487)
!14491 = !DILocation(line: 730, column: 33, scope: !14487)
!14492 = !DILocation(line: 731, column: 7, scope: !14487)
!14493 = !DILocation(line: 731, column: 10, scope: !14487)
!14494 = !DILocation(line: 730, column: 7, scope: !13713)
!14495 = !DILocation(line: 732, column: 5, scope: !14487)
!14496 = !DILocation(line: 738, column: 7, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 738, column: 7)
!14498 = !DILocation(line: 738, column: 21, scope: !14497)
!14499 = !DILocation(line: 738, column: 51, scope: !14497)
!14500 = !DILocation(line: 738, column: 56, scope: !14497)
!14501 = !DILocation(line: 739, column: 7, scope: !14497)
!14502 = !DILocation(line: 739, column: 10, scope: !14497)
!14503 = !DILocation(line: 738, column: 7, scope: !13713)
!14504 = !DILocation(line: 741, column: 11, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14506, file: !925, line: 741, column: 11)
!14506 = distinct !DILexicalBlock(scope: !14497, file: !925, line: 740, column: 5)
!14507 = !DILocation(line: 741, column: 11, scope: !14506)
!14508 = !DILocation(line: 742, column: 42, scope: !14505)
!14509 = !DILocation(line: 742, column: 50, scope: !14505)
!14510 = !DILocation(line: 742, column: 67, scope: !14505)
!14511 = !DILocation(line: 742, column: 72, scope: !14505)
!14512 = !DILocation(line: 744, column: 42, scope: !14505)
!14513 = !DILocation(line: 744, column: 49, scope: !14505)
!14514 = !DILocation(line: 745, column: 42, scope: !14505)
!14515 = !DILocation(line: 745, column: 54, scope: !14505)
!14516 = !DILocation(line: 742, column: 16, scope: !14505)
!14517 = !DILocation(line: 742, column: 9, scope: !14505)
!14518 = !DILocation(line: 746, column: 18, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14505, file: !925, line: 746, column: 16)
!14520 = !DILocation(line: 746, column: 29, scope: !14519)
!14521 = !DILocation(line: 746, column: 32, scope: !14519)
!14522 = !DILocation(line: 746, column: 16, scope: !14505)
!14523 = !DILocation(line: 749, column: 24, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14519, file: !925, line: 747, column: 9)
!14525 = !DILocation(line: 749, column: 22, scope: !14524)
!14526 = !DILocation(line: 750, column: 15, scope: !14524)
!14527 = !DILocation(line: 751, column: 11, scope: !14524)
!14528 = !DILocation(line: 753, column: 5, scope: !14506)
!14529 = !DILocation(line: 755, column: 7, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 755, column: 7)
!14531 = !DILocation(line: 755, column: 20, scope: !14530)
!14532 = !DILocation(line: 755, column: 24, scope: !14530)
!14533 = !DILocation(line: 755, column: 7, scope: !13713)
!14534 = !DILocation(line: 756, column: 5, scope: !14530)
!14535 = !DILocation(line: 756, column: 13, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !925, line: 756, column: 5)
!14537 = distinct !DILexicalBlock(scope: !14530, file: !925, line: 756, column: 5)
!14538 = !DILocation(line: 756, column: 12, scope: !14536)
!14539 = !DILocation(line: 756, column: 5, scope: !14537)
!14540 = !DILocation(line: 757, column: 7, scope: !14536)
!14541 = !DILocation(line: 757, column: 7, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14543, file: !925, line: 757, column: 7)
!14543 = distinct !DILexicalBlock(scope: !14536, file: !925, line: 757, column: 7)
!14544 = !DILocation(line: 757, column: 7, scope: !14543)
!14545 = !DILocation(line: 756, column: 39, scope: !14536)
!14546 = !DILocation(line: 756, column: 5, scope: !14536)
!14547 = distinct !{!14547, !14539, !14548}
!14548 = !DILocation(line: 757, column: 7, scope: !14537)
!14549 = !DILocation(line: 759, column: 7, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 759, column: 7)
!14551 = !DILocation(line: 759, column: 13, scope: !14550)
!14552 = !DILocation(line: 759, column: 11, scope: !14550)
!14553 = !DILocation(line: 759, column: 7, scope: !13713)
!14554 = !DILocation(line: 760, column: 5, scope: !14550)
!14555 = !DILocation(line: 760, column: 12, scope: !14550)
!14556 = !DILocation(line: 760, column: 17, scope: !14550)
!14557 = !DILocation(line: 761, column: 10, scope: !13713)
!14558 = !DILocation(line: 761, column: 3, scope: !13713)
!14559 = !DILabel(scope: !13713, name: "force_outer_quoting_style", file: !925, line: 763)
!14560 = !DILocation(line: 763, column: 2, scope: !13713)
!14561 = !DILocation(line: 766, column: 7, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !13713, file: !925, line: 766, column: 7)
!14563 = !DILocation(line: 766, column: 21, scope: !14562)
!14564 = !DILocation(line: 766, column: 51, scope: !14562)
!14565 = !DILocation(line: 766, column: 54, scope: !14562)
!14566 = !DILocation(line: 766, column: 7, scope: !13713)
!14567 = !DILocation(line: 767, column: 19, scope: !14562)
!14568 = !DILocation(line: 767, column: 5, scope: !14562)
!14569 = !DILocation(line: 768, column: 36, scope: !13713)
!14570 = !DILocation(line: 768, column: 44, scope: !13713)
!14571 = !DILocation(line: 768, column: 56, scope: !13713)
!14572 = !DILocation(line: 768, column: 61, scope: !13713)
!14573 = !DILocation(line: 769, column: 36, scope: !13713)
!14574 = !DILocation(line: 770, column: 36, scope: !13713)
!14575 = !DILocation(line: 770, column: 42, scope: !13713)
!14576 = !DILocation(line: 771, column: 36, scope: !13713)
!14577 = !DILocation(line: 771, column: 48, scope: !13713)
!14578 = !DILocation(line: 768, column: 10, scope: !13713)
!14579 = !DILocation(line: 768, column: 3, scope: !13713)
!14580 = !DILocation(line: 772, column: 1, scope: !13713)
!14581 = distinct !DISubprogram(name: "gettext_quote", scope: !925, file: !925, line: 207, type: !14582, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{!180, !180, !905}
!14584 = !DILocalVariable(name: "msgid", arg: 1, scope: !14581, file: !925, line: 207, type: !180)
!14585 = !DILocation(line: 207, column: 28, scope: !14581)
!14586 = !DILocalVariable(name: "s", arg: 2, scope: !14581, file: !925, line: 207, type: !905)
!14587 = !DILocation(line: 207, column: 54, scope: !14581)
!14588 = !DILocalVariable(name: "translation", scope: !14581, file: !925, line: 209, type: !180)
!14589 = !DILocation(line: 209, column: 15, scope: !14581)
!14590 = !DILocation(line: 209, column: 29, scope: !14581)
!14591 = !DILocalVariable(name: "locale_code", scope: !14581, file: !925, line: 210, type: !180)
!14592 = !DILocation(line: 210, column: 15, scope: !14581)
!14593 = !DILocation(line: 212, column: 7, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14581, file: !925, line: 212, column: 7)
!14595 = !DILocation(line: 212, column: 22, scope: !14594)
!14596 = !DILocation(line: 212, column: 19, scope: !14594)
!14597 = !DILocation(line: 212, column: 7, scope: !14581)
!14598 = !DILocation(line: 213, column: 12, scope: !14594)
!14599 = !DILocation(line: 213, column: 5, scope: !14594)
!14600 = !DILocation(line: 233, column: 17, scope: !14581)
!14601 = !DILocation(line: 233, column: 15, scope: !14581)
!14602 = !DILocation(line: 234, column: 7, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14581, file: !925, line: 234, column: 7)
!14604 = !DILocation(line: 234, column: 7, scope: !14581)
!14605 = !DILocation(line: 235, column: 12, scope: !14603)
!14606 = !DILocation(line: 235, column: 21, scope: !14603)
!14607 = !DILocation(line: 235, column: 5, scope: !14603)
!14608 = !DILocation(line: 236, column: 7, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14581, file: !925, line: 236, column: 7)
!14610 = !DILocation(line: 236, column: 7, scope: !14581)
!14611 = !DILocation(line: 237, column: 12, scope: !14609)
!14612 = !DILocation(line: 237, column: 21, scope: !14609)
!14613 = !DILocation(line: 237, column: 5, scope: !14609)
!14614 = !DILocation(line: 239, column: 11, scope: !14581)
!14615 = !DILocation(line: 239, column: 13, scope: !14581)
!14616 = !DILocation(line: 239, column: 3, scope: !14581)
!14617 = !DILocation(line: 240, column: 1, scope: !14581)
!14618 = distinct !DISubprogram(name: "quotearg_alloc", scope: !925, file: !925, line: 799, type: !14619, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{!7, !180, !52, !934}
!14621 = !DILocalVariable(name: "arg", arg: 1, scope: !14618, file: !925, line: 799, type: !180)
!14622 = !DILocation(line: 799, column: 29, scope: !14618)
!14623 = !DILocalVariable(name: "argsize", arg: 2, scope: !14618, file: !925, line: 799, type: !52)
!14624 = !DILocation(line: 799, column: 41, scope: !14618)
!14625 = !DILocalVariable(name: "o", arg: 3, scope: !14618, file: !925, line: 800, type: !934)
!14626 = !DILocation(line: 800, column: 47, scope: !14618)
!14627 = !DILocation(line: 802, column: 30, scope: !14618)
!14628 = !DILocation(line: 802, column: 35, scope: !14618)
!14629 = !DILocation(line: 802, column: 50, scope: !14618)
!14630 = !DILocation(line: 802, column: 10, scope: !14618)
!14631 = !DILocation(line: 802, column: 3, scope: !14618)
!14632 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !925, file: !925, line: 812, type: !14633, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14633 = !DISubroutineType(types: !14634)
!14634 = !{!7, !180, !52, !9427, !934}
!14635 = !DILocalVariable(name: "arg", arg: 1, scope: !14632, file: !925, line: 812, type: !180)
!14636 = !DILocation(line: 812, column: 33, scope: !14632)
!14637 = !DILocalVariable(name: "argsize", arg: 2, scope: !14632, file: !925, line: 812, type: !52)
!14638 = !DILocation(line: 812, column: 45, scope: !14632)
!14639 = !DILocalVariable(name: "size", arg: 3, scope: !14632, file: !925, line: 812, type: !9427)
!14640 = !DILocation(line: 812, column: 62, scope: !14632)
!14641 = !DILocalVariable(name: "o", arg: 4, scope: !14632, file: !925, line: 813, type: !934)
!14642 = !DILocation(line: 813, column: 51, scope: !14632)
!14643 = !DILocalVariable(name: "p", scope: !14632, file: !925, line: 815, type: !934)
!14644 = !DILocation(line: 815, column: 33, scope: !14632)
!14645 = !DILocation(line: 815, column: 37, scope: !14632)
!14646 = !DILocation(line: 815, column: 41, scope: !14632)
!14647 = !DILocalVariable(name: "e", scope: !14632, file: !925, line: 816, type: !5)
!14648 = !DILocation(line: 816, column: 7, scope: !14632)
!14649 = !DILocation(line: 816, column: 11, scope: !14632)
!14650 = !DILocalVariable(name: "flags", scope: !14632, file: !925, line: 818, type: !5)
!14651 = !DILocation(line: 818, column: 7, scope: !14632)
!14652 = !DILocation(line: 818, column: 15, scope: !14632)
!14653 = !DILocation(line: 818, column: 18, scope: !14632)
!14654 = !DILocation(line: 818, column: 27, scope: !14632)
!14655 = !DILocation(line: 818, column: 24, scope: !14632)
!14656 = !DILocalVariable(name: "bufsize", scope: !14632, file: !925, line: 819, type: !52)
!14657 = !DILocation(line: 819, column: 10, scope: !14632)
!14658 = !DILocation(line: 819, column: 52, scope: !14632)
!14659 = !DILocation(line: 819, column: 57, scope: !14632)
!14660 = !DILocation(line: 819, column: 66, scope: !14632)
!14661 = !DILocation(line: 819, column: 69, scope: !14632)
!14662 = !DILocation(line: 820, column: 46, scope: !14632)
!14663 = !DILocation(line: 820, column: 53, scope: !14632)
!14664 = !DILocation(line: 820, column: 56, scope: !14632)
!14665 = !DILocation(line: 821, column: 46, scope: !14632)
!14666 = !DILocation(line: 821, column: 49, scope: !14632)
!14667 = !DILocation(line: 822, column: 46, scope: !14632)
!14668 = !DILocation(line: 822, column: 49, scope: !14632)
!14669 = !DILocation(line: 819, column: 20, scope: !14632)
!14670 = !DILocation(line: 822, column: 62, scope: !14632)
!14671 = !DILocalVariable(name: "buf", scope: !14632, file: !925, line: 823, type: !7)
!14672 = !DILocation(line: 823, column: 9, scope: !14632)
!14673 = !DILocation(line: 823, column: 27, scope: !14632)
!14674 = !DILocation(line: 823, column: 15, scope: !14632)
!14675 = !DILocation(line: 824, column: 29, scope: !14632)
!14676 = !DILocation(line: 824, column: 34, scope: !14632)
!14677 = !DILocation(line: 824, column: 43, scope: !14632)
!14678 = !DILocation(line: 824, column: 48, scope: !14632)
!14679 = !DILocation(line: 824, column: 57, scope: !14632)
!14680 = !DILocation(line: 824, column: 60, scope: !14632)
!14681 = !DILocation(line: 824, column: 67, scope: !14632)
!14682 = !DILocation(line: 825, column: 29, scope: !14632)
!14683 = !DILocation(line: 825, column: 32, scope: !14632)
!14684 = !DILocation(line: 826, column: 29, scope: !14632)
!14685 = !DILocation(line: 826, column: 32, scope: !14632)
!14686 = !DILocation(line: 826, column: 44, scope: !14632)
!14687 = !DILocation(line: 826, column: 47, scope: !14632)
!14688 = !DILocation(line: 824, column: 3, scope: !14632)
!14689 = !DILocation(line: 827, column: 11, scope: !14632)
!14690 = !DILocation(line: 827, column: 3, scope: !14632)
!14691 = !DILocation(line: 827, column: 9, scope: !14632)
!14692 = !DILocation(line: 828, column: 7, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14632, file: !925, line: 828, column: 7)
!14694 = !DILocation(line: 828, column: 7, scope: !14632)
!14695 = !DILocation(line: 829, column: 13, scope: !14693)
!14696 = !DILocation(line: 829, column: 21, scope: !14693)
!14697 = !DILocation(line: 829, column: 6, scope: !14693)
!14698 = !DILocation(line: 829, column: 11, scope: !14693)
!14699 = !DILocation(line: 829, column: 5, scope: !14693)
!14700 = !DILocation(line: 830, column: 10, scope: !14632)
!14701 = !DILocation(line: 830, column: 3, scope: !14632)
!14702 = distinct !DISubprogram(name: "quotearg_free", scope: !925, file: !925, line: 848, type: !694, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14703 = !DILocalVariable(name: "sv", scope: !14702, file: !925, line: 850, type: !937)
!14704 = !DILocation(line: 850, column: 19, scope: !14702)
!14705 = !DILocation(line: 850, column: 24, scope: !14702)
!14706 = !DILocalVariable(name: "i", scope: !14702, file: !925, line: 851, type: !5)
!14707 = !DILocation(line: 851, column: 7, scope: !14702)
!14708 = !DILocation(line: 852, column: 10, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14702, file: !925, line: 852, column: 3)
!14710 = !DILocation(line: 852, column: 8, scope: !14709)
!14711 = !DILocation(line: 852, column: 15, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14709, file: !925, line: 852, column: 3)
!14713 = !DILocation(line: 852, column: 19, scope: !14712)
!14714 = !DILocation(line: 852, column: 17, scope: !14712)
!14715 = !DILocation(line: 852, column: 3, scope: !14709)
!14716 = !DILocation(line: 853, column: 11, scope: !14712)
!14717 = !DILocation(line: 853, column: 14, scope: !14712)
!14718 = !DILocation(line: 853, column: 17, scope: !14712)
!14719 = !DILocation(line: 853, column: 5, scope: !14712)
!14720 = !DILocation(line: 852, column: 28, scope: !14712)
!14721 = !DILocation(line: 852, column: 3, scope: !14712)
!14722 = distinct !{!14722, !14715, !14723}
!14723 = !DILocation(line: 853, column: 20, scope: !14709)
!14724 = !DILocation(line: 854, column: 7, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14702, file: !925, line: 854, column: 7)
!14726 = !DILocation(line: 854, column: 13, scope: !14725)
!14727 = !DILocation(line: 854, column: 17, scope: !14725)
!14728 = !DILocation(line: 854, column: 7, scope: !14702)
!14729 = !DILocation(line: 856, column: 13, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14725, file: !925, line: 855, column: 5)
!14731 = !DILocation(line: 856, column: 19, scope: !14730)
!14732 = !DILocation(line: 856, column: 7, scope: !14730)
!14733 = !DILocation(line: 857, column: 21, scope: !14730)
!14734 = !DILocation(line: 858, column: 20, scope: !14730)
!14735 = !DILocation(line: 859, column: 5, scope: !14730)
!14736 = !DILocation(line: 860, column: 7, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14702, file: !925, line: 860, column: 7)
!14738 = !DILocation(line: 860, column: 10, scope: !14737)
!14739 = !DILocation(line: 860, column: 7, scope: !14702)
!14740 = !DILocation(line: 862, column: 13, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14737, file: !925, line: 861, column: 5)
!14742 = !DILocation(line: 862, column: 7, scope: !14741)
!14743 = !DILocation(line: 863, column: 15, scope: !14741)
!14744 = !DILocation(line: 864, column: 5, scope: !14741)
!14745 = !DILocation(line: 865, column: 10, scope: !14702)
!14746 = !DILocation(line: 866, column: 1, scope: !14702)
!14747 = distinct !DISubprogram(name: "quotearg_n", scope: !925, file: !925, line: 931, type: !14748, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14748 = !DISubroutineType(types: !14749)
!14749 = !{!7, !5, !180}
!14750 = !DILocalVariable(name: "n", arg: 1, scope: !14747, file: !925, line: 931, type: !5)
!14751 = !DILocation(line: 931, column: 17, scope: !14747)
!14752 = !DILocalVariable(name: "arg", arg: 2, scope: !14747, file: !925, line: 931, type: !180)
!14753 = !DILocation(line: 931, column: 32, scope: !14747)
!14754 = !DILocation(line: 933, column: 30, scope: !14747)
!14755 = !DILocation(line: 933, column: 33, scope: !14747)
!14756 = !DILocation(line: 933, column: 10, scope: !14747)
!14757 = !DILocation(line: 933, column: 3, scope: !14747)
!14758 = distinct !DISubprogram(name: "quotearg_n_options", scope: !925, file: !925, line: 877, type: !14759, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14759 = !DISubroutineType(types: !14760)
!14760 = !{!7, !5, !180, !52, !934}
!14761 = !DILocalVariable(name: "n", arg: 1, scope: !14758, file: !925, line: 877, type: !5)
!14762 = !DILocation(line: 877, column: 25, scope: !14758)
!14763 = !DILocalVariable(name: "arg", arg: 2, scope: !14758, file: !925, line: 877, type: !180)
!14764 = !DILocation(line: 877, column: 40, scope: !14758)
!14765 = !DILocalVariable(name: "argsize", arg: 3, scope: !14758, file: !925, line: 877, type: !52)
!14766 = !DILocation(line: 877, column: 52, scope: !14758)
!14767 = !DILocalVariable(name: "options", arg: 4, scope: !14758, file: !925, line: 878, type: !934)
!14768 = !DILocation(line: 878, column: 51, scope: !14758)
!14769 = !DILocalVariable(name: "e", scope: !14758, file: !925, line: 880, type: !5)
!14770 = !DILocation(line: 880, column: 7, scope: !14758)
!14771 = !DILocation(line: 880, column: 11, scope: !14758)
!14772 = !DILocalVariable(name: "sv", scope: !14758, file: !925, line: 882, type: !937)
!14773 = !DILocation(line: 882, column: 19, scope: !14758)
!14774 = !DILocation(line: 882, column: 24, scope: !14758)
!14775 = !DILocation(line: 884, column: 7, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14758, file: !925, line: 884, column: 7)
!14777 = !DILocation(line: 884, column: 9, scope: !14776)
!14778 = !DILocation(line: 884, column: 7, scope: !14758)
!14779 = !DILocation(line: 885, column: 5, scope: !14776)
!14780 = !DILocation(line: 887, column: 7, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14758, file: !925, line: 887, column: 7)
!14782 = !DILocation(line: 887, column: 17, scope: !14781)
!14783 = !DILocation(line: 887, column: 14, scope: !14781)
!14784 = !DILocation(line: 887, column: 7, scope: !14758)
!14785 = !DILocalVariable(name: "preallocated", scope: !14786, file: !925, line: 889, type: !139)
!14786 = distinct !DILexicalBlock(scope: !14781, file: !925, line: 888, column: 5)
!14787 = !DILocation(line: 889, column: 12, scope: !14786)
!14788 = !DILocation(line: 889, column: 28, scope: !14786)
!14789 = !DILocation(line: 889, column: 31, scope: !14786)
!14790 = !DILocalVariable(name: "nmax", scope: !14786, file: !925, line: 890, type: !5)
!14791 = !DILocation(line: 890, column: 11, scope: !14786)
!14792 = !DILocation(line: 892, column: 11, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14786, file: !925, line: 892, column: 11)
!14794 = !DILocation(line: 892, column: 18, scope: !14793)
!14795 = !DILocation(line: 892, column: 16, scope: !14793)
!14796 = !DILocation(line: 892, column: 11, scope: !14786)
!14797 = !DILocation(line: 893, column: 9, scope: !14793)
!14798 = !DILocation(line: 895, column: 32, scope: !14786)
!14799 = !DILocation(line: 895, column: 54, scope: !14786)
!14800 = !DILocation(line: 895, column: 59, scope: !14786)
!14801 = !DILocation(line: 895, column: 61, scope: !14786)
!14802 = !DILocation(line: 895, column: 58, scope: !14786)
!14803 = !DILocation(line: 895, column: 66, scope: !14786)
!14804 = !DILocation(line: 895, column: 22, scope: !14786)
!14805 = !DILocation(line: 895, column: 20, scope: !14786)
!14806 = !DILocation(line: 895, column: 15, scope: !14786)
!14807 = !DILocation(line: 896, column: 11, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14786, file: !925, line: 896, column: 11)
!14809 = !DILocation(line: 896, column: 11, scope: !14786)
!14810 = !DILocation(line: 897, column: 10, scope: !14808)
!14811 = !DILocation(line: 897, column: 15, scope: !14808)
!14812 = !DILocation(line: 897, column: 9, scope: !14808)
!14813 = !DILocation(line: 898, column: 15, scope: !14786)
!14814 = !DILocation(line: 898, column: 20, scope: !14786)
!14815 = !DILocation(line: 898, column: 18, scope: !14786)
!14816 = !DILocation(line: 898, column: 7, scope: !14786)
!14817 = !DILocation(line: 898, column: 32, scope: !14786)
!14818 = !DILocation(line: 898, column: 34, scope: !14786)
!14819 = !DILocation(line: 898, column: 40, scope: !14786)
!14820 = !DILocation(line: 898, column: 38, scope: !14786)
!14821 = !DILocation(line: 898, column: 31, scope: !14786)
!14822 = !DILocation(line: 898, column: 48, scope: !14786)
!14823 = !DILocation(line: 899, column: 16, scope: !14786)
!14824 = !DILocation(line: 899, column: 18, scope: !14786)
!14825 = !DILocation(line: 899, column: 14, scope: !14786)
!14826 = !DILocation(line: 900, column: 5, scope: !14786)
!14827 = !DILocalVariable(name: "size", scope: !14828, file: !925, line: 903, type: !52)
!14828 = distinct !DILexicalBlock(scope: !14758, file: !925, line: 902, column: 3)
!14829 = !DILocation(line: 903, column: 12, scope: !14828)
!14830 = !DILocation(line: 903, column: 19, scope: !14828)
!14831 = !DILocation(line: 903, column: 22, scope: !14828)
!14832 = !DILocation(line: 903, column: 25, scope: !14828)
!14833 = !DILocalVariable(name: "val", scope: !14828, file: !925, line: 904, type: !7)
!14834 = !DILocation(line: 904, column: 11, scope: !14828)
!14835 = !DILocation(line: 904, column: 17, scope: !14828)
!14836 = !DILocation(line: 904, column: 20, scope: !14828)
!14837 = !DILocation(line: 904, column: 23, scope: !14828)
!14838 = !DILocalVariable(name: "flags", scope: !14828, file: !925, line: 906, type: !5)
!14839 = !DILocation(line: 906, column: 9, scope: !14828)
!14840 = !DILocation(line: 906, column: 17, scope: !14828)
!14841 = !DILocation(line: 906, column: 26, scope: !14828)
!14842 = !DILocation(line: 906, column: 32, scope: !14828)
!14843 = !DILocalVariable(name: "qsize", scope: !14828, file: !925, line: 907, type: !52)
!14844 = !DILocation(line: 907, column: 12, scope: !14828)
!14845 = !DILocation(line: 907, column: 46, scope: !14828)
!14846 = !DILocation(line: 907, column: 51, scope: !14828)
!14847 = !DILocation(line: 907, column: 57, scope: !14828)
!14848 = !DILocation(line: 907, column: 62, scope: !14828)
!14849 = !DILocation(line: 908, column: 46, scope: !14828)
!14850 = !DILocation(line: 908, column: 55, scope: !14828)
!14851 = !DILocation(line: 908, column: 62, scope: !14828)
!14852 = !DILocation(line: 909, column: 46, scope: !14828)
!14853 = !DILocation(line: 909, column: 55, scope: !14828)
!14854 = !DILocation(line: 910, column: 46, scope: !14828)
!14855 = !DILocation(line: 910, column: 55, scope: !14828)
!14856 = !DILocation(line: 911, column: 46, scope: !14828)
!14857 = !DILocation(line: 911, column: 55, scope: !14828)
!14858 = !DILocation(line: 907, column: 20, scope: !14828)
!14859 = !DILocation(line: 913, column: 9, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14828, file: !925, line: 913, column: 9)
!14861 = !DILocation(line: 913, column: 17, scope: !14860)
!14862 = !DILocation(line: 913, column: 14, scope: !14860)
!14863 = !DILocation(line: 913, column: 9, scope: !14828)
!14864 = !DILocation(line: 915, column: 29, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14860, file: !925, line: 914, column: 7)
!14866 = !DILocation(line: 915, column: 35, scope: !14865)
!14867 = !DILocation(line: 915, column: 27, scope: !14865)
!14868 = !DILocation(line: 915, column: 9, scope: !14865)
!14869 = !DILocation(line: 915, column: 12, scope: !14865)
!14870 = !DILocation(line: 915, column: 15, scope: !14865)
!14871 = !DILocation(line: 915, column: 20, scope: !14865)
!14872 = !DILocation(line: 916, column: 13, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14865, file: !925, line: 916, column: 13)
!14874 = !DILocation(line: 916, column: 17, scope: !14873)
!14875 = !DILocation(line: 916, column: 13, scope: !14865)
!14876 = !DILocation(line: 917, column: 17, scope: !14873)
!14877 = !DILocation(line: 917, column: 11, scope: !14873)
!14878 = !DILocation(line: 918, column: 39, scope: !14865)
!14879 = !DILocation(line: 918, column: 27, scope: !14865)
!14880 = !DILocation(line: 918, column: 25, scope: !14865)
!14881 = !DILocation(line: 918, column: 9, scope: !14865)
!14882 = !DILocation(line: 918, column: 12, scope: !14865)
!14883 = !DILocation(line: 918, column: 15, scope: !14865)
!14884 = !DILocation(line: 918, column: 19, scope: !14865)
!14885 = !DILocation(line: 919, column: 35, scope: !14865)
!14886 = !DILocation(line: 919, column: 40, scope: !14865)
!14887 = !DILocation(line: 919, column: 46, scope: !14865)
!14888 = !DILocation(line: 919, column: 51, scope: !14865)
!14889 = !DILocation(line: 919, column: 60, scope: !14865)
!14890 = !DILocation(line: 919, column: 69, scope: !14865)
!14891 = !DILocation(line: 920, column: 35, scope: !14865)
!14892 = !DILocation(line: 920, column: 42, scope: !14865)
!14893 = !DILocation(line: 920, column: 51, scope: !14865)
!14894 = !DILocation(line: 921, column: 35, scope: !14865)
!14895 = !DILocation(line: 921, column: 44, scope: !14865)
!14896 = !DILocation(line: 922, column: 35, scope: !14865)
!14897 = !DILocation(line: 922, column: 44, scope: !14865)
!14898 = !DILocation(line: 919, column: 9, scope: !14865)
!14899 = !DILocation(line: 923, column: 7, scope: !14865)
!14900 = !DILocation(line: 925, column: 13, scope: !14828)
!14901 = !DILocation(line: 925, column: 5, scope: !14828)
!14902 = !DILocation(line: 925, column: 11, scope: !14828)
!14903 = !DILocation(line: 926, column: 12, scope: !14828)
!14904 = !DILocation(line: 926, column: 5, scope: !14828)
!14905 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !925, file: !925, line: 937, type: !14906, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14906 = !DISubroutineType(types: !14907)
!14907 = !{!7, !5, !180, !52}
!14908 = !DILocalVariable(name: "n", arg: 1, scope: !14905, file: !925, line: 937, type: !5)
!14909 = !DILocation(line: 937, column: 21, scope: !14905)
!14910 = !DILocalVariable(name: "arg", arg: 2, scope: !14905, file: !925, line: 937, type: !180)
!14911 = !DILocation(line: 937, column: 36, scope: !14905)
!14912 = !DILocalVariable(name: "argsize", arg: 3, scope: !14905, file: !925, line: 937, type: !52)
!14913 = !DILocation(line: 937, column: 48, scope: !14905)
!14914 = !DILocation(line: 939, column: 30, scope: !14905)
!14915 = !DILocation(line: 939, column: 33, scope: !14905)
!14916 = !DILocation(line: 939, column: 38, scope: !14905)
!14917 = !DILocation(line: 939, column: 10, scope: !14905)
!14918 = !DILocation(line: 939, column: 3, scope: !14905)
!14919 = distinct !DISubprogram(name: "quotearg", scope: !925, file: !925, line: 943, type: !2501, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14920 = !DILocalVariable(name: "arg", arg: 1, scope: !14919, file: !925, line: 943, type: !180)
!14921 = !DILocation(line: 943, column: 23, scope: !14919)
!14922 = !DILocation(line: 945, column: 25, scope: !14919)
!14923 = !DILocation(line: 945, column: 10, scope: !14919)
!14924 = !DILocation(line: 945, column: 3, scope: !14919)
!14925 = distinct !DISubprogram(name: "quotearg_mem", scope: !925, file: !925, line: 949, type: !8822, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14926 = !DILocalVariable(name: "arg", arg: 1, scope: !14925, file: !925, line: 949, type: !180)
!14927 = !DILocation(line: 949, column: 27, scope: !14925)
!14928 = !DILocalVariable(name: "argsize", arg: 2, scope: !14925, file: !925, line: 949, type: !52)
!14929 = !DILocation(line: 949, column: 39, scope: !14925)
!14930 = !DILocation(line: 951, column: 29, scope: !14925)
!14931 = !DILocation(line: 951, column: 34, scope: !14925)
!14932 = !DILocation(line: 951, column: 10, scope: !14925)
!14933 = !DILocation(line: 951, column: 3, scope: !14925)
!14934 = distinct !DISubprogram(name: "quotearg_n_style", scope: !925, file: !925, line: 955, type: !14935, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14935 = !DISubroutineType(types: !14936)
!14936 = !{!7, !5, !905, !180}
!14937 = !DILocalVariable(name: "n", arg: 1, scope: !14934, file: !925, line: 955, type: !5)
!14938 = !DILocation(line: 955, column: 23, scope: !14934)
!14939 = !DILocalVariable(name: "s", arg: 2, scope: !14934, file: !925, line: 955, type: !905)
!14940 = !DILocation(line: 955, column: 45, scope: !14934)
!14941 = !DILocalVariable(name: "arg", arg: 3, scope: !14934, file: !925, line: 955, type: !180)
!14942 = !DILocation(line: 955, column: 60, scope: !14934)
!14943 = !DILocalVariable(name: "o", scope: !14934, file: !925, line: 957, type: !935)
!14944 = !DILocation(line: 957, column: 32, scope: !14934)
!14945 = !DILocation(line: 957, column: 64, scope: !14934)
!14946 = !DILocation(line: 957, column: 36, scope: !14934)
!14947 = !DILocation(line: 958, column: 30, scope: !14934)
!14948 = !DILocation(line: 958, column: 33, scope: !14934)
!14949 = !DILocation(line: 958, column: 10, scope: !14934)
!14950 = !DILocation(line: 958, column: 3, scope: !14934)
!14951 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !925, file: !925, line: 193, type: !14952, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14952 = !DISubroutineType(types: !14953)
!14953 = !{!924, !905}
!14954 = !DILocalVariable(name: "style", arg: 1, scope: !14951, file: !925, line: 193, type: !905)
!14955 = !DILocation(line: 193, column: 48, scope: !14951)
!14956 = !DILocalVariable(name: "o", scope: !14951, file: !925, line: 195, type: !924)
!14957 = !DILocation(line: 195, column: 26, scope: !14951)
!14958 = !DILocation(line: 196, column: 7, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14951, file: !925, line: 196, column: 7)
!14960 = !DILocation(line: 196, column: 13, scope: !14959)
!14961 = !DILocation(line: 196, column: 7, scope: !14951)
!14962 = !DILocation(line: 197, column: 5, scope: !14959)
!14963 = !DILocation(line: 198, column: 13, scope: !14951)
!14964 = !DILocation(line: 198, column: 5, scope: !14951)
!14965 = !DILocation(line: 198, column: 11, scope: !14951)
!14966 = !DILocation(line: 199, column: 3, scope: !14951)
!14967 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !925, file: !925, line: 962, type: !14968, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14968 = !DISubroutineType(types: !14969)
!14969 = !{!7, !5, !905, !180, !52}
!14970 = !DILocalVariable(name: "n", arg: 1, scope: !14967, file: !925, line: 962, type: !5)
!14971 = !DILocation(line: 962, column: 27, scope: !14967)
!14972 = !DILocalVariable(name: "s", arg: 2, scope: !14967, file: !925, line: 962, type: !905)
!14973 = !DILocation(line: 962, column: 49, scope: !14967)
!14974 = !DILocalVariable(name: "arg", arg: 3, scope: !14967, file: !925, line: 963, type: !180)
!14975 = !DILocation(line: 963, column: 35, scope: !14967)
!14976 = !DILocalVariable(name: "argsize", arg: 4, scope: !14967, file: !925, line: 963, type: !52)
!14977 = !DILocation(line: 963, column: 47, scope: !14967)
!14978 = !DILocalVariable(name: "o", scope: !14967, file: !925, line: 965, type: !935)
!14979 = !DILocation(line: 965, column: 32, scope: !14967)
!14980 = !DILocation(line: 965, column: 64, scope: !14967)
!14981 = !DILocation(line: 965, column: 36, scope: !14967)
!14982 = !DILocation(line: 966, column: 30, scope: !14967)
!14983 = !DILocation(line: 966, column: 33, scope: !14967)
!14984 = !DILocation(line: 966, column: 38, scope: !14967)
!14985 = !DILocation(line: 966, column: 10, scope: !14967)
!14986 = !DILocation(line: 966, column: 3, scope: !14967)
!14987 = distinct !DISubprogram(name: "quotearg_style", scope: !925, file: !925, line: 970, type: !14988, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{!7, !905, !180}
!14990 = !DILocalVariable(name: "s", arg: 1, scope: !14987, file: !925, line: 970, type: !905)
!14991 = !DILocation(line: 970, column: 36, scope: !14987)
!14992 = !DILocalVariable(name: "arg", arg: 2, scope: !14987, file: !925, line: 970, type: !180)
!14993 = !DILocation(line: 970, column: 51, scope: !14987)
!14994 = !DILocation(line: 972, column: 31, scope: !14987)
!14995 = !DILocation(line: 972, column: 34, scope: !14987)
!14996 = !DILocation(line: 972, column: 10, scope: !14987)
!14997 = !DILocation(line: 972, column: 3, scope: !14987)
!14998 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !925, file: !925, line: 976, type: !14999, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{!7, !905, !180, !52}
!15001 = !DILocalVariable(name: "s", arg: 1, scope: !14998, file: !925, line: 976, type: !905)
!15002 = !DILocation(line: 976, column: 40, scope: !14998)
!15003 = !DILocalVariable(name: "arg", arg: 2, scope: !14998, file: !925, line: 976, type: !180)
!15004 = !DILocation(line: 976, column: 55, scope: !14998)
!15005 = !DILocalVariable(name: "argsize", arg: 3, scope: !14998, file: !925, line: 976, type: !52)
!15006 = !DILocation(line: 976, column: 67, scope: !14998)
!15007 = !DILocation(line: 978, column: 35, scope: !14998)
!15008 = !DILocation(line: 978, column: 38, scope: !14998)
!15009 = !DILocation(line: 978, column: 43, scope: !14998)
!15010 = !DILocation(line: 978, column: 10, scope: !14998)
!15011 = !DILocation(line: 978, column: 3, scope: !14998)
!15012 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !925, file: !925, line: 982, type: !15013, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15013 = !DISubroutineType(types: !15014)
!15014 = !{!7, !180, !52, !8}
!15015 = !DILocalVariable(name: "arg", arg: 1, scope: !15012, file: !925, line: 982, type: !180)
!15016 = !DILocation(line: 982, column: 32, scope: !15012)
!15017 = !DILocalVariable(name: "argsize", arg: 2, scope: !15012, file: !925, line: 982, type: !52)
!15018 = !DILocation(line: 982, column: 44, scope: !15012)
!15019 = !DILocalVariable(name: "ch", arg: 3, scope: !15012, file: !925, line: 982, type: !8)
!15020 = !DILocation(line: 982, column: 58, scope: !15012)
!15021 = !DILocalVariable(name: "options", scope: !15012, file: !925, line: 984, type: !924)
!15022 = !DILocation(line: 984, column: 26, scope: !15012)
!15023 = !DILocation(line: 985, column: 13, scope: !15012)
!15024 = !DILocation(line: 986, column: 31, scope: !15012)
!15025 = !DILocation(line: 986, column: 3, scope: !15012)
!15026 = !DILocation(line: 987, column: 33, scope: !15012)
!15027 = !DILocation(line: 987, column: 38, scope: !15012)
!15028 = !DILocation(line: 987, column: 10, scope: !15012)
!15029 = !DILocation(line: 987, column: 3, scope: !15012)
!15030 = distinct !DISubprogram(name: "quotearg_char", scope: !925, file: !925, line: 991, type: !15031, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{!7, !180, !8}
!15033 = !DILocalVariable(name: "arg", arg: 1, scope: !15030, file: !925, line: 991, type: !180)
!15034 = !DILocation(line: 991, column: 28, scope: !15030)
!15035 = !DILocalVariable(name: "ch", arg: 2, scope: !15030, file: !925, line: 991, type: !8)
!15036 = !DILocation(line: 991, column: 38, scope: !15030)
!15037 = !DILocation(line: 993, column: 29, scope: !15030)
!15038 = !DILocation(line: 993, column: 44, scope: !15030)
!15039 = !DILocation(line: 993, column: 10, scope: !15030)
!15040 = !DILocation(line: 993, column: 3, scope: !15030)
!15041 = distinct !DISubprogram(name: "quotearg_colon", scope: !925, file: !925, line: 997, type: !2501, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15042 = !DILocalVariable(name: "arg", arg: 1, scope: !15041, file: !925, line: 997, type: !180)
!15043 = !DILocation(line: 997, column: 29, scope: !15041)
!15044 = !DILocation(line: 999, column: 25, scope: !15041)
!15045 = !DILocation(line: 999, column: 10, scope: !15041)
!15046 = !DILocation(line: 999, column: 3, scope: !15041)
!15047 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !925, file: !925, line: 1003, type: !8822, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15048 = !DILocalVariable(name: "arg", arg: 1, scope: !15047, file: !925, line: 1003, type: !180)
!15049 = !DILocation(line: 1003, column: 33, scope: !15047)
!15050 = !DILocalVariable(name: "argsize", arg: 2, scope: !15047, file: !925, line: 1003, type: !52)
!15051 = !DILocation(line: 1003, column: 45, scope: !15047)
!15052 = !DILocation(line: 1005, column: 29, scope: !15047)
!15053 = !DILocation(line: 1005, column: 34, scope: !15047)
!15054 = !DILocation(line: 1005, column: 10, scope: !15047)
!15055 = !DILocation(line: 1005, column: 3, scope: !15047)
!15056 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !925, file: !925, line: 1009, type: !14935, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15057 = !DILocalVariable(name: "n", arg: 1, scope: !15056, file: !925, line: 1009, type: !5)
!15058 = !DILocation(line: 1009, column: 29, scope: !15056)
!15059 = !DILocalVariable(name: "s", arg: 2, scope: !15056, file: !925, line: 1009, type: !905)
!15060 = !DILocation(line: 1009, column: 51, scope: !15056)
!15061 = !DILocalVariable(name: "arg", arg: 3, scope: !15056, file: !925, line: 1009, type: !180)
!15062 = !DILocation(line: 1009, column: 66, scope: !15056)
!15063 = !DILocalVariable(name: "options", scope: !15056, file: !925, line: 1011, type: !924)
!15064 = !DILocation(line: 1011, column: 26, scope: !15056)
!15065 = !DILocation(line: 1012, column: 41, scope: !15056)
!15066 = !DILocation(line: 1012, column: 13, scope: !15056)
!15067 = !DILocation(line: 1013, column: 3, scope: !15056)
!15068 = !DILocation(line: 1014, column: 30, scope: !15056)
!15069 = !DILocation(line: 1014, column: 33, scope: !15056)
!15070 = !DILocation(line: 1014, column: 10, scope: !15056)
!15071 = !DILocation(line: 1014, column: 3, scope: !15056)
!15072 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !925, file: !925, line: 1018, type: !15073, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15073 = !DISubroutineType(types: !15074)
!15074 = !{!7, !5, !180, !180, !180}
!15075 = !DILocalVariable(name: "n", arg: 1, scope: !15072, file: !925, line: 1018, type: !5)
!15076 = !DILocation(line: 1018, column: 24, scope: !15072)
!15077 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15072, file: !925, line: 1018, type: !180)
!15078 = !DILocation(line: 1018, column: 39, scope: !15072)
!15079 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15072, file: !925, line: 1019, type: !180)
!15080 = !DILocation(line: 1019, column: 32, scope: !15072)
!15081 = !DILocalVariable(name: "arg", arg: 4, scope: !15072, file: !925, line: 1019, type: !180)
!15082 = !DILocation(line: 1019, column: 57, scope: !15072)
!15083 = !DILocation(line: 1021, column: 33, scope: !15072)
!15084 = !DILocation(line: 1021, column: 36, scope: !15072)
!15085 = !DILocation(line: 1021, column: 48, scope: !15072)
!15086 = !DILocation(line: 1021, column: 61, scope: !15072)
!15087 = !DILocation(line: 1021, column: 10, scope: !15072)
!15088 = !DILocation(line: 1021, column: 3, scope: !15072)
!15089 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !925, file: !925, line: 1026, type: !15090, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15090 = !DISubroutineType(types: !15091)
!15091 = !{!7, !5, !180, !180, !180, !52}
!15092 = !DILocalVariable(name: "n", arg: 1, scope: !15089, file: !925, line: 1026, type: !5)
!15093 = !DILocation(line: 1026, column: 28, scope: !15089)
!15094 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15089, file: !925, line: 1026, type: !180)
!15095 = !DILocation(line: 1026, column: 43, scope: !15089)
!15096 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15089, file: !925, line: 1027, type: !180)
!15097 = !DILocation(line: 1027, column: 36, scope: !15089)
!15098 = !DILocalVariable(name: "arg", arg: 4, scope: !15089, file: !925, line: 1028, type: !180)
!15099 = !DILocation(line: 1028, column: 36, scope: !15089)
!15100 = !DILocalVariable(name: "argsize", arg: 5, scope: !15089, file: !925, line: 1028, type: !52)
!15101 = !DILocation(line: 1028, column: 48, scope: !15089)
!15102 = !DILocalVariable(name: "o", scope: !15089, file: !925, line: 1030, type: !924)
!15103 = !DILocation(line: 1030, column: 26, scope: !15089)
!15104 = !DILocation(line: 1030, column: 30, scope: !15089)
!15105 = !DILocation(line: 1031, column: 27, scope: !15089)
!15106 = !DILocation(line: 1031, column: 39, scope: !15089)
!15107 = !DILocation(line: 1031, column: 3, scope: !15089)
!15108 = !DILocation(line: 1032, column: 30, scope: !15089)
!15109 = !DILocation(line: 1032, column: 33, scope: !15089)
!15110 = !DILocation(line: 1032, column: 38, scope: !15089)
!15111 = !DILocation(line: 1032, column: 10, scope: !15089)
!15112 = !DILocation(line: 1032, column: 3, scope: !15089)
!15113 = distinct !DISubprogram(name: "quotearg_custom", scope: !925, file: !925, line: 1036, type: !15114, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15114 = !DISubroutineType(types: !15115)
!15115 = !{!7, !180, !180, !180}
!15116 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15113, file: !925, line: 1036, type: !180)
!15117 = !DILocation(line: 1036, column: 30, scope: !15113)
!15118 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15113, file: !925, line: 1036, type: !180)
!15119 = !DILocation(line: 1036, column: 54, scope: !15113)
!15120 = !DILocalVariable(name: "arg", arg: 3, scope: !15113, file: !925, line: 1037, type: !180)
!15121 = !DILocation(line: 1037, column: 30, scope: !15113)
!15122 = !DILocation(line: 1039, column: 32, scope: !15113)
!15123 = !DILocation(line: 1039, column: 44, scope: !15113)
!15124 = !DILocation(line: 1039, column: 57, scope: !15113)
!15125 = !DILocation(line: 1039, column: 10, scope: !15113)
!15126 = !DILocation(line: 1039, column: 3, scope: !15113)
!15127 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !925, file: !925, line: 1043, type: !15128, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15128 = !DISubroutineType(types: !15129)
!15129 = !{!7, !180, !180, !180, !52}
!15130 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15127, file: !925, line: 1043, type: !180)
!15131 = !DILocation(line: 1043, column: 34, scope: !15127)
!15132 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15127, file: !925, line: 1043, type: !180)
!15133 = !DILocation(line: 1043, column: 58, scope: !15127)
!15134 = !DILocalVariable(name: "arg", arg: 3, scope: !15127, file: !925, line: 1044, type: !180)
!15135 = !DILocation(line: 1044, column: 34, scope: !15127)
!15136 = !DILocalVariable(name: "argsize", arg: 4, scope: !15127, file: !925, line: 1044, type: !52)
!15137 = !DILocation(line: 1044, column: 46, scope: !15127)
!15138 = !DILocation(line: 1046, column: 36, scope: !15127)
!15139 = !DILocation(line: 1046, column: 48, scope: !15127)
!15140 = !DILocation(line: 1046, column: 61, scope: !15127)
!15141 = !DILocation(line: 1047, column: 33, scope: !15127)
!15142 = !DILocation(line: 1046, column: 10, scope: !15127)
!15143 = !DILocation(line: 1046, column: 3, scope: !15127)
!15144 = distinct !DISubprogram(name: "quote_n_mem", scope: !925, file: !925, line: 1061, type: !15145, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15145 = !DISubroutineType(types: !15146)
!15146 = !{!180, !5, !180, !52}
!15147 = !DILocalVariable(name: "n", arg: 1, scope: !15144, file: !925, line: 1061, type: !5)
!15148 = !DILocation(line: 1061, column: 18, scope: !15144)
!15149 = !DILocalVariable(name: "arg", arg: 2, scope: !15144, file: !925, line: 1061, type: !180)
!15150 = !DILocation(line: 1061, column: 33, scope: !15144)
!15151 = !DILocalVariable(name: "argsize", arg: 3, scope: !15144, file: !925, line: 1061, type: !52)
!15152 = !DILocation(line: 1061, column: 45, scope: !15144)
!15153 = !DILocation(line: 1063, column: 30, scope: !15144)
!15154 = !DILocation(line: 1063, column: 33, scope: !15144)
!15155 = !DILocation(line: 1063, column: 38, scope: !15144)
!15156 = !DILocation(line: 1063, column: 10, scope: !15144)
!15157 = !DILocation(line: 1063, column: 3, scope: !15144)
!15158 = distinct !DISubprogram(name: "quote_mem", scope: !925, file: !925, line: 1067, type: !15159, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!180, !180, !52}
!15161 = !DILocalVariable(name: "arg", arg: 1, scope: !15158, file: !925, line: 1067, type: !180)
!15162 = !DILocation(line: 1067, column: 24, scope: !15158)
!15163 = !DILocalVariable(name: "argsize", arg: 2, scope: !15158, file: !925, line: 1067, type: !52)
!15164 = !DILocation(line: 1067, column: 36, scope: !15158)
!15165 = !DILocation(line: 1069, column: 26, scope: !15158)
!15166 = !DILocation(line: 1069, column: 31, scope: !15158)
!15167 = !DILocation(line: 1069, column: 10, scope: !15158)
!15168 = !DILocation(line: 1069, column: 3, scope: !15158)
!15169 = distinct !DISubprogram(name: "quote_n", scope: !925, file: !925, line: 1073, type: !15170, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{!180, !5, !180}
!15172 = !DILocalVariable(name: "n", arg: 1, scope: !15169, file: !925, line: 1073, type: !5)
!15173 = !DILocation(line: 1073, column: 14, scope: !15169)
!15174 = !DILocalVariable(name: "arg", arg: 2, scope: !15169, file: !925, line: 1073, type: !180)
!15175 = !DILocation(line: 1073, column: 29, scope: !15169)
!15176 = !DILocation(line: 1075, column: 23, scope: !15169)
!15177 = !DILocation(line: 1075, column: 26, scope: !15169)
!15178 = !DILocation(line: 1075, column: 10, scope: !15169)
!15179 = !DILocation(line: 1075, column: 3, scope: !15169)
!15180 = distinct !DISubprogram(name: "quote", scope: !925, file: !925, line: 1079, type: !15181, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !902, retainedNodes: !295)
!15181 = !DISubroutineType(types: !15182)
!15182 = !{!180, !180}
!15183 = !DILocalVariable(name: "arg", arg: 1, scope: !15180, file: !925, line: 1079, type: !180)
!15184 = !DILocation(line: 1079, column: 20, scope: !15180)
!15185 = !DILocation(line: 1081, column: 22, scope: !15180)
!15186 = !DILocation(line: 1081, column: 10, scope: !15180)
!15187 = !DILocation(line: 1081, column: 3, scope: !15180)
!15188 = distinct !DISubprogram(name: "renameatu", scope: !15189, file: !15189, line: 77, type: !15190, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1381, retainedNodes: !295)
!15189 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!15190 = !DISubroutineType(types: !15191)
!15191 = !{!5, !5, !180, !5, !180, !67}
!15192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !15193)
!15193 = !{!15194, !15195, !15196, !15197, !15198, !15199, !15200, !15201, !15202, !15203, !15204, !15205, !15210, !15211, !15212}
!15194 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15192, file: !471, line: 48, baseType: !460, size: 64)
!15195 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15192, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!15196 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15192, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15192, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!15198 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15192, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!15199 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15192, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15192, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15192, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!15202 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15192, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!15203 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15192, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15192, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!15205 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15192, file: !471, line: 91, baseType: !15206, size: 128, offset: 576)
!15206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !15207)
!15207 = !{!15208, !15209}
!15208 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15206, file: !373, line: 122, baseType: !376, size: 64)
!15209 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15206, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!15210 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15192, file: !471, line: 92, baseType: !15206, size: 128, offset: 704)
!15211 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15192, file: !471, line: 93, baseType: !15206, size: 128, offset: 832)
!15212 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15192, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!15213 = !DILocalVariable(name: "fd1", arg: 1, scope: !15188, file: !15189, line: 77, type: !5)
!15214 = !DILocation(line: 77, column: 16, scope: !15188)
!15215 = !DILocalVariable(name: "src", arg: 2, scope: !15188, file: !15189, line: 77, type: !180)
!15216 = !DILocation(line: 77, column: 33, scope: !15188)
!15217 = !DILocalVariable(name: "fd2", arg: 3, scope: !15188, file: !15189, line: 77, type: !5)
!15218 = !DILocation(line: 77, column: 42, scope: !15188)
!15219 = !DILocalVariable(name: "dst", arg: 4, scope: !15188, file: !15189, line: 77, type: !180)
!15220 = !DILocation(line: 77, column: 59, scope: !15188)
!15221 = !DILocalVariable(name: "flags", arg: 5, scope: !15188, file: !15189, line: 78, type: !67)
!15222 = !DILocation(line: 78, column: 25, scope: !15188)
!15223 = !DILocalVariable(name: "ret_val", scope: !15188, file: !15189, line: 80, type: !5)
!15224 = !DILocation(line: 80, column: 7, scope: !15188)
!15225 = !DILocalVariable(name: "err", scope: !15188, file: !15189, line: 81, type: !5)
!15226 = !DILocation(line: 81, column: 7, scope: !15188)
!15227 = !DILocation(line: 87, column: 37, scope: !15188)
!15228 = !DILocation(line: 87, column: 42, scope: !15188)
!15229 = !DILocation(line: 87, column: 47, scope: !15188)
!15230 = !DILocation(line: 87, column: 52, scope: !15188)
!15231 = !DILocation(line: 87, column: 57, scope: !15188)
!15232 = !DILocation(line: 87, column: 13, scope: !15188)
!15233 = !DILocation(line: 87, column: 11, scope: !15188)
!15234 = !DILocation(line: 88, column: 9, scope: !15188)
!15235 = !DILocation(line: 88, column: 7, scope: !15188)
!15236 = !DILocation(line: 99, column: 10, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15188, file: !15189, line: 99, column: 7)
!15238 = !DILocation(line: 99, column: 18, scope: !15237)
!15239 = !DILocation(line: 99, column: 22, scope: !15237)
!15240 = !DILocation(line: 99, column: 26, scope: !15237)
!15241 = !DILocation(line: 99, column: 30, scope: !15237)
!15242 = !DILocation(line: 99, column: 40, scope: !15237)
!15243 = !DILocation(line: 99, column: 43, scope: !15237)
!15244 = !DILocation(line: 99, column: 47, scope: !15237)
!15245 = !DILocation(line: 99, column: 57, scope: !15237)
!15246 = !DILocation(line: 99, column: 60, scope: !15237)
!15247 = !DILocation(line: 99, column: 64, scope: !15237)
!15248 = !DILocation(line: 99, column: 7, scope: !15188)
!15249 = !DILocation(line: 100, column: 12, scope: !15237)
!15250 = !DILocation(line: 100, column: 5, scope: !15237)
!15251 = !DILocalVariable(name: "src_len", scope: !15252, file: !15189, line: 104, type: !52)
!15252 = distinct !DILexicalBlock(scope: !15188, file: !15189, line: 103, column: 3)
!15253 = !DILocation(line: 104, column: 10, scope: !15252)
!15254 = !DILocalVariable(name: "dst_len", scope: !15252, file: !15189, line: 105, type: !52)
!15255 = !DILocation(line: 105, column: 10, scope: !15252)
!15256 = !DILocalVariable(name: "src_temp", scope: !15252, file: !15189, line: 106, type: !7)
!15257 = !DILocation(line: 106, column: 9, scope: !15252)
!15258 = !DILocation(line: 106, column: 29, scope: !15252)
!15259 = !DILocalVariable(name: "dst_temp", scope: !15252, file: !15189, line: 107, type: !7)
!15260 = !DILocation(line: 107, column: 9, scope: !15252)
!15261 = !DILocation(line: 107, column: 29, scope: !15252)
!15262 = !DILocalVariable(name: "src_slash", scope: !15252, file: !15189, line: 108, type: !139)
!15263 = !DILocation(line: 108, column: 8, scope: !15252)
!15264 = !DILocalVariable(name: "dst_slash", scope: !15252, file: !15189, line: 109, type: !139)
!15265 = !DILocation(line: 109, column: 8, scope: !15252)
!15266 = !DILocalVariable(name: "rename_errno", scope: !15252, file: !15189, line: 110, type: !5)
!15267 = !DILocation(line: 110, column: 7, scope: !15252)
!15268 = !DILocalVariable(name: "src_st", scope: !15252, file: !15189, line: 111, type: !15192)
!15269 = !DILocation(line: 111, column: 15, scope: !15252)
!15270 = !DILocalVariable(name: "dst_st", scope: !15252, file: !15189, line: 112, type: !15192)
!15271 = !DILocation(line: 112, column: 15, scope: !15252)
!15272 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15252, file: !15189, line: 113, type: !139)
!15273 = !DILocation(line: 113, column: 8, scope: !15252)
!15274 = !DILocation(line: 115, column: 7, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 115, column: 7)
!15276 = !DILocation(line: 115, column: 13, scope: !15275)
!15277 = !DILocation(line: 115, column: 7, scope: !15252)
!15278 = !DILocation(line: 118, column: 11, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15280, file: !15189, line: 118, column: 11)
!15280 = distinct !DILexicalBlock(scope: !15275, file: !15189, line: 116, column: 5)
!15281 = !DILocation(line: 118, column: 17, scope: !15279)
!15282 = !DILocation(line: 118, column: 11, scope: !15280)
!15283 = !DILocation(line: 119, column: 16, scope: !15279)
!15284 = !DILocation(line: 119, column: 9, scope: !15279)
!15285 = !DILocation(line: 124, column: 24, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !15189, line: 124, column: 15)
!15287 = distinct !DILexicalBlock(scope: !15279, file: !15189, line: 121, column: 9)
!15288 = !DILocation(line: 124, column: 29, scope: !15286)
!15289 = !DILocation(line: 124, column: 15, scope: !15286)
!15290 = !DILocation(line: 124, column: 43, scope: !15286)
!15291 = !DILocation(line: 124, column: 48, scope: !15286)
!15292 = !DILocation(line: 124, column: 51, scope: !15286)
!15293 = !DILocation(line: 124, column: 57, scope: !15286)
!15294 = !DILocation(line: 124, column: 15, scope: !15287)
!15295 = !DILocation(line: 125, column: 20, scope: !15286)
!15296 = !DILocation(line: 125, column: 13, scope: !15286)
!15297 = !DILocation(line: 126, column: 15, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15287, file: !15189, line: 126, column: 15)
!15299 = !DILocation(line: 126, column: 21, scope: !15298)
!15300 = !DILocation(line: 126, column: 15, scope: !15287)
!15301 = !DILocation(line: 127, column: 13, scope: !15298)
!15302 = !DILocation(line: 128, column: 33, scope: !15287)
!15303 = !DILocation(line: 130, column: 5, scope: !15280)
!15304 = !DILocation(line: 133, column: 21, scope: !15252)
!15305 = !DILocation(line: 133, column: 13, scope: !15252)
!15306 = !DILocation(line: 133, column: 11, scope: !15252)
!15307 = !DILocation(line: 134, column: 21, scope: !15252)
!15308 = !DILocation(line: 134, column: 13, scope: !15252)
!15309 = !DILocation(line: 134, column: 11, scope: !15252)
!15310 = !DILocation(line: 135, column: 8, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 135, column: 7)
!15312 = !DILocation(line: 135, column: 16, scope: !15311)
!15313 = !DILocation(line: 135, column: 20, scope: !15311)
!15314 = !DILocation(line: 135, column: 7, scope: !15252)
!15315 = !DILocation(line: 136, column: 22, scope: !15311)
!15316 = !DILocation(line: 136, column: 27, scope: !15311)
!15317 = !DILocation(line: 136, column: 32, scope: !15311)
!15318 = !DILocation(line: 136, column: 37, scope: !15311)
!15319 = !DILocation(line: 136, column: 12, scope: !15311)
!15320 = !DILocation(line: 136, column: 5, scope: !15311)
!15321 = !DILocation(line: 138, column: 15, scope: !15252)
!15322 = !DILocation(line: 138, column: 19, scope: !15252)
!15323 = !DILocation(line: 138, column: 27, scope: !15252)
!15324 = !DILocation(line: 138, column: 32, scope: !15252)
!15325 = !DILocation(line: 138, column: 13, scope: !15252)
!15326 = !DILocation(line: 139, column: 15, scope: !15252)
!15327 = !DILocation(line: 139, column: 19, scope: !15252)
!15328 = !DILocation(line: 139, column: 27, scope: !15252)
!15329 = !DILocation(line: 139, column: 32, scope: !15252)
!15330 = !DILocation(line: 139, column: 13, scope: !15252)
!15331 = !DILocation(line: 140, column: 8, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 140, column: 7)
!15333 = !DILocation(line: 140, column: 18, scope: !15332)
!15334 = !DILocation(line: 140, column: 22, scope: !15332)
!15335 = !DILocation(line: 140, column: 7, scope: !15252)
!15336 = !DILocation(line: 141, column: 22, scope: !15332)
!15337 = !DILocation(line: 141, column: 27, scope: !15332)
!15338 = !DILocation(line: 141, column: 32, scope: !15332)
!15339 = !DILocation(line: 141, column: 37, scope: !15332)
!15340 = !DILocation(line: 141, column: 12, scope: !15332)
!15341 = !DILocation(line: 141, column: 5, scope: !15332)
!15342 = !DILocation(line: 147, column: 16, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 147, column: 7)
!15344 = !DILocation(line: 147, column: 21, scope: !15343)
!15345 = !DILocation(line: 147, column: 7, scope: !15343)
!15346 = !DILocation(line: 147, column: 7, scope: !15252)
!15347 = !DILocation(line: 148, column: 5, scope: !15343)
!15348 = !DILocation(line: 149, column: 7, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 149, column: 7)
!15350 = !DILocation(line: 149, column: 7, scope: !15252)
!15351 = !DILocation(line: 151, column: 12, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !15189, line: 151, column: 11)
!15353 = distinct !DILexicalBlock(scope: !15349, file: !15189, line: 150, column: 5)
!15354 = !DILocation(line: 151, column: 11, scope: !15353)
!15355 = !DILocation(line: 152, column: 16, scope: !15352)
!15356 = !DILocation(line: 152, column: 9, scope: !15352)
!15357 = !DILocation(line: 153, column: 5, scope: !15353)
!15358 = !DILocation(line: 154, column: 21, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15349, file: !15189, line: 154, column: 12)
!15360 = !DILocation(line: 154, column: 26, scope: !15359)
!15361 = !DILocation(line: 154, column: 12, scope: !15359)
!15362 = !DILocation(line: 154, column: 12, scope: !15349)
!15363 = !DILocation(line: 156, column: 11, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !15189, line: 156, column: 11)
!15365 = distinct !DILexicalBlock(scope: !15359, file: !15189, line: 155, column: 5)
!15366 = !DILocation(line: 156, column: 17, scope: !15364)
!15367 = !DILocation(line: 156, column: 27, scope: !15364)
!15368 = !DILocation(line: 156, column: 31, scope: !15364)
!15369 = !DILocation(line: 156, column: 11, scope: !15365)
!15370 = !DILocation(line: 157, column: 9, scope: !15364)
!15371 = !DILocation(line: 158, column: 5, scope: !15365)
!15372 = !DILocation(line: 159, column: 13, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15359, file: !15189, line: 159, column: 12)
!15374 = !DILocation(line: 159, column: 12, scope: !15359)
!15375 = !DILocation(line: 160, column: 12, scope: !15373)
!15376 = !DILocation(line: 160, column: 5, scope: !15373)
!15377 = !DILocation(line: 161, column: 13, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15373, file: !15189, line: 161, column: 12)
!15379 = !DILocation(line: 161, column: 12, scope: !15373)
!15380 = !DILocation(line: 162, column: 12, scope: !15378)
!15381 = !DILocation(line: 162, column: 5, scope: !15378)
!15382 = !DILocation(line: 214, column: 23, scope: !15252)
!15383 = !DILocation(line: 214, column: 28, scope: !15252)
!15384 = !DILocation(line: 214, column: 38, scope: !15252)
!15385 = !DILocation(line: 214, column: 43, scope: !15252)
!15386 = !DILocation(line: 214, column: 13, scope: !15252)
!15387 = !DILocation(line: 214, column: 11, scope: !15252)
!15388 = !DILocation(line: 215, column: 18, scope: !15252)
!15389 = !DILocation(line: 215, column: 16, scope: !15252)
!15390 = !DILocation(line: 216, column: 3, scope: !15252)
!15391 = !DILabel(scope: !15252, name: "out", file: !15189, line: 217)
!15392 = !DILocation(line: 217, column: 2, scope: !15252)
!15393 = !DILocation(line: 218, column: 7, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 218, column: 7)
!15395 = !DILocation(line: 218, column: 19, scope: !15394)
!15396 = !DILocation(line: 218, column: 16, scope: !15394)
!15397 = !DILocation(line: 218, column: 7, scope: !15252)
!15398 = !DILocation(line: 219, column: 11, scope: !15394)
!15399 = !DILocation(line: 219, column: 5, scope: !15394)
!15400 = !DILocation(line: 220, column: 7, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15252, file: !15189, line: 220, column: 7)
!15402 = !DILocation(line: 220, column: 19, scope: !15401)
!15403 = !DILocation(line: 220, column: 16, scope: !15401)
!15404 = !DILocation(line: 220, column: 7, scope: !15252)
!15405 = !DILocation(line: 221, column: 11, scope: !15401)
!15406 = !DILocation(line: 221, column: 5, scope: !15401)
!15407 = !DILocation(line: 222, column: 11, scope: !15252)
!15408 = !DILocation(line: 222, column: 3, scope: !15252)
!15409 = !DILocation(line: 222, column: 9, scope: !15252)
!15410 = !DILocation(line: 223, column: 10, scope: !15252)
!15411 = !DILocation(line: 223, column: 3, scope: !15252)
!15412 = !DILocation(line: 233, column: 1, scope: !15188)
!15413 = distinct !DISubprogram(name: "errno_fail", scope: !15189, file: !15189, line: 33, type: !15414, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1381, retainedNodes: !295)
!15414 = !DISubroutineType(types: !15415)
!15415 = !{!5, !5}
!15416 = !DILocalVariable(name: "e", arg: 1, scope: !15413, file: !15189, line: 33, type: !5)
!15417 = !DILocation(line: 33, column: 17, scope: !15413)
!15418 = !DILocation(line: 35, column: 11, scope: !15413)
!15419 = !DILocation(line: 35, column: 3, scope: !15413)
!15420 = !DILocation(line: 35, column: 9, scope: !15413)
!15421 = !DILocation(line: 36, column: 3, scope: !15413)
!15422 = distinct !DISubprogram(name: "safe_read", scope: !15423, file: !15423, line: 56, type: !10454, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1384, retainedNodes: !295)
!15423 = !DIFile(filename: "lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!15424 = !DILocalVariable(name: "fd", arg: 1, scope: !15422, file: !15423, line: 56, type: !5)
!15425 = !DILocation(line: 56, column: 14, scope: !15422)
!15426 = !DILocalVariable(name: "buf", arg: 2, scope: !15422, file: !15423, line: 56, type: !47)
!15427 = !DILocation(line: 56, column: 30, scope: !15422)
!15428 = !DILocalVariable(name: "count", arg: 3, scope: !15422, file: !15423, line: 56, type: !52)
!15429 = !DILocation(line: 56, column: 42, scope: !15422)
!15430 = !DILocation(line: 58, column: 3, scope: !15422)
!15431 = !DILocalVariable(name: "result", scope: !15432, file: !15423, line: 60, type: !661)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !15423, line: 59, column: 5)
!15433 = distinct !DILexicalBlock(scope: !15434, file: !15423, line: 58, column: 3)
!15434 = distinct !DILexicalBlock(scope: !15422, file: !15423, line: 58, column: 3)
!15435 = !DILocation(line: 60, column: 15, scope: !15432)
!15436 = !DILocation(line: 60, column: 28, scope: !15432)
!15437 = !DILocation(line: 60, column: 32, scope: !15432)
!15438 = !DILocation(line: 60, column: 37, scope: !15432)
!15439 = !DILocation(line: 60, column: 24, scope: !15432)
!15440 = !DILocation(line: 62, column: 16, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15432, file: !15423, line: 62, column: 11)
!15442 = !DILocation(line: 62, column: 13, scope: !15441)
!15443 = !DILocation(line: 62, column: 11, scope: !15432)
!15444 = !DILocation(line: 63, column: 16, scope: !15441)
!15445 = !DILocation(line: 63, column: 9, scope: !15441)
!15446 = !DILocation(line: 64, column: 16, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15441, file: !15423, line: 64, column: 16)
!15448 = !DILocation(line: 64, column: 16, scope: !15441)
!15449 = !DILocation(line: 65, column: 9, scope: !15447)
!15450 = distinct !{!15450, !15451, !15452}
!15451 = !DILocation(line: 58, column: 3, scope: !15434)
!15452 = !DILocation(line: 70, column: 5, scope: !15434)
!15453 = !DILocation(line: 66, column: 16, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15447, file: !15423, line: 66, column: 16)
!15455 = !DILocation(line: 66, column: 22, scope: !15454)
!15456 = !DILocation(line: 66, column: 32, scope: !15454)
!15457 = !DILocation(line: 66, column: 53, scope: !15454)
!15458 = !DILocation(line: 66, column: 51, scope: !15454)
!15459 = !DILocation(line: 66, column: 16, scope: !15447)
!15460 = !DILocation(line: 67, column: 15, scope: !15454)
!15461 = !DILocation(line: 67, column: 9, scope: !15454)
!15462 = !DILocation(line: 69, column: 16, scope: !15454)
!15463 = !DILocation(line: 69, column: 9, scope: !15454)
!15464 = !DILocation(line: 58, column: 3, scope: !15433)
!15465 = !DILocation(line: 71, column: 1, scope: !15422)
!15466 = distinct !DISubprogram(name: "safe_write", scope: !1385, file: !1385, line: 56, type: !10502, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !295)
!15467 = !DILocalVariable(name: "fd", arg: 1, scope: !15466, file: !1385, line: 56, type: !5)
!15468 = !DILocation(line: 56, column: 14, scope: !15466)
!15469 = !DILocalVariable(name: "buf", arg: 2, scope: !15466, file: !1385, line: 56, type: !685)
!15470 = !DILocation(line: 56, column: 30, scope: !15466)
!15471 = !DILocalVariable(name: "count", arg: 3, scope: !15466, file: !1385, line: 56, type: !52)
!15472 = !DILocation(line: 56, column: 42, scope: !15466)
!15473 = !DILocation(line: 58, column: 3, scope: !15466)
!15474 = !DILocalVariable(name: "result", scope: !15475, file: !1385, line: 60, type: !661)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !1385, line: 59, column: 5)
!15476 = distinct !DILexicalBlock(scope: !15477, file: !1385, line: 58, column: 3)
!15477 = distinct !DILexicalBlock(scope: !15466, file: !1385, line: 58, column: 3)
!15478 = !DILocation(line: 60, column: 15, scope: !15475)
!15479 = !DILocation(line: 60, column: 28, scope: !15475)
!15480 = !DILocation(line: 60, column: 32, scope: !15475)
!15481 = !DILocation(line: 60, column: 37, scope: !15475)
!15482 = !DILocation(line: 60, column: 24, scope: !15475)
!15483 = !DILocation(line: 62, column: 16, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15475, file: !1385, line: 62, column: 11)
!15485 = !DILocation(line: 62, column: 13, scope: !15484)
!15486 = !DILocation(line: 62, column: 11, scope: !15475)
!15487 = !DILocation(line: 63, column: 16, scope: !15484)
!15488 = !DILocation(line: 63, column: 9, scope: !15484)
!15489 = !DILocation(line: 64, column: 16, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15484, file: !1385, line: 64, column: 16)
!15491 = !DILocation(line: 64, column: 16, scope: !15484)
!15492 = !DILocation(line: 65, column: 9, scope: !15490)
!15493 = distinct !{!15493, !15494, !15495}
!15494 = !DILocation(line: 58, column: 3, scope: !15477)
!15495 = !DILocation(line: 70, column: 5, scope: !15477)
!15496 = !DILocation(line: 66, column: 16, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15490, file: !1385, line: 66, column: 16)
!15498 = !DILocation(line: 66, column: 22, scope: !15497)
!15499 = !DILocation(line: 66, column: 32, scope: !15497)
!15500 = !DILocation(line: 66, column: 53, scope: !15497)
!15501 = !DILocation(line: 66, column: 51, scope: !15497)
!15502 = !DILocation(line: 66, column: 16, scope: !15490)
!15503 = !DILocation(line: 67, column: 15, scope: !15497)
!15504 = !DILocation(line: 67, column: 9, scope: !15497)
!15505 = !DILocation(line: 69, column: 16, scope: !15497)
!15506 = !DILocation(line: 69, column: 9, scope: !15497)
!15507 = !DILocation(line: 58, column: 3, scope: !15476)
!15508 = !DILocation(line: 71, column: 1, scope: !15466)
!15509 = distinct !DISubprogram(name: "same_name", scope: !15510, file: !15510, line: 61, type: !15511, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !295)
!15510 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!15511 = !DISubroutineType(types: !15512)
!15512 = !{!139, !180, !180}
!15513 = !DILocalVariable(name: "source", arg: 1, scope: !15509, file: !15510, line: 61, type: !180)
!15514 = !DILocation(line: 61, column: 24, scope: !15509)
!15515 = !DILocalVariable(name: "dest", arg: 2, scope: !15509, file: !15510, line: 61, type: !180)
!15516 = !DILocation(line: 61, column: 44, scope: !15509)
!15517 = !DILocation(line: 63, column: 33, scope: !15509)
!15518 = !DILocation(line: 63, column: 51, scope: !15509)
!15519 = !DILocation(line: 63, column: 10, scope: !15509)
!15520 = !DILocation(line: 63, column: 3, scope: !15509)
!15521 = distinct !DISubprogram(name: "same_nameat", scope: !15510, file: !15510, line: 70, type: !15522, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !295)
!15522 = !DISubroutineType(types: !15523)
!15523 = !{!139, !5, !180, !5, !180}
!15524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !15525)
!15525 = !{!15526, !15527, !15528, !15529, !15530, !15531, !15532, !15533, !15534, !15535, !15536, !15537, !15542, !15543, !15544}
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15524, file: !471, line: 48, baseType: !460, size: 64)
!15527 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15524, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15524, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!15529 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15524, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!15530 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15524, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15524, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15524, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15524, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!15534 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15524, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!15535 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15524, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!15536 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15524, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15524, file: !471, line: 91, baseType: !15538, size: 128, offset: 576)
!15538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !15539)
!15539 = !{!15540, !15541}
!15540 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15538, file: !373, line: 122, baseType: !376, size: 64)
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15538, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15524, file: !471, line: 92, baseType: !15538, size: 128, offset: 704)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15524, file: !471, line: 93, baseType: !15538, size: 128, offset: 832)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15524, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!15545 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15521, file: !15510, line: 70, type: !5)
!15546 = !DILocation(line: 70, column: 18, scope: !15521)
!15547 = !DILocalVariable(name: "source", arg: 2, scope: !15521, file: !15510, line: 70, type: !180)
!15548 = !DILocation(line: 70, column: 42, scope: !15521)
!15549 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15521, file: !15510, line: 71, type: !5)
!15550 = !DILocation(line: 71, column: 18, scope: !15521)
!15551 = !DILocalVariable(name: "dest", arg: 4, scope: !15521, file: !15510, line: 71, type: !180)
!15552 = !DILocation(line: 71, column: 40, scope: !15521)
!15553 = !DILocalVariable(name: "source_basename", scope: !15521, file: !15510, line: 74, type: !180)
!15554 = !DILocation(line: 74, column: 15, scope: !15521)
!15555 = !DILocation(line: 74, column: 49, scope: !15521)
!15556 = !DILocation(line: 74, column: 33, scope: !15521)
!15557 = !DILocalVariable(name: "dest_basename", scope: !15521, file: !15510, line: 75, type: !180)
!15558 = !DILocation(line: 75, column: 15, scope: !15521)
!15559 = !DILocation(line: 75, column: 47, scope: !15521)
!15560 = !DILocation(line: 75, column: 31, scope: !15521)
!15561 = !DILocalVariable(name: "source_baselen", scope: !15521, file: !15510, line: 76, type: !52)
!15562 = !DILocation(line: 76, column: 10, scope: !15521)
!15563 = !DILocation(line: 76, column: 37, scope: !15521)
!15564 = !DILocation(line: 76, column: 27, scope: !15521)
!15565 = !DILocalVariable(name: "dest_baselen", scope: !15521, file: !15510, line: 77, type: !52)
!15566 = !DILocation(line: 77, column: 10, scope: !15521)
!15567 = !DILocation(line: 77, column: 35, scope: !15521)
!15568 = !DILocation(line: 77, column: 25, scope: !15521)
!15569 = !DILocalVariable(name: "identical_basenames", scope: !15521, file: !15510, line: 78, type: !139)
!15570 = !DILocation(line: 78, column: 8, scope: !15521)
!15571 = !DILocation(line: 79, column: 6, scope: !15521)
!15572 = !DILocation(line: 79, column: 24, scope: !15521)
!15573 = !DILocation(line: 79, column: 21, scope: !15521)
!15574 = !DILocation(line: 80, column: 6, scope: !15521)
!15575 = !DILocation(line: 80, column: 17, scope: !15521)
!15576 = !DILocation(line: 80, column: 34, scope: !15521)
!15577 = !DILocation(line: 80, column: 49, scope: !15521)
!15578 = !DILocation(line: 80, column: 9, scope: !15521)
!15579 = !DILocation(line: 80, column: 63, scope: !15521)
!15580 = !DILocation(line: 0, scope: !15521)
!15581 = !DILocalVariable(name: "compare_dirs", scope: !15521, file: !15510, line: 81, type: !139)
!15582 = !DILocation(line: 81, column: 8, scope: !15521)
!15583 = !DILocation(line: 81, column: 23, scope: !15521)
!15584 = !DILocalVariable(name: "same", scope: !15521, file: !15510, line: 82, type: !139)
!15585 = !DILocation(line: 82, column: 8, scope: !15521)
!15586 = !DILocation(line: 92, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15521, file: !15510, line: 92, column: 7)
!15588 = !DILocation(line: 92, column: 7, scope: !15521)
!15589 = !DILocalVariable(name: "source_dir_stats", scope: !15590, file: !15510, line: 94, type: !15524)
!15590 = distinct !DILexicalBlock(scope: !15587, file: !15510, line: 93, column: 5)
!15591 = !DILocation(line: 94, column: 19, scope: !15590)
!15592 = !DILocalVariable(name: "dest_dir_stats", scope: !15590, file: !15510, line: 95, type: !15524)
!15593 = !DILocation(line: 95, column: 19, scope: !15590)
!15594 = !DILocalVariable(name: "source_dirname", scope: !15590, file: !15510, line: 98, type: !7)
!15595 = !DILocation(line: 98, column: 13, scope: !15590)
!15596 = !DILocation(line: 98, column: 40, scope: !15590)
!15597 = !DILocation(line: 98, column: 30, scope: !15590)
!15598 = !DILocalVariable(name: "flags", scope: !15590, file: !15510, line: 99, type: !5)
!15599 = !DILocation(line: 99, column: 11, scope: !15590)
!15600 = !DILocation(line: 100, column: 20, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15590, file: !15510, line: 100, column: 11)
!15602 = !DILocation(line: 100, column: 32, scope: !15601)
!15603 = !DILocation(line: 100, column: 67, scope: !15601)
!15604 = !DILocation(line: 100, column: 11, scope: !15601)
!15605 = !DILocation(line: 100, column: 74, scope: !15601)
!15606 = !DILocation(line: 100, column: 11, scope: !15590)
!15607 = !DILocation(line: 103, column: 21, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15601, file: !15510, line: 101, column: 9)
!15609 = !DILocation(line: 103, column: 34, scope: !15608)
!15610 = !DILocation(line: 103, column: 11, scope: !15608)
!15611 = !DILocation(line: 104, column: 9, scope: !15608)
!15612 = !DILocation(line: 105, column: 13, scope: !15590)
!15613 = !DILocation(line: 105, column: 7, scope: !15590)
!15614 = !DILocalVariable(name: "dest_dirname", scope: !15590, file: !15510, line: 107, type: !7)
!15615 = !DILocation(line: 107, column: 13, scope: !15590)
!15616 = !DILocation(line: 107, column: 38, scope: !15590)
!15617 = !DILocation(line: 107, column: 28, scope: !15590)
!15618 = !DILocation(line: 137, column: 20, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15590, file: !15510, line: 137, column: 11)
!15620 = !DILocation(line: 137, column: 30, scope: !15619)
!15621 = !DILocation(line: 137, column: 61, scope: !15619)
!15622 = !DILocation(line: 137, column: 11, scope: !15619)
!15623 = !DILocation(line: 137, column: 68, scope: !15619)
!15624 = !DILocation(line: 137, column: 11, scope: !15590)
!15625 = !DILocation(line: 140, column: 21, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15619, file: !15510, line: 138, column: 9)
!15627 = !DILocation(line: 140, column: 34, scope: !15626)
!15628 = !DILocation(line: 140, column: 11, scope: !15626)
!15629 = !DILocation(line: 141, column: 9, scope: !15626)
!15630 = !DILocation(line: 142, column: 14, scope: !15590)
!15631 = !DILocation(line: 0, scope: !15590)
!15632 = !DILocation(line: 142, column: 12, scope: !15590)
!15633 = !DILocation(line: 145, column: 13, scope: !15590)
!15634 = !DILocation(line: 145, column: 7, scope: !15590)
!15635 = !DILocation(line: 146, column: 5, scope: !15590)
!15636 = !DILocation(line: 148, column: 10, scope: !15521)
!15637 = !DILocation(line: 148, column: 3, scope: !15521)
!15638 = distinct !DISubprogram(name: "streamsavedir", scope: !991, file: !991, line: 91, type: !15639, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !978, retainedNodes: !295)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{!7, !662, !981}
!15641 = !DILocalVariable(name: "dirp", arg: 1, scope: !15638, file: !991, line: 91, type: !662)
!15642 = !DILocation(line: 91, column: 21, scope: !15638)
!15643 = !DILocalVariable(name: "option", arg: 2, scope: !15638, file: !991, line: 91, type: !981)
!15644 = !DILocation(line: 91, column: 47, scope: !15638)
!15645 = !DILocalVariable(name: "name_space", scope: !15638, file: !991, line: 93, type: !7)
!15646 = !DILocation(line: 93, column: 9, scope: !15638)
!15647 = !DILocalVariable(name: "allocated", scope: !15638, file: !991, line: 94, type: !52)
!15648 = !DILocation(line: 94, column: 10, scope: !15638)
!15649 = !DILocalVariable(name: "entries", scope: !15638, file: !991, line: 95, type: !989)
!15650 = !DILocation(line: 95, column: 15, scope: !15638)
!15651 = !DILocalVariable(name: "entries_allocated", scope: !15638, file: !991, line: 96, type: !52)
!15652 = !DILocation(line: 96, column: 10, scope: !15638)
!15653 = !DILocalVariable(name: "entries_used", scope: !15638, file: !991, line: 97, type: !52)
!15654 = !DILocation(line: 97, column: 10, scope: !15638)
!15655 = !DILocalVariable(name: "used", scope: !15638, file: !991, line: 98, type: !52)
!15656 = !DILocation(line: 98, column: 10, scope: !15638)
!15657 = !DILocalVariable(name: "readdir_errno", scope: !15638, file: !991, line: 99, type: !5)
!15658 = !DILocation(line: 99, column: 7, scope: !15638)
!15659 = !DILocalVariable(name: "cmp", scope: !15638, file: !991, line: 100, type: !997)
!15660 = !DILocation(line: 100, column: 23, scope: !15638)
!15661 = !DILocation(line: 100, column: 55, scope: !15638)
!15662 = !DILocation(line: 100, column: 29, scope: !15638)
!15663 = !DILocation(line: 102, column: 7, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15638, file: !991, line: 102, column: 7)
!15665 = !DILocation(line: 102, column: 12, scope: !15664)
!15666 = !DILocation(line: 102, column: 7, scope: !15638)
!15667 = !DILocation(line: 103, column: 5, scope: !15664)
!15668 = !DILocation(line: 105, column: 3, scope: !15638)
!15669 = !DILocalVariable(name: "dp", scope: !15670, file: !991, line: 107, type: !1003)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !991, line: 106, column: 5)
!15671 = distinct !DILexicalBlock(scope: !15672, file: !991, line: 105, column: 3)
!15672 = distinct !DILexicalBlock(scope: !15638, file: !991, line: 105, column: 3)
!15673 = !DILocation(line: 107, column: 28, scope: !15670)
!15674 = !DILocalVariable(name: "entry", scope: !15670, file: !991, line: 108, type: !180)
!15675 = !DILocation(line: 108, column: 19, scope: !15670)
!15676 = !DILocation(line: 110, column: 7, scope: !15670)
!15677 = !DILocation(line: 110, column: 13, scope: !15670)
!15678 = !DILocation(line: 111, column: 21, scope: !15670)
!15679 = !DILocation(line: 111, column: 12, scope: !15670)
!15680 = !DILocation(line: 111, column: 10, scope: !15670)
!15681 = !DILocation(line: 112, column: 13, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15670, file: !991, line: 112, column: 11)
!15683 = !DILocation(line: 112, column: 11, scope: !15670)
!15684 = !DILocation(line: 113, column: 9, scope: !15682)
!15685 = !DILocation(line: 117, column: 15, scope: !15670)
!15686 = !DILocation(line: 117, column: 19, scope: !15670)
!15687 = !DILocation(line: 117, column: 13, scope: !15670)
!15688 = !DILocation(line: 118, column: 11, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15670, file: !991, line: 118, column: 11)
!15690 = !DILocation(line: 118, column: 17, scope: !15689)
!15691 = !DILocation(line: 118, column: 26, scope: !15689)
!15692 = !DILocation(line: 118, column: 39, scope: !15689)
!15693 = !DILocation(line: 118, column: 48, scope: !15689)
!15694 = !DILocation(line: 118, column: 64, scope: !15689)
!15695 = !DILocation(line: 118, column: 11, scope: !15670)
!15696 = !DILocalVariable(name: "entry_size", scope: !15697, file: !991, line: 120, type: !52)
!15697 = distinct !DILexicalBlock(scope: !15689, file: !991, line: 119, column: 9)
!15698 = !DILocation(line: 120, column: 18, scope: !15697)
!15699 = !DILocation(line: 120, column: 31, scope: !15697)
!15700 = !DILocation(line: 120, column: 52, scope: !15697)
!15701 = !DILocation(line: 121, column: 15, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15697, file: !991, line: 121, column: 15)
!15703 = !DILocation(line: 121, column: 15, scope: !15697)
!15704 = !DILocation(line: 123, column: 19, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15706, file: !991, line: 123, column: 19)
!15706 = distinct !DILexicalBlock(scope: !15702, file: !991, line: 122, column: 13)
!15707 = !DILocation(line: 123, column: 40, scope: !15705)
!15708 = !DILocation(line: 123, column: 37, scope: !15705)
!15709 = !DILocation(line: 123, column: 19, scope: !15706)
!15710 = !DILocalVariable(name: "n", scope: !15711, file: !991, line: 125, type: !52)
!15711 = distinct !DILexicalBlock(scope: !15705, file: !991, line: 124, column: 17)
!15712 = !DILocation(line: 125, column: 26, scope: !15711)
!15713 = !DILocation(line: 125, column: 30, scope: !15711)
!15714 = !DILocation(line: 126, column: 41, scope: !15711)
!15715 = !DILocation(line: 126, column: 29, scope: !15711)
!15716 = !DILocation(line: 126, column: 27, scope: !15711)
!15717 = !DILocation(line: 127, column: 39, scope: !15711)
!15718 = !DILocation(line: 127, column: 37, scope: !15711)
!15719 = !DILocation(line: 128, column: 17, scope: !15711)
!15720 = !DILocation(line: 129, column: 53, scope: !15706)
!15721 = !DILocation(line: 129, column: 44, scope: !15706)
!15722 = !DILocation(line: 129, column: 15, scope: !15706)
!15723 = !DILocation(line: 129, column: 23, scope: !15706)
!15724 = !DILocation(line: 129, column: 37, scope: !15706)
!15725 = !DILocation(line: 129, column: 42, scope: !15706)
!15726 = !DILocation(line: 131, column: 43, scope: !15706)
!15727 = !DILocation(line: 131, column: 47, scope: !15706)
!15728 = !DILocation(line: 131, column: 15, scope: !15706)
!15729 = !DILocation(line: 131, column: 23, scope: !15706)
!15730 = !DILocation(line: 131, column: 37, scope: !15706)
!15731 = !DILocation(line: 131, column: 41, scope: !15706)
!15732 = !DILocation(line: 133, column: 27, scope: !15706)
!15733 = !DILocation(line: 134, column: 13, scope: !15706)
!15734 = !DILocation(line: 137, column: 19, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15736, file: !991, line: 137, column: 19)
!15736 = distinct !DILexicalBlock(scope: !15702, file: !991, line: 136, column: 13)
!15737 = !DILocation(line: 137, column: 31, scope: !15735)
!15738 = !DILocation(line: 137, column: 29, scope: !15735)
!15739 = !DILocation(line: 137, column: 39, scope: !15735)
!15740 = !DILocation(line: 137, column: 36, scope: !15735)
!15741 = !DILocation(line: 137, column: 19, scope: !15736)
!15742 = !DILocalVariable(name: "n", scope: !15743, file: !991, line: 139, type: !52)
!15743 = distinct !DILexicalBlock(scope: !15735, file: !991, line: 138, column: 17)
!15744 = !DILocation(line: 139, column: 26, scope: !15743)
!15745 = !DILocation(line: 139, column: 30, scope: !15743)
!15746 = !DILocation(line: 139, column: 37, scope: !15743)
!15747 = !DILocation(line: 139, column: 35, scope: !15743)
!15748 = !DILocation(line: 140, column: 23, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15743, file: !991, line: 140, column: 23)
!15750 = !DILocation(line: 140, column: 27, scope: !15749)
!15751 = !DILocation(line: 140, column: 25, scope: !15749)
!15752 = !DILocation(line: 140, column: 23, scope: !15743)
!15753 = !DILocation(line: 141, column: 21, scope: !15749)
!15754 = !DILocation(line: 142, column: 44, scope: !15743)
!15755 = !DILocation(line: 142, column: 32, scope: !15743)
!15756 = !DILocation(line: 142, column: 30, scope: !15743)
!15757 = !DILocation(line: 143, column: 31, scope: !15743)
!15758 = !DILocation(line: 143, column: 29, scope: !15743)
!15759 = !DILocation(line: 144, column: 17, scope: !15743)
!15760 = !DILocation(line: 145, column: 23, scope: !15736)
!15761 = !DILocation(line: 145, column: 36, scope: !15736)
!15762 = !DILocation(line: 145, column: 34, scope: !15736)
!15763 = !DILocation(line: 145, column: 42, scope: !15736)
!15764 = !DILocation(line: 145, column: 49, scope: !15736)
!15765 = !DILocation(line: 145, column: 15, scope: !15736)
!15766 = !DILocation(line: 147, column: 19, scope: !15697)
!15767 = !DILocation(line: 147, column: 16, scope: !15697)
!15768 = !DILocation(line: 148, column: 9, scope: !15697)
!15769 = !DILocation(line: 105, column: 3, scope: !15671)
!15770 = distinct !{!15770, !15771, !15772}
!15771 = !DILocation(line: 105, column: 3, scope: !15672)
!15772 = !DILocation(line: 149, column: 5, scope: !15672)
!15773 = !DILocation(line: 151, column: 19, scope: !15638)
!15774 = !DILocation(line: 151, column: 17, scope: !15638)
!15775 = !DILocation(line: 152, column: 7, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15638, file: !991, line: 152, column: 7)
!15777 = !DILocation(line: 152, column: 21, scope: !15776)
!15778 = !DILocation(line: 152, column: 7, scope: !15638)
!15779 = !DILocation(line: 154, column: 13, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15776, file: !991, line: 153, column: 5)
!15781 = !DILocation(line: 154, column: 7, scope: !15780)
!15782 = !DILocation(line: 155, column: 13, scope: !15780)
!15783 = !DILocation(line: 155, column: 7, scope: !15780)
!15784 = !DILocation(line: 156, column: 15, scope: !15780)
!15785 = !DILocation(line: 156, column: 7, scope: !15780)
!15786 = !DILocation(line: 156, column: 13, scope: !15780)
!15787 = !DILocation(line: 157, column: 7, scope: !15780)
!15788 = !DILocation(line: 160, column: 7, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15638, file: !991, line: 160, column: 7)
!15790 = !DILocation(line: 160, column: 7, scope: !15638)
!15791 = !DILocalVariable(name: "i", scope: !15792, file: !991, line: 162, type: !52)
!15792 = distinct !DILexicalBlock(scope: !15789, file: !991, line: 161, column: 5)
!15793 = !DILocation(line: 162, column: 14, scope: !15792)
!15794 = !DILocation(line: 164, column: 11, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15792, file: !991, line: 164, column: 11)
!15796 = !DILocation(line: 164, column: 11, scope: !15792)
!15797 = !DILocation(line: 165, column: 16, scope: !15795)
!15798 = !DILocation(line: 165, column: 25, scope: !15795)
!15799 = !DILocation(line: 165, column: 56, scope: !15795)
!15800 = !DILocation(line: 165, column: 9, scope: !15795)
!15801 = !DILocation(line: 166, column: 29, scope: !15792)
!15802 = !DILocation(line: 166, column: 34, scope: !15792)
!15803 = !DILocation(line: 166, column: 20, scope: !15792)
!15804 = !DILocation(line: 166, column: 18, scope: !15792)
!15805 = !DILocation(line: 167, column: 12, scope: !15792)
!15806 = !DILocation(line: 168, column: 14, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15792, file: !991, line: 168, column: 7)
!15808 = !DILocation(line: 168, column: 12, scope: !15807)
!15809 = !DILocation(line: 168, column: 19, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15807, file: !991, line: 168, column: 7)
!15811 = !DILocation(line: 168, column: 23, scope: !15810)
!15812 = !DILocation(line: 168, column: 21, scope: !15810)
!15813 = !DILocation(line: 168, column: 7, scope: !15807)
!15814 = !DILocalVariable(name: "dest", scope: !15815, file: !991, line: 170, type: !7)
!15815 = distinct !DILexicalBlock(scope: !15810, file: !991, line: 169, column: 9)
!15816 = !DILocation(line: 170, column: 17, scope: !15815)
!15817 = !DILocation(line: 170, column: 24, scope: !15815)
!15818 = !DILocation(line: 170, column: 37, scope: !15815)
!15819 = !DILocation(line: 170, column: 35, scope: !15815)
!15820 = !DILocation(line: 171, column: 27, scope: !15815)
!15821 = !DILocation(line: 171, column: 33, scope: !15815)
!15822 = !DILocation(line: 171, column: 41, scope: !15815)
!15823 = !DILocation(line: 171, column: 44, scope: !15815)
!15824 = !DILocation(line: 171, column: 19, scope: !15815)
!15825 = !DILocation(line: 171, column: 52, scope: !15815)
!15826 = !DILocation(line: 171, column: 50, scope: !15815)
!15827 = !DILocation(line: 171, column: 57, scope: !15815)
!15828 = !DILocation(line: 171, column: 16, scope: !15815)
!15829 = !DILocation(line: 172, column: 17, scope: !15815)
!15830 = !DILocation(line: 172, column: 25, scope: !15815)
!15831 = !DILocation(line: 172, column: 28, scope: !15815)
!15832 = !DILocation(line: 172, column: 11, scope: !15815)
!15833 = !DILocation(line: 173, column: 9, scope: !15815)
!15834 = !DILocation(line: 168, column: 38, scope: !15810)
!15835 = !DILocation(line: 168, column: 7, scope: !15810)
!15836 = distinct !{!15836, !15813, !15837}
!15837 = !DILocation(line: 173, column: 9, scope: !15807)
!15838 = !DILocation(line: 174, column: 13, scope: !15792)
!15839 = !DILocation(line: 174, column: 7, scope: !15792)
!15840 = !DILocation(line: 175, column: 5, scope: !15792)
!15841 = !DILocation(line: 176, column: 12, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15789, file: !991, line: 176, column: 12)
!15843 = !DILocation(line: 176, column: 20, scope: !15842)
!15844 = !DILocation(line: 176, column: 17, scope: !15842)
!15845 = !DILocation(line: 176, column: 12, scope: !15789)
!15846 = !DILocation(line: 177, column: 28, scope: !15842)
!15847 = !DILocation(line: 177, column: 40, scope: !15842)
!15848 = !DILocation(line: 177, column: 45, scope: !15842)
!15849 = !DILocation(line: 177, column: 18, scope: !15842)
!15850 = !DILocation(line: 177, column: 16, scope: !15842)
!15851 = !DILocation(line: 177, column: 5, scope: !15842)
!15852 = !DILocation(line: 179, column: 3, scope: !15638)
!15853 = !DILocation(line: 179, column: 14, scope: !15638)
!15854 = !DILocation(line: 179, column: 20, scope: !15638)
!15855 = !DILocation(line: 180, column: 10, scope: !15638)
!15856 = !DILocation(line: 180, column: 3, scope: !15638)
!15857 = !DILocation(line: 181, column: 1, scope: !15638)
!15858 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !991, file: !991, line: 51, type: !999, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !978, retainedNodes: !295)
!15859 = !DILocalVariable(name: "a", arg: 1, scope: !15858, file: !991, line: 51, type: !685)
!15860 = !DILocation(line: 51, column: 32, scope: !15858)
!15861 = !DILocalVariable(name: "b", arg: 2, scope: !15858, file: !991, line: 51, type: !685)
!15862 = !DILocation(line: 51, column: 47, scope: !15858)
!15863 = !DILocalVariable(name: "dea", scope: !15858, file: !991, line: 53, type: !1013)
!15864 = !DILocation(line: 53, column: 21, scope: !15858)
!15865 = !DILocation(line: 53, column: 27, scope: !15858)
!15866 = !DILocalVariable(name: "deb", scope: !15858, file: !991, line: 54, type: !1013)
!15867 = !DILocation(line: 54, column: 21, scope: !15858)
!15868 = !DILocation(line: 54, column: 27, scope: !15858)
!15869 = !DILocation(line: 56, column: 18, scope: !15858)
!15870 = !DILocation(line: 56, column: 23, scope: !15858)
!15871 = !DILocation(line: 56, column: 29, scope: !15858)
!15872 = !DILocation(line: 56, column: 34, scope: !15858)
!15873 = !DILocation(line: 56, column: 10, scope: !15858)
!15874 = !DILocation(line: 56, column: 3, scope: !15858)
!15875 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !991, file: !991, line: 63, type: !999, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !978, retainedNodes: !295)
!15876 = !DILocalVariable(name: "a", arg: 1, scope: !15875, file: !991, line: 63, type: !685)
!15877 = !DILocation(line: 63, column: 33, scope: !15875)
!15878 = !DILocalVariable(name: "b", arg: 2, scope: !15875, file: !991, line: 63, type: !685)
!15879 = !DILocation(line: 63, column: 48, scope: !15875)
!15880 = !DILocalVariable(name: "dea", scope: !15875, file: !991, line: 65, type: !1013)
!15881 = !DILocation(line: 65, column: 21, scope: !15875)
!15882 = !DILocation(line: 65, column: 27, scope: !15875)
!15883 = !DILocalVariable(name: "deb", scope: !15875, file: !991, line: 66, type: !1013)
!15884 = !DILocation(line: 66, column: 21, scope: !15875)
!15885 = !DILocation(line: 66, column: 27, scope: !15875)
!15886 = !DILocation(line: 68, column: 10, scope: !15875)
!15887 = !DILocation(line: 68, column: 15, scope: !15875)
!15888 = !DILocation(line: 68, column: 21, scope: !15875)
!15889 = !DILocation(line: 68, column: 26, scope: !15875)
!15890 = !DILocation(line: 68, column: 19, scope: !15875)
!15891 = !DILocation(line: 68, column: 37, scope: !15875)
!15892 = !DILocation(line: 68, column: 42, scope: !15875)
!15893 = !DILocation(line: 68, column: 48, scope: !15875)
!15894 = !DILocation(line: 68, column: 53, scope: !15875)
!15895 = !DILocation(line: 68, column: 46, scope: !15875)
!15896 = !DILocation(line: 68, column: 3, scope: !15875)
!15897 = distinct !DISubprogram(name: "savedir", scope: !991, file: !991, line: 189, type: !15898, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !978, retainedNodes: !295)
!15898 = !DISubroutineType(types: !15899)
!15899 = !{!7, !180, !981}
!15900 = !DILocalVariable(name: "dir", arg: 1, scope: !15897, file: !991, line: 189, type: !180)
!15901 = !DILocation(line: 189, column: 22, scope: !15897)
!15902 = !DILocalVariable(name: "option", arg: 2, scope: !15897, file: !991, line: 189, type: !981)
!15903 = !DILocation(line: 189, column: 47, scope: !15897)
!15904 = !DILocalVariable(name: "dirp", scope: !15897, file: !991, line: 191, type: !662)
!15905 = !DILocation(line: 191, column: 8, scope: !15897)
!15906 = !DILocation(line: 191, column: 24, scope: !15897)
!15907 = !DILocation(line: 191, column: 15, scope: !15897)
!15908 = !DILocation(line: 192, column: 9, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15897, file: !991, line: 192, column: 7)
!15910 = !DILocation(line: 192, column: 7, scope: !15897)
!15911 = !DILocation(line: 193, column: 5, scope: !15909)
!15912 = !DILocalVariable(name: "name_space", scope: !15913, file: !991, line: 196, type: !7)
!15913 = distinct !DILexicalBlock(scope: !15909, file: !991, line: 195, column: 5)
!15914 = !DILocation(line: 196, column: 13, scope: !15913)
!15915 = !DILocation(line: 196, column: 41, scope: !15913)
!15916 = !DILocation(line: 196, column: 47, scope: !15913)
!15917 = !DILocation(line: 196, column: 26, scope: !15913)
!15918 = !DILocation(line: 197, column: 21, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15913, file: !991, line: 197, column: 11)
!15920 = !DILocation(line: 197, column: 11, scope: !15919)
!15921 = !DILocation(line: 197, column: 27, scope: !15919)
!15922 = !DILocation(line: 197, column: 11, scope: !15913)
!15923 = !DILocalVariable(name: "closedir_errno", scope: !15924, file: !991, line: 199, type: !5)
!15924 = distinct !DILexicalBlock(scope: !15919, file: !991, line: 198, column: 9)
!15925 = !DILocation(line: 199, column: 15, scope: !15924)
!15926 = !DILocation(line: 199, column: 32, scope: !15924)
!15927 = !DILocation(line: 200, column: 17, scope: !15924)
!15928 = !DILocation(line: 200, column: 11, scope: !15924)
!15929 = !DILocation(line: 201, column: 19, scope: !15924)
!15930 = !DILocation(line: 201, column: 11, scope: !15924)
!15931 = !DILocation(line: 201, column: 17, scope: !15924)
!15932 = !DILocation(line: 202, column: 11, scope: !15924)
!15933 = !DILocation(line: 204, column: 14, scope: !15913)
!15934 = !DILocation(line: 204, column: 7, scope: !15913)
!15935 = !DILocation(line: 206, column: 1, scope: !15897)
!15936 = distinct !DISubprogram(name: "savewd_init", scope: !98, file: !98, line: 79, type: !15937, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!15937 = !DISubroutineType(types: !15938)
!15938 = !{null, !1413}
!15939 = !DILocalVariable(name: "wd", arg: 1, scope: !15936, file: !98, line: 79, type: !1413)
!15940 = !DILocation(line: 79, column: 29, scope: !15936)
!15941 = !DILocation(line: 81, column: 3, scope: !15936)
!15942 = !DILocation(line: 81, column: 7, scope: !15936)
!15943 = !DILocation(line: 81, column: 13, scope: !15936)
!15944 = !DILocation(line: 82, column: 1, scope: !15936)
!15945 = distinct !DISubprogram(name: "savewd_errno", scope: !98, file: !98, line: 124, type: !15946, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!15946 = !DISubroutineType(types: !15947)
!15947 = !{!5, !15948}
!15948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15949, size: 64)
!15949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!15950 = !DILocalVariable(name: "wd", arg: 1, scope: !15945, file: !98, line: 124, type: !15948)
!15951 = !DILocation(line: 124, column: 36, scope: !15945)
!15952 = !DILocation(line: 126, column: 11, scope: !15945)
!15953 = !DILocation(line: 126, column: 15, scope: !15945)
!15954 = !DILocation(line: 126, column: 21, scope: !15945)
!15955 = !DILocation(line: 126, column: 38, scope: !15945)
!15956 = !DILocation(line: 126, column: 42, scope: !15945)
!15957 = !DILocation(line: 126, column: 46, scope: !15945)
!15958 = !DILocation(line: 126, column: 3, scope: !15945)
!15959 = distinct !DISubprogram(name: "savewd_chdir", scope: !1409, file: !1409, line: 106, type: !15960, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!15960 = !DISubroutineType(types: !15961)
!15961 = !{!5, !1413, !180, !5, !224}
!15962 = !DILocalVariable(name: "wd", arg: 1, scope: !15959, file: !1409, line: 106, type: !1413)
!15963 = !DILocation(line: 106, column: 30, scope: !15959)
!15964 = !DILocalVariable(name: "dir", arg: 2, scope: !15959, file: !1409, line: 106, type: !180)
!15965 = !DILocation(line: 106, column: 46, scope: !15959)
!15966 = !DILocalVariable(name: "options", arg: 3, scope: !15959, file: !1409, line: 106, type: !5)
!15967 = !DILocation(line: 106, column: 55, scope: !15959)
!15968 = !DILocalVariable(name: "open_result", arg: 4, scope: !15959, file: !1409, line: 107, type: !224)
!15969 = !DILocation(line: 107, column: 19, scope: !15959)
!15970 = !DILocalVariable(name: "fd", scope: !15959, file: !1409, line: 109, type: !5)
!15971 = !DILocation(line: 109, column: 7, scope: !15959)
!15972 = !DILocalVariable(name: "result", scope: !15959, file: !1409, line: 110, type: !5)
!15973 = !DILocation(line: 110, column: 7, scope: !15959)
!15974 = !DILocation(line: 114, column: 7, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15959, file: !1409, line: 114, column: 7)
!15976 = !DILocation(line: 115, column: 7, scope: !15975)
!15977 = !DILocation(line: 115, column: 11, scope: !15975)
!15978 = !DILocation(line: 115, column: 19, scope: !15975)
!15979 = !DILocation(line: 114, column: 7, scope: !15959)
!15980 = !DILocation(line: 117, column: 18, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15975, file: !1409, line: 116, column: 5)
!15982 = !DILocation(line: 119, column: 22, scope: !15981)
!15983 = !DILocation(line: 119, column: 30, scope: !15981)
!15984 = !DILocation(line: 119, column: 19, scope: !15981)
!15985 = !DILocation(line: 117, column: 12, scope: !15981)
!15986 = !DILocation(line: 117, column: 10, scope: !15981)
!15987 = !DILocation(line: 121, column: 11, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15981, file: !1409, line: 121, column: 11)
!15989 = !DILocation(line: 121, column: 11, scope: !15981)
!15990 = !DILocation(line: 123, column: 28, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15988, file: !1409, line: 122, column: 9)
!15992 = !DILocation(line: 123, column: 11, scope: !15991)
!15993 = !DILocation(line: 123, column: 26, scope: !15991)
!15994 = !DILocation(line: 124, column: 28, scope: !15991)
!15995 = !DILocation(line: 124, column: 11, scope: !15991)
!15996 = !DILocation(line: 124, column: 26, scope: !15991)
!15997 = !DILocation(line: 125, column: 9, scope: !15991)
!15998 = !DILocation(line: 127, column: 11, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15981, file: !1409, line: 127, column: 11)
!16000 = !DILocation(line: 127, column: 14, scope: !15999)
!16001 = !DILocation(line: 127, column: 18, scope: !15999)
!16002 = !DILocation(line: 127, column: 21, scope: !15999)
!16003 = !DILocation(line: 127, column: 27, scope: !15999)
!16004 = !DILocation(line: 127, column: 11, scope: !15981)
!16005 = !DILocation(line: 128, column: 16, scope: !15999)
!16006 = !DILocation(line: 128, column: 9, scope: !15999)
!16007 = !DILocation(line: 129, column: 5, scope: !15981)
!16008 = !DILocation(line: 131, column: 7, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !15959, file: !1409, line: 131, column: 7)
!16010 = !DILocation(line: 131, column: 14, scope: !16009)
!16011 = !DILocation(line: 131, column: 19, scope: !16009)
!16012 = !DILocation(line: 131, column: 30, scope: !16009)
!16013 = !DILocation(line: 131, column: 27, scope: !16009)
!16014 = !DILocation(line: 131, column: 33, scope: !16009)
!16015 = !DILocation(line: 131, column: 36, scope: !16009)
!16016 = !DILocation(line: 131, column: 44, scope: !16009)
!16017 = !DILocation(line: 131, column: 7, scope: !15959)
!16018 = !DILocation(line: 133, column: 24, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !1409, line: 133, column: 11)
!16020 = distinct !DILexicalBlock(scope: !16009, file: !1409, line: 132, column: 5)
!16021 = !DILocation(line: 133, column: 11, scope: !16019)
!16022 = !DILocation(line: 133, column: 11, scope: !16020)
!16023 = !DILocation(line: 135, column: 23, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16019, file: !1409, line: 134, column: 9)
!16025 = !DILocation(line: 136, column: 18, scope: !16024)
!16026 = !DILocation(line: 137, column: 9, scope: !16024)
!16027 = !DILocation(line: 140, column: 21, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16019, file: !1409, line: 139, column: 9)
!16029 = !DILocation(line: 140, column: 24, scope: !16028)
!16030 = !DILocation(line: 140, column: 37, scope: !16028)
!16031 = !DILocation(line: 140, column: 30, scope: !16028)
!16032 = !DILocation(line: 140, column: 52, scope: !16028)
!16033 = !DILocation(line: 140, column: 44, scope: !16028)
!16034 = !DILocation(line: 140, column: 18, scope: !16028)
!16035 = !DILocation(line: 142, column: 15, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16028, file: !1409, line: 142, column: 15)
!16037 = !DILocation(line: 142, column: 22, scope: !16036)
!16038 = !DILocation(line: 142, column: 15, scope: !16028)
!16039 = !DILocation(line: 143, column: 21, scope: !16036)
!16040 = !DILocation(line: 143, column: 25, scope: !16036)
!16041 = !DILocation(line: 143, column: 13, scope: !16036)
!16042 = !DILocation(line: 146, column: 17, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16036, file: !1409, line: 144, column: 15)
!16044 = !DILocation(line: 146, column: 21, scope: !16043)
!16045 = !DILocation(line: 146, column: 27, scope: !16043)
!16046 = !DILocation(line: 147, column: 17, scope: !16043)
!16047 = !DILocation(line: 152, column: 17, scope: !16043)
!16048 = !DILocation(line: 155, column: 17, scope: !16043)
!16049 = !DILocation(line: 156, column: 17, scope: !16043)
!16050 = !DILocation(line: 159, column: 17, scope: !16043)
!16051 = !DILocation(line: 160, column: 15, scope: !16043)
!16052 = !DILocation(line: 162, column: 5, scope: !16020)
!16053 = !DILocation(line: 164, column: 12, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !15959, file: !1409, line: 164, column: 7)
!16055 = !DILocation(line: 164, column: 9, scope: !16054)
!16056 = !DILocation(line: 164, column: 15, scope: !16054)
!16057 = !DILocation(line: 164, column: 20, scope: !16054)
!16058 = !DILocation(line: 164, column: 7, scope: !15959)
!16059 = !DILocalVariable(name: "e", scope: !16060, file: !1409, line: 166, type: !5)
!16060 = distinct !DILexicalBlock(scope: !16054, file: !1409, line: 165, column: 5)
!16061 = !DILocation(line: 166, column: 11, scope: !16060)
!16062 = !DILocation(line: 166, column: 15, scope: !16060)
!16063 = !DILocation(line: 167, column: 14, scope: !16060)
!16064 = !DILocation(line: 167, column: 7, scope: !16060)
!16065 = !DILocation(line: 168, column: 15, scope: !16060)
!16066 = !DILocation(line: 168, column: 7, scope: !16060)
!16067 = !DILocation(line: 168, column: 13, scope: !16060)
!16068 = !DILocation(line: 169, column: 5, scope: !16060)
!16069 = !DILocation(line: 171, column: 10, scope: !15959)
!16070 = !DILocation(line: 171, column: 3, scope: !15959)
!16071 = distinct !DISubprogram(name: "savewd_save", scope: !1409, file: !1409, line: 51, type: !16072, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{!139, !1413}
!16074 = !DILocalVariable(name: "wd", arg: 1, scope: !16071, file: !1409, line: 51, type: !1413)
!16075 = !DILocation(line: 51, column: 29, scope: !16071)
!16076 = !DILocation(line: 53, column: 11, scope: !16071)
!16077 = !DILocation(line: 53, column: 15, scope: !16071)
!16078 = !DILocation(line: 53, column: 3, scope: !16071)
!16079 = !DILocalVariable(name: "fd", scope: !16080, file: !1409, line: 58, type: !5)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !1409, line: 57, column: 7)
!16081 = distinct !DILexicalBlock(scope: !16071, file: !1409, line: 54, column: 5)
!16082 = !DILocation(line: 58, column: 13, scope: !16080)
!16083 = !DILocation(line: 58, column: 18, scope: !16080)
!16084 = !DILocation(line: 59, column: 18, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16080, file: !1409, line: 59, column: 13)
!16086 = !DILocation(line: 59, column: 15, scope: !16085)
!16087 = !DILocation(line: 59, column: 13, scope: !16080)
!16088 = !DILocation(line: 61, column: 13, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16085, file: !1409, line: 60, column: 11)
!16090 = !DILocation(line: 61, column: 17, scope: !16089)
!16091 = !DILocation(line: 61, column: 23, scope: !16089)
!16092 = !DILocation(line: 62, column: 26, scope: !16089)
!16093 = !DILocation(line: 62, column: 13, scope: !16089)
!16094 = !DILocation(line: 62, column: 17, scope: !16089)
!16095 = !DILocation(line: 62, column: 21, scope: !16089)
!16096 = !DILocation(line: 62, column: 24, scope: !16089)
!16097 = !DILocation(line: 63, column: 13, scope: !16089)
!16098 = !DILocation(line: 65, column: 13, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16080, file: !1409, line: 65, column: 13)
!16100 = !DILocation(line: 65, column: 19, scope: !16099)
!16101 = !DILocation(line: 65, column: 29, scope: !16099)
!16102 = !DILocation(line: 65, column: 32, scope: !16099)
!16103 = !DILocation(line: 65, column: 38, scope: !16099)
!16104 = !DILocation(line: 65, column: 13, scope: !16080)
!16105 = !DILocation(line: 67, column: 13, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16099, file: !1409, line: 66, column: 11)
!16107 = !DILocation(line: 67, column: 17, scope: !16106)
!16108 = !DILocation(line: 67, column: 23, scope: !16106)
!16109 = !DILocation(line: 68, column: 30, scope: !16106)
!16110 = !DILocation(line: 68, column: 13, scope: !16106)
!16111 = !DILocation(line: 68, column: 17, scope: !16106)
!16112 = !DILocation(line: 68, column: 21, scope: !16106)
!16113 = !DILocation(line: 68, column: 28, scope: !16106)
!16114 = !DILocation(line: 69, column: 13, scope: !16106)
!16115 = !DILocation(line: 72, column: 7, scope: !16081)
!16116 = !DILocation(line: 72, column: 11, scope: !16081)
!16117 = !DILocation(line: 72, column: 17, scope: !16081)
!16118 = !DILocation(line: 73, column: 7, scope: !16081)
!16119 = !DILocation(line: 73, column: 11, scope: !16081)
!16120 = !DILocation(line: 73, column: 15, scope: !16081)
!16121 = !DILocation(line: 73, column: 21, scope: !16081)
!16122 = !DILocation(line: 74, column: 7, scope: !16081)
!16123 = !DILocation(line: 76, column: 11, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16081, file: !1409, line: 76, column: 11)
!16125 = !DILocation(line: 76, column: 15, scope: !16124)
!16126 = !DILocation(line: 76, column: 19, scope: !16124)
!16127 = !DILocation(line: 76, column: 25, scope: !16124)
!16128 = !DILocation(line: 76, column: 11, scope: !16081)
!16129 = !DILocation(line: 81, column: 27, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16124, file: !1409, line: 77, column: 9)
!16131 = !DILocation(line: 81, column: 11, scope: !16130)
!16132 = !DILocation(line: 81, column: 15, scope: !16130)
!16133 = !DILocation(line: 81, column: 19, scope: !16130)
!16134 = !DILocation(line: 81, column: 25, scope: !16130)
!16135 = !DILocation(line: 82, column: 15, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16130, file: !1409, line: 82, column: 15)
!16137 = !DILocation(line: 82, column: 19, scope: !16136)
!16138 = !DILocation(line: 82, column: 23, scope: !16136)
!16139 = !DILocation(line: 82, column: 29, scope: !16136)
!16140 = !DILocation(line: 82, column: 15, scope: !16130)
!16141 = !DILocation(line: 84, column: 23, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16143, file: !1409, line: 84, column: 19)
!16143 = distinct !DILexicalBlock(scope: !16136, file: !1409, line: 83, column: 13)
!16144 = !DILocation(line: 84, column: 27, scope: !16142)
!16145 = !DILocation(line: 84, column: 31, scope: !16142)
!16146 = !DILocation(line: 84, column: 21, scope: !16142)
!16147 = !DILocation(line: 84, column: 19, scope: !16143)
!16148 = !DILocation(line: 85, column: 17, scope: !16142)
!16149 = !DILocation(line: 86, column: 15, scope: !16143)
!16150 = !DILocation(line: 86, column: 19, scope: !16143)
!16151 = !DILocation(line: 86, column: 25, scope: !16143)
!16152 = !DILocation(line: 87, column: 32, scope: !16143)
!16153 = !DILocation(line: 87, column: 15, scope: !16143)
!16154 = !DILocation(line: 87, column: 19, scope: !16143)
!16155 = !DILocation(line: 87, column: 23, scope: !16143)
!16156 = !DILocation(line: 87, column: 30, scope: !16143)
!16157 = !DILocation(line: 88, column: 13, scope: !16143)
!16158 = !DILocation(line: 89, column: 9, scope: !16130)
!16159 = !DILocation(line: 90, column: 7, scope: !16081)
!16160 = !DILocation(line: 96, column: 7, scope: !16081)
!16161 = !DILocation(line: 99, column: 7, scope: !16081)
!16162 = !DILocation(line: 102, column: 3, scope: !16071)
!16163 = !DILocation(line: 103, column: 1, scope: !16071)
!16164 = !DILocalVariable(name: "wd", arg: 1, scope: !1410, file: !1409, line: 175, type: !1413)
!16165 = !DILocation(line: 175, column: 32, scope: !1410)
!16166 = !DILocalVariable(name: "status", arg: 2, scope: !1410, file: !1409, line: 175, type: !5)
!16167 = !DILocation(line: 175, column: 40, scope: !1410)
!16168 = !DILocation(line: 177, column: 11, scope: !1410)
!16169 = !DILocation(line: 177, column: 15, scope: !1410)
!16170 = !DILocation(line: 177, column: 3, scope: !1410)
!16171 = !DILocation(line: 183, column: 7, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !1410, file: !1409, line: 178, column: 5)
!16173 = !DILocation(line: 187, column: 19, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16172, file: !1409, line: 187, column: 11)
!16175 = !DILocation(line: 187, column: 23, scope: !16174)
!16176 = !DILocation(line: 187, column: 27, scope: !16174)
!16177 = !DILocation(line: 187, column: 11, scope: !16174)
!16178 = !DILocation(line: 187, column: 31, scope: !16174)
!16179 = !DILocation(line: 187, column: 11, scope: !16172)
!16180 = !DILocation(line: 189, column: 11, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16174, file: !1409, line: 188, column: 9)
!16182 = !DILocation(line: 189, column: 15, scope: !16181)
!16183 = !DILocation(line: 189, column: 21, scope: !16181)
!16184 = !DILocation(line: 190, column: 11, scope: !16181)
!16185 = !DILocalVariable(name: "chdir_errno", scope: !16186, file: !1409, line: 194, type: !5)
!16186 = distinct !DILexicalBlock(scope: !16174, file: !1409, line: 193, column: 9)
!16187 = !DILocation(line: 194, column: 15, scope: !16186)
!16188 = !DILocation(line: 194, column: 29, scope: !16186)
!16189 = !DILocation(line: 195, column: 18, scope: !16186)
!16190 = !DILocation(line: 195, column: 22, scope: !16186)
!16191 = !DILocation(line: 195, column: 26, scope: !16186)
!16192 = !DILocation(line: 195, column: 11, scope: !16186)
!16193 = !DILocation(line: 196, column: 11, scope: !16186)
!16194 = !DILocation(line: 196, column: 15, scope: !16186)
!16195 = !DILocation(line: 196, column: 21, scope: !16186)
!16196 = !DILocation(line: 197, column: 28, scope: !16186)
!16197 = !DILocation(line: 197, column: 11, scope: !16186)
!16198 = !DILocation(line: 197, column: 15, scope: !16186)
!16199 = !DILocation(line: 197, column: 19, scope: !16186)
!16200 = !DILocation(line: 197, column: 26, scope: !16186)
!16201 = !DILocation(line: 199, column: 7, scope: !16172)
!16202 = !DILocation(line: 202, column: 15, scope: !16172)
!16203 = !DILocation(line: 202, column: 19, scope: !16172)
!16204 = !DILocation(line: 202, column: 23, scope: !16172)
!16205 = !DILocation(line: 202, column: 7, scope: !16172)
!16206 = !DILocation(line: 202, column: 13, scope: !16172)
!16207 = !DILocation(line: 203, column: 7, scope: !16172)
!16208 = !DILocalVariable(name: "child", scope: !16209, file: !1409, line: 209, type: !108)
!16209 = distinct !DILexicalBlock(scope: !16172, file: !1409, line: 208, column: 7)
!16210 = !DILocation(line: 209, column: 15, scope: !16209)
!16211 = !DILocation(line: 209, column: 23, scope: !16209)
!16212 = !DILocation(line: 209, column: 27, scope: !16209)
!16213 = !DILocation(line: 209, column: 31, scope: !16209)
!16214 = !DILocation(line: 210, column: 13, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16209, file: !1409, line: 210, column: 13)
!16216 = !DILocation(line: 210, column: 19, scope: !16215)
!16217 = !DILocation(line: 210, column: 13, scope: !16209)
!16218 = !DILocation(line: 211, column: 18, scope: !16215)
!16219 = !DILocation(line: 211, column: 11, scope: !16215)
!16220 = !DILocation(line: 212, column: 17, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16209, file: !1409, line: 212, column: 13)
!16222 = !DILocation(line: 212, column: 15, scope: !16221)
!16223 = !DILocation(line: 212, column: 13, scope: !16209)
!16224 = !DILocalVariable(name: "child_status", scope: !16225, file: !1409, line: 214, type: !5)
!16225 = distinct !DILexicalBlock(scope: !16221, file: !1409, line: 213, column: 11)
!16226 = !DILocation(line: 214, column: 17, scope: !16225)
!16227 = !DILocation(line: 215, column: 13, scope: !16225)
!16228 = !DILocation(line: 215, column: 29, scope: !16225)
!16229 = !DILocation(line: 215, column: 20, scope: !16225)
!16230 = !DILocation(line: 215, column: 54, scope: !16225)
!16231 = !DILocation(line: 216, column: 15, scope: !16225)
!16232 = distinct !{!16232, !16227, !16231}
!16233 = !DILocation(line: 217, column: 13, scope: !16225)
!16234 = !DILocation(line: 217, column: 17, scope: !16225)
!16235 = !DILocation(line: 217, column: 21, scope: !16225)
!16236 = !DILocation(line: 217, column: 27, scope: !16225)
!16237 = !DILocation(line: 218, column: 19, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16225, file: !1409, line: 218, column: 17)
!16239 = !DILocation(line: 218, column: 17, scope: !16225)
!16240 = !DILocation(line: 219, column: 22, scope: !16238)
!16241 = !DILocation(line: 219, column: 15, scope: !16238)
!16242 = !DILocation(line: 220, column: 20, scope: !16225)
!16243 = !DILocation(line: 220, column: 13, scope: !16225)
!16244 = !DILocation(line: 223, column: 7, scope: !16172)
!16245 = !DILocation(line: 226, column: 7, scope: !16172)
!16246 = !DILocation(line: 229, column: 3, scope: !1410)
!16247 = !DILocation(line: 230, column: 1, scope: !1410)
!16248 = distinct !DISubprogram(name: "savewd_finish", scope: !1409, file: !1409, line: 233, type: !15937, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!16249 = !DILocalVariable(name: "wd", arg: 1, scope: !16248, file: !1409, line: 233, type: !1413)
!16250 = !DILocation(line: 233, column: 31, scope: !16248)
!16251 = !DILocation(line: 235, column: 11, scope: !16248)
!16252 = !DILocation(line: 235, column: 15, scope: !16248)
!16253 = !DILocation(line: 235, column: 3, scope: !16248)
!16254 = !DILocation(line: 239, column: 7, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16248, file: !1409, line: 236, column: 5)
!16256 = !DILocation(line: 243, column: 14, scope: !16255)
!16257 = !DILocation(line: 243, column: 18, scope: !16255)
!16258 = !DILocation(line: 243, column: 22, scope: !16255)
!16259 = !DILocation(line: 243, column: 7, scope: !16255)
!16260 = !DILocation(line: 244, column: 7, scope: !16255)
!16261 = !DILocation(line: 247, column: 7, scope: !16255)
!16262 = !DILocation(line: 248, column: 7, scope: !16255)
!16263 = !DILocation(line: 251, column: 7, scope: !16255)
!16264 = !DILocation(line: 254, column: 3, scope: !16248)
!16265 = !DILocation(line: 254, column: 7, scope: !16248)
!16266 = !DILocation(line: 254, column: 13, scope: !16248)
!16267 = !DILocation(line: 255, column: 1, scope: !16248)
!16268 = distinct !DISubprogram(name: "savewd_process_files", scope: !1409, file: !1409, line: 274, type: !16269, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!5, !5, !206, !16271, !47}
!16271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16272, size: 64)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{!5, !7, !1413, !47}
!16274 = !DILocalVariable(name: "n_files", arg: 1, scope: !16268, file: !1409, line: 274, type: !5)
!16275 = !DILocation(line: 274, column: 27, scope: !16268)
!16276 = !DILocalVariable(name: "file", arg: 2, scope: !16268, file: !1409, line: 274, type: !206)
!16277 = !DILocation(line: 274, column: 43, scope: !16268)
!16278 = !DILocalVariable(name: "act", arg: 3, scope: !16268, file: !1409, line: 275, type: !16271)
!16279 = !DILocation(line: 275, column: 29, scope: !16268)
!16280 = !DILocalVariable(name: "options", arg: 4, scope: !16268, file: !1409, line: 276, type: !47)
!16281 = !DILocation(line: 276, column: 29, scope: !16268)
!16282 = !DILocalVariable(name: "i", scope: !16268, file: !1409, line: 278, type: !5)
!16283 = !DILocation(line: 278, column: 7, scope: !16268)
!16284 = !DILocalVariable(name: "last_relative", scope: !16268, file: !1409, line: 279, type: !5)
!16285 = !DILocation(line: 279, column: 7, scope: !16268)
!16286 = !DILocalVariable(name: "exit_status", scope: !16268, file: !1409, line: 280, type: !5)
!16287 = !DILocation(line: 280, column: 7, scope: !16268)
!16288 = !DILocalVariable(name: "wd", scope: !16268, file: !1409, line: 281, type: !1396)
!16289 = !DILocation(line: 281, column: 17, scope: !16268)
!16290 = !DILocation(line: 282, column: 3, scope: !16268)
!16291 = !DILocation(line: 284, column: 24, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16268, file: !1409, line: 284, column: 3)
!16293 = !DILocation(line: 284, column: 32, scope: !16292)
!16294 = !DILocation(line: 284, column: 22, scope: !16292)
!16295 = !DILocation(line: 284, column: 8, scope: !16292)
!16296 = !DILocation(line: 284, column: 42, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16292, file: !1409, line: 284, column: 3)
!16298 = !DILocation(line: 284, column: 39, scope: !16297)
!16299 = !DILocation(line: 284, column: 3, scope: !16292)
!16300 = !DILocation(line: 285, column: 11, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16297, file: !1409, line: 285, column: 9)
!16302 = !DILocation(line: 285, column: 9, scope: !16297)
!16303 = !DILocation(line: 286, column: 7, scope: !16301)
!16304 = !DILocation(line: 284, column: 70, scope: !16297)
!16305 = !DILocation(line: 284, column: 3, scope: !16297)
!16306 = distinct !{!16306, !16299, !16307}
!16307 = !DILocation(line: 286, column: 7, scope: !16292)
!16308 = !DILocation(line: 288, column: 3, scope: !16268)
!16309 = !DILocation(line: 288, column: 10, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16311, file: !1409, line: 288, column: 3)
!16311 = distinct !DILexicalBlock(scope: !16268, file: !1409, line: 288, column: 3)
!16312 = !DILocation(line: 288, column: 14, scope: !16310)
!16313 = !DILocation(line: 288, column: 12, scope: !16310)
!16314 = !DILocation(line: 288, column: 3, scope: !16311)
!16315 = !DILocation(line: 290, column: 13, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16317, file: !1409, line: 290, column: 11)
!16317 = distinct !DILexicalBlock(scope: !16310, file: !1409, line: 289, column: 5)
!16318 = !DILocation(line: 290, column: 11, scope: !16317)
!16319 = !DILocalVariable(name: "s", scope: !16320, file: !1409, line: 292, type: !5)
!16320 = distinct !DILexicalBlock(scope: !16316, file: !1409, line: 291, column: 9)
!16321 = !DILocation(line: 292, column: 15, scope: !16320)
!16322 = !DILocation(line: 292, column: 19, scope: !16320)
!16323 = !DILocation(line: 292, column: 24, scope: !16320)
!16324 = !DILocation(line: 292, column: 29, scope: !16320)
!16325 = !DILocation(line: 292, column: 38, scope: !16320)
!16326 = !DILocation(line: 293, column: 15, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16320, file: !1409, line: 293, column: 15)
!16328 = !DILocation(line: 293, column: 29, scope: !16327)
!16329 = !DILocation(line: 293, column: 27, scope: !16327)
!16330 = !DILocation(line: 293, column: 15, scope: !16320)
!16331 = !DILocation(line: 294, column: 27, scope: !16327)
!16332 = !DILocation(line: 294, column: 25, scope: !16327)
!16333 = !DILocation(line: 294, column: 13, scope: !16327)
!16334 = !DILocation(line: 295, column: 9, scope: !16320)
!16335 = !DILocation(line: 297, column: 13, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16317, file: !1409, line: 297, column: 11)
!16337 = !DILocation(line: 297, column: 11, scope: !16317)
!16338 = !DILocalVariable(name: "r", scope: !16339, file: !1409, line: 299, type: !5)
!16339 = distinct !DILexicalBlock(scope: !16336, file: !1409, line: 298, column: 9)
!16340 = !DILocation(line: 299, column: 15, scope: !16339)
!16341 = !DILocation(line: 299, column: 40, scope: !16339)
!16342 = !DILocation(line: 299, column: 19, scope: !16339)
!16343 = !DILocation(line: 300, column: 15, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16339, file: !1409, line: 300, column: 15)
!16345 = !DILocation(line: 300, column: 29, scope: !16344)
!16346 = !DILocation(line: 300, column: 27, scope: !16344)
!16347 = !DILocation(line: 300, column: 15, scope: !16339)
!16348 = !DILocation(line: 301, column: 27, scope: !16344)
!16349 = !DILocation(line: 301, column: 25, scope: !16344)
!16350 = !DILocation(line: 301, column: 13, scope: !16344)
!16351 = !DILocation(line: 302, column: 9, scope: !16339)
!16352 = !DILocation(line: 303, column: 5, scope: !16317)
!16353 = !DILocation(line: 288, column: 30, scope: !16310)
!16354 = !DILocation(line: 288, column: 3, scope: !16310)
!16355 = distinct !{!16355, !16314, !16356}
!16356 = !DILocation(line: 303, column: 5, scope: !16311)
!16357 = !DILocation(line: 305, column: 3, scope: !16268)
!16358 = !DILocation(line: 307, column: 3, scope: !16268)
!16359 = !DILocation(line: 307, column: 10, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16361, file: !1409, line: 307, column: 3)
!16361 = distinct !DILexicalBlock(scope: !16268, file: !1409, line: 307, column: 3)
!16362 = !DILocation(line: 307, column: 14, scope: !16360)
!16363 = !DILocation(line: 307, column: 12, scope: !16360)
!16364 = !DILocation(line: 307, column: 3, scope: !16361)
!16365 = !DILocalVariable(name: "s", scope: !16366, file: !1409, line: 309, type: !5)
!16366 = distinct !DILexicalBlock(scope: !16360, file: !1409, line: 308, column: 5)
!16367 = !DILocation(line: 309, column: 11, scope: !16366)
!16368 = !DILocation(line: 309, column: 15, scope: !16366)
!16369 = !DILocation(line: 309, column: 20, scope: !16366)
!16370 = !DILocation(line: 309, column: 25, scope: !16366)
!16371 = !DILocation(line: 309, column: 34, scope: !16366)
!16372 = !DILocation(line: 310, column: 11, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16366, file: !1409, line: 310, column: 11)
!16374 = !DILocation(line: 310, column: 25, scope: !16373)
!16375 = !DILocation(line: 310, column: 23, scope: !16373)
!16376 = !DILocation(line: 310, column: 11, scope: !16366)
!16377 = !DILocation(line: 311, column: 23, scope: !16373)
!16378 = !DILocation(line: 311, column: 21, scope: !16373)
!16379 = !DILocation(line: 311, column: 9, scope: !16373)
!16380 = !DILocation(line: 312, column: 5, scope: !16366)
!16381 = !DILocation(line: 307, column: 24, scope: !16360)
!16382 = !DILocation(line: 307, column: 3, scope: !16360)
!16383 = distinct !{!16383, !16364, !16384}
!16384 = !DILocation(line: 312, column: 5, scope: !16361)
!16385 = !DILocation(line: 314, column: 10, scope: !16268)
!16386 = !DILocation(line: 314, column: 3, scope: !16268)
!16387 = distinct !DISubprogram(name: "savewd_delegating", scope: !1409, file: !1409, line: 268, type: !16388, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1392, retainedNodes: !295)
!16388 = !DISubroutineType(types: !16389)
!16389 = !{!139, !15948}
!16390 = !DILocalVariable(name: "wd", arg: 1, scope: !16387, file: !1409, line: 268, type: !15948)
!16391 = !DILocation(line: 268, column: 41, scope: !16387)
!16392 = !DILocation(line: 270, column: 10, scope: !16387)
!16393 = !DILocation(line: 270, column: 14, scope: !16387)
!16394 = !DILocation(line: 270, column: 20, scope: !16387)
!16395 = !DILocation(line: 270, column: 37, scope: !16387)
!16396 = !DILocation(line: 270, column: 44, scope: !16387)
!16397 = !DILocation(line: 270, column: 48, scope: !16387)
!16398 = !DILocation(line: 270, column: 52, scope: !16387)
!16399 = !DILocation(line: 270, column: 42, scope: !16387)
!16400 = !DILocation(line: 0, scope: !16387)
!16401 = !DILocation(line: 270, column: 3, scope: !16387)
!16402 = distinct !DISubprogram(name: "getcon", scope: !16403, file: !16403, line: 87, type: !16404, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16403 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!16404 = !DISubroutineType(types: !16405)
!16405 = !{!5, !16406}
!16406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16407, size: 64)
!16407 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !16403, line: 83, baseType: !7)
!16408 = !DILocalVariable(name: "con", arg: 1, scope: !16402, file: !16403, line: 87, type: !16406)
!16409 = !DILocation(line: 87, column: 29, scope: !16402)
!16410 = !DILocation(line: 88, column: 5, scope: !16402)
!16411 = !DILocation(line: 88, column: 11, scope: !16402)
!16412 = !DILocation(line: 88, column: 22, scope: !16402)
!16413 = distinct !DISubprogram(name: "freecon", scope: !16403, file: !16403, line: 90, type: !16414, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16414 = !DISubroutineType(types: !16415)
!16415 = !{null, !16407}
!16416 = !DILocalVariable(name: "con", arg: 1, scope: !16413, file: !16403, line: 90, type: !16407)
!16417 = !DILocation(line: 90, column: 29, scope: !16413)
!16418 = !DILocation(line: 90, column: 56, scope: !16413)
!16419 = distinct !DISubprogram(name: "getfscreatecon", scope: !16403, file: !16403, line: 93, type: !16404, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16420 = !DILocalVariable(name: "con", arg: 1, scope: !16419, file: !16403, line: 93, type: !16406)
!16421 = !DILocation(line: 93, column: 37, scope: !16419)
!16422 = !DILocation(line: 94, column: 5, scope: !16419)
!16423 = !DILocation(line: 94, column: 11, scope: !16419)
!16424 = !DILocation(line: 94, column: 22, scope: !16419)
!16425 = distinct !DISubprogram(name: "setfscreatecon", scope: !16403, file: !16403, line: 96, type: !16426, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16426 = !DISubroutineType(types: !16427)
!16427 = !{!5, !16407}
!16428 = !DILocalVariable(name: "con", arg: 1, scope: !16425, file: !16403, line: 96, type: !16407)
!16429 = !DILocation(line: 96, column: 36, scope: !16425)
!16430 = !DILocation(line: 97, column: 5, scope: !16425)
!16431 = !DILocation(line: 97, column: 11, scope: !16425)
!16432 = !DILocation(line: 97, column: 22, scope: !16425)
!16433 = distinct !DISubprogram(name: "matchpathcon", scope: !16403, file: !16403, line: 99, type: !16434, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16434 = !DISubroutineType(types: !16435)
!16435 = !{!5, !180, !136, !16406}
!16436 = !DILocalVariable(name: "file", arg: 1, scope: !16433, file: !16403, line: 99, type: !180)
!16437 = !DILocation(line: 99, column: 27, scope: !16433)
!16438 = !DILocalVariable(name: "m", arg: 2, scope: !16433, file: !16403, line: 100, type: !136)
!16439 = !DILocation(line: 100, column: 22, scope: !16433)
!16440 = !DILocalVariable(name: "con", arg: 3, scope: !16433, file: !16403, line: 101, type: !16406)
!16441 = !DILocation(line: 101, column: 23, scope: !16433)
!16442 = !DILocation(line: 102, column: 5, scope: !16433)
!16443 = !DILocation(line: 102, column: 11, scope: !16433)
!16444 = !DILocation(line: 102, column: 22, scope: !16433)
!16445 = distinct !DISubprogram(name: "getfilecon", scope: !16403, file: !16403, line: 104, type: !16446, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{!5, !180, !16406}
!16448 = !DILocalVariable(name: "file", arg: 1, scope: !16445, file: !16403, line: 104, type: !180)
!16449 = !DILocation(line: 104, column: 25, scope: !16445)
!16450 = !DILocalVariable(name: "con", arg: 2, scope: !16445, file: !16403, line: 105, type: !16406)
!16451 = !DILocation(line: 105, column: 33, scope: !16445)
!16452 = !DILocation(line: 106, column: 5, scope: !16445)
!16453 = !DILocation(line: 106, column: 11, scope: !16445)
!16454 = !DILocation(line: 106, column: 22, scope: !16445)
!16455 = distinct !DISubprogram(name: "lgetfilecon", scope: !16403, file: !16403, line: 108, type: !16446, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16456 = !DILocalVariable(name: "file", arg: 1, scope: !16455, file: !16403, line: 108, type: !180)
!16457 = !DILocation(line: 108, column: 26, scope: !16455)
!16458 = !DILocalVariable(name: "con", arg: 2, scope: !16455, file: !16403, line: 109, type: !16406)
!16459 = !DILocation(line: 109, column: 34, scope: !16455)
!16460 = !DILocation(line: 110, column: 5, scope: !16455)
!16461 = !DILocation(line: 110, column: 11, scope: !16455)
!16462 = !DILocation(line: 110, column: 22, scope: !16455)
!16463 = distinct !DISubprogram(name: "fgetfilecon", scope: !16403, file: !16403, line: 112, type: !16464, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{!5, !5, !16406}
!16466 = !DILocalVariable(name: "fd", arg: 1, scope: !16463, file: !16403, line: 112, type: !5)
!16467 = !DILocation(line: 112, column: 18, scope: !16463)
!16468 = !DILocalVariable(name: "con", arg: 2, scope: !16463, file: !16403, line: 112, type: !16406)
!16469 = !DILocation(line: 112, column: 42, scope: !16463)
!16470 = !DILocation(line: 113, column: 5, scope: !16463)
!16471 = !DILocation(line: 113, column: 11, scope: !16463)
!16472 = !DILocation(line: 113, column: 22, scope: !16463)
!16473 = distinct !DISubprogram(name: "setfilecon", scope: !16403, file: !16403, line: 115, type: !16474, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16474 = !DISubroutineType(types: !16475)
!16475 = !{!5, !180, !16407}
!16476 = !DILocalVariable(name: "file", arg: 1, scope: !16473, file: !16403, line: 115, type: !180)
!16477 = !DILocation(line: 115, column: 25, scope: !16473)
!16478 = !DILocalVariable(name: "con", arg: 2, scope: !16473, file: !16403, line: 116, type: !16407)
!16479 = !DILocation(line: 116, column: 32, scope: !16473)
!16480 = !DILocation(line: 117, column: 5, scope: !16473)
!16481 = !DILocation(line: 117, column: 11, scope: !16473)
!16482 = !DILocation(line: 117, column: 22, scope: !16473)
!16483 = distinct !DISubprogram(name: "lsetfilecon", scope: !16403, file: !16403, line: 119, type: !16474, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16484 = !DILocalVariable(name: "file", arg: 1, scope: !16483, file: !16403, line: 119, type: !180)
!16485 = !DILocation(line: 119, column: 26, scope: !16483)
!16486 = !DILocalVariable(name: "con", arg: 2, scope: !16483, file: !16403, line: 120, type: !16407)
!16487 = !DILocation(line: 120, column: 33, scope: !16483)
!16488 = !DILocation(line: 121, column: 5, scope: !16483)
!16489 = !DILocation(line: 121, column: 11, scope: !16483)
!16490 = !DILocation(line: 121, column: 22, scope: !16483)
!16491 = distinct !DISubprogram(name: "fsetfilecon", scope: !16403, file: !16403, line: 123, type: !16492, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16492 = !DISubroutineType(types: !16493)
!16493 = !{!5, !5, !16407}
!16494 = !DILocalVariable(name: "fd", arg: 1, scope: !16491, file: !16403, line: 123, type: !5)
!16495 = !DILocation(line: 123, column: 18, scope: !16491)
!16496 = !DILocalVariable(name: "con", arg: 2, scope: !16491, file: !16403, line: 124, type: !16407)
!16497 = !DILocation(line: 124, column: 33, scope: !16491)
!16498 = !DILocation(line: 125, column: 5, scope: !16491)
!16499 = !DILocation(line: 125, column: 11, scope: !16491)
!16500 = !DILocation(line: 125, column: 22, scope: !16491)
!16501 = distinct !DISubprogram(name: "security_check_context", scope: !16403, file: !16403, line: 128, type: !16426, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16502 = !DILocalVariable(name: "con", arg: 1, scope: !16501, file: !16403, line: 128, type: !16407)
!16503 = !DILocation(line: 128, column: 44, scope: !16501)
!16504 = !DILocation(line: 129, column: 5, scope: !16501)
!16505 = !DILocation(line: 129, column: 11, scope: !16501)
!16506 = !DILocation(line: 129, column: 22, scope: !16501)
!16507 = distinct !DISubprogram(name: "security_check_context_raw", scope: !16403, file: !16403, line: 131, type: !16426, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16508 = !DILocalVariable(name: "con", arg: 1, scope: !16507, file: !16403, line: 131, type: !16407)
!16509 = !DILocation(line: 131, column: 48, scope: !16507)
!16510 = !DILocation(line: 132, column: 5, scope: !16507)
!16511 = !DILocation(line: 132, column: 11, scope: !16507)
!16512 = !DILocation(line: 132, column: 22, scope: !16507)
!16513 = distinct !DISubprogram(name: "setexeccon", scope: !16403, file: !16403, line: 134, type: !16426, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16514 = !DILocalVariable(name: "con", arg: 1, scope: !16513, file: !16403, line: 134, type: !16407)
!16515 = !DILocation(line: 134, column: 32, scope: !16513)
!16516 = !DILocation(line: 135, column: 5, scope: !16513)
!16517 = !DILocation(line: 135, column: 11, scope: !16513)
!16518 = !DILocation(line: 135, column: 22, scope: !16513)
!16519 = distinct !DISubprogram(name: "security_compute_create", scope: !16403, file: !16403, line: 137, type: !16520, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!5, !16407, !16407, !16522, !16406}
!16522 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !16403, line: 82, baseType: !34)
!16523 = !DILocalVariable(name: "scon", arg: 1, scope: !16519, file: !16403, line: 137, type: !16407)
!16524 = !DILocation(line: 137, column: 45, scope: !16519)
!16525 = !DILocalVariable(name: "tcon", arg: 2, scope: !16519, file: !16403, line: 138, type: !16407)
!16526 = !DILocation(line: 138, column: 45, scope: !16519)
!16527 = !DILocalVariable(name: "tclass", arg: 3, scope: !16519, file: !16403, line: 139, type: !16522)
!16528 = !DILocation(line: 139, column: 43, scope: !16519)
!16529 = !DILocalVariable(name: "newcon", arg: 4, scope: !16519, file: !16403, line: 140, type: !16406)
!16530 = !DILocation(line: 140, column: 46, scope: !16519)
!16531 = !DILocation(line: 141, column: 5, scope: !16519)
!16532 = !DILocation(line: 141, column: 11, scope: !16519)
!16533 = !DILocation(line: 141, column: 22, scope: !16519)
!16534 = distinct !DISubprogram(name: "string_to_security_class", scope: !16403, file: !16403, line: 143, type: !16535, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16535 = !DISubroutineType(types: !16536)
!16536 = !{!16522, !180}
!16537 = !DILocalVariable(name: "name", arg: 1, scope: !16534, file: !16403, line: 143, type: !180)
!16538 = !DILocation(line: 143, column: 39, scope: !16534)
!16539 = !DILocation(line: 144, column: 5, scope: !16534)
!16540 = !DILocation(line: 144, column: 11, scope: !16534)
!16541 = !DILocation(line: 144, column: 22, scope: !16534)
!16542 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !16403, file: !16403, line: 146, type: !16543, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1427, retainedNodes: !295)
!16543 = !DISubroutineType(types: !16544)
!16544 = !{!5, !180, !180}
!16545 = !DILocalVariable(name: "path", arg: 1, scope: !16542, file: !16403, line: 146, type: !180)
!16546 = !DILocation(line: 146, column: 39, scope: !16542)
!16547 = !DILocalVariable(name: "prefix", arg: 2, scope: !16542, file: !16403, line: 147, type: !180)
!16548 = !DILocation(line: 147, column: 39, scope: !16542)
!16549 = !DILocation(line: 148, column: 5, scope: !16542)
!16550 = !DILocation(line: 148, column: 11, scope: !16542)
!16551 = !DILocation(line: 148, column: 22, scope: !16542)
!16552 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16553, file: !16553, line: 66, type: !16554, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16553 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!16554 = !DISubroutineType(types: !16555)
!16555 = !{!32, !16556}
!16556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16557, size: 64)
!16557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16558)
!16558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !16559)
!16559 = !{!16560, !16561, !16562, !16563, !16564, !16565, !16566, !16567, !16568, !16569, !16570, !16571, !16576, !16577, !16578}
!16560 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16558, file: !471, line: 48, baseType: !460, size: 64)
!16561 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16558, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!16562 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16558, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!16563 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16558, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!16564 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16558, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!16565 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16558, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!16566 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16558, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!16567 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16558, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!16568 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16558, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!16569 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16558, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!16570 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16558, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!16571 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16558, file: !471, line: 91, baseType: !16572, size: 128, offset: 576)
!16572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !16573)
!16573 = !{!16574, !16575}
!16574 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16572, file: !373, line: 122, baseType: !376, size: 64)
!16575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16572, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!16576 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16558, file: !471, line: 92, baseType: !16572, size: 128, offset: 704)
!16577 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16558, file: !471, line: 93, baseType: !16572, size: 128, offset: 832)
!16578 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16558, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!16579 = !DILocalVariable(name: "st", arg: 1, scope: !16552, file: !16553, line: 66, type: !16556)
!16580 = !DILocation(line: 66, column: 39, scope: !16552)
!16581 = !DILocation(line: 69, column: 10, scope: !16552)
!16582 = !DILocation(line: 69, column: 38, scope: !16552)
!16583 = !DILocation(line: 69, column: 3, scope: !16552)
!16584 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16553, file: !16553, line: 79, type: !16554, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16585 = !DILocalVariable(name: "st", arg: 1, scope: !16584, file: !16553, line: 79, type: !16556)
!16586 = !DILocation(line: 79, column: 39, scope: !16584)
!16587 = !DILocation(line: 82, column: 10, scope: !16584)
!16588 = !DILocation(line: 82, column: 38, scope: !16584)
!16589 = !DILocation(line: 82, column: 3, scope: !16584)
!16590 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16553, file: !16553, line: 92, type: !16554, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16591 = !DILocalVariable(name: "st", arg: 1, scope: !16590, file: !16553, line: 92, type: !16556)
!16592 = !DILocation(line: 92, column: 39, scope: !16590)
!16593 = !DILocation(line: 95, column: 10, scope: !16590)
!16594 = !DILocation(line: 95, column: 38, scope: !16590)
!16595 = !DILocation(line: 95, column: 3, scope: !16590)
!16596 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16553, file: !16553, line: 105, type: !16554, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16597 = !DILocalVariable(name: "st", arg: 1, scope: !16596, file: !16553, line: 105, type: !16556)
!16598 = !DILocation(line: 105, column: 43, scope: !16596)
!16599 = !DILocation(line: 112, column: 3, scope: !16596)
!16600 = distinct !DISubprogram(name: "get_stat_atime", scope: !16553, file: !16553, line: 118, type: !16601, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16601 = !DISubroutineType(types: !16602)
!16602 = !{!16572, !16556}
!16603 = !DILocalVariable(name: "st", arg: 1, scope: !16600, file: !16553, line: 118, type: !16556)
!16604 = !DILocation(line: 118, column: 36, scope: !16600)
!16605 = !DILocation(line: 121, column: 10, scope: !16600)
!16606 = !DILocation(line: 121, column: 3, scope: !16600)
!16607 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16553, file: !16553, line: 132, type: !16601, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16608 = !DILocalVariable(name: "st", arg: 1, scope: !16607, file: !16553, line: 132, type: !16556)
!16609 = !DILocation(line: 132, column: 36, scope: !16607)
!16610 = !DILocation(line: 135, column: 10, scope: !16607)
!16611 = !DILocation(line: 135, column: 3, scope: !16607)
!16612 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16553, file: !16553, line: 146, type: !16601, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16613 = !DILocalVariable(name: "st", arg: 1, scope: !16612, file: !16553, line: 146, type: !16556)
!16614 = !DILocation(line: 146, column: 36, scope: !16612)
!16615 = !DILocation(line: 149, column: 10, scope: !16612)
!16616 = !DILocation(line: 149, column: 3, scope: !16612)
!16617 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16553, file: !16553, line: 161, type: !16601, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16618 = !DILocalVariable(name: "st", arg: 1, scope: !16617, file: !16553, line: 161, type: !16556)
!16619 = !DILocation(line: 161, column: 40, scope: !16617)
!16620 = !DILocalVariable(name: "t", scope: !16617, file: !16553, line: 163, type: !16572)
!16621 = !DILocation(line: 163, column: 19, scope: !16617)
!16622 = !DILocation(line: 183, column: 5, scope: !16617)
!16623 = !DILocation(line: 183, column: 12, scope: !16617)
!16624 = !DILocation(line: 184, column: 5, scope: !16617)
!16625 = !DILocation(line: 184, column: 13, scope: !16617)
!16626 = !DILocation(line: 202, column: 3, scope: !16617)
!16627 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16553, file: !16553, line: 211, type: !16628, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1429, retainedNodes: !295)
!16628 = !DISubroutineType(types: !16629)
!16629 = !{!5, !5, !16630}
!16630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16558, size: 64)
!16631 = !DILocalVariable(name: "result", arg: 1, scope: !16627, file: !16553, line: 211, type: !5)
!16632 = !DILocation(line: 211, column: 26, scope: !16627)
!16633 = !DILocalVariable(name: "st", arg: 2, scope: !16627, file: !16553, line: 211, type: !16630)
!16634 = !DILocation(line: 211, column: 47, scope: !16627)
!16635 = !DILocation(line: 243, column: 10, scope: !16627)
!16636 = !DILocation(line: 243, column: 3, scope: !16627)
!16637 = distinct !DISubprogram(name: "statat", scope: !16638, file: !16638, line: 102, type: !16639, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1432, retainedNodes: !295)
!16638 = !DIFile(filename: "./lib/openat.h", directory: "/home/mohamad/clone/coreutils")
!16639 = !DISubroutineType(types: !16640)
!16640 = !{!5, !5, !180, !16641}
!16641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16642, size: 64)
!16642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !16643)
!16643 = !{!16644, !16645, !16646, !16647, !16648, !16649, !16650, !16651, !16652, !16653, !16654, !16655, !16660, !16661, !16662}
!16644 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16642, file: !471, line: 48, baseType: !460, size: 64)
!16645 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16642, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!16646 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16642, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!16647 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16642, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16642, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!16649 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16642, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!16650 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16642, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!16651 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16642, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!16652 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16642, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!16653 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16642, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!16654 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16642, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!16655 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16642, file: !471, line: 91, baseType: !16656, size: 128, offset: 576)
!16656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !16657)
!16657 = !{!16658, !16659}
!16658 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16656, file: !373, line: 122, baseType: !376, size: 64)
!16659 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16656, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!16660 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16642, file: !471, line: 92, baseType: !16656, size: 128, offset: 704)
!16661 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16642, file: !471, line: 93, baseType: !16656, size: 128, offset: 832)
!16662 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16642, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!16663 = !DILocalVariable(name: "fd", arg: 1, scope: !16637, file: !16638, line: 102, type: !5)
!16664 = !DILocation(line: 102, column: 13, scope: !16637)
!16665 = !DILocalVariable(name: "name", arg: 2, scope: !16637, file: !16638, line: 102, type: !180)
!16666 = !DILocation(line: 102, column: 29, scope: !16637)
!16667 = !DILocalVariable(name: "st", arg: 3, scope: !16637, file: !16638, line: 102, type: !16641)
!16668 = !DILocation(line: 102, column: 48, scope: !16637)
!16669 = !DILocation(line: 104, column: 19, scope: !16637)
!16670 = !DILocation(line: 104, column: 23, scope: !16637)
!16671 = !DILocation(line: 104, column: 29, scope: !16637)
!16672 = !DILocation(line: 104, column: 10, scope: !16637)
!16673 = !DILocation(line: 104, column: 3, scope: !16637)
!16674 = distinct !DISubprogram(name: "lstatat", scope: !16638, file: !16638, line: 108, type: !16639, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1432, retainedNodes: !295)
!16675 = !DILocalVariable(name: "fd", arg: 1, scope: !16674, file: !16638, line: 108, type: !5)
!16676 = !DILocation(line: 108, column: 14, scope: !16674)
!16677 = !DILocalVariable(name: "name", arg: 2, scope: !16674, file: !16638, line: 108, type: !180)
!16678 = !DILocation(line: 108, column: 30, scope: !16674)
!16679 = !DILocalVariable(name: "st", arg: 3, scope: !16674, file: !16638, line: 108, type: !16641)
!16680 = !DILocation(line: 108, column: 49, scope: !16674)
!16681 = !DILocation(line: 110, column: 19, scope: !16674)
!16682 = !DILocation(line: 110, column: 23, scope: !16674)
!16683 = !DILocation(line: 110, column: 29, scope: !16674)
!16684 = !DILocation(line: 110, column: 10, scope: !16674)
!16685 = !DILocation(line: 110, column: 3, scope: !16674)
!16686 = distinct !DISubprogram(name: "try_tempname_len", scope: !1033, file: !1033, line: 188, type: !16687, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16687 = !DISubroutineType(types: !16688)
!16688 = !{!5, !7, !5, !47, !1025, !52}
!16689 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16686, file: !1033, line: 188, type: !7)
!16690 = !DILocation(line: 188, column: 25, scope: !16686)
!16691 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16686, file: !1033, line: 188, type: !5)
!16692 = !DILocation(line: 188, column: 35, scope: !16686)
!16693 = !DILocalVariable(name: "args", arg: 3, scope: !16686, file: !1033, line: 188, type: !47)
!16694 = !DILocation(line: 188, column: 52, scope: !16686)
!16695 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16686, file: !1033, line: 189, type: !1025)
!16696 = !DILocation(line: 189, column: 25, scope: !16686)
!16697 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16686, file: !1033, line: 189, type: !52)
!16698 = !DILocation(line: 189, column: 59, scope: !16686)
!16699 = !DILocalVariable(name: "len", scope: !16686, file: !1033, line: 191, type: !52)
!16700 = !DILocation(line: 191, column: 10, scope: !16686)
!16701 = !DILocalVariable(name: "XXXXXX", scope: !16686, file: !1033, line: 192, type: !7)
!16702 = !DILocation(line: 192, column: 9, scope: !16686)
!16703 = !DILocalVariable(name: "count", scope: !16686, file: !1033, line: 193, type: !67)
!16704 = !DILocation(line: 193, column: 16, scope: !16686)
!16705 = !DILocalVariable(name: "fd", scope: !16686, file: !1033, line: 194, type: !5)
!16706 = !DILocation(line: 194, column: 7, scope: !16686)
!16707 = !DILocalVariable(name: "save_errno", scope: !16686, file: !1033, line: 195, type: !5)
!16708 = !DILocation(line: 195, column: 7, scope: !16686)
!16709 = !DILocation(line: 195, column: 20, scope: !16686)
!16710 = !DILocalVariable(name: "rand_src", scope: !16686, file: !1033, line: 196, type: !1021)
!16711 = !DILocation(line: 196, column: 26, scope: !16686)
!16712 = !DILocalVariable(name: "attempts", scope: !16686, file: !1033, line: 212, type: !67)
!16713 = !DILocation(line: 212, column: 16, scope: !16686)
!16714 = !DILocation(line: 215, column: 17, scope: !16686)
!16715 = !DILocation(line: 215, column: 9, scope: !16686)
!16716 = !DILocation(line: 215, column: 7, scope: !16686)
!16717 = !DILocation(line: 216, column: 7, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16686, file: !1033, line: 216, column: 7)
!16719 = !DILocation(line: 216, column: 13, scope: !16718)
!16720 = !DILocation(line: 216, column: 28, scope: !16718)
!16721 = !DILocation(line: 216, column: 26, scope: !16718)
!16722 = !DILocation(line: 216, column: 11, scope: !16718)
!16723 = !DILocation(line: 217, column: 7, scope: !16718)
!16724 = !DILocation(line: 217, column: 29, scope: !16718)
!16725 = !DILocation(line: 217, column: 34, scope: !16718)
!16726 = !DILocation(line: 217, column: 40, scope: !16718)
!16727 = !DILocation(line: 217, column: 38, scope: !16718)
!16728 = !DILocation(line: 217, column: 55, scope: !16718)
!16729 = !DILocation(line: 217, column: 53, scope: !16718)
!16730 = !DILocation(line: 218, column: 28, scope: !16718)
!16731 = !DILocation(line: 217, column: 12, scope: !16718)
!16732 = !DILocation(line: 216, column: 7, scope: !16686)
!16733 = !DILocation(line: 220, column: 7, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16718, file: !1033, line: 219, column: 5)
!16735 = !DILocation(line: 221, column: 7, scope: !16734)
!16736 = !DILocation(line: 225, column: 13, scope: !16686)
!16737 = !DILocation(line: 225, column: 18, scope: !16686)
!16738 = !DILocation(line: 225, column: 24, scope: !16686)
!16739 = !DILocation(line: 225, column: 22, scope: !16686)
!16740 = !DILocation(line: 225, column: 39, scope: !16686)
!16741 = !DILocation(line: 225, column: 37, scope: !16686)
!16742 = !DILocation(line: 225, column: 10, scope: !16686)
!16743 = !DILocation(line: 228, column: 37, scope: !16686)
!16744 = !DILocation(line: 228, column: 14, scope: !16686)
!16745 = !DILocation(line: 228, column: 12, scope: !16686)
!16746 = !DILocation(line: 229, column: 9, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16686, file: !1033, line: 229, column: 7)
!16748 = !DILocation(line: 229, column: 7, scope: !16686)
!16749 = !DILocation(line: 230, column: 5, scope: !16747)
!16750 = !DILocation(line: 232, column: 14, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16686, file: !1033, line: 232, column: 3)
!16752 = !DILocation(line: 232, column: 8, scope: !16751)
!16753 = !DILocation(line: 232, column: 19, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16751, file: !1033, line: 232, column: 3)
!16755 = !DILocation(line: 232, column: 27, scope: !16754)
!16756 = !DILocation(line: 232, column: 25, scope: !16754)
!16757 = !DILocation(line: 232, column: 3, scope: !16751)
!16758 = !DILocalVariable(name: "i", scope: !16759, file: !1033, line: 234, type: !52)
!16759 = distinct !DILexicalBlock(scope: !16754, file: !1033, line: 233, column: 5)
!16760 = !DILocation(line: 234, column: 14, scope: !16759)
!16761 = !DILocation(line: 236, column: 14, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16759, file: !1033, line: 236, column: 7)
!16763 = !DILocation(line: 236, column: 12, scope: !16762)
!16764 = !DILocation(line: 236, column: 19, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16762, file: !1033, line: 236, column: 7)
!16766 = !DILocation(line: 236, column: 23, scope: !16765)
!16767 = !DILocation(line: 236, column: 21, scope: !16765)
!16768 = !DILocation(line: 236, column: 7, scope: !16762)
!16769 = !DILocation(line: 237, column: 45, scope: !16765)
!16770 = !DILocation(line: 237, column: 29, scope: !16765)
!16771 = !DILocation(line: 237, column: 21, scope: !16765)
!16772 = !DILocation(line: 237, column: 9, scope: !16765)
!16773 = !DILocation(line: 237, column: 16, scope: !16765)
!16774 = !DILocation(line: 237, column: 19, scope: !16765)
!16775 = !DILocation(line: 236, column: 38, scope: !16765)
!16776 = !DILocation(line: 236, column: 7, scope: !16765)
!16777 = distinct !{!16777, !16768, !16778}
!16778 = !DILocation(line: 237, column: 74, scope: !16762)
!16779 = !DILocation(line: 239, column: 12, scope: !16759)
!16780 = !DILocation(line: 239, column: 21, scope: !16759)
!16781 = !DILocation(line: 239, column: 27, scope: !16759)
!16782 = !DILocation(line: 239, column: 10, scope: !16759)
!16783 = !DILocation(line: 240, column: 11, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16759, file: !1033, line: 240, column: 11)
!16785 = !DILocation(line: 240, column: 14, scope: !16784)
!16786 = !DILocation(line: 240, column: 11, scope: !16759)
!16787 = !DILocation(line: 242, column: 11, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16784, file: !1033, line: 241, column: 9)
!16789 = !DILocation(line: 243, column: 11, scope: !16788)
!16790 = !DILocation(line: 245, column: 16, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16784, file: !1033, line: 245, column: 16)
!16792 = !DILocation(line: 245, column: 22, scope: !16791)
!16793 = !DILocation(line: 245, column: 16, scope: !16784)
!16794 = !DILocation(line: 247, column: 14, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16791, file: !1033, line: 246, column: 9)
!16796 = !DILocation(line: 248, column: 11, scope: !16795)
!16797 = !DILocation(line: 250, column: 5, scope: !16759)
!16798 = !DILocation(line: 232, column: 37, scope: !16754)
!16799 = !DILocation(line: 232, column: 3, scope: !16754)
!16800 = distinct !{!16800, !16757, !16801}
!16801 = !DILocation(line: 250, column: 5, scope: !16751)
!16802 = !DILocation(line: 252, column: 21, scope: !16686)
!16803 = !DILocation(line: 252, column: 3, scope: !16686)
!16804 = !DILocation(line: 255, column: 3, scope: !16686)
!16805 = !DILocation(line: 256, column: 3, scope: !16686)
!16806 = !DILabel(scope: !16686, name: "done", file: !1033, line: 258)
!16807 = !DILocation(line: 258, column: 2, scope: !16686)
!16808 = !DILocalVariable(name: "saved_errno", scope: !16809, file: !1033, line: 260, type: !5)
!16809 = distinct !DILexicalBlock(scope: !16686, file: !1033, line: 259, column: 3)
!16810 = !DILocation(line: 260, column: 9, scope: !16809)
!16811 = !DILocation(line: 260, column: 23, scope: !16809)
!16812 = !DILocation(line: 261, column: 23, scope: !16809)
!16813 = !DILocation(line: 261, column: 5, scope: !16809)
!16814 = !DILocation(line: 262, column: 5, scope: !16809)
!16815 = !DILocation(line: 264, column: 10, scope: !16686)
!16816 = !DILocation(line: 264, column: 3, scope: !16686)
!16817 = !DILocation(line: 265, column: 1, scope: !16686)
!16818 = distinct !DISubprogram(name: "check_x_suffix", scope: !1033, file: !1033, line: 178, type: !16819, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16819 = !DISubroutineType(types: !16820)
!16820 = !{!139, !180, !52}
!16821 = !DILocalVariable(name: "s", arg: 1, scope: !16818, file: !1033, line: 178, type: !180)
!16822 = !DILocation(line: 178, column: 29, scope: !16818)
!16823 = !DILocalVariable(name: "len", arg: 2, scope: !16818, file: !1033, line: 178, type: !52)
!16824 = !DILocation(line: 178, column: 39, scope: !16818)
!16825 = !DILocation(line: 180, column: 10, scope: !16818)
!16826 = !DILocation(line: 180, column: 25, scope: !16818)
!16827 = !DILocation(line: 180, column: 17, scope: !16818)
!16828 = !DILocation(line: 180, column: 14, scope: !16818)
!16829 = !DILocation(line: 180, column: 3, scope: !16818)
!16830 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1033, file: !1033, line: 307, type: !16831, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16831 = !DISubroutineType(types: !16832)
!16832 = !{!5, !7, !5, !5, !5, !52}
!16833 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16830, file: !1033, line: 307, type: !7)
!16834 = !DILocation(line: 307, column: 25, scope: !16830)
!16835 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16830, file: !1033, line: 307, type: !5)
!16836 = !DILocation(line: 307, column: 35, scope: !16830)
!16837 = !DILocalVariable(name: "flags", arg: 3, scope: !16830, file: !1033, line: 307, type: !5)
!16838 = !DILocation(line: 307, column: 50, scope: !16830)
!16839 = !DILocalVariable(name: "kind", arg: 4, scope: !16830, file: !1033, line: 307, type: !5)
!16840 = !DILocation(line: 307, column: 61, scope: !16830)
!16841 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16830, file: !1033, line: 308, type: !52)
!16842 = !DILocation(line: 308, column: 26, scope: !16830)
!16843 = !DILocalVariable(name: "tryfunc", scope: !16830, file: !1033, line: 310, type: !1025)
!16844 = !DILocation(line: 310, column: 9, scope: !16830)
!16845 = !DILocation(line: 312, column: 11, scope: !16830)
!16846 = !DILocation(line: 312, column: 3, scope: !16830)
!16847 = !DILocation(line: 315, column: 15, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16830, file: !1033, line: 313, column: 5)
!16849 = !DILocation(line: 316, column: 7, scope: !16848)
!16850 = !DILocation(line: 319, column: 15, scope: !16848)
!16851 = !DILocation(line: 320, column: 7, scope: !16848)
!16852 = !DILocation(line: 323, column: 15, scope: !16848)
!16853 = !DILocation(line: 324, column: 7, scope: !16848)
!16854 = !DILocation(line: 327, column: 7, scope: !16848)
!16855 = !DILocation(line: 330, column: 28, scope: !16830)
!16856 = !DILocation(line: 330, column: 34, scope: !16830)
!16857 = !DILocation(line: 330, column: 45, scope: !16830)
!16858 = !DILocation(line: 330, column: 53, scope: !16830)
!16859 = !DILocation(line: 330, column: 62, scope: !16830)
!16860 = !DILocation(line: 330, column: 10, scope: !16830)
!16861 = !DILocation(line: 330, column: 3, scope: !16830)
!16862 = distinct !DISubprogram(name: "try_file", scope: !1033, file: !1033, line: 268, type: !1026, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16863 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16862, file: !1033, line: 268, type: !7)
!16864 = !DILocation(line: 268, column: 17, scope: !16862)
!16865 = !DILocalVariable(name: "flags", arg: 2, scope: !16862, file: !1033, line: 268, type: !47)
!16866 = !DILocation(line: 268, column: 29, scope: !16862)
!16867 = !DILocalVariable(name: "openflags", scope: !16862, file: !1033, line: 270, type: !224)
!16868 = !DILocation(line: 270, column: 8, scope: !16862)
!16869 = !DILocation(line: 270, column: 20, scope: !16862)
!16870 = !DILocation(line: 271, column: 18, scope: !16862)
!16871 = !DILocation(line: 272, column: 20, scope: !16862)
!16872 = !DILocation(line: 272, column: 19, scope: !16862)
!16873 = !DILocation(line: 272, column: 30, scope: !16862)
!16874 = !DILocation(line: 273, column: 18, scope: !16862)
!16875 = !DILocation(line: 273, column: 27, scope: !16862)
!16876 = !DILocation(line: 273, column: 37, scope: !16862)
!16877 = !DILocation(line: 271, column: 10, scope: !16862)
!16878 = !DILocation(line: 271, column: 3, scope: !16862)
!16879 = distinct !DISubprogram(name: "try_dir", scope: !1033, file: !1033, line: 277, type: !1026, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16880 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16879, file: !1033, line: 277, type: !7)
!16881 = !DILocation(line: 277, column: 16, scope: !16879)
!16882 = !DILocalVariable(name: "flags", arg: 2, scope: !16879, file: !1033, line: 277, type: !47)
!16883 = !DILocation(line: 277, column: 28, scope: !16879)
!16884 = !DILocation(line: 279, column: 19, scope: !16879)
!16885 = !DILocation(line: 279, column: 10, scope: !16879)
!16886 = !DILocation(line: 279, column: 3, scope: !16879)
!16887 = distinct !DISubprogram(name: "try_nocreate", scope: !1033, file: !1033, line: 283, type: !1026, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !16889)
!16889 = !{!16890, !16891, !16892, !16893, !16894, !16895, !16896, !16897, !16898, !16899, !16900, !16901, !16906, !16907, !16908}
!16890 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16888, file: !471, line: 48, baseType: !460, size: 64)
!16891 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16888, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!16892 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16888, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!16893 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16888, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!16894 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16888, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!16895 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16888, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!16896 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16888, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!16897 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16888, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!16898 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16888, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!16899 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16888, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!16900 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16888, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!16901 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16888, file: !471, line: 91, baseType: !16902, size: 128, offset: 576)
!16902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !16903)
!16903 = !{!16904, !16905}
!16904 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16902, file: !373, line: 122, baseType: !376, size: 64)
!16905 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16902, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!16906 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16888, file: !471, line: 92, baseType: !16902, size: 128, offset: 704)
!16907 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16888, file: !471, line: 93, baseType: !16902, size: 128, offset: 832)
!16908 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16888, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!16909 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16887, file: !1033, line: 283, type: !7)
!16910 = !DILocation(line: 283, column: 21, scope: !16887)
!16911 = !DILocalVariable(name: "flags", arg: 2, scope: !16887, file: !1033, line: 283, type: !47)
!16912 = !DILocation(line: 283, column: 33, scope: !16887)
!16913 = !DILocalVariable(name: "st", scope: !16887, file: !1033, line: 285, type: !16888)
!16914 = !DILocation(line: 285, column: 17, scope: !16887)
!16915 = !DILocation(line: 287, column: 7, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16887, file: !1033, line: 287, column: 7)
!16917 = !DILocation(line: 287, column: 41, scope: !16916)
!16918 = !DILocation(line: 287, column: 46, scope: !16916)
!16919 = !DILocation(line: 287, column: 49, scope: !16916)
!16920 = !DILocation(line: 287, column: 55, scope: !16916)
!16921 = !DILocation(line: 287, column: 7, scope: !16887)
!16922 = !DILocation(line: 288, column: 5, scope: !16916)
!16923 = !DILocation(line: 289, column: 10, scope: !16887)
!16924 = !DILocation(line: 289, column: 16, scope: !16887)
!16925 = !DILocation(line: 289, column: 3, scope: !16887)
!16926 = distinct !DISubprogram(name: "gen_tempname", scope: !1033, file: !1033, line: 334, type: !16927, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16927 = !DISubroutineType(types: !16928)
!16928 = !{!5, !7, !5, !5, !5}
!16929 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16926, file: !1033, line: 334, type: !7)
!16930 = !DILocation(line: 334, column: 23, scope: !16926)
!16931 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16926, file: !1033, line: 334, type: !5)
!16932 = !DILocation(line: 334, column: 33, scope: !16926)
!16933 = !DILocalVariable(name: "flags", arg: 3, scope: !16926, file: !1033, line: 334, type: !5)
!16934 = !DILocation(line: 334, column: 48, scope: !16926)
!16935 = !DILocalVariable(name: "kind", arg: 4, scope: !16926, file: !1033, line: 334, type: !5)
!16936 = !DILocation(line: 334, column: 59, scope: !16926)
!16937 = !DILocation(line: 336, column: 28, scope: !16926)
!16938 = !DILocation(line: 336, column: 34, scope: !16926)
!16939 = !DILocation(line: 336, column: 45, scope: !16926)
!16940 = !DILocation(line: 336, column: 52, scope: !16926)
!16941 = !DILocation(line: 336, column: 10, scope: !16926)
!16942 = !DILocation(line: 336, column: 3, scope: !16926)
!16943 = distinct !DISubprogram(name: "try_tempname", scope: !1033, file: !1033, line: 340, type: !16944, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1018, retainedNodes: !295)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!5, !7, !5, !47, !1025}
!16946 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16943, file: !1033, line: 340, type: !7)
!16947 = !DILocation(line: 340, column: 23, scope: !16943)
!16948 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16943, file: !1033, line: 340, type: !5)
!16949 = !DILocation(line: 340, column: 33, scope: !16943)
!16950 = !DILocalVariable(name: "args", arg: 3, scope: !16943, file: !1033, line: 340, type: !47)
!16951 = !DILocation(line: 340, column: 50, scope: !16943)
!16952 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16943, file: !1033, line: 341, type: !1025)
!16953 = !DILocation(line: 341, column: 23, scope: !16943)
!16954 = !DILocation(line: 343, column: 28, scope: !16943)
!16955 = !DILocation(line: 343, column: 34, scope: !16943)
!16956 = !DILocation(line: 343, column: 45, scope: !16943)
!16957 = !DILocation(line: 343, column: 51, scope: !16943)
!16958 = !DILocation(line: 343, column: 10, scope: !16943)
!16959 = !DILocation(line: 343, column: 3, scope: !16943)
!16960 = distinct !DISubprogram(name: "fd_safer", scope: !16961, file: !16961, line: 37, type: !15414, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1434, retainedNodes: !295)
!16961 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!16962 = !DILocalVariable(name: "fd", arg: 1, scope: !16960, file: !16961, line: 37, type: !5)
!16963 = !DILocation(line: 37, column: 15, scope: !16960)
!16964 = !DILocation(line: 39, column: 23, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16960, file: !16961, line: 39, column: 7)
!16966 = !DILocation(line: 39, column: 20, scope: !16965)
!16967 = !DILocation(line: 39, column: 26, scope: !16965)
!16968 = !DILocation(line: 39, column: 29, scope: !16965)
!16969 = !DILocation(line: 39, column: 32, scope: !16965)
!16970 = !DILocation(line: 39, column: 7, scope: !16960)
!16971 = !DILocalVariable(name: "f", scope: !16972, file: !16961, line: 41, type: !5)
!16972 = distinct !DILexicalBlock(scope: !16965, file: !16961, line: 40, column: 5)
!16973 = !DILocation(line: 41, column: 11, scope: !16972)
!16974 = !DILocation(line: 41, column: 26, scope: !16972)
!16975 = !DILocation(line: 41, column: 15, scope: !16972)
!16976 = !DILocalVariable(name: "e", scope: !16972, file: !16961, line: 42, type: !5)
!16977 = !DILocation(line: 42, column: 11, scope: !16972)
!16978 = !DILocation(line: 42, column: 15, scope: !16972)
!16979 = !DILocation(line: 43, column: 14, scope: !16972)
!16980 = !DILocation(line: 43, column: 7, scope: !16972)
!16981 = !DILocation(line: 44, column: 15, scope: !16972)
!16982 = !DILocation(line: 44, column: 7, scope: !16972)
!16983 = !DILocation(line: 44, column: 13, scope: !16972)
!16984 = !DILocation(line: 45, column: 12, scope: !16972)
!16985 = !DILocation(line: 45, column: 10, scope: !16972)
!16986 = !DILocation(line: 46, column: 5, scope: !16972)
!16987 = !DILocation(line: 48, column: 10, scope: !16960)
!16988 = !DILocation(line: 48, column: 3, scope: !16960)
!16989 = distinct !DISubprogram(name: "utimecmp", scope: !1037, file: !1037, line: 123, type: !16990, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1063, retainedNodes: !295)
!16990 = !DISubroutineType(types: !16991)
!16991 = !{!5, !180, !1040, !1040, !5}
!16992 = !DILocalVariable(name: "dst_name", arg: 1, scope: !16989, file: !1037, line: 123, type: !180)
!16993 = !DILocation(line: 123, column: 23, scope: !16989)
!16994 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !16989, file: !1037, line: 124, type: !1040)
!16995 = !DILocation(line: 124, column: 30, scope: !16989)
!16996 = !DILocalVariable(name: "src_stat", arg: 3, scope: !16989, file: !1037, line: 125, type: !1040)
!16997 = !DILocation(line: 125, column: 30, scope: !16989)
!16998 = !DILocalVariable(name: "options", arg: 4, scope: !16989, file: !1037, line: 126, type: !5)
!16999 = !DILocation(line: 126, column: 15, scope: !16989)
!17000 = !DILocation(line: 128, column: 32, scope: !16989)
!17001 = !DILocation(line: 128, column: 42, scope: !16989)
!17002 = !DILocation(line: 128, column: 52, scope: !16989)
!17003 = !DILocation(line: 128, column: 62, scope: !16989)
!17004 = !DILocation(line: 128, column: 10, scope: !16989)
!17005 = !DILocation(line: 128, column: 3, scope: !16989)
!17006 = !DILocalVariable(name: "dfd", arg: 1, scope: !1036, file: !1037, line: 132, type: !5)
!17007 = !DILocation(line: 132, column: 17, scope: !1036)
!17008 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1036, file: !1037, line: 132, type: !180)
!17009 = !DILocation(line: 132, column: 34, scope: !1036)
!17010 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1036, file: !1037, line: 133, type: !1040)
!17011 = !DILocation(line: 133, column: 32, scope: !1036)
!17012 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1036, file: !1037, line: 134, type: !1040)
!17013 = !DILocation(line: 134, column: 32, scope: !1036)
!17014 = !DILocalVariable(name: "options", arg: 5, scope: !1036, file: !1037, line: 135, type: !5)
!17015 = !DILocation(line: 135, column: 17, scope: !1036)
!17016 = !DILocalVariable(name: "dst_s", scope: !1036, file: !1037, line: 153, type: !1066)
!17017 = !DILocation(line: 153, column: 10, scope: !1036)
!17018 = !DILocation(line: 153, column: 18, scope: !1036)
!17019 = !DILocation(line: 153, column: 28, scope: !1036)
!17020 = !DILocalVariable(name: "src_s", scope: !1036, file: !1037, line: 154, type: !1066)
!17021 = !DILocation(line: 154, column: 10, scope: !1036)
!17022 = !DILocation(line: 154, column: 18, scope: !1036)
!17023 = !DILocation(line: 154, column: 28, scope: !1036)
!17024 = !DILocalVariable(name: "dst_ns", scope: !1036, file: !1037, line: 155, type: !5)
!17025 = !DILocation(line: 155, column: 7, scope: !1036)
!17026 = !DILocation(line: 155, column: 35, scope: !1036)
!17027 = !DILocation(line: 155, column: 16, scope: !1036)
!17028 = !DILocalVariable(name: "src_ns", scope: !1036, file: !1037, line: 156, type: !5)
!17029 = !DILocation(line: 156, column: 7, scope: !1036)
!17030 = !DILocation(line: 156, column: 35, scope: !1036)
!17031 = !DILocation(line: 156, column: 16, scope: !1036)
!17032 = !DILocation(line: 158, column: 7, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !1036, file: !1037, line: 158, column: 7)
!17034 = !DILocation(line: 158, column: 15, scope: !17033)
!17035 = !DILocation(line: 158, column: 7, scope: !1036)
!17036 = !DILocalVariable(name: "dst_res", scope: !17037, file: !1037, line: 167, type: !1067)
!17037 = distinct !DILexicalBlock(scope: !17033, file: !1037, line: 159, column: 5)
!17038 = !DILocation(line: 167, column: 22, scope: !17037)
!17039 = !DILocalVariable(name: "tmp_dst_res", scope: !17037, file: !1037, line: 168, type: !1068)
!17040 = !DILocation(line: 168, column: 21, scope: !17037)
!17041 = !DILocalVariable(name: "res", scope: !17037, file: !1037, line: 171, type: !5)
!17042 = !DILocation(line: 171, column: 11, scope: !17037)
!17043 = !DILocation(line: 176, column: 11, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 176, column: 11)
!17045 = !DILocation(line: 176, column: 20, scope: !17044)
!17046 = !DILocation(line: 176, column: 17, scope: !17044)
!17047 = !DILocation(line: 176, column: 26, scope: !17044)
!17048 = !DILocation(line: 176, column: 29, scope: !17044)
!17049 = !DILocation(line: 176, column: 39, scope: !17044)
!17050 = !DILocation(line: 176, column: 36, scope: !17044)
!17051 = !DILocation(line: 176, column: 11, scope: !17037)
!17052 = !DILocation(line: 177, column: 9, scope: !17044)
!17053 = !DILocation(line: 178, column: 11, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 178, column: 11)
!17055 = !DILocation(line: 178, column: 20, scope: !17054)
!17056 = !DILocation(line: 178, column: 26, scope: !17054)
!17057 = !DILocation(line: 178, column: 17, scope: !17054)
!17058 = !DILocation(line: 178, column: 11, scope: !17037)
!17059 = !DILocation(line: 179, column: 9, scope: !17054)
!17060 = !DILocation(line: 180, column: 11, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 180, column: 11)
!17062 = !DILocation(line: 180, column: 20, scope: !17061)
!17063 = !DILocation(line: 180, column: 26, scope: !17061)
!17064 = !DILocation(line: 180, column: 17, scope: !17061)
!17065 = !DILocation(line: 180, column: 11, scope: !17037)
!17066 = !DILocation(line: 181, column: 9, scope: !17061)
!17067 = !DILocation(line: 185, column: 13, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 185, column: 11)
!17069 = !DILocation(line: 185, column: 11, scope: !17037)
!17070 = !DILocation(line: 186, column: 14, scope: !17068)
!17071 = !DILocation(line: 186, column: 12, scope: !17068)
!17072 = !DILocation(line: 186, column: 9, scope: !17068)
!17073 = !DILocation(line: 187, column: 11, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 187, column: 11)
!17075 = !DILocation(line: 187, column: 11, scope: !17037)
!17076 = !DILocation(line: 189, column: 17, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17078, file: !1037, line: 189, column: 15)
!17078 = distinct !DILexicalBlock(scope: !17074, file: !1037, line: 188, column: 9)
!17079 = !DILocation(line: 189, column: 15, scope: !17078)
!17080 = !DILocation(line: 191, column: 29, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17077, file: !1037, line: 190, column: 13)
!17082 = !DILocation(line: 191, column: 27, scope: !17081)
!17083 = !DILocation(line: 192, column: 20, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17081, file: !1037, line: 192, column: 19)
!17085 = !DILocation(line: 192, column: 19, scope: !17081)
!17086 = !DILocation(line: 193, column: 17, scope: !17084)
!17087 = !DILocation(line: 194, column: 15, scope: !17081)
!17088 = !DILocation(line: 194, column: 28, scope: !17081)
!17089 = !DILocation(line: 194, column: 39, scope: !17081)
!17090 = !DILocation(line: 195, column: 15, scope: !17081)
!17091 = !DILocation(line: 195, column: 28, scope: !17081)
!17092 = !DILocation(line: 195, column: 34, scope: !17081)
!17093 = !DILocation(line: 196, column: 13, scope: !17081)
!17094 = !DILocation(line: 197, column: 30, scope: !17078)
!17095 = !DILocation(line: 197, column: 40, scope: !17078)
!17096 = !DILocation(line: 197, column: 11, scope: !17078)
!17097 = !DILocation(line: 197, column: 24, scope: !17078)
!17098 = !DILocation(line: 197, column: 28, scope: !17078)
!17099 = !DILocation(line: 198, column: 34, scope: !17078)
!17100 = !DILocation(line: 198, column: 38, scope: !17078)
!17101 = !DILocation(line: 198, column: 21, scope: !17078)
!17102 = !DILocation(line: 198, column: 19, scope: !17078)
!17103 = !DILocation(line: 199, column: 17, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17078, file: !1037, line: 199, column: 15)
!17105 = !DILocation(line: 199, column: 15, scope: !17078)
!17106 = !DILocation(line: 200, column: 13, scope: !17104)
!17107 = !DILocation(line: 202, column: 15, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17078, file: !1037, line: 202, column: 15)
!17109 = !DILocation(line: 202, column: 26, scope: !17108)
!17110 = !DILocation(line: 202, column: 23, scope: !17108)
!17111 = !DILocation(line: 202, column: 15, scope: !17078)
!17112 = !DILocation(line: 206, column: 27, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17108, file: !1037, line: 203, column: 13)
!17114 = !DILocation(line: 207, column: 13, scope: !17113)
!17115 = !DILocation(line: 208, column: 9, scope: !17078)
!17116 = !DILocation(line: 210, column: 9, scope: !17074)
!17117 = !DILabel(scope: !17118, name: "low_memory", file: !1037, line: 211)
!17118 = distinct !DILexicalBlock(scope: !17074, file: !1037, line: 210, column: 9)
!17119 = !DILocation(line: 211, column: 9, scope: !17118)
!17120 = !DILocation(line: 212, column: 15, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17118, file: !1037, line: 212, column: 15)
!17122 = !DILocation(line: 212, column: 15, scope: !17118)
!17123 = !DILocation(line: 214, column: 33, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17121, file: !1037, line: 213, column: 13)
!17125 = !DILocation(line: 214, column: 43, scope: !17124)
!17126 = !DILocation(line: 214, column: 27, scope: !17124)
!17127 = !DILocation(line: 214, column: 31, scope: !17124)
!17128 = !DILocation(line: 215, column: 38, scope: !17124)
!17129 = !DILocation(line: 215, column: 42, scope: !17124)
!17130 = !DILocation(line: 215, column: 25, scope: !17124)
!17131 = !DILocation(line: 215, column: 23, scope: !17124)
!17132 = !DILocation(line: 216, column: 13, scope: !17124)
!17133 = !DILocation(line: 217, column: 16, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17118, file: !1037, line: 217, column: 15)
!17135 = !DILocation(line: 217, column: 15, scope: !17118)
!17136 = !DILocation(line: 219, column: 23, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17134, file: !1037, line: 218, column: 13)
!17138 = !DILocation(line: 220, column: 15, scope: !17137)
!17139 = !DILocation(line: 220, column: 24, scope: !17137)
!17140 = !DILocation(line: 220, column: 35, scope: !17137)
!17141 = !DILocation(line: 221, column: 15, scope: !17137)
!17142 = !DILocation(line: 221, column: 24, scope: !17137)
!17143 = !DILocation(line: 221, column: 30, scope: !17137)
!17144 = !DILocation(line: 222, column: 13, scope: !17137)
!17145 = !DILocation(line: 225, column: 13, scope: !17037)
!17146 = !DILocation(line: 225, column: 22, scope: !17037)
!17147 = !DILocation(line: 225, column: 11, scope: !17037)
!17148 = !DILocation(line: 257, column: 13, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17037, file: !1037, line: 257, column: 11)
!17150 = !DILocation(line: 257, column: 22, scope: !17149)
!17151 = !DILocation(line: 257, column: 11, scope: !17037)
!17152 = !DILocalVariable(name: "dst_a_s", scope: !17153, file: !1037, line: 262, type: !1066)
!17153 = distinct !DILexicalBlock(scope: !17149, file: !1037, line: 258, column: 9)
!17154 = !DILocation(line: 262, column: 18, scope: !17153)
!17155 = !DILocation(line: 262, column: 28, scope: !17153)
!17156 = !DILocation(line: 262, column: 38, scope: !17153)
!17157 = !DILocalVariable(name: "dst_c_s", scope: !17153, file: !1037, line: 263, type: !1066)
!17158 = !DILocation(line: 263, column: 18, scope: !17153)
!17159 = !DILocation(line: 263, column: 28, scope: !17153)
!17160 = !DILocation(line: 263, column: 38, scope: !17153)
!17161 = !DILocalVariable(name: "dst_m_s", scope: !17153, file: !1037, line: 264, type: !1066)
!17162 = !DILocation(line: 264, column: 18, scope: !17153)
!17163 = !DILocation(line: 264, column: 28, scope: !17153)
!17164 = !DILocalVariable(name: "dst_a_ns", scope: !17153, file: !1037, line: 265, type: !5)
!17165 = !DILocation(line: 265, column: 15, scope: !17153)
!17166 = !DILocation(line: 265, column: 45, scope: !17153)
!17167 = !DILocation(line: 265, column: 26, scope: !17153)
!17168 = !DILocalVariable(name: "dst_c_ns", scope: !17153, file: !1037, line: 266, type: !5)
!17169 = !DILocation(line: 266, column: 15, scope: !17153)
!17170 = !DILocation(line: 266, column: 45, scope: !17153)
!17171 = !DILocation(line: 266, column: 26, scope: !17153)
!17172 = !DILocalVariable(name: "dst_m_ns", scope: !17153, file: !1037, line: 267, type: !5)
!17173 = !DILocation(line: 267, column: 15, scope: !17153)
!17174 = !DILocation(line: 267, column: 26, scope: !17153)
!17175 = !DILocalVariable(name: "odd_second", scope: !17176, file: !1037, line: 276, type: !139)
!17176 = distinct !DILexicalBlock(scope: !17153, file: !1037, line: 275, column: 11)
!17177 = !DILocation(line: 276, column: 18, scope: !17176)
!17178 = !DILocation(line: 276, column: 32, scope: !17176)
!17179 = !DILocation(line: 276, column: 42, scope: !17176)
!17180 = !DILocation(line: 276, column: 40, scope: !17176)
!17181 = !DILocation(line: 276, column: 52, scope: !17176)
!17182 = !DILocation(line: 276, column: 50, scope: !17176)
!17183 = !DILocation(line: 276, column: 61, scope: !17176)
!17184 = !DILocation(line: 276, column: 31, scope: !17176)
!17185 = !DILocalVariable(name: "a", scope: !17186, file: !1037, line: 285, type: !5)
!17186 = distinct !DILexicalBlock(scope: !17187, file: !1037, line: 284, column: 15)
!17187 = distinct !DILexicalBlock(scope: !17176, file: !1037, line: 278, column: 17)
!17188 = !DILocation(line: 285, column: 21, scope: !17186)
!17189 = !DILocation(line: 285, column: 25, scope: !17186)
!17190 = !DILocalVariable(name: "c", scope: !17186, file: !1037, line: 286, type: !5)
!17191 = !DILocation(line: 286, column: 21, scope: !17186)
!17192 = !DILocation(line: 286, column: 25, scope: !17186)
!17193 = !DILocalVariable(name: "m", scope: !17186, file: !1037, line: 287, type: !5)
!17194 = !DILocation(line: 287, column: 21, scope: !17186)
!17195 = !DILocation(line: 287, column: 25, scope: !17186)
!17196 = !DILocalVariable(name: "SR10", scope: !17186, file: !1037, line: 291, type: !5)
!17197 = !DILocation(line: 291, column: 21, scope: !17186)
!17198 = !DILocation(line: 291, column: 54, scope: !17186)
!17199 = !DILocation(line: 293, column: 22, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17186, file: !1037, line: 293, column: 21)
!17201 = !DILocation(line: 293, column: 26, scope: !17200)
!17202 = !DILocation(line: 293, column: 24, scope: !17200)
!17203 = !DILocation(line: 293, column: 33, scope: !17200)
!17204 = !DILocation(line: 293, column: 37, scope: !17200)
!17205 = !DILocation(line: 293, column: 35, scope: !17200)
!17206 = !DILocation(line: 293, column: 31, scope: !17200)
!17207 = !DILocation(line: 293, column: 44, scope: !17200)
!17208 = !DILocation(line: 293, column: 48, scope: !17200)
!17209 = !DILocation(line: 293, column: 46, scope: !17200)
!17210 = !DILocation(line: 293, column: 42, scope: !17200)
!17211 = !DILocation(line: 293, column: 54, scope: !17200)
!17212 = !DILocation(line: 293, column: 21, scope: !17186)
!17213 = !DILocation(line: 294, column: 23, scope: !17200)
!17214 = !DILocation(line: 294, column: 19, scope: !17200)
!17215 = !DILocation(line: 296, column: 30, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17200, file: !1037, line: 296, column: 19)
!17217 = !DILocation(line: 296, column: 28, scope: !17216)
!17218 = !DILocation(line: 296, column: 41, scope: !17216)
!17219 = !DILocation(line: 296, column: 38, scope: !17216)
!17220 = !DILocation(line: 296, column: 52, scope: !17216)
!17221 = !DILocation(line: 296, column: 49, scope: !17216)
!17222 = !DILocation(line: 296, column: 63, scope: !17216)
!17223 = !DILocation(line: 296, column: 60, scope: !17216)
!17224 = !DILocation(line: 296, column: 24, scope: !17216)
!17225 = !DILocation(line: 297, column: 25, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17216, file: !1037, line: 296, column: 19)
!17227 = !DILocation(line: 297, column: 31, scope: !17226)
!17228 = !DILocation(line: 297, column: 40, scope: !17226)
!17229 = !DILocation(line: 297, column: 29, scope: !17226)
!17230 = !DILocation(line: 298, column: 25, scope: !17226)
!17231 = !DILocation(line: 298, column: 29, scope: !17226)
!17232 = !DILocation(line: 298, column: 31, scope: !17226)
!17233 = !DILocation(line: 298, column: 38, scope: !17226)
!17234 = !DILocation(line: 298, column: 40, scope: !17226)
!17235 = !DILocation(line: 298, column: 36, scope: !17226)
!17236 = !DILocation(line: 298, column: 47, scope: !17226)
!17237 = !DILocation(line: 298, column: 49, scope: !17226)
!17238 = !DILocation(line: 298, column: 45, scope: !17226)
!17239 = !DILocation(line: 298, column: 55, scope: !17226)
!17240 = !DILocation(line: 0, scope: !17226)
!17241 = !DILocation(line: 296, column: 19, scope: !17216)
!17242 = !DILocation(line: 300, column: 25, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !17226, file: !1037, line: 300, column: 25)
!17244 = !DILocation(line: 300, column: 29, scope: !17243)
!17245 = !DILocation(line: 300, column: 25, scope: !17226)
!17246 = !DILocation(line: 302, column: 31, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17248, file: !1037, line: 302, column: 29)
!17248 = distinct !DILexicalBlock(scope: !17243, file: !1037, line: 301, column: 23)
!17249 = !DILocation(line: 302, column: 29, scope: !17248)
!17250 = !DILocation(line: 303, column: 31, scope: !17247)
!17251 = !DILocation(line: 303, column: 27, scope: !17247)
!17252 = !DILocation(line: 304, column: 25, scope: !17248)
!17253 = !DILocation(line: 300, column: 32, scope: !17243)
!17254 = !DILocation(line: 299, column: 28, scope: !17226)
!17255 = !DILocation(line: 299, column: 37, scope: !17226)
!17256 = !DILocation(line: 299, column: 46, scope: !17226)
!17257 = !DILocation(line: 299, column: 55, scope: !17226)
!17258 = !DILocation(line: 296, column: 19, scope: !17226)
!17259 = distinct !{!17259, !17241, !17260}
!17260 = !DILocation(line: 305, column: 23, scope: !17216)
!17261 = !DILocation(line: 308, column: 35, scope: !17176)
!17262 = !DILocation(line: 308, column: 13, scope: !17176)
!17263 = !DILocation(line: 308, column: 22, scope: !17176)
!17264 = !DILocation(line: 308, column: 33, scope: !17176)
!17265 = !DILocation(line: 311, column: 36, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17153, file: !1037, line: 311, column: 15)
!17267 = !DILocation(line: 311, column: 34, scope: !17266)
!17268 = !DILocation(line: 311, column: 15, scope: !17153)
!17269 = !DILocalVariable(name: "timespec", scope: !17270, file: !1037, line: 313, type: !1073)
!17270 = distinct !DILexicalBlock(scope: !17266, file: !1037, line: 312, column: 13)
!17271 = !DILocation(line: 313, column: 31, scope: !17270)
!17272 = !DILocalVariable(name: "dst_status", scope: !17270, file: !1037, line: 314, type: !1042)
!17273 = !DILocation(line: 314, column: 27, scope: !17270)
!17274 = !DILocation(line: 318, column: 25, scope: !17270)
!17275 = !DILocation(line: 318, column: 32, scope: !17270)
!17276 = !DILocation(line: 318, column: 22, scope: !17270)
!17277 = !DILocalVariable(name: "s", scope: !17278, file: !1037, line: 324, type: !1066)
!17278 = distinct !DILexicalBlock(scope: !17270, file: !1037, line: 323, column: 15)
!17279 = !DILocation(line: 324, column: 24, scope: !17278)
!17280 = !DILocation(line: 324, column: 28, scope: !17278)
!17281 = !DILocation(line: 324, column: 39, scope: !17278)
!17282 = !DILocation(line: 324, column: 43, scope: !17278)
!17283 = !DILocation(line: 324, column: 36, scope: !17278)
!17284 = !DILocation(line: 324, column: 34, scope: !17278)
!17285 = !DILocation(line: 325, column: 21, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17278, file: !1037, line: 325, column: 21)
!17287 = !DILocation(line: 325, column: 29, scope: !17286)
!17288 = !DILocation(line: 325, column: 27, scope: !17286)
!17289 = !DILocation(line: 325, column: 35, scope: !17286)
!17290 = !DILocation(line: 325, column: 39, scope: !17286)
!17291 = !DILocation(line: 325, column: 48, scope: !17286)
!17292 = !DILocation(line: 325, column: 45, scope: !17286)
!17293 = !DILocation(line: 325, column: 54, scope: !17286)
!17294 = !DILocation(line: 325, column: 57, scope: !17286)
!17295 = !DILocation(line: 325, column: 67, scope: !17286)
!17296 = !DILocation(line: 325, column: 64, scope: !17286)
!17297 = !DILocation(line: 325, column: 21, scope: !17278)
!17298 = !DILocation(line: 326, column: 19, scope: !17286)
!17299 = !DILocation(line: 327, column: 21, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17278, file: !1037, line: 327, column: 21)
!17301 = !DILocation(line: 327, column: 29, scope: !17300)
!17302 = !DILocation(line: 327, column: 27, scope: !17300)
!17303 = !DILocation(line: 328, column: 21, scope: !17300)
!17304 = !DILocation(line: 328, column: 25, scope: !17300)
!17305 = !DILocation(line: 328, column: 34, scope: !17300)
!17306 = !DILocation(line: 328, column: 31, scope: !17300)
!17307 = !DILocation(line: 328, column: 36, scope: !17300)
!17308 = !DILocation(line: 328, column: 39, scope: !17300)
!17309 = !DILocation(line: 328, column: 48, scope: !17300)
!17310 = !DILocation(line: 328, column: 57, scope: !17300)
!17311 = !DILocation(line: 328, column: 66, scope: !17300)
!17312 = !DILocation(line: 328, column: 64, scope: !17300)
!17313 = !DILocation(line: 328, column: 55, scope: !17300)
!17314 = !DILocation(line: 328, column: 46, scope: !17300)
!17315 = !DILocation(line: 327, column: 21, scope: !17278)
!17316 = !DILocation(line: 329, column: 19, scope: !17300)
!17317 = !DILocation(line: 338, column: 36, scope: !17270)
!17318 = !DILocation(line: 338, column: 15, scope: !17270)
!17319 = !DILocation(line: 338, column: 27, scope: !17270)
!17320 = !DILocation(line: 338, column: 34, scope: !17270)
!17321 = !DILocation(line: 339, column: 37, scope: !17270)
!17322 = !DILocation(line: 339, column: 15, scope: !17270)
!17323 = !DILocation(line: 339, column: 27, scope: !17270)
!17324 = !DILocation(line: 339, column: 35, scope: !17270)
!17325 = !DILocation(line: 340, column: 36, scope: !17270)
!17326 = !DILocation(line: 340, column: 47, scope: !17270)
!17327 = !DILocation(line: 340, column: 51, scope: !17270)
!17328 = !DILocation(line: 340, column: 46, scope: !17270)
!17329 = !DILocation(line: 340, column: 44, scope: !17270)
!17330 = !DILocation(line: 340, column: 15, scope: !17270)
!17331 = !DILocation(line: 340, column: 27, scope: !17270)
!17332 = !DILocation(line: 340, column: 34, scope: !17270)
!17333 = !DILocation(line: 341, column: 37, scope: !17270)
!17334 = !DILocation(line: 341, column: 48, scope: !17270)
!17335 = !DILocation(line: 341, column: 52, scope: !17270)
!17336 = !DILocation(line: 341, column: 46, scope: !17270)
!17337 = !DILocation(line: 341, column: 15, scope: !17270)
!17338 = !DILocation(line: 341, column: 27, scope: !17270)
!17339 = !DILocation(line: 341, column: 35, scope: !17270)
!17340 = !DILocation(line: 343, column: 30, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17270, file: !1037, line: 343, column: 19)
!17342 = !DILocation(line: 343, column: 35, scope: !17341)
!17343 = !DILocation(line: 343, column: 45, scope: !17341)
!17344 = !DILocation(line: 343, column: 19, scope: !17341)
!17345 = !DILocation(line: 343, column: 19, scope: !17270)
!17346 = !DILocation(line: 344, column: 17, scope: !17341)
!17347 = !DILocalVariable(name: "stat_result", scope: !17348, file: !1037, line: 348, type: !5)
!17348 = distinct !DILexicalBlock(scope: !17270, file: !1037, line: 347, column: 15)
!17349 = !DILocation(line: 348, column: 21, scope: !17348)
!17350 = !DILocation(line: 349, column: 30, scope: !17348)
!17351 = !DILocation(line: 349, column: 35, scope: !17348)
!17352 = !DILocation(line: 349, column: 21, scope: !17348)
!17353 = !DILocation(line: 351, column: 21, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17348, file: !1037, line: 351, column: 21)
!17355 = !DILocation(line: 352, column: 35, scope: !17354)
!17356 = !DILocation(line: 352, column: 46, scope: !17354)
!17357 = !DILocation(line: 352, column: 44, scope: !17354)
!17358 = !DILocation(line: 352, column: 21, scope: !17354)
!17359 = !DILocation(line: 353, column: 24, scope: !17354)
!17360 = !DILocation(line: 353, column: 58, scope: !17354)
!17361 = !DILocation(line: 353, column: 56, scope: !17354)
!17362 = !DILocation(line: 353, column: 21, scope: !17354)
!17363 = !DILocation(line: 351, column: 21, scope: !17348)
!17364 = !DILocation(line: 357, column: 42, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17354, file: !1037, line: 354, column: 19)
!17366 = !DILocation(line: 357, column: 21, scope: !17365)
!17367 = !DILocation(line: 357, column: 33, scope: !17365)
!17368 = !DILocation(line: 357, column: 40, scope: !17365)
!17369 = !DILocation(line: 358, column: 43, scope: !17365)
!17370 = !DILocation(line: 358, column: 21, scope: !17365)
!17371 = !DILocation(line: 358, column: 33, scope: !17365)
!17372 = !DILocation(line: 358, column: 41, scope: !17365)
!17373 = !DILocation(line: 359, column: 32, scope: !17365)
!17374 = !DILocation(line: 359, column: 37, scope: !17365)
!17375 = !DILocation(line: 359, column: 47, scope: !17365)
!17376 = !DILocation(line: 359, column: 21, scope: !17365)
!17377 = !DILocation(line: 360, column: 19, scope: !17365)
!17378 = !DILocation(line: 362, column: 21, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17348, file: !1037, line: 362, column: 21)
!17380 = !DILocation(line: 362, column: 33, scope: !17379)
!17381 = !DILocation(line: 362, column: 21, scope: !17348)
!17382 = !DILocation(line: 363, column: 19, scope: !17379)
!17383 = !DILocalVariable(name: "old_res", scope: !17384, file: !1037, line: 369, type: !5)
!17384 = distinct !DILexicalBlock(scope: !17270, file: !1037, line: 368, column: 15)
!17385 = !DILocation(line: 369, column: 21, scope: !17384)
!17386 = !DILocation(line: 369, column: 31, scope: !17384)
!17387 = !DILocalVariable(name: "a", scope: !17384, file: !1037, line: 370, type: !5)
!17388 = !DILocation(line: 370, column: 21, scope: !17384)
!17389 = !DILocation(line: 370, column: 48, scope: !17384)
!17390 = !DILocation(line: 370, column: 57, scope: !17384)
!17391 = !DILocation(line: 370, column: 34, scope: !17384)
!17392 = !DILocation(line: 371, column: 28, scope: !17384)
!17393 = !DILocation(line: 371, column: 26, scope: !17384)
!17394 = !DILocation(line: 370, column: 25, scope: !17384)
!17395 = !DILocation(line: 373, column: 21, scope: !17384)
!17396 = !DILocation(line: 375, column: 27, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17384, file: !1037, line: 375, column: 17)
!17398 = !DILocation(line: 375, column: 24, scope: !17397)
!17399 = !DILocation(line: 375, column: 22, scope: !17397)
!17400 = !DILocation(line: 375, column: 32, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17397, file: !1037, line: 375, column: 17)
!17402 = !DILocation(line: 375, column: 34, scope: !17401)
!17403 = !DILocation(line: 375, column: 39, scope: !17401)
!17404 = !DILocation(line: 375, column: 17, scope: !17397)
!17405 = !DILocation(line: 377, column: 25, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17407, file: !1037, line: 377, column: 25)
!17407 = distinct !DILexicalBlock(scope: !17401, file: !1037, line: 376, column: 19)
!17408 = !DILocation(line: 377, column: 29, scope: !17406)
!17409 = !DILocation(line: 377, column: 25, scope: !17407)
!17410 = !DILocation(line: 379, column: 29, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17406, file: !1037, line: 378, column: 23)
!17412 = !DILocation(line: 380, column: 25, scope: !17411)
!17413 = !DILocation(line: 382, column: 25, scope: !17407)
!17414 = !DILocation(line: 383, column: 25, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17407, file: !1037, line: 383, column: 25)
!17416 = !DILocation(line: 383, column: 32, scope: !17415)
!17417 = !DILocation(line: 383, column: 29, scope: !17415)
!17418 = !DILocation(line: 383, column: 25, scope: !17407)
!17419 = !DILocation(line: 384, column: 23, scope: !17415)
!17420 = !DILocation(line: 385, column: 19, scope: !17407)
!17421 = !DILocation(line: 375, column: 47, scope: !17401)
!17422 = !DILocation(line: 375, column: 17, scope: !17401)
!17423 = distinct !{!17423, !17404, !17424}
!17424 = !DILocation(line: 385, column: 19, scope: !17397)
!17425 = !DILocation(line: 387, column: 13, scope: !17270)
!17426 = !DILocation(line: 389, column: 33, scope: !17153)
!17427 = !DILocation(line: 389, column: 11, scope: !17153)
!17428 = !DILocation(line: 389, column: 20, scope: !17153)
!17429 = !DILocation(line: 389, column: 31, scope: !17153)
!17430 = !DILocation(line: 390, column: 11, scope: !17153)
!17431 = !DILocation(line: 390, column: 20, scope: !17153)
!17432 = !DILocation(line: 390, column: 26, scope: !17153)
!17433 = !DILocation(line: 391, column: 9, scope: !17153)
!17434 = !DILocation(line: 394, column: 19, scope: !17037)
!17435 = !DILocation(line: 394, column: 23, scope: !17037)
!17436 = !DILocation(line: 394, column: 16, scope: !17037)
!17437 = !DILocation(line: 394, column: 13, scope: !17037)
!17438 = !DILocation(line: 395, column: 17, scope: !17037)
!17439 = !DILocation(line: 395, column: 26, scope: !17037)
!17440 = !DILocation(line: 395, column: 24, scope: !17037)
!17441 = !DILocation(line: 395, column: 14, scope: !17037)
!17442 = !DILocation(line: 396, column: 5, scope: !17037)
!17443 = !DILocation(line: 399, column: 11, scope: !1036)
!17444 = !DILocation(line: 399, column: 19, scope: !1036)
!17445 = !DILocation(line: 399, column: 17, scope: !1036)
!17446 = !DILocation(line: 400, column: 13, scope: !1036)
!17447 = !DILocation(line: 400, column: 21, scope: !1036)
!17448 = !DILocation(line: 400, column: 19, scope: !1036)
!17449 = !DILocation(line: 401, column: 13, scope: !1036)
!17450 = !DILocation(line: 401, column: 22, scope: !1036)
!17451 = !DILocation(line: 401, column: 20, scope: !1036)
!17452 = !DILocation(line: 402, column: 13, scope: !1036)
!17453 = !DILocation(line: 402, column: 22, scope: !1036)
!17454 = !DILocation(line: 402, column: 20, scope: !1036)
!17455 = !DILocation(line: 399, column: 3, scope: !1036)
!17456 = !DILocation(line: 403, column: 1, scope: !1036)
!17457 = distinct !DISubprogram(name: "dev_info_hash", scope: !1037, file: !1037, line: 85, type: !839, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1063, retainedNodes: !295)
!17458 = !DILocalVariable(name: "x", arg: 1, scope: !17457, file: !1037, line: 85, type: !685)
!17459 = !DILocation(line: 85, column: 28, scope: !17457)
!17460 = !DILocalVariable(name: "table_size", arg: 2, scope: !17457, file: !1037, line: 85, type: !52)
!17461 = !DILocation(line: 85, column: 38, scope: !17457)
!17462 = !DILocalVariable(name: "p", scope: !17457, file: !1037, line: 87, type: !1074)
!17463 = !DILocation(line: 87, column: 24, scope: !17457)
!17464 = !DILocation(line: 87, column: 28, scope: !17457)
!17465 = !DILocation(line: 96, column: 10, scope: !17457)
!17466 = !DILocation(line: 96, column: 13, scope: !17457)
!17467 = !DILocation(line: 96, column: 19, scope: !17457)
!17468 = !DILocation(line: 96, column: 17, scope: !17457)
!17469 = !DILocation(line: 96, column: 3, scope: !17457)
!17470 = distinct !DISubprogram(name: "dev_info_compare", scope: !1037, file: !1037, line: 101, type: !844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1063, retainedNodes: !295)
!17471 = !DILocalVariable(name: "x", arg: 1, scope: !17470, file: !1037, line: 101, type: !685)
!17472 = !DILocation(line: 101, column: 31, scope: !17470)
!17473 = !DILocalVariable(name: "y", arg: 2, scope: !17470, file: !1037, line: 101, type: !685)
!17474 = !DILocation(line: 101, column: 46, scope: !17470)
!17475 = !DILocalVariable(name: "a", scope: !17470, file: !1037, line: 103, type: !1074)
!17476 = !DILocation(line: 103, column: 24, scope: !17470)
!17477 = !DILocation(line: 103, column: 28, scope: !17470)
!17478 = !DILocalVariable(name: "b", scope: !17470, file: !1037, line: 104, type: !1074)
!17479 = !DILocation(line: 104, column: 24, scope: !17470)
!17480 = !DILocation(line: 104, column: 28, scope: !17470)
!17481 = !DILocation(line: 105, column: 10, scope: !17470)
!17482 = !DILocation(line: 105, column: 13, scope: !17470)
!17483 = !DILocation(line: 105, column: 20, scope: !17470)
!17484 = !DILocation(line: 105, column: 23, scope: !17470)
!17485 = !DILocation(line: 105, column: 17, scope: !17470)
!17486 = !DILocation(line: 105, column: 3, scope: !17470)
!17487 = distinct !DISubprogram(name: "lutimensat", scope: !17488, file: !17488, line: 42, type: !17489, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!17488 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mohamad/clone/coreutils")
!17489 = !DISubroutineType(types: !17490)
!17490 = !{!5, !5, !180, !17491}
!17491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17492, size: 64)
!17492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!17493 = !DILocalVariable(name: "dir", arg: 1, scope: !17487, file: !17488, line: 42, type: !5)
!17494 = !DILocation(line: 42, column: 17, scope: !17487)
!17495 = !DILocalVariable(name: "file", arg: 2, scope: !17487, file: !17488, line: 42, type: !180)
!17496 = !DILocation(line: 42, column: 34, scope: !17487)
!17497 = !DILocalVariable(name: "times", arg: 3, scope: !17487, file: !17488, line: 42, type: !17491)
!17498 = !DILocation(line: 42, column: 62, scope: !17487)
!17499 = !DILocation(line: 44, column: 21, scope: !17487)
!17500 = !DILocation(line: 44, column: 26, scope: !17487)
!17501 = !DILocation(line: 44, column: 32, scope: !17487)
!17502 = !DILocation(line: 44, column: 10, scope: !17487)
!17503 = !DILocation(line: 44, column: 3, scope: !17487)
!17504 = distinct !DISubprogram(name: "fdutimens", scope: !1101, file: !1101, line: 170, type: !17489, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!17505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !17506)
!17506 = !{!17507, !17508, !17509, !17510, !17511, !17512, !17513, !17514, !17515, !17516, !17517, !17518, !17519, !17520, !17521}
!17507 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17505, file: !471, line: 48, baseType: !460, size: 64)
!17508 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17505, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!17509 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17505, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!17510 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17505, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!17511 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17505, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!17512 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17505, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!17513 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17505, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!17514 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17505, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!17515 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17505, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!17516 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17505, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!17517 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17505, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!17518 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17505, file: !471, line: 91, baseType: !1085, size: 128, offset: 576)
!17519 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17505, file: !471, line: 92, baseType: !1085, size: 128, offset: 704)
!17520 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17505, file: !471, line: 93, baseType: !1085, size: 128, offset: 832)
!17521 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17505, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!17522 = !DILocalVariable(name: "fd", arg: 1, scope: !17504, file: !1101, line: 170, type: !5)
!17523 = !DILocation(line: 170, column: 16, scope: !17504)
!17524 = !DILocalVariable(name: "file", arg: 2, scope: !17504, file: !1101, line: 170, type: !180)
!17525 = !DILocation(line: 170, column: 32, scope: !17504)
!17526 = !DILocalVariable(name: "timespec", arg: 3, scope: !17504, file: !1101, line: 170, type: !17491)
!17527 = !DILocation(line: 170, column: 60, scope: !17504)
!17528 = !DILocalVariable(name: "adjusted_timespec", scope: !17504, file: !1101, line: 172, type: !1084)
!17529 = !DILocation(line: 172, column: 19, scope: !17504)
!17530 = !DILocalVariable(name: "ts", scope: !17504, file: !1101, line: 173, type: !1089)
!17531 = !DILocation(line: 173, column: 20, scope: !17504)
!17532 = !DILocation(line: 173, column: 25, scope: !17504)
!17533 = !DILocation(line: 173, column: 36, scope: !17504)
!17534 = !DILocalVariable(name: "adjustment_needed", scope: !17504, file: !1101, line: 174, type: !5)
!17535 = !DILocation(line: 174, column: 7, scope: !17504)
!17536 = !DILocalVariable(name: "st", scope: !17504, file: !1101, line: 175, type: !17505)
!17537 = !DILocation(line: 175, column: 15, scope: !17504)
!17538 = !DILocation(line: 177, column: 7, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 177, column: 7)
!17540 = !DILocation(line: 177, column: 7, scope: !17504)
!17541 = !DILocation(line: 179, column: 7, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17539, file: !1101, line: 178, column: 5)
!17543 = !DILocation(line: 179, column: 30, scope: !17542)
!17544 = !DILocation(line: 180, column: 7, scope: !17542)
!17545 = !DILocation(line: 180, column: 30, scope: !17542)
!17546 = !DILocation(line: 181, column: 46, scope: !17542)
!17547 = !DILocation(line: 181, column: 27, scope: !17542)
!17548 = !DILocation(line: 181, column: 25, scope: !17542)
!17549 = !DILocation(line: 182, column: 5, scope: !17542)
!17550 = !DILocation(line: 183, column: 7, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 183, column: 7)
!17552 = !DILocation(line: 183, column: 25, scope: !17551)
!17553 = !DILocation(line: 183, column: 7, scope: !17504)
!17554 = !DILocation(line: 184, column: 5, scope: !17551)
!17555 = !DILocation(line: 189, column: 7, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 189, column: 7)
!17557 = !DILocation(line: 189, column: 10, scope: !17556)
!17558 = !DILocation(line: 189, column: 14, scope: !17556)
!17559 = !DILocation(line: 189, column: 18, scope: !17556)
!17560 = !DILocation(line: 189, column: 7, scope: !17504)
!17561 = !DILocation(line: 191, column: 7, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17556, file: !1101, line: 190, column: 5)
!17563 = !DILocation(line: 191, column: 13, scope: !17562)
!17564 = !DILocation(line: 192, column: 7, scope: !17562)
!17565 = !DILocation(line: 218, column: 12, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 218, column: 7)
!17567 = !DILocation(line: 218, column: 9, scope: !17566)
!17568 = !DILocation(line: 218, column: 7, scope: !17504)
!17569 = !DILocalVariable(name: "result", scope: !17570, file: !1101, line: 220, type: !5)
!17570 = distinct !DILexicalBlock(scope: !17566, file: !1101, line: 219, column: 5)
!17571 = !DILocation(line: 220, column: 11, scope: !17570)
!17572 = !DILocation(line: 234, column: 11, scope: !17573)
!17573 = distinct !DILexicalBlock(scope: !17570, file: !1101, line: 234, column: 11)
!17574 = !DILocation(line: 234, column: 29, scope: !17573)
!17575 = !DILocation(line: 234, column: 11, scope: !17570)
!17576 = !DILocation(line: 236, column: 15, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !1101, line: 236, column: 15)
!17578 = distinct !DILexicalBlock(scope: !17573, file: !1101, line: 235, column: 9)
!17579 = !DILocation(line: 236, column: 18, scope: !17577)
!17580 = !DILocation(line: 236, column: 15, scope: !17578)
!17581 = !DILocation(line: 236, column: 30, scope: !17577)
!17582 = !DILocation(line: 236, column: 24, scope: !17577)
!17583 = !DILocation(line: 236, column: 50, scope: !17577)
!17584 = !DILocation(line: 236, column: 43, scope: !17577)
!17585 = !DILocation(line: 237, column: 13, scope: !17577)
!17586 = !DILocation(line: 238, column: 15, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17578, file: !1101, line: 238, column: 15)
!17588 = !DILocation(line: 238, column: 21, scope: !17587)
!17589 = !DILocation(line: 238, column: 29, scope: !17587)
!17590 = !DILocation(line: 238, column: 15, scope: !17578)
!17591 = !DILocation(line: 239, column: 13, scope: !17587)
!17592 = !DILocation(line: 239, column: 21, scope: !17587)
!17593 = !DILocation(line: 240, column: 20, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17587, file: !1101, line: 240, column: 20)
!17595 = !DILocation(line: 240, column: 26, scope: !17594)
!17596 = !DILocation(line: 240, column: 34, scope: !17594)
!17597 = !DILocation(line: 240, column: 20, scope: !17587)
!17598 = !DILocation(line: 241, column: 13, scope: !17594)
!17599 = !DILocation(line: 241, column: 21, scope: !17594)
!17600 = !DILocation(line: 243, column: 28, scope: !17578)
!17601 = !DILocation(line: 244, column: 9, scope: !17578)
!17602 = !DILocation(line: 247, column: 11, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17570, file: !1101, line: 247, column: 11)
!17604 = !DILocation(line: 247, column: 14, scope: !17603)
!17605 = !DILocation(line: 247, column: 11, scope: !17570)
!17606 = !DILocation(line: 249, column: 41, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17603, file: !1101, line: 248, column: 9)
!17608 = !DILocation(line: 249, column: 47, scope: !17607)
!17609 = !DILocation(line: 249, column: 20, scope: !17607)
!17610 = !DILocation(line: 249, column: 18, scope: !17607)
!17611 = !DILocation(line: 258, column: 19, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17607, file: !1101, line: 258, column: 15)
!17613 = !DILocation(line: 258, column: 17, scope: !17612)
!17614 = !DILocation(line: 258, column: 15, scope: !17607)
!17615 = !DILocation(line: 259, column: 13, scope: !17612)
!17616 = !DILocation(line: 259, column: 19, scope: !17612)
!17617 = !DILocation(line: 261, column: 15, scope: !17618)
!17618 = distinct !DILexicalBlock(scope: !17607, file: !1101, line: 261, column: 15)
!17619 = !DILocation(line: 261, column: 22, scope: !17618)
!17620 = !DILocation(line: 261, column: 27, scope: !17618)
!17621 = !DILocation(line: 261, column: 30, scope: !17618)
!17622 = !DILocation(line: 261, column: 36, scope: !17618)
!17623 = !DILocation(line: 261, column: 15, scope: !17607)
!17624 = !DILocation(line: 263, column: 38, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17618, file: !1101, line: 262, column: 13)
!17626 = !DILocation(line: 264, column: 22, scope: !17625)
!17627 = !DILocation(line: 264, column: 15, scope: !17625)
!17628 = !DILocation(line: 266, column: 9, scope: !17607)
!17629 = !DILocation(line: 269, column: 16, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17570, file: !1101, line: 269, column: 11)
!17631 = !DILocation(line: 269, column: 13, scope: !17630)
!17632 = !DILocation(line: 269, column: 11, scope: !17570)
!17633 = !DILocation(line: 271, column: 30, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17630, file: !1101, line: 270, column: 9)
!17635 = !DILocation(line: 271, column: 34, scope: !17634)
!17636 = !DILocation(line: 271, column: 20, scope: !17634)
!17637 = !DILocation(line: 271, column: 18, scope: !17634)
!17638 = !DILocation(line: 274, column: 19, scope: !17639)
!17639 = distinct !DILexicalBlock(scope: !17634, file: !1101, line: 274, column: 15)
!17640 = !DILocation(line: 274, column: 17, scope: !17639)
!17641 = !DILocation(line: 274, column: 15, scope: !17634)
!17642 = !DILocation(line: 275, column: 13, scope: !17639)
!17643 = !DILocation(line: 275, column: 19, scope: !17639)
!17644 = !DILocation(line: 277, column: 15, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17634, file: !1101, line: 277, column: 15)
!17646 = !DILocation(line: 277, column: 22, scope: !17645)
!17647 = !DILocation(line: 277, column: 27, scope: !17645)
!17648 = !DILocation(line: 277, column: 30, scope: !17645)
!17649 = !DILocation(line: 277, column: 36, scope: !17645)
!17650 = !DILocation(line: 277, column: 15, scope: !17634)
!17651 = !DILocation(line: 279, column: 38, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17645, file: !1101, line: 278, column: 13)
!17653 = !DILocation(line: 280, column: 22, scope: !17652)
!17654 = !DILocation(line: 280, column: 15, scope: !17652)
!17655 = !DILocation(line: 282, column: 9, scope: !17634)
!17656 = !DILocation(line: 284, column: 5, scope: !17570)
!17657 = !DILocation(line: 285, column: 26, scope: !17504)
!17658 = !DILocation(line: 286, column: 27, scope: !17504)
!17659 = !DILocation(line: 377, column: 7, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 377, column: 7)
!17661 = !DILocation(line: 377, column: 7, scope: !17504)
!17662 = !DILocation(line: 379, column: 11, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17664, file: !1101, line: 379, column: 11)
!17664 = distinct !DILexicalBlock(scope: !17660, file: !1101, line: 378, column: 5)
!17665 = !DILocation(line: 379, column: 29, scope: !17663)
!17666 = !DILocation(line: 380, column: 11, scope: !17663)
!17667 = !DILocation(line: 380, column: 15, scope: !17663)
!17668 = !DILocation(line: 380, column: 18, scope: !17663)
!17669 = !DILocation(line: 379, column: 11, scope: !17664)
!17670 = !DILocation(line: 380, column: 30, scope: !17663)
!17671 = !DILocation(line: 380, column: 24, scope: !17663)
!17672 = !DILocation(line: 380, column: 50, scope: !17663)
!17673 = !DILocation(line: 380, column: 43, scope: !17663)
!17674 = !DILocation(line: 381, column: 9, scope: !17663)
!17675 = !DILocation(line: 382, column: 11, scope: !17676)
!17676 = distinct !DILexicalBlock(scope: !17664, file: !1101, line: 382, column: 11)
!17677 = !DILocation(line: 382, column: 14, scope: !17676)
!17678 = !DILocation(line: 382, column: 17, scope: !17676)
!17679 = !DILocation(line: 382, column: 11, scope: !17664)
!17680 = !DILocation(line: 383, column: 9, scope: !17676)
!17681 = !DILocation(line: 384, column: 5, scope: !17664)
!17682 = !DILocalVariable(name: "timeval", scope: !17683, file: !1101, line: 388, type: !1090)
!17683 = distinct !DILexicalBlock(scope: !17504, file: !1101, line: 386, column: 3)
!17684 = !DILocation(line: 388, column: 20, scope: !17683)
!17685 = !DILocalVariable(name: "t", scope: !17683, file: !1101, line: 389, type: !1097)
!17686 = !DILocation(line: 389, column: 21, scope: !17683)
!17687 = !DILocation(line: 390, column: 9, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17683, file: !1101, line: 390, column: 9)
!17689 = !DILocation(line: 390, column: 9, scope: !17683)
!17690 = !DILocation(line: 392, column: 29, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17688, file: !1101, line: 391, column: 7)
!17692 = !DILocation(line: 392, column: 35, scope: !17691)
!17693 = !DILocation(line: 392, column: 9, scope: !17691)
!17694 = !DILocation(line: 392, column: 20, scope: !17691)
!17695 = !DILocation(line: 392, column: 27, scope: !17691)
!17696 = !DILocation(line: 393, column: 30, scope: !17691)
!17697 = !DILocation(line: 393, column: 36, scope: !17691)
!17698 = !DILocation(line: 393, column: 44, scope: !17691)
!17699 = !DILocation(line: 393, column: 9, scope: !17691)
!17700 = !DILocation(line: 393, column: 20, scope: !17691)
!17701 = !DILocation(line: 393, column: 28, scope: !17691)
!17702 = !DILocation(line: 394, column: 29, scope: !17691)
!17703 = !DILocation(line: 394, column: 35, scope: !17691)
!17704 = !DILocation(line: 394, column: 9, scope: !17691)
!17705 = !DILocation(line: 394, column: 20, scope: !17691)
!17706 = !DILocation(line: 394, column: 27, scope: !17691)
!17707 = !DILocation(line: 395, column: 30, scope: !17691)
!17708 = !DILocation(line: 395, column: 36, scope: !17691)
!17709 = !DILocation(line: 395, column: 44, scope: !17691)
!17710 = !DILocation(line: 395, column: 9, scope: !17691)
!17711 = !DILocation(line: 395, column: 20, scope: !17691)
!17712 = !DILocation(line: 395, column: 28, scope: !17691)
!17713 = !DILocation(line: 396, column: 13, scope: !17691)
!17714 = !DILocation(line: 396, column: 11, scope: !17691)
!17715 = !DILocation(line: 397, column: 7, scope: !17691)
!17716 = !DILocation(line: 399, column: 9, scope: !17688)
!17717 = !DILocation(line: 401, column: 9, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17683, file: !1101, line: 401, column: 9)
!17719 = !DILocation(line: 401, column: 12, scope: !17718)
!17720 = !DILocation(line: 401, column: 9, scope: !17683)
!17721 = !DILocation(line: 404, column: 37, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17718, file: !1101, line: 402, column: 7)
!17723 = !DILocation(line: 404, column: 43, scope: !17722)
!17724 = !DILocation(line: 404, column: 16, scope: !17722)
!17725 = !DILocation(line: 404, column: 9, scope: !17722)
!17726 = !DILocation(line: 425, column: 13, scope: !17727)
!17727 = distinct !DILexicalBlock(scope: !17728, file: !1101, line: 425, column: 13)
!17728 = distinct !DILexicalBlock(scope: !17718, file: !1101, line: 408, column: 7)
!17729 = !DILocation(line: 425, column: 29, scope: !17727)
!17730 = !DILocation(line: 425, column: 13, scope: !17728)
!17731 = !DILocation(line: 433, column: 17, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17733, file: !1101, line: 433, column: 17)
!17733 = distinct !DILexicalBlock(scope: !17727, file: !1101, line: 426, column: 11)
!17734 = !DILocation(line: 433, column: 17, scope: !17733)
!17735 = !DILocalVariable(name: "abig", scope: !17736, file: !1101, line: 435, type: !139)
!17736 = distinct !DILexicalBlock(scope: !17732, file: !1101, line: 434, column: 15)
!17737 = !DILocation(line: 435, column: 22, scope: !17736)
!17738 = !DILocation(line: 435, column: 39, scope: !17736)
!17739 = !DILocation(line: 435, column: 44, scope: !17736)
!17740 = !DILocation(line: 435, column: 36, scope: !17736)
!17741 = !DILocalVariable(name: "mbig", scope: !17736, file: !1101, line: 436, type: !139)
!17742 = !DILocation(line: 436, column: 22, scope: !17736)
!17743 = !DILocation(line: 436, column: 39, scope: !17736)
!17744 = !DILocation(line: 436, column: 44, scope: !17736)
!17745 = !DILocation(line: 436, column: 36, scope: !17736)
!17746 = !DILocation(line: 437, column: 22, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17736, file: !1101, line: 437, column: 21)
!17748 = !DILocation(line: 437, column: 29, scope: !17747)
!17749 = !DILocation(line: 437, column: 27, scope: !17747)
!17750 = !DILocation(line: 437, column: 35, scope: !17747)
!17751 = !DILocation(line: 437, column: 45, scope: !17747)
!17752 = !DILocation(line: 437, column: 38, scope: !17747)
!17753 = !DILocation(line: 437, column: 54, scope: !17747)
!17754 = !DILocation(line: 437, column: 21, scope: !17736)
!17755 = !DILocalVariable(name: "adiff", scope: !17756, file: !1101, line: 441, type: !1066)
!17756 = distinct !DILexicalBlock(scope: !17747, file: !1101, line: 438, column: 19)
!17757 = !DILocation(line: 441, column: 28, scope: !17756)
!17758 = !DILocation(line: 441, column: 39, scope: !17756)
!17759 = !DILocation(line: 441, column: 50, scope: !17756)
!17760 = !DILocation(line: 441, column: 55, scope: !17756)
!17761 = !DILocation(line: 441, column: 48, scope: !17756)
!17762 = !DILocalVariable(name: "mdiff", scope: !17756, file: !1101, line: 442, type: !1066)
!17763 = !DILocation(line: 442, column: 28, scope: !17756)
!17764 = !DILocation(line: 442, column: 39, scope: !17756)
!17765 = !DILocation(line: 442, column: 50, scope: !17756)
!17766 = !DILocation(line: 442, column: 55, scope: !17756)
!17767 = !DILocation(line: 442, column: 48, scope: !17756)
!17768 = !DILocalVariable(name: "tt", scope: !17756, file: !1101, line: 444, type: !1097)
!17769 = !DILocation(line: 444, column: 37, scope: !17756)
!17770 = !DILocalVariable(name: "truncated_timeval", scope: !17756, file: !1101, line: 445, type: !1090)
!17771 = !DILocation(line: 445, column: 36, scope: !17756)
!17772 = !DILocation(line: 446, column: 21, scope: !17756)
!17773 = !DILocation(line: 446, column: 44, scope: !17756)
!17774 = !DILocation(line: 447, column: 21, scope: !17756)
!17775 = !DILocation(line: 447, column: 44, scope: !17756)
!17776 = !DILocation(line: 448, column: 25, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17756, file: !1101, line: 448, column: 25)
!17778 = !DILocation(line: 448, column: 30, scope: !17777)
!17779 = !DILocation(line: 448, column: 33, scope: !17777)
!17780 = !DILocation(line: 448, column: 39, scope: !17777)
!17781 = !DILocation(line: 448, column: 44, scope: !17777)
!17782 = !DILocation(line: 448, column: 47, scope: !17777)
!17783 = !DILocation(line: 448, column: 71, scope: !17777)
!17784 = !DILocation(line: 448, column: 25, scope: !17756)
!17785 = !DILocation(line: 450, column: 30, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17777, file: !1101, line: 449, column: 23)
!17787 = !DILocation(line: 450, column: 28, scope: !17786)
!17788 = !DILocation(line: 451, column: 25, scope: !17786)
!17789 = !DILocation(line: 451, column: 31, scope: !17786)
!17790 = !DILocation(line: 451, column: 39, scope: !17786)
!17791 = !DILocation(line: 452, column: 23, scope: !17786)
!17792 = !DILocation(line: 453, column: 25, scope: !17793)
!17793 = distinct !DILexicalBlock(scope: !17756, file: !1101, line: 453, column: 25)
!17794 = !DILocation(line: 453, column: 30, scope: !17793)
!17795 = !DILocation(line: 453, column: 33, scope: !17793)
!17796 = !DILocation(line: 453, column: 39, scope: !17793)
!17797 = !DILocation(line: 453, column: 44, scope: !17793)
!17798 = !DILocation(line: 453, column: 47, scope: !17793)
!17799 = !DILocation(line: 453, column: 71, scope: !17793)
!17800 = !DILocation(line: 453, column: 25, scope: !17756)
!17801 = !DILocation(line: 455, column: 30, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17793, file: !1101, line: 454, column: 23)
!17803 = !DILocation(line: 455, column: 28, scope: !17802)
!17804 = !DILocation(line: 456, column: 25, scope: !17802)
!17805 = !DILocation(line: 456, column: 31, scope: !17802)
!17806 = !DILocation(line: 456, column: 39, scope: !17802)
!17807 = !DILocation(line: 457, column: 23, scope: !17802)
!17808 = !DILocation(line: 458, column: 25, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17756, file: !1101, line: 458, column: 25)
!17810 = !DILocation(line: 458, column: 25, scope: !17756)
!17811 = !DILocation(line: 459, column: 23, scope: !17809)
!17812 = !DILocation(line: 460, column: 19, scope: !17756)
!17813 = !DILocation(line: 461, column: 15, scope: !17736)
!17814 = !DILocation(line: 464, column: 13, scope: !17733)
!17815 = !DILocation(line: 470, column: 10, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17683, file: !1101, line: 470, column: 9)
!17817 = !DILocation(line: 470, column: 9, scope: !17683)
!17818 = !DILocation(line: 476, column: 9, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17816, file: !1101, line: 471, column: 7)
!17820 = !DILocation(line: 482, column: 20, scope: !17683)
!17821 = !DILocation(line: 482, column: 26, scope: !17683)
!17822 = !DILocation(line: 482, column: 12, scope: !17683)
!17823 = !DILocation(line: 482, column: 5, scope: !17683)
!17824 = !DILocation(line: 500, column: 1, scope: !17504)
!17825 = distinct !DISubprogram(name: "validate_timespec", scope: !1101, file: !1101, line: 87, type: !17826, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!17826 = !DISubroutineType(types: !17827)
!17827 = !{!5, !1089}
!17828 = !DILocalVariable(name: "timespec", arg: 1, scope: !17825, file: !1101, line: 87, type: !1089)
!17829 = !DILocation(line: 87, column: 36, scope: !17825)
!17830 = !DILocalVariable(name: "result", scope: !17825, file: !1101, line: 89, type: !5)
!17831 = !DILocation(line: 89, column: 7, scope: !17825)
!17832 = !DILocalVariable(name: "utime_omit_count", scope: !17825, file: !1101, line: 90, type: !5)
!17833 = !DILocation(line: 90, column: 7, scope: !17825)
!17834 = !DILocation(line: 91, column: 8, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17825, file: !1101, line: 91, column: 7)
!17836 = !DILocation(line: 91, column: 20, scope: !17835)
!17837 = !DILocation(line: 91, column: 28, scope: !17835)
!17838 = !DILocation(line: 92, column: 8, scope: !17835)
!17839 = !DILocation(line: 92, column: 11, scope: !17835)
!17840 = !DILocation(line: 92, column: 23, scope: !17835)
!17841 = !DILocation(line: 92, column: 31, scope: !17835)
!17842 = !DILocation(line: 93, column: 8, scope: !17835)
!17843 = !DILocation(line: 93, column: 19, scope: !17835)
!17844 = !DILocation(line: 93, column: 31, scope: !17835)
!17845 = !DILocation(line: 93, column: 16, scope: !17835)
!17846 = !DILocation(line: 94, column: 14, scope: !17835)
!17847 = !DILocation(line: 94, column: 17, scope: !17835)
!17848 = !DILocation(line: 94, column: 29, scope: !17835)
!17849 = !DILocation(line: 94, column: 37, scope: !17835)
!17850 = !DILocation(line: 95, column: 7, scope: !17835)
!17851 = !DILocation(line: 95, column: 11, scope: !17835)
!17852 = !DILocation(line: 95, column: 23, scope: !17835)
!17853 = !DILocation(line: 95, column: 31, scope: !17835)
!17854 = !DILocation(line: 96, column: 11, scope: !17835)
!17855 = !DILocation(line: 96, column: 14, scope: !17835)
!17856 = !DILocation(line: 96, column: 26, scope: !17835)
!17857 = !DILocation(line: 96, column: 34, scope: !17835)
!17858 = !DILocation(line: 97, column: 11, scope: !17835)
!17859 = !DILocation(line: 97, column: 22, scope: !17835)
!17860 = !DILocation(line: 97, column: 34, scope: !17835)
!17861 = !DILocation(line: 97, column: 19, scope: !17835)
!17862 = !DILocation(line: 98, column: 17, scope: !17835)
!17863 = !DILocation(line: 98, column: 20, scope: !17835)
!17864 = !DILocation(line: 98, column: 32, scope: !17835)
!17865 = !DILocation(line: 98, column: 40, scope: !17835)
!17866 = !DILocation(line: 91, column: 7, scope: !17825)
!17867 = !DILocation(line: 100, column: 7, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17835, file: !1101, line: 99, column: 5)
!17869 = !DILocation(line: 100, column: 13, scope: !17868)
!17870 = !DILocation(line: 101, column: 7, scope: !17868)
!17871 = !DILocation(line: 107, column: 7, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17825, file: !1101, line: 107, column: 7)
!17873 = !DILocation(line: 107, column: 19, scope: !17872)
!17874 = !DILocation(line: 107, column: 27, scope: !17872)
!17875 = !DILocation(line: 108, column: 7, scope: !17872)
!17876 = !DILocation(line: 108, column: 10, scope: !17872)
!17877 = !DILocation(line: 108, column: 22, scope: !17872)
!17878 = !DILocation(line: 108, column: 30, scope: !17872)
!17879 = !DILocation(line: 107, column: 7, scope: !17825)
!17880 = !DILocation(line: 110, column: 7, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17872, file: !1101, line: 109, column: 5)
!17882 = !DILocation(line: 110, column: 19, scope: !17881)
!17883 = !DILocation(line: 110, column: 26, scope: !17881)
!17884 = !DILocation(line: 111, column: 14, scope: !17881)
!17885 = !DILocation(line: 112, column: 11, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17881, file: !1101, line: 112, column: 11)
!17887 = !DILocation(line: 112, column: 23, scope: !17886)
!17888 = !DILocation(line: 112, column: 31, scope: !17886)
!17889 = !DILocation(line: 112, column: 11, scope: !17881)
!17890 = !DILocation(line: 113, column: 25, scope: !17886)
!17891 = !DILocation(line: 113, column: 9, scope: !17886)
!17892 = !DILocation(line: 114, column: 5, scope: !17881)
!17893 = !DILocation(line: 115, column: 7, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17825, file: !1101, line: 115, column: 7)
!17895 = !DILocation(line: 115, column: 19, scope: !17894)
!17896 = !DILocation(line: 115, column: 27, scope: !17894)
!17897 = !DILocation(line: 116, column: 7, scope: !17894)
!17898 = !DILocation(line: 116, column: 10, scope: !17894)
!17899 = !DILocation(line: 116, column: 22, scope: !17894)
!17900 = !DILocation(line: 116, column: 30, scope: !17894)
!17901 = !DILocation(line: 115, column: 7, scope: !17825)
!17902 = !DILocation(line: 118, column: 7, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17894, file: !1101, line: 117, column: 5)
!17904 = !DILocation(line: 118, column: 19, scope: !17903)
!17905 = !DILocation(line: 118, column: 26, scope: !17903)
!17906 = !DILocation(line: 119, column: 14, scope: !17903)
!17907 = !DILocation(line: 120, column: 11, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17903, file: !1101, line: 120, column: 11)
!17909 = !DILocation(line: 120, column: 23, scope: !17908)
!17910 = !DILocation(line: 120, column: 31, scope: !17908)
!17911 = !DILocation(line: 120, column: 11, scope: !17903)
!17912 = !DILocation(line: 121, column: 25, scope: !17908)
!17913 = !DILocation(line: 121, column: 9, scope: !17908)
!17914 = !DILocation(line: 122, column: 5, scope: !17903)
!17915 = !DILocation(line: 123, column: 10, scope: !17825)
!17916 = !DILocation(line: 123, column: 20, scope: !17825)
!17917 = !DILocation(line: 123, column: 37, scope: !17825)
!17918 = !DILocation(line: 123, column: 17, scope: !17825)
!17919 = !DILocation(line: 123, column: 3, scope: !17825)
!17920 = !DILocation(line: 124, column: 1, scope: !17825)
!17921 = distinct !DISubprogram(name: "update_timespec", scope: !1101, file: !1101, line: 133, type: !17922, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!17922 = !DISubroutineType(types: !17923)
!17923 = !{!139, !17924, !17926}
!17924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17925, size: 64)
!17925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17505)
!17926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!17927 = !DILocalVariable(name: "statbuf", arg: 1, scope: !17921, file: !1101, line: 133, type: !17924)
!17928 = !DILocation(line: 133, column: 37, scope: !17921)
!17929 = !DILocalVariable(name: "ts", arg: 2, scope: !17921, file: !1101, line: 133, type: !17926)
!17930 = !DILocation(line: 133, column: 63, scope: !17921)
!17931 = !DILocalVariable(name: "timespec", scope: !17921, file: !1101, line: 135, type: !1089)
!17932 = !DILocation(line: 135, column: 20, scope: !17921)
!17933 = !DILocation(line: 135, column: 32, scope: !17921)
!17934 = !DILocation(line: 135, column: 31, scope: !17921)
!17935 = !DILocation(line: 136, column: 7, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17921, file: !1101, line: 136, column: 7)
!17937 = !DILocation(line: 136, column: 19, scope: !17936)
!17938 = !DILocation(line: 136, column: 27, scope: !17936)
!17939 = !DILocation(line: 137, column: 7, scope: !17936)
!17940 = !DILocation(line: 137, column: 10, scope: !17936)
!17941 = !DILocation(line: 137, column: 22, scope: !17936)
!17942 = !DILocation(line: 137, column: 30, scope: !17936)
!17943 = !DILocation(line: 136, column: 7, scope: !17921)
!17944 = !DILocation(line: 138, column: 5, scope: !17936)
!17945 = !DILocation(line: 139, column: 7, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17921, file: !1101, line: 139, column: 7)
!17947 = !DILocation(line: 139, column: 19, scope: !17946)
!17948 = !DILocation(line: 139, column: 27, scope: !17946)
!17949 = !DILocation(line: 140, column: 7, scope: !17946)
!17950 = !DILocation(line: 140, column: 10, scope: !17946)
!17951 = !DILocation(line: 140, column: 22, scope: !17946)
!17952 = !DILocation(line: 140, column: 30, scope: !17946)
!17953 = !DILocation(line: 139, column: 7, scope: !17921)
!17954 = !DILocation(line: 142, column: 8, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17946, file: !1101, line: 141, column: 5)
!17956 = !DILocation(line: 142, column: 11, scope: !17955)
!17957 = !DILocation(line: 143, column: 7, scope: !17955)
!17958 = !DILocation(line: 146, column: 7, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17921, file: !1101, line: 146, column: 7)
!17960 = !DILocation(line: 146, column: 19, scope: !17959)
!17961 = !DILocation(line: 146, column: 27, scope: !17959)
!17962 = !DILocation(line: 146, column: 7, scope: !17921)
!17963 = !DILocation(line: 147, column: 5, scope: !17959)
!17964 = !DILocation(line: 147, column: 35, scope: !17959)
!17965 = !DILocation(line: 147, column: 19, scope: !17959)
!17966 = !DILocation(line: 148, column: 12, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17959, file: !1101, line: 148, column: 12)
!17968 = !DILocation(line: 148, column: 24, scope: !17967)
!17969 = !DILocation(line: 148, column: 32, scope: !17967)
!17970 = !DILocation(line: 148, column: 12, scope: !17959)
!17971 = !DILocation(line: 149, column: 15, scope: !17967)
!17972 = !DILocation(line: 149, column: 5, scope: !17967)
!17973 = !DILocation(line: 151, column: 7, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17921, file: !1101, line: 151, column: 7)
!17975 = !DILocation(line: 151, column: 19, scope: !17974)
!17976 = !DILocation(line: 151, column: 27, scope: !17974)
!17977 = !DILocation(line: 151, column: 7, scope: !17921)
!17978 = !DILocation(line: 152, column: 5, scope: !17974)
!17979 = !DILocation(line: 152, column: 35, scope: !17974)
!17980 = !DILocation(line: 152, column: 19, scope: !17974)
!17981 = !DILocation(line: 153, column: 12, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17974, file: !1101, line: 153, column: 12)
!17983 = !DILocation(line: 153, column: 24, scope: !17982)
!17984 = !DILocation(line: 153, column: 32, scope: !17982)
!17985 = !DILocation(line: 153, column: 12, scope: !17974)
!17986 = !DILocation(line: 154, column: 15, scope: !17982)
!17987 = !DILocation(line: 154, column: 5, scope: !17982)
!17988 = !DILocation(line: 156, column: 3, scope: !17921)
!17989 = !DILocation(line: 157, column: 1, scope: !17921)
!17990 = distinct !DISubprogram(name: "utimens", scope: !1101, file: !1101, line: 505, type: !17991, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!17991 = !DISubroutineType(types: !17992)
!17992 = !{!5, !180, !17491}
!17993 = !DILocalVariable(name: "file", arg: 1, scope: !17990, file: !1101, line: 505, type: !180)
!17994 = !DILocation(line: 505, column: 22, scope: !17990)
!17995 = !DILocalVariable(name: "timespec", arg: 2, scope: !17990, file: !1101, line: 505, type: !17491)
!17996 = !DILocation(line: 505, column: 50, scope: !17990)
!17997 = !DILocation(line: 507, column: 25, scope: !17990)
!17998 = !DILocation(line: 507, column: 31, scope: !17990)
!17999 = !DILocation(line: 507, column: 10, scope: !17990)
!18000 = !DILocation(line: 507, column: 3, scope: !17990)
!18001 = distinct !DISubprogram(name: "lutimens", scope: !1101, file: !1101, line: 515, type: !17991, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1081, retainedNodes: !295)
!18002 = !DILocalVariable(name: "file", arg: 1, scope: !18001, file: !1101, line: 515, type: !180)
!18003 = !DILocation(line: 515, column: 23, scope: !18001)
!18004 = !DILocalVariable(name: "timespec", arg: 2, scope: !18001, file: !1101, line: 515, type: !17491)
!18005 = !DILocation(line: 515, column: 51, scope: !18001)
!18006 = !DILocalVariable(name: "adjusted_timespec", scope: !18001, file: !1101, line: 517, type: !1084)
!18007 = !DILocation(line: 517, column: 19, scope: !18001)
!18008 = !DILocalVariable(name: "ts", scope: !18001, file: !1101, line: 518, type: !1089)
!18009 = !DILocation(line: 518, column: 20, scope: !18001)
!18010 = !DILocation(line: 518, column: 25, scope: !18001)
!18011 = !DILocation(line: 518, column: 36, scope: !18001)
!18012 = !DILocalVariable(name: "adjustment_needed", scope: !18001, file: !1101, line: 519, type: !5)
!18013 = !DILocation(line: 519, column: 7, scope: !18001)
!18014 = !DILocalVariable(name: "st", scope: !18001, file: !1101, line: 520, type: !17505)
!18015 = !DILocation(line: 520, column: 15, scope: !18001)
!18016 = !DILocation(line: 522, column: 7, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 522, column: 7)
!18018 = !DILocation(line: 522, column: 7, scope: !18001)
!18019 = !DILocation(line: 524, column: 7, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18017, file: !1101, line: 523, column: 5)
!18021 = !DILocation(line: 524, column: 30, scope: !18020)
!18022 = !DILocation(line: 525, column: 7, scope: !18020)
!18023 = !DILocation(line: 525, column: 30, scope: !18020)
!18024 = !DILocation(line: 526, column: 46, scope: !18020)
!18025 = !DILocation(line: 526, column: 27, scope: !18020)
!18026 = !DILocation(line: 526, column: 25, scope: !18020)
!18027 = !DILocation(line: 527, column: 5, scope: !18020)
!18028 = !DILocation(line: 528, column: 7, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 528, column: 7)
!18030 = !DILocation(line: 528, column: 25, scope: !18029)
!18031 = !DILocation(line: 528, column: 7, scope: !18001)
!18032 = !DILocation(line: 529, column: 5, scope: !18029)
!18033 = !DILocation(line: 537, column: 12, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 537, column: 7)
!18035 = !DILocation(line: 537, column: 9, scope: !18034)
!18036 = !DILocation(line: 537, column: 7, scope: !18001)
!18037 = !DILocalVariable(name: "result", scope: !18038, file: !1101, line: 539, type: !5)
!18038 = distinct !DILexicalBlock(scope: !18034, file: !1101, line: 538, column: 5)
!18039 = !DILocation(line: 539, column: 11, scope: !18038)
!18040 = !DILocation(line: 553, column: 11, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18038, file: !1101, line: 553, column: 11)
!18042 = !DILocation(line: 553, column: 29, scope: !18041)
!18043 = !DILocation(line: 553, column: 11, scope: !18038)
!18044 = !DILocation(line: 555, column: 22, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !18046, file: !1101, line: 555, column: 15)
!18046 = distinct !DILexicalBlock(scope: !18041, file: !1101, line: 554, column: 9)
!18047 = !DILocation(line: 555, column: 15, scope: !18045)
!18048 = !DILocation(line: 555, column: 15, scope: !18046)
!18049 = !DILocation(line: 556, column: 13, scope: !18045)
!18050 = !DILocation(line: 557, column: 15, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18046, file: !1101, line: 557, column: 15)
!18052 = !DILocation(line: 557, column: 21, scope: !18051)
!18053 = !DILocation(line: 557, column: 29, scope: !18051)
!18054 = !DILocation(line: 557, column: 15, scope: !18046)
!18055 = !DILocation(line: 558, column: 13, scope: !18051)
!18056 = !DILocation(line: 558, column: 21, scope: !18051)
!18057 = !DILocation(line: 559, column: 20, scope: !18058)
!18058 = distinct !DILexicalBlock(scope: !18051, file: !1101, line: 559, column: 20)
!18059 = !DILocation(line: 559, column: 26, scope: !18058)
!18060 = !DILocation(line: 559, column: 34, scope: !18058)
!18061 = !DILocation(line: 559, column: 20, scope: !18051)
!18062 = !DILocation(line: 560, column: 13, scope: !18058)
!18063 = !DILocation(line: 560, column: 21, scope: !18058)
!18064 = !DILocation(line: 562, column: 28, scope: !18046)
!18065 = !DILocation(line: 563, column: 9, scope: !18046)
!18066 = !DILocation(line: 565, column: 37, scope: !18038)
!18067 = !DILocation(line: 565, column: 43, scope: !18038)
!18068 = !DILocation(line: 565, column: 16, scope: !18038)
!18069 = !DILocation(line: 565, column: 14, scope: !18038)
!18070 = !DILocation(line: 574, column: 15, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18038, file: !1101, line: 574, column: 11)
!18072 = !DILocation(line: 574, column: 13, scope: !18071)
!18073 = !DILocation(line: 574, column: 11, scope: !18038)
!18074 = !DILocation(line: 575, column: 9, scope: !18071)
!18075 = !DILocation(line: 575, column: 15, scope: !18071)
!18076 = !DILocation(line: 577, column: 11, scope: !18077)
!18077 = distinct !DILexicalBlock(scope: !18038, file: !1101, line: 577, column: 11)
!18078 = !DILocation(line: 577, column: 18, scope: !18077)
!18079 = !DILocation(line: 577, column: 23, scope: !18077)
!18080 = !DILocation(line: 577, column: 26, scope: !18077)
!18081 = !DILocation(line: 577, column: 32, scope: !18077)
!18082 = !DILocation(line: 577, column: 11, scope: !18038)
!18083 = !DILocation(line: 579, column: 34, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18077, file: !1101, line: 578, column: 9)
!18085 = !DILocation(line: 580, column: 35, scope: !18084)
!18086 = !DILocation(line: 581, column: 18, scope: !18084)
!18087 = !DILocation(line: 581, column: 11, scope: !18084)
!18088 = !DILocation(line: 583, column: 5, scope: !18038)
!18089 = !DILocation(line: 584, column: 27, scope: !18001)
!18090 = !DILocation(line: 591, column: 7, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 591, column: 7)
!18092 = !DILocation(line: 591, column: 7, scope: !18001)
!18093 = !DILocation(line: 593, column: 11, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18095, file: !1101, line: 593, column: 11)
!18095 = distinct !DILexicalBlock(scope: !18091, file: !1101, line: 592, column: 5)
!18096 = !DILocation(line: 593, column: 29, scope: !18094)
!18097 = !DILocation(line: 593, column: 34, scope: !18094)
!18098 = !DILocation(line: 593, column: 44, scope: !18094)
!18099 = !DILocation(line: 593, column: 37, scope: !18094)
!18100 = !DILocation(line: 593, column: 11, scope: !18095)
!18101 = !DILocation(line: 594, column: 9, scope: !18094)
!18102 = !DILocation(line: 595, column: 11, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18095, file: !1101, line: 595, column: 11)
!18104 = !DILocation(line: 595, column: 14, scope: !18103)
!18105 = !DILocation(line: 595, column: 17, scope: !18103)
!18106 = !DILocation(line: 595, column: 11, scope: !18095)
!18107 = !DILocation(line: 596, column: 9, scope: !18103)
!18108 = !DILocation(line: 597, column: 5, scope: !18095)
!18109 = !DILocation(line: 624, column: 9, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 624, column: 7)
!18111 = !DILocation(line: 624, column: 54, scope: !18110)
!18112 = !DILocation(line: 624, column: 64, scope: !18110)
!18113 = !DILocation(line: 624, column: 57, scope: !18110)
!18114 = !DILocation(line: 624, column: 7, scope: !18001)
!18115 = !DILocation(line: 625, column: 5, scope: !18110)
!18116 = !DILocation(line: 626, column: 8, scope: !18117)
!18117 = distinct !DILexicalBlock(scope: !18001, file: !1101, line: 626, column: 7)
!18118 = !DILocation(line: 626, column: 7, scope: !18001)
!18119 = !DILocation(line: 627, column: 27, scope: !18117)
!18120 = !DILocation(line: 627, column: 33, scope: !18117)
!18121 = !DILocation(line: 627, column: 12, scope: !18117)
!18122 = !DILocation(line: 627, column: 5, scope: !18117)
!18123 = !DILocation(line: 628, column: 3, scope: !18001)
!18124 = !DILocation(line: 628, column: 9, scope: !18001)
!18125 = !DILocation(line: 629, column: 3, scope: !18001)
!18126 = !DILocation(line: 630, column: 1, scope: !18001)
!18127 = distinct !DISubprogram(name: "version_etc_arn", scope: !18128, file: !18128, line: 61, type: !18129, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1436, retainedNodes: !295)
!18128 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!18129 = !DISubroutineType(types: !18130)
!18130 = !{null, !18131, !180, !180, !180, !1125, !52}
!18131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18132, size: 64)
!18132 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !1461)
!18133 = !DILocalVariable(name: "stream", arg: 1, scope: !18127, file: !18128, line: 61, type: !18131)
!18134 = !DILocation(line: 61, column: 24, scope: !18127)
!18135 = !DILocalVariable(name: "command_name", arg: 2, scope: !18127, file: !18128, line: 62, type: !180)
!18136 = !DILocation(line: 62, column: 30, scope: !18127)
!18137 = !DILocalVariable(name: "package", arg: 3, scope: !18127, file: !18128, line: 62, type: !180)
!18138 = !DILocation(line: 62, column: 56, scope: !18127)
!18139 = !DILocalVariable(name: "version", arg: 4, scope: !18127, file: !18128, line: 63, type: !180)
!18140 = !DILocation(line: 63, column: 30, scope: !18127)
!18141 = !DILocalVariable(name: "authors", arg: 5, scope: !18127, file: !18128, line: 64, type: !1125)
!18142 = !DILocation(line: 64, column: 39, scope: !18127)
!18143 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18127, file: !18128, line: 64, type: !52)
!18144 = !DILocation(line: 64, column: 55, scope: !18127)
!18145 = !DILocation(line: 66, column: 7, scope: !18146)
!18146 = distinct !DILexicalBlock(scope: !18127, file: !18128, line: 66, column: 7)
!18147 = !DILocation(line: 66, column: 7, scope: !18127)
!18148 = !DILocation(line: 67, column: 14, scope: !18146)
!18149 = !DILocation(line: 67, column: 38, scope: !18146)
!18150 = !DILocation(line: 67, column: 52, scope: !18146)
!18151 = !DILocation(line: 67, column: 61, scope: !18146)
!18152 = !DILocation(line: 67, column: 5, scope: !18146)
!18153 = !DILocation(line: 69, column: 14, scope: !18146)
!18154 = !DILocation(line: 69, column: 33, scope: !18146)
!18155 = !DILocation(line: 69, column: 42, scope: !18146)
!18156 = !DILocation(line: 69, column: 5, scope: !18146)
!18157 = !DILocation(line: 83, column: 12, scope: !18127)
!18158 = !DILocation(line: 83, column: 43, scope: !18127)
!18159 = !DILocation(line: 83, column: 3, scope: !18127)
!18160 = !DILocation(line: 85, column: 3, scope: !18127)
!18161 = !DILocation(line: 88, column: 12, scope: !18127)
!18162 = !DILocation(line: 88, column: 20, scope: !18127)
!18163 = !DILocation(line: 88, column: 3, scope: !18127)
!18164 = !DILocation(line: 95, column: 3, scope: !18127)
!18165 = !DILocation(line: 97, column: 11, scope: !18127)
!18166 = !DILocation(line: 97, column: 3, scope: !18127)
!18167 = !DILocation(line: 102, column: 7, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18127, file: !18128, line: 98, column: 5)
!18169 = !DILocation(line: 105, column: 16, scope: !18168)
!18170 = !DILocation(line: 105, column: 24, scope: !18168)
!18171 = !DILocation(line: 105, column: 47, scope: !18168)
!18172 = !DILocation(line: 105, column: 7, scope: !18168)
!18173 = !DILocation(line: 106, column: 7, scope: !18168)
!18174 = !DILocation(line: 109, column: 16, scope: !18168)
!18175 = !DILocation(line: 109, column: 24, scope: !18168)
!18176 = !DILocation(line: 109, column: 54, scope: !18168)
!18177 = !DILocation(line: 109, column: 66, scope: !18168)
!18178 = !DILocation(line: 109, column: 7, scope: !18168)
!18179 = !DILocation(line: 110, column: 7, scope: !18168)
!18180 = !DILocation(line: 113, column: 16, scope: !18168)
!18181 = !DILocation(line: 113, column: 24, scope: !18168)
!18182 = !DILocation(line: 114, column: 16, scope: !18168)
!18183 = !DILocation(line: 114, column: 28, scope: !18168)
!18184 = !DILocation(line: 114, column: 40, scope: !18168)
!18185 = !DILocation(line: 113, column: 7, scope: !18168)
!18186 = !DILocation(line: 115, column: 7, scope: !18168)
!18187 = !DILocation(line: 120, column: 16, scope: !18168)
!18188 = !DILocation(line: 120, column: 24, scope: !18168)
!18189 = !DILocation(line: 121, column: 16, scope: !18168)
!18190 = !DILocation(line: 121, column: 28, scope: !18168)
!18191 = !DILocation(line: 121, column: 40, scope: !18168)
!18192 = !DILocation(line: 121, column: 52, scope: !18168)
!18193 = !DILocation(line: 120, column: 7, scope: !18168)
!18194 = !DILocation(line: 122, column: 7, scope: !18168)
!18195 = !DILocation(line: 127, column: 16, scope: !18168)
!18196 = !DILocation(line: 127, column: 24, scope: !18168)
!18197 = !DILocation(line: 128, column: 16, scope: !18168)
!18198 = !DILocation(line: 128, column: 28, scope: !18168)
!18199 = !DILocation(line: 128, column: 40, scope: !18168)
!18200 = !DILocation(line: 128, column: 52, scope: !18168)
!18201 = !DILocation(line: 128, column: 64, scope: !18168)
!18202 = !DILocation(line: 127, column: 7, scope: !18168)
!18203 = !DILocation(line: 129, column: 7, scope: !18168)
!18204 = !DILocation(line: 134, column: 16, scope: !18168)
!18205 = !DILocation(line: 134, column: 24, scope: !18168)
!18206 = !DILocation(line: 135, column: 16, scope: !18168)
!18207 = !DILocation(line: 135, column: 28, scope: !18168)
!18208 = !DILocation(line: 135, column: 40, scope: !18168)
!18209 = !DILocation(line: 135, column: 52, scope: !18168)
!18210 = !DILocation(line: 135, column: 64, scope: !18168)
!18211 = !DILocation(line: 136, column: 16, scope: !18168)
!18212 = !DILocation(line: 134, column: 7, scope: !18168)
!18213 = !DILocation(line: 137, column: 7, scope: !18168)
!18214 = !DILocation(line: 142, column: 16, scope: !18168)
!18215 = !DILocation(line: 142, column: 24, scope: !18168)
!18216 = !DILocation(line: 143, column: 16, scope: !18168)
!18217 = !DILocation(line: 143, column: 28, scope: !18168)
!18218 = !DILocation(line: 143, column: 40, scope: !18168)
!18219 = !DILocation(line: 143, column: 52, scope: !18168)
!18220 = !DILocation(line: 143, column: 64, scope: !18168)
!18221 = !DILocation(line: 144, column: 16, scope: !18168)
!18222 = !DILocation(line: 144, column: 28, scope: !18168)
!18223 = !DILocation(line: 142, column: 7, scope: !18168)
!18224 = !DILocation(line: 145, column: 7, scope: !18168)
!18225 = !DILocation(line: 150, column: 16, scope: !18168)
!18226 = !DILocation(line: 150, column: 24, scope: !18168)
!18227 = !DILocation(line: 152, column: 17, scope: !18168)
!18228 = !DILocation(line: 152, column: 29, scope: !18168)
!18229 = !DILocation(line: 152, column: 41, scope: !18168)
!18230 = !DILocation(line: 152, column: 53, scope: !18168)
!18231 = !DILocation(line: 152, column: 65, scope: !18168)
!18232 = !DILocation(line: 153, column: 17, scope: !18168)
!18233 = !DILocation(line: 153, column: 29, scope: !18168)
!18234 = !DILocation(line: 153, column: 41, scope: !18168)
!18235 = !DILocation(line: 150, column: 7, scope: !18168)
!18236 = !DILocation(line: 154, column: 7, scope: !18168)
!18237 = !DILocation(line: 159, column: 16, scope: !18168)
!18238 = !DILocation(line: 159, column: 24, scope: !18168)
!18239 = !DILocation(line: 161, column: 16, scope: !18168)
!18240 = !DILocation(line: 161, column: 28, scope: !18168)
!18241 = !DILocation(line: 161, column: 40, scope: !18168)
!18242 = !DILocation(line: 161, column: 52, scope: !18168)
!18243 = !DILocation(line: 161, column: 64, scope: !18168)
!18244 = !DILocation(line: 162, column: 16, scope: !18168)
!18245 = !DILocation(line: 162, column: 28, scope: !18168)
!18246 = !DILocation(line: 162, column: 40, scope: !18168)
!18247 = !DILocation(line: 162, column: 52, scope: !18168)
!18248 = !DILocation(line: 159, column: 7, scope: !18168)
!18249 = !DILocation(line: 163, column: 7, scope: !18168)
!18250 = !DILocation(line: 170, column: 16, scope: !18168)
!18251 = !DILocation(line: 170, column: 24, scope: !18168)
!18252 = !DILocation(line: 172, column: 17, scope: !18168)
!18253 = !DILocation(line: 172, column: 29, scope: !18168)
!18254 = !DILocation(line: 172, column: 41, scope: !18168)
!18255 = !DILocation(line: 172, column: 53, scope: !18168)
!18256 = !DILocation(line: 172, column: 65, scope: !18168)
!18257 = !DILocation(line: 173, column: 17, scope: !18168)
!18258 = !DILocation(line: 173, column: 29, scope: !18168)
!18259 = !DILocation(line: 173, column: 41, scope: !18168)
!18260 = !DILocation(line: 173, column: 53, scope: !18168)
!18261 = !DILocation(line: 170, column: 7, scope: !18168)
!18262 = !DILocation(line: 174, column: 7, scope: !18168)
!18263 = !DILocation(line: 176, column: 1, scope: !18127)
!18264 = distinct !DISubprogram(name: "version_etc_ar", scope: !18128, file: !18128, line: 183, type: !18265, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1436, retainedNodes: !295)
!18265 = !DISubroutineType(types: !18266)
!18266 = !{null, !18131, !180, !180, !180, !1125}
!18267 = !DILocalVariable(name: "stream", arg: 1, scope: !18264, file: !18128, line: 183, type: !18131)
!18268 = !DILocation(line: 183, column: 23, scope: !18264)
!18269 = !DILocalVariable(name: "command_name", arg: 2, scope: !18264, file: !18128, line: 184, type: !180)
!18270 = !DILocation(line: 184, column: 29, scope: !18264)
!18271 = !DILocalVariable(name: "package", arg: 3, scope: !18264, file: !18128, line: 184, type: !180)
!18272 = !DILocation(line: 184, column: 55, scope: !18264)
!18273 = !DILocalVariable(name: "version", arg: 4, scope: !18264, file: !18128, line: 185, type: !180)
!18274 = !DILocation(line: 185, column: 29, scope: !18264)
!18275 = !DILocalVariable(name: "authors", arg: 5, scope: !18264, file: !18128, line: 185, type: !1125)
!18276 = !DILocation(line: 185, column: 59, scope: !18264)
!18277 = !DILocalVariable(name: "n_authors", scope: !18264, file: !18128, line: 187, type: !52)
!18278 = !DILocation(line: 187, column: 10, scope: !18264)
!18279 = !DILocation(line: 189, column: 18, scope: !18280)
!18280 = distinct !DILexicalBlock(scope: !18264, file: !18128, line: 189, column: 3)
!18281 = !DILocation(line: 189, column: 8, scope: !18280)
!18282 = !DILocation(line: 189, column: 23, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18280, file: !18128, line: 189, column: 3)
!18284 = !DILocation(line: 189, column: 31, scope: !18283)
!18285 = !DILocation(line: 189, column: 3, scope: !18280)
!18286 = !DILocation(line: 189, column: 52, scope: !18283)
!18287 = !DILocation(line: 189, column: 3, scope: !18283)
!18288 = distinct !{!18288, !18285, !18289}
!18289 = !DILocation(line: 190, column: 5, scope: !18280)
!18290 = !DILocation(line: 191, column: 20, scope: !18264)
!18291 = !DILocation(line: 191, column: 28, scope: !18264)
!18292 = !DILocation(line: 191, column: 42, scope: !18264)
!18293 = !DILocation(line: 191, column: 51, scope: !18264)
!18294 = !DILocation(line: 191, column: 60, scope: !18264)
!18295 = !DILocation(line: 191, column: 69, scope: !18264)
!18296 = !DILocation(line: 191, column: 3, scope: !18264)
!18297 = !DILocation(line: 192, column: 1, scope: !18264)
!18298 = distinct !DISubprogram(name: "version_etc_va", scope: !18128, file: !18128, line: 199, type: !18299, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1436, retainedNodes: !295)
!18299 = !DISubroutineType(types: !18300)
!18300 = !{null, !18131, !180, !180, !180, !18301}
!18301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!18302 = !DILocalVariable(name: "stream", arg: 1, scope: !18298, file: !18128, line: 199, type: !18131)
!18303 = !DILocation(line: 199, column: 23, scope: !18298)
!18304 = !DILocalVariable(name: "command_name", arg: 2, scope: !18298, file: !18128, line: 200, type: !180)
!18305 = !DILocation(line: 200, column: 29, scope: !18298)
!18306 = !DILocalVariable(name: "package", arg: 3, scope: !18298, file: !18128, line: 200, type: !180)
!18307 = !DILocation(line: 200, column: 55, scope: !18298)
!18308 = !DILocalVariable(name: "version", arg: 4, scope: !18298, file: !18128, line: 201, type: !180)
!18309 = !DILocation(line: 201, column: 29, scope: !18298)
!18310 = !DILocalVariable(name: "authors", arg: 5, scope: !18298, file: !18128, line: 201, type: !18301)
!18311 = !DILocation(line: 201, column: 46, scope: !18298)
!18312 = !DILocalVariable(name: "n_authors", scope: !18298, file: !18128, line: 203, type: !52)
!18313 = !DILocation(line: 203, column: 10, scope: !18298)
!18314 = !DILocalVariable(name: "authtab", scope: !18298, file: !18128, line: 204, type: !1449)
!18315 = !DILocation(line: 204, column: 15, scope: !18298)
!18316 = !DILocation(line: 206, column: 18, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18298, file: !18128, line: 206, column: 3)
!18318 = !DILocation(line: 206, column: 8, scope: !18317)
!18319 = !DILocation(line: 207, column: 8, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18317, file: !18128, line: 206, column: 3)
!18321 = !DILocation(line: 207, column: 18, scope: !18320)
!18322 = !DILocation(line: 208, column: 10, scope: !18320)
!18323 = !DILocation(line: 208, column: 35, scope: !18320)
!18324 = !DILocation(line: 208, column: 22, scope: !18320)
!18325 = !DILocation(line: 208, column: 14, scope: !18320)
!18326 = !DILocation(line: 208, column: 33, scope: !18320)
!18327 = !DILocation(line: 208, column: 67, scope: !18320)
!18328 = !DILocation(line: 0, scope: !18320)
!18329 = !DILocation(line: 206, column: 3, scope: !18317)
!18330 = !DILocation(line: 209, column: 17, scope: !18320)
!18331 = !DILocation(line: 206, column: 3, scope: !18320)
!18332 = distinct !{!18332, !18329, !18333}
!18333 = !DILocation(line: 210, column: 5, scope: !18317)
!18334 = !DILocation(line: 211, column: 20, scope: !18298)
!18335 = !DILocation(line: 211, column: 28, scope: !18298)
!18336 = !DILocation(line: 211, column: 42, scope: !18298)
!18337 = !DILocation(line: 211, column: 51, scope: !18298)
!18338 = !DILocation(line: 212, column: 20, scope: !18298)
!18339 = !DILocation(line: 212, column: 29, scope: !18298)
!18340 = !DILocation(line: 211, column: 3, scope: !18298)
!18341 = !DILocation(line: 213, column: 1, scope: !18298)
!18342 = distinct !DISubprogram(name: "version_etc", scope: !18128, file: !18128, line: 230, type: !18343, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1436, retainedNodes: !295)
!18343 = !DISubroutineType(types: !18344)
!18344 = !{null, !18131, !180, !180, !180, null}
!18345 = !DILocalVariable(name: "stream", arg: 1, scope: !18342, file: !18128, line: 230, type: !18131)
!18346 = !DILocation(line: 230, column: 20, scope: !18342)
!18347 = !DILocalVariable(name: "command_name", arg: 2, scope: !18342, file: !18128, line: 231, type: !180)
!18348 = !DILocation(line: 231, column: 26, scope: !18342)
!18349 = !DILocalVariable(name: "package", arg: 3, scope: !18342, file: !18128, line: 231, type: !180)
!18350 = !DILocation(line: 231, column: 52, scope: !18342)
!18351 = !DILocalVariable(name: "version", arg: 4, scope: !18342, file: !18128, line: 232, type: !180)
!18352 = !DILocation(line: 232, column: 26, scope: !18342)
!18353 = !DILocalVariable(name: "authors", scope: !18342, file: !18128, line: 234, type: !1450)
!18354 = !DILocation(line: 234, column: 11, scope: !18342)
!18355 = !DILocation(line: 236, column: 3, scope: !18342)
!18356 = !DILocation(line: 237, column: 19, scope: !18342)
!18357 = !DILocation(line: 237, column: 27, scope: !18342)
!18358 = !DILocation(line: 237, column: 41, scope: !18342)
!18359 = !DILocation(line: 237, column: 50, scope: !18342)
!18360 = !DILocation(line: 237, column: 59, scope: !18342)
!18361 = !DILocation(line: 237, column: 3, scope: !18342)
!18362 = !DILocation(line: 238, column: 3, scope: !18342)
!18363 = !DILocation(line: 239, column: 1, scope: !18342)
!18364 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18128, file: !18128, line: 242, type: !694, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1436, retainedNodes: !295)
!18365 = !DILocation(line: 244, column: 3, scope: !18364)
!18366 = !DILocation(line: 249, column: 11, scope: !18364)
!18367 = !DILocation(line: 249, column: 3, scope: !18364)
!18368 = !DILocation(line: 255, column: 11, scope: !18364)
!18369 = !DILocation(line: 255, column: 3, scope: !18364)
!18370 = !DILocation(line: 260, column: 11, scope: !18364)
!18371 = !DILocation(line: 260, column: 3, scope: !18364)
!18372 = !DILocation(line: 262, column: 1, scope: !18364)
!18373 = !DILocation(line: 37, column: 9, scope: !18374)
!18374 = distinct !DILexicalBlock(scope: !1111, file: !1112, line: 37, column: 7)
!18375 = !DILocation(line: 37, column: 7, scope: !1111)
!18376 = !DILocalVariable(name: "can", scope: !18377, file: !1112, line: 39, type: !139)
!18377 = distinct !DILexicalBlock(scope: !18374, file: !1112, line: 38, column: 5)
!18378 = !DILocation(line: 39, column: 12, scope: !18377)
!18379 = !DILocation(line: 44, column: 14, scope: !18377)
!18380 = !DILocation(line: 44, column: 25, scope: !18377)
!18381 = !DILocation(line: 44, column: 11, scope: !18377)
!18382 = !DILocation(line: 46, column: 19, scope: !18377)
!18383 = !DILocation(line: 46, column: 17, scope: !18377)
!18384 = !DILocation(line: 47, column: 19, scope: !18377)
!18385 = !DILocation(line: 48, column: 5, scope: !18377)
!18386 = !DILocation(line: 50, column: 10, scope: !1111)
!18387 = !DILocation(line: 50, column: 3, scope: !1111)
!18388 = distinct !DISubprogram(name: "xnmalloc", scope: !18389, file: !18389, line: 99, type: !18390, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18389 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!18390 = !DISubroutineType(types: !18391)
!18391 = !{!47, !52, !52}
!18392 = !DILocalVariable(name: "n", arg: 1, scope: !18388, file: !18389, line: 99, type: !52)
!18393 = !DILocation(line: 99, column: 18, scope: !18388)
!18394 = !DILocalVariable(name: "s", arg: 2, scope: !18388, file: !18389, line: 99, type: !52)
!18395 = !DILocation(line: 99, column: 28, scope: !18388)
!18396 = !DILocation(line: 101, column: 7, scope: !18397)
!18397 = distinct !DILexicalBlock(scope: !18388, file: !18389, line: 101, column: 7)
!18398 = !DILocation(line: 101, column: 7, scope: !18388)
!18399 = !DILocation(line: 102, column: 5, scope: !18397)
!18400 = !DILocation(line: 103, column: 19, scope: !18388)
!18401 = !DILocation(line: 103, column: 23, scope: !18388)
!18402 = !DILocation(line: 103, column: 21, scope: !18388)
!18403 = !DILocation(line: 103, column: 10, scope: !18388)
!18404 = !DILocation(line: 103, column: 3, scope: !18388)
!18405 = distinct !DISubprogram(name: "xmalloc", scope: !18406, file: !18406, line: 39, type: !18407, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18406 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!18407 = !DISubroutineType(types: !18408)
!18408 = !{!47, !52}
!18409 = !DILocalVariable(name: "n", arg: 1, scope: !18405, file: !18406, line: 39, type: !52)
!18410 = !DILocation(line: 39, column: 17, scope: !18405)
!18411 = !DILocalVariable(name: "p", scope: !18405, file: !18406, line: 41, type: !47)
!18412 = !DILocation(line: 41, column: 9, scope: !18405)
!18413 = !DILocation(line: 41, column: 21, scope: !18405)
!18414 = !DILocation(line: 41, column: 13, scope: !18405)
!18415 = !DILocation(line: 42, column: 8, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18405, file: !18406, line: 42, column: 7)
!18417 = !DILocation(line: 42, column: 10, scope: !18416)
!18418 = !DILocation(line: 42, column: 13, scope: !18416)
!18419 = !DILocation(line: 42, column: 15, scope: !18416)
!18420 = !DILocation(line: 42, column: 7, scope: !18405)
!18421 = !DILocation(line: 43, column: 5, scope: !18416)
!18422 = !DILocation(line: 44, column: 10, scope: !18405)
!18423 = !DILocation(line: 44, column: 3, scope: !18405)
!18424 = distinct !DISubprogram(name: "xnrealloc", scope: !18389, file: !18389, line: 112, type: !18425, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18425 = !DISubroutineType(types: !18426)
!18426 = !{!47, !47, !52, !52}
!18427 = !DILocalVariable(name: "p", arg: 1, scope: !18424, file: !18389, line: 112, type: !47)
!18428 = !DILocation(line: 112, column: 18, scope: !18424)
!18429 = !DILocalVariable(name: "n", arg: 2, scope: !18424, file: !18389, line: 112, type: !52)
!18430 = !DILocation(line: 112, column: 28, scope: !18424)
!18431 = !DILocalVariable(name: "s", arg: 3, scope: !18424, file: !18389, line: 112, type: !52)
!18432 = !DILocation(line: 112, column: 38, scope: !18424)
!18433 = !DILocation(line: 114, column: 7, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !18424, file: !18389, line: 114, column: 7)
!18435 = !DILocation(line: 114, column: 7, scope: !18424)
!18436 = !DILocation(line: 115, column: 5, scope: !18434)
!18437 = !DILocation(line: 116, column: 20, scope: !18424)
!18438 = !DILocation(line: 116, column: 23, scope: !18424)
!18439 = !DILocation(line: 116, column: 27, scope: !18424)
!18440 = !DILocation(line: 116, column: 25, scope: !18424)
!18441 = !DILocation(line: 116, column: 10, scope: !18424)
!18442 = !DILocation(line: 116, column: 3, scope: !18424)
!18443 = distinct !DISubprogram(name: "xrealloc", scope: !18406, file: !18406, line: 51, type: !18444, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18444 = !DISubroutineType(types: !18445)
!18445 = !{!47, !47, !52}
!18446 = !DILocalVariable(name: "p", arg: 1, scope: !18443, file: !18406, line: 51, type: !47)
!18447 = !DILocation(line: 51, column: 17, scope: !18443)
!18448 = !DILocalVariable(name: "n", arg: 2, scope: !18443, file: !18406, line: 51, type: !52)
!18449 = !DILocation(line: 51, column: 27, scope: !18443)
!18450 = !DILocation(line: 53, column: 8, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18443, file: !18406, line: 53, column: 7)
!18452 = !DILocation(line: 53, column: 10, scope: !18451)
!18453 = !DILocation(line: 53, column: 13, scope: !18451)
!18454 = !DILocation(line: 53, column: 7, scope: !18443)
!18455 = !DILocation(line: 57, column: 13, scope: !18456)
!18456 = distinct !DILexicalBlock(scope: !18451, file: !18406, line: 54, column: 5)
!18457 = !DILocation(line: 57, column: 7, scope: !18456)
!18458 = !DILocation(line: 58, column: 7, scope: !18456)
!18459 = !DILocation(line: 61, column: 16, scope: !18443)
!18460 = !DILocation(line: 61, column: 19, scope: !18443)
!18461 = !DILocation(line: 61, column: 7, scope: !18443)
!18462 = !DILocation(line: 61, column: 5, scope: !18443)
!18463 = !DILocation(line: 62, column: 8, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18443, file: !18406, line: 62, column: 7)
!18465 = !DILocation(line: 62, column: 10, scope: !18464)
!18466 = !DILocation(line: 62, column: 13, scope: !18464)
!18467 = !DILocation(line: 62, column: 7, scope: !18443)
!18468 = !DILocation(line: 63, column: 5, scope: !18464)
!18469 = !DILocation(line: 64, column: 10, scope: !18443)
!18470 = !DILocation(line: 64, column: 3, scope: !18443)
!18471 = !DILocation(line: 65, column: 1, scope: !18443)
!18472 = distinct !DISubprogram(name: "x2nrealloc", scope: !18389, file: !18389, line: 174, type: !18473, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18473 = !DISubroutineType(types: !18474)
!18474 = !{!47, !47, !9427, !52}
!18475 = !DILocalVariable(name: "p", arg: 1, scope: !18472, file: !18389, line: 174, type: !47)
!18476 = !DILocation(line: 174, column: 19, scope: !18472)
!18477 = !DILocalVariable(name: "pn", arg: 2, scope: !18472, file: !18389, line: 174, type: !9427)
!18478 = !DILocation(line: 174, column: 30, scope: !18472)
!18479 = !DILocalVariable(name: "s", arg: 3, scope: !18472, file: !18389, line: 174, type: !52)
!18480 = !DILocation(line: 174, column: 41, scope: !18472)
!18481 = !DILocalVariable(name: "n", scope: !18472, file: !18389, line: 176, type: !52)
!18482 = !DILocation(line: 176, column: 10, scope: !18472)
!18483 = !DILocation(line: 176, column: 15, scope: !18472)
!18484 = !DILocation(line: 176, column: 14, scope: !18472)
!18485 = !DILocation(line: 178, column: 9, scope: !18486)
!18486 = distinct !DILexicalBlock(scope: !18472, file: !18389, line: 178, column: 7)
!18487 = !DILocation(line: 178, column: 7, scope: !18472)
!18488 = !DILocation(line: 180, column: 13, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18490, file: !18389, line: 180, column: 11)
!18490 = distinct !DILexicalBlock(scope: !18486, file: !18389, line: 179, column: 5)
!18491 = !DILocation(line: 180, column: 11, scope: !18490)
!18492 = !DILocation(line: 188, column: 32, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18489, file: !18389, line: 181, column: 9)
!18494 = !DILocation(line: 188, column: 30, scope: !18493)
!18495 = !DILocation(line: 188, column: 13, scope: !18493)
!18496 = !DILocation(line: 189, column: 17, scope: !18493)
!18497 = !DILocation(line: 189, column: 16, scope: !18493)
!18498 = !DILocation(line: 189, column: 13, scope: !18493)
!18499 = !DILocation(line: 190, column: 9, scope: !18493)
!18500 = !DILocation(line: 191, column: 11, scope: !18501)
!18501 = distinct !DILexicalBlock(scope: !18490, file: !18389, line: 191, column: 11)
!18502 = !DILocation(line: 191, column: 11, scope: !18490)
!18503 = !DILocation(line: 192, column: 9, scope: !18501)
!18504 = !DILocation(line: 193, column: 5, scope: !18490)
!18505 = !DILocation(line: 200, column: 71, scope: !18506)
!18506 = distinct !DILexicalBlock(scope: !18507, file: !18389, line: 200, column: 11)
!18507 = distinct !DILexicalBlock(scope: !18486, file: !18389, line: 195, column: 5)
!18508 = !DILocation(line: 200, column: 69, scope: !18506)
!18509 = !DILocation(line: 201, column: 14, scope: !18506)
!18510 = !DILocation(line: 201, column: 11, scope: !18506)
!18511 = !DILocation(line: 200, column: 11, scope: !18507)
!18512 = !DILocation(line: 202, column: 9, scope: !18506)
!18513 = !DILocation(line: 203, column: 12, scope: !18507)
!18514 = !DILocation(line: 203, column: 14, scope: !18507)
!18515 = !DILocation(line: 203, column: 18, scope: !18507)
!18516 = !DILocation(line: 203, column: 9, scope: !18507)
!18517 = !DILocation(line: 206, column: 9, scope: !18472)
!18518 = !DILocation(line: 206, column: 4, scope: !18472)
!18519 = !DILocation(line: 206, column: 7, scope: !18472)
!18520 = !DILocation(line: 207, column: 20, scope: !18472)
!18521 = !DILocation(line: 207, column: 23, scope: !18472)
!18522 = !DILocation(line: 207, column: 27, scope: !18472)
!18523 = !DILocation(line: 207, column: 25, scope: !18472)
!18524 = !DILocation(line: 207, column: 10, scope: !18472)
!18525 = !DILocation(line: 207, column: 3, scope: !18472)
!18526 = distinct !DISubprogram(name: "xcharalloc", scope: !18389, file: !18389, line: 216, type: !18527, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18527 = !DISubroutineType(types: !18528)
!18528 = !{!7, !52}
!18529 = !DILocalVariable(name: "n", arg: 1, scope: !18526, file: !18389, line: 216, type: !52)
!18530 = !DILocation(line: 216, column: 20, scope: !18526)
!18531 = !DILocation(line: 218, column: 10, scope: !18526)
!18532 = !DILocation(line: 218, column: 3, scope: !18526)
!18533 = distinct !DISubprogram(name: "x2realloc", scope: !18406, file: !18406, line: 74, type: !18534, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18534 = !DISubroutineType(types: !18535)
!18535 = !{!47, !47, !9427}
!18536 = !DILocalVariable(name: "p", arg: 1, scope: !18533, file: !18406, line: 74, type: !47)
!18537 = !DILocation(line: 74, column: 18, scope: !18533)
!18538 = !DILocalVariable(name: "pn", arg: 2, scope: !18533, file: !18406, line: 74, type: !9427)
!18539 = !DILocation(line: 74, column: 29, scope: !18533)
!18540 = !DILocation(line: 76, column: 22, scope: !18533)
!18541 = !DILocation(line: 76, column: 25, scope: !18533)
!18542 = !DILocation(line: 76, column: 10, scope: !18533)
!18543 = !DILocation(line: 76, column: 3, scope: !18533)
!18544 = distinct !DISubprogram(name: "xzalloc", scope: !18406, file: !18406, line: 84, type: !18407, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18545 = !DILocalVariable(name: "s", arg: 1, scope: !18544, file: !18406, line: 84, type: !52)
!18546 = !DILocation(line: 84, column: 17, scope: !18544)
!18547 = !DILocation(line: 86, column: 27, scope: !18544)
!18548 = !DILocation(line: 86, column: 18, scope: !18544)
!18549 = !DILocation(line: 86, column: 34, scope: !18544)
!18550 = !DILocation(line: 86, column: 10, scope: !18544)
!18551 = !DILocation(line: 86, column: 3, scope: !18544)
!18552 = distinct !DISubprogram(name: "xcalloc", scope: !18406, file: !18406, line: 93, type: !18390, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18553 = !DILocalVariable(name: "n", arg: 1, scope: !18552, file: !18406, line: 93, type: !52)
!18554 = !DILocation(line: 93, column: 17, scope: !18552)
!18555 = !DILocalVariable(name: "s", arg: 2, scope: !18552, file: !18406, line: 93, type: !52)
!18556 = !DILocation(line: 93, column: 27, scope: !18552)
!18557 = !DILocalVariable(name: "p", scope: !18552, file: !18406, line: 95, type: !47)
!18558 = !DILocation(line: 95, column: 9, scope: !18552)
!18559 = !DILocation(line: 100, column: 7, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18552, file: !18406, line: 100, column: 7)
!18561 = !DILocation(line: 101, column: 7, scope: !18560)
!18562 = !DILocation(line: 101, column: 26, scope: !18560)
!18563 = !DILocation(line: 101, column: 29, scope: !18560)
!18564 = !DILocation(line: 101, column: 18, scope: !18560)
!18565 = !DILocation(line: 101, column: 16, scope: !18560)
!18566 = !DILocation(line: 100, column: 7, scope: !18552)
!18567 = !DILocation(line: 102, column: 5, scope: !18560)
!18568 = !DILocation(line: 103, column: 10, scope: !18552)
!18569 = !DILocation(line: 103, column: 3, scope: !18552)
!18570 = distinct !DISubprogram(name: "xmemdup", scope: !18406, file: !18406, line: 111, type: !7183, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18571 = !DILocalVariable(name: "p", arg: 1, scope: !18570, file: !18406, line: 111, type: !685)
!18572 = !DILocation(line: 111, column: 22, scope: !18570)
!18573 = !DILocalVariable(name: "s", arg: 2, scope: !18570, file: !18406, line: 111, type: !52)
!18574 = !DILocation(line: 111, column: 32, scope: !18570)
!18575 = !DILocation(line: 113, column: 27, scope: !18570)
!18576 = !DILocation(line: 113, column: 18, scope: !18570)
!18577 = !DILocation(line: 113, column: 31, scope: !18570)
!18578 = !DILocation(line: 113, column: 34, scope: !18570)
!18579 = !DILocation(line: 113, column: 10, scope: !18570)
!18580 = !DILocation(line: 113, column: 3, scope: !18570)
!18581 = distinct !DISubprogram(name: "xstrdup", scope: !18406, file: !18406, line: 119, type: !2501, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1498, retainedNodes: !295)
!18582 = !DILocalVariable(name: "string", arg: 1, scope: !18581, file: !18406, line: 119, type: !180)
!18583 = !DILocation(line: 119, column: 22, scope: !18581)
!18584 = !DILocation(line: 121, column: 19, scope: !18581)
!18585 = !DILocation(line: 121, column: 35, scope: !18581)
!18586 = !DILocation(line: 121, column: 27, scope: !18581)
!18587 = !DILocation(line: 121, column: 43, scope: !18581)
!18588 = !DILocation(line: 121, column: 10, scope: !18581)
!18589 = !DILocation(line: 121, column: 3, scope: !18581)
!18590 = distinct !DISubprogram(name: "xalloc_die", scope: !18591, file: !18591, line: 32, type: !694, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1501, retainedNodes: !295)
!18591 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!18592 = !DILocation(line: 34, column: 10, scope: !18590)
!18593 = !DILocation(line: 34, column: 33, scope: !18590)
!18594 = !DILocation(line: 34, column: 3, scope: !18590)
!18595 = !DILocation(line: 40, column: 3, scope: !18590)
!18596 = distinct !DISubprogram(name: "xstrtoul", scope: !18597, file: !18597, line: 76, type: !18598, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1504, retainedNodes: !295)
!18597 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mohamad/clone/coreutils")
!18598 = !DISubroutineType(types: !18599)
!18599 = !{!1516, !180, !206, !5, !18600, !180}
!18600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!18601 = !DILocalVariable(name: "s", arg: 1, scope: !18596, file: !18597, line: 76, type: !180)
!18602 = !DILocation(line: 76, column: 24, scope: !18596)
!18603 = !DILocalVariable(name: "ptr", arg: 2, scope: !18596, file: !18597, line: 76, type: !206)
!18604 = !DILocation(line: 76, column: 34, scope: !18596)
!18605 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18596, file: !18597, line: 76, type: !5)
!18606 = !DILocation(line: 76, column: 43, scope: !18596)
!18607 = !DILocalVariable(name: "val", arg: 4, scope: !18596, file: !18597, line: 77, type: !18600)
!18608 = !DILocation(line: 77, column: 24, scope: !18596)
!18609 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18596, file: !18597, line: 77, type: !180)
!18610 = !DILocation(line: 77, column: 41, scope: !18596)
!18611 = !DILocalVariable(name: "t_ptr", scope: !18596, file: !18597, line: 79, type: !7)
!18612 = !DILocation(line: 79, column: 9, scope: !18596)
!18613 = !DILocalVariable(name: "p", scope: !18596, file: !18597, line: 80, type: !206)
!18614 = !DILocation(line: 80, column: 10, scope: !18596)
!18615 = !DILocalVariable(name: "tmp", scope: !18596, file: !18597, line: 81, type: !54)
!18616 = !DILocation(line: 81, column: 14, scope: !18596)
!18617 = !DILocalVariable(name: "err", scope: !18596, file: !18597, line: 82, type: !1516)
!18618 = !DILocation(line: 82, column: 16, scope: !18596)
!18619 = !DILocation(line: 84, column: 3, scope: !18596)
!18620 = !DILocation(line: 86, column: 8, scope: !18596)
!18621 = !DILocation(line: 86, column: 14, scope: !18596)
!18622 = !DILocation(line: 86, column: 5, scope: !18596)
!18623 = !DILocation(line: 88, column: 3, scope: !18596)
!18624 = !DILocation(line: 88, column: 9, scope: !18596)
!18625 = !DILocalVariable(name: "q", scope: !18626, file: !18597, line: 92, type: !180)
!18626 = distinct !DILexicalBlock(scope: !18627, file: !18597, line: 91, column: 5)
!18627 = distinct !DILexicalBlock(scope: !18596, file: !18597, line: 90, column: 7)
!18628 = !DILocation(line: 92, column: 19, scope: !18626)
!18629 = !DILocation(line: 92, column: 23, scope: !18626)
!18630 = !DILocalVariable(name: "ch", scope: !18626, file: !18597, line: 93, type: !585)
!18631 = !DILocation(line: 93, column: 21, scope: !18626)
!18632 = !DILocation(line: 93, column: 27, scope: !18626)
!18633 = !DILocation(line: 93, column: 26, scope: !18626)
!18634 = !DILocation(line: 94, column: 7, scope: !18626)
!18635 = !DILocation(line: 94, column: 14, scope: !18626)
!18636 = !DILocation(line: 95, column: 15, scope: !18626)
!18637 = !DILocation(line: 95, column: 14, scope: !18626)
!18638 = !DILocation(line: 95, column: 12, scope: !18626)
!18639 = distinct !{!18639, !18634, !18640}
!18640 = !DILocation(line: 95, column: 17, scope: !18626)
!18641 = !DILocation(line: 96, column: 11, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18626, file: !18597, line: 96, column: 11)
!18643 = !DILocation(line: 96, column: 14, scope: !18642)
!18644 = !DILocation(line: 96, column: 11, scope: !18626)
!18645 = !DILocation(line: 97, column: 9, scope: !18642)
!18646 = !DILocation(line: 100, column: 19, scope: !18596)
!18647 = !DILocation(line: 100, column: 22, scope: !18596)
!18648 = !DILocation(line: 100, column: 25, scope: !18596)
!18649 = !DILocation(line: 100, column: 9, scope: !18596)
!18650 = !DILocation(line: 100, column: 7, scope: !18596)
!18651 = !DILocation(line: 102, column: 8, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !18596, file: !18597, line: 102, column: 7)
!18653 = !DILocation(line: 102, column: 7, scope: !18652)
!18654 = !DILocation(line: 102, column: 13, scope: !18652)
!18655 = !DILocation(line: 102, column: 10, scope: !18652)
!18656 = !DILocation(line: 102, column: 7, scope: !18596)
!18657 = !DILocation(line: 106, column: 11, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18659, file: !18597, line: 106, column: 11)
!18659 = distinct !DILexicalBlock(scope: !18652, file: !18597, line: 103, column: 5)
!18660 = !DILocation(line: 106, column: 26, scope: !18658)
!18661 = !DILocation(line: 106, column: 31, scope: !18658)
!18662 = !DILocation(line: 106, column: 30, scope: !18658)
!18663 = !DILocation(line: 106, column: 29, scope: !18658)
!18664 = !DILocation(line: 106, column: 33, scope: !18658)
!18665 = !DILocation(line: 106, column: 44, scope: !18658)
!18666 = !DILocation(line: 106, column: 62, scope: !18658)
!18667 = !DILocation(line: 106, column: 61, scope: !18658)
!18668 = !DILocation(line: 106, column: 60, scope: !18658)
!18669 = !DILocation(line: 106, column: 36, scope: !18658)
!18670 = !DILocation(line: 106, column: 11, scope: !18659)
!18671 = !DILocation(line: 107, column: 13, scope: !18658)
!18672 = !DILocation(line: 107, column: 9, scope: !18658)
!18673 = !DILocation(line: 109, column: 9, scope: !18658)
!18674 = !DILocation(line: 110, column: 5, scope: !18659)
!18675 = !DILocation(line: 111, column: 12, scope: !18676)
!18676 = distinct !DILexicalBlock(scope: !18652, file: !18597, line: 111, column: 12)
!18677 = !DILocation(line: 111, column: 18, scope: !18676)
!18678 = !DILocation(line: 111, column: 12, scope: !18652)
!18679 = !DILocation(line: 113, column: 11, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18681, file: !18597, line: 113, column: 11)
!18681 = distinct !DILexicalBlock(scope: !18676, file: !18597, line: 112, column: 5)
!18682 = !DILocation(line: 113, column: 17, scope: !18680)
!18683 = !DILocation(line: 113, column: 11, scope: !18681)
!18684 = !DILocation(line: 114, column: 9, scope: !18680)
!18685 = !DILocation(line: 115, column: 11, scope: !18681)
!18686 = !DILocation(line: 116, column: 5, scope: !18681)
!18687 = !DILocation(line: 121, column: 8, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18596, file: !18597, line: 121, column: 7)
!18689 = !DILocation(line: 121, column: 7, scope: !18596)
!18690 = !DILocation(line: 123, column: 14, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18688, file: !18597, line: 122, column: 5)
!18692 = !DILocation(line: 123, column: 8, scope: !18691)
!18693 = !DILocation(line: 123, column: 12, scope: !18691)
!18694 = !DILocation(line: 124, column: 14, scope: !18691)
!18695 = !DILocation(line: 124, column: 7, scope: !18691)
!18696 = !DILocation(line: 127, column: 9, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18596, file: !18597, line: 127, column: 7)
!18698 = !DILocation(line: 127, column: 8, scope: !18697)
!18699 = !DILocation(line: 127, column: 7, scope: !18697)
!18700 = !DILocation(line: 127, column: 11, scope: !18697)
!18701 = !DILocation(line: 127, column: 7, scope: !18596)
!18702 = !DILocalVariable(name: "base", scope: !18703, file: !18597, line: 129, type: !5)
!18703 = distinct !DILexicalBlock(scope: !18697, file: !18597, line: 128, column: 5)
!18704 = !DILocation(line: 129, column: 11, scope: !18703)
!18705 = !DILocalVariable(name: "suffixes", scope: !18703, file: !18597, line: 130, type: !5)
!18706 = !DILocation(line: 130, column: 11, scope: !18703)
!18707 = !DILocalVariable(name: "overflow", scope: !18703, file: !18597, line: 131, type: !1516)
!18708 = !DILocation(line: 131, column: 20, scope: !18703)
!18709 = !DILocation(line: 133, column: 20, scope: !18710)
!18710 = distinct !DILexicalBlock(scope: !18703, file: !18597, line: 133, column: 11)
!18711 = !DILocation(line: 133, column: 38, scope: !18710)
!18712 = !DILocation(line: 133, column: 37, scope: !18710)
!18713 = !DILocation(line: 133, column: 36, scope: !18710)
!18714 = !DILocation(line: 133, column: 12, scope: !18710)
!18715 = !DILocation(line: 133, column: 11, scope: !18703)
!18716 = !DILocation(line: 135, column: 18, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18710, file: !18597, line: 134, column: 9)
!18718 = !DILocation(line: 135, column: 12, scope: !18717)
!18719 = !DILocation(line: 135, column: 16, scope: !18717)
!18720 = !DILocation(line: 136, column: 18, scope: !18717)
!18721 = !DILocation(line: 136, column: 22, scope: !18717)
!18722 = !DILocation(line: 136, column: 11, scope: !18717)
!18723 = !DILocation(line: 139, column: 17, scope: !18703)
!18724 = !DILocation(line: 139, column: 16, scope: !18703)
!18725 = !DILocation(line: 139, column: 15, scope: !18703)
!18726 = !DILocation(line: 139, column: 7, scope: !18703)
!18727 = !DILocation(line: 151, column: 23, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18729, file: !18597, line: 151, column: 15)
!18729 = distinct !DILexicalBlock(scope: !18703, file: !18597, line: 140, column: 9)
!18730 = !DILocation(line: 151, column: 15, scope: !18728)
!18731 = !DILocation(line: 151, column: 15, scope: !18729)
!18732 = !DILocation(line: 152, column: 21, scope: !18728)
!18733 = !DILocation(line: 152, column: 13, scope: !18728)
!18734 = !DILocation(line: 155, column: 21, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18736, file: !18597, line: 155, column: 21)
!18736 = distinct !DILexicalBlock(scope: !18728, file: !18597, line: 153, column: 15)
!18737 = !DILocation(line: 155, column: 29, scope: !18735)
!18738 = !DILocation(line: 155, column: 21, scope: !18736)
!18739 = !DILocation(line: 156, column: 28, scope: !18735)
!18740 = !DILocation(line: 156, column: 19, scope: !18735)
!18741 = !DILocation(line: 157, column: 17, scope: !18736)
!18742 = !DILocation(line: 161, column: 22, scope: !18736)
!18743 = !DILocation(line: 162, column: 25, scope: !18736)
!18744 = !DILocation(line: 163, column: 17, scope: !18736)
!18745 = !DILocation(line: 164, column: 15, scope: !18736)
!18746 = !DILocation(line: 165, column: 9, scope: !18729)
!18747 = !DILocation(line: 167, column: 17, scope: !18703)
!18748 = !DILocation(line: 167, column: 16, scope: !18703)
!18749 = !DILocation(line: 167, column: 15, scope: !18703)
!18750 = !DILocation(line: 167, column: 7, scope: !18703)
!18751 = !DILocation(line: 170, column: 22, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18703, file: !18597, line: 168, column: 9)
!18753 = !DILocation(line: 170, column: 20, scope: !18752)
!18754 = !DILocation(line: 171, column: 11, scope: !18752)
!18755 = !DILocation(line: 177, column: 22, scope: !18752)
!18756 = !DILocation(line: 177, column: 20, scope: !18752)
!18757 = !DILocation(line: 178, column: 11, scope: !18752)
!18758 = !DILocation(line: 181, column: 20, scope: !18752)
!18759 = !DILocation(line: 182, column: 11, scope: !18752)
!18760 = !DILocation(line: 185, column: 48, scope: !18752)
!18761 = !DILocation(line: 185, column: 22, scope: !18752)
!18762 = !DILocation(line: 185, column: 20, scope: !18752)
!18763 = !DILocation(line: 186, column: 11, scope: !18752)
!18764 = !DILocation(line: 190, column: 48, scope: !18752)
!18765 = !DILocation(line: 190, column: 22, scope: !18752)
!18766 = !DILocation(line: 190, column: 20, scope: !18752)
!18767 = !DILocation(line: 191, column: 11, scope: !18752)
!18768 = !DILocation(line: 195, column: 48, scope: !18752)
!18769 = !DILocation(line: 195, column: 22, scope: !18752)
!18770 = !DILocation(line: 195, column: 20, scope: !18752)
!18771 = !DILocation(line: 196, column: 11, scope: !18752)
!18772 = !DILocation(line: 200, column: 48, scope: !18752)
!18773 = !DILocation(line: 200, column: 22, scope: !18752)
!18774 = !DILocation(line: 200, column: 20, scope: !18752)
!18775 = !DILocation(line: 201, column: 11, scope: !18752)
!18776 = !DILocation(line: 204, column: 48, scope: !18752)
!18777 = !DILocation(line: 204, column: 22, scope: !18752)
!18778 = !DILocation(line: 204, column: 20, scope: !18752)
!18779 = !DILocation(line: 205, column: 11, scope: !18752)
!18780 = !DILocation(line: 209, column: 48, scope: !18752)
!18781 = !DILocation(line: 209, column: 22, scope: !18752)
!18782 = !DILocation(line: 209, column: 20, scope: !18752)
!18783 = !DILocation(line: 210, column: 11, scope: !18752)
!18784 = !DILocation(line: 213, column: 22, scope: !18752)
!18785 = !DILocation(line: 213, column: 20, scope: !18752)
!18786 = !DILocation(line: 214, column: 11, scope: !18752)
!18787 = !DILocation(line: 217, column: 48, scope: !18752)
!18788 = !DILocation(line: 217, column: 22, scope: !18752)
!18789 = !DILocation(line: 217, column: 20, scope: !18752)
!18790 = !DILocation(line: 218, column: 11, scope: !18752)
!18791 = !DILocation(line: 221, column: 48, scope: !18752)
!18792 = !DILocation(line: 221, column: 22, scope: !18752)
!18793 = !DILocation(line: 221, column: 20, scope: !18752)
!18794 = !DILocation(line: 222, column: 11, scope: !18752)
!18795 = !DILocation(line: 225, column: 18, scope: !18752)
!18796 = !DILocation(line: 225, column: 12, scope: !18752)
!18797 = !DILocation(line: 225, column: 16, scope: !18752)
!18798 = !DILocation(line: 226, column: 18, scope: !18752)
!18799 = !DILocation(line: 226, column: 22, scope: !18752)
!18800 = !DILocation(line: 226, column: 11, scope: !18752)
!18801 = !DILocation(line: 229, column: 14, scope: !18703)
!18802 = !DILocation(line: 229, column: 11, scope: !18703)
!18803 = !DILocation(line: 230, column: 13, scope: !18703)
!18804 = !DILocation(line: 230, column: 8, scope: !18703)
!18805 = !DILocation(line: 230, column: 10, scope: !18703)
!18806 = !DILocation(line: 231, column: 13, scope: !18807)
!18807 = distinct !DILexicalBlock(scope: !18703, file: !18597, line: 231, column: 11)
!18808 = !DILocation(line: 231, column: 12, scope: !18807)
!18809 = !DILocation(line: 231, column: 11, scope: !18807)
!18810 = !DILocation(line: 231, column: 11, scope: !18703)
!18811 = !DILocation(line: 232, column: 13, scope: !18807)
!18812 = !DILocation(line: 232, column: 9, scope: !18807)
!18813 = !DILocation(line: 233, column: 5, scope: !18703)
!18814 = !DILocation(line: 235, column: 10, scope: !18596)
!18815 = !DILocation(line: 235, column: 4, scope: !18596)
!18816 = !DILocation(line: 235, column: 8, scope: !18596)
!18817 = !DILocation(line: 236, column: 10, scope: !18596)
!18818 = !DILocation(line: 236, column: 3, scope: !18596)
!18819 = !DILocation(line: 237, column: 1, scope: !18596)
!18820 = distinct !DISubprogram(name: "bkm_scale", scope: !18597, file: !18597, line: 48, type: !18821, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1504, retainedNodes: !295)
!18821 = !DISubroutineType(types: !18822)
!18822 = !{!1516, !18600, !5}
!18823 = !DILocalVariable(name: "x", arg: 1, scope: !18820, file: !18597, line: 48, type: !18600)
!18824 = !DILocation(line: 48, column: 24, scope: !18820)
!18825 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18820, file: !18597, line: 48, type: !5)
!18826 = !DILocation(line: 48, column: 31, scope: !18820)
!18827 = !DILocation(line: 55, column: 26, scope: !18828)
!18828 = distinct !DILexicalBlock(scope: !18820, file: !18597, line: 55, column: 7)
!18829 = !DILocation(line: 55, column: 24, scope: !18828)
!18830 = !DILocation(line: 55, column: 42, scope: !18828)
!18831 = !DILocation(line: 55, column: 41, scope: !18828)
!18832 = !DILocation(line: 55, column: 39, scope: !18828)
!18833 = !DILocation(line: 55, column: 7, scope: !18820)
!18834 = !DILocation(line: 57, column: 8, scope: !18835)
!18835 = distinct !DILexicalBlock(scope: !18828, file: !18597, line: 56, column: 5)
!18836 = !DILocation(line: 57, column: 10, scope: !18835)
!18837 = !DILocation(line: 58, column: 7, scope: !18835)
!18838 = !DILocation(line: 60, column: 9, scope: !18820)
!18839 = !DILocation(line: 60, column: 4, scope: !18820)
!18840 = !DILocation(line: 60, column: 6, scope: !18820)
!18841 = !DILocation(line: 61, column: 3, scope: !18820)
!18842 = !DILocation(line: 62, column: 1, scope: !18820)
!18843 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !18597, file: !18597, line: 65, type: !18844, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1504, retainedNodes: !295)
!18844 = !DISubroutineType(types: !18845)
!18845 = !{!1516, !18600, !5, !5}
!18846 = !DILocalVariable(name: "x", arg: 1, scope: !18843, file: !18597, line: 65, type: !18600)
!18847 = !DILocation(line: 65, column: 33, scope: !18843)
!18848 = !DILocalVariable(name: "base", arg: 2, scope: !18843, file: !18597, line: 65, type: !5)
!18849 = !DILocation(line: 65, column: 40, scope: !18843)
!18850 = !DILocalVariable(name: "power", arg: 3, scope: !18843, file: !18597, line: 65, type: !5)
!18851 = !DILocation(line: 65, column: 50, scope: !18843)
!18852 = !DILocalVariable(name: "err", scope: !18843, file: !18597, line: 67, type: !1516)
!18853 = !DILocation(line: 67, column: 16, scope: !18843)
!18854 = !DILocation(line: 68, column: 3, scope: !18843)
!18855 = !DILocation(line: 68, column: 15, scope: !18843)
!18856 = !DILocation(line: 69, column: 23, scope: !18843)
!18857 = !DILocation(line: 69, column: 26, scope: !18843)
!18858 = !DILocation(line: 69, column: 12, scope: !18843)
!18859 = !DILocation(line: 69, column: 9, scope: !18843)
!18860 = distinct !{!18860, !18854, !18861}
!18861 = !DILocation(line: 69, column: 30, scope: !18843)
!18862 = !DILocation(line: 70, column: 10, scope: !18843)
!18863 = !DILocation(line: 70, column: 3, scope: !18843)
!18864 = distinct !DISubprogram(name: "yesno", scope: !18865, file: !18865, line: 32, type: !1113, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1517, retainedNodes: !295)
!18865 = !DIFile(filename: "lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!18866 = !DILocalVariable(name: "yes", scope: !18864, file: !18865, line: 34, type: !139)
!18867 = !DILocation(line: 34, column: 8, scope: !18864)
!18868 = !DILocalVariable(name: "response", scope: !18864, file: !18865, line: 37, type: !7)
!18869 = !DILocation(line: 37, column: 9, scope: !18864)
!18870 = !DILocalVariable(name: "response_size", scope: !18864, file: !18865, line: 38, type: !52)
!18871 = !DILocation(line: 38, column: 10, scope: !18864)
!18872 = !DILocalVariable(name: "response_len", scope: !18864, file: !18865, line: 39, type: !661)
!18873 = !DILocation(line: 39, column: 11, scope: !18864)
!18874 = !DILocation(line: 39, column: 62, scope: !18864)
!18875 = !DILocation(line: 39, column: 26, scope: !18864)
!18876 = !DILocation(line: 41, column: 7, scope: !18877)
!18877 = distinct !DILexicalBlock(scope: !18864, file: !18865, line: 41, column: 7)
!18878 = !DILocation(line: 41, column: 20, scope: !18877)
!18879 = !DILocation(line: 41, column: 7, scope: !18864)
!18880 = !DILocation(line: 42, column: 9, scope: !18877)
!18881 = !DILocation(line: 42, column: 5, scope: !18877)
!18882 = !DILocation(line: 47, column: 11, scope: !18883)
!18883 = distinct !DILexicalBlock(scope: !18884, file: !18865, line: 47, column: 11)
!18884 = distinct !DILexicalBlock(scope: !18877, file: !18865, line: 44, column: 5)
!18885 = !DILocation(line: 47, column: 20, scope: !18883)
!18886 = !DILocation(line: 47, column: 33, scope: !18883)
!18887 = !DILocation(line: 47, column: 38, scope: !18883)
!18888 = !DILocation(line: 47, column: 11, scope: !18884)
!18889 = !DILocation(line: 48, column: 9, scope: !18883)
!18890 = !DILocation(line: 48, column: 18, scope: !18883)
!18891 = !DILocation(line: 48, column: 31, scope: !18883)
!18892 = !DILocation(line: 48, column: 36, scope: !18883)
!18893 = !DILocation(line: 49, column: 27, scope: !18884)
!18894 = !DILocation(line: 49, column: 18, scope: !18884)
!18895 = !DILocation(line: 49, column: 16, scope: !18884)
!18896 = !DILocation(line: 49, column: 11, scope: !18884)
!18897 = !DILocation(line: 52, column: 9, scope: !18864)
!18898 = !DILocation(line: 52, column: 3, scope: !18864)
!18899 = !DILocation(line: 62, column: 10, scope: !18864)
!18900 = !DILocation(line: 62, column: 3, scope: !18864)
!18901 = distinct !DISubprogram(name: "rpl_fflush", scope: !18902, file: !18902, line: 129, type: !18903, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !295)
!18902 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!18903 = !DISubroutineType(types: !18904)
!18904 = !{!5, !18905}
!18905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!18906 = !DILocalVariable(name: "stream", arg: 1, scope: !18901, file: !18902, line: 129, type: !18905)
!18907 = !DILocation(line: 129, column: 19, scope: !18901)
!18908 = !DILocation(line: 150, column: 7, scope: !18909)
!18909 = distinct !DILexicalBlock(scope: !18901, file: !18902, line: 150, column: 7)
!18910 = !DILocation(line: 150, column: 14, scope: !18909)
!18911 = !DILocation(line: 150, column: 22, scope: !18909)
!18912 = !DILocation(line: 150, column: 27, scope: !18909)
!18913 = !DILocation(line: 150, column: 7, scope: !18901)
!18914 = !DILocation(line: 151, column: 20, scope: !18909)
!18915 = !DILocation(line: 151, column: 12, scope: !18909)
!18916 = !DILocation(line: 151, column: 5, scope: !18909)
!18917 = !DILocation(line: 156, column: 44, scope: !18901)
!18918 = !DILocation(line: 156, column: 3, scope: !18901)
!18919 = !DILocation(line: 158, column: 18, scope: !18901)
!18920 = !DILocation(line: 158, column: 10, scope: !18901)
!18921 = !DILocation(line: 158, column: 3, scope: !18901)
!18922 = !DILocation(line: 232, column: 1, scope: !18901)
!18923 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !18902, file: !18902, line: 41, type: !18924, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !295)
!18924 = !DISubroutineType(types: !18925)
!18925 = !{null, !18905}
!18926 = !DILocalVariable(name: "fp", arg: 1, scope: !18923, file: !18902, line: 41, type: !18905)
!18927 = !DILocation(line: 41, column: 48, scope: !18923)
!18928 = !DILocation(line: 43, column: 7, scope: !18929)
!18929 = distinct !DILexicalBlock(scope: !18923, file: !18902, line: 43, column: 7)
!18930 = !DILocation(line: 43, column: 11, scope: !18929)
!18931 = !DILocation(line: 43, column: 18, scope: !18929)
!18932 = !DILocation(line: 43, column: 7, scope: !18923)
!18933 = !DILocation(line: 45, column: 13, scope: !18929)
!18934 = !DILocation(line: 45, column: 5, scope: !18929)
!18935 = !DILocation(line: 46, column: 1, scope: !18923)
!18936 = distinct !DISubprogram(name: "freadahead", scope: !18937, file: !18937, line: 34, type: !18938, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1600, retainedNodes: !295)
!18937 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!18938 = !DISubroutineType(types: !18939)
!18939 = !{!52, !18940}
!18940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!18941 = !DILocalVariable(name: "fp", arg: 1, scope: !18936, file: !18937, line: 34, type: !18940)
!18942 = !DILocation(line: 34, column: 19, scope: !18936)
!18943 = !DILocation(line: 38, column: 7, scope: !18944)
!18944 = distinct !DILexicalBlock(scope: !18936, file: !18937, line: 38, column: 7)
!18945 = !DILocation(line: 38, column: 11, scope: !18944)
!18946 = !DILocation(line: 38, column: 27, scope: !18944)
!18947 = !DILocation(line: 38, column: 31, scope: !18944)
!18948 = !DILocation(line: 38, column: 25, scope: !18944)
!18949 = !DILocation(line: 38, column: 7, scope: !18936)
!18950 = !DILocation(line: 39, column: 5, scope: !18944)
!18951 = !DILocation(line: 40, column: 11, scope: !18936)
!18952 = !DILocation(line: 40, column: 15, scope: !18936)
!18953 = !DILocation(line: 40, column: 30, scope: !18936)
!18954 = !DILocation(line: 40, column: 34, scope: !18936)
!18955 = !DILocation(line: 40, column: 28, scope: !18936)
!18956 = !DILocation(line: 41, column: 13, scope: !18936)
!18957 = !DILocation(line: 41, column: 17, scope: !18936)
!18958 = !DILocation(line: 41, column: 24, scope: !18936)
!18959 = !DILocation(line: 41, column: 42, scope: !18936)
!18960 = !DILocation(line: 41, column: 46, scope: !18936)
!18961 = !DILocation(line: 41, column: 61, scope: !18936)
!18962 = !DILocation(line: 41, column: 65, scope: !18936)
!18963 = !DILocation(line: 41, column: 59, scope: !18936)
!18964 = !DILocation(line: 41, column: 10, scope: !18936)
!18965 = !DILocation(line: 40, column: 3, scope: !18936)
!18966 = !DILocation(line: 103, column: 1, scope: !18936)
!18967 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18968, file: !18968, line: 28, type: !18969, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1642, retainedNodes: !295)
!18968 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!18969 = !DISubroutineType(types: !18970)
!18970 = !{!5, !18971, !437, !5}
!18971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!18972 = !DILocalVariable(name: "fp", arg: 1, scope: !18967, file: !18968, line: 28, type: !18971)
!18973 = !DILocation(line: 28, column: 15, scope: !18967)
!18974 = !DILocalVariable(name: "offset", arg: 2, scope: !18967, file: !18968, line: 28, type: !437)
!18975 = !DILocation(line: 28, column: 25, scope: !18967)
!18976 = !DILocalVariable(name: "whence", arg: 3, scope: !18967, file: !18968, line: 28, type: !5)
!18977 = !DILocation(line: 28, column: 37, scope: !18967)
!18978 = !DILocation(line: 52, column: 7, scope: !18979)
!18979 = distinct !DILexicalBlock(scope: !18967, file: !18968, line: 52, column: 7)
!18980 = !DILocation(line: 52, column: 11, scope: !18979)
!18981 = !DILocation(line: 52, column: 27, scope: !18979)
!18982 = !DILocation(line: 52, column: 31, scope: !18979)
!18983 = !DILocation(line: 52, column: 24, scope: !18979)
!18984 = !DILocation(line: 53, column: 7, scope: !18979)
!18985 = !DILocation(line: 53, column: 10, scope: !18979)
!18986 = !DILocation(line: 53, column: 14, scope: !18979)
!18987 = !DILocation(line: 53, column: 31, scope: !18979)
!18988 = !DILocation(line: 53, column: 35, scope: !18979)
!18989 = !DILocation(line: 53, column: 28, scope: !18979)
!18990 = !DILocation(line: 54, column: 7, scope: !18979)
!18991 = !DILocation(line: 54, column: 10, scope: !18979)
!18992 = !DILocation(line: 54, column: 14, scope: !18979)
!18993 = !DILocation(line: 54, column: 28, scope: !18979)
!18994 = !DILocation(line: 52, column: 7, scope: !18967)
!18995 = !DILocalVariable(name: "pos", scope: !18996, file: !18968, line: 117, type: !437)
!18996 = distinct !DILexicalBlock(scope: !18979, file: !18968, line: 113, column: 5)
!18997 = !DILocation(line: 117, column: 13, scope: !18996)
!18998 = !DILocation(line: 117, column: 34, scope: !18996)
!18999 = !DILocation(line: 117, column: 26, scope: !18996)
!19000 = !DILocation(line: 117, column: 39, scope: !18996)
!19001 = !DILocation(line: 117, column: 47, scope: !18996)
!19002 = !DILocation(line: 117, column: 19, scope: !18996)
!19003 = !DILocation(line: 118, column: 11, scope: !19004)
!19004 = distinct !DILexicalBlock(scope: !18996, file: !18968, line: 118, column: 11)
!19005 = !DILocation(line: 118, column: 15, scope: !19004)
!19006 = !DILocation(line: 118, column: 11, scope: !18996)
!19007 = !DILocation(line: 124, column: 11, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !19004, file: !18968, line: 119, column: 9)
!19009 = !DILocation(line: 129, column: 7, scope: !18996)
!19010 = !DILocation(line: 129, column: 11, scope: !18996)
!19011 = !DILocation(line: 129, column: 18, scope: !18996)
!19012 = !DILocation(line: 130, column: 21, scope: !18996)
!19013 = !DILocation(line: 130, column: 7, scope: !18996)
!19014 = !DILocation(line: 130, column: 11, scope: !18996)
!19015 = !DILocation(line: 130, column: 19, scope: !18996)
!19016 = !DILocation(line: 161, column: 7, scope: !18996)
!19017 = !DILocation(line: 163, column: 18, scope: !18967)
!19018 = !DILocation(line: 163, column: 22, scope: !18967)
!19019 = !DILocation(line: 163, column: 30, scope: !18967)
!19020 = !DILocation(line: 163, column: 10, scope: !18967)
!19021 = !DILocation(line: 163, column: 3, scope: !18967)
!19022 = !DILocation(line: 164, column: 1, scope: !18967)
!19023 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !19024, file: !19024, line: 461, type: !19025, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1684, retainedNodes: !295)
!19024 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!52, !19027, !180, !52, !19028}
!19027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!19028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19029, size: 64)
!19029 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !945, line: 106, baseType: !19030)
!19030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !945, line: 94, baseType: !19031)
!19031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 82, size: 64, elements: !19032)
!19032 = !{!19033, !19034}
!19033 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !19031, file: !945, line: 84, baseType: !5, size: 32)
!19034 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !19031, file: !945, line: 93, baseType: !19035, size: 32, offset: 32)
!19035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19031, file: !945, line: 85, size: 32, elements: !19036)
!19036 = !{!19037, !19038}
!19037 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !19035, file: !945, line: 88, baseType: !67, size: 32)
!19038 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !19035, file: !945, line: 92, baseType: !308, size: 32)
!19039 = !DILocalVariable(name: "pwc", arg: 1, scope: !19023, file: !19024, line: 461, type: !19027)
!19040 = !DILocation(line: 461, column: 23, scope: !19023)
!19041 = !DILocalVariable(name: "s", arg: 2, scope: !19023, file: !19024, line: 461, type: !180)
!19042 = !DILocation(line: 461, column: 40, scope: !19023)
!19043 = !DILocalVariable(name: "n", arg: 3, scope: !19023, file: !19024, line: 461, type: !52)
!19044 = !DILocation(line: 461, column: 50, scope: !19023)
!19045 = !DILocalVariable(name: "ps", arg: 4, scope: !19023, file: !19024, line: 461, type: !19028)
!19046 = !DILocation(line: 461, column: 64, scope: !19023)
!19047 = !DILocalVariable(name: "ret", scope: !19023, file: !19024, line: 463, type: !52)
!19048 = !DILocation(line: 463, column: 10, scope: !19023)
!19049 = !DILocalVariable(name: "wc", scope: !19023, file: !19024, line: 464, type: !955)
!19050 = !DILocation(line: 464, column: 11, scope: !19023)
!19051 = !DILocation(line: 480, column: 9, scope: !19052)
!19052 = distinct !DILexicalBlock(scope: !19023, file: !19024, line: 480, column: 7)
!19053 = !DILocation(line: 480, column: 7, scope: !19023)
!19054 = !DILocation(line: 481, column: 9, scope: !19052)
!19055 = !DILocation(line: 481, column: 5, scope: !19052)
!19056 = !DILocation(line: 515, column: 18, scope: !19023)
!19057 = !DILocation(line: 515, column: 23, scope: !19023)
!19058 = !DILocation(line: 515, column: 26, scope: !19023)
!19059 = !DILocation(line: 515, column: 29, scope: !19023)
!19060 = !DILocation(line: 515, column: 9, scope: !19023)
!19061 = !DILocation(line: 515, column: 7, scope: !19023)
!19062 = !DILocation(line: 523, column: 22, scope: !19063)
!19063 = distinct !DILexicalBlock(scope: !19023, file: !19024, line: 523, column: 7)
!19064 = !DILocation(line: 523, column: 19, scope: !19063)
!19065 = !DILocation(line: 523, column: 26, scope: !19063)
!19066 = !DILocation(line: 523, column: 29, scope: !19063)
!19067 = !DILocation(line: 523, column: 31, scope: !19063)
!19068 = !DILocation(line: 523, column: 36, scope: !19063)
!19069 = !DILocation(line: 523, column: 41, scope: !19063)
!19070 = !DILocation(line: 523, column: 7, scope: !19023)
!19071 = !DILocalVariable(name: "uc", scope: !19072, file: !19024, line: 525, type: !585)
!19072 = distinct !DILexicalBlock(scope: !19063, file: !19024, line: 524, column: 5)
!19073 = !DILocation(line: 525, column: 21, scope: !19072)
!19074 = !DILocation(line: 525, column: 27, scope: !19072)
!19075 = !DILocation(line: 525, column: 26, scope: !19072)
!19076 = !DILocation(line: 526, column: 14, scope: !19072)
!19077 = !DILocation(line: 526, column: 8, scope: !19072)
!19078 = !DILocation(line: 526, column: 12, scope: !19072)
!19079 = !DILocation(line: 527, column: 7, scope: !19072)
!19080 = !DILocation(line: 531, column: 10, scope: !19023)
!19081 = !DILocation(line: 531, column: 3, scope: !19023)
!19082 = !DILocation(line: 532, column: 1, scope: !19023)
!19083 = distinct !DISubprogram(name: "free_permission_context", scope: !19084, file: !19084, line: 479, type: !19085, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1687, retainedNodes: !295)
!19084 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!19085 = !DISubroutineType(types: !19086)
!19086 = !{null, !19087}
!19087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19088, size: 64)
!19088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13473, line: 260, size: 32, elements: !19089)
!19089 = !{!19090}
!19090 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19088, file: !13473, line: 261, baseType: !136, size: 32)
!19091 = !DILocalVariable(name: "ctx", arg: 1, scope: !19083, file: !19084, line: 479, type: !19087)
!19092 = !DILocation(line: 479, column: 53, scope: !19083)
!19093 = !DILocation(line: 507, column: 1, scope: !19083)
!19094 = distinct !DISubprogram(name: "get_permissions", scope: !19095, file: !19095, line: 33, type: !19096, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1689, retainedNodes: !295)
!19095 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!19096 = !DISubroutineType(types: !19097)
!19097 = !{!5, !180, !5, !136, !19098}
!19098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19099, size: 64)
!19099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13473, line: 260, size: 32, elements: !19100)
!19100 = !{!19101}
!19101 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19099, file: !13473, line: 261, baseType: !136, size: 32)
!19102 = !DILocalVariable(name: "name", arg: 1, scope: !19094, file: !19095, line: 33, type: !180)
!19103 = !DILocation(line: 33, column: 30, scope: !19094)
!19104 = !DILocalVariable(name: "desc", arg: 2, scope: !19094, file: !19095, line: 33, type: !5)
!19105 = !DILocation(line: 33, column: 40, scope: !19094)
!19106 = !DILocalVariable(name: "mode", arg: 3, scope: !19094, file: !19095, line: 33, type: !136)
!19107 = !DILocation(line: 33, column: 53, scope: !19094)
!19108 = !DILocalVariable(name: "ctx", arg: 4, scope: !19094, file: !19095, line: 34, type: !19098)
!19109 = !DILocation(line: 34, column: 45, scope: !19094)
!19110 = !DILocation(line: 36, column: 11, scope: !19094)
!19111 = !DILocation(line: 36, column: 3, scope: !19094)
!19112 = !DILocation(line: 37, column: 15, scope: !19094)
!19113 = !DILocation(line: 37, column: 3, scope: !19094)
!19114 = !DILocation(line: 37, column: 8, scope: !19094)
!19115 = !DILocation(line: 37, column: 13, scope: !19094)
!19116 = !DILocation(line: 289, column: 3, scope: !19094)
!19117 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !19118, file: !19118, line: 760, type: !8795, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1691, retainedNodes: !295)
!19118 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!19119 = !DILocalVariable(name: "name", arg: 1, scope: !19117, file: !19118, line: 760, type: !180)
!19120 = !DILocation(line: 760, column: 30, scope: !19117)
!19121 = !DILocalVariable(name: "desc", arg: 2, scope: !19117, file: !19118, line: 760, type: !5)
!19122 = !DILocation(line: 760, column: 40, scope: !19117)
!19123 = !DILocalVariable(name: "mode", arg: 3, scope: !19117, file: !19118, line: 760, type: !136)
!19124 = !DILocation(line: 760, column: 53, scope: !19117)
!19125 = !DILocation(line: 762, column: 22, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19117, file: !19118, line: 762, column: 7)
!19127 = !DILocation(line: 762, column: 27, scope: !19126)
!19128 = !DILocation(line: 762, column: 7, scope: !19117)
!19129 = !DILocation(line: 763, column: 20, scope: !19126)
!19130 = !DILocation(line: 763, column: 26, scope: !19126)
!19131 = !DILocation(line: 763, column: 12, scope: !19126)
!19132 = !DILocation(line: 763, column: 5, scope: !19126)
!19133 = !DILocation(line: 765, column: 19, scope: !19126)
!19134 = !DILocation(line: 765, column: 25, scope: !19126)
!19135 = !DILocation(line: 765, column: 12, scope: !19126)
!19136 = !DILocation(line: 765, column: 5, scope: !19126)
!19137 = !DILocation(line: 766, column: 1, scope: !19117)
!19138 = distinct !DISubprogram(name: "set_permissions", scope: !19118, file: !19118, line: 776, type: !19139, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1691, retainedNodes: !295)
!19139 = !DISubroutineType(types: !19140)
!19140 = !{!5, !19141, !180, !5}
!19141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19142, size: 64)
!19142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13473, line: 260, size: 32, elements: !19143)
!19143 = !{!19144}
!19144 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19142, file: !13473, line: 261, baseType: !136, size: 32)
!19145 = !DILocalVariable(name: "ctx", arg: 1, scope: !19138, file: !19118, line: 776, type: !19141)
!19146 = !DILocation(line: 776, column: 45, scope: !19138)
!19147 = !DILocalVariable(name: "name", arg: 2, scope: !19138, file: !19118, line: 776, type: !180)
!19148 = !DILocation(line: 776, column: 62, scope: !19138)
!19149 = !DILocalVariable(name: "desc", arg: 3, scope: !19138, file: !19118, line: 776, type: !5)
!19150 = !DILocation(line: 776, column: 72, scope: !19138)
!19151 = !DILocalVariable(name: "acls_set", scope: !19138, file: !19118, line: 778, type: !139)
!19152 = !DILocation(line: 778, column: 8, scope: !19138)
!19153 = !DILocalVariable(name: "early_chmod", scope: !19138, file: !19118, line: 779, type: !139)
!19154 = !DILocation(line: 779, column: 8, scope: !19138)
!19155 = !DILocalVariable(name: "must_chmod", scope: !19138, file: !19118, line: 780, type: !139)
!19156 = !DILocation(line: 780, column: 8, scope: !19138)
!19157 = !DILocalVariable(name: "ret", scope: !19138, file: !19118, line: 781, type: !5)
!19158 = !DILocation(line: 781, column: 7, scope: !19138)
!19159 = !DILocation(line: 801, column: 15, scope: !19138)
!19160 = !DILocation(line: 804, column: 7, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19138, file: !19118, line: 804, column: 7)
!19162 = !DILocation(line: 804, column: 7, scope: !19138)
!19163 = !DILocation(line: 806, column: 30, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19161, file: !19118, line: 805, column: 5)
!19165 = !DILocation(line: 806, column: 36, scope: !19164)
!19166 = !DILocation(line: 806, column: 42, scope: !19164)
!19167 = !DILocation(line: 806, column: 47, scope: !19164)
!19168 = !DILocation(line: 806, column: 13, scope: !19164)
!19169 = !DILocation(line: 806, column: 11, scope: !19164)
!19170 = !DILocation(line: 807, column: 11, scope: !19171)
!19171 = distinct !DILexicalBlock(scope: !19164, file: !19118, line: 807, column: 11)
!19172 = !DILocation(line: 807, column: 15, scope: !19171)
!19173 = !DILocation(line: 807, column: 11, scope: !19164)
!19174 = !DILocation(line: 808, column: 9, scope: !19171)
!19175 = !DILocation(line: 809, column: 5, scope: !19164)
!19176 = !DILocation(line: 833, column: 7, scope: !19177)
!19177 = distinct !DILexicalBlock(scope: !19138, file: !19118, line: 833, column: 7)
!19178 = !DILocation(line: 833, column: 18, scope: !19177)
!19179 = !DILocation(line: 833, column: 23, scope: !19177)
!19180 = !DILocation(line: 833, column: 7, scope: !19138)
!19181 = !DILocalVariable(name: "saved_errno", scope: !19182, file: !19118, line: 835, type: !5)
!19182 = distinct !DILexicalBlock(scope: !19177, file: !19118, line: 834, column: 5)
!19183 = !DILocation(line: 835, column: 11, scope: !19182)
!19184 = !DILocation(line: 835, column: 25, scope: !19182)
!19185 = !DILocation(line: 835, column: 31, scope: !19182)
!19186 = !DILocation(line: 837, column: 30, scope: !19182)
!19187 = !DILocation(line: 837, column: 36, scope: !19182)
!19188 = !DILocation(line: 837, column: 42, scope: !19182)
!19189 = !DILocation(line: 837, column: 47, scope: !19182)
!19190 = !DILocation(line: 837, column: 13, scope: !19182)
!19191 = !DILocation(line: 837, column: 11, scope: !19182)
!19192 = !DILocation(line: 839, column: 11, scope: !19193)
!19193 = distinct !DILexicalBlock(scope: !19182, file: !19118, line: 839, column: 11)
!19194 = !DILocation(line: 839, column: 11, scope: !19182)
!19195 = !DILocation(line: 841, column: 19, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !19193, file: !19118, line: 840, column: 9)
!19197 = !DILocation(line: 841, column: 11, scope: !19196)
!19198 = !DILocation(line: 841, column: 17, scope: !19196)
!19199 = !DILocation(line: 842, column: 15, scope: !19196)
!19200 = !DILocation(line: 843, column: 9, scope: !19196)
!19201 = !DILocation(line: 844, column: 5, scope: !19182)
!19202 = !DILocation(line: 846, column: 10, scope: !19138)
!19203 = !DILocation(line: 846, column: 3, scope: !19138)
!19204 = !DILocation(line: 847, column: 1, scope: !19138)
!19205 = distinct !DISubprogram(name: "__argmatch_die", scope: !1165, file: !1165, line: 60, type: !694, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19206 = !DILocation(line: 62, column: 3, scope: !19205)
!19207 = !DILocation(line: 63, column: 1, scope: !19205)
!19208 = distinct !DISubprogram(name: "argmatch", scope: !1165, file: !1165, line: 82, type: !19209, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19209 = !DISubroutineType(types: !19210)
!19210 = !{!627, !180, !1125, !685, !52}
!19211 = !DILocalVariable(name: "arg", arg: 1, scope: !19208, file: !1165, line: 82, type: !180)
!19212 = !DILocation(line: 82, column: 23, scope: !19208)
!19213 = !DILocalVariable(name: "arglist", arg: 2, scope: !19208, file: !1165, line: 82, type: !1125)
!19214 = !DILocation(line: 82, column: 47, scope: !19208)
!19215 = !DILocalVariable(name: "vallist", arg: 3, scope: !19208, file: !1165, line: 83, type: !685)
!19216 = !DILocation(line: 83, column: 23, scope: !19208)
!19217 = !DILocalVariable(name: "valsize", arg: 4, scope: !19208, file: !1165, line: 83, type: !52)
!19218 = !DILocation(line: 83, column: 39, scope: !19208)
!19219 = !DILocalVariable(name: "i", scope: !19208, file: !1165, line: 85, type: !52)
!19220 = !DILocation(line: 85, column: 10, scope: !19208)
!19221 = !DILocalVariable(name: "arglen", scope: !19208, file: !1165, line: 86, type: !52)
!19222 = !DILocation(line: 86, column: 10, scope: !19208)
!19223 = !DILocalVariable(name: "matchind", scope: !19208, file: !1165, line: 87, type: !627)
!19224 = !DILocation(line: 87, column: 13, scope: !19208)
!19225 = !DILocalVariable(name: "ambiguous", scope: !19208, file: !1165, line: 88, type: !139)
!19226 = !DILocation(line: 88, column: 8, scope: !19208)
!19227 = !DILocation(line: 90, column: 20, scope: !19208)
!19228 = !DILocation(line: 90, column: 12, scope: !19208)
!19229 = !DILocation(line: 90, column: 10, scope: !19208)
!19230 = !DILocation(line: 93, column: 10, scope: !19231)
!19231 = distinct !DILexicalBlock(scope: !19208, file: !1165, line: 93, column: 3)
!19232 = !DILocation(line: 93, column: 8, scope: !19231)
!19233 = !DILocation(line: 93, column: 15, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19231, file: !1165, line: 93, column: 3)
!19235 = !DILocation(line: 93, column: 23, scope: !19234)
!19236 = !DILocation(line: 93, column: 3, scope: !19231)
!19237 = !DILocation(line: 95, column: 21, scope: !19238)
!19238 = distinct !DILexicalBlock(scope: !19239, file: !1165, line: 95, column: 11)
!19239 = distinct !DILexicalBlock(scope: !19234, file: !1165, line: 94, column: 5)
!19240 = !DILocation(line: 95, column: 29, scope: !19238)
!19241 = !DILocation(line: 95, column: 33, scope: !19238)
!19242 = !DILocation(line: 95, column: 38, scope: !19238)
!19243 = !DILocation(line: 95, column: 12, scope: !19238)
!19244 = !DILocation(line: 95, column: 11, scope: !19239)
!19245 = !DILocation(line: 97, column: 23, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19247, file: !1165, line: 97, column: 15)
!19247 = distinct !DILexicalBlock(scope: !19238, file: !1165, line: 96, column: 9)
!19248 = !DILocation(line: 97, column: 31, scope: !19246)
!19249 = !DILocation(line: 97, column: 15, scope: !19246)
!19250 = !DILocation(line: 97, column: 38, scope: !19246)
!19251 = !DILocation(line: 97, column: 35, scope: !19246)
!19252 = !DILocation(line: 97, column: 15, scope: !19247)
!19253 = !DILocation(line: 99, column: 20, scope: !19246)
!19254 = !DILocation(line: 99, column: 13, scope: !19246)
!19255 = !DILocation(line: 100, column: 20, scope: !19256)
!19256 = distinct !DILexicalBlock(scope: !19246, file: !1165, line: 100, column: 20)
!19257 = !DILocation(line: 100, column: 29, scope: !19256)
!19258 = !DILocation(line: 100, column: 20, scope: !19246)
!19259 = !DILocation(line: 102, column: 24, scope: !19256)
!19260 = !DILocation(line: 102, column: 22, scope: !19256)
!19261 = !DILocation(line: 102, column: 13, scope: !19256)
!19262 = !DILocation(line: 106, column: 19, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19264, file: !1165, line: 106, column: 19)
!19264 = distinct !DILexicalBlock(scope: !19256, file: !1165, line: 104, column: 13)
!19265 = !DILocation(line: 106, column: 27, scope: !19263)
!19266 = !DILocation(line: 107, column: 19, scope: !19263)
!19267 = !DILocation(line: 107, column: 45, scope: !19263)
!19268 = !DILocation(line: 107, column: 55, scope: !19263)
!19269 = !DILocation(line: 107, column: 65, scope: !19263)
!19270 = !DILocation(line: 107, column: 63, scope: !19263)
!19271 = !DILocation(line: 107, column: 53, scope: !19263)
!19272 = !DILocation(line: 108, column: 45, scope: !19263)
!19273 = !DILocation(line: 108, column: 55, scope: !19263)
!19274 = !DILocation(line: 108, column: 65, scope: !19263)
!19275 = !DILocation(line: 108, column: 63, scope: !19263)
!19276 = !DILocation(line: 108, column: 53, scope: !19263)
!19277 = !DILocation(line: 108, column: 68, scope: !19263)
!19278 = !DILocation(line: 107, column: 22, scope: !19263)
!19279 = !DILocation(line: 106, column: 19, scope: !19264)
!19280 = !DILocation(line: 112, column: 29, scope: !19281)
!19281 = distinct !DILexicalBlock(scope: !19263, file: !1165, line: 109, column: 17)
!19282 = !DILocation(line: 113, column: 17, scope: !19281)
!19283 = !DILocation(line: 115, column: 9, scope: !19247)
!19284 = !DILocation(line: 116, column: 5, scope: !19239)
!19285 = !DILocation(line: 93, column: 28, scope: !19234)
!19286 = !DILocation(line: 93, column: 3, scope: !19234)
!19287 = distinct !{!19287, !19236, !19288}
!19288 = !DILocation(line: 116, column: 5, scope: !19231)
!19289 = !DILocation(line: 117, column: 7, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19208, file: !1165, line: 117, column: 7)
!19291 = !DILocation(line: 117, column: 7, scope: !19208)
!19292 = !DILocation(line: 118, column: 5, scope: !19290)
!19293 = !DILocation(line: 120, column: 12, scope: !19290)
!19294 = !DILocation(line: 120, column: 5, scope: !19290)
!19295 = !DILocation(line: 121, column: 1, scope: !19208)
!19296 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1165, file: !1165, line: 129, type: !19297, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19297 = !DISubroutineType(types: !19298)
!19298 = !{null, !180, !180, !627}
!19299 = !DILocalVariable(name: "context", arg: 1, scope: !19296, file: !1165, line: 129, type: !180)
!19300 = !DILocation(line: 129, column: 31, scope: !19296)
!19301 = !DILocalVariable(name: "value", arg: 2, scope: !19296, file: !1165, line: 129, type: !180)
!19302 = !DILocation(line: 129, column: 52, scope: !19296)
!19303 = !DILocalVariable(name: "problem", arg: 3, scope: !19296, file: !1165, line: 129, type: !627)
!19304 = !DILocation(line: 129, column: 69, scope: !19296)
!19305 = !DILocalVariable(name: "format", scope: !19296, file: !1165, line: 131, type: !180)
!19306 = !DILocation(line: 131, column: 15, scope: !19296)
!19307 = !DILocation(line: 131, column: 25, scope: !19296)
!19308 = !DILocation(line: 131, column: 33, scope: !19296)
!19309 = !DILocation(line: 132, column: 27, scope: !19296)
!19310 = !DILocation(line: 133, column: 27, scope: !19296)
!19311 = !DILocation(line: 135, column: 16, scope: !19296)
!19312 = !DILocation(line: 135, column: 69, scope: !19296)
!19313 = !DILocation(line: 135, column: 24, scope: !19296)
!19314 = !DILocation(line: 136, column: 22, scope: !19296)
!19315 = !DILocation(line: 136, column: 10, scope: !19296)
!19316 = !DILocation(line: 135, column: 3, scope: !19296)
!19317 = !DILocation(line: 137, column: 1, scope: !19296)
!19318 = distinct !DISubprogram(name: "argmatch_valid", scope: !1165, file: !1165, line: 144, type: !19319, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19319 = !DISubroutineType(types: !19320)
!19320 = !{null, !1125, !685, !52}
!19321 = !DILocalVariable(name: "arglist", arg: 1, scope: !19318, file: !1165, line: 144, type: !1125)
!19322 = !DILocation(line: 144, column: 36, scope: !19318)
!19323 = !DILocalVariable(name: "vallist", arg: 2, scope: !19318, file: !1165, line: 145, type: !685)
!19324 = !DILocation(line: 145, column: 29, scope: !19318)
!19325 = !DILocalVariable(name: "valsize", arg: 3, scope: !19318, file: !1165, line: 145, type: !52)
!19326 = !DILocation(line: 145, column: 45, scope: !19318)
!19327 = !DILocalVariable(name: "i", scope: !19318, file: !1165, line: 147, type: !52)
!19328 = !DILocation(line: 147, column: 10, scope: !19318)
!19329 = !DILocalVariable(name: "last_val", scope: !19318, file: !1165, line: 148, type: !180)
!19330 = !DILocation(line: 148, column: 15, scope: !19318)
!19331 = !DILocation(line: 152, column: 3, scope: !19318)
!19332 = !DILocation(line: 153, column: 10, scope: !19333)
!19333 = distinct !DILexicalBlock(scope: !19318, file: !1165, line: 153, column: 3)
!19334 = !DILocation(line: 153, column: 8, scope: !19333)
!19335 = !DILocation(line: 153, column: 15, scope: !19336)
!19336 = distinct !DILexicalBlock(scope: !19333, file: !1165, line: 153, column: 3)
!19337 = !DILocation(line: 153, column: 23, scope: !19336)
!19338 = !DILocation(line: 153, column: 3, scope: !19333)
!19339 = !DILocation(line: 154, column: 10, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19336, file: !1165, line: 154, column: 9)
!19341 = !DILocation(line: 154, column: 12, scope: !19340)
!19342 = !DILocation(line: 155, column: 9, scope: !19340)
!19343 = !DILocation(line: 155, column: 20, scope: !19340)
!19344 = !DILocation(line: 155, column: 45, scope: !19340)
!19345 = !DILocation(line: 155, column: 55, scope: !19340)
!19346 = !DILocation(line: 155, column: 65, scope: !19340)
!19347 = !DILocation(line: 155, column: 63, scope: !19340)
!19348 = !DILocation(line: 155, column: 53, scope: !19340)
!19349 = !DILocation(line: 155, column: 68, scope: !19340)
!19350 = !DILocation(line: 155, column: 12, scope: !19340)
!19351 = !DILocation(line: 154, column: 9, scope: !19336)
!19352 = !DILocation(line: 157, column: 18, scope: !19353)
!19353 = distinct !DILexicalBlock(scope: !19340, file: !1165, line: 156, column: 7)
!19354 = !DILocation(line: 157, column: 45, scope: !19353)
!19355 = !DILocation(line: 157, column: 53, scope: !19353)
!19356 = !DILocation(line: 157, column: 38, scope: !19353)
!19357 = !DILocation(line: 157, column: 9, scope: !19353)
!19358 = !DILocation(line: 158, column: 35, scope: !19353)
!19359 = !DILocation(line: 158, column: 45, scope: !19353)
!19360 = !DILocation(line: 158, column: 55, scope: !19353)
!19361 = !DILocation(line: 158, column: 53, scope: !19353)
!19362 = !DILocation(line: 158, column: 43, scope: !19353)
!19363 = !DILocation(line: 158, column: 18, scope: !19353)
!19364 = !DILocation(line: 159, column: 7, scope: !19353)
!19365 = !DILocation(line: 162, column: 18, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19340, file: !1165, line: 161, column: 7)
!19367 = !DILocation(line: 162, column: 41, scope: !19366)
!19368 = !DILocation(line: 162, column: 49, scope: !19366)
!19369 = !DILocation(line: 162, column: 34, scope: !19366)
!19370 = !DILocation(line: 162, column: 9, scope: !19366)
!19371 = !DILocation(line: 155, column: 75, scope: !19340)
!19372 = !DILocation(line: 153, column: 28, scope: !19336)
!19373 = !DILocation(line: 153, column: 3, scope: !19336)
!19374 = distinct !{!19374, !19338, !19375}
!19375 = !DILocation(line: 163, column: 7, scope: !19333)
!19376 = !DILocation(line: 164, column: 3, scope: !19318)
!19377 = !DILocation(line: 165, column: 1, scope: !19318)
!19378 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1165, file: !1165, line: 174, type: !19379, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19379 = !DISubroutineType(types: !19380)
!19380 = !{!627, !180, !180, !1125, !685, !52, !691}
!19381 = !DILocalVariable(name: "context", arg: 1, scope: !19378, file: !1165, line: 174, type: !180)
!19382 = !DILocation(line: 174, column: 35, scope: !19378)
!19383 = !DILocalVariable(name: "arg", arg: 2, scope: !19378, file: !1165, line: 175, type: !180)
!19384 = !DILocation(line: 175, column: 35, scope: !19378)
!19385 = !DILocalVariable(name: "arglist", arg: 3, scope: !19378, file: !1165, line: 175, type: !1125)
!19386 = !DILocation(line: 175, column: 59, scope: !19378)
!19387 = !DILocalVariable(name: "vallist", arg: 4, scope: !19378, file: !1165, line: 176, type: !685)
!19388 = !DILocation(line: 176, column: 35, scope: !19378)
!19389 = !DILocalVariable(name: "valsize", arg: 5, scope: !19378, file: !1165, line: 176, type: !52)
!19390 = !DILocation(line: 176, column: 51, scope: !19378)
!19391 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !19378, file: !1165, line: 177, type: !691)
!19392 = !DILocation(line: 177, column: 40, scope: !19378)
!19393 = !DILocalVariable(name: "res", scope: !19378, file: !1165, line: 179, type: !627)
!19394 = !DILocation(line: 179, column: 13, scope: !19378)
!19395 = !DILocation(line: 179, column: 29, scope: !19378)
!19396 = !DILocation(line: 179, column: 34, scope: !19378)
!19397 = !DILocation(line: 179, column: 43, scope: !19378)
!19398 = !DILocation(line: 179, column: 52, scope: !19378)
!19399 = !DILocation(line: 179, column: 19, scope: !19378)
!19400 = !DILocation(line: 180, column: 7, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19378, file: !1165, line: 180, column: 7)
!19402 = !DILocation(line: 180, column: 11, scope: !19401)
!19403 = !DILocation(line: 180, column: 7, scope: !19378)
!19404 = !DILocation(line: 182, column: 12, scope: !19401)
!19405 = !DILocation(line: 182, column: 5, scope: !19401)
!19406 = !DILocation(line: 185, column: 21, scope: !19378)
!19407 = !DILocation(line: 185, column: 30, scope: !19378)
!19408 = !DILocation(line: 185, column: 35, scope: !19378)
!19409 = !DILocation(line: 185, column: 3, scope: !19378)
!19410 = !DILocation(line: 186, column: 19, scope: !19378)
!19411 = !DILocation(line: 186, column: 28, scope: !19378)
!19412 = !DILocation(line: 186, column: 37, scope: !19378)
!19413 = !DILocation(line: 186, column: 3, scope: !19378)
!19414 = !DILocation(line: 187, column: 5, scope: !19378)
!19415 = !DILocation(line: 187, column: 3, scope: !19378)
!19416 = !DILocation(line: 189, column: 3, scope: !19378)
!19417 = !DILocation(line: 190, column: 1, scope: !19378)
!19418 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1165, file: !1165, line: 195, type: !19419, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1122, retainedNodes: !295)
!19419 = !DISubroutineType(types: !19420)
!19420 = !{!180, !685, !1125, !685, !52}
!19421 = !DILocalVariable(name: "value", arg: 1, scope: !19418, file: !1165, line: 195, type: !685)
!19422 = !DILocation(line: 195, column: 35, scope: !19418)
!19423 = !DILocalVariable(name: "arglist", arg: 2, scope: !19418, file: !1165, line: 196, type: !1125)
!19424 = !DILocation(line: 196, column: 42, scope: !19418)
!19425 = !DILocalVariable(name: "vallist", arg: 3, scope: !19418, file: !1165, line: 197, type: !685)
!19426 = !DILocation(line: 197, column: 35, scope: !19418)
!19427 = !DILocalVariable(name: "valsize", arg: 4, scope: !19418, file: !1165, line: 197, type: !52)
!19428 = !DILocation(line: 197, column: 51, scope: !19418)
!19429 = !DILocalVariable(name: "i", scope: !19418, file: !1165, line: 199, type: !52)
!19430 = !DILocation(line: 199, column: 10, scope: !19418)
!19431 = !DILocation(line: 201, column: 10, scope: !19432)
!19432 = distinct !DILexicalBlock(scope: !19418, file: !1165, line: 201, column: 3)
!19433 = !DILocation(line: 201, column: 8, scope: !19432)
!19434 = !DILocation(line: 201, column: 15, scope: !19435)
!19435 = distinct !DILexicalBlock(scope: !19432, file: !1165, line: 201, column: 3)
!19436 = !DILocation(line: 201, column: 23, scope: !19435)
!19437 = !DILocation(line: 201, column: 3, scope: !19432)
!19438 = !DILocation(line: 202, column: 18, scope: !19439)
!19439 = distinct !DILexicalBlock(scope: !19435, file: !1165, line: 202, column: 9)
!19440 = !DILocation(line: 202, column: 40, scope: !19439)
!19441 = !DILocation(line: 202, column: 50, scope: !19439)
!19442 = !DILocation(line: 202, column: 60, scope: !19439)
!19443 = !DILocation(line: 202, column: 58, scope: !19439)
!19444 = !DILocation(line: 202, column: 48, scope: !19439)
!19445 = !DILocation(line: 202, column: 63, scope: !19439)
!19446 = !DILocation(line: 202, column: 10, scope: !19439)
!19447 = !DILocation(line: 202, column: 9, scope: !19435)
!19448 = !DILocation(line: 203, column: 14, scope: !19439)
!19449 = !DILocation(line: 203, column: 22, scope: !19439)
!19450 = !DILocation(line: 203, column: 7, scope: !19439)
!19451 = !DILocation(line: 202, column: 70, scope: !19439)
!19452 = !DILocation(line: 201, column: 28, scope: !19435)
!19453 = !DILocation(line: 201, column: 3, scope: !19435)
!19454 = distinct !{!19454, !19437, !19455}
!19455 = !DILocation(line: 203, column: 23, scope: !19432)
!19456 = !DILocation(line: 204, column: 3, scope: !19418)
!19457 = !DILocation(line: 205, column: 1, scope: !19418)
!19458 = distinct !DISubprogram(name: "rotl64", scope: !19459, file: !19459, line: 39, type: !19460, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19459 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!19460 = !DISubroutineType(types: !19461)
!19461 = !{!1214, !1214, !5}
!19462 = !DILocalVariable(name: "x", arg: 1, scope: !19458, file: !19459, line: 39, type: !1214)
!19463 = !DILocation(line: 39, column: 18, scope: !19458)
!19464 = !DILocalVariable(name: "n", arg: 2, scope: !19458, file: !19459, line: 39, type: !5)
!19465 = !DILocation(line: 39, column: 25, scope: !19458)
!19466 = !DILocation(line: 41, column: 12, scope: !19458)
!19467 = !DILocation(line: 41, column: 17, scope: !19458)
!19468 = !DILocation(line: 41, column: 14, scope: !19458)
!19469 = !DILocation(line: 41, column: 23, scope: !19458)
!19470 = !DILocation(line: 41, column: 34, scope: !19458)
!19471 = !DILocation(line: 41, column: 32, scope: !19458)
!19472 = !DILocation(line: 41, column: 25, scope: !19458)
!19473 = !DILocation(line: 41, column: 20, scope: !19458)
!19474 = !DILocation(line: 41, column: 3, scope: !19458)
!19475 = distinct !DISubprogram(name: "rotr64", scope: !19459, file: !19459, line: 48, type: !19460, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19476 = !DILocalVariable(name: "x", arg: 1, scope: !19475, file: !19459, line: 48, type: !1214)
!19477 = !DILocation(line: 48, column: 18, scope: !19475)
!19478 = !DILocalVariable(name: "n", arg: 2, scope: !19475, file: !19459, line: 48, type: !5)
!19479 = !DILocation(line: 48, column: 25, scope: !19475)
!19480 = !DILocation(line: 50, column: 12, scope: !19475)
!19481 = !DILocation(line: 50, column: 17, scope: !19475)
!19482 = !DILocation(line: 50, column: 14, scope: !19475)
!19483 = !DILocation(line: 50, column: 23, scope: !19475)
!19484 = !DILocation(line: 50, column: 34, scope: !19475)
!19485 = !DILocation(line: 50, column: 32, scope: !19475)
!19486 = !DILocation(line: 50, column: 25, scope: !19475)
!19487 = !DILocation(line: 50, column: 20, scope: !19475)
!19488 = !DILocation(line: 50, column: 3, scope: !19475)
!19489 = distinct !DISubprogram(name: "rotl32", scope: !19459, file: !19459, line: 58, type: !19490, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19490 = !DISubroutineType(types: !19491)
!19491 = !{!1217, !1217, !5}
!19492 = !DILocalVariable(name: "x", arg: 1, scope: !19489, file: !19459, line: 58, type: !1217)
!19493 = !DILocation(line: 58, column: 18, scope: !19489)
!19494 = !DILocalVariable(name: "n", arg: 2, scope: !19489, file: !19459, line: 58, type: !5)
!19495 = !DILocation(line: 58, column: 25, scope: !19489)
!19496 = !DILocation(line: 60, column: 12, scope: !19489)
!19497 = !DILocation(line: 60, column: 17, scope: !19489)
!19498 = !DILocation(line: 60, column: 14, scope: !19489)
!19499 = !DILocation(line: 60, column: 23, scope: !19489)
!19500 = !DILocation(line: 60, column: 34, scope: !19489)
!19501 = !DILocation(line: 60, column: 32, scope: !19489)
!19502 = !DILocation(line: 60, column: 25, scope: !19489)
!19503 = !DILocation(line: 60, column: 20, scope: !19489)
!19504 = !DILocation(line: 60, column: 3, scope: !19489)
!19505 = distinct !DISubprogram(name: "rotr32", scope: !19459, file: !19459, line: 67, type: !19490, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19506 = !DILocalVariable(name: "x", arg: 1, scope: !19505, file: !19459, line: 67, type: !1217)
!19507 = !DILocation(line: 67, column: 18, scope: !19505)
!19508 = !DILocalVariable(name: "n", arg: 2, scope: !19505, file: !19459, line: 67, type: !5)
!19509 = !DILocation(line: 67, column: 25, scope: !19505)
!19510 = !DILocation(line: 69, column: 12, scope: !19505)
!19511 = !DILocation(line: 69, column: 17, scope: !19505)
!19512 = !DILocation(line: 69, column: 14, scope: !19505)
!19513 = !DILocation(line: 69, column: 23, scope: !19505)
!19514 = !DILocation(line: 69, column: 34, scope: !19505)
!19515 = !DILocation(line: 69, column: 32, scope: !19505)
!19516 = !DILocation(line: 69, column: 25, scope: !19505)
!19517 = !DILocation(line: 69, column: 20, scope: !19505)
!19518 = !DILocation(line: 69, column: 3, scope: !19505)
!19519 = distinct !DISubprogram(name: "rotl_sz", scope: !19459, file: !19459, line: 76, type: !19520, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19520 = !DISubroutineType(types: !19521)
!19521 = !{!52, !52, !5}
!19522 = !DILocalVariable(name: "x", arg: 1, scope: !19519, file: !19459, line: 76, type: !52)
!19523 = !DILocation(line: 76, column: 17, scope: !19519)
!19524 = !DILocalVariable(name: "n", arg: 2, scope: !19519, file: !19459, line: 76, type: !5)
!19525 = !DILocation(line: 76, column: 24, scope: !19519)
!19526 = !DILocation(line: 78, column: 12, scope: !19519)
!19527 = !DILocation(line: 78, column: 17, scope: !19519)
!19528 = !DILocation(line: 78, column: 14, scope: !19519)
!19529 = !DILocation(line: 78, column: 23, scope: !19519)
!19530 = !DILocation(line: 78, column: 53, scope: !19519)
!19531 = !DILocation(line: 78, column: 51, scope: !19519)
!19532 = !DILocation(line: 78, column: 25, scope: !19519)
!19533 = !DILocation(line: 78, column: 20, scope: !19519)
!19534 = !DILocation(line: 78, column: 3, scope: !19519)
!19535 = distinct !DISubprogram(name: "rotr_sz", scope: !19459, file: !19459, line: 85, type: !19520, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19536 = !DILocalVariable(name: "x", arg: 1, scope: !19535, file: !19459, line: 85, type: !52)
!19537 = !DILocation(line: 85, column: 17, scope: !19535)
!19538 = !DILocalVariable(name: "n", arg: 2, scope: !19535, file: !19459, line: 85, type: !5)
!19539 = !DILocation(line: 85, column: 24, scope: !19535)
!19540 = !DILocation(line: 87, column: 12, scope: !19535)
!19541 = !DILocation(line: 87, column: 17, scope: !19535)
!19542 = !DILocation(line: 87, column: 14, scope: !19535)
!19543 = !DILocation(line: 87, column: 23, scope: !19535)
!19544 = !DILocation(line: 87, column: 53, scope: !19535)
!19545 = !DILocation(line: 87, column: 51, scope: !19535)
!19546 = !DILocation(line: 87, column: 25, scope: !19535)
!19547 = !DILocation(line: 87, column: 20, scope: !19535)
!19548 = !DILocation(line: 87, column: 3, scope: !19535)
!19549 = distinct !DISubprogram(name: "rotl16", scope: !19459, file: !19459, line: 96, type: !19550, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19550 = !DISubroutineType(types: !19551)
!19551 = !{!19552, !19552, !5}
!19552 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !609, line: 49, baseType: !34)
!19553 = !DILocalVariable(name: "x", arg: 1, scope: !19549, file: !19459, line: 96, type: !19552)
!19554 = !DILocation(line: 96, column: 18, scope: !19549)
!19555 = !DILocalVariable(name: "n", arg: 2, scope: !19549, file: !19459, line: 96, type: !5)
!19556 = !DILocation(line: 96, column: 25, scope: !19549)
!19557 = !DILocation(line: 98, column: 27, scope: !19549)
!19558 = !DILocation(line: 98, column: 12, scope: !19549)
!19559 = !DILocation(line: 98, column: 32, scope: !19549)
!19560 = !DILocation(line: 98, column: 29, scope: !19549)
!19561 = !DILocation(line: 98, column: 53, scope: !19549)
!19562 = !DILocation(line: 98, column: 38, scope: !19549)
!19563 = !DILocation(line: 98, column: 64, scope: !19549)
!19564 = !DILocation(line: 98, column: 62, scope: !19549)
!19565 = !DILocation(line: 98, column: 55, scope: !19549)
!19566 = !DILocation(line: 98, column: 35, scope: !19549)
!19567 = !DILocation(line: 99, column: 10, scope: !19549)
!19568 = !DILocation(line: 98, column: 10, scope: !19549)
!19569 = !DILocation(line: 98, column: 3, scope: !19549)
!19570 = distinct !DISubprogram(name: "rotr16", scope: !19459, file: !19459, line: 108, type: !19550, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19571 = !DILocalVariable(name: "x", arg: 1, scope: !19570, file: !19459, line: 108, type: !19552)
!19572 = !DILocation(line: 108, column: 18, scope: !19570)
!19573 = !DILocalVariable(name: "n", arg: 2, scope: !19570, file: !19459, line: 108, type: !5)
!19574 = !DILocation(line: 108, column: 25, scope: !19570)
!19575 = !DILocation(line: 110, column: 27, scope: !19570)
!19576 = !DILocation(line: 110, column: 12, scope: !19570)
!19577 = !DILocation(line: 110, column: 32, scope: !19570)
!19578 = !DILocation(line: 110, column: 29, scope: !19570)
!19579 = !DILocation(line: 110, column: 53, scope: !19570)
!19580 = !DILocation(line: 110, column: 38, scope: !19570)
!19581 = !DILocation(line: 110, column: 64, scope: !19570)
!19582 = !DILocation(line: 110, column: 62, scope: !19570)
!19583 = !DILocation(line: 110, column: 55, scope: !19570)
!19584 = !DILocation(line: 110, column: 35, scope: !19570)
!19585 = !DILocation(line: 111, column: 10, scope: !19570)
!19586 = !DILocation(line: 110, column: 10, scope: !19570)
!19587 = !DILocation(line: 110, column: 3, scope: !19570)
!19588 = distinct !DISubprogram(name: "rotl8", scope: !19459, file: !19459, line: 120, type: !19589, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19589 = !DISubroutineType(types: !19590)
!19590 = !{!19591, !19591, !5}
!19591 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !609, line: 48, baseType: !585)
!19592 = !DILocalVariable(name: "x", arg: 1, scope: !19588, file: !19459, line: 120, type: !19591)
!19593 = !DILocation(line: 120, column: 16, scope: !19588)
!19594 = !DILocalVariable(name: "n", arg: 2, scope: !19588, file: !19459, line: 120, type: !5)
!19595 = !DILocation(line: 120, column: 23, scope: !19588)
!19596 = !DILocation(line: 122, column: 27, scope: !19588)
!19597 = !DILocation(line: 122, column: 12, scope: !19588)
!19598 = !DILocation(line: 122, column: 32, scope: !19588)
!19599 = !DILocation(line: 122, column: 29, scope: !19588)
!19600 = !DILocation(line: 122, column: 53, scope: !19588)
!19601 = !DILocation(line: 122, column: 38, scope: !19588)
!19602 = !DILocation(line: 122, column: 63, scope: !19588)
!19603 = !DILocation(line: 122, column: 61, scope: !19588)
!19604 = !DILocation(line: 122, column: 55, scope: !19588)
!19605 = !DILocation(line: 122, column: 35, scope: !19588)
!19606 = !DILocation(line: 122, column: 68, scope: !19588)
!19607 = !DILocation(line: 122, column: 10, scope: !19588)
!19608 = !DILocation(line: 122, column: 3, scope: !19588)
!19609 = distinct !DISubprogram(name: "rotr8", scope: !19459, file: !19459, line: 131, type: !19589, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1694, retainedNodes: !295)
!19610 = !DILocalVariable(name: "x", arg: 1, scope: !19609, file: !19459, line: 131, type: !19591)
!19611 = !DILocation(line: 131, column: 16, scope: !19609)
!19612 = !DILocalVariable(name: "n", arg: 2, scope: !19609, file: !19459, line: 131, type: !5)
!19613 = !DILocation(line: 131, column: 23, scope: !19609)
!19614 = !DILocation(line: 133, column: 27, scope: !19609)
!19615 = !DILocation(line: 133, column: 12, scope: !19609)
!19616 = !DILocation(line: 133, column: 32, scope: !19609)
!19617 = !DILocation(line: 133, column: 29, scope: !19609)
!19618 = !DILocation(line: 133, column: 53, scope: !19609)
!19619 = !DILocation(line: 133, column: 38, scope: !19609)
!19620 = !DILocation(line: 133, column: 63, scope: !19609)
!19621 = !DILocation(line: 133, column: 61, scope: !19609)
!19622 = !DILocation(line: 133, column: 55, scope: !19609)
!19623 = !DILocation(line: 133, column: 35, scope: !19609)
!19624 = !DILocation(line: 133, column: 68, scope: !19609)
!19625 = !DILocation(line: 133, column: 10, scope: !19609)
!19626 = !DILocation(line: 133, column: 3, scope: !19609)
!19627 = distinct !DISubprogram(name: "c_strcasecmp", scope: !19628, file: !19628, line: 27, type: !16543, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1697, retainedNodes: !295)
!19628 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!19629 = !DILocalVariable(name: "s1", arg: 1, scope: !19627, file: !19628, line: 27, type: !180)
!19630 = !DILocation(line: 27, column: 27, scope: !19627)
!19631 = !DILocalVariable(name: "s2", arg: 2, scope: !19627, file: !19628, line: 27, type: !180)
!19632 = !DILocation(line: 27, column: 43, scope: !19627)
!19633 = !DILocalVariable(name: "p1", scope: !19627, file: !19628, line: 29, type: !583)
!19634 = !DILocation(line: 29, column: 33, scope: !19627)
!19635 = !DILocation(line: 29, column: 62, scope: !19627)
!19636 = !DILocalVariable(name: "p2", scope: !19627, file: !19628, line: 30, type: !583)
!19637 = !DILocation(line: 30, column: 33, scope: !19627)
!19638 = !DILocation(line: 30, column: 62, scope: !19627)
!19639 = !DILocalVariable(name: "c1", scope: !19627, file: !19628, line: 31, type: !585)
!19640 = !DILocation(line: 31, column: 17, scope: !19627)
!19641 = !DILocalVariable(name: "c2", scope: !19627, file: !19628, line: 31, type: !585)
!19642 = !DILocation(line: 31, column: 21, scope: !19627)
!19643 = !DILocation(line: 33, column: 7, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19627, file: !19628, line: 33, column: 7)
!19645 = !DILocation(line: 33, column: 13, scope: !19644)
!19646 = !DILocation(line: 33, column: 10, scope: !19644)
!19647 = !DILocation(line: 33, column: 7, scope: !19627)
!19648 = !DILocation(line: 34, column: 5, scope: !19644)
!19649 = !DILocation(line: 36, column: 3, scope: !19627)
!19650 = !DILocation(line: 38, column: 24, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19627, file: !19628, line: 37, column: 5)
!19652 = !DILocation(line: 38, column: 23, scope: !19651)
!19653 = !DILocation(line: 38, column: 12, scope: !19651)
!19654 = !DILocation(line: 38, column: 10, scope: !19651)
!19655 = !DILocation(line: 39, column: 24, scope: !19651)
!19656 = !DILocation(line: 39, column: 23, scope: !19651)
!19657 = !DILocation(line: 39, column: 12, scope: !19651)
!19658 = !DILocation(line: 39, column: 10, scope: !19651)
!19659 = !DILocation(line: 41, column: 11, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19651, file: !19628, line: 41, column: 11)
!19661 = !DILocation(line: 41, column: 14, scope: !19660)
!19662 = !DILocation(line: 41, column: 11, scope: !19651)
!19663 = !DILocation(line: 42, column: 9, scope: !19660)
!19664 = !DILocation(line: 44, column: 7, scope: !19651)
!19665 = !DILocation(line: 45, column: 7, scope: !19651)
!19666 = !DILocation(line: 46, column: 5, scope: !19651)
!19667 = !DILocation(line: 47, column: 10, scope: !19627)
!19668 = !DILocation(line: 47, column: 16, scope: !19627)
!19669 = !DILocation(line: 47, column: 13, scope: !19627)
!19670 = distinct !{!19670, !19649, !19671}
!19671 = !DILocation(line: 47, column: 18, scope: !19627)
!19672 = !DILocation(line: 50, column: 12, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19627, file: !19628, line: 49, column: 7)
!19674 = !DILocation(line: 50, column: 17, scope: !19673)
!19675 = !DILocation(line: 50, column: 15, scope: !19673)
!19676 = !DILocation(line: 50, column: 5, scope: !19673)
!19677 = !DILocation(line: 56, column: 1, scope: !19627)
!19678 = distinct !DISubprogram(name: "close_stream", scope: !19679, file: !19679, line: 56, type: !19680, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !295)
!19679 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!19680 = !DISubroutineType(types: !19681)
!19681 = !{!5, !19682}
!19682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19683, size: 64)
!19683 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !19684)
!19684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !19685)
!19685 = !{!19686, !19687, !19688, !19689, !19690, !19691, !19692, !19693, !19694, !19695, !19696, !19697, !19698, !19706, !19707, !19708, !19709, !19710, !19711, !19712, !19713, !19714, !19715, !19716, !19717, !19718, !19719, !19720, !19721}
!19686 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !19684, file: !2, line: 242, baseType: !5, size: 32)
!19687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !19684, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!19688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !19684, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!19689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !19684, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!19690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !19684, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!19691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !19684, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!19692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !19684, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!19693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !19684, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!19694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !19684, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!19695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !19684, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!19696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !19684, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!19697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !19684, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19698 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !19684, file: !2, line: 260, baseType: !19699, size: 64, offset: 768)
!19699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19700, size: 64)
!19700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !19701)
!19701 = !{!19702, !19703, !19705}
!19702 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !19700, file: !2, line: 157, baseType: !19699, size: 64)
!19703 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !19700, file: !2, line: 158, baseType: !19704, size: 64, offset: 64)
!19704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19684, size: 64)
!19705 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !19700, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!19706 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !19684, file: !2, line: 262, baseType: !19704, size: 64, offset: 832)
!19707 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !19684, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!19708 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !19684, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!19709 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !19684, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!19710 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !19684, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!19711 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !19684, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!19712 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !19684, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!19713 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !19684, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!19714 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !19684, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!19715 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !19684, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!19716 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !19684, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!19717 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !19684, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!19718 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !19684, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!19719 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !19684, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!19720 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !19684, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!19721 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !19684, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!19722 = !DILocalVariable(name: "stream", arg: 1, scope: !19678, file: !19679, line: 56, type: !19682)
!19723 = !DILocation(line: 56, column: 21, scope: !19678)
!19724 = !DILocalVariable(name: "some_pending", scope: !19678, file: !19679, line: 58, type: !1703)
!19725 = !DILocation(line: 58, column: 14, scope: !19678)
!19726 = !DILocation(line: 58, column: 42, scope: !19678)
!19727 = !DILocation(line: 58, column: 30, scope: !19678)
!19728 = !DILocation(line: 58, column: 50, scope: !19678)
!19729 = !DILocalVariable(name: "prev_fail", scope: !19678, file: !19679, line: 59, type: !1703)
!19730 = !DILocation(line: 59, column: 14, scope: !19678)
!19731 = !DILocation(line: 59, column: 27, scope: !19678)
!19732 = !DILocation(line: 59, column: 43, scope: !19678)
!19733 = !DILocalVariable(name: "fclose_fail", scope: !19678, file: !19679, line: 60, type: !1703)
!19734 = !DILocation(line: 60, column: 14, scope: !19678)
!19735 = !DILocation(line: 60, column: 37, scope: !19678)
!19736 = !DILocation(line: 60, column: 29, scope: !19678)
!19737 = !DILocation(line: 60, column: 45, scope: !19678)
!19738 = !DILocation(line: 70, column: 7, scope: !19739)
!19739 = distinct !DILexicalBlock(scope: !19678, file: !19679, line: 70, column: 7)
!19740 = !DILocation(line: 70, column: 17, scope: !19739)
!19741 = !DILocation(line: 70, column: 21, scope: !19739)
!19742 = !DILocation(line: 70, column: 33, scope: !19739)
!19743 = !DILocation(line: 70, column: 37, scope: !19739)
!19744 = !DILocation(line: 70, column: 50, scope: !19739)
!19745 = !DILocation(line: 70, column: 53, scope: !19739)
!19746 = !DILocation(line: 70, column: 59, scope: !19739)
!19747 = !DILocation(line: 70, column: 7, scope: !19678)
!19748 = !DILocation(line: 72, column: 13, scope: !19749)
!19749 = distinct !DILexicalBlock(scope: !19750, file: !19679, line: 72, column: 11)
!19750 = distinct !DILexicalBlock(scope: !19739, file: !19679, line: 71, column: 5)
!19751 = !DILocation(line: 72, column: 11, scope: !19750)
!19752 = !DILocation(line: 73, column: 9, scope: !19749)
!19753 = !DILocation(line: 73, column: 15, scope: !19749)
!19754 = !DILocation(line: 74, column: 7, scope: !19750)
!19755 = !DILocation(line: 77, column: 3, scope: !19678)
!19756 = !DILocation(line: 78, column: 1, scope: !19678)
!19757 = distinct !DISubprogram(name: "opendir_safer", scope: !19758, file: !19758, line: 31, type: !19759, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1704, retainedNodes: !295)
!19758 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!19759 = !DISubroutineType(types: !19760)
!19760 = !{!662, !180}
!19761 = !DILocalVariable(name: "name", arg: 1, scope: !19757, file: !19758, line: 31, type: !180)
!19762 = !DILocation(line: 31, column: 28, scope: !19757)
!19763 = !DILocalVariable(name: "dp", scope: !19757, file: !19758, line: 33, type: !662)
!19764 = !DILocation(line: 33, column: 8, scope: !19757)
!19765 = !DILocation(line: 33, column: 22, scope: !19757)
!19766 = !DILocation(line: 33, column: 13, scope: !19757)
!19767 = !DILocation(line: 35, column: 7, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19757, file: !19758, line: 35, column: 7)
!19769 = !DILocation(line: 35, column: 7, scope: !19757)
!19770 = !DILocalVariable(name: "fd", scope: !19771, file: !19758, line: 37, type: !5)
!19771 = distinct !DILexicalBlock(scope: !19768, file: !19758, line: 36, column: 5)
!19772 = !DILocation(line: 37, column: 11, scope: !19771)
!19773 = !DILocation(line: 37, column: 23, scope: !19771)
!19774 = !DILocation(line: 37, column: 16, scope: !19771)
!19775 = !DILocation(line: 39, column: 16, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19771, file: !19758, line: 39, column: 11)
!19777 = !DILocation(line: 39, column: 13, scope: !19776)
!19778 = !DILocation(line: 39, column: 19, scope: !19776)
!19779 = !DILocation(line: 39, column: 22, scope: !19776)
!19780 = !DILocation(line: 39, column: 25, scope: !19776)
!19781 = !DILocation(line: 39, column: 11, scope: !19771)
!19782 = !DILocalVariable(name: "newdp", scope: !19783, file: !19758, line: 49, type: !662)
!19783 = distinct !DILexicalBlock(scope: !19776, file: !19758, line: 40, column: 9)
!19784 = !DILocation(line: 49, column: 16, scope: !19783)
!19785 = !DILocalVariable(name: "e", scope: !19783, file: !19758, line: 50, type: !5)
!19786 = !DILocation(line: 50, column: 15, scope: !19783)
!19787 = !DILocalVariable(name: "f", scope: !19783, file: !19758, line: 52, type: !5)
!19788 = !DILocation(line: 52, column: 15, scope: !19783)
!19789 = !DILocation(line: 52, column: 26, scope: !19783)
!19790 = !DILocation(line: 52, column: 19, scope: !19783)
!19791 = !DILocation(line: 53, column: 15, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19783, file: !19758, line: 53, column: 15)
!19793 = !DILocation(line: 53, column: 17, scope: !19792)
!19794 = !DILocation(line: 53, column: 15, scope: !19783)
!19795 = !DILocation(line: 55, column: 19, scope: !19796)
!19796 = distinct !DILexicalBlock(scope: !19792, file: !19758, line: 54, column: 13)
!19797 = !DILocation(line: 55, column: 17, scope: !19796)
!19798 = !DILocation(line: 56, column: 21, scope: !19796)
!19799 = !DILocation(line: 57, column: 13, scope: !19796)
!19800 = !DILocation(line: 60, column: 34, scope: !19801)
!19801 = distinct !DILexicalBlock(scope: !19792, file: !19758, line: 59, column: 13)
!19802 = !DILocation(line: 60, column: 23, scope: !19801)
!19803 = !DILocation(line: 60, column: 21, scope: !19801)
!19804 = !DILocation(line: 61, column: 19, scope: !19801)
!19805 = !DILocation(line: 61, column: 17, scope: !19801)
!19806 = !DILocation(line: 62, column: 21, scope: !19807)
!19807 = distinct !DILexicalBlock(scope: !19801, file: !19758, line: 62, column: 19)
!19808 = !DILocation(line: 62, column: 19, scope: !19801)
!19809 = !DILocation(line: 63, column: 24, scope: !19807)
!19810 = !DILocation(line: 63, column: 17, scope: !19807)
!19811 = !DILocation(line: 69, column: 21, scope: !19783)
!19812 = !DILocation(line: 69, column: 11, scope: !19783)
!19813 = !DILocation(line: 70, column: 19, scope: !19783)
!19814 = !DILocation(line: 70, column: 11, scope: !19783)
!19815 = !DILocation(line: 70, column: 17, scope: !19783)
!19816 = !DILocation(line: 71, column: 16, scope: !19783)
!19817 = !DILocation(line: 71, column: 14, scope: !19783)
!19818 = !DILocation(line: 72, column: 9, scope: !19783)
!19819 = !DILocation(line: 73, column: 5, scope: !19771)
!19820 = !DILocation(line: 75, column: 10, scope: !19757)
!19821 = !DILocation(line: 75, column: 3, scope: !19757)
!19822 = distinct !DISubprogram(name: "gettime", scope: !19823, file: !19823, line: 29, type: !19824, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1707, retainedNodes: !295)
!19823 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!19824 = !DISubroutineType(types: !19825)
!19825 = !{null, !19826}
!19826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19827, size: 64)
!19827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !19828)
!19828 = !{!19829, !19830}
!19829 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19827, file: !373, line: 122, baseType: !376, size: 64)
!19830 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !19827, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!19831 = !DILocalVariable(name: "ts", arg: 1, scope: !19822, file: !19823, line: 29, type: !19826)
!19832 = !DILocation(line: 29, column: 27, scope: !19822)
!19833 = !DILocation(line: 32, column: 34, scope: !19822)
!19834 = !DILocation(line: 32, column: 3, scope: !19822)
!19835 = !DILocation(line: 39, column: 1, scope: !19822)
!19836 = distinct !DISubprogram(name: "current_timespec", scope: !19823, file: !19823, line: 44, type: !19837, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1707, retainedNodes: !295)
!19837 = !DISubroutineType(types: !19838)
!19838 = !{!19827}
!19839 = !DILocalVariable(name: "ts", scope: !19836, file: !19823, line: 46, type: !19827)
!19840 = !DILocation(line: 46, column: 19, scope: !19836)
!19841 = !DILocation(line: 47, column: 3, scope: !19836)
!19842 = !DILocation(line: 48, column: 3, scope: !19836)
!19843 = distinct !DISubprogram(name: "hard_locale", scope: !19844, file: !19844, line: 38, type: !2939, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !295)
!19844 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!19845 = !DILocalVariable(name: "category", arg: 1, scope: !19843, file: !19844, line: 38, type: !5)
!19846 = !DILocation(line: 38, column: 18, scope: !19843)
!19847 = !DILocalVariable(name: "hard", scope: !19843, file: !19844, line: 40, type: !139)
!19848 = !DILocation(line: 40, column: 8, scope: !19843)
!19849 = !DILocalVariable(name: "p", scope: !19843, file: !19844, line: 41, type: !180)
!19850 = !DILocation(line: 41, column: 15, scope: !19843)
!19851 = !DILocation(line: 41, column: 30, scope: !19843)
!19852 = !DILocation(line: 41, column: 19, scope: !19843)
!19853 = !DILocation(line: 43, column: 7, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19843, file: !19844, line: 43, column: 7)
!19855 = !DILocation(line: 43, column: 7, scope: !19843)
!19856 = !DILocation(line: 47, column: 23, scope: !19857)
!19857 = distinct !DILexicalBlock(scope: !19858, file: !19844, line: 47, column: 15)
!19858 = distinct !DILexicalBlock(scope: !19859, file: !19844, line: 46, column: 9)
!19859 = distinct !DILexicalBlock(scope: !19860, file: !19844, line: 45, column: 11)
!19860 = distinct !DILexicalBlock(scope: !19854, file: !19844, line: 44, column: 5)
!19861 = !DILocation(line: 47, column: 15, scope: !19857)
!19862 = !DILocation(line: 47, column: 31, scope: !19857)
!19863 = !DILocation(line: 47, column: 36, scope: !19857)
!19864 = !DILocation(line: 47, column: 47, scope: !19857)
!19865 = !DILocation(line: 47, column: 39, scope: !19857)
!19866 = !DILocation(line: 47, column: 59, scope: !19857)
!19867 = !DILocation(line: 47, column: 15, scope: !19858)
!19868 = !DILocation(line: 48, column: 18, scope: !19857)
!19869 = !DILocation(line: 48, column: 13, scope: !19857)
!19870 = !DILocation(line: 69, column: 5, scope: !19860)
!19871 = !DILocation(line: 71, column: 10, scope: !19843)
!19872 = !DILocation(line: 71, column: 3, scope: !19843)
!19873 = distinct !DISubprogram(name: "hash_pjw", scope: !19874, file: !19874, line: 31, type: !839, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !295)
!19874 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!19875 = !DILocalVariable(name: "x", arg: 1, scope: !19873, file: !19874, line: 31, type: !685)
!19876 = !DILocation(line: 31, column: 23, scope: !19873)
!19877 = !DILocalVariable(name: "tablesize", arg: 2, scope: !19873, file: !19874, line: 31, type: !52)
!19878 = !DILocation(line: 31, column: 33, scope: !19873)
!19879 = !DILocalVariable(name: "s", scope: !19873, file: !19874, line: 33, type: !180)
!19880 = !DILocation(line: 33, column: 15, scope: !19873)
!19881 = !DILocalVariable(name: "h", scope: !19873, file: !19874, line: 34, type: !52)
!19882 = !DILocation(line: 34, column: 10, scope: !19873)
!19883 = !DILocation(line: 36, column: 12, scope: !19884)
!19884 = distinct !DILexicalBlock(scope: !19873, file: !19874, line: 36, column: 3)
!19885 = !DILocation(line: 36, column: 10, scope: !19884)
!19886 = !DILocation(line: 36, column: 8, scope: !19884)
!19887 = !DILocation(line: 36, column: 16, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19884, file: !19874, line: 36, column: 3)
!19889 = !DILocation(line: 36, column: 15, scope: !19888)
!19890 = !DILocation(line: 36, column: 3, scope: !19884)
!19891 = !DILocation(line: 37, column: 10, scope: !19888)
!19892 = !DILocation(line: 37, column: 9, scope: !19888)
!19893 = !DILocation(line: 37, column: 16, scope: !19888)
!19894 = !DILocation(line: 37, column: 18, scope: !19888)
!19895 = !DILocation(line: 37, column: 27, scope: !19888)
!19896 = !DILocation(line: 37, column: 29, scope: !19888)
!19897 = !DILocation(line: 37, column: 24, scope: !19888)
!19898 = !DILocation(line: 37, column: 12, scope: !19888)
!19899 = !DILocation(line: 37, column: 7, scope: !19888)
!19900 = !DILocation(line: 37, column: 5, scope: !19888)
!19901 = !DILocation(line: 36, column: 20, scope: !19888)
!19902 = !DILocation(line: 36, column: 3, scope: !19888)
!19903 = distinct !{!19903, !19890, !19904}
!19904 = !DILocation(line: 37, column: 48, scope: !19884)
!19905 = !DILocation(line: 39, column: 10, scope: !19873)
!19906 = !DILocation(line: 39, column: 14, scope: !19873)
!19907 = !DILocation(line: 39, column: 12, scope: !19873)
!19908 = !DILocation(line: 39, column: 3, scope: !19873)
!19909 = distinct !DISubprogram(name: "locale_charset", scope: !19910, file: !19910, line: 826, type: !19911, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !295)
!19910 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!19911 = !DISubroutineType(types: !646)
!19912 = !DILocalVariable(name: "codeset", scope: !19909, file: !19910, line: 828, type: !180)
!19913 = !DILocation(line: 828, column: 15, scope: !19909)
!19914 = !DILocation(line: 835, column: 13, scope: !19909)
!19915 = !DILocation(line: 835, column: 11, scope: !19909)
!19916 = !DILocation(line: 893, column: 7, scope: !19917)
!19917 = distinct !DILexicalBlock(scope: !19909, file: !19910, line: 893, column: 7)
!19918 = !DILocation(line: 893, column: 15, scope: !19917)
!19919 = !DILocation(line: 893, column: 7, scope: !19909)
!19920 = !DILocation(line: 895, column: 13, scope: !19917)
!19921 = !DILocation(line: 895, column: 5, scope: !19917)
!19922 = !DILocation(line: 1051, column: 13, scope: !19923)
!19923 = distinct !DILexicalBlock(scope: !19924, file: !19910, line: 1051, column: 13)
!19924 = distinct !DILexicalBlock(scope: !19925, file: !19910, line: 1041, column: 7)
!19925 = distinct !DILexicalBlock(scope: !19909, file: !19910, line: 1000, column: 3)
!19926 = !DILocation(line: 1051, column: 24, scope: !19923)
!19927 = !DILocation(line: 1051, column: 13, scope: !19924)
!19928 = !DILocation(line: 1052, column: 19, scope: !19923)
!19929 = !DILocation(line: 1052, column: 11, scope: !19923)
!19930 = !DILocation(line: 1139, column: 10, scope: !19909)
!19931 = !DILocation(line: 1139, column: 3, scope: !19909)
!19932 = distinct !DISubprogram(name: "dirchownmod", scope: !19933, file: !19933, line: 61, type: !19934, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1718, retainedNodes: !295)
!19933 = !DIFile(filename: "lib/dirchownmod.c", directory: "/home/mohamad/clone/coreutils")
!19934 = !DISubroutineType(types: !19935)
!19935 = !{!5, !5, !180, !136, !124, !126, !136, !136}
!19936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !471, line: 46, size: 1152, elements: !19937)
!19937 = !{!19938, !19939, !19940, !19941, !19942, !19943, !19944, !19945, !19946, !19947, !19948, !19949, !19954, !19955, !19956}
!19938 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !19936, file: !471, line: 48, baseType: !460, size: 64)
!19939 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !19936, file: !471, line: 53, baseType: !461, size: 64, offset: 64)
!19940 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !19936, file: !471, line: 61, baseType: !468, size: 64, offset: 128)
!19941 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !19936, file: !471, line: 62, baseType: !137, size: 32, offset: 192)
!19942 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !19936, file: !471, line: 64, baseType: !125, size: 32, offset: 224)
!19943 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !19936, file: !471, line: 65, baseType: !127, size: 32, offset: 256)
!19944 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !19936, file: !471, line: 67, baseType: !5, size: 32, offset: 288)
!19945 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !19936, file: !471, line: 69, baseType: !460, size: 64, offset: 320)
!19946 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !19936, file: !471, line: 74, baseType: !30, size: 64, offset: 384)
!19947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !19936, file: !471, line: 78, baseType: !483, size: 64, offset: 448)
!19948 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !19936, file: !471, line: 80, baseType: !485, size: 64, offset: 512)
!19949 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !19936, file: !471, line: 91, baseType: !19950, size: 128, offset: 576)
!19950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !373, line: 120, size: 128, elements: !19951)
!19951 = !{!19952, !19953}
!19952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19950, file: !373, line: 122, baseType: !376, size: 64)
!19953 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !19950, file: !373, line: 123, baseType: !378, size: 64, offset: 64)
!19954 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !19936, file: !471, line: 92, baseType: !19950, size: 128, offset: 704)
!19955 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !19936, file: !471, line: 93, baseType: !19950, size: 128, offset: 832)
!19956 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !19936, file: !471, line: 106, baseType: !494, size: 192, offset: 960)
!19957 = !DILocalVariable(name: "fd", arg: 1, scope: !19932, file: !19933, line: 61, type: !5)
!19958 = !DILocation(line: 61, column: 18, scope: !19932)
!19959 = !DILocalVariable(name: "dir", arg: 2, scope: !19932, file: !19933, line: 61, type: !180)
!19960 = !DILocation(line: 61, column: 34, scope: !19932)
!19961 = !DILocalVariable(name: "mkdir_mode", arg: 3, scope: !19932, file: !19933, line: 61, type: !136)
!19962 = !DILocation(line: 61, column: 46, scope: !19932)
!19963 = !DILocalVariable(name: "owner", arg: 4, scope: !19932, file: !19933, line: 62, type: !124)
!19964 = !DILocation(line: 62, column: 20, scope: !19932)
!19965 = !DILocalVariable(name: "group", arg: 5, scope: !19932, file: !19933, line: 62, type: !126)
!19966 = !DILocation(line: 62, column: 33, scope: !19932)
!19967 = !DILocalVariable(name: "mode", arg: 6, scope: !19932, file: !19933, line: 63, type: !136)
!19968 = !DILocation(line: 63, column: 21, scope: !19932)
!19969 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !19932, file: !19933, line: 63, type: !136)
!19970 = !DILocation(line: 63, column: 34, scope: !19932)
!19971 = !DILocalVariable(name: "st", scope: !19932, file: !19933, line: 65, type: !19936)
!19972 = !DILocation(line: 65, column: 15, scope: !19932)
!19973 = !DILocalVariable(name: "result", scope: !19932, file: !19933, line: 66, type: !5)
!19974 = !DILocation(line: 66, column: 7, scope: !19932)
!19975 = !DILocation(line: 66, column: 17, scope: !19932)
!19976 = !DILocation(line: 66, column: 20, scope: !19932)
!19977 = !DILocation(line: 66, column: 32, scope: !19932)
!19978 = !DILocation(line: 66, column: 26, scope: !19932)
!19979 = !DILocation(line: 66, column: 51, scope: !19932)
!19980 = !DILocation(line: 66, column: 44, scope: !19932)
!19981 = !DILocation(line: 68, column: 7, scope: !19982)
!19982 = distinct !DILexicalBlock(scope: !19932, file: !19933, line: 68, column: 7)
!19983 = !DILocation(line: 68, column: 14, scope: !19982)
!19984 = !DILocation(line: 68, column: 7, scope: !19932)
!19985 = !DILocalVariable(name: "dir_mode", scope: !19986, file: !19933, line: 70, type: !136)
!19986 = distinct !DILexicalBlock(scope: !19982, file: !19933, line: 69, column: 5)
!19987 = !DILocation(line: 70, column: 14, scope: !19986)
!19988 = !DILocation(line: 70, column: 28, scope: !19986)
!19989 = !DILocation(line: 76, column: 13, scope: !19990)
!19990 = distinct !DILexicalBlock(scope: !19986, file: !19933, line: 76, column: 11)
!19991 = !DILocation(line: 76, column: 11, scope: !19986)
!19992 = !DILocation(line: 78, column: 11, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19990, file: !19933, line: 77, column: 9)
!19994 = !DILocation(line: 78, column: 17, scope: !19993)
!19995 = !DILocation(line: 79, column: 18, scope: !19993)
!19996 = !DILocation(line: 80, column: 9, scope: !19993)
!19997 = !DILocalVariable(name: "indeterminate", scope: !19998, file: !19933, line: 87, type: !136)
!19998 = distinct !DILexicalBlock(scope: !19990, file: !19933, line: 82, column: 9)
!19999 = !DILocation(line: 87, column: 18, scope: !19998)
!20000 = !DILocation(line: 94, column: 16, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19998, file: !19933, line: 94, column: 15)
!20002 = !DILocation(line: 94, column: 22, scope: !20001)
!20003 = !DILocation(line: 94, column: 36, scope: !20001)
!20004 = !DILocation(line: 94, column: 39, scope: !20001)
!20005 = !DILocation(line: 94, column: 51, scope: !20001)
!20006 = !DILocation(line: 94, column: 45, scope: !20001)
!20007 = !DILocation(line: 95, column: 15, scope: !20001)
!20008 = !DILocation(line: 95, column: 19, scope: !20001)
!20009 = !DILocation(line: 95, column: 25, scope: !20001)
!20010 = !DILocation(line: 95, column: 39, scope: !20001)
!20011 = !DILocation(line: 95, column: 42, scope: !20001)
!20012 = !DILocation(line: 95, column: 54, scope: !20001)
!20013 = !DILocation(line: 95, column: 48, scope: !20001)
!20014 = !DILocation(line: 94, column: 15, scope: !19998)
!20015 = !DILocation(line: 97, column: 30, scope: !20016)
!20016 = distinct !DILexicalBlock(scope: !20001, file: !19933, line: 96, column: 13)
!20017 = !DILocation(line: 97, column: 27, scope: !20016)
!20018 = !DILocation(line: 97, column: 25, scope: !20016)
!20019 = !DILocation(line: 98, column: 35, scope: !20016)
!20020 = !DILocation(line: 98, column: 39, scope: !20016)
!20021 = !DILocation(line: 98, column: 46, scope: !20016)
!20022 = !DILocation(line: 98, column: 27, scope: !20016)
!20023 = !DILocation(line: 99, column: 27, scope: !20016)
!20024 = !DILocation(line: 99, column: 38, scope: !20016)
!20025 = !DILocation(line: 100, column: 35, scope: !20016)
!20026 = !DILocation(line: 100, column: 40, scope: !20016)
!20027 = !DILocation(line: 100, column: 47, scope: !20016)
!20028 = !DILocation(line: 100, column: 27, scope: !20016)
!20029 = !DILocation(line: 101, column: 34, scope: !20016)
!20030 = !DILocation(line: 101, column: 39, scope: !20016)
!20031 = !DILocation(line: 101, column: 46, scope: !20016)
!20032 = !DILocation(line: 101, column: 27, scope: !20016)
!20033 = !DILocation(line: 97, column: 22, scope: !20016)
!20034 = !DILocation(line: 108, column: 19, scope: !20035)
!20035 = distinct !DILexicalBlock(scope: !20016, file: !19933, line: 108, column: 19)
!20036 = !DILocation(line: 108, column: 26, scope: !20035)
!20037 = !DILocation(line: 108, column: 31, scope: !20035)
!20038 = !DILocation(line: 108, column: 35, scope: !20035)
!20039 = !DILocation(line: 108, column: 44, scope: !20035)
!20040 = !DILocation(line: 108, column: 19, scope: !20016)
!20041 = !DILocation(line: 109, column: 33, scope: !20035)
!20042 = !DILocation(line: 109, column: 42, scope: !20035)
!20043 = !DILocation(line: 109, column: 31, scope: !20035)
!20044 = !DILocation(line: 109, column: 17, scope: !20035)
!20045 = !DILocation(line: 110, column: 13, scope: !20016)
!20046 = !DILocation(line: 115, column: 15, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !19998, file: !19933, line: 115, column: 15)
!20048 = !DILocation(line: 115, column: 22, scope: !20047)
!20049 = !DILocation(line: 115, column: 27, scope: !20047)
!20050 = !DILocation(line: 115, column: 33, scope: !20047)
!20051 = !DILocation(line: 115, column: 44, scope: !20047)
!20052 = !DILocation(line: 115, column: 42, scope: !20047)
!20053 = !DILocation(line: 115, column: 52, scope: !20047)
!20054 = !DILocation(line: 115, column: 50, scope: !20047)
!20055 = !DILocation(line: 115, column: 69, scope: !20047)
!20056 = !DILocation(line: 115, column: 67, scope: !20047)
!20057 = !DILocation(line: 115, column: 15, scope: !19998)
!20058 = !DILocalVariable(name: "chmod_mode", scope: !20059, file: !19933, line: 117, type: !136)
!20059 = distinct !DILexicalBlock(scope: !20047, file: !19933, line: 116, column: 13)
!20060 = !DILocation(line: 117, column: 22, scope: !20059)
!20061 = !DILocation(line: 118, column: 17, scope: !20059)
!20062 = !DILocation(line: 118, column: 25, scope: !20059)
!20063 = !DILocation(line: 118, column: 34, scope: !20059)
!20064 = !DILocation(line: 118, column: 55, scope: !20059)
!20065 = !DILocation(line: 118, column: 54, scope: !20059)
!20066 = !DILocation(line: 118, column: 52, scope: !20059)
!20067 = !DILocation(line: 118, column: 22, scope: !20059)
!20068 = !DILocation(line: 119, column: 45, scope: !20059)
!20069 = !DILocation(line: 119, column: 42, scope: !20059)
!20070 = !DILocation(line: 119, column: 25, scope: !20059)
!20071 = !DILocation(line: 120, column: 35, scope: !20059)
!20072 = !DILocation(line: 120, column: 39, scope: !20059)
!20073 = !DILocation(line: 120, column: 27, scope: !20059)
!20074 = !DILocation(line: 121, column: 27, scope: !20059)
!20075 = !DILocation(line: 121, column: 38, scope: !20059)
!20076 = !DILocation(line: 122, column: 35, scope: !20059)
!20077 = !DILocation(line: 122, column: 40, scope: !20059)
!20078 = !DILocation(line: 122, column: 27, scope: !20059)
!20079 = !DILocation(line: 123, column: 34, scope: !20059)
!20080 = !DILocation(line: 123, column: 39, scope: !20059)
!20081 = !DILocation(line: 123, column: 27, scope: !20059)
!20082 = !DILocation(line: 119, column: 22, scope: !20059)
!20083 = !DILocation(line: 124, column: 13, scope: !20059)
!20084 = !DILocation(line: 126, column: 5, scope: !19986)
!20085 = !DILocation(line: 128, column: 12, scope: !20086)
!20086 = distinct !DILexicalBlock(scope: !19932, file: !19933, line: 128, column: 7)
!20087 = !DILocation(line: 128, column: 9, scope: !20086)
!20088 = !DILocation(line: 128, column: 7, scope: !19932)
!20089 = !DILocation(line: 130, column: 11, scope: !20090)
!20090 = distinct !DILexicalBlock(scope: !20091, file: !19933, line: 130, column: 11)
!20091 = distinct !DILexicalBlock(scope: !20086, file: !19933, line: 129, column: 5)
!20092 = !DILocation(line: 130, column: 18, scope: !20090)
!20093 = !DILocation(line: 130, column: 11, scope: !20091)
!20094 = !DILocation(line: 131, column: 25, scope: !20090)
!20095 = !DILocation(line: 131, column: 18, scope: !20090)
!20096 = !DILocation(line: 131, column: 16, scope: !20090)
!20097 = !DILocation(line: 131, column: 9, scope: !20090)
!20098 = !DILocalVariable(name: "e", scope: !20099, file: !19933, line: 134, type: !5)
!20099 = distinct !DILexicalBlock(scope: !20090, file: !19933, line: 133, column: 9)
!20100 = !DILocation(line: 134, column: 15, scope: !20099)
!20101 = !DILocation(line: 134, column: 19, scope: !20099)
!20102 = !DILocation(line: 135, column: 18, scope: !20099)
!20103 = !DILocation(line: 135, column: 11, scope: !20099)
!20104 = !DILocation(line: 136, column: 19, scope: !20099)
!20105 = !DILocation(line: 136, column: 11, scope: !20099)
!20106 = !DILocation(line: 136, column: 17, scope: !20099)
!20107 = !DILocation(line: 138, column: 5, scope: !20091)
!20108 = !DILocation(line: 140, column: 10, scope: !19932)
!20109 = !DILocation(line: 140, column: 3, scope: !19932)
!20110 = distinct !DISubprogram(name: "openat_safer", scope: !20111, file: !20111, line: 29, type: !20112, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1721, retainedNodes: !295)
!20111 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!20112 = !DISubroutineType(types: !20113)
!20113 = !{!5, !5, !180, !5, null}
!20114 = !DILocalVariable(name: "fd", arg: 1, scope: !20110, file: !20111, line: 29, type: !5)
!20115 = !DILocation(line: 29, column: 19, scope: !20110)
!20116 = !DILocalVariable(name: "file", arg: 2, scope: !20110, file: !20111, line: 29, type: !180)
!20117 = !DILocation(line: 29, column: 35, scope: !20110)
!20118 = !DILocalVariable(name: "flags", arg: 3, scope: !20110, file: !20111, line: 29, type: !5)
!20119 = !DILocation(line: 29, column: 45, scope: !20110)
!20120 = !DILocalVariable(name: "mode", scope: !20110, file: !20111, line: 31, type: !136)
!20121 = !DILocation(line: 31, column: 10, scope: !20110)
!20122 = !DILocation(line: 33, column: 7, scope: !20123)
!20123 = distinct !DILexicalBlock(scope: !20110, file: !20111, line: 33, column: 7)
!20124 = !DILocation(line: 33, column: 13, scope: !20123)
!20125 = !DILocation(line: 33, column: 7, scope: !20110)
!20126 = !DILocalVariable(name: "ap", scope: !20127, file: !20111, line: 35, type: !1724)
!20127 = distinct !DILexicalBlock(scope: !20123, file: !20111, line: 34, column: 5)
!20128 = !DILocation(line: 35, column: 15, scope: !20127)
!20129 = !DILocation(line: 36, column: 7, scope: !20127)
!20130 = !DILocation(line: 40, column: 14, scope: !20127)
!20131 = !DILocation(line: 40, column: 12, scope: !20127)
!20132 = !DILocation(line: 42, column: 7, scope: !20127)
!20133 = !DILocation(line: 43, column: 5, scope: !20127)
!20134 = !DILocation(line: 45, column: 28, scope: !20110)
!20135 = !DILocation(line: 45, column: 32, scope: !20110)
!20136 = !DILocation(line: 45, column: 38, scope: !20110)
!20137 = !DILocation(line: 45, column: 45, scope: !20110)
!20138 = !DILocation(line: 45, column: 20, scope: !20110)
!20139 = !DILocation(line: 45, column: 10, scope: !20110)
!20140 = !DILocation(line: 45, column: 3, scope: !20110)
!20141 = distinct !DISubprogram(name: "randint_new", scope: !1738, file: !1738, line: 71, type: !20142, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20142 = !DISubroutineType(types: !20143)
!20143 = !{!1736, !1741}
!20144 = !DILocalVariable(name: "source", arg: 1, scope: !20141, file: !1738, line: 71, type: !1741)
!20145 = !DILocation(line: 71, column: 38, scope: !20141)
!20146 = !DILocalVariable(name: "s", scope: !20141, file: !1738, line: 73, type: !1736)
!20147 = !DILocation(line: 73, column: 26, scope: !20141)
!20148 = !DILocation(line: 73, column: 30, scope: !20141)
!20149 = !DILocation(line: 74, column: 15, scope: !20141)
!20150 = !DILocation(line: 74, column: 3, scope: !20141)
!20151 = !DILocation(line: 74, column: 6, scope: !20141)
!20152 = !DILocation(line: 74, column: 13, scope: !20141)
!20153 = !DILocation(line: 75, column: 16, scope: !20141)
!20154 = !DILocation(line: 75, column: 19, scope: !20141)
!20155 = !DILocation(line: 75, column: 27, scope: !20141)
!20156 = !DILocation(line: 75, column: 3, scope: !20141)
!20157 = !DILocation(line: 75, column: 6, scope: !20141)
!20158 = !DILocation(line: 75, column: 14, scope: !20141)
!20159 = !DILocation(line: 76, column: 10, scope: !20141)
!20160 = !DILocation(line: 76, column: 3, scope: !20141)
!20161 = distinct !DISubprogram(name: "randint_all_new", scope: !1738, file: !1738, line: 84, type: !20162, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20162 = !DISubroutineType(types: !20163)
!20163 = !{!1736, !180, !52}
!20164 = !DILocalVariable(name: "name", arg: 1, scope: !20161, file: !1738, line: 84, type: !180)
!20165 = !DILocation(line: 84, column: 30, scope: !20161)
!20166 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20161, file: !1738, line: 84, type: !52)
!20167 = !DILocation(line: 84, column: 43, scope: !20161)
!20168 = !DILocalVariable(name: "source", scope: !20161, file: !1738, line: 86, type: !1741)
!20169 = !DILocation(line: 86, column: 27, scope: !20161)
!20170 = !DILocation(line: 86, column: 50, scope: !20161)
!20171 = !DILocation(line: 86, column: 56, scope: !20161)
!20172 = !DILocation(line: 86, column: 36, scope: !20161)
!20173 = !DILocalVariable(name: "s", scope: !20161, file: !1738, line: 87, type: !1736)
!20174 = !DILocation(line: 87, column: 26, scope: !20161)
!20175 = !DILocation(line: 87, column: 43, scope: !20161)
!20176 = !DILocation(line: 87, column: 30, scope: !20161)
!20177 = !DILocation(line: 88, column: 12, scope: !20161)
!20178 = !DILocation(line: 88, column: 15, scope: !20161)
!20179 = !DILocation(line: 88, column: 3, scope: !20161)
!20180 = !DILocation(line: 89, column: 10, scope: !20161)
!20181 = !DILocation(line: 89, column: 3, scope: !20161)
!20182 = distinct !DISubprogram(name: "randint_get_source", scope: !1738, file: !1738, line: 95, type: !20183, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20183 = !DISubroutineType(types: !20184)
!20184 = !{!1741, !20185}
!20185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20186, size: 64)
!20186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!20187 = !DILocalVariable(name: "s", arg: 1, scope: !20182, file: !1738, line: 95, type: !20185)
!20188 = !DILocation(line: 95, column: 50, scope: !20182)
!20189 = !DILocation(line: 97, column: 10, scope: !20182)
!20190 = !DILocation(line: 97, column: 13, scope: !20182)
!20191 = !DILocation(line: 97, column: 3, scope: !20182)
!20192 = distinct !DISubprogram(name: "randint_genmax", scope: !1738, file: !1738, line: 116, type: !20193, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20193 = !DISubroutineType(types: !20194)
!20194 = !{!1745, !1736, !1745}
!20195 = !DILocalVariable(name: "s", arg: 1, scope: !20192, file: !1738, line: 116, type: !1736)
!20196 = !DILocation(line: 116, column: 40, scope: !20192)
!20197 = !DILocalVariable(name: "genmax", arg: 2, scope: !20192, file: !1738, line: 116, type: !1745)
!20198 = !DILocation(line: 116, column: 51, scope: !20192)
!20199 = !DILocalVariable(name: "source", scope: !20192, file: !1738, line: 118, type: !1741)
!20200 = !DILocation(line: 118, column: 27, scope: !20192)
!20201 = !DILocation(line: 118, column: 36, scope: !20192)
!20202 = !DILocation(line: 118, column: 39, scope: !20192)
!20203 = !DILocalVariable(name: "randnum", scope: !20192, file: !1738, line: 119, type: !1745)
!20204 = !DILocation(line: 119, column: 11, scope: !20192)
!20205 = !DILocation(line: 119, column: 21, scope: !20192)
!20206 = !DILocation(line: 119, column: 24, scope: !20192)
!20207 = !DILocalVariable(name: "randmax", scope: !20192, file: !1738, line: 120, type: !1745)
!20208 = !DILocation(line: 120, column: 11, scope: !20192)
!20209 = !DILocation(line: 120, column: 21, scope: !20192)
!20210 = !DILocation(line: 120, column: 24, scope: !20192)
!20211 = !DILocalVariable(name: "choices", scope: !20192, file: !1738, line: 121, type: !1745)
!20212 = !DILocation(line: 121, column: 11, scope: !20192)
!20213 = !DILocation(line: 121, column: 21, scope: !20192)
!20214 = !DILocation(line: 121, column: 28, scope: !20192)
!20215 = !DILocation(line: 123, column: 3, scope: !20192)
!20216 = !DILocation(line: 125, column: 11, scope: !20217)
!20217 = distinct !DILexicalBlock(scope: !20218, file: !1738, line: 125, column: 11)
!20218 = distinct !DILexicalBlock(scope: !20192, file: !1738, line: 124, column: 5)
!20219 = !DILocation(line: 125, column: 21, scope: !20217)
!20220 = !DILocation(line: 125, column: 19, scope: !20217)
!20221 = !DILocation(line: 125, column: 11, scope: !20218)
!20222 = !DILocalVariable(name: "i", scope: !20223, file: !1738, line: 130, type: !52)
!20223 = distinct !DILexicalBlock(scope: !20217, file: !1738, line: 126, column: 9)
!20224 = !DILocation(line: 130, column: 18, scope: !20223)
!20225 = !DILocalVariable(name: "rmax", scope: !20223, file: !1738, line: 131, type: !1745)
!20226 = !DILocation(line: 131, column: 19, scope: !20223)
!20227 = !DILocation(line: 131, column: 26, scope: !20223)
!20228 = !DILocalVariable(name: "buf", scope: !20223, file: !1738, line: 132, type: !1747)
!20229 = !DILocation(line: 132, column: 25, scope: !20223)
!20230 = !DILocation(line: 134, column: 11, scope: !20223)
!20231 = !DILocation(line: 136, column: 34, scope: !20232)
!20232 = distinct !DILexicalBlock(scope: !20223, file: !1738, line: 135, column: 13)
!20233 = !DILocation(line: 136, column: 22, scope: !20232)
!20234 = !DILocation(line: 136, column: 40, scope: !20232)
!20235 = !DILocation(line: 136, column: 20, scope: !20232)
!20236 = !DILocation(line: 137, column: 16, scope: !20232)
!20237 = !DILocation(line: 138, column: 13, scope: !20232)
!20238 = !DILocation(line: 139, column: 18, scope: !20223)
!20239 = !DILocation(line: 139, column: 25, scope: !20223)
!20240 = !DILocation(line: 139, column: 23, scope: !20223)
!20241 = distinct !{!20241, !20230, !20242}
!20242 = !DILocation(line: 139, column: 31, scope: !20223)
!20243 = !DILocation(line: 141, column: 21, scope: !20223)
!20244 = !DILocation(line: 141, column: 29, scope: !20223)
!20245 = !DILocation(line: 141, column: 34, scope: !20223)
!20246 = !DILocation(line: 141, column: 11, scope: !20223)
!20247 = !DILocation(line: 150, column: 13, scope: !20223)
!20248 = !DILocation(line: 152, column: 11, scope: !20223)
!20249 = !DILocation(line: 154, column: 37, scope: !20250)
!20250 = distinct !DILexicalBlock(scope: !20223, file: !1738, line: 153, column: 13)
!20251 = !DILocation(line: 154, column: 25, scope: !20250)
!20252 = !DILocation(line: 154, column: 52, scope: !20250)
!20253 = !DILocation(line: 154, column: 48, scope: !20250)
!20254 = !DILocation(line: 154, column: 46, scope: !20250)
!20255 = !DILocation(line: 154, column: 23, scope: !20250)
!20256 = !DILocation(line: 155, column: 37, scope: !20250)
!20257 = !DILocation(line: 155, column: 25, scope: !20250)
!20258 = !DILocation(line: 155, column: 46, scope: !20250)
!20259 = !DILocation(line: 155, column: 23, scope: !20250)
!20260 = !DILocation(line: 156, column: 16, scope: !20250)
!20261 = !DILocation(line: 157, column: 13, scope: !20250)
!20262 = !DILocation(line: 158, column: 18, scope: !20223)
!20263 = !DILocation(line: 158, column: 28, scope: !20223)
!20264 = !DILocation(line: 158, column: 26, scope: !20223)
!20265 = distinct !{!20265, !20248, !20266}
!20266 = !DILocation(line: 158, column: 34, scope: !20223)
!20267 = !DILocation(line: 159, column: 9, scope: !20223)
!20268 = !DILocation(line: 161, column: 11, scope: !20269)
!20269 = distinct !DILexicalBlock(scope: !20218, file: !1738, line: 161, column: 11)
!20270 = !DILocation(line: 161, column: 22, scope: !20269)
!20271 = !DILocation(line: 161, column: 19, scope: !20269)
!20272 = !DILocation(line: 161, column: 11, scope: !20218)
!20273 = !DILocation(line: 163, column: 24, scope: !20274)
!20274 = distinct !DILexicalBlock(scope: !20269, file: !1738, line: 162, column: 9)
!20275 = !DILocation(line: 163, column: 27, scope: !20274)
!20276 = !DILocation(line: 163, column: 35, scope: !20274)
!20277 = !DILocation(line: 163, column: 11, scope: !20274)
!20278 = !DILocation(line: 163, column: 14, scope: !20274)
!20279 = !DILocation(line: 163, column: 22, scope: !20274)
!20280 = !DILocation(line: 164, column: 18, scope: !20274)
!20281 = !DILocation(line: 164, column: 11, scope: !20274)
!20282 = !DILocalVariable(name: "excess_choices", scope: !20283, file: !1738, line: 178, type: !1745)
!20283 = distinct !DILexicalBlock(scope: !20269, file: !1738, line: 167, column: 9)
!20284 = !DILocation(line: 178, column: 19, scope: !20283)
!20285 = !DILocation(line: 178, column: 36, scope: !20283)
!20286 = !DILocation(line: 178, column: 46, scope: !20283)
!20287 = !DILocation(line: 178, column: 44, scope: !20283)
!20288 = !DILocalVariable(name: "unusable_choices", scope: !20283, file: !1738, line: 179, type: !1745)
!20289 = !DILocation(line: 179, column: 19, scope: !20283)
!20290 = !DILocation(line: 179, column: 38, scope: !20283)
!20291 = !DILocation(line: 179, column: 55, scope: !20283)
!20292 = !DILocation(line: 179, column: 53, scope: !20283)
!20293 = !DILocalVariable(name: "last_usable_choice", scope: !20283, file: !1738, line: 180, type: !1745)
!20294 = !DILocation(line: 180, column: 19, scope: !20283)
!20295 = !DILocation(line: 180, column: 40, scope: !20283)
!20296 = !DILocation(line: 180, column: 50, scope: !20283)
!20297 = !DILocation(line: 180, column: 48, scope: !20283)
!20298 = !DILocalVariable(name: "reduced_randnum", scope: !20283, file: !1738, line: 181, type: !1745)
!20299 = !DILocation(line: 181, column: 19, scope: !20283)
!20300 = !DILocation(line: 181, column: 37, scope: !20283)
!20301 = !DILocation(line: 181, column: 47, scope: !20283)
!20302 = !DILocation(line: 181, column: 45, scope: !20283)
!20303 = !DILocation(line: 183, column: 15, scope: !20304)
!20304 = distinct !DILexicalBlock(scope: !20283, file: !1738, line: 183, column: 15)
!20305 = !DILocation(line: 183, column: 26, scope: !20304)
!20306 = !DILocation(line: 183, column: 23, scope: !20304)
!20307 = !DILocation(line: 183, column: 15, scope: !20283)
!20308 = !DILocation(line: 185, column: 28, scope: !20309)
!20309 = distinct !DILexicalBlock(scope: !20304, file: !1738, line: 184, column: 13)
!20310 = !DILocation(line: 185, column: 38, scope: !20309)
!20311 = !DILocation(line: 185, column: 36, scope: !20309)
!20312 = !DILocation(line: 185, column: 15, scope: !20309)
!20313 = !DILocation(line: 185, column: 18, scope: !20309)
!20314 = !DILocation(line: 185, column: 26, scope: !20309)
!20315 = !DILocation(line: 186, column: 28, scope: !20309)
!20316 = !DILocation(line: 186, column: 45, scope: !20309)
!20317 = !DILocation(line: 186, column: 43, scope: !20309)
!20318 = !DILocation(line: 186, column: 15, scope: !20309)
!20319 = !DILocation(line: 186, column: 18, scope: !20309)
!20320 = !DILocation(line: 186, column: 26, scope: !20309)
!20321 = !DILocation(line: 187, column: 22, scope: !20309)
!20322 = !DILocation(line: 187, column: 15, scope: !20309)
!20323 = !DILocation(line: 192, column: 21, scope: !20283)
!20324 = !DILocation(line: 192, column: 19, scope: !20283)
!20325 = !DILocation(line: 193, column: 21, scope: !20283)
!20326 = !DILocation(line: 193, column: 38, scope: !20283)
!20327 = !DILocation(line: 193, column: 19, scope: !20283)
!20328 = distinct !{!20328, !20215, !20329}
!20329 = !DILocation(line: 195, column: 5, scope: !20192)
!20330 = !DILocation(line: 196, column: 1, scope: !20192)
!20331 = distinct !DISubprogram(name: "shift_left", scope: !1738, file: !1738, line: 106, type: !20332, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20332 = !DISubroutineType(types: !20333)
!20333 = !{!1745, !1745}
!20334 = !DILocalVariable(name: "x", arg: 1, scope: !20331, file: !1738, line: 106, type: !1745)
!20335 = !DILocation(line: 106, column: 43, scope: !20331)
!20336 = !DILocation(line: 108, column: 27, scope: !20331)
!20337 = !DILocation(line: 108, column: 29, scope: !20331)
!20338 = !DILocation(line: 108, column: 3, scope: !20331)
!20339 = distinct !DISubprogram(name: "randint_free", scope: !1738, file: !1738, line: 201, type: !20340, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20340 = !DISubroutineType(types: !20341)
!20341 = !{null, !1736}
!20342 = !DILocalVariable(name: "s", arg: 1, scope: !20339, file: !1738, line: 201, type: !1736)
!20343 = !DILocation(line: 201, column: 38, scope: !20339)
!20344 = !DILocation(line: 203, column: 19, scope: !20339)
!20345 = !DILocation(line: 203, column: 3, scope: !20339)
!20346 = !DILocation(line: 204, column: 9, scope: !20339)
!20347 = !DILocation(line: 204, column: 3, scope: !20339)
!20348 = !DILocation(line: 205, column: 1, scope: !20339)
!20349 = distinct !DISubprogram(name: "randint_all_free", scope: !1738, file: !1738, line: 211, type: !20350, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1733, retainedNodes: !295)
!20350 = !DISubroutineType(types: !20351)
!20351 = !{!5, !1736}
!20352 = !DILocalVariable(name: "s", arg: 1, scope: !20349, file: !1738, line: 211, type: !1736)
!20353 = !DILocation(line: 211, column: 42, scope: !20349)
!20354 = !DILocalVariable(name: "r", scope: !20349, file: !1738, line: 213, type: !5)
!20355 = !DILocation(line: 213, column: 7, scope: !20349)
!20356 = !DILocation(line: 213, column: 26, scope: !20349)
!20357 = !DILocation(line: 213, column: 29, scope: !20349)
!20358 = !DILocation(line: 213, column: 11, scope: !20349)
!20359 = !DILocalVariable(name: "e", scope: !20349, file: !1738, line: 214, type: !5)
!20360 = !DILocation(line: 214, column: 7, scope: !20349)
!20361 = !DILocation(line: 214, column: 11, scope: !20349)
!20362 = !DILocation(line: 215, column: 17, scope: !20349)
!20363 = !DILocation(line: 215, column: 3, scope: !20349)
!20364 = !DILocation(line: 216, column: 11, scope: !20349)
!20365 = !DILocation(line: 216, column: 3, scope: !20349)
!20366 = !DILocation(line: 216, column: 9, scope: !20349)
!20367 = !DILocation(line: 217, column: 10, scope: !20349)
!20368 = !DILocation(line: 217, column: 3, scope: !20349)
!20369 = distinct !DISubprogram(name: "randread_new", scope: !1793, file: !1793, line: 204, type: !20370, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20370 = !DISubroutineType(types: !20371)
!20371 = !{!1791, !180, !52}
!20372 = !DILocalVariable(name: "name", arg: 1, scope: !20369, file: !1793, line: 204, type: !180)
!20373 = !DILocation(line: 204, column: 27, scope: !20369)
!20374 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20369, file: !1793, line: 204, type: !52)
!20375 = !DILocation(line: 204, column: 40, scope: !20369)
!20376 = !DILocation(line: 206, column: 7, scope: !20377)
!20377 = distinct !DILexicalBlock(scope: !20369, file: !1793, line: 206, column: 7)
!20378 = !DILocation(line: 206, column: 19, scope: !20377)
!20379 = !DILocation(line: 206, column: 7, scope: !20369)
!20380 = !DILocation(line: 207, column: 12, scope: !20377)
!20381 = !DILocation(line: 207, column: 5, scope: !20377)
!20382 = !DILocalVariable(name: "source", scope: !20383, file: !1793, line: 210, type: !1751)
!20383 = distinct !DILexicalBlock(scope: !20377, file: !1793, line: 209, column: 5)
!20384 = !DILocation(line: 210, column: 13, scope: !20383)
!20385 = !DILocalVariable(name: "s", scope: !20383, file: !1793, line: 211, type: !1791)
!20386 = !DILocation(line: 211, column: 31, scope: !20383)
!20387 = !DILocation(line: 213, column: 11, scope: !20388)
!20388 = distinct !DILexicalBlock(scope: !20383, file: !1793, line: 213, column: 11)
!20389 = !DILocation(line: 213, column: 11, scope: !20383)
!20390 = !DILocation(line: 214, column: 38, scope: !20391)
!20391 = distinct !DILexicalBlock(scope: !20388, file: !1793, line: 214, column: 13)
!20392 = !DILocation(line: 214, column: 25, scope: !20391)
!20393 = !DILocation(line: 214, column: 23, scope: !20391)
!20394 = !DILocation(line: 214, column: 13, scope: !20388)
!20395 = !DILocation(line: 215, column: 11, scope: !20391)
!20396 = !DILocation(line: 214, column: 49, scope: !20391)
!20397 = !DILocation(line: 217, column: 23, scope: !20383)
!20398 = !DILocation(line: 217, column: 31, scope: !20383)
!20399 = !DILocation(line: 217, column: 11, scope: !20383)
!20400 = !DILocation(line: 217, column: 9, scope: !20383)
!20401 = !DILocation(line: 219, column: 11, scope: !20402)
!20402 = distinct !DILexicalBlock(scope: !20383, file: !1793, line: 219, column: 11)
!20403 = !DILocation(line: 219, column: 11, scope: !20383)
!20404 = !DILocation(line: 220, column: 18, scope: !20402)
!20405 = !DILocation(line: 220, column: 26, scope: !20402)
!20406 = !DILocation(line: 220, column: 29, scope: !20402)
!20407 = !DILocation(line: 220, column: 33, scope: !20402)
!20408 = !DILocation(line: 220, column: 44, scope: !20402)
!20409 = !DILocation(line: 220, column: 9, scope: !20402)
!20410 = !DILocation(line: 223, column: 11, scope: !20411)
!20411 = distinct !DILexicalBlock(scope: !20402, file: !1793, line: 222, column: 9)
!20412 = !DILocation(line: 223, column: 14, scope: !20411)
!20413 = !DILocation(line: 223, column: 18, scope: !20411)
!20414 = !DILocation(line: 223, column: 24, scope: !20411)
!20415 = !DILocation(line: 223, column: 33, scope: !20411)
!20416 = !DILocation(line: 224, column: 22, scope: !20411)
!20417 = !DILocation(line: 224, column: 25, scope: !20411)
!20418 = !DILocation(line: 224, column: 29, scope: !20411)
!20419 = !DILocation(line: 224, column: 35, scope: !20411)
!20420 = !DILocation(line: 224, column: 41, scope: !20411)
!20421 = !DILocation(line: 225, column: 22, scope: !20411)
!20422 = !DILocation(line: 224, column: 11, scope: !20411)
!20423 = !DILocation(line: 226, column: 24, scope: !20411)
!20424 = !DILocation(line: 226, column: 27, scope: !20411)
!20425 = !DILocation(line: 226, column: 31, scope: !20411)
!20426 = !DILocation(line: 226, column: 37, scope: !20411)
!20427 = !DILocation(line: 226, column: 11, scope: !20411)
!20428 = !DILocation(line: 229, column: 14, scope: !20383)
!20429 = !DILocation(line: 229, column: 7, scope: !20383)
!20430 = !DILocation(line: 231, column: 1, scope: !20369)
!20431 = distinct !DISubprogram(name: "simple_new", scope: !1793, file: !1793, line: 137, type: !20432, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20432 = !DISubroutineType(types: !20433)
!20433 = !{!1791, !1751, !685}
!20434 = !DILocalVariable(name: "source", arg: 1, scope: !20431, file: !1793, line: 137, type: !1751)
!20435 = !DILocation(line: 137, column: 19, scope: !20431)
!20436 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !20431, file: !1793, line: 137, type: !685)
!20437 = !DILocation(line: 137, column: 39, scope: !20431)
!20438 = !DILocalVariable(name: "s", scope: !20431, file: !1793, line: 139, type: !1791)
!20439 = !DILocation(line: 139, column: 27, scope: !20431)
!20440 = !DILocation(line: 139, column: 31, scope: !20431)
!20441 = !DILocation(line: 140, column: 15, scope: !20431)
!20442 = !DILocation(line: 140, column: 3, scope: !20431)
!20443 = !DILocation(line: 140, column: 6, scope: !20431)
!20444 = !DILocation(line: 140, column: 13, scope: !20431)
!20445 = !DILocation(line: 141, column: 3, scope: !20431)
!20446 = !DILocation(line: 141, column: 6, scope: !20431)
!20447 = !DILocation(line: 141, column: 14, scope: !20431)
!20448 = !DILocation(line: 142, column: 20, scope: !20431)
!20449 = !DILocation(line: 142, column: 3, scope: !20431)
!20450 = !DILocation(line: 142, column: 6, scope: !20431)
!20451 = !DILocation(line: 142, column: 18, scope: !20431)
!20452 = !DILocation(line: 143, column: 10, scope: !20431)
!20453 = !DILocation(line: 143, column: 3, scope: !20431)
!20454 = distinct !DISubprogram(name: "get_nonce", scope: !1793, file: !1793, line: 151, type: !20455, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20455 = !DISubroutineType(types: !20456)
!20456 = !{null, !47, !52, !52}
!20457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1092, line: 30, size: 128, elements: !20458)
!20458 = !{!20459, !20460}
!20459 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20457, file: !1092, line: 32, baseType: !376, size: 64)
!20460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !20457, file: !1092, line: 33, baseType: !1096, size: 64, offset: 64)
!20461 = !DILocalVariable(name: "buffer", arg: 1, scope: !20454, file: !1793, line: 151, type: !47)
!20462 = !DILocation(line: 151, column: 18, scope: !20454)
!20463 = !DILocalVariable(name: "bufsize", arg: 2, scope: !20454, file: !1793, line: 151, type: !52)
!20464 = !DILocation(line: 151, column: 33, scope: !20454)
!20465 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !20454, file: !1793, line: 151, type: !52)
!20466 = !DILocation(line: 151, column: 49, scope: !20454)
!20467 = !DILocalVariable(name: "buf", scope: !20454, file: !1793, line: 153, type: !7)
!20468 = !DILocation(line: 153, column: 9, scope: !20454)
!20469 = !DILocation(line: 153, column: 15, scope: !20454)
!20470 = !DILocalVariable(name: "seeded", scope: !20454, file: !1793, line: 154, type: !661)
!20471 = !DILocation(line: 154, column: 11, scope: !20454)
!20472 = !DILocalVariable(name: "fd", scope: !20454, file: !1793, line: 157, type: !5)
!20473 = !DILocation(line: 157, column: 7, scope: !20454)
!20474 = !DILocation(line: 157, column: 12, scope: !20454)
!20475 = !DILocation(line: 158, column: 12, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 158, column: 7)
!20477 = !DILocation(line: 158, column: 9, scope: !20476)
!20478 = !DILocation(line: 158, column: 7, scope: !20454)
!20479 = !DILocation(line: 160, column: 22, scope: !20480)
!20480 = distinct !DILexicalBlock(scope: !20476, file: !1793, line: 159, column: 5)
!20481 = !DILocation(line: 160, column: 26, scope: !20480)
!20482 = !DILocation(line: 160, column: 31, scope: !20480)
!20483 = !DILocation(line: 160, column: 16, scope: !20480)
!20484 = !DILocation(line: 160, column: 14, scope: !20480)
!20485 = !DILocation(line: 161, column: 11, scope: !20486)
!20486 = distinct !DILexicalBlock(scope: !20480, file: !1793, line: 161, column: 11)
!20487 = !DILocation(line: 161, column: 18, scope: !20486)
!20488 = !DILocation(line: 161, column: 11, scope: !20480)
!20489 = !DILocation(line: 162, column: 16, scope: !20486)
!20490 = !DILocation(line: 162, column: 9, scope: !20486)
!20491 = !DILocation(line: 163, column: 14, scope: !20480)
!20492 = !DILocation(line: 163, column: 7, scope: !20480)
!20493 = !DILocation(line: 164, column: 5, scope: !20480)
!20494 = !DILocation(line: 177, column: 3, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 177, column: 3)
!20496 = !DILocation(line: 177, column: 3, scope: !20454)
!20497 = !DILocalVariable(name: "v", scope: !20498, file: !1793, line: 177, type: !20457)
!20498 = distinct !DILexicalBlock(scope: !20495, file: !1793, line: 177, column: 3)
!20499 = !DILocation(line: 177, column: 3, scope: !20498)
!20500 = !DILocalVariable(name: "nbytes", scope: !20498, file: !1793, line: 177, type: !52)
!20501 = !DILocation(line: 178, column: 3, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 178, column: 3)
!20503 = !DILocation(line: 178, column: 3, scope: !20454)
!20504 = !DILocalVariable(name: "v", scope: !20505, file: !1793, line: 178, type: !108)
!20505 = distinct !DILexicalBlock(scope: !20502, file: !1793, line: 178, column: 3)
!20506 = !DILocation(line: 178, column: 3, scope: !20505)
!20507 = !DILocalVariable(name: "nbytes", scope: !20505, file: !1793, line: 178, type: !52)
!20508 = !DILocation(line: 179, column: 3, scope: !20509)
!20509 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 179, column: 3)
!20510 = !DILocation(line: 179, column: 3, scope: !20454)
!20511 = !DILocalVariable(name: "v", scope: !20512, file: !1793, line: 179, type: !108)
!20512 = distinct !DILexicalBlock(scope: !20509, file: !1793, line: 179, column: 3)
!20513 = !DILocation(line: 179, column: 3, scope: !20512)
!20514 = !DILocalVariable(name: "nbytes", scope: !20512, file: !1793, line: 179, type: !52)
!20515 = !DILocation(line: 180, column: 3, scope: !20516)
!20516 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 180, column: 3)
!20517 = !DILocation(line: 180, column: 3, scope: !20454)
!20518 = !DILocalVariable(name: "v", scope: !20519, file: !1793, line: 180, type: !124)
!20519 = distinct !DILexicalBlock(scope: !20516, file: !1793, line: 180, column: 3)
!20520 = !DILocation(line: 180, column: 3, scope: !20519)
!20521 = !DILocalVariable(name: "nbytes", scope: !20519, file: !1793, line: 180, type: !52)
!20522 = !DILocation(line: 181, column: 3, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20454, file: !1793, line: 181, column: 3)
!20524 = !DILocation(line: 181, column: 3, scope: !20454)
!20525 = !DILocalVariable(name: "v", scope: !20526, file: !1793, line: 181, type: !124)
!20526 = distinct !DILexicalBlock(scope: !20523, file: !1793, line: 181, column: 3)
!20527 = !DILocation(line: 181, column: 3, scope: !20526)
!20528 = !DILocalVariable(name: "nbytes", scope: !20526, file: !1793, line: 181, type: !52)
!20529 = !DILocation(line: 189, column: 1, scope: !20454)
!20530 = distinct !DISubprogram(name: "randread_error", scope: !1793, file: !1793, line: 124, type: !1798, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20531 = !DILocalVariable(name: "file_name", arg: 1, scope: !20530, file: !1793, line: 124, type: !685)
!20532 = !DILocation(line: 124, column: 29, scope: !20530)
!20533 = !DILocation(line: 126, column: 7, scope: !20534)
!20534 = distinct !DILexicalBlock(scope: !20530, file: !1793, line: 126, column: 7)
!20535 = !DILocation(line: 126, column: 7, scope: !20530)
!20536 = !DILocation(line: 127, column: 12, scope: !20534)
!20537 = !DILocation(line: 127, column: 26, scope: !20534)
!20538 = !DILocation(line: 128, column: 12, scope: !20534)
!20539 = !DILocation(line: 128, column: 18, scope: !20534)
!20540 = !DILocation(line: 128, column: 25, scope: !20534)
!20541 = !DILocation(line: 128, column: 48, scope: !20534)
!20542 = !DILocation(line: 129, column: 19, scope: !20534)
!20543 = !DILocation(line: 129, column: 12, scope: !20534)
!20544 = !DILocation(line: 127, column: 5, scope: !20534)
!20545 = !DILocation(line: 130, column: 3, scope: !20530)
!20546 = distinct !DISubprogram(name: "randread_set_handler", scope: !1793, file: !1793, line: 242, type: !20547, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20547 = !DISubroutineType(types: !20548)
!20548 = !{null, !1791, !1797}
!20549 = !DILocalVariable(name: "s", arg: 1, scope: !20546, file: !1793, line: 242, type: !1791)
!20550 = !DILocation(line: 242, column: 47, scope: !20546)
!20551 = !DILocalVariable(name: "handler", arg: 2, scope: !20546, file: !1793, line: 242, type: !1797)
!20552 = !DILocation(line: 242, column: 57, scope: !20546)
!20553 = !DILocation(line: 244, column: 16, scope: !20546)
!20554 = !DILocation(line: 244, column: 3, scope: !20546)
!20555 = !DILocation(line: 244, column: 6, scope: !20546)
!20556 = !DILocation(line: 244, column: 14, scope: !20546)
!20557 = !DILocation(line: 245, column: 1, scope: !20546)
!20558 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1793, file: !1793, line: 248, type: !20559, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20559 = !DISubroutineType(types: !20560)
!20560 = !{null, !1791, !685}
!20561 = !DILocalVariable(name: "s", arg: 1, scope: !20558, file: !1793, line: 248, type: !1791)
!20562 = !DILocation(line: 248, column: 51, scope: !20558)
!20563 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !20558, file: !1793, line: 248, type: !685)
!20564 = !DILocation(line: 248, column: 66, scope: !20558)
!20565 = !DILocation(line: 250, column: 20, scope: !20558)
!20566 = !DILocation(line: 250, column: 3, scope: !20558)
!20567 = !DILocation(line: 250, column: 6, scope: !20558)
!20568 = !DILocation(line: 250, column: 18, scope: !20558)
!20569 = !DILocation(line: 251, column: 1, scope: !20558)
!20570 = distinct !DISubprogram(name: "randread", scope: !1793, file: !1793, line: 326, type: !20571, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20571 = !DISubroutineType(types: !20572)
!20572 = !{null, !1791, !47, !52}
!20573 = !DILocalVariable(name: "s", arg: 1, scope: !20570, file: !1793, line: 326, type: !1791)
!20574 = !DILocation(line: 326, column: 35, scope: !20570)
!20575 = !DILocalVariable(name: "buf", arg: 2, scope: !20570, file: !1793, line: 326, type: !47)
!20576 = !DILocation(line: 326, column: 44, scope: !20570)
!20577 = !DILocalVariable(name: "size", arg: 3, scope: !20570, file: !1793, line: 326, type: !52)
!20578 = !DILocation(line: 326, column: 56, scope: !20570)
!20579 = !DILocation(line: 328, column: 7, scope: !20580)
!20580 = distinct !DILexicalBlock(scope: !20570, file: !1793, line: 328, column: 7)
!20581 = !DILocation(line: 328, column: 10, scope: !20580)
!20582 = !DILocation(line: 328, column: 7, scope: !20570)
!20583 = !DILocation(line: 329, column: 17, scope: !20580)
!20584 = !DILocation(line: 329, column: 20, scope: !20580)
!20585 = !DILocation(line: 329, column: 25, scope: !20580)
!20586 = !DILocation(line: 329, column: 5, scope: !20580)
!20587 = !DILocation(line: 331, column: 17, scope: !20580)
!20588 = !DILocation(line: 331, column: 20, scope: !20580)
!20589 = !DILocation(line: 331, column: 24, scope: !20580)
!20590 = !DILocation(line: 331, column: 31, scope: !20580)
!20591 = !DILocation(line: 331, column: 36, scope: !20580)
!20592 = !DILocation(line: 331, column: 5, scope: !20580)
!20593 = !DILocation(line: 332, column: 1, scope: !20570)
!20594 = distinct !DISubprogram(name: "readsource", scope: !1793, file: !1793, line: 258, type: !20595, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20595 = !DISubroutineType(types: !20596)
!20596 = !{null, !1791, !20597, !52}
!20597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!20598 = !DILocalVariable(name: "s", arg: 1, scope: !20594, file: !1793, line: 258, type: !1791)
!20599 = !DILocation(line: 258, column: 37, scope: !20594)
!20600 = !DILocalVariable(name: "p", arg: 2, scope: !20594, file: !1793, line: 258, type: !20597)
!20601 = !DILocation(line: 258, column: 55, scope: !20594)
!20602 = !DILocalVariable(name: "size", arg: 3, scope: !20594, file: !1793, line: 258, type: !52)
!20603 = !DILocation(line: 258, column: 65, scope: !20594)
!20604 = !DILocation(line: 260, column: 3, scope: !20594)
!20605 = !DILocalVariable(name: "inbytes", scope: !20606, file: !1793, line: 262, type: !52)
!20606 = distinct !DILexicalBlock(scope: !20594, file: !1793, line: 261, column: 5)
!20607 = !DILocation(line: 262, column: 14, scope: !20606)
!20608 = !DILocation(line: 262, column: 24, scope: !20606)
!20609 = !DILocalVariable(name: "fread_errno", scope: !20606, file: !1793, line: 263, type: !5)
!20610 = !DILocation(line: 263, column: 11, scope: !20606)
!20611 = !DILocation(line: 263, column: 25, scope: !20606)
!20612 = !DILocation(line: 264, column: 12, scope: !20606)
!20613 = !DILocation(line: 264, column: 9, scope: !20606)
!20614 = !DILocation(line: 265, column: 15, scope: !20606)
!20615 = !DILocation(line: 265, column: 12, scope: !20606)
!20616 = !DILocation(line: 266, column: 11, scope: !20617)
!20617 = distinct !DILexicalBlock(scope: !20606, file: !1793, line: 266, column: 11)
!20618 = !DILocation(line: 266, column: 16, scope: !20617)
!20619 = !DILocation(line: 266, column: 11, scope: !20606)
!20620 = !DILocation(line: 267, column: 9, scope: !20617)
!20621 = !DILocation(line: 268, column: 16, scope: !20606)
!20622 = !DILocation(line: 268, column: 37, scope: !20606)
!20623 = !DILocation(line: 268, column: 7, scope: !20606)
!20624 = !DILocation(line: 268, column: 13, scope: !20606)
!20625 = !DILocation(line: 269, column: 7, scope: !20606)
!20626 = !DILocation(line: 269, column: 10, scope: !20606)
!20627 = !DILocation(line: 269, column: 19, scope: !20606)
!20628 = !DILocation(line: 269, column: 22, scope: !20606)
!20629 = distinct !{!20629, !20604, !20630}
!20630 = !DILocation(line: 270, column: 5, scope: !20594)
!20631 = !DILocation(line: 271, column: 1, scope: !20594)
!20632 = distinct !DISubprogram(name: "readisaac", scope: !1793, file: !1793, line: 278, type: !20633, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20633 = !DISubroutineType(types: !20634)
!20634 = !{null, !20635, !47, !52}
!20635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!20636 = !DILocalVariable(name: "isaac", arg: 1, scope: !20632, file: !1793, line: 278, type: !20635)
!20637 = !DILocation(line: 278, column: 26, scope: !20632)
!20638 = !DILocalVariable(name: "p", arg: 2, scope: !20632, file: !1793, line: 278, type: !47)
!20639 = !DILocation(line: 278, column: 39, scope: !20632)
!20640 = !DILocalVariable(name: "size", arg: 3, scope: !20632, file: !1793, line: 278, type: !52)
!20641 = !DILocation(line: 278, column: 49, scope: !20632)
!20642 = !DILocalVariable(name: "inbytes", scope: !20632, file: !1793, line: 280, type: !52)
!20643 = !DILocation(line: 280, column: 10, scope: !20632)
!20644 = !DILocation(line: 280, column: 20, scope: !20632)
!20645 = !DILocation(line: 280, column: 27, scope: !20632)
!20646 = !DILocation(line: 282, column: 3, scope: !20632)
!20647 = !DILocalVariable(name: "char_p", scope: !20648, file: !1793, line: 284, type: !7)
!20648 = distinct !DILexicalBlock(scope: !20632, file: !1793, line: 283, column: 5)
!20649 = !DILocation(line: 284, column: 13, scope: !20648)
!20650 = !DILocation(line: 284, column: 22, scope: !20648)
!20651 = !DILocation(line: 286, column: 11, scope: !20652)
!20652 = distinct !DILexicalBlock(scope: !20648, file: !1793, line: 286, column: 11)
!20653 = !DILocation(line: 286, column: 19, scope: !20652)
!20654 = !DILocation(line: 286, column: 16, scope: !20652)
!20655 = !DILocation(line: 286, column: 11, scope: !20648)
!20656 = !DILocation(line: 288, column: 19, scope: !20657)
!20657 = distinct !DILexicalBlock(scope: !20652, file: !1793, line: 287, column: 9)
!20658 = !DILocation(line: 288, column: 22, scope: !20657)
!20659 = !DILocation(line: 288, column: 29, scope: !20657)
!20660 = !DILocation(line: 288, column: 34, scope: !20657)
!20661 = !DILocation(line: 288, column: 36, scope: !20657)
!20662 = !DILocation(line: 288, column: 52, scope: !20657)
!20663 = !DILocation(line: 288, column: 50, scope: !20657)
!20664 = !DILocation(line: 288, column: 61, scope: !20657)
!20665 = !DILocation(line: 288, column: 11, scope: !20657)
!20666 = !DILocation(line: 289, column: 29, scope: !20657)
!20667 = !DILocation(line: 289, column: 39, scope: !20657)
!20668 = !DILocation(line: 289, column: 37, scope: !20657)
!20669 = !DILocation(line: 289, column: 11, scope: !20657)
!20670 = !DILocation(line: 289, column: 18, scope: !20657)
!20671 = !DILocation(line: 289, column: 27, scope: !20657)
!20672 = !DILocation(line: 290, column: 11, scope: !20657)
!20673 = !DILocation(line: 293, column: 15, scope: !20648)
!20674 = !DILocation(line: 293, column: 18, scope: !20648)
!20675 = !DILocation(line: 293, column: 25, scope: !20648)
!20676 = !DILocation(line: 293, column: 30, scope: !20648)
!20677 = !DILocation(line: 293, column: 32, scope: !20648)
!20678 = !DILocation(line: 293, column: 48, scope: !20648)
!20679 = !DILocation(line: 293, column: 46, scope: !20648)
!20680 = !DILocation(line: 293, column: 57, scope: !20648)
!20681 = !DILocation(line: 293, column: 7, scope: !20648)
!20682 = !DILocation(line: 294, column: 11, scope: !20648)
!20683 = !DILocation(line: 294, column: 20, scope: !20648)
!20684 = !DILocation(line: 294, column: 18, scope: !20648)
!20685 = !DILocation(line: 294, column: 9, scope: !20648)
!20686 = !DILocation(line: 295, column: 15, scope: !20648)
!20687 = !DILocation(line: 295, column: 12, scope: !20648)
!20688 = !DILocation(line: 299, column: 11, scope: !20689)
!20689 = distinct !DILexicalBlock(scope: !20648, file: !1793, line: 299, column: 11)
!20690 = !DILocation(line: 299, column: 11, scope: !20648)
!20691 = !DILocalVariable(name: "wp", scope: !20692, file: !1793, line: 301, type: !1828)
!20692 = distinct !DILexicalBlock(scope: !20689, file: !1793, line: 300, column: 9)
!20693 = !DILocation(line: 301, column: 23, scope: !20692)
!20694 = !DILocation(line: 301, column: 28, scope: !20692)
!20695 = !DILocation(line: 302, column: 11, scope: !20692)
!20696 = !DILocation(line: 302, column: 33, scope: !20692)
!20697 = !DILocation(line: 302, column: 30, scope: !20692)
!20698 = !DILocation(line: 304, column: 30, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20692, file: !1793, line: 303, column: 13)
!20700 = !DILocation(line: 304, column: 37, scope: !20699)
!20701 = !DILocation(line: 304, column: 44, scope: !20699)
!20702 = !DILocation(line: 304, column: 15, scope: !20699)
!20703 = !DILocation(line: 305, column: 18, scope: !20699)
!20704 = !DILocation(line: 306, column: 20, scope: !20699)
!20705 = !DILocation(line: 307, column: 19, scope: !20706)
!20706 = distinct !DILexicalBlock(scope: !20699, file: !1793, line: 307, column: 19)
!20707 = !DILocation(line: 307, column: 24, scope: !20706)
!20708 = !DILocation(line: 307, column: 19, scope: !20699)
!20709 = !DILocation(line: 309, column: 19, scope: !20710)
!20710 = distinct !DILexicalBlock(scope: !20706, file: !1793, line: 308, column: 17)
!20711 = !DILocation(line: 309, column: 26, scope: !20710)
!20712 = !DILocation(line: 309, column: 35, scope: !20710)
!20713 = !DILocation(line: 310, column: 19, scope: !20710)
!20714 = distinct !{!20714, !20695, !20715}
!20715 = !DILocation(line: 312, column: 13, scope: !20692)
!20716 = !DILocation(line: 313, column: 15, scope: !20692)
!20717 = !DILocation(line: 313, column: 13, scope: !20692)
!20718 = !DILocation(line: 314, column: 9, scope: !20692)
!20719 = !DILocation(line: 316, column: 22, scope: !20648)
!20720 = !DILocation(line: 316, column: 29, scope: !20648)
!20721 = !DILocation(line: 316, column: 36, scope: !20648)
!20722 = !DILocation(line: 316, column: 43, scope: !20648)
!20723 = !DILocation(line: 316, column: 48, scope: !20648)
!20724 = !DILocation(line: 316, column: 7, scope: !20648)
!20725 = !DILocation(line: 317, column: 15, scope: !20648)
!20726 = distinct !{!20726, !20646, !20727}
!20727 = !DILocation(line: 318, column: 5, scope: !20632)
!20728 = !DILocation(line: 319, column: 1, scope: !20632)
!20729 = distinct !DISubprogram(name: "randread_free", scope: !1793, file: !1793, line: 341, type: !20730, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1748, retainedNodes: !295)
!20730 = !DISubroutineType(types: !20731)
!20731 = !{!5, !1791}
!20732 = !DILocalVariable(name: "s", arg: 1, scope: !20729, file: !1793, line: 341, type: !1791)
!20733 = !DILocation(line: 341, column: 40, scope: !20729)
!20734 = !DILocalVariable(name: "source", scope: !20729, file: !1793, line: 343, type: !1751)
!20735 = !DILocation(line: 343, column: 9, scope: !20729)
!20736 = !DILocation(line: 343, column: 18, scope: !20729)
!20737 = !DILocation(line: 343, column: 21, scope: !20729)
!20738 = !DILocation(line: 344, column: 19, scope: !20729)
!20739 = !DILocation(line: 344, column: 3, scope: !20729)
!20740 = !DILocation(line: 345, column: 9, scope: !20729)
!20741 = !DILocation(line: 345, column: 3, scope: !20729)
!20742 = !DILocation(line: 346, column: 11, scope: !20729)
!20743 = !DILocation(line: 346, column: 28, scope: !20729)
!20744 = !DILocation(line: 346, column: 20, scope: !20729)
!20745 = !DILocation(line: 346, column: 3, scope: !20729)
!20746 = distinct !DISubprogram(name: "isaac_refill", scope: !20747, file: !20747, line: 90, type: !20748, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !295)
!20747 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!20748 = !DISubroutineType(types: !20749)
!20749 = !{null, !20750, !1828}
!20750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20751, size: 64)
!20751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1811, line: 56, size: 16576, elements: !20752)
!20752 = !{!20753, !20754, !20755, !20756}
!20753 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !20751, file: !1811, line: 58, baseType: !1814, size: 16384)
!20754 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !20751, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16384)
!20755 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !20751, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16448)
!20756 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !20751, file: !1811, line: 59, baseType: !1815, size: 64, offset: 16512)
!20757 = !DILocalVariable(name: "s", arg: 1, scope: !20746, file: !20747, line: 90, type: !20750)
!20758 = !DILocation(line: 90, column: 35, scope: !20746)
!20759 = !DILocalVariable(name: "result", arg: 2, scope: !20746, file: !20747, line: 90, type: !1828)
!20760 = !DILocation(line: 90, column: 49, scope: !20746)
!20761 = !DILocalVariable(name: "a", scope: !20746, file: !20747, line: 93, type: !1815)
!20762 = !DILocation(line: 93, column: 14, scope: !20746)
!20763 = !DILocation(line: 93, column: 18, scope: !20746)
!20764 = !DILocation(line: 93, column: 21, scope: !20746)
!20765 = !DILocalVariable(name: "b", scope: !20746, file: !20747, line: 94, type: !1815)
!20766 = !DILocation(line: 94, column: 14, scope: !20746)
!20767 = !DILocation(line: 94, column: 18, scope: !20746)
!20768 = !DILocation(line: 94, column: 21, scope: !20746)
!20769 = !DILocation(line: 94, column: 28, scope: !20746)
!20770 = !DILocation(line: 94, column: 31, scope: !20746)
!20771 = !DILocation(line: 94, column: 26, scope: !20746)
!20772 = !DILocation(line: 94, column: 23, scope: !20746)
!20773 = !DILocalVariable(name: "m", scope: !20746, file: !20747, line: 97, type: !1828)
!20774 = !DILocation(line: 97, column: 15, scope: !20746)
!20775 = !DILocation(line: 97, column: 19, scope: !20746)
!20776 = !DILocation(line: 97, column: 22, scope: !20746)
!20777 = !DILocalVariable(name: "r", scope: !20746, file: !20747, line: 98, type: !1828)
!20778 = !DILocation(line: 98, column: 15, scope: !20746)
!20779 = !DILocation(line: 98, column: 19, scope: !20746)
!20780 = !DILocation(line: 116, column: 3, scope: !20746)
!20781 = !DILocalVariable(name: "x", scope: !20782, file: !20747, line: 118, type: !1815)
!20782 = distinct !DILexicalBlock(scope: !20783, file: !20747, line: 118, column: 7)
!20783 = distinct !DILexicalBlock(scope: !20746, file: !20747, line: 117, column: 5)
!20784 = !DILocation(line: 118, column: 7, scope: !20782)
!20785 = !DILocalVariable(name: "y", scope: !20782, file: !20747, line: 118, type: !1815)
!20786 = !DILocalVariable(name: "x", scope: !20787, file: !20747, line: 119, type: !1815)
!20787 = distinct !DILexicalBlock(scope: !20783, file: !20747, line: 119, column: 7)
!20788 = !DILocation(line: 119, column: 7, scope: !20787)
!20789 = !DILocalVariable(name: "y", scope: !20787, file: !20747, line: 119, type: !1815)
!20790 = !DILocalVariable(name: "x", scope: !20791, file: !20747, line: 120, type: !1815)
!20791 = distinct !DILexicalBlock(scope: !20783, file: !20747, line: 120, column: 7)
!20792 = !DILocation(line: 120, column: 7, scope: !20791)
!20793 = !DILocalVariable(name: "y", scope: !20791, file: !20747, line: 120, type: !1815)
!20794 = !DILocalVariable(name: "x", scope: !20795, file: !20747, line: 121, type: !1815)
!20795 = distinct !DILexicalBlock(scope: !20783, file: !20747, line: 121, column: 7)
!20796 = !DILocation(line: 121, column: 7, scope: !20795)
!20797 = !DILocalVariable(name: "y", scope: !20795, file: !20747, line: 121, type: !1815)
!20798 = !DILocation(line: 122, column: 9, scope: !20783)
!20799 = !DILocation(line: 123, column: 5, scope: !20783)
!20800 = !DILocation(line: 124, column: 13, scope: !20746)
!20801 = !DILocation(line: 124, column: 21, scope: !20746)
!20802 = !DILocation(line: 124, column: 24, scope: !20746)
!20803 = !DILocation(line: 124, column: 26, scope: !20746)
!20804 = !DILocation(line: 124, column: 19, scope: !20746)
!20805 = distinct !{!20805, !20780, !20806}
!20806 = !DILocation(line: 124, column: 32, scope: !20746)
!20807 = !DILocation(line: 126, column: 3, scope: !20746)
!20808 = !DILocalVariable(name: "x", scope: !20809, file: !20747, line: 128, type: !1815)
!20809 = distinct !DILexicalBlock(scope: !20810, file: !20747, line: 128, column: 7)
!20810 = distinct !DILexicalBlock(scope: !20746, file: !20747, line: 127, column: 5)
!20811 = !DILocation(line: 128, column: 7, scope: !20809)
!20812 = !DILocalVariable(name: "y", scope: !20809, file: !20747, line: 128, type: !1815)
!20813 = !DILocalVariable(name: "x", scope: !20814, file: !20747, line: 129, type: !1815)
!20814 = distinct !DILexicalBlock(scope: !20810, file: !20747, line: 129, column: 7)
!20815 = !DILocation(line: 129, column: 7, scope: !20814)
!20816 = !DILocalVariable(name: "y", scope: !20814, file: !20747, line: 129, type: !1815)
!20817 = !DILocalVariable(name: "x", scope: !20818, file: !20747, line: 130, type: !1815)
!20818 = distinct !DILexicalBlock(scope: !20810, file: !20747, line: 130, column: 7)
!20819 = !DILocation(line: 130, column: 7, scope: !20818)
!20820 = !DILocalVariable(name: "y", scope: !20818, file: !20747, line: 130, type: !1815)
!20821 = !DILocalVariable(name: "x", scope: !20822, file: !20747, line: 131, type: !1815)
!20822 = distinct !DILexicalBlock(scope: !20810, file: !20747, line: 131, column: 7)
!20823 = !DILocation(line: 131, column: 7, scope: !20822)
!20824 = !DILocalVariable(name: "y", scope: !20822, file: !20747, line: 131, type: !1815)
!20825 = !DILocation(line: 132, column: 9, scope: !20810)
!20826 = !DILocation(line: 133, column: 5, scope: !20810)
!20827 = !DILocation(line: 134, column: 13, scope: !20746)
!20828 = !DILocation(line: 134, column: 21, scope: !20746)
!20829 = !DILocation(line: 134, column: 24, scope: !20746)
!20830 = !DILocation(line: 134, column: 26, scope: !20746)
!20831 = !DILocation(line: 134, column: 19, scope: !20746)
!20832 = distinct !{!20832, !20807, !20833}
!20833 = !DILocation(line: 134, column: 39, scope: !20746)
!20834 = !DILocation(line: 136, column: 10, scope: !20746)
!20835 = !DILocation(line: 136, column: 3, scope: !20746)
!20836 = !DILocation(line: 136, column: 6, scope: !20746)
!20837 = !DILocation(line: 136, column: 8, scope: !20746)
!20838 = !DILocation(line: 137, column: 10, scope: !20746)
!20839 = !DILocation(line: 137, column: 3, scope: !20746)
!20840 = !DILocation(line: 137, column: 6, scope: !20746)
!20841 = !DILocation(line: 137, column: 8, scope: !20746)
!20842 = !DILocation(line: 138, column: 1, scope: !20746)
!20843 = distinct !DISubprogram(name: "ind", scope: !20747, file: !20747, line: 68, type: !20844, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1829, retainedNodes: !295)
!20844 = !DISubroutineType(types: !20845)
!20845 = !{!1815, !1832, !1815}
!20846 = !DILocalVariable(name: "m", arg: 1, scope: !20843, file: !20747, line: 68, type: !1832)
!20847 = !DILocation(line: 68, column: 24, scope: !20843)
!20848 = !DILocalVariable(name: "x", arg: 2, scope: !20843, file: !20747, line: 68, type: !1815)
!20849 = !DILocation(line: 68, column: 38, scope: !20843)
!20850 = !DILocalVariable(name: "void_m", scope: !20851, file: !20747, line: 75, type: !685)
!20851 = distinct !DILexicalBlock(scope: !20852, file: !20747, line: 71, column: 5)
!20852 = distinct !DILexicalBlock(scope: !20843, file: !20747, line: 70, column: 7)
!20853 = !DILocation(line: 75, column: 19, scope: !20851)
!20854 = !DILocation(line: 75, column: 28, scope: !20851)
!20855 = !DILocalVariable(name: "base_p", scope: !20851, file: !20747, line: 76, type: !180)
!20856 = !DILocation(line: 76, column: 19, scope: !20851)
!20857 = !DILocation(line: 76, column: 28, scope: !20851)
!20858 = !DILocalVariable(name: "word_p", scope: !20851, file: !20747, line: 77, type: !685)
!20859 = !DILocation(line: 77, column: 19, scope: !20851)
!20860 = !DILocation(line: 77, column: 28, scope: !20851)
!20861 = !DILocation(line: 77, column: 38, scope: !20851)
!20862 = !DILocation(line: 77, column: 40, scope: !20851)
!20863 = !DILocation(line: 77, column: 35, scope: !20851)
!20864 = !DILocalVariable(name: "p", scope: !20851, file: !20747, line: 78, type: !1832)
!20865 = !DILocation(line: 78, column: 25, scope: !20851)
!20866 = !DILocation(line: 78, column: 29, scope: !20851)
!20867 = !DILocation(line: 79, column: 15, scope: !20851)
!20868 = !DILocation(line: 79, column: 14, scope: !20851)
!20869 = !DILocation(line: 79, column: 7, scope: !20851)
!20870 = distinct !DISubprogram(name: "just", scope: !20747, file: !20747, line: 60, type: !20871, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1829, retainedNodes: !295)
!20871 = !DISubroutineType(types: !20872)
!20872 = !{!1815, !1815}
!20873 = !DILocalVariable(name: "a", arg: 1, scope: !20870, file: !20747, line: 60, type: !1815)
!20874 = !DILocation(line: 60, column: 18, scope: !20870)
!20875 = !DILocalVariable(name: "desired_bits", scope: !20870, file: !20747, line: 62, type: !1815)
!20876 = !DILocation(line: 62, column: 14, scope: !20870)
!20877 = !DILocation(line: 63, column: 10, scope: !20870)
!20878 = !DILocation(line: 63, column: 14, scope: !20870)
!20879 = !DILocation(line: 63, column: 12, scope: !20870)
!20880 = !DILocation(line: 63, column: 3, scope: !20870)
!20881 = distinct !DISubprogram(name: "isaac_seed", scope: !20747, file: !20747, line: 248, type: !20882, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !295)
!20882 = !DISubroutineType(types: !20883)
!20883 = !{null, !20750}
!20884 = !DILocalVariable(name: "s", arg: 1, scope: !20881, file: !20747, line: 248, type: !20750)
!20885 = !DILocation(line: 248, column: 33, scope: !20881)
!20886 = !DILocalVariable(name: "a", scope: !20881, file: !20747, line: 250, type: !1815)
!20887 = !DILocation(line: 250, column: 14, scope: !20881)
!20888 = !DILocalVariable(name: "b", scope: !20881, file: !20747, line: 251, type: !1815)
!20889 = !DILocation(line: 251, column: 14, scope: !20881)
!20890 = !DILocalVariable(name: "c", scope: !20881, file: !20747, line: 252, type: !1815)
!20891 = !DILocation(line: 252, column: 14, scope: !20881)
!20892 = !DILocalVariable(name: "d", scope: !20881, file: !20747, line: 253, type: !1815)
!20893 = !DILocation(line: 253, column: 14, scope: !20881)
!20894 = !DILocalVariable(name: "e", scope: !20881, file: !20747, line: 254, type: !1815)
!20895 = !DILocation(line: 254, column: 14, scope: !20881)
!20896 = !DILocalVariable(name: "f", scope: !20881, file: !20747, line: 255, type: !1815)
!20897 = !DILocation(line: 255, column: 14, scope: !20881)
!20898 = !DILocalVariable(name: "g", scope: !20881, file: !20747, line: 256, type: !1815)
!20899 = !DILocation(line: 256, column: 14, scope: !20881)
!20900 = !DILocalVariable(name: "h", scope: !20881, file: !20747, line: 257, type: !1815)
!20901 = !DILocation(line: 257, column: 14, scope: !20881)
!20902 = !DILocalVariable(name: "i", scope: !20903, file: !20747, line: 269, type: !5)
!20903 = distinct !DILexicalBlock(scope: !20881, file: !20747, line: 269, column: 3)
!20904 = !DILocation(line: 269, column: 3, scope: !20903)
!20905 = !DILocation(line: 269, column: 3, scope: !20906)
!20906 = distinct !DILexicalBlock(scope: !20903, file: !20747, line: 269, column: 3)
!20907 = !DILocation(line: 269, column: 3, scope: !20908)
!20908 = distinct !DILexicalBlock(scope: !20906, file: !20747, line: 269, column: 3)
!20909 = !DILocation(line: 269, column: 3, scope: !20910)
!20910 = distinct !DILexicalBlock(scope: !20908, file: !20747, line: 269, column: 3)
!20911 = !DILocation(line: 269, column: 3, scope: !20912)
!20912 = distinct !DILexicalBlock(scope: !20910, file: !20747, line: 269, column: 3)
!20913 = distinct !{!20913, !20905, !20905}
!20914 = !DILocalVariable(name: "i", scope: !20915, file: !20747, line: 270, type: !5)
!20915 = distinct !DILexicalBlock(scope: !20881, file: !20747, line: 270, column: 3)
!20916 = !DILocation(line: 270, column: 3, scope: !20915)
!20917 = !DILocation(line: 270, column: 3, scope: !20918)
!20918 = distinct !DILexicalBlock(scope: !20915, file: !20747, line: 270, column: 3)
!20919 = !DILocation(line: 270, column: 3, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20918, file: !20747, line: 270, column: 3)
!20921 = !DILocation(line: 270, column: 3, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20920, file: !20747, line: 270, column: 3)
!20923 = !DILocation(line: 270, column: 3, scope: !20924)
!20924 = distinct !DILexicalBlock(scope: !20922, file: !20747, line: 270, column: 3)
!20925 = distinct !{!20925, !20917, !20917}
!20926 = !DILocation(line: 272, column: 17, scope: !20881)
!20927 = !DILocation(line: 272, column: 20, scope: !20881)
!20928 = !DILocation(line: 272, column: 22, scope: !20881)
!20929 = !DILocation(line: 272, column: 10, scope: !20881)
!20930 = !DILocation(line: 272, column: 13, scope: !20881)
!20931 = !DILocation(line: 272, column: 15, scope: !20881)
!20932 = !DILocation(line: 272, column: 3, scope: !20881)
!20933 = !DILocation(line: 272, column: 6, scope: !20881)
!20934 = !DILocation(line: 272, column: 8, scope: !20881)
!20935 = !DILocation(line: 273, column: 1, scope: !20881)
!20936 = distinct !DISubprogram(name: "dup_safer", scope: !20937, file: !20937, line: 31, type: !15414, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1834, retainedNodes: !295)
!20937 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!20938 = !DILocalVariable(name: "fd", arg: 1, scope: !20936, file: !20937, line: 31, type: !5)
!20939 = !DILocation(line: 31, column: 16, scope: !20936)
!20940 = !DILocation(line: 33, column: 17, scope: !20936)
!20941 = !DILocation(line: 33, column: 10, scope: !20936)
!20942 = !DILocation(line: 33, column: 3, scope: !20936)
!20943 = distinct !DISubprogram(name: "explicit_bzero", scope: !20944, file: !20944, line: 39, type: !20945, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1836, retainedNodes: !295)
!20944 = !DIFile(filename: "lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!20945 = !DISubroutineType(types: !20946)
!20946 = !{null, !47, !52}
!20947 = !DILocalVariable(name: "s", arg: 1, scope: !20943, file: !20944, line: 39, type: !47)
!20948 = !DILocation(line: 39, column: 23, scope: !20943)
!20949 = !DILocalVariable(name: "len", arg: 2, scope: !20943, file: !20944, line: 39, type: !52)
!20950 = !DILocation(line: 39, column: 33, scope: !20943)
!20951 = !DILocation(line: 44, column: 11, scope: !20943)
!20952 = !DILocation(line: 44, column: 20, scope: !20943)
!20953 = !DILocation(line: 44, column: 3, scope: !20943)
!20954 = !DILocation(line: 50, column: 1, scope: !20943)
!20955 = distinct !DISubprogram(name: "rpl_fclose", scope: !20956, file: !20956, line: 58, type: !20957, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !295)
!20956 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!20957 = !DISubroutineType(types: !20958)
!20958 = !{!5, !20959}
!20959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20960, size: 64)
!20960 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 48, baseType: !20961)
!20961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !20962)
!20962 = !{!20963, !20964, !20965, !20966, !20967, !20968, !20969, !20970, !20971, !20972, !20973, !20974, !20975, !20983, !20984, !20985, !20986, !20987, !20988, !20989, !20990, !20991, !20992, !20993, !20994, !20995, !20996, !20997, !20998}
!20963 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !20961, file: !2, line: 242, baseType: !5, size: 32)
!20964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !20961, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!20965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !20961, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!20966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !20961, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!20967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !20961, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!20968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !20961, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!20969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !20961, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!20970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !20961, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!20971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !20961, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!20972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !20961, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!20973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !20961, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!20974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !20961, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!20975 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !20961, file: !2, line: 260, baseType: !20976, size: 64, offset: 768)
!20976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20977, size: 64)
!20977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !20978)
!20978 = !{!20979, !20980, !20982}
!20979 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !20977, file: !2, line: 157, baseType: !20976, size: 64)
!20980 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !20977, file: !2, line: 158, baseType: !20981, size: 64, offset: 64)
!20981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20961, size: 64)
!20982 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !20977, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!20983 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !20961, file: !2, line: 262, baseType: !20981, size: 64, offset: 832)
!20984 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !20961, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!20985 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !20961, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!20986 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !20961, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!20987 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !20961, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!20988 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !20961, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!20989 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !20961, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!20990 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !20961, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!20991 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !20961, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!20992 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !20961, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!20993 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !20961, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!20994 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !20961, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!20995 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !20961, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!20996 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !20961, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!20997 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !20961, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!20998 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !20961, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!20999 = !DILocalVariable(name: "fp", arg: 1, scope: !20955, file: !20956, line: 58, type: !20959)
!21000 = !DILocation(line: 58, column: 19, scope: !20955)
!21001 = !DILocalVariable(name: "saved_errno", scope: !20955, file: !20956, line: 60, type: !5)
!21002 = !DILocation(line: 60, column: 7, scope: !20955)
!21003 = !DILocalVariable(name: "fd", scope: !20955, file: !20956, line: 61, type: !5)
!21004 = !DILocation(line: 61, column: 7, scope: !20955)
!21005 = !DILocalVariable(name: "result", scope: !20955, file: !20956, line: 62, type: !5)
!21006 = !DILocation(line: 62, column: 7, scope: !20955)
!21007 = !DILocation(line: 65, column: 16, scope: !20955)
!21008 = !DILocation(line: 65, column: 8, scope: !20955)
!21009 = !DILocation(line: 65, column: 6, scope: !20955)
!21010 = !DILocation(line: 66, column: 7, scope: !21011)
!21011 = distinct !DILexicalBlock(scope: !20955, file: !20956, line: 66, column: 7)
!21012 = !DILocation(line: 66, column: 10, scope: !21011)
!21013 = !DILocation(line: 66, column: 7, scope: !20955)
!21014 = !DILocation(line: 67, column: 28, scope: !21011)
!21015 = !DILocation(line: 67, column: 12, scope: !21011)
!21016 = !DILocation(line: 67, column: 5, scope: !21011)
!21017 = !DILocation(line: 72, column: 9, scope: !21018)
!21018 = distinct !DILexicalBlock(scope: !20955, file: !20956, line: 72, column: 7)
!21019 = !DILocation(line: 72, column: 23, scope: !21018)
!21020 = !DILocation(line: 72, column: 41, scope: !21018)
!21021 = !DILocation(line: 72, column: 33, scope: !21018)
!21022 = !DILocation(line: 72, column: 26, scope: !21018)
!21023 = !DILocation(line: 72, column: 59, scope: !21018)
!21024 = !DILocation(line: 73, column: 7, scope: !21018)
!21025 = !DILocation(line: 73, column: 18, scope: !21018)
!21026 = !DILocation(line: 73, column: 10, scope: !21018)
!21027 = !DILocation(line: 72, column: 7, scope: !20955)
!21028 = !DILocation(line: 74, column: 19, scope: !21018)
!21029 = !DILocation(line: 74, column: 17, scope: !21018)
!21030 = !DILocation(line: 74, column: 5, scope: !21018)
!21031 = !DILocation(line: 100, column: 28, scope: !20955)
!21032 = !DILocation(line: 100, column: 12, scope: !20955)
!21033 = !DILocation(line: 100, column: 10, scope: !20955)
!21034 = !DILocation(line: 105, column: 7, scope: !21035)
!21035 = distinct !DILexicalBlock(scope: !20955, file: !20956, line: 105, column: 7)
!21036 = !DILocation(line: 105, column: 19, scope: !21035)
!21037 = !DILocation(line: 105, column: 7, scope: !20955)
!21038 = !DILocation(line: 107, column: 15, scope: !21039)
!21039 = distinct !DILexicalBlock(scope: !21035, file: !20956, line: 106, column: 5)
!21040 = !DILocation(line: 107, column: 7, scope: !21039)
!21041 = !DILocation(line: 107, column: 13, scope: !21039)
!21042 = !DILocation(line: 108, column: 14, scope: !21039)
!21043 = !DILocation(line: 109, column: 5, scope: !21039)
!21044 = !DILocation(line: 111, column: 10, scope: !20955)
!21045 = !DILocation(line: 111, column: 3, scope: !20955)
!21046 = !DILocation(line: 112, column: 1, scope: !20955)
!21047 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1169, file: !1169, line: 202, type: !21048, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1172, retainedNodes: !295)
!21048 = !DISubroutineType(types: !21049)
!21049 = !{!5, !5, !5, null}
!21050 = !DILocalVariable(name: "fd", arg: 1, scope: !21047, file: !1169, line: 202, type: !5)
!21051 = !DILocation(line: 202, column: 12, scope: !21047)
!21052 = !DILocalVariable(name: "action", arg: 2, scope: !21047, file: !1169, line: 202, type: !5)
!21053 = !DILocation(line: 202, column: 20, scope: !21047)
!21054 = !DILocalVariable(name: "arg", scope: !21047, file: !1169, line: 208, type: !1175)
!21055 = !DILocation(line: 208, column: 11, scope: !21047)
!21056 = !DILocalVariable(name: "result", scope: !21047, file: !1169, line: 209, type: !5)
!21057 = !DILocation(line: 209, column: 7, scope: !21047)
!21058 = !DILocation(line: 210, column: 3, scope: !21047)
!21059 = !DILocation(line: 211, column: 11, scope: !21047)
!21060 = !DILocation(line: 211, column: 3, scope: !21047)
!21061 = !DILocalVariable(name: "target", scope: !21062, file: !1169, line: 215, type: !5)
!21062 = distinct !DILexicalBlock(scope: !21063, file: !1169, line: 214, column: 7)
!21063 = distinct !DILexicalBlock(scope: !21047, file: !1169, line: 212, column: 5)
!21064 = !DILocation(line: 215, column: 13, scope: !21062)
!21065 = !DILocation(line: 215, column: 22, scope: !21062)
!21066 = !DILocation(line: 216, column: 35, scope: !21062)
!21067 = !DILocation(line: 216, column: 39, scope: !21062)
!21068 = !DILocation(line: 216, column: 18, scope: !21062)
!21069 = !DILocation(line: 216, column: 16, scope: !21062)
!21070 = !DILocation(line: 217, column: 9, scope: !21062)
!21071 = !DILocalVariable(name: "target", scope: !21072, file: !1169, line: 222, type: !5)
!21072 = distinct !DILexicalBlock(scope: !21063, file: !1169, line: 221, column: 7)
!21073 = !DILocation(line: 222, column: 13, scope: !21072)
!21074 = !DILocation(line: 222, column: 22, scope: !21072)
!21075 = !DILocation(line: 223, column: 43, scope: !21072)
!21076 = !DILocation(line: 223, column: 47, scope: !21072)
!21077 = !DILocation(line: 223, column: 18, scope: !21072)
!21078 = !DILocation(line: 223, column: 16, scope: !21072)
!21079 = !DILocation(line: 224, column: 9, scope: !21072)
!21080 = !DILocation(line: 259, column: 17, scope: !21081)
!21081 = distinct !DILexicalBlock(scope: !21063, file: !1169, line: 257, column: 7)
!21082 = !DILocation(line: 259, column: 9, scope: !21081)
!21083 = !DILocation(line: 328, column: 29, scope: !21084)
!21084 = distinct !DILexicalBlock(scope: !21081, file: !1169, line: 260, column: 11)
!21085 = !DILocation(line: 328, column: 33, scope: !21084)
!21086 = !DILocation(line: 328, column: 22, scope: !21084)
!21087 = !DILocation(line: 328, column: 20, scope: !21084)
!21088 = !DILocation(line: 329, column: 13, scope: !21084)
!21089 = !DILocalVariable(name: "x", scope: !21090, file: !1169, line: 423, type: !5)
!21090 = distinct !DILexicalBlock(scope: !21084, file: !1169, line: 422, column: 13)
!21091 = !DILocation(line: 423, column: 19, scope: !21090)
!21092 = !DILocation(line: 423, column: 23, scope: !21090)
!21093 = !DILocation(line: 424, column: 31, scope: !21090)
!21094 = !DILocation(line: 424, column: 35, scope: !21090)
!21095 = !DILocation(line: 424, column: 43, scope: !21090)
!21096 = !DILocation(line: 424, column: 24, scope: !21090)
!21097 = !DILocation(line: 424, column: 22, scope: !21090)
!21098 = !DILocation(line: 426, column: 13, scope: !21084)
!21099 = !DILocalVariable(name: "p", scope: !21100, file: !1169, line: 431, type: !47)
!21100 = distinct !DILexicalBlock(scope: !21084, file: !1169, line: 430, column: 13)
!21101 = !DILocation(line: 431, column: 21, scope: !21100)
!21102 = !DILocation(line: 431, column: 25, scope: !21100)
!21103 = !DILocation(line: 432, column: 31, scope: !21100)
!21104 = !DILocation(line: 432, column: 35, scope: !21100)
!21105 = !DILocation(line: 432, column: 43, scope: !21100)
!21106 = !DILocation(line: 432, column: 24, scope: !21100)
!21107 = !DILocation(line: 432, column: 22, scope: !21100)
!21108 = !DILocation(line: 434, column: 13, scope: !21084)
!21109 = !DILocation(line: 439, column: 9, scope: !21081)
!21110 = !DILocation(line: 442, column: 3, scope: !21047)
!21111 = !DILocation(line: 443, column: 10, scope: !21047)
!21112 = !DILocation(line: 443, column: 3, scope: !21047)
!21113 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1169, file: !1169, line: 447, type: !1170, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1172, retainedNodes: !295)
!21114 = !DILocalVariable(name: "fd", arg: 1, scope: !21113, file: !1169, line: 447, type: !5)
!21115 = !DILocation(line: 447, column: 22, scope: !21113)
!21116 = !DILocalVariable(name: "target", arg: 2, scope: !21113, file: !1169, line: 447, type: !5)
!21117 = !DILocation(line: 447, column: 30, scope: !21113)
!21118 = !DILocalVariable(name: "result", scope: !21113, file: !1169, line: 449, type: !5)
!21119 = !DILocation(line: 449, column: 7, scope: !21113)
!21120 = !DILocation(line: 482, column: 19, scope: !21113)
!21121 = !DILocation(line: 482, column: 32, scope: !21113)
!21122 = !DILocation(line: 482, column: 12, scope: !21113)
!21123 = !DILocation(line: 482, column: 10, scope: !21113)
!21124 = !DILocation(line: 484, column: 10, scope: !21113)
!21125 = !DILocation(line: 484, column: 3, scope: !21113)
!21126 = !DILocalVariable(name: "fd", arg: 1, scope: !1168, file: !1169, line: 488, type: !5)
!21127 = !DILocation(line: 488, column: 30, scope: !1168)
!21128 = !DILocalVariable(name: "target", arg: 2, scope: !1168, file: !1169, line: 488, type: !5)
!21129 = !DILocation(line: 488, column: 38, scope: !1168)
!21130 = !DILocalVariable(name: "result", scope: !1168, file: !1169, line: 490, type: !5)
!21131 = !DILocation(line: 490, column: 7, scope: !1168)
!21132 = !DILocation(line: 508, column: 12, scope: !21133)
!21133 = distinct !DILexicalBlock(scope: !1168, file: !1169, line: 508, column: 7)
!21134 = !DILocation(line: 508, column: 9, scope: !21133)
!21135 = !DILocation(line: 508, column: 7, scope: !1168)
!21136 = !DILocation(line: 510, column: 23, scope: !21137)
!21137 = distinct !DILexicalBlock(scope: !21133, file: !1169, line: 509, column: 5)
!21138 = !DILocation(line: 510, column: 44, scope: !21137)
!21139 = !DILocation(line: 510, column: 16, scope: !21137)
!21140 = !DILocation(line: 510, column: 14, scope: !21137)
!21141 = !DILocation(line: 511, column: 16, scope: !21142)
!21142 = distinct !DILexicalBlock(scope: !21137, file: !1169, line: 511, column: 11)
!21143 = !DILocation(line: 511, column: 13, scope: !21142)
!21144 = !DILocation(line: 511, column: 23, scope: !21142)
!21145 = !DILocation(line: 511, column: 26, scope: !21142)
!21146 = !DILocation(line: 511, column: 32, scope: !21142)
!21147 = !DILocation(line: 511, column: 11, scope: !21137)
!21148 = !DILocation(line: 513, column: 30, scope: !21149)
!21149 = distinct !DILexicalBlock(scope: !21142, file: !1169, line: 512, column: 9)
!21150 = !DILocation(line: 518, column: 9, scope: !21149)
!21151 = !DILocation(line: 521, column: 37, scope: !21152)
!21152 = distinct !DILexicalBlock(scope: !21142, file: !1169, line: 520, column: 9)
!21153 = !DILocation(line: 521, column: 41, scope: !21152)
!21154 = !DILocation(line: 521, column: 20, scope: !21152)
!21155 = !DILocation(line: 521, column: 18, scope: !21152)
!21156 = !DILocation(line: 522, column: 15, scope: !21157)
!21157 = distinct !DILexicalBlock(scope: !21152, file: !1169, line: 522, column: 15)
!21158 = !DILocation(line: 522, column: 22, scope: !21157)
!21159 = !DILocation(line: 522, column: 15, scope: !21152)
!21160 = !DILocation(line: 523, column: 32, scope: !21157)
!21161 = !DILocation(line: 523, column: 13, scope: !21157)
!21162 = !DILocation(line: 525, column: 5, scope: !21137)
!21163 = !DILocation(line: 528, column: 31, scope: !21133)
!21164 = !DILocation(line: 528, column: 35, scope: !21133)
!21165 = !DILocation(line: 528, column: 14, scope: !21133)
!21166 = !DILocation(line: 528, column: 12, scope: !21133)
!21167 = !DILocation(line: 529, column: 12, scope: !21168)
!21168 = distinct !DILexicalBlock(scope: !1168, file: !1169, line: 529, column: 7)
!21169 = !DILocation(line: 529, column: 9, scope: !21168)
!21170 = !DILocation(line: 529, column: 19, scope: !21168)
!21171 = !DILocation(line: 529, column: 22, scope: !21168)
!21172 = !DILocation(line: 529, column: 41, scope: !21168)
!21173 = !DILocation(line: 529, column: 7, scope: !1168)
!21174 = !DILocalVariable(name: "flags", scope: !21175, file: !1169, line: 531, type: !5)
!21175 = distinct !DILexicalBlock(scope: !21168, file: !1169, line: 530, column: 5)
!21176 = !DILocation(line: 531, column: 11, scope: !21175)
!21177 = !DILocation(line: 531, column: 26, scope: !21175)
!21178 = !DILocation(line: 531, column: 19, scope: !21175)
!21179 = !DILocation(line: 532, column: 11, scope: !21180)
!21180 = distinct !DILexicalBlock(scope: !21175, file: !1169, line: 532, column: 11)
!21181 = !DILocation(line: 532, column: 17, scope: !21180)
!21182 = !DILocation(line: 532, column: 21, scope: !21180)
!21183 = !DILocation(line: 532, column: 31, scope: !21180)
!21184 = !DILocation(line: 532, column: 48, scope: !21180)
!21185 = !DILocation(line: 532, column: 54, scope: !21180)
!21186 = !DILocation(line: 532, column: 24, scope: !21180)
!21187 = !DILocation(line: 532, column: 68, scope: !21180)
!21188 = !DILocation(line: 532, column: 11, scope: !21175)
!21189 = !DILocalVariable(name: "saved_errno", scope: !21190, file: !1169, line: 534, type: !5)
!21190 = distinct !DILexicalBlock(scope: !21180, file: !1169, line: 533, column: 9)
!21191 = !DILocation(line: 534, column: 15, scope: !21190)
!21192 = !DILocation(line: 534, column: 29, scope: !21190)
!21193 = !DILocation(line: 535, column: 18, scope: !21190)
!21194 = !DILocation(line: 535, column: 11, scope: !21190)
!21195 = !DILocation(line: 536, column: 19, scope: !21190)
!21196 = !DILocation(line: 536, column: 11, scope: !21190)
!21197 = !DILocation(line: 536, column: 17, scope: !21190)
!21198 = !DILocation(line: 537, column: 18, scope: !21190)
!21199 = !DILocation(line: 538, column: 9, scope: !21190)
!21200 = !DILocation(line: 539, column: 5, scope: !21175)
!21201 = !DILocation(line: 541, column: 10, scope: !1168)
!21202 = !DILocation(line: 541, column: 3, scope: !1168)
!21203 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !21204, file: !21204, line: 99, type: !21205, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !295)
!21204 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!21205 = !DISubroutineType(types: !21206)
!21206 = !{!7, !21207}
!21207 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !21208, line: 36, baseType: !5)
!21208 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!21209 = !DILocalVariable(name: "item", arg: 1, scope: !21203, file: !21204, line: 99, type: !21207)
!21210 = !DILocation(line: 99, column: 26, scope: !21203)
!21211 = !DILocation(line: 101, column: 11, scope: !21203)
!21212 = !DILocation(line: 101, column: 3, scope: !21203)
!21213 = !DILocation(line: 126, column: 14, scope: !21214)
!21214 = distinct !DILexicalBlock(scope: !21203, file: !21204, line: 102, column: 5)
!21215 = !DILocation(line: 126, column: 19, scope: !21214)
!21216 = !DILocation(line: 126, column: 30, scope: !21214)
!21217 = !DILocation(line: 126, column: 12, scope: !21214)
!21218 = !DILocation(line: 127, column: 7, scope: !21214)
!21219 = !DILocation(line: 162, column: 7, scope: !21214)
!21220 = !DILocation(line: 164, column: 23, scope: !21203)
!21221 = !DILocation(line: 164, column: 10, scope: !21203)
!21222 = !DILocation(line: 164, column: 3, scope: !21203)
!21223 = distinct !DISubprogram(name: "c_isalnum", scope: !21224, file: !21224, line: 169, type: !2939, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21224 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!21225 = !DILocalVariable(name: "c", arg: 1, scope: !21223, file: !21224, line: 169, type: !5)
!21226 = !DILocation(line: 169, column: 16, scope: !21223)
!21227 = !DILocation(line: 171, column: 11, scope: !21223)
!21228 = !DILocation(line: 171, column: 3, scope: !21223)
!21229 = !DILocation(line: 176, column: 7, scope: !21230)
!21230 = distinct !DILexicalBlock(scope: !21223, file: !21224, line: 172, column: 5)
!21231 = !DILocation(line: 178, column: 7, scope: !21230)
!21232 = !DILocation(line: 180, column: 1, scope: !21223)
!21233 = distinct !DISubprogram(name: "c_isalpha", scope: !21224, file: !21224, line: 183, type: !2939, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21234 = !DILocalVariable(name: "c", arg: 1, scope: !21233, file: !21224, line: 183, type: !5)
!21235 = !DILocation(line: 183, column: 16, scope: !21233)
!21236 = !DILocation(line: 185, column: 11, scope: !21233)
!21237 = !DILocation(line: 185, column: 3, scope: !21233)
!21238 = !DILocation(line: 189, column: 7, scope: !21239)
!21239 = distinct !DILexicalBlock(scope: !21233, file: !21224, line: 186, column: 5)
!21240 = !DILocation(line: 191, column: 7, scope: !21239)
!21241 = !DILocation(line: 193, column: 1, scope: !21233)
!21242 = distinct !DISubprogram(name: "c_isascii", scope: !21224, file: !21224, line: 198, type: !2939, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21243 = !DILocalVariable(name: "c", arg: 1, scope: !21242, file: !21224, line: 198, type: !5)
!21244 = !DILocation(line: 198, column: 16, scope: !21242)
!21245 = !DILocation(line: 200, column: 11, scope: !21242)
!21246 = !DILocation(line: 200, column: 3, scope: !21242)
!21247 = !DILocation(line: 208, column: 7, scope: !21248)
!21248 = distinct !DILexicalBlock(scope: !21242, file: !21224, line: 201, column: 5)
!21249 = !DILocation(line: 210, column: 7, scope: !21248)
!21250 = !DILocation(line: 212, column: 1, scope: !21242)
!21251 = distinct !DISubprogram(name: "c_isblank", scope: !21224, file: !21224, line: 215, type: !2939, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21252 = !DILocalVariable(name: "c", arg: 1, scope: !21251, file: !21224, line: 215, type: !5)
!21253 = !DILocation(line: 215, column: 16, scope: !21251)
!21254 = !DILocation(line: 217, column: 10, scope: !21251)
!21255 = !DILocation(line: 217, column: 12, scope: !21251)
!21256 = !DILocation(line: 217, column: 19, scope: !21251)
!21257 = !DILocation(line: 217, column: 22, scope: !21251)
!21258 = !DILocation(line: 217, column: 24, scope: !21251)
!21259 = !DILocation(line: 217, column: 3, scope: !21251)
!21260 = distinct !DISubprogram(name: "c_iscntrl", scope: !21224, file: !21224, line: 221, type: !2939, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21261 = !DILocalVariable(name: "c", arg: 1, scope: !21260, file: !21224, line: 221, type: !5)
!21262 = !DILocation(line: 221, column: 16, scope: !21260)
!21263 = !DILocation(line: 223, column: 11, scope: !21260)
!21264 = !DILocation(line: 223, column: 3, scope: !21260)
!21265 = !DILocation(line: 226, column: 7, scope: !21266)
!21266 = distinct !DILexicalBlock(scope: !21260, file: !21224, line: 224, column: 5)
!21267 = !DILocation(line: 228, column: 7, scope: !21266)
!21268 = !DILocation(line: 230, column: 1, scope: !21260)
!21269 = distinct !DISubprogram(name: "c_isdigit", scope: !21224, file: !21224, line: 233, type: !2939, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21270 = !DILocalVariable(name: "c", arg: 1, scope: !21269, file: !21224, line: 233, type: !5)
!21271 = !DILocation(line: 233, column: 16, scope: !21269)
!21272 = !DILocation(line: 235, column: 11, scope: !21269)
!21273 = !DILocation(line: 235, column: 3, scope: !21269)
!21274 = !DILocation(line: 238, column: 7, scope: !21275)
!21275 = distinct !DILexicalBlock(scope: !21269, file: !21224, line: 236, column: 5)
!21276 = !DILocation(line: 240, column: 7, scope: !21275)
!21277 = !DILocation(line: 242, column: 1, scope: !21269)
!21278 = distinct !DISubprogram(name: "c_isgraph", scope: !21224, file: !21224, line: 245, type: !2939, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21279 = !DILocalVariable(name: "c", arg: 1, scope: !21278, file: !21224, line: 245, type: !5)
!21280 = !DILocation(line: 245, column: 16, scope: !21278)
!21281 = !DILocation(line: 247, column: 11, scope: !21278)
!21282 = !DILocation(line: 247, column: 3, scope: !21278)
!21283 = !DILocation(line: 253, column: 7, scope: !21284)
!21284 = distinct !DILexicalBlock(scope: !21278, file: !21224, line: 248, column: 5)
!21285 = !DILocation(line: 255, column: 7, scope: !21284)
!21286 = !DILocation(line: 257, column: 1, scope: !21278)
!21287 = distinct !DISubprogram(name: "c_islower", scope: !21224, file: !21224, line: 260, type: !2939, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21288 = !DILocalVariable(name: "c", arg: 1, scope: !21287, file: !21224, line: 260, type: !5)
!21289 = !DILocation(line: 260, column: 16, scope: !21287)
!21290 = !DILocation(line: 262, column: 11, scope: !21287)
!21291 = !DILocation(line: 262, column: 3, scope: !21287)
!21292 = !DILocation(line: 265, column: 7, scope: !21293)
!21293 = distinct !DILexicalBlock(scope: !21287, file: !21224, line: 263, column: 5)
!21294 = !DILocation(line: 267, column: 7, scope: !21293)
!21295 = !DILocation(line: 269, column: 1, scope: !21287)
!21296 = distinct !DISubprogram(name: "c_isprint", scope: !21224, file: !21224, line: 272, type: !2939, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21297 = !DILocalVariable(name: "c", arg: 1, scope: !21296, file: !21224, line: 272, type: !5)
!21298 = !DILocation(line: 272, column: 16, scope: !21296)
!21299 = !DILocation(line: 274, column: 11, scope: !21296)
!21300 = !DILocation(line: 274, column: 3, scope: !21296)
!21301 = !DILocation(line: 281, column: 7, scope: !21302)
!21302 = distinct !DILexicalBlock(scope: !21296, file: !21224, line: 275, column: 5)
!21303 = !DILocation(line: 283, column: 7, scope: !21302)
!21304 = !DILocation(line: 285, column: 1, scope: !21296)
!21305 = distinct !DISubprogram(name: "c_ispunct", scope: !21224, file: !21224, line: 288, type: !2939, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21306 = !DILocalVariable(name: "c", arg: 1, scope: !21305, file: !21224, line: 288, type: !5)
!21307 = !DILocation(line: 288, column: 16, scope: !21305)
!21308 = !DILocation(line: 290, column: 11, scope: !21305)
!21309 = !DILocation(line: 290, column: 3, scope: !21305)
!21310 = !DILocation(line: 293, column: 7, scope: !21311)
!21311 = distinct !DILexicalBlock(scope: !21305, file: !21224, line: 291, column: 5)
!21312 = !DILocation(line: 295, column: 7, scope: !21311)
!21313 = !DILocation(line: 297, column: 1, scope: !21305)
!21314 = distinct !DISubprogram(name: "c_isspace", scope: !21224, file: !21224, line: 300, type: !2939, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21315 = !DILocalVariable(name: "c", arg: 1, scope: !21314, file: !21224, line: 300, type: !5)
!21316 = !DILocation(line: 300, column: 16, scope: !21314)
!21317 = !DILocation(line: 302, column: 11, scope: !21314)
!21318 = !DILocation(line: 302, column: 3, scope: !21314)
!21319 = !DILocation(line: 305, column: 7, scope: !21320)
!21320 = distinct !DILexicalBlock(scope: !21314, file: !21224, line: 303, column: 5)
!21321 = !DILocation(line: 307, column: 7, scope: !21320)
!21322 = !DILocation(line: 309, column: 1, scope: !21314)
!21323 = distinct !DISubprogram(name: "c_isupper", scope: !21224, file: !21224, line: 312, type: !2939, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21324 = !DILocalVariable(name: "c", arg: 1, scope: !21323, file: !21224, line: 312, type: !5)
!21325 = !DILocation(line: 312, column: 16, scope: !21323)
!21326 = !DILocation(line: 314, column: 11, scope: !21323)
!21327 = !DILocation(line: 314, column: 3, scope: !21323)
!21328 = !DILocation(line: 317, column: 7, scope: !21329)
!21329 = distinct !DILexicalBlock(scope: !21323, file: !21224, line: 315, column: 5)
!21330 = !DILocation(line: 319, column: 7, scope: !21329)
!21331 = !DILocation(line: 321, column: 1, scope: !21323)
!21332 = distinct !DISubprogram(name: "c_isxdigit", scope: !21224, file: !21224, line: 324, type: !2939, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21333 = !DILocalVariable(name: "c", arg: 1, scope: !21332, file: !21224, line: 324, type: !5)
!21334 = !DILocation(line: 324, column: 17, scope: !21332)
!21335 = !DILocation(line: 326, column: 11, scope: !21332)
!21336 = !DILocation(line: 326, column: 3, scope: !21332)
!21337 = !DILocation(line: 330, column: 7, scope: !21338)
!21338 = distinct !DILexicalBlock(scope: !21332, file: !21224, line: 327, column: 5)
!21339 = !DILocation(line: 332, column: 7, scope: !21338)
!21340 = !DILocation(line: 334, column: 1, scope: !21332)
!21341 = distinct !DISubprogram(name: "c_tolower", scope: !21224, file: !21224, line: 337, type: !15414, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21342 = !DILocalVariable(name: "c", arg: 1, scope: !21341, file: !21224, line: 337, type: !5)
!21343 = !DILocation(line: 337, column: 16, scope: !21341)
!21344 = !DILocation(line: 339, column: 11, scope: !21341)
!21345 = !DILocation(line: 339, column: 3, scope: !21341)
!21346 = !DILocation(line: 342, column: 14, scope: !21347)
!21347 = distinct !DILexicalBlock(scope: !21341, file: !21224, line: 340, column: 5)
!21348 = !DILocation(line: 342, column: 16, scope: !21347)
!21349 = !DILocation(line: 342, column: 22, scope: !21347)
!21350 = !DILocation(line: 342, column: 7, scope: !21347)
!21351 = !DILocation(line: 344, column: 14, scope: !21347)
!21352 = !DILocation(line: 344, column: 7, scope: !21347)
!21353 = !DILocation(line: 346, column: 1, scope: !21341)
!21354 = distinct !DISubprogram(name: "c_toupper", scope: !21224, file: !21224, line: 349, type: !15414, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !295)
!21355 = !DILocalVariable(name: "c", arg: 1, scope: !21354, file: !21224, line: 349, type: !5)
!21356 = !DILocation(line: 349, column: 16, scope: !21354)
!21357 = !DILocation(line: 351, column: 11, scope: !21354)
!21358 = !DILocation(line: 351, column: 3, scope: !21354)
!21359 = !DILocation(line: 354, column: 14, scope: !21360)
!21360 = distinct !DILexicalBlock(scope: !21354, file: !21224, line: 352, column: 5)
!21361 = !DILocation(line: 354, column: 16, scope: !21360)
!21362 = !DILocation(line: 354, column: 22, scope: !21360)
!21363 = !DILocation(line: 354, column: 7, scope: !21360)
!21364 = !DILocation(line: 356, column: 14, scope: !21360)
!21365 = !DILocation(line: 356, column: 7, scope: !21360)
!21366 = !DILocation(line: 358, column: 1, scope: !21354)
!21367 = distinct !DISubprogram(name: "fopen_safer", scope: !21368, file: !21368, line: 31, type: !21369, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1844, retainedNodes: !295)
!21368 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!21369 = !DISubroutineType(types: !21370)
!21370 = !{!1847, !180, !180}
!21371 = !DILocalVariable(name: "file", arg: 1, scope: !21367, file: !21368, line: 31, type: !180)
!21372 = !DILocation(line: 31, column: 26, scope: !21367)
!21373 = !DILocalVariable(name: "mode", arg: 2, scope: !21367, file: !21368, line: 31, type: !180)
!21374 = !DILocation(line: 31, column: 44, scope: !21367)
!21375 = !DILocalVariable(name: "fp", scope: !21367, file: !21368, line: 33, type: !1847)
!21376 = !DILocation(line: 33, column: 9, scope: !21367)
!21377 = !DILocation(line: 33, column: 21, scope: !21367)
!21378 = !DILocation(line: 33, column: 27, scope: !21367)
!21379 = !DILocation(line: 33, column: 14, scope: !21367)
!21380 = !DILocation(line: 35, column: 7, scope: !21381)
!21381 = distinct !DILexicalBlock(scope: !21367, file: !21368, line: 35, column: 7)
!21382 = !DILocation(line: 35, column: 7, scope: !21367)
!21383 = !DILocalVariable(name: "fd", scope: !21384, file: !21368, line: 37, type: !5)
!21384 = distinct !DILexicalBlock(scope: !21381, file: !21368, line: 36, column: 5)
!21385 = !DILocation(line: 37, column: 11, scope: !21384)
!21386 = !DILocation(line: 37, column: 24, scope: !21384)
!21387 = !DILocation(line: 37, column: 16, scope: !21384)
!21388 = !DILocation(line: 39, column: 16, scope: !21389)
!21389 = distinct !DILexicalBlock(scope: !21384, file: !21368, line: 39, column: 11)
!21390 = !DILocation(line: 39, column: 13, scope: !21389)
!21391 = !DILocation(line: 39, column: 19, scope: !21389)
!21392 = !DILocation(line: 39, column: 22, scope: !21389)
!21393 = !DILocation(line: 39, column: 25, scope: !21389)
!21394 = !DILocation(line: 39, column: 11, scope: !21384)
!21395 = !DILocalVariable(name: "f", scope: !21396, file: !21368, line: 41, type: !5)
!21396 = distinct !DILexicalBlock(scope: !21389, file: !21368, line: 40, column: 9)
!21397 = !DILocation(line: 41, column: 15, scope: !21396)
!21398 = !DILocation(line: 41, column: 30, scope: !21396)
!21399 = !DILocation(line: 41, column: 19, scope: !21396)
!21400 = !DILocation(line: 43, column: 15, scope: !21401)
!21401 = distinct !DILexicalBlock(scope: !21396, file: !21368, line: 43, column: 15)
!21402 = !DILocation(line: 43, column: 17, scope: !21401)
!21403 = !DILocation(line: 43, column: 15, scope: !21396)
!21404 = !DILocalVariable(name: "e", scope: !21405, file: !21368, line: 45, type: !5)
!21405 = distinct !DILexicalBlock(scope: !21401, file: !21368, line: 44, column: 13)
!21406 = !DILocation(line: 45, column: 19, scope: !21405)
!21407 = !DILocation(line: 45, column: 23, scope: !21405)
!21408 = !DILocation(line: 46, column: 23, scope: !21405)
!21409 = !DILocation(line: 46, column: 15, scope: !21405)
!21410 = !DILocation(line: 47, column: 23, scope: !21405)
!21411 = !DILocation(line: 47, column: 15, scope: !21405)
!21412 = !DILocation(line: 47, column: 21, scope: !21405)
!21413 = !DILocation(line: 48, column: 15, scope: !21405)
!21414 = !DILocation(line: 51, column: 23, scope: !21415)
!21415 = distinct !DILexicalBlock(scope: !21396, file: !21368, line: 51, column: 15)
!21416 = !DILocation(line: 51, column: 15, scope: !21415)
!21417 = !DILocation(line: 51, column: 27, scope: !21415)
!21418 = !DILocation(line: 52, column: 15, scope: !21415)
!21419 = !DILocation(line: 52, column: 34, scope: !21415)
!21420 = !DILocation(line: 52, column: 37, scope: !21415)
!21421 = !DILocation(line: 52, column: 26, scope: !21415)
!21422 = !DILocation(line: 52, column: 24, scope: !21415)
!21423 = !DILocation(line: 51, column: 15, scope: !21396)
!21424 = !DILocalVariable(name: "e", scope: !21425, file: !21368, line: 54, type: !5)
!21425 = distinct !DILexicalBlock(scope: !21415, file: !21368, line: 53, column: 13)
!21426 = !DILocation(line: 54, column: 19, scope: !21425)
!21427 = !DILocation(line: 54, column: 23, scope: !21425)
!21428 = !DILocation(line: 55, column: 22, scope: !21425)
!21429 = !DILocation(line: 55, column: 15, scope: !21425)
!21430 = !DILocation(line: 56, column: 23, scope: !21425)
!21431 = !DILocation(line: 56, column: 15, scope: !21425)
!21432 = !DILocation(line: 56, column: 21, scope: !21425)
!21433 = !DILocation(line: 57, column: 15, scope: !21425)
!21434 = !DILocation(line: 59, column: 9, scope: !21396)
!21435 = !DILocation(line: 60, column: 5, scope: !21384)
!21436 = !DILocation(line: 62, column: 10, scope: !21367)
!21437 = !DILocation(line: 62, column: 3, scope: !21367)
!21438 = !DILocation(line: 63, column: 1, scope: !21367)
