; ModuleID = 'ginstall.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mode_change = type { i8, i8, i32, i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.savewd = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.17 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.128 }
%union.anon.128 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [165 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A  or:  %s [OPTION]... -d DIRECTORY...\0A\00", align 1
@.str.2 = private unnamed_addr constant [465 x i8] c"\0AThis install program copies files (often just compiled) into destination\0Alocations you choose.  If you want to download and install a ready-to-use\0Apackage on a GNU/Linux system, you should instead be using a package manager\0Alike yum(1) or apt-get(1).\0A\0AIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\0Athe existing DIRECTORY, while setting permission modes and owner/group.\0AIn the 4th form, create all components of the given DIRECTORY(ies).\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [465 x i8] c"      --backup[=CONTROL]  make a backup of each existing destination file\0A  -b                  like --backup but does not accept an argument\0A  -c                  (ignored)\0A  -C, --compare       compare each pair of source and destination files, and\0A                        in some cases, do not modify the destination at all\0A  -d, --directory     treat all arguments as directory names; create all\0A                        components of the specified directories\0A\00", align 1
@.str.4 = private unnamed_addr constant [401 x i8] c"  -D                  create all leading components of DEST except the last,\0A                        or all components of --target-directory,\0A                        then copy SOURCE to DEST\0A  -g, --group=GROUP   set group ownership, instead of process' current group\0A  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\0A  -o, --owner=OWNER   set ownership (super-user only)\0A\00", align 1
@.str.5 = private unnamed_addr constant [504 x i8] c"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\0A                        to corresponding destination files\0A  -s, --strip         strip symbol tables\0A      --strip-program=PROGRAM  program used to strip binaries\0A  -S, --suffix=SUFFIX  override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory  treat DEST as a normal file\0A  -v, --verbose       print the name of each directory as it is created\0A\00", align 1
@.str.6 = private unnamed_addr constant [347 x i8] c"      --preserve-context  preserve SELinux security context\0A  -Z                      set SELinux security context of destination\0A                            file and each created directory to default type\0A      --context[=CTX]     like -Z, or if CTX is specified then set the\0A                            SELinux or SMACK security context to CTX\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"install\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.36 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@selinux_enabled = internal global i32 0, align 4, !dbg !63, !ctir !7
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@owner_name = internal global i8* null, align 8, !dbg !387, !ctir !9
@group_name = internal global i8* null, align 8, !dbg !389, !ctir !9
@strip_files = internal global i8 0, align 1, !dbg !393, !ctir !142
@dir_arg = internal global i8 0, align 1, !dbg !395, !ctir !142
@.str.13 = private unnamed_addr constant [21 x i8] c"bcCsDdg:m:o:pt:TvS:Z\00", align 1
@long_options = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !397, !ctir !219
@optarg = external dso_local global i8*, align 8, !ctir !9
@copy_only_if_needed = internal global i8 0, align 1, !dbg !391, !ctir !142
@strip_program = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), align 8, !dbg !399, !ctir !183
@.str.14 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.15 = private unnamed_addr constant [73 x i8] c"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\00", align 1
@use_default_selinux_context = internal global i8 1, align 1, !dbg !401, !ctir !142
@.str.16 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"the strip option may not be used when installing a directory\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"target directory not allowed when installing a directory\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.26 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@mode = internal global i32 493, align 4, !dbg !403, !ctir !139
@dir_mode_bits = internal global i32 4095, align 4, !dbg !405, !ctir !139
@dir_mode = internal global i32 493, align 4, !dbg !407, !ctir !139
@.str.31 = private unnamed_addr constant [72 x i8] c"WARNING: ignoring --strip-program option as -s option was not specified\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"options --compare (-C) and --preserve-timestamps are mutually exclusive\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"options --compare (-C) and --strip are mutually exclusive\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"the --compare (-C) option is ignored when you specify a mode with non-permission bits\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"failed to set default creation context for %s\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"creating directory %s\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"cannot unlink %s\00", align 1
@owner_id = internal global i32 0, align 4, !dbg !409, !ctir !127
@group_id = internal global i32 0, align 4, !dbg !411, !ctir !129
@.str.83 = private unnamed_addr constant [30 x i8] c"cannot change ownership of %s\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@setdefaultfilecon.first_call = internal global i8 1, align 1, !dbg !420
@.str.85 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"<<none>>\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"warning: %s: failed to change context to %s\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"cannot set timestamps for %s\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"fork system call failed\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"cannot run %s\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"waiting for strip\00", align 1
@.str.81 = private unnamed_addr constant [36 x i8] c"strip process terminated abnormally\00", align 1
@have_same_content.a_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !413
@have_same_content.b_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !418
@.str.72 = private unnamed_addr constant [33 x i8] c"failed to restore context for %s\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"invalid user %s\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"invalid group %s\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"preserve-timestamps\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"preserve-context\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"strip-program\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.90 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.95 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.100 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.101 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !423, !ctir !183
@top_level_dst_name = internal global i8* null, align 8, !dbg !591, !ctir !183
@.str.12.102 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.103 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.104 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.105 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.106 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.107 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.108 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.109 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.110 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.111 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.112 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.113 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.114 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.115 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.116 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.117 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.118 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.119 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.120 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.121 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.122 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.123 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.124 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.125 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.126 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.127 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.128 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.129 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.130 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.131 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.132 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.133 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.134 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.135 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.136 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.137 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.138 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.139 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.140 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.141 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !586
@.str.77.142 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76.143 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.144 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.145 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.146 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.147 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.148 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.149 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.150 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.151 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.152 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.153 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.154 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.155 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.156 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.157 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.158 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.159 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !593
@write_zeros.nz = internal global i64 131072, align 8, !dbg !598
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !600
@.str.59.160 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.161 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.162 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.163 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.164 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.165 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.166 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.167 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.168 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.170 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.171 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.172 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.173 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !602, !ctir !175
@.str.188 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.189 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.190 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !619, !ctir !628
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), align 8, !dbg !642, !ctir !183
@.str.197 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.201 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.204 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !648, !ctir !183
@.str.211 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.212 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.213 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.217, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.221, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.223, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.224, i32 0, i32 0), i8* null], align 16, !dbg !679, !ctir !687
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !695, !ctir !685
@.str.2.217 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.218 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.219 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.220 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.221 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.222 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.223 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.224 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.227 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.228 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !698, !ctir !183
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !703
@.str.233 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.234 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.235 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.236 = internal global i8* null, align 8, !dbg !742, !ctir !183
@ignore_EPIPE = internal global i8 0, align 1, !dbg !782, !ctir !142
@.str.239 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.240 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.241 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !785, !ctir !739
@.str.270 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.271 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.272 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.273 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !792, !ctir !816
@.str.296 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.1.297 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2.298 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@.str.3.299 = private unnamed_addr constant [42 x i8] c"cannot change owner and permissions of %s\00", align 1
@.str.4.300 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !847, !ctir !183
@.str.311 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.312 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.313 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.320, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.321, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.322, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.327, i32 0, i32 0), i8* null], align 16, !dbg !888, !ctir !908
@.str.318 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.319 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.320 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.321 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.322 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.323 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.324 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.325 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.326 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.327 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !951, !ctir !909
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !953, !ctir !912
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !955, !ctir !912
@.str.10.328 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.329 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.330 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.331 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.332 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.333 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.334 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.335 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.336 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !959, !ctir !925
@nslots = internal global i32 1, align 4, !dbg !961, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !957, !ctir !624
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !963, !ctir !926
@.str.357 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !965, !ctir !990
@.str.366 = private unnamed_addr constant [19 x i8] c"wd->val.child == 0\00", align 1
@.str.1.367 = private unnamed_addr constant [13 x i8] c"lib/savewd.c\00", align 1
@__PRETTY_FUNCTION__.savewd_chdir = private unnamed_addr constant [60 x i8] c"int savewd_chdir(struct savewd *, const char *, int, int *)\00", align 1
@.str.2.368 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.369 = private unnamed_addr constant [2 x i8] c".\00", align 1
@__PRETTY_FUNCTION__.savewd_save = private unnamed_addr constant [35 x i8] c"_Bool savewd_save(struct savewd *)\00", align 1
@.str.3.372 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 4\00", align 1
@__PRETTY_FUNCTION__.savewd_restore = private unnamed_addr constant [41 x i8] c"int savewd_restore(struct savewd *, int)\00", align 1
@.str.4.375 = private unnamed_addr constant [18 x i8] c"wd->val.child < 0\00", align 1
@__PRETTY_FUNCTION__.savewd_finish = private unnamed_addr constant [36 x i8] c"void savewd_finish(struct savewd *)\00", align 1
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1005, !ctir !1013
@.str.2.398 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.399 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.400 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1023
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1067
@utimensat_works_really = internal global i32 0, align 4, !dbg !1069, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1089, !ctir !7
@.str.413 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.414 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.415 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.416 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.417 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.418 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.419 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.420 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.421 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.422 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.423 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.424 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.425 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.426 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.427 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.428 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.431 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.432 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.433 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.434 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.435 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.436 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1092, !ctir !443
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1099
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1108
@.str.1.459 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.460 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.463 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.464 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1110, !ctir !689
@.str.485 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.486 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.487 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.488 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.489 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.504 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.505 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.510 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.511 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.524 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.525 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.526 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.527 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1152

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !1850 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !1851, metadata !DIExpression()), !dbg !1852
  %0 = load i32, i32* %status.addr, align 4, !dbg !1853
  %cmp = icmp ne i32 %0, 0, !dbg !1855
  br i1 %cmp, label %if.then, label %if.else, !dbg !1856

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !1857

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1858
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #9, !dbg !1858
  %2 = load i8*, i8** @program_name, align 8, !dbg !1858
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !1858
  br label %do.end, !dbg !1858

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !1858

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !1860
  %3 = load i8*, i8** @program_name, align 8, !dbg !1862
  %4 = load i8*, i8** @program_name, align 8, !dbg !1863
  %5 = load i8*, i8** @program_name, align 8, !dbg !1864
  %6 = load i8*, i8** @program_name, align 8, !dbg !1865
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5, i8* %6), !dbg !1866
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !1867
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1867
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %7), !dbg !1867
  call void @emit_mandatory_arg_note(), !dbg !1868
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !1869
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1869
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %8), !dbg !1869
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !1870
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1870
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %9), !dbg !1870
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([504 x i8], [504 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !1871
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1871
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %10), !dbg !1871
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !1872
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1872
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %11), !dbg !1872
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !1873
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1873
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %12), !dbg !1873
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !1874
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1874
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %13), !dbg !1874
  call void @emit_backup_suffix_note(), !dbg !1875
  call void @emit_ancillary_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !1876
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %14 = load i32, i32* %status.addr, align 4, !dbg !1877
  call void @exit(i32 %14) #13, !dbg !1878
  unreachable, !dbg !1878
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !1879 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !1880
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1880
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !1880
  ret void, !dbg !1881
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !1882 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !1883
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1883
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !1883
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !1884
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1884
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !1884
  ret void, !dbg !1885
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !295 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !291
  %node = alloca i8*, align 8, !ctir !183
  %map_prog = alloca %struct.infomap*, align 8, !ctir !304
  %lc_messages = alloca i8*, align 8, !ctir !183
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !1886, metadata !DIExpression()), !dbg !1887
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !1888, metadata !DIExpression()), !dbg !1889
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !1889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !1889
  call void @llvm.dbg.declare(metadata i8** %node, metadata !1890, metadata !DIExpression()), !dbg !1891
  %1 = load i8*, i8** %program.addr, align 8, !dbg !1892
  store i8* %1, i8** %node, align 8, !dbg !1891
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !1893, metadata !DIExpression()), !dbg !1894
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !1895, !ctir !291
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !1894
  br label %while.cond, !dbg !1896

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1897
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !1898, !ctir !292
  %3 = load i8*, i8** %program1, align 8, !dbg !1898, !ctir !183
  %tobool = icmp ne i8* %3, null, !dbg !1897
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1899

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !1900
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1900
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !1900, !ctir !292
  %6 = load i8*, i8** %program2, align 8, !dbg !1900, !ctir !183
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !1900
  %cmp = icmp eq i32 %call, 0, !dbg !1900
  %lnot = xor i1 %cmp, true, !dbg !1901
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !1902
  br i1 %7, label %while.body, label %while.end, !dbg !1896

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1903
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !1903, !ctir !292
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !1903
  br label %while.cond, !dbg !1896, !llvm.loop !1904

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1905
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !1907, !ctir !292
  %10 = load i8*, i8** %node3, align 8, !dbg !1907, !ctir !183
  %tobool4 = icmp ne i8* %10, null, !dbg !1905
  br i1 %tobool4, label %if.then, label %if.end, !dbg !1908

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !1909
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !1910, !ctir !292
  %12 = load i8*, i8** %node5, align 8, !dbg !1910, !ctir !183
  store i8* %12, i8** %node, align 8, !dbg !1911
  br label %if.end, !dbg !1912

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !1913
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)), !dbg !1914
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !1915, metadata !DIExpression()), !dbg !1916
  %call8 = call i8* @setlocale(i32 5, i8* null) #9, !dbg !1917
  store i8* %call8, i8** %lc_messages, align 8, !dbg !1916
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !1918
  %tobool9 = icmp ne i8* %13, null, !dbg !1918
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !1920

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !1921
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3) #14, !dbg !1921
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1921
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !1922

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !1923
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1923
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !1923
  br label %if.end15, !dbg !1925

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !1926
  %16 = load i8*, i8** %program.addr, align 8, !dbg !1927
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %16), !dbg !1928
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !1929
  %17 = load i8*, i8** %node, align 8, !dbg !1930
  %18 = load i8*, i8** %node, align 8, !dbg !1931
  %19 = load i8*, i8** %program.addr, align 8, !dbg !1932
  %cmp19 = icmp eq i8* %18, %19, !dbg !1933
  %20 = zext i1 %cmp19 to i64, !dbg !1931
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !1931
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !1934
  ret void, !dbg !1935
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !1936 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %optc = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %specified_mode = alloca i8*, align 8, !ctir !183
  %make_backups = alloca i8, align 1, !ctir !142
  %backup_suffix = alloca i8*, align 8, !ctir !183
  %version_control_string = alloca i8*, align 8, !ctir !9
  %mkdir_and_install = alloca i8, align 1, !ctir !142
  %x = alloca %struct.cp_options, align 8, !ctir !132
  %target_directory = alloca i8*, align 8, !ctir !183
  %no_target_directory = alloca i8, align 1, !ctir !142
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !209
  %strip_program_specified = alloca i8, align 1, !ctir !142
  %scontext = alloca i8*, align 8, !ctir !183
  %st = alloca %struct.stat, align 8, !ctir !1939
  %stat_success = alloca i8, align 1, !ctir !142
  %change = alloca %struct.mode_change*, align 8, !ctir !270
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1956, metadata !DIExpression()), !dbg !1957
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1958, metadata !DIExpression()), !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %optc, metadata !1960, metadata !DIExpression()), !dbg !1961
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !1962, metadata !DIExpression()), !dbg !1963
  store i32 0, i32* %exit_status, align 4, !dbg !1963
  call void @llvm.dbg.declare(metadata i8** %specified_mode, metadata !1964, metadata !DIExpression()), !dbg !1965
  store i8* null, i8** %specified_mode, align 8, !dbg !1965
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !1966, metadata !DIExpression()), !dbg !1967
  store i8 0, i8* %make_backups, align 1, !dbg !1967
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !1968, metadata !DIExpression()), !dbg !1969
  store i8* null, i8** %backup_suffix, align 8, !dbg !1969
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !1970, metadata !DIExpression()), !dbg !1971
  store i8* null, i8** %version_control_string, align 8, !dbg !1971
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install, metadata !1972, metadata !DIExpression()), !dbg !1973
  store i8 0, i8* %mkdir_and_install, align 1, !dbg !1973
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !1974, metadata !DIExpression()), !dbg !1975
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !1976, metadata !DIExpression()), !dbg !1977
  store i8* null, i8** %target_directory, align 8, !dbg !1977
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !1978, metadata !DIExpression()), !dbg !1979
  store i8 0, i8* %no_target_directory, align 1, !dbg !1979
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !1980, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !1982, metadata !DIExpression()), !dbg !1983
  call void @llvm.dbg.declare(metadata i8* %strip_program_specified, metadata !1984, metadata !DIExpression()), !dbg !1985
  store i8 0, i8* %strip_program_specified, align 1, !dbg !1985
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !1986, metadata !DIExpression()), !dbg !1987
  store i8* null, i8** %scontext, align 8, !dbg !1987
  store i32 0, i32* @selinux_enabled, align 4, !dbg !1988
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !1989
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !1989, !ctir !209
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !1989
  call void @set_program_name(i8* %1), !dbg !1990
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !1991
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !1992
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !1993
  %call3 = call i32 @atexit(void ()* @close_stdin) #9, !dbg !1994
  call void @cp_option_init(%struct.cp_options* %x), !dbg !1995
  store i8* null, i8** @owner_name, align 8, !dbg !1996
  store i8* null, i8** @group_name, align 8, !dbg !1997
  store i8 0, i8* @strip_files, align 1, !dbg !1998
  store i8 0, i8* @dir_arg, align 1, !dbg !1999
  %call4 = call i32 @umask(i32 0) #9, !dbg !2000
  br label %while.cond, !dbg !2001

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2002
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2003
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #9, !dbg !2004
  store i32 %call5, i32* %optc, align 4, !dbg !2005
  %cmp = icmp ne i32 %call5, -1, !dbg !2006
  br i1 %cmp, label %while.body, label %while.end, !dbg !2001

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %optc, align 4, !dbg !2007
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb6
    i32 67, label %sw.bb7
    i32 115, label %sw.bb8
    i32 129, label %sw.bb10
    i32 100, label %sw.bb12
    i32 68, label %sw.bb13
    i32 118, label %sw.bb14
    i32 103, label %sw.bb15
    i32 109, label %sw.bb16
    i32 111, label %sw.bb17
    i32 112, label %sw.bb18
    i32 83, label %sw.bb19
    i32 116, label %sw.bb20
    i32 84, label %sw.bb25
    i32 128, label %sw.bb26
    i32 90, label %sw.bb31
    i32 -130, label %sw.bb43
    i32 -131, label %sw.bb44
  ], !dbg !2009

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2010
  %5 = load i8*, i8** @optarg, align 8, !dbg !2012
  %tobool = icmp ne i8* %5, null, !dbg !2012
  br i1 %tobool, label %if.then, label %if.end, !dbg !2014

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2015
  store i8* %6, i8** %version_control_string, align 8, !dbg !2016
  br label %if.end, !dbg !2017

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2018

sw.bb6:                                           ; preds = %while.body
  br label %sw.epilog, !dbg !2019

sw.bb7:                                           ; preds = %while.body
  store i8 1, i8* @copy_only_if_needed, align 1, !dbg !2020
  br label %sw.epilog, !dbg !2021

sw.bb8:                                           ; preds = %while.body
  store i8 1, i8* @strip_files, align 1, !dbg !2022
  %call9 = call void (i32)* @signal(i32 17, void (i32)* null) #9, !dbg !2023
  br label %sw.epilog, !dbg !2024

sw.bb10:                                          ; preds = %while.body
  %7 = load i8*, i8** @optarg, align 8, !dbg !2025
  %call11 = call noalias i8* @xstrdup(i8* %7), !dbg !2026
  store i8* %call11, i8** @strip_program, align 8, !dbg !2027
  store i8 1, i8* %strip_program_specified, align 1, !dbg !2028
  br label %sw.epilog, !dbg !2029

sw.bb12:                                          ; preds = %while.body
  store i8 1, i8* @dir_arg, align 1, !dbg !2030
  br label %sw.epilog, !dbg !2031

sw.bb13:                                          ; preds = %while.body
  store i8 1, i8* %mkdir_and_install, align 1, !dbg !2032
  br label %sw.epilog, !dbg !2033

sw.bb14:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2034, !ctir !132
  store i8 1, i8* %verbose, align 2, !dbg !2035, !ctir !142
  br label %sw.epilog, !dbg !2036

sw.bb15:                                          ; preds = %while.body
  %8 = load i8*, i8** @optarg, align 8, !dbg !2037
  store i8* %8, i8** @group_name, align 8, !dbg !2038
  br label %sw.epilog, !dbg !2039

sw.bb16:                                          ; preds = %while.body
  %9 = load i8*, i8** @optarg, align 8, !dbg !2040
  store i8* %9, i8** %specified_mode, align 8, !dbg !2041
  br label %sw.epilog, !dbg !2042

sw.bb17:                                          ; preds = %while.body
  %10 = load i8*, i8** @optarg, align 8, !dbg !2043
  store i8* %10, i8** @owner_name, align 8, !dbg !2044
  br label %sw.epilog, !dbg !2045

sw.bb18:                                          ; preds = %while.body
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2046, !ctir !132
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2047, !ctir !142
  br label %sw.epilog, !dbg !2048

sw.bb19:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2049
  %11 = load i8*, i8** @optarg, align 8, !dbg !2050
  store i8* %11, i8** %backup_suffix, align 8, !dbg !2051
  br label %sw.epilog, !dbg !2052

sw.bb20:                                          ; preds = %while.body
  %12 = load i8*, i8** %target_directory, align 8, !dbg !2053
  %tobool21 = icmp ne i8* %12, null, !dbg !2053
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2055

if.then22:                                        ; preds = %sw.bb20
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2056
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call23), !dbg !2056
  unreachable, !dbg !2056

if.end24:                                         ; preds = %sw.bb20
  %13 = load i8*, i8** @optarg, align 8, !dbg !2057
  store i8* %13, i8** %target_directory, align 8, !dbg !2058
  br label %sw.epilog, !dbg !2059

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2060
  br label %sw.epilog, !dbg !2061

sw.bb26:                                          ; preds = %while.body
  %14 = load i32, i32* @selinux_enabled, align 4, !dbg !2062
  %tobool27 = icmp ne i32 %14, 0, !dbg !2062
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !2064

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2065
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call29), !dbg !2067
  br label %sw.epilog, !dbg !2068

if.end30:                                         ; preds = %sw.bb26
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2069, !ctir !132
  store i8 1, i8* %preserve_security_context, align 1, !dbg !2070, !ctir !142
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2071
  br label %sw.epilog, !dbg !2072

sw.bb31:                                          ; preds = %while.body
  %15 = load i32, i32* @selinux_enabled, align 4, !dbg !2073
  %tobool32 = icmp ne i32 %15, 0, !dbg !2073
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2075

if.then33:                                        ; preds = %sw.bb31
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2076
  %16 = load i8*, i8** @optarg, align 8, !dbg !2078
  %tobool34 = icmp ne i8* %16, null, !dbg !2078
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !2080

if.then35:                                        ; preds = %if.then33
  %17 = load i8*, i8** @optarg, align 8, !dbg !2081
  store i8* %17, i8** %scontext, align 8, !dbg !2082
  br label %if.end36, !dbg !2083

if.else:                                          ; preds = %if.then33
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2084, !ctir !132
  store i8 1, i8* %set_security_context, align 1, !dbg !2085, !ctir !142
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  br label %if.end42, !dbg !2086

if.else37:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** @optarg, align 8, !dbg !2087
  %tobool38 = icmp ne i8* %18, null, !dbg !2087
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !2089

if.then39:                                        ; preds = %if.else37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2090
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !2092
  br label %if.end41, !dbg !2093

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end36
  br label %sw.epilog, !dbg !2094

sw.bb43:                                          ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !2095
  unreachable, !dbg !2095

sw.bb44:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2096
  %20 = load i8*, i8** @Version, align 8, !dbg !2096
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* null), !dbg !2096
  call void @exit(i32 0) #13, !dbg !2096
  unreachable, !dbg !2096

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !2097
  unreachable, !dbg !2097

sw.epilog:                                        ; preds = %if.end42, %if.end30, %if.then28, %sw.bb25, %if.end24, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2001, !llvm.loop !2098

while.end:                                        ; preds = %while.cond
  %21 = load i8, i8* @dir_arg, align 1, !dbg !2100
  %tobool45 = trunc i8 %21 to i1, !dbg !2100
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !2102

land.lhs.true:                                    ; preds = %while.end
  %22 = load i8, i8* @strip_files, align 1, !dbg !2103
  %tobool46 = trunc i8 %22 to i1, !dbg !2103
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2104

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !2105
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call48), !dbg !2105
  unreachable, !dbg !2105

if.end49:                                         ; preds = %land.lhs.true, %while.end
  %23 = load i8, i8* @dir_arg, align 1, !dbg !2106
  %tobool50 = trunc i8 %23 to i1, !dbg !2106
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !2108

land.lhs.true51:                                  ; preds = %if.end49
  %24 = load i8*, i8** %target_directory, align 8, !dbg !2109
  %tobool52 = icmp ne i8* %24, null, !dbg !2109
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !2110

if.then53:                                        ; preds = %land.lhs.true51
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !2111
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call54), !dbg !2111
  unreachable, !dbg !2111

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  %25 = load i8*, i8** %target_directory, align 8, !dbg !2112
  %tobool56 = icmp ne i8* %25, null, !dbg !2112
  br i1 %tobool56, label %if.then57, label %if.end76, !dbg !2114

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2115, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata i8* %stat_success, metadata !2118, metadata !DIExpression()), !dbg !2119
  %26 = load i8*, i8** %target_directory, align 8, !dbg !2120
  %call58 = call i32 @stat(i8* %26, %struct.stat* %st) #9, !dbg !2121
  %cmp59 = icmp eq i32 %call58, 0, !dbg !2122
  %27 = zext i1 %cmp59 to i64, !dbg !2121
  %cond = select i1 %cmp59, i32 1, i32 0, !dbg !2121
  %tobool60 = icmp ne i32 %cond, 0, !dbg !2121
  %frombool = zext i1 %tobool60 to i8, !dbg !2119
  store i8 %frombool, i8* %stat_success, align 1, !dbg !2119
  %28 = load i8, i8* %mkdir_and_install, align 1, !dbg !2123
  %tobool61 = trunc i8 %28 to i1, !dbg !2123
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !2125

land.lhs.true62:                                  ; preds = %if.then57
  %29 = load i8, i8* %stat_success, align 1, !dbg !2126
  %tobool63 = trunc i8 %29 to i1, !dbg !2126
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !2127

if.then64:                                        ; preds = %land.lhs.true62
  %call65 = call i32* @__errno_location() #16, !dbg !2128
  %30 = load i32, i32* %call65, align 4, !dbg !2128, !ctir !7
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2128
  %31 = load i8*, i8** %target_directory, align 8, !dbg !2128
  %call67 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2128
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %30, i8* %call66, i8* %call67), !dbg !2128
  unreachable, !dbg !2128

if.end68:                                         ; preds = %land.lhs.true62, %if.then57
  %32 = load i8, i8* %stat_success, align 1, !dbg !2129
  %tobool69 = trunc i8 %32 to i1, !dbg !2129
  br i1 %tobool69, label %land.lhs.true70, label %if.end75, !dbg !2131

land.lhs.true70:                                  ; preds = %if.end68
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2132, !ctir !1939
  %33 = load i32, i32* %st_mode, align 8, !dbg !2132, !ctir !140
  %and = and i32 %33, 61440, !dbg !2132
  %cmp71 = icmp eq i32 %and, 16384, !dbg !2132
  br i1 %cmp71, label %if.end75, label %if.then72, !dbg !2133

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2134
  %34 = load i8*, i8** %target_directory, align 8, !dbg !2134
  %call74 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !2134
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call73, i8* %call74), !dbg !2134
  unreachable, !dbg !2134

if.end75:                                         ; preds = %land.lhs.true70, %if.end68
  br label %if.end76, !dbg !2135

if.end76:                                         ; preds = %if.end75, %if.end55
  %35 = load i8, i8* %make_backups, align 1, !dbg !2136
  %tobool77 = trunc i8 %35 to i1, !dbg !2136
  br i1 %tobool77, label %cond.true, label %cond.false, !dbg !2136

cond.true:                                        ; preds = %if.end76
  %call78 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !2137
  %36 = load i8*, i8** %version_control_string, align 8, !dbg !2138
  %call79 = call i32 @xget_version(i8* %call78, i8* %36), !dbg !2139
  br label %cond.end, !dbg !2136

cond.false:                                       ; preds = %if.end76
  br label %cond.end, !dbg !2136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond80 = phi i32 [ %call79, %cond.true ], [ 0, %cond.false ], !dbg !2136
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2140, !ctir !132
  store i32 %cond80, i32* %backup_type, align 8, !dbg !2141, !ctir !68
  %37 = load i8*, i8** %backup_suffix, align 8, !dbg !2142
  call void @set_simple_backup_suffix(i8* %37), !dbg !2143
  %preserve_security_context81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2144, !ctir !132
  %38 = load i8, i8* %preserve_security_context81, align 1, !dbg !2144
  %tobool82 = trunc i8 %38 to i1, !dbg !2144, !ctir !142
  br i1 %tobool82, label %land.lhs.true83, label %if.end89, !dbg !2146

land.lhs.true83:                                  ; preds = %cond.end
  %set_security_context84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2147, !ctir !132
  %39 = load i8, i8* %set_security_context84, align 1, !dbg !2147
  %tobool85 = trunc i8 %39 to i1, !dbg !2147, !ctir !142
  br i1 %tobool85, label %if.then87, label %lor.lhs.false, !dbg !2148

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %40 = load i8*, i8** %scontext, align 8, !dbg !2149
  %tobool86 = icmp ne i8* %40, null, !dbg !2149
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !2150

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !2151
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call88), !dbg !2151
  unreachable, !dbg !2151

if.end89:                                         ; preds = %lor.lhs.false, %cond.end
  %41 = load i8*, i8** %scontext, align 8, !dbg !2152
  %tobool90 = icmp ne i8* %41, null, !dbg !2152
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !2154

land.lhs.true91:                                  ; preds = %if.end89
  %42 = load i8*, i8** %scontext, align 8, !dbg !2155
  %call92 = call i8* @se_const(i8* %42), !dbg !2156
  %call93 = call i32 @setfscreatecon(i8* %call92), !dbg !2157
  %cmp94 = icmp slt i32 %call93, 0, !dbg !2158
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !2159

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32* @__errno_location() #16, !dbg !2160
  %43 = load i32, i32* %call96, align 4, !dbg !2160, !ctir !7
  %call97 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !2160
  %44 = load i8*, i8** %scontext, align 8, !dbg !2160
  %call98 = call i8* @quote(i8* %44), !dbg !2160
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %43, i8* %call97, i8* %call98), !dbg !2160
  unreachable, !dbg !2160

if.end99:                                         ; preds = %land.lhs.true91, %if.end89
  %45 = load i32, i32* %argc.addr, align 4, !dbg !2161
  %46 = load i32, i32* @optind, align 4, !dbg !2162
  %sub = sub nsw i32 %45, %46, !dbg !2163
  store i32 %sub, i32* %n_files, align 4, !dbg !2164
  %47 = load i8**, i8*** %argv.addr, align 8, !dbg !2165
  %48 = load i32, i32* @optind, align 4, !dbg !2166
  %idx.ext = sext i32 %48 to i64, !dbg !2167
  %add.ptr = getelementptr inbounds i8*, i8** %47, i64 %idx.ext, !dbg !2167, !ctir !9
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2168
  %49 = load i32, i32* %n_files, align 4, !dbg !2169
  %50 = load i8, i8* @dir_arg, align 1, !dbg !2171
  %tobool100 = trunc i8 %50 to i1, !dbg !2171
  br i1 %tobool100, label %lor.end, label %lor.rhs, !dbg !2172

lor.rhs:                                          ; preds = %if.end99
  %51 = load i8*, i8** %target_directory, align 8, !dbg !2173
  %tobool101 = icmp ne i8* %51, null, !dbg !2172
  br label %lor.end, !dbg !2172

lor.end:                                          ; preds = %lor.rhs, %if.end99
  %52 = phi i1 [ true, %if.end99 ], [ %tobool101, %lor.rhs ]
  %lnot = xor i1 %52, true, !dbg !2174
  %lnot.ext = zext i1 %lnot to i32, !dbg !2174
  %cmp102 = icmp sle i32 %49, %lnot.ext, !dbg !2175
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !2176

if.then103:                                       ; preds = %lor.end
  %53 = load i32, i32* %n_files, align 4, !dbg !2177
  %cmp104 = icmp sle i32 %53, 0, !dbg !2180
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !2181

if.then105:                                       ; preds = %if.then103
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !2182
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call106), !dbg !2183
  br label %if.end111, !dbg !2183

if.else107:                                       ; preds = %if.then103
  %call108 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !2184
  %54 = load i8**, i8*** %file, align 8, !dbg !2185
  %arrayidx109 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !2185, !ctir !209
  %55 = load i8*, i8** %arrayidx109, align 8, !dbg !2185
  %call110 = call i8* @quotearg_style(i32 4, i8* %55), !dbg !2185
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call108, i8* %call110), !dbg !2186
  br label %if.end111

if.end111:                                        ; preds = %if.else107, %if.then105
  call void @usage(i32 1) #15, !dbg !2187
  unreachable, !dbg !2187

if.end112:                                        ; preds = %lor.end
  %56 = load i8, i8* %no_target_directory, align 1, !dbg !2188
  %tobool113 = trunc i8 %56 to i1, !dbg !2188
  br i1 %tobool113, label %if.then114, label %if.else125, !dbg !2190

if.then114:                                       ; preds = %if.end112
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2191
  %tobool115 = icmp ne i8* %57, null, !dbg !2191
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !2194

if.then116:                                       ; preds = %if.then114
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !2195
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call117), !dbg !2195
  unreachable, !dbg !2195

if.end118:                                        ; preds = %if.then114
  %58 = load i32, i32* %n_files, align 4, !dbg !2196
  %cmp119 = icmp slt i32 2, %58, !dbg !2198
  br i1 %cmp119, label %if.then120, label %if.end124, !dbg !2199

if.then120:                                       ; preds = %if.end118
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !2200
  %59 = load i8**, i8*** %file, align 8, !dbg !2202
  %arrayidx122 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !2202, !ctir !209
  %60 = load i8*, i8** %arrayidx122, align 8, !dbg !2202
  %call123 = call i8* @quotearg_style(i32 4, i8* %60), !dbg !2202
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call121, i8* %call123), !dbg !2203
  call void @usage(i32 1) #15, !dbg !2204
  unreachable, !dbg !2204

if.end124:                                        ; preds = %if.end118
  br label %if.end149, !dbg !2205

if.else125:                                       ; preds = %if.end112
  %61 = load i8, i8* @dir_arg, align 1, !dbg !2206
  %tobool126 = trunc i8 %61 to i1, !dbg !2206
  br i1 %tobool126, label %if.end148, label %lor.lhs.false127, !dbg !2208

lor.lhs.false127:                                 ; preds = %if.else125
  %62 = load i8*, i8** %target_directory, align 8, !dbg !2209
  %tobool128 = icmp ne i8* %62, null, !dbg !2209
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !2210

if.then129:                                       ; preds = %lor.lhs.false127
  %63 = load i32, i32* %n_files, align 4, !dbg !2211
  %cmp130 = icmp sle i32 2, %63, !dbg !2214
  br i1 %cmp130, label %land.lhs.true131, label %if.else138, !dbg !2215

land.lhs.true131:                                 ; preds = %if.then129
  %64 = load i8**, i8*** %file, align 8, !dbg !2216
  %65 = load i32, i32* %n_files, align 4, !dbg !2217
  %sub132 = sub nsw i32 %65, 1, !dbg !2218
  %idxprom = sext i32 %sub132 to i64, !dbg !2216
  %arrayidx133 = getelementptr inbounds i8*, i8** %64, i64 %idxprom, !dbg !2216, !ctir !209
  %66 = load i8*, i8** %arrayidx133, align 8, !dbg !2216
  %call134 = call zeroext i1 @target_directory_operand(i8* %66), !dbg !2219
  br i1 %call134, label %if.then135, label %if.else138, !dbg !2220

if.then135:                                       ; preds = %land.lhs.true131
  %67 = load i8**, i8*** %file, align 8, !dbg !2221
  %68 = load i32, i32* %n_files, align 4, !dbg !2222
  %dec = add nsw i32 %68, -1, !dbg !2222
  store i32 %dec, i32* %n_files, align 4, !dbg !2222
  %idxprom136 = sext i32 %dec to i64, !dbg !2221
  %arrayidx137 = getelementptr inbounds i8*, i8** %67, i64 %idxprom136, !dbg !2221, !ctir !209
  %69 = load i8*, i8** %arrayidx137, align 8, !dbg !2221
  store i8* %69, i8** %target_directory, align 8, !dbg !2223
  br label %if.end147, !dbg !2224

if.else138:                                       ; preds = %land.lhs.true131, %if.then129
  %70 = load i32, i32* %n_files, align 4, !dbg !2225
  %cmp139 = icmp slt i32 2, %70, !dbg !2227
  br i1 %cmp139, label %if.then140, label %if.end146, !dbg !2228

if.then140:                                       ; preds = %if.else138
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2229
  %71 = load i8**, i8*** %file, align 8, !dbg !2229
  %72 = load i32, i32* %n_files, align 4, !dbg !2229
  %sub142 = sub nsw i32 %72, 1, !dbg !2229
  %idxprom143 = sext i32 %sub142 to i64, !dbg !2229
  %arrayidx144 = getelementptr inbounds i8*, i8** %71, i64 %idxprom143, !dbg !2229, !ctir !209
  %73 = load i8*, i8** %arrayidx144, align 8, !dbg !2229
  %call145 = call i8* @quotearg_style(i32 4, i8* %73), !dbg !2229
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call141, i8* %call145), !dbg !2229
  unreachable, !dbg !2229

if.end146:                                        ; preds = %if.else138
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then135
  br label %if.end148, !dbg !2230

if.end148:                                        ; preds = %if.end147, %lor.lhs.false127, %if.else125
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end124
  %74 = load i8*, i8** %specified_mode, align 8, !dbg !2231
  %tobool150 = icmp ne i8* %74, null, !dbg !2231
  br i1 %tobool150, label %if.then151, label %if.end160, !dbg !2233

if.then151:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !2234, metadata !DIExpression()), !dbg !2236
  %75 = load i8*, i8** %specified_mode, align 8, !dbg !2237
  %call152 = call %struct.mode_change* @mode_compile(i8* %75), !dbg !2238
  store %struct.mode_change* %call152, %struct.mode_change** %change, align 8, !dbg !2236
  %76 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2239
  %tobool153 = icmp ne %struct.mode_change* %76, null, !dbg !2239
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !2241

if.then154:                                       ; preds = %if.then151
  %call155 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !2242
  %77 = load i8*, i8** %specified_mode, align 8, !dbg !2242
  %call156 = call i8* @quote(i8* %77), !dbg !2242
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call155, i8* %call156), !dbg !2242
  unreachable, !dbg !2242

if.end157:                                        ; preds = %if.then151
  %78 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2243
  %call158 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %78, i32* null), !dbg !2244
  store i32 %call158, i32* @mode, align 4, !dbg !2245
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2246
  %call159 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %79, i32* @dir_mode_bits), !dbg !2247
  store i32 %call159, i32* @dir_mode, align 4, !dbg !2248
  %80 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !2249
  %81 = bitcast %struct.mode_change* %80 to i8*, !dbg !2249
  call void @free(i8* %81) #9, !dbg !2250
  br label %if.end160, !dbg !2251

if.end160:                                        ; preds = %if.end157, %if.end149
  %82 = load i8, i8* %strip_program_specified, align 1, !dbg !2252
  %tobool161 = trunc i8 %82 to i1, !dbg !2252
  br i1 %tobool161, label %land.lhs.true162, label %if.end166, !dbg !2254

land.lhs.true162:                                 ; preds = %if.end160
  %83 = load i8, i8* @strip_files, align 1, !dbg !2255
  %tobool163 = trunc i8 %83 to i1, !dbg !2255
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !2256

if.then164:                                       ; preds = %land.lhs.true162
  %call165 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !2257
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call165), !dbg !2258
  br label %if.end166, !dbg !2258

if.end166:                                        ; preds = %if.then164, %land.lhs.true162, %if.end160
  %84 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2259
  %tobool167 = trunc i8 %84 to i1, !dbg !2259
  br i1 %tobool167, label %land.lhs.true168, label %if.end173, !dbg !2261

land.lhs.true168:                                 ; preds = %if.end166
  %preserve_timestamps169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2262, !ctir !132
  %85 = load i8, i8* %preserve_timestamps169, align 1, !dbg !2262
  %tobool170 = trunc i8 %85 to i1, !dbg !2262, !ctir !142
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !2263

if.then171:                                       ; preds = %land.lhs.true168
  %call172 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !2264
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call172), !dbg !2266
  call void @usage(i32 1) #15, !dbg !2267
  unreachable, !dbg !2267

if.end173:                                        ; preds = %land.lhs.true168, %if.end166
  %86 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2268
  %tobool174 = trunc i8 %86 to i1, !dbg !2268
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !2270

land.lhs.true175:                                 ; preds = %if.end173
  %87 = load i8, i8* @strip_files, align 1, !dbg !2271
  %tobool176 = trunc i8 %87 to i1, !dbg !2271
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !2272

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !2273
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call178), !dbg !2275
  call void @usage(i32 1) #15, !dbg !2276
  unreachable, !dbg !2276

if.end179:                                        ; preds = %land.lhs.true175, %if.end173
  %88 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2277
  %tobool180 = trunc i8 %88 to i1, !dbg !2277
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !2279

land.lhs.true181:                                 ; preds = %if.end179
  %89 = load i32, i32* @mode, align 4, !dbg !2280
  %call182 = call zeroext i1 @extra_mode(i32 %89), !dbg !2281
  br i1 %call182, label %if.then183, label %if.end185, !dbg !2282

if.then183:                                       ; preds = %land.lhs.true181
  %call184 = call i8* @gettext(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !2283
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call184), !dbg !2284
  br label %if.end185, !dbg !2284

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %if.end179
  call void @get_ids(), !dbg !2285
  %90 = load i8, i8* @dir_arg, align 1, !dbg !2286
  %tobool186 = trunc i8 %90 to i1, !dbg !2286
  br i1 %tobool186, label %if.then187, label %if.else189, !dbg !2288

if.then187:                                       ; preds = %if.end185
  %91 = load i32, i32* %n_files, align 4, !dbg !2289
  %92 = load i8**, i8*** %file, align 8, !dbg !2290
  %93 = bitcast %struct.cp_options* %x to i8*, !dbg !2291
  %call188 = call i32 @savewd_process_files(i32 %91, i8** %92, i32 (i8*, %struct.savewd*, i8*)* @process_dir, i8* %93), !dbg !2292
  store i32 %call188, i32* %exit_status, align 4, !dbg !2293
  br label %if.end213, !dbg !2294

if.else189:                                       ; preds = %if.end185
  call void @hash_init(), !dbg !2295
  %94 = load i8*, i8** %target_directory, align 8, !dbg !2297
  %tobool190 = icmp ne i8* %94, null, !dbg !2297
  br i1 %tobool190, label %if.else203, label %if.then191, !dbg !2299

if.then191:                                       ; preds = %if.else189
  %95 = load i8, i8* %mkdir_and_install, align 1, !dbg !2300
  %tobool192 = trunc i8 %95 to i1, !dbg !2300
  br i1 %tobool192, label %cond.true193, label %cond.false197, !dbg !2303

cond.true193:                                     ; preds = %if.then191
  %96 = load i8**, i8*** %file, align 8, !dbg !2304
  %arrayidx194 = getelementptr inbounds i8*, i8** %96, i64 0, !dbg !2304, !ctir !209
  %97 = load i8*, i8** %arrayidx194, align 8, !dbg !2304
  %98 = load i8**, i8*** %file, align 8, !dbg !2305
  %arrayidx195 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !2305, !ctir !209
  %99 = load i8*, i8** %arrayidx195, align 8, !dbg !2305
  %call196 = call zeroext i1 @install_file_in_file_parents(i8* %97, i8* %99, %struct.cp_options* %x), !dbg !2306
  br i1 %call196, label %if.end202, label %if.then201, !dbg !2300

cond.false197:                                    ; preds = %if.then191
  %100 = load i8**, i8*** %file, align 8, !dbg !2307
  %arrayidx198 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !2307, !ctir !209
  %101 = load i8*, i8** %arrayidx198, align 8, !dbg !2307
  %102 = load i8**, i8*** %file, align 8, !dbg !2308
  %arrayidx199 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !2308, !ctir !209
  %103 = load i8*, i8** %arrayidx199, align 8, !dbg !2308
  %call200 = call zeroext i1 @install_file_in_file(i8* %101, i8* %103, %struct.cp_options* %x), !dbg !2309
  br i1 %call200, label %if.end202, label %if.then201, !dbg !2303

if.then201:                                       ; preds = %cond.false197, %cond.true193
  store i32 1, i32* %exit_status, align 4, !dbg !2310
  br label %if.end202, !dbg !2311

if.end202:                                        ; preds = %if.then201, %cond.false197, %cond.true193
  br label %if.end212, !dbg !2312

if.else203:                                       ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2313, metadata !DIExpression()), !dbg !2315
  call void @dest_info_init(%struct.cp_options* %x), !dbg !2316
  store i32 0, i32* %i, align 4, !dbg !2317
  br label %for.cond, !dbg !2319

for.cond:                                         ; preds = %for.inc, %if.else203
  %104 = load i32, i32* %i, align 4, !dbg !2320
  %105 = load i32, i32* %n_files, align 4, !dbg !2322
  %cmp204 = icmp slt i32 %104, %105, !dbg !2323
  br i1 %cmp204, label %for.body, label %for.end, !dbg !2324

for.body:                                         ; preds = %for.cond
  %106 = load i8**, i8*** %file, align 8, !dbg !2325
  %107 = load i32, i32* %i, align 4, !dbg !2327
  %idxprom205 = sext i32 %107 to i64, !dbg !2325
  %arrayidx206 = getelementptr inbounds i8*, i8** %106, i64 %idxprom205, !dbg !2325, !ctir !209
  %108 = load i8*, i8** %arrayidx206, align 8, !dbg !2325
  %109 = load i8*, i8** %target_directory, align 8, !dbg !2328
  %110 = load i32, i32* %i, align 4, !dbg !2329
  %cmp207 = icmp eq i32 %110, 0, !dbg !2330
  br i1 %cmp207, label %land.rhs, label %land.end, !dbg !2331

land.rhs:                                         ; preds = %for.body
  %111 = load i8, i8* %mkdir_and_install, align 1, !dbg !2332
  %tobool208 = trunc i8 %111 to i1, !dbg !2332
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %112 = phi i1 [ false, %for.body ], [ %tobool208, %land.rhs ], !dbg !2333
  %call209 = call zeroext i1 @install_file_in_dir(i8* %108, i8* %109, %struct.cp_options* %x, i1 zeroext %112), !dbg !2334
  br i1 %call209, label %if.end211, label %if.then210, !dbg !2335

if.then210:                                       ; preds = %land.end
  store i32 1, i32* %exit_status, align 4, !dbg !2336
  br label %if.end211, !dbg !2337

if.end211:                                        ; preds = %if.then210, %land.end
  br label %for.inc, !dbg !2338

for.inc:                                          ; preds = %if.end211
  %113 = load i32, i32* %i, align 4, !dbg !2339
  %inc = add nsw i32 %113, 1, !dbg !2339
  store i32 %inc, i32* %i, align 4, !dbg !2339
  br label %for.cond, !dbg !2340, !llvm.loop !2341

for.end:                                          ; preds = %for.cond
  br label %if.end212

if.end212:                                        ; preds = %for.end, %if.end202
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then187
  %114 = load i32, i32* %exit_status, align 4, !dbg !2343
  ret i32 %114, !dbg !2344
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !2345 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2348, metadata !DIExpression()), !dbg !2349
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2350
  call void @cp_options_default(%struct.cp_options* %0), !dbg !2351
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2352
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !2353, !ctir !132
  store i8 1, i8* %copy_as_regular, align 4, !dbg !2354, !ctir !142
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2355
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !2356, !ctir !132
  store i32 0, i32* %reflink_mode, align 8, !dbg !2357, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2358
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !2359, !ctir !132
  store i32 4, i32* %dereference, align 4, !dbg !2360, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2361
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !2362, !ctir !132
  store i8 1, i8* %unlink_dest_before_opening, align 1, !dbg !2363, !ctir !142
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2364
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !2365, !ctir !132
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !2366, !ctir !142
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2367
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !2368, !ctir !132
  store i8 0, i8* %hard_link, align 1, !dbg !2369, !ctir !142
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2370
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !2371, !ctir !132
  store i32 4, i32* %interactive, align 8, !dbg !2372, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2373
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !2374, !ctir !132
  store i8 0, i8* %move_mode, align 8, !dbg !2375, !ctir !142
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2376
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !2377, !ctir !132
  store i8 1, i8* %install_mode, align 1, !dbg !2378, !ctir !142
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2379
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !2380, !ctir !132
  store i8 0, i8* %one_file_system, align 4, !dbg !2381, !ctir !142
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2382
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !2383, !ctir !132
  store i8 0, i8* %preserve_ownership, align 1, !dbg !2384, !ctir !142
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2385
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !2386, !ctir !132
  store i8 0, i8* %preserve_links, align 2, !dbg !2387, !ctir !142
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2388
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !2389, !ctir !132
  store i8 0, i8* %preserve_mode, align 2, !dbg !2390, !ctir !142
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2391
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !2392, !ctir !132
  store i8 0, i8* %preserve_timestamps, align 1, !dbg !2393, !ctir !142
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2394
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !2395, !ctir !132
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !2396, !ctir !142
  %16 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2397
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 26, !dbg !2398, !ctir !132
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !2399, !ctir !142
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2400
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 20, !dbg !2401, !ctir !132
  store i8 1, i8* %data_copy_required, align 1, !dbg !2402, !ctir !142
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2403
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 21, !dbg !2404, !ctir !132
  store i8 0, i8* %require_preserve, align 4, !dbg !2405, !ctir !142
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2406
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 25, !dbg !2407, !ctir !132
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !2408, !ctir !142
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2409
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 27, !dbg !2410, !ctir !132
  store i8 0, i8* %recursive, align 2, !dbg !2411, !ctir !142
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2412
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !2413, !ctir !132
  store i32 2, i32* %sparse_mode, align 4, !dbg !2414, !ctir !89
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2415
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 29, !dbg !2416, !ctir !132
  store i8 0, i8* %symbolic_link, align 4, !dbg !2417, !ctir !142
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2418
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 0, !dbg !2419, !ctir !132
  store i32 0, i32* %backup_type, align 8, !dbg !2420, !ctir !68
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2421
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 28, !dbg !2422, !ctir !132
  store i8 1, i8* %set_mode, align 1, !dbg !2423, !ctir !142
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2424
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 4, !dbg !2425, !ctir !132
  store i32 384, i32* %mode, align 8, !dbg !2426, !ctir !139
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2427
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 32, !dbg !2428, !ctir !132
  store i8 0, i8* %stdin_tty, align 1, !dbg !2429, !ctir !142
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2430
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 33, !dbg !2431, !ctir !132
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !2432, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2433
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 30, !dbg !2434, !ctir !132
  store i8 0, i8* %update, align 1, !dbg !2435, !ctir !142
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2436
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 23, !dbg !2437, !ctir !132
  store i8 0, i8* %require_preserve_context, align 2, !dbg !2438, !ctir !142
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2439
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 22, !dbg !2440, !ctir !132
  store i8 0, i8* %preserve_security_context, align 1, !dbg !2441, !ctir !142
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2442
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 18, !dbg !2443, !ctir !132
  store i8 0, i8* %set_security_context, align 1, !dbg !2444, !ctir !142
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2445
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 24, !dbg !2446, !ctir !132
  store i8 0, i8* %preserve_xattr, align 1, !dbg !2447, !ctir !142
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2448
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !2449, !ctir !132
  store i8 0, i8* %verbose, align 2, !dbg !2450, !ctir !142
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2451
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !2452, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !2453, !ctir !175
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2454
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !2455, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !2456, !ctir !175
  ret void, !dbg !2457
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %sctx) #4 !dbg !2458 {
entry:
  %sctx.addr = alloca i8*, align 8
  store i8* %sctx, i8** %sctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sctx.addr, metadata !2461, metadata !DIExpression()), !dbg !2462
  %0 = load i8*, i8** %sctx.addr, align 8, !dbg !2463
  ret i8* %0, !dbg !2464
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !2465 {
entry:
  %file.addr = alloca i8*, align 8
  %b = alloca i8*, align 8, !ctir !183
  %blen = alloca i64, align 8, !ctir !55
  %looks_like_a_dir = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !1939
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !142
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !2468, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata i8** %b, metadata !2470, metadata !DIExpression()), !dbg !2471
  %0 = load i8*, i8** %file.addr, align 8, !dbg !2472
  %call = call i8* @last_component(i8* %0) #14, !dbg !2473
  store i8* %call, i8** %b, align 8, !dbg !2471
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !2474, metadata !DIExpression()), !dbg !2475
  %1 = load i8*, i8** %b, align 8, !dbg !2476
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !2477
  store i64 %call1, i64* %blen, align 8, !dbg !2475
  call void @llvm.dbg.declare(metadata i8* %looks_like_a_dir, metadata !2478, metadata !DIExpression()), !dbg !2479
  %2 = load i64, i64* %blen, align 8, !dbg !2480
  %cmp = icmp eq i64 %2, 0, !dbg !2481
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2482

lor.rhs:                                          ; preds = %entry
  %3 = load i8*, i8** %b, align 8, !dbg !2483
  %4 = load i64, i64* %blen, align 8, !dbg !2483
  %sub = sub i64 %4, 1, !dbg !2483
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !2483, !ctir !183
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2483
  %conv = sext i8 %5 to i32, !dbg !2483
  %cmp2 = icmp eq i32 %conv, 47, !dbg !2483
  br label %lor.end, !dbg !2482

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !2479
  store i8 %frombool, i8* %looks_like_a_dir, align 1, !dbg !2479
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2484, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2486, metadata !DIExpression()), !dbg !2487
  %7 = load i8*, i8** %file.addr, align 8, !dbg !2488
  %call4 = call i32 @stat(i8* %7, %struct.stat* %st) #9, !dbg !2489
  %cmp5 = icmp eq i32 %call4, 0, !dbg !2490
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !2489

cond.true:                                        ; preds = %lor.end
  br label %cond.end, !dbg !2489

cond.false:                                       ; preds = %lor.end
  %call7 = call i32* @__errno_location() #16, !dbg !2491
  %8 = load i32, i32* %call7, align 4, !dbg !2491, !ctir !7
  br label %cond.end, !dbg !2489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ], !dbg !2489
  store i32 %cond, i32* %err, align 4, !dbg !2487
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !2492, metadata !DIExpression()), !dbg !2493
  %9 = load i32, i32* %err, align 4, !dbg !2494
  %tobool = icmp ne i32 %9, 0, !dbg !2494
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2495

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2496, !ctir !1939
  %10 = load i32, i32* %st_mode, align 8, !dbg !2496, !ctir !140
  %and = and i32 %10, 61440, !dbg !2496
  %cmp8 = icmp eq i32 %and, 16384, !dbg !2496
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp8, %land.rhs ], !dbg !2497
  %frombool10 = zext i1 %11 to i8, !dbg !2493
  store i8 %frombool10, i8* %is_a_dir, align 1, !dbg !2493
  %12 = load i32, i32* %err, align 4, !dbg !2498
  %tobool11 = icmp ne i32 %12, 0, !dbg !2498
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !2500

land.lhs.true:                                    ; preds = %land.end
  %13 = load i32, i32* %err, align 4, !dbg !2501
  %cmp12 = icmp ne i32 %13, 2, !dbg !2502
  br i1 %cmp12, label %if.then, label %if.end, !dbg !2503

if.then:                                          ; preds = %land.lhs.true
  %14 = load i32, i32* %err, align 4, !dbg !2504
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2504
  %15 = load i8*, i8** %file.addr, align 8, !dbg !2504
  %call15 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !2504
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %14, i8* %call14, i8* %call15), !dbg !2504
  unreachable, !dbg !2504

if.end:                                           ; preds = %land.lhs.true, %land.end
  %16 = load i8, i8* %is_a_dir, align 1, !dbg !2505
  %tobool16 = trunc i8 %16 to i1, !dbg !2505
  %conv17 = zext i1 %tobool16 to i32, !dbg !2505
  %17 = load i8, i8* %looks_like_a_dir, align 1, !dbg !2507
  %tobool18 = trunc i8 %17 to i1, !dbg !2507
  %conv19 = zext i1 %tobool18 to i32, !dbg !2507
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !2508
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !2509

if.then22:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !2510
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2510
  %19 = load i8*, i8** %file.addr, align 8, !dbg !2510
  %call24 = call i8* @quotearg_style(i32 4, i8* %19), !dbg !2510
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %18, i8* %call23, i8* %call24), !dbg !2510
  unreachable, !dbg !2510

if.end25:                                         ; preds = %if.end
  %20 = load i8, i8* %is_a_dir, align 1, !dbg !2511
  %tobool26 = trunc i8 %20 to i1, !dbg !2511
  ret i1 %tobool26, !dbg !2512
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extra_mode(i32 %input) #4 !dbg !2513 {
entry:
  %input.addr = alloca i32, align 4
  %mask = alloca i32, align 4, !ctir !139
  store i32 %input, i32* %input.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !2516, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !2518, metadata !DIExpression()), !dbg !2519
  store i32 61951, i32* %mask, align 4, !dbg !2519
  %0 = load i32, i32* %input.addr, align 4, !dbg !2520
  %1 = load i32, i32* %mask, align 4, !dbg !2521
  %neg = xor i32 %1, -1, !dbg !2522
  %and = and i32 %0, %neg, !dbg !2523
  %tobool = icmp ne i32 %and, 0, !dbg !2524
  %lnot = xor i1 %tobool, true, !dbg !2524
  %lnot1 = xor i1 %lnot, true, !dbg !2525
  ret i1 %lnot1, !dbg !2526
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_ids() #4 !dbg !2527 {
entry:
  %pw = alloca %struct.passwd*, align 8, !ctir !323
  %gr = alloca %struct.group*, align 8, !ctir !334
  %tmp = alloca i64, align 8, !ctir !57
  %tmp17 = alloca i64, align 8, !ctir !57
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !2528, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.declare(metadata %struct.group** %gr, metadata !2530, metadata !DIExpression()), !dbg !2531
  %0 = load i8*, i8** @owner_name, align 8, !dbg !2532
  %tobool = icmp ne i8* %0, null, !dbg !2532
  br i1 %tobool, label %if.then, label %if.else9, !dbg !2534

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @owner_name, align 8, !dbg !2535
  %call = call %struct.passwd* @getpwnam(i8* %1), !dbg !2537
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !2538
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2539
  %cmp = icmp eq %struct.passwd* %2, null, !dbg !2541
  br i1 %cmp, label %if.then1, label %if.else, !dbg !2542

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !2543, metadata !DIExpression()), !dbg !2545
  %3 = load i8*, i8** @owner_name, align 8, !dbg !2546
  %call2 = call i32 @xstrtoul(i8* %3, i8** null, i32 0, i64* %tmp, i8* null), !dbg !2548
  %cmp3 = icmp ne i32 %call2, 0, !dbg !2549
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !2550

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i64, i64* %tmp, align 8, !dbg !2551
  %cmp4 = icmp ult i64 4294967295, %4, !dbg !2552
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2553

if.then5:                                         ; preds = %lor.lhs.false, %if.then1
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !2554
  %5 = load i8*, i8** @owner_name, align 8, !dbg !2554
  %call7 = call i8* @quote(i8* %5), !dbg !2554
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call6, i8* %call7), !dbg !2554
  unreachable, !dbg !2554

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %tmp, align 8, !dbg !2555
  %conv = trunc i64 %6 to i32, !dbg !2555
  store i32 %conv, i32* @owner_id, align 4, !dbg !2556
  br label %if.end8, !dbg !2557

if.else:                                          ; preds = %if.then
  %7 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2558
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 2, !dbg !2559, !ctir !324
  %8 = load i32, i32* %pw_uid, align 8, !dbg !2559, !ctir !128
  store i32 %8, i32* @owner_id, align 4, !dbg !2560
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  call void @endpwent(), !dbg !2561
  br label %if.end10, !dbg !2562

if.else9:                                         ; preds = %entry
  store i32 -1, i32* @owner_id, align 4, !dbg !2563
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  %9 = load i8*, i8** @group_name, align 8, !dbg !2564
  %tobool11 = icmp ne i8* %9, null, !dbg !2564
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !2566

if.then12:                                        ; preds = %if.end10
  %10 = load i8*, i8** @group_name, align 8, !dbg !2567
  %call13 = call %struct.group* @getgrnam(i8* %10), !dbg !2569
  store %struct.group* %call13, %struct.group** %gr, align 8, !dbg !2570
  %11 = load %struct.group*, %struct.group** %gr, align 8, !dbg !2571
  %cmp14 = icmp eq %struct.group* %11, null, !dbg !2573
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !2574

if.then16:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i64* %tmp17, metadata !2575, metadata !DIExpression()), !dbg !2577
  %12 = load i8*, i8** @group_name, align 8, !dbg !2578
  %call18 = call i32 @xstrtoul(i8* %12, i8** null, i32 0, i64* %tmp17, i8* null), !dbg !2580
  %cmp19 = icmp ne i32 %call18, 0, !dbg !2581
  br i1 %cmp19, label %if.then24, label %lor.lhs.false21, !dbg !2582

lor.lhs.false21:                                  ; preds = %if.then16
  %13 = load i64, i64* %tmp17, align 8, !dbg !2583
  %cmp22 = icmp ult i64 4294967295, %13, !dbg !2584
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !2585

if.then24:                                        ; preds = %lor.lhs.false21, %if.then16
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !2586
  %14 = load i8*, i8** @group_name, align 8, !dbg !2586
  %call26 = call i8* @quote(i8* %14), !dbg !2586
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !2586
  unreachable, !dbg !2586

if.end27:                                         ; preds = %lor.lhs.false21
  %15 = load i64, i64* %tmp17, align 8, !dbg !2587
  %conv28 = trunc i64 %15 to i32, !dbg !2587
  store i32 %conv28, i32* @group_id, align 4, !dbg !2588
  br label %if.end30, !dbg !2589

if.else29:                                        ; preds = %if.then12
  %16 = load %struct.group*, %struct.group** %gr, align 8, !dbg !2590
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %16, i32 0, i32 2, !dbg !2591, !ctir !335
  %17 = load i32, i32* %gr_gid, align 8, !dbg !2591, !ctir !130
  store i32 %17, i32* @group_id, align 4, !dbg !2592
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  call void @endgrent(), !dbg !2593
  br label %if.end32, !dbg !2594

if.else31:                                        ; preds = %if.end10
  store i32 -1, i32* @group_id, align 4, !dbg !2595
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  ret void, !dbg !2596
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_dir(i8* %dir, %struct.savewd* %wd, i8* %options) #4 !dbg !2597 {
entry:
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !342
  %ret = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2601, metadata !DIExpression()), !dbg !2602
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !2603, metadata !DIExpression()), !dbg !2604
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2605, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2607, metadata !DIExpression()), !dbg !2608
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2609
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2609
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2608
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2610, metadata !DIExpression()), !dbg !2611
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !2612
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !2613
  %4 = load i8*, i8** %options.addr, align 8, !dbg !2614
  %5 = load i32, i32* @dir_mode, align 4, !dbg !2615
  %6 = load i32, i32* @dir_mode_bits, align 4, !dbg !2616
  %7 = load i32, i32* @owner_id, align 4, !dbg !2617
  %8 = load i32, i32* @group_id, align 4, !dbg !2618
  %call = call zeroext i1 @make_dir_parents(i8* %2, %struct.savewd* %3, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %4, i32 %5, void (i8*, i8*)* @announce_mkdir, i32 %6, i32 %7, i32 %8, i1 zeroext false), !dbg !2619
  %9 = zext i1 %call to i64, !dbg !2619
  %cond = select i1 %call, i32 0, i32 1, !dbg !2619
  store i32 %cond, i32* %ret, align 4, !dbg !2611
  %10 = load i32, i32* %ret, align 4, !dbg !2620
  %cmp = icmp eq i32 %10, 0, !dbg !2622
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !2623

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2624
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !2625, !ctir !343
  %12 = load i8, i8* %set_security_context, align 1, !dbg !2625
  %tobool = trunc i8 %12 to i1, !dbg !2625, !ctir !142
  br i1 %tobool, label %if.then, label %if.end10, !dbg !2626

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %dir.addr, align 8, !dbg !2627
  %call1 = call i8* @last_component(i8* %13) #14, !dbg !2630
  %call2 = call zeroext i1 @restorecon(i8* %call1, i1 zeroext false, i1 zeroext false), !dbg !2631
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !2632

land.lhs.true3:                                   ; preds = %if.then
  %call4 = call i32* @__errno_location() #16, !dbg !2633
  %14 = load i32, i32* %call4, align 4, !dbg !2633, !ctir !7
  %call5 = call zeroext i1 @ignorable_ctx_err(i32 %14), !dbg !2634
  br i1 %call5, label %if.end, label %if.then6, !dbg !2635

if.then6:                                         ; preds = %land.lhs.true3
  %call7 = call i32* @__errno_location() #16, !dbg !2636
  %15 = load i32, i32* %call7, align 4, !dbg !2636, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !2637
  %16 = load i8*, i8** %dir.addr, align 8, !dbg !2638
  %call9 = call i8* @quotearg_style(i32 4, i8* %16), !dbg !2638
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call8, i8* %call9), !dbg !2639
  br label %if.end, !dbg !2639

if.end:                                           ; preds = %if.then6, %land.lhs.true3, %if.then
  br label %if.end10, !dbg !2640

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !2641
  ret i32 %17, !dbg !2642
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file_parents(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2643 {
entry:
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2646, metadata !DIExpression()), !dbg !2647
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2648, metadata !DIExpression()), !dbg !2649
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2650, metadata !DIExpression()), !dbg !2651
  %0 = load i8*, i8** %from.addr, align 8, !dbg !2652
  %1 = load i8*, i8** %to.addr, align 8, !dbg !2653
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2654
  %call = call zeroext i1 @mkancesdirs_safe_wd(i8* %0, i8* %1, %struct.cp_options* %2, i1 zeroext false), !dbg !2655
  br i1 %call, label %land.rhs, label %land.end, !dbg !2656

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %from.addr, align 8, !dbg !2657
  %4 = load i8*, i8** %to.addr, align 8, !dbg !2658
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2659
  %call1 = call zeroext i1 @install_file_in_file(i8* %3, i8* %4, %struct.cp_options* %5), !dbg !2660
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %call1, %land.rhs ], !dbg !2661
  ret i1 %6, !dbg !2662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2663 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %from_sb = alloca %struct.stat, align 8, !ctir !1939
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2666, metadata !DIExpression()), !dbg !2667
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2668, metadata !DIExpression()), !dbg !2669
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata %struct.stat* %from_sb, metadata !2672, metadata !DIExpression()), !dbg !2673
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2674
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 16, !dbg !2676, !ctir !343
  %1 = load i8, i8* %preserve_timestamps, align 1, !dbg !2676
  %tobool = trunc i8 %1 to i1, !dbg !2676, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2677

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %from.addr, align 8, !dbg !2678
  %call = call i32 @stat(i8* %2, %struct.stat* %from_sb) #9, !dbg !2679
  %cmp = icmp ne i32 %call, 0, !dbg !2680
  br i1 %cmp, label %if.then, label %if.end, !dbg !2681

if.then:                                          ; preds = %land.lhs.true
  %call1 = call i32* @__errno_location() #16, !dbg !2682
  %3 = load i32, i32* %call1, align 4, !dbg !2682, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !2684
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2685
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !2685
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !2686
  store i1 false, i1* %retval, align 1, !dbg !2687
  br label %return, !dbg !2687

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %from.addr, align 8, !dbg !2688
  %6 = load i8*, i8** %to.addr, align 8, !dbg !2690
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2691
  %call4 = call zeroext i1 @copy_file(i8* %5, i8* %6, %struct.cp_options* %7), !dbg !2692
  br i1 %call4, label %if.end6, label %if.then5, !dbg !2693

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !2694
  br label %return, !dbg !2694

if.end6:                                          ; preds = %if.end
  %8 = load i8, i8* @strip_files, align 1, !dbg !2695
  %tobool7 = trunc i8 %8 to i1, !dbg !2695
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !2697

if.then8:                                         ; preds = %if.end6
  %9 = load i8*, i8** %to.addr, align 8, !dbg !2698
  %call9 = call zeroext i1 @strip(i8* %9), !dbg !2700
  br i1 %call9, label %if.end18, label %if.then10, !dbg !2701

if.then10:                                        ; preds = %if.then8
  %10 = load i8*, i8** %to.addr, align 8, !dbg !2702
  %call11 = call i32 @unlink(i8* %10) #9, !dbg !2705
  %cmp12 = icmp ne i32 %call11, 0, !dbg !2706
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !2707

if.then13:                                        ; preds = %if.then10
  %call14 = call i32* @__errno_location() #16, !dbg !2708
  %11 = load i32, i32* %call14, align 4, !dbg !2708, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !2708
  %12 = load i8*, i8** %to.addr, align 8, !dbg !2708
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !2708
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call15, i8* %call16), !dbg !2708
  unreachable, !dbg !2708

if.end17:                                         ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !2709
  br label %return, !dbg !2709

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !2710

if.end19:                                         ; preds = %if.end18, %if.end6
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2711
  %preserve_timestamps20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 16, !dbg !2713, !ctir !343
  %14 = load i8, i8* %preserve_timestamps20, align 1, !dbg !2713
  %tobool21 = trunc i8 %14 to i1, !dbg !2713, !ctir !142
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !2714

land.lhs.true22:                                  ; preds = %if.end19
  %15 = load i8, i8* @strip_files, align 1, !dbg !2715
  %tobool23 = trunc i8 %15 to i1, !dbg !2715
  br i1 %tobool23, label %land.lhs.true25, label %lor.lhs.false, !dbg !2716

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %from_sb, i32 0, i32 3, !dbg !2717, !ctir !1939
  %16 = load i32, i32* %st_mode, align 8, !dbg !2717, !ctir !140
  %and = and i32 %16, 61440, !dbg !2717
  %cmp24 = icmp eq i32 %and, 32768, !dbg !2717
  br i1 %cmp24, label %if.end28, label %land.lhs.true25, !dbg !2718

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true22
  %17 = load i8*, i8** %to.addr, align 8, !dbg !2719
  %call26 = call zeroext i1 @change_timestamps(%struct.stat* %from_sb, i8* %17), !dbg !2720
  br i1 %call26, label %if.end28, label %if.then27, !dbg !2721

if.then27:                                        ; preds = %land.lhs.true25
  store i1 false, i1* %retval, align 1, !dbg !2722
  br label %return, !dbg !2722

if.end28:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end19
  %18 = load i8*, i8** %to.addr, align 8, !dbg !2723
  %call29 = call zeroext i1 @change_attributes(i8* %18), !dbg !2724
  store i1 %call29, i1* %retval, align 1, !dbg !2725
  br label %return, !dbg !2725

return:                                           ; preds = %if.end28, %if.then27, %if.end17, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !2726
  ret i1 %19, !dbg !2726
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_dir(i8* %from, i8* %to_dir, %struct.cp_options* %x, i1 zeroext %mkdir_and_install) #4 !dbg !2727 {
entry:
  %from.addr = alloca i8*, align 8
  %to_dir.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %mkdir_and_install.addr = alloca i8, align 1
  %from_base = alloca i8*, align 8, !ctir !183
  %to = alloca i8*, align 8, !ctir !9
  %ret = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2730, metadata !DIExpression()), !dbg !2731
  store i8* %to_dir, i8** %to_dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to_dir.addr, metadata !2732, metadata !DIExpression()), !dbg !2733
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2734, metadata !DIExpression()), !dbg !2735
  %frombool = zext i1 %mkdir_and_install to i8
  store i8 %frombool, i8* %mkdir_and_install.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install.addr, metadata !2736, metadata !DIExpression()), !dbg !2737
  call void @llvm.dbg.declare(metadata i8** %from_base, metadata !2738, metadata !DIExpression()), !dbg !2739
  %0 = load i8*, i8** %from.addr, align 8, !dbg !2740
  %call = call i8* @last_component(i8* %0) #14, !dbg !2741
  store i8* %call, i8** %from_base, align 8, !dbg !2739
  call void @llvm.dbg.declare(metadata i8** %to, metadata !2742, metadata !DIExpression()), !dbg !2743
  %1 = load i8*, i8** %to_dir.addr, align 8, !dbg !2744
  %2 = load i8*, i8** %from_base, align 8, !dbg !2745
  %call1 = call i8* @file_name_concat(i8* %1, i8* %2, i8** null), !dbg !2746
  store i8* %call1, i8** %to, align 8, !dbg !2743
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !2747, metadata !DIExpression()), !dbg !2748
  store i8 1, i8* %ret, align 1, !dbg !2748
  %3 = load i8, i8* %mkdir_and_install.addr, align 1, !dbg !2749
  %tobool = trunc i8 %3 to i1, !dbg !2749
  br i1 %tobool, label %if.then, label %if.end, !dbg !2751

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2752
  %5 = load i8*, i8** %to, align 8, !dbg !2753
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2754
  %call2 = call zeroext i1 @mkancesdirs_safe_wd(i8* %4, i8* %5, %struct.cp_options* %6, i1 zeroext true), !dbg !2755
  %frombool3 = zext i1 %call2 to i8, !dbg !2756
  store i8 %frombool3, i8* %ret, align 1, !dbg !2756
  br label %if.end, !dbg !2757

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %ret, align 1, !dbg !2758
  %tobool4 = trunc i8 %7 to i1, !dbg !2758
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !2759

land.rhs:                                         ; preds = %if.end
  %8 = load i8*, i8** %from.addr, align 8, !dbg !2760
  %9 = load i8*, i8** %to, align 8, !dbg !2761
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2762
  %call5 = call zeroext i1 @install_file_in_file(i8* %8, i8* %9, %struct.cp_options* %10), !dbg !2763
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %call5, %land.rhs ], !dbg !2764
  %frombool6 = zext i1 %11 to i8, !dbg !2765
  store i8 %frombool6, i8* %ret, align 1, !dbg !2765
  %12 = load i8*, i8** %to, align 8, !dbg !2766
  call void @free(i8* %12) #9, !dbg !2767
  %13 = load i8, i8* %ret, align 1, !dbg !2768
  %tobool7 = trunc i8 %13 to i1, !dbg !2768
  ret i1 %tobool7, !dbg !2769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mkancesdirs_safe_wd(i8* %from, i8* %to, %struct.cp_options* %x, i1 zeroext %save_always) #4 !dbg !2770 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %save_always.addr = alloca i8, align 1
  %save_working_directory = alloca i8, align 1, !ctir !142
  %status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !102
  %restore_result = alloca i32, align 4, !ctir !7
  %restore_errno = alloca i32, align 4, !ctir !7
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2773, metadata !DIExpression()), !dbg !2774
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2775, metadata !DIExpression()), !dbg !2776
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2777, metadata !DIExpression()), !dbg !2778
  %frombool = zext i1 %save_always to i8
  store i8 %frombool, i8* %save_always.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %save_always.addr, metadata !2779, metadata !DIExpression()), !dbg !2780
  call void @llvm.dbg.declare(metadata i8* %save_working_directory, metadata !2781, metadata !DIExpression()), !dbg !2782
  %0 = load i8, i8* %save_always.addr, align 1, !dbg !2783
  %tobool = trunc i8 %0 to i1, !dbg !2783
  br i1 %tobool, label %lor.end7, label %lor.rhs, !dbg !2784

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !2785
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !2785, !ctir !183
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2785
  %conv = sext i8 %2 to i32, !dbg !2785
  %cmp = icmp eq i32 %conv, 47, !dbg !2785
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2786

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i8*, i8** %to.addr, align 8, !dbg !2787
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2787, !ctir !9
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !2787
  %conv3 = sext i8 %4 to i32, !dbg !2787
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !2787
  br i1 %cmp4, label %lor.end, label %lor.rhs6, !dbg !2787

lor.rhs6:                                         ; preds = %land.rhs
  br label %lor.end, !dbg !2787

lor.end:                                          ; preds = %lor.rhs6, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ false, %lor.rhs6 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %5, %lor.end ], !dbg !2788
  %lnot = xor i1 %6, true, !dbg !2789
  br label %lor.end7, !dbg !2784

lor.end7:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %lnot, %land.end ]
  %frombool8 = zext i1 %7 to i8, !dbg !2782
  store i8 %frombool8, i8* %save_working_directory, align 1, !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2790, metadata !DIExpression()), !dbg !2791
  store i32 0, i32* %status, align 4, !dbg !2791
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @savewd_init(%struct.savewd* %wd), !dbg !2794
  %8 = load i8, i8* %save_working_directory, align 1, !dbg !2795
  %tobool9 = trunc i8 %8 to i1, !dbg !2795
  br i1 %tobool9, label %if.end, label %if.then, !dbg !2797

if.then:                                          ; preds = %lor.end7
  call void @savewd_finish(%struct.savewd* %wd), !dbg !2798
  br label %if.end, !dbg !2798

if.end:                                           ; preds = %if.then, %lor.end7
  %9 = load i8*, i8** %to.addr, align 8, !dbg !2799
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2801
  %11 = bitcast %struct.cp_options* %10 to i8*, !dbg !2801
  %call = call i64 @mkancesdirs(i8* %9, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %11), !dbg !2802
  %cmp10 = icmp eq i64 %call, -1, !dbg !2803
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !2804

if.then12:                                        ; preds = %if.end
  %call13 = call i32* @__errno_location() #16, !dbg !2805
  %12 = load i32, i32* %call13, align 4, !dbg !2805, !ctir !7
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !2807
  %13 = load i8*, i8** %to.addr, align 8, !dbg !2808
  %call15 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !2808
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call14, i8* %call15), !dbg !2809
  store i32 1, i32* %status, align 4, !dbg !2810
  br label %if.end16, !dbg !2811

if.end16:                                         ; preds = %if.then12, %if.end
  %14 = load i8, i8* %save_working_directory, align 1, !dbg !2812
  %tobool17 = trunc i8 %14 to i1, !dbg !2812
  br i1 %tobool17, label %if.then18, label %if.end33, !dbg !2814

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %restore_result, metadata !2815, metadata !DIExpression()), !dbg !2817
  %15 = load i32, i32* %status, align 4, !dbg !2818
  %call19 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %15), !dbg !2819
  store i32 %call19, i32* %restore_result, align 4, !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %restore_errno, metadata !2820, metadata !DIExpression()), !dbg !2821
  %call20 = call i32* @__errno_location() #16, !dbg !2822
  %16 = load i32, i32* %call20, align 4, !dbg !2822, !ctir !7
  store i32 %16, i32* %restore_errno, align 4, !dbg !2821
  call void @savewd_finish(%struct.savewd* %wd), !dbg !2823
  %17 = load i32, i32* %restore_result, align 4, !dbg !2824
  %cmp21 = icmp slt i32 0, %17, !dbg !2826
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2827

if.then23:                                        ; preds = %if.then18
  store i1 false, i1* %retval, align 1, !dbg !2828
  br label %return, !dbg !2828

if.end24:                                         ; preds = %if.then18
  %18 = load i32, i32* %restore_result, align 4, !dbg !2829
  %cmp25 = icmp slt i32 %18, 0, !dbg !2831
  br i1 %cmp25, label %land.lhs.true, label %if.end32, !dbg !2832

land.lhs.true:                                    ; preds = %if.end24
  %19 = load i32, i32* %status, align 4, !dbg !2833
  %cmp27 = icmp eq i32 %19, 0, !dbg !2834
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !2835

if.then29:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %restore_errno, align 4, !dbg !2836
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !2838
  %21 = load i8*, i8** %to.addr, align 8, !dbg !2839
  %call31 = call i8* @quotearg_style(i32 4, i8* %21), !dbg !2839
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* %call30, i8* %call31), !dbg !2840
  store i1 false, i1* %retval, align 1, !dbg !2841
  br label %return, !dbg !2841

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  br label %if.end33, !dbg !2842

if.end33:                                         ; preds = %if.end32, %if.end16
  %22 = load i32, i32* %status, align 4, !dbg !2843
  %cmp34 = icmp eq i32 %22, 0, !dbg !2844
  store i1 %cmp34, i1* %retval, align 1, !dbg !2845
  br label %return, !dbg !2845

return:                                           ; preds = %if.end33, %if.then29, %if.then23
  %23 = load i1, i1* %retval, align 1, !dbg !2846
  ret i1 %23, !dbg !2846
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ancestor(i8* %dir, i8* %component, i8* %options) #4 !dbg !2847 {
entry:
  %dir.addr = alloca i8*, align 8
  %component.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !342
  %r = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2850, metadata !DIExpression()), !dbg !2851
  store i8* %component, i8** %component.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %component.addr, metadata !2852, metadata !DIExpression()), !dbg !2853
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2854, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2856, metadata !DIExpression()), !dbg !2857
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2858
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2858
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2857
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2859
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 18, !dbg !2861, !ctir !343
  %3 = load i8, i8* %set_security_context, align 1, !dbg !2861
  %tobool = trunc i8 %3 to i1, !dbg !2861, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2862

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %component.addr, align 8, !dbg !2863
  %call = call i32 @defaultcon(i8* %4, i32 16384), !dbg !2864
  %cmp = icmp slt i32 %call, 0, !dbg !2865
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !2866

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !2867
  %5 = load i32, i32* %call2, align 4, !dbg !2867, !ctir !7
  %call3 = call zeroext i1 @ignorable_ctx_err(i32 %5), !dbg !2868
  br i1 %call3, label %if.end, label %if.then, !dbg !2869

if.then:                                          ; preds = %land.lhs.true1
  %call4 = call i32* @__errno_location() #16, !dbg !2870
  %6 = load i32, i32* %call4, align 4, !dbg !2870, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #9, !dbg !2871
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !2872
  %call6 = call i8* @quotearg_style(i32 4, i8* %7), !dbg !2872
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call5, i8* %call6), !dbg !2873
  br label %if.end, !dbg !2873

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2874, metadata !DIExpression()), !dbg !2875
  %8 = load i8*, i8** %component.addr, align 8, !dbg !2876
  %call7 = call i32 @mkdir(i8* %8, i32 493) #9, !dbg !2877
  store i32 %call7, i32* %r, align 4, !dbg !2875
  %9 = load i32, i32* %r, align 4, !dbg !2878
  %cmp8 = icmp eq i32 %9, 0, !dbg !2880
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2881

if.then9:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir.addr, align 8, !dbg !2882
  %11 = load i8*, i8** %options.addr, align 8, !dbg !2883
  call void @announce_mkdir(i8* %10, i8* %11), !dbg !2884
  br label %if.end10, !dbg !2884

if.end10:                                         ; preds = %if.then9, %if.end
  %12 = load i32, i32* %r, align 4, !dbg !2885
  ret i32 %12, !dbg !2886
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !2887 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2891, metadata !DIExpression()), !dbg !2892
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2893, metadata !DIExpression()), !dbg !2894
  %call = call i32* @__errno_location() #16, !dbg !2895
  store i32 95, i32* %call, align 4, !dbg !2896, !ctir !7
  ret i32 -1, !dbg !2897
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !2898 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !2901, metadata !DIExpression()), !dbg !2902
  %0 = load i32, i32* %err.addr, align 4, !dbg !2903
  %cmp = icmp eq i32 %0, 95, !dbg !2904
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2905

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !2906
  %cmp1 = icmp eq i32 %1, 61, !dbg !2907
  br label %lor.end, !dbg !2905

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !2908
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @announce_mkdir(i8* %dir, i8* %options) #4 !dbg !2909 {
entry:
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !342
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !2912, metadata !DIExpression()), !dbg !2913
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !2914, metadata !DIExpression()), !dbg !2915
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !2916, metadata !DIExpression()), !dbg !2917
  %0 = load i8*, i8** %options.addr, align 8, !dbg !2918
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !2918
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !2917
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !2919
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 31, !dbg !2921, !ctir !343
  %3 = load i8, i8* %verbose, align 2, !dbg !2921
  %tobool = trunc i8 %3 to i1, !dbg !2921, !ctir !142
  br i1 %tobool, label %if.then, label %if.end, !dbg !2922

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2923
  %call = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #9, !dbg !2924
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !2925
  %call1 = call i8* @quotearg_style(i32 4, i8* %5), !dbg !2925
  call void (%struct._IO_FILE*, i8*, ...) @prog_fprintf(%struct._IO_FILE* %4, i8* %call, i8* %call1), !dbg !2926
  br label %if.end, !dbg !2926

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2927
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !2928 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !2935, metadata !DIExpression()), !dbg !2936
  %0 = load i8, i8* @copy_only_if_needed, align 1, !dbg !2937
  %tobool = trunc i8 %0 to i1, !dbg !2937
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2939

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !2940
  %2 = load i8*, i8** %to.addr, align 8, !dbg !2941
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2942
  %call = call zeroext i1 @need_copy(i8* %1, i8* %2, %struct.cp_options* %3), !dbg !2943
  br i1 %call, label %if.end, label %if.then, !dbg !2944

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !2945
  br label %return, !dbg !2945

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !2946
  %5 = load i8*, i8** %to.addr, align 8, !dbg !2947
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2948
  %call1 = call zeroext i1 @copy(i8* %4, i8* %5, i1 zeroext false, %struct.cp_options* %6, i8* %copy_into_self, i8* null), !dbg !2949
  store i1 %call1, i1* %retval, align 1, !dbg !2950
  br label %return, !dbg !2950

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !2951
  ret i1 %7, !dbg !2951
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip(i8* %name) #4 !dbg !2952 {
entry:
  %name.addr = alloca i8*, align 8
  %status = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !142
  %pid = alloca i32, align 4, !ctir !111
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2953, metadata !DIExpression()), !dbg !2954
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2955, metadata !DIExpression()), !dbg !2956
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2957, metadata !DIExpression()), !dbg !2958
  store i8 0, i8* %ok, align 1, !dbg !2958
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !2959, metadata !DIExpression()), !dbg !2960
  %call = call i32 @fork() #9, !dbg !2961
  store i32 %call, i32* %pid, align 4, !dbg !2960
  %0 = load i32, i32* %pid, align 4, !dbg !2962
  switch i32 %0, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ], !dbg !2963

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !2964
  %1 = load i32, i32* %call1, align 4, !dbg !2964, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !2966
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1, i8* %call2), !dbg !2967
  br label %sw.epilog, !dbg !2968

sw.bb3:                                           ; preds = %entry
  %2 = load i8*, i8** @strip_program, align 8, !dbg !2969
  %3 = load i8*, i8** @strip_program, align 8, !dbg !2970
  %4 = load i8*, i8** %name.addr, align 8, !dbg !2971
  %call4 = call i32 (i8*, i8*, ...) @execlp(i8* %2, i8* %3, i8* %4, i8* null) #9, !dbg !2972
  %call5 = call i32* @__errno_location() #16, !dbg !2973
  %5 = load i32, i32* %call5, align 4, !dbg !2973, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !2973
  %6 = load i8*, i8** @strip_program, align 8, !dbg !2973
  %call7 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !2973
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %call6, i8* %call7), !dbg !2973
  unreachable, !dbg !2973

sw.default:                                       ; preds = %entry
  %7 = load i32, i32* %pid, align 4, !dbg !2974
  %call8 = call i32 @waitpid(i32 %7, i32* %status, i32 0), !dbg !2976
  %cmp = icmp slt i32 %call8, 0, !dbg !2977
  br i1 %cmp, label %if.then, label %if.else, !dbg !2978

if.then:                                          ; preds = %sw.default
  %call9 = call i32* @__errno_location() #16, !dbg !2979
  %8 = load i32, i32* %call9, align 4, !dbg !2979, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !2980
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call10), !dbg !2981
  br label %if.end16, !dbg !2981

if.else:                                          ; preds = %sw.default
  %9 = load i32, i32* %status, align 4, !dbg !2982
  %and = and i32 %9, 127, !dbg !2982
  %cmp11 = icmp eq i32 %and, 0, !dbg !2982
  br i1 %cmp11, label %lor.lhs.false, label %if.then13, !dbg !2984

lor.lhs.false:                                    ; preds = %if.else
  %10 = load i32, i32* %status, align 4, !dbg !2985
  %and12 = and i32 %10, 65280, !dbg !2985
  %shr = ashr i32 %and12, 8, !dbg !2985
  %tobool = icmp ne i32 %shr, 0, !dbg !2985
  br i1 %tobool, label %if.then13, label %if.else15, !dbg !2986

if.then13:                                        ; preds = %lor.lhs.false, %if.else
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !2987
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call14), !dbg !2988
  br label %if.end, !dbg !2988

if.else15:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %ok, align 1, !dbg !2989
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !2990

sw.epilog:                                        ; preds = %if.end16, %sw.bb
  %11 = load i8, i8* %ok, align 1, !dbg !2991
  %tobool17 = trunc i8 %11 to i1, !dbg !2991
  ret i1 %tobool17, !dbg !2992
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_timestamps(%struct.stat* %src_sb, i8* %dest) #4 !dbg !2993 {
entry:
  %retval = alloca i1, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %dest.addr = alloca i8*, align 8
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !363
  %tmp = alloca %struct.timespec, align 8
  %tmp2 = alloca %struct.timespec, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !2998, metadata !DIExpression()), !dbg !2999
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3000, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !3002, metadata !DIExpression()), !dbg !3003
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3004, !ctir !363
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3005
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %0) #14, !dbg !3006
  %1 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !3006
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3006
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !3006
  store i64 %3, i64* %2, align 8, !dbg !3006
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3006
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !3006
  store i64 %5, i64* %4, align 8, !dbg !3006
  %6 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !3006
  %7 = bitcast %struct.timespec* %tmp to i8*, !dbg !3006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3006
  %arrayidx1 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !3007, !ctir !363
  %8 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3008
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %8) #14, !dbg !3009
  %9 = bitcast %struct.timespec* %tmp2 to { i64, i64 }*, !dbg !3009
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3009
  %11 = extractvalue { i64, i64 } %call3, 0, !dbg !3009
  store i64 %11, i64* %10, align 8, !dbg !3009
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3009
  %13 = extractvalue { i64, i64 } %call3, 1, !dbg !3009
  store i64 %13, i64* %12, align 8, !dbg !3009
  %14 = bitcast %struct.timespec* %arrayidx1 to i8*, !dbg !3009
  %15 = bitcast %struct.timespec* %tmp2 to i8*, !dbg !3009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 8 %15, i64 16, i1 false), !dbg !3009
  %16 = load i8*, i8** %dest.addr, align 8, !dbg !3010
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3012, !ctir !363
  %call4 = call i32 @utimens(i8* %16, %struct.timespec* %arraydecay), !dbg !3013
  %tobool = icmp ne i32 %call4, 0, !dbg !3013
  br i1 %tobool, label %if.then, label %if.end, !dbg !3014

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #16, !dbg !3015
  %17 = load i32, i32* %call5, align 4, !dbg !3015, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !3017
  %18 = load i8*, i8** %dest.addr, align 8, !dbg !3018
  %call7 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !3018
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* %call6, i8* %call7), !dbg !3019
  store i1 false, i1* %retval, align 1, !dbg !3020
  br label %return, !dbg !3020

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3021
  br label %return, !dbg !3021

return:                                           ; preds = %if.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3022
  ret i1 %19, !dbg !3022
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_attributes(i8* %name) #4 !dbg !3023 {
entry:
  %name.addr = alloca i8*, align 8
  %ok = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3026, metadata !DIExpression()), !dbg !3027
  store i8 0, i8* %ok, align 1, !dbg !3027
  %0 = load i32, i32* @owner_id, align 4, !dbg !3028
  %cmp = icmp eq i32 %0, -1, !dbg !3030
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true2, !dbg !3031

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @group_id, align 4, !dbg !3032
  %cmp1 = icmp eq i32 %1, -1, !dbg !3033
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !3034

land.lhs.true2:                                   ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3035
  %3 = load i32, i32* @owner_id, align 4, !dbg !3036
  %4 = load i32, i32* @group_id, align 4, !dbg !3037
  %call = call i32 @lchown(i8* %2, i32 %3, i32 %4) #9, !dbg !3038
  %cmp3 = icmp ne i32 %call, 0, !dbg !3039
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3040

if.then:                                          ; preds = %land.lhs.true2
  %call4 = call i32* @__errno_location() #16, !dbg !3041
  %5 = load i32, i32* %call4, align 4, !dbg !3041, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !3042
  %6 = load i8*, i8** %name.addr, align 8, !dbg !3043
  %call6 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3043
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call5, i8* %call6), !dbg !3044
  br label %if.end14, !dbg !3044

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3045
  %8 = load i32, i32* @mode, align 4, !dbg !3047
  %call7 = call i32 @chmod(i8* %7, i32 %8) #9, !dbg !3048
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3049
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !3050

if.then9:                                         ; preds = %if.else
  %call10 = call i32* @__errno_location() #16, !dbg !3051
  %9 = load i32, i32* %call10, align 4, !dbg !3051, !ctir !7
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !3052
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3053
  %call12 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3053
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call11, i8* %call12), !dbg !3054
  br label %if.end, !dbg !3054

if.else13:                                        ; preds = %if.else
  store i8 1, i8* %ok, align 1, !dbg !3055
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %11 = load i8, i8* @use_default_selinux_context, align 1, !dbg !3056
  %tobool = trunc i8 %11 to i1, !dbg !3056
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !3058

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %name.addr, align 8, !dbg !3059
  call void @setdefaultfilecon(i8* %12), !dbg !3060
  br label %if.end16, !dbg !3060

if.end16:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %ok, align 1, !dbg !3061
  %tobool17 = trunc i8 %13 to i1, !dbg !3061
  ret i1 %tobool17, !dbg !3062
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setdefaultfilecon(i8* %file) #4 !dbg !422 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !1939
  %scontext = alloca i8*, align 8, !ctir !9
  %p0 = alloca i8*, align 8, !ctir !183
  %p = alloca i8*, align 8, !ctir !183
  %prefix = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3063, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !3067, metadata !DIExpression()), !dbg !3068
  store i8* null, i8** %scontext, align 8, !dbg !3068
  %0 = load i32, i32* @selinux_enabled, align 4, !dbg !3069
  %cmp = icmp ne i32 %0, 1, !dbg !3071
  br i1 %cmp, label %if.then, label %if.end, !dbg !3072

if.then:                                          ; preds = %entry
  br label %return, !dbg !3073

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3075
  %call = call i32 @lstat(i8* %1, %struct.stat* %st) #9, !dbg !3077
  %cmp1 = icmp ne i32 %call, 0, !dbg !3078
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3079

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3080

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @setdefaultfilecon.first_call, align 1, !dbg !3081
  %tobool = trunc i8 %2 to i1, !dbg !3081
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !3083

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3084
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3084, !ctir !183
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3084
  %conv = sext i8 %4 to i32, !dbg !3084
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3084
  br i1 %cmp4, label %if.then6, label %if.end29, !dbg !3085

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3086, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3089, metadata !DIExpression()), !dbg !3090
  %5 = load i8*, i8** %file.addr, align 8, !dbg !3091
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3092, !ctir !184
  store i8* %add.ptr, i8** %p, align 8, !dbg !3090
  br label %while.cond, !dbg !3093

while.cond:                                       ; preds = %while.body, %if.then6
  %6 = load i8*, i8** %p, align 8, !dbg !3094
  %7 = load i8, i8* %6, align 1, !dbg !3094, !ctir !184
  %conv7 = sext i8 %7 to i32, !dbg !3094
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3094
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3093

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !3095
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3095, !ctir !184
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3095
  br label %while.cond, !dbg !3093, !llvm.loop !3096

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3098
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !3099, !ctir !184
  store i8* %add.ptr10, i8** %p0, align 8, !dbg !3100
  %10 = load i8*, i8** %p, align 8, !dbg !3101
  %11 = load i8, i8* %10, align 1, !dbg !3103, !ctir !184
  %tobool11 = icmp ne i8 %11, 0, !dbg !3103
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !3104

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !3105, metadata !DIExpression()), !dbg !3107
  br label %do.body, !dbg !3108

do.body:                                          ; preds = %land.end, %if.then12
  %12 = load i8*, i8** %p, align 8, !dbg !3109
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3109, !ctir !184
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !3109
  br label %do.cond, !dbg !3111

do.cond:                                          ; preds = %do.body
  %13 = load i8*, i8** %p, align 8, !dbg !3112
  %14 = load i8, i8* %13, align 1, !dbg !3113, !ctir !184
  %conv14 = sext i8 %14 to i32, !dbg !3113
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3113
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !3114

land.rhs:                                         ; preds = %do.cond
  %15 = load i8*, i8** %p, align 8, !dbg !3115
  %16 = load i8, i8* %15, align 1, !dbg !3115, !ctir !184
  %conv16 = sext i8 %16 to i32, !dbg !3115
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !3115
  %lnot = xor i1 %cmp17, true, !dbg !3116
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3117
  br i1 %17, label %do.body, label %do.end, !dbg !3111, !llvm.loop !3118

do.end:                                           ; preds = %land.end
  %18 = load i8*, i8** %p, align 8, !dbg !3120
  %19 = load i8*, i8** %p0, align 8, !dbg !3121
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3122
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3122
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3122
  %add = add nsw i64 %sub.ptr.sub, 2, !dbg !3123
  %call19 = call noalias i8* @malloc(i64 %add) #9, !dbg !3124
  store i8* %call19, i8** %prefix, align 8, !dbg !3125
  %20 = load i8*, i8** %prefix, align 8, !dbg !3126
  %tobool20 = icmp ne i8* %20, null, !dbg !3126
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !3128

if.then21:                                        ; preds = %do.end
  %21 = load i8*, i8** %prefix, align 8, !dbg !3129
  %22 = load i8*, i8** %p0, align 8, !dbg !3131
  %23 = load i8*, i8** %p, align 8, !dbg !3132
  %24 = load i8*, i8** %p0, align 8, !dbg !3133
  %sub.ptr.lhs.cast22 = ptrtoint i8* %23 to i64, !dbg !3134
  %sub.ptr.rhs.cast23 = ptrtoint i8* %24 to i64, !dbg !3134
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3134
  %call25 = call i8* @stpncpy(i8* %21, i8* %22, i64 %sub.ptr.sub24) #9, !dbg !3135
  %call26 = call i8* @stpcpy(i8* %call25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !3136
  %25 = load i8*, i8** %prefix, align 8, !dbg !3137
  call void @free(i8* %25) #9, !dbg !3138
  br label %if.end27, !dbg !3139

if.end27:                                         ; preds = %if.then21, %do.end
  br label %if.end28, !dbg !3140

if.end28:                                         ; preds = %if.end27, %while.end
  br label %if.end29, !dbg !3141

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end3
  store i8 0, i8* @setdefaultfilecon.first_call, align 1, !dbg !3142
  %26 = load i8*, i8** %file.addr, align 8, !dbg !3143
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3145, !ctir !1939
  %27 = load i32, i32* %st_mode, align 8, !dbg !3145, !ctir !140
  %call30 = call i32 @matchpathcon(i8* %26, i32 %27, i8** %scontext), !dbg !3146
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3147
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !3148

lor.lhs.false:                                    ; preds = %if.end29
  %28 = load i8*, i8** %scontext, align 8, !dbg !3149
  %call33 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #14, !dbg !3149
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3149
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !3150

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  %29 = load i8*, i8** %scontext, align 8, !dbg !3151
  %cmp37 = icmp ne i8* %29, null, !dbg !3154
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3155

if.then39:                                        ; preds = %if.then36
  %30 = load i8*, i8** %scontext, align 8, !dbg !3156
  call void @freecon(i8* %30), !dbg !3157
  br label %if.end40, !dbg !3157

if.end40:                                         ; preds = %if.then39, %if.then36
  br label %return, !dbg !3158

if.end41:                                         ; preds = %lor.lhs.false
  %31 = load i8*, i8** %file.addr, align 8, !dbg !3159
  %32 = load i8*, i8** %scontext, align 8, !dbg !3161
  %call42 = call i32 @lsetfilecon(i8* %31, i8* %32), !dbg !3162
  %cmp43 = icmp slt i32 %call42, 0, !dbg !3163
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !3164

land.lhs.true45:                                  ; preds = %if.end41
  %call46 = call i32* @__errno_location() #16, !dbg !3165
  %33 = load i32, i32* %call46, align 4, !dbg !3165, !ctir !7
  %cmp47 = icmp ne i32 %33, 95, !dbg !3166
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3167

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = call i32* @__errno_location() #16, !dbg !3168
  %34 = load i32, i32* %call50, align 4, !dbg !3168, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.87, i64 0, i64 0)) #9, !dbg !3169
  %35 = load i8*, i8** %file.addr, align 8, !dbg !3170
  %call52 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %35), !dbg !3170
  %36 = load i8*, i8** %scontext, align 8, !dbg !3171
  %call53 = call i8* @quote_n(i32 1, i8* %36), !dbg !3172
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* %call51, i8* %call52, i8* %call53), !dbg !3173
  br label %if.end54, !dbg !3173

if.end54:                                         ; preds = %if.then49, %land.lhs.true45, %if.end41
  %37 = load i8*, i8** %scontext, align 8, !dbg !3174
  call void @freecon(i8* %37), !dbg !3175
  br label %return, !dbg !3176

return:                                           ; preds = %if.end54, %if.end40, %if.then2, %if.then
  ret void, !dbg !3177
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @need_copy(i8* %src_name, i8* %dest_name, %struct.cp_options* %x) #4 !dbg !3178 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dest_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !1939
  %dest_sb = alloca %struct.stat, align 8, !ctir !1939
  %src_fd = alloca i32, align 4, !ctir !7
  %dest_fd = alloca i32, align 4, !ctir !7
  %content_match = alloca i8, align 1, !ctir !142
  %ruid = alloca i32, align 4, !ctir !127
  %rgid = alloca i32, align 4, !ctir !129
  %file_scontext = alloca i8*, align 8, !ctir !9
  %to_scontext = alloca i8*, align 8, !ctir !9
  %scontext_match = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3179, metadata !DIExpression()), !dbg !3180
  store i8* %dest_name, i8** %dest_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest_name.addr, metadata !3181, metadata !DIExpression()), !dbg !3182
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3183, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3185, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_sb, metadata !3187, metadata !DIExpression()), !dbg !3188
  call void @llvm.dbg.declare(metadata i32* %src_fd, metadata !3189, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.declare(metadata i32* %dest_fd, metadata !3191, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.declare(metadata i8* %content_match, metadata !3193, metadata !DIExpression()), !dbg !3194
  %0 = load i32, i32* @mode, align 4, !dbg !3195
  %call = call zeroext i1 @extra_mode(i32 %0), !dbg !3197
  br i1 %call, label %if.then, label %if.end, !dbg !3198

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3199
  br label %return, !dbg !3199

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !3200
  %call1 = call i32 @lstat(i8* %1, %struct.stat* %src_sb) #9, !dbg !3202
  %cmp = icmp ne i32 %call1, 0, !dbg !3203
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3204

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3205
  br label %return, !dbg !3205

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dest_name.addr, align 8, !dbg !3206
  %call4 = call i32 @lstat(i8* %2, %struct.stat* %dest_sb) #9, !dbg !3208
  %cmp5 = icmp ne i32 %call4, 0, !dbg !3209
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3210

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !3211
  br label %return, !dbg !3211

if.end7:                                          ; preds = %if.end3
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3212, !ctir !1939
  %3 = load i32, i32* %st_mode, align 8, !dbg !3212, !ctir !140
  %and = and i32 %3, 61440, !dbg !3212
  %cmp8 = icmp eq i32 %and, 32768, !dbg !3212
  br i1 %cmp8, label %lor.lhs.false, label %if.then18, !dbg !3214

lor.lhs.false:                                    ; preds = %if.end7
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3215, !ctir !1939
  %4 = load i32, i32* %st_mode9, align 8, !dbg !3215, !ctir !140
  %and10 = and i32 %4, 61440, !dbg !3215
  %cmp11 = icmp eq i32 %and10, 32768, !dbg !3215
  br i1 %cmp11, label %lor.lhs.false12, label %if.then18, !dbg !3216

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %st_mode13 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3217, !ctir !1939
  %5 = load i32, i32* %st_mode13, align 8, !dbg !3217, !ctir !140
  %call14 = call zeroext i1 @extra_mode(i32 %5), !dbg !3218
  br i1 %call14, label %if.then18, label %lor.lhs.false15, !dbg !3219

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3220, !ctir !1939
  %6 = load i32, i32* %st_mode16, align 8, !dbg !3220, !ctir !140
  %call17 = call zeroext i1 @extra_mode(i32 %6), !dbg !3221
  br i1 %call17, label %if.then18, label %if.end19, !dbg !3222

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end7
  store i1 true, i1* %retval, align 1, !dbg !3223
  br label %return, !dbg !3223

if.end19:                                         ; preds = %lor.lhs.false15
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !3224, !ctir !1939
  %7 = load i64, i64* %st_size, align 8, !dbg !3224, !ctir !29
  %st_size20 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 8, !dbg !3226, !ctir !1939
  %8 = load i64, i64* %st_size20, align 8, !dbg !3226, !ctir !29
  %cmp21 = icmp ne i64 %7, %8, !dbg !3227
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !3228

lor.lhs.false22:                                  ; preds = %if.end19
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !3229, !ctir !1939
  %9 = load i32, i32* %st_mode23, align 8, !dbg !3229, !ctir !140
  %and24 = and i32 %9, 4095, !dbg !3230
  %10 = load i32, i32* @mode, align 4, !dbg !3231
  %cmp25 = icmp ne i32 %and24, %10, !dbg !3232
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !3233

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  store i1 true, i1* %retval, align 1, !dbg !3234
  br label %return, !dbg !3234

if.end27:                                         ; preds = %lor.lhs.false22
  %11 = load i32, i32* @owner_id, align 4, !dbg !3235
  %cmp28 = icmp eq i32 %11, -1, !dbg !3237
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !3238

if.then29:                                        ; preds = %if.end27
  %call30 = call i32* @__errno_location() #16, !dbg !3239
  store i32 0, i32* %call30, align 4, !dbg !3241, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %ruid, metadata !3242, metadata !DIExpression()), !dbg !3243
  %call31 = call i32 @getuid() #9, !dbg !3244
  store i32 %call31, i32* %ruid, align 4, !dbg !3243
  %12 = load i32, i32* %ruid, align 4, !dbg !3245
  %cmp32 = icmp eq i32 %12, -1, !dbg !3247
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !3248

land.lhs.true:                                    ; preds = %if.then29
  %call33 = call i32* @__errno_location() #16, !dbg !3249
  %13 = load i32, i32* %call33, align 4, !dbg !3249, !ctir !7
  %tobool = icmp ne i32 %13, 0, !dbg !3249
  br i1 %tobool, label %if.then36, label %lor.lhs.false34, !dbg !3250

lor.lhs.false34:                                  ; preds = %land.lhs.true, %if.then29
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !3251, !ctir !1939
  %14 = load i32, i32* %st_uid, align 4, !dbg !3251, !ctir !128
  %15 = load i32, i32* %ruid, align 4, !dbg !3252
  %cmp35 = icmp ne i32 %14, %15, !dbg !3253
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !3254

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !3255
  br label %return, !dbg !3255

if.end37:                                         ; preds = %lor.lhs.false34
  br label %if.end42, !dbg !3256

if.else:                                          ; preds = %if.end27
  %st_uid38 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !3257, !ctir !1939
  %16 = load i32, i32* %st_uid38, align 4, !dbg !3257, !ctir !128
  %17 = load i32, i32* @owner_id, align 4, !dbg !3259
  %cmp39 = icmp ne i32 %16, %17, !dbg !3260
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !3261

if.then40:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !3262
  br label %return, !dbg !3262

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end37
  %18 = load i32, i32* @group_id, align 4, !dbg !3263
  %cmp43 = icmp eq i32 %18, -1, !dbg !3265
  br i1 %cmp43, label %if.then44, label %if.else55, !dbg !3266

if.then44:                                        ; preds = %if.end42
  %call45 = call i32* @__errno_location() #16, !dbg !3267
  store i32 0, i32* %call45, align 4, !dbg !3269, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %rgid, metadata !3270, metadata !DIExpression()), !dbg !3271
  %call46 = call i32 @getgid() #9, !dbg !3272
  store i32 %call46, i32* %rgid, align 4, !dbg !3271
  %19 = load i32, i32* %rgid, align 4, !dbg !3273
  %cmp47 = icmp eq i32 %19, -1, !dbg !3275
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !3276

land.lhs.true48:                                  ; preds = %if.then44
  %call49 = call i32* @__errno_location() #16, !dbg !3277
  %20 = load i32, i32* %call49, align 4, !dbg !3277, !ctir !7
  %tobool50 = icmp ne i32 %20, 0, !dbg !3277
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !3278

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %if.then44
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !3279, !ctir !1939
  %21 = load i32, i32* %st_gid, align 8, !dbg !3279, !ctir !130
  %22 = load i32, i32* %rgid, align 4, !dbg !3280
  %cmp52 = icmp ne i32 %21, %22, !dbg !3281
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !3282

if.then53:                                        ; preds = %lor.lhs.false51, %land.lhs.true48
  store i1 true, i1* %retval, align 1, !dbg !3283
  br label %return, !dbg !3283

if.end54:                                         ; preds = %lor.lhs.false51
  br label %if.end60, !dbg !3284

if.else55:                                        ; preds = %if.end42
  %st_gid56 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !3285, !ctir !1939
  %23 = load i32, i32* %st_gid56, align 8, !dbg !3285, !ctir !130
  %24 = load i32, i32* @group_id, align 4, !dbg !3287
  %cmp57 = icmp ne i32 %23, %24, !dbg !3288
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !3289

if.then58:                                        ; preds = %if.else55
  store i1 true, i1* %retval, align 1, !dbg !3290
  br label %return, !dbg !3290

if.end59:                                         ; preds = %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end54
  %25 = load i32, i32* @selinux_enabled, align 4, !dbg !3291
  %tobool61 = icmp ne i32 %25, 0, !dbg !3291
  br i1 %tobool61, label %land.lhs.true62, label %if.end78, !dbg !3293

land.lhs.true62:                                  ; preds = %if.end60
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3294
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 22, !dbg !3295, !ctir !343
  %27 = load i8, i8* %preserve_security_context, align 1, !dbg !3295
  %tobool63 = trunc i8 %27 to i1, !dbg !3295, !ctir !142
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !3296

if.then64:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata i8** %file_scontext, metadata !3297, metadata !DIExpression()), !dbg !3299
  store i8* null, i8** %file_scontext, align 8, !dbg !3299
  call void @llvm.dbg.declare(metadata i8** %to_scontext, metadata !3300, metadata !DIExpression()), !dbg !3301
  store i8* null, i8** %to_scontext, align 8, !dbg !3301
  call void @llvm.dbg.declare(metadata i8* %scontext_match, metadata !3302, metadata !DIExpression()), !dbg !3303
  %28 = load i8*, i8** %src_name.addr, align 8, !dbg !3304
  %call65 = call i32 @getfilecon(i8* %28, i8** %file_scontext), !dbg !3306
  %cmp66 = icmp eq i32 %call65, -1, !dbg !3307
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !3308

if.then67:                                        ; preds = %if.then64
  store i1 true, i1* %retval, align 1, !dbg !3309
  br label %return, !dbg !3309

if.end68:                                         ; preds = %if.then64
  %29 = load i8*, i8** %dest_name.addr, align 8, !dbg !3310
  %call69 = call i32 @getfilecon(i8* %29, i8** %to_scontext), !dbg !3312
  %cmp70 = icmp eq i32 %call69, -1, !dbg !3313
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !3314

if.then71:                                        ; preds = %if.end68
  %30 = load i8*, i8** %file_scontext, align 8, !dbg !3315
  call void @freecon(i8* %30), !dbg !3317
  store i1 true, i1* %retval, align 1, !dbg !3318
  br label %return, !dbg !3318

if.end72:                                         ; preds = %if.end68
  %31 = load i8*, i8** %file_scontext, align 8, !dbg !3319
  %32 = load i8*, i8** %to_scontext, align 8, !dbg !3319
  %call73 = call i32 @strcmp(i8* %31, i8* %32) #14, !dbg !3319
  %cmp74 = icmp eq i32 %call73, 0, !dbg !3319
  %frombool = zext i1 %cmp74 to i8, !dbg !3320
  store i8 %frombool, i8* %scontext_match, align 1, !dbg !3320
  %33 = load i8*, i8** %file_scontext, align 8, !dbg !3321
  call void @freecon(i8* %33), !dbg !3322
  %34 = load i8*, i8** %to_scontext, align 8, !dbg !3323
  call void @freecon(i8* %34), !dbg !3324
  %35 = load i8, i8* %scontext_match, align 1, !dbg !3325
  %tobool75 = trunc i8 %35 to i1, !dbg !3325
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !3327

if.then76:                                        ; preds = %if.end72
  store i1 true, i1* %retval, align 1, !dbg !3328
  br label %return, !dbg !3328

if.end77:                                         ; preds = %if.end72
  br label %if.end78, !dbg !3329

if.end78:                                         ; preds = %if.end77, %land.lhs.true62, %if.end60
  %36 = load i8*, i8** %src_name.addr, align 8, !dbg !3330
  %call79 = call i32 (i8*, i32, ...) @open(i8* %36, i32 0), !dbg !3331
  store i32 %call79, i32* %src_fd, align 4, !dbg !3332
  %37 = load i32, i32* %src_fd, align 4, !dbg !3333
  %cmp80 = icmp slt i32 %37, 0, !dbg !3335
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !3336

if.then81:                                        ; preds = %if.end78
  store i1 true, i1* %retval, align 1, !dbg !3337
  br label %return, !dbg !3337

if.end82:                                         ; preds = %if.end78
  %38 = load i8*, i8** %dest_name.addr, align 8, !dbg !3338
  %call83 = call i32 (i8*, i32, ...) @open(i8* %38, i32 0), !dbg !3339
  store i32 %call83, i32* %dest_fd, align 4, !dbg !3340
  %39 = load i32, i32* %dest_fd, align 4, !dbg !3341
  %cmp84 = icmp slt i32 %39, 0, !dbg !3343
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !3344

if.then85:                                        ; preds = %if.end82
  %40 = load i32, i32* %src_fd, align 4, !dbg !3345
  %call86 = call i32 @close(i32 %40), !dbg !3347
  store i1 true, i1* %retval, align 1, !dbg !3348
  br label %return, !dbg !3348

if.end87:                                         ; preds = %if.end82
  %41 = load i32, i32* %src_fd, align 4, !dbg !3349
  %42 = load i32, i32* %dest_fd, align 4, !dbg !3350
  %call88 = call zeroext i1 @have_same_content(i32 %41, i32 %42), !dbg !3351
  %frombool89 = zext i1 %call88 to i8, !dbg !3352
  store i8 %frombool89, i8* %content_match, align 1, !dbg !3352
  %43 = load i32, i32* %src_fd, align 4, !dbg !3353
  %call90 = call i32 @close(i32 %43), !dbg !3354
  %44 = load i32, i32* %dest_fd, align 4, !dbg !3355
  %call91 = call i32 @close(i32 %44), !dbg !3356
  %45 = load i8, i8* %content_match, align 1, !dbg !3357
  %tobool92 = trunc i8 %45 to i1, !dbg !3357
  %lnot = xor i1 %tobool92, true, !dbg !3358
  store i1 %lnot, i1* %retval, align 1, !dbg !3359
  br label %return, !dbg !3359

return:                                           ; preds = %if.end87, %if.then85, %if.then81, %if.then76, %if.then71, %if.then67, %if.then58, %if.then53, %if.then40, %if.then36, %if.then26, %if.then18, %if.then6, %if.then2, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !3360
  ret i1 %46, !dbg !3360
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @have_same_content(i32 %a_fd, i32 %b_fd) #4 !dbg !415 {
entry:
  %retval = alloca i1, align 1
  %a_fd.addr = alloca i32, align 4
  %b_fd.addr = alloca i32, align 4
  %size = alloca i64, align 8, !ctir !55
  store i32 %a_fd, i32* %a_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a_fd.addr, metadata !3361, metadata !DIExpression()), !dbg !3362
  store i32 %b_fd, i32* %b_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_fd.addr, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.declare(metadata i64* %size, metadata !3365, metadata !DIExpression()), !dbg !3366
  br label %while.cond, !dbg !3367

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a_fd.addr, align 4, !dbg !3368
  %call = call i64 @full_read(i32 %0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i64 4096), !dbg !3369
  store i64 %call, i64* %size, align 8, !dbg !3370
  %cmp = icmp ult i64 0, %call, !dbg !3371
  br i1 %cmp, label %while.body, label %while.end, !dbg !3367

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %size, align 8, !dbg !3372
  %2 = load i32, i32* %b_fd.addr, align 4, !dbg !3375
  %call1 = call i64 @full_read(i32 %2, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 4096), !dbg !3376
  %cmp2 = icmp ne i64 %1, %call1, !dbg !3377
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3378

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !3379
  br label %return, !dbg !3379

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %size, align 8, !dbg !3380
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 %3) #14, !dbg !3382
  %cmp4 = icmp ne i32 %call3, 0, !dbg !3383
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3384

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3385
  br label %return, !dbg !3385

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !3367, !llvm.loop !3386

while.end:                                        ; preds = %while.cond
  %4 = load i64, i64* %size, align 8, !dbg !3388
  %cmp7 = icmp eq i64 %4, 0, !dbg !3389
  store i1 %cmp7, i1* %retval, align 1, !dbg !3390
  br label %return, !dbg !3390

return:                                           ; preds = %while.end, %if.then5, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !3391
  ret i1 %5, !dbg !3391
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3392 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3395, metadata !DIExpression()), !dbg !3396
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3397, metadata !DIExpression()), !dbg !3398
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3399, metadata !DIExpression()), !dbg !3400
  %call = call i32* @__errno_location() #16, !dbg !3401
  store i32 95, i32* %call, align 4, !dbg !3402, !ctir !7
  ret i1 false, !dbg !3403
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

declare dso_local void @endgrent() #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prog_fprintf(%struct._IO_FILE* %fp, i8* %fmt, ...) #4 !dbg !3404 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %fmt.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1174
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !3441, metadata !DIExpression()), !dbg !3442
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !3443, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !3445, metadata !DIExpression()), !dbg !3446
  %0 = load i8*, i8** @program_name, align 8, !dbg !3447
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3447
  %call = call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %1), !dbg !3447
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3448
  %call1 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i64 0, i64 0), %struct._IO_FILE* %2), !dbg !3448
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3449, !ctir !1174
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3449
  call void @llvm.va_start(i8* %arraydecay2), !dbg !3449
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3450
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !3451
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3452, !ctir !1174
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %3, i8* %4, %struct.__va_list_tag* %arraydecay3), !dbg !3453
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !3454, !ctir !1174
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !3454
  call void @llvm.va_end(i8* %arraydecay56), !dbg !3454
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !3455
  %call7 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %5), !dbg !3455
  ret void, !dbg !3456
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !3457 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3511, metadata !DIExpression()), !dbg !3512
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3513
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !3515, !ctir !3461
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !3515
  %tobool = trunc i8 %1 to i1, !dbg !3515, !ctir !142
  br i1 %tobool, label %if.then, label %if.else40, !dbg !3516

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3517, metadata !DIExpression()), !dbg !3519
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3520
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !3521, !ctir !3461
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !3521
  %tobool1 = trunc i8 %3 to i1, !dbg !3521, !ctir !142
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !3522

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3523
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !3524, !ctir !3461
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !3524
  %tobool2 = trunc i8 %5 to i1, !dbg !3524, !ctir !142
  br label %lor.end, !dbg !3522

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !3519
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3519
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3525, metadata !DIExpression()), !dbg !3526
  %7 = load i8, i8* %all_errors, align 1, !dbg !3527
  %tobool4 = trunc i8 %7 to i1, !dbg !3527
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3528

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3529
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !3530, !ctir !3461
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3530
  %tobool5 = trunc i8 %9 to i1, !dbg !3530, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !3531
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3532
  %frombool6 = zext i1 %10 to i8, !dbg !3526
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3526
  call void @llvm.dbg.declare(metadata i8** %con, metadata !3533, metadata !DIExpression()), !dbg !3534
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !3535
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !3537
  %cmp = icmp sle i32 0, %call, !dbg !3538
  br i1 %cmp, label %if.then7, label %if.else, !dbg !3539

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !3540
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !3543
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3544
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !3545

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !3546
  %tobool11 = trunc i8 %13 to i1, !dbg !3546
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !3549

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !3550
  %tobool12 = trunc i8 %14 to i1, !dbg !3550
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !3551

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #16, !dbg !3552
  %15 = load i32, i32* %call13, align 4, !dbg !3552, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !3553
  br i1 %call14, label %if.end, label %if.then15, !dbg !3554

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #16, !dbg !3555
  %16 = load i32, i32* %call16, align 4, !dbg !3555, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !3556
  %17 = load i8*, i8** %con, align 8, !dbg !3557
  %call18 = call i8* @quote(i8* %17), !dbg !3558
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !3559
  br label %if.end, !dbg !3559

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3560
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !3562, !ctir !3461
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !3562
  %tobool20 = trunc i8 %19 to i1, !dbg !3562, !ctir !142
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3563

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !3564
  call void @freecon(i8* %20), !dbg !3566
  store i1 false, i1* %retval, align 1, !dbg !3567
  br label %return, !dbg !3567

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !3568

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !3569
  call void @freecon(i8* %21), !dbg !3570
  br label %if.end39, !dbg !3571

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !3572
  %tobool24 = trunc i8 %22 to i1, !dbg !3572
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !3575

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !3576
  %tobool26 = trunc i8 %23 to i1, !dbg !3576
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !3577

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #16, !dbg !3578
  %24 = load i32, i32* %call28, align 4, !dbg !3578, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !3579
  br i1 %call29, label %if.end34, label %if.then30, !dbg !3580

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #16, !dbg !3581
  %25 = load i32, i32* %call31, align 4, !dbg !3581, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.90, i64 0, i64 0)) #9, !dbg !3583
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !3584
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3584
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !3585
  br label %if.end34, !dbg !3586

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3587
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !3589, !ctir !3461
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !3589
  %tobool36 = trunc i8 %28 to i1, !dbg !3589, !ctir !142
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3590

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !3591
  br label %return, !dbg !3591

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !3592

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3593
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !3595, !ctir !3461
  %30 = load i8, i8* %set_security_context, align 1, !dbg !3595
  %tobool41 = trunc i8 %30 to i1, !dbg !3595, !ctir !142
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !3596

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !3597
  %tobool43 = trunc i8 %31 to i1, !dbg !3597
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !3600

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !3601
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3602
  %call45 = call i32 @defaultcon.91(i8* %32, i32 %33), !dbg !3603
  %cmp46 = icmp slt i32 %call45, 0, !dbg !3604
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !3605

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #16, !dbg !3606
  %34 = load i32, i32* %call48, align 4, !dbg !3606, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err.92(i32 %34), !dbg !3607
  br i1 %call49, label %if.end54, label %if.then50, !dbg !3608

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #16, !dbg !3609
  %35 = load i32, i32* %call51, align 4, !dbg !3609, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i64 0, i64 0)) #9, !dbg !3611
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !3612
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !3612
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !3613
  br label %if.end54, !dbg !3614

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !3615

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !3616
  br label %return, !dbg !3616

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !3617
  ret i1 %37, !dbg !3617
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !3618 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  %0 = load i32, i32* %err.addr, align 4, !dbg !3621
  %cmp = icmp eq i32 %0, 95, !dbg !3622
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3623

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3624
  %cmp1 = icmp eq i32 %1, 61, !dbg !3625
  br label %lor.end, !dbg !3623

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3626
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon.91(i8* %path, i32 %mode) #4 !dbg !3627 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3628, metadata !DIExpression()), !dbg !3629
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3630, metadata !DIExpression()), !dbg !3631
  %call = call i32* @__errno_location() #16, !dbg !3632
  store i32 95, i32* %call, align 4, !dbg !3633, !ctir !7
  ret i32 -1, !dbg !3634
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err.92(i32 %err) #4 !dbg !3635 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  %0 = load i32, i32* %err.addr, align 4, !dbg !3638
  %cmp = icmp eq i32 %0, 95, !dbg !3639
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3640

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3641
  %cmp1 = icmp eq i32 %1, 61, !dbg !3642
  br label %lor.end, !dbg !3640

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3643
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !3644 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3647, metadata !DIExpression()), !dbg !3648
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !3649, metadata !DIExpression()), !dbg !3650
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3651, metadata !DIExpression()), !dbg !3652
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3655, metadata !DIExpression()), !dbg !3656
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3657
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !3658, !ctir !3461
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !3658
  %tobool = trunc i8 %1 to i1, !dbg !3658, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3659

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3660
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !3661, !ctir !3461
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !3661
  %tobool2 = trunc i8 %3 to i1, !dbg !3661, !ctir !142
  br label %lor.end, !dbg !3659

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !3656
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3656
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3662, metadata !DIExpression()), !dbg !3663
  %5 = load i8, i8* %all_errors, align 1, !dbg !3664
  %tobool4 = trunc i8 %5 to i1, !dbg !3664
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3665

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3666
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !3667, !ctir !3461
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3667
  %tobool5 = trunc i8 %7 to i1, !dbg !3667, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !3668
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3669
  %frombool6 = zext i1 %8 to i8, !dbg !3663
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3663
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !3670
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !3672
  %tobool7 = trunc i8 %10 to i1, !dbg !3672
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !3673
  %tobool8 = trunc i8 %11 to i1, !dbg !3673
  %call = call zeroext i1 @restorecon.94(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !3674
  br i1 %call, label %if.end17, label %if.then, !dbg !3675

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !3676
  %tobool9 = trunc i8 %12 to i1, !dbg !3676
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !3679

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !3680
  %tobool10 = trunc i8 %13 to i1, !dbg !3680
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !3681

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #16, !dbg !3682
  %14 = load i32, i32* %call11, align 4, !dbg !3682, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !3683
  br i1 %call12, label %if.end, label %if.then13, !dbg !3684

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !3685
  %15 = load i32, i32* %call14, align 4, !dbg !3685, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.95, i64 0, i64 0)) #9, !dbg !3686
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !3687
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !3687
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !3688
  br label %if.end, !dbg !3688

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !3689
  br label %return, !dbg !3689

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !3690
  br label %return, !dbg !3690

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !3691
  ret i1 %17, !dbg !3691
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon.94(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3692 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3697, metadata !DIExpression()), !dbg !3698
  %call = call i32* @__errno_location() #16, !dbg !3699
  store i32 95, i32* %call, align 4, !dbg !3700, !ctir !7
  ret i1 false, !dbg !3701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !3702 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !3708
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3709
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !3710, !ctir !3462
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !3711, !ctir !175
  ret void, !dbg !3712
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !3713 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3714, metadata !DIExpression()), !dbg !3715
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !3716
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3717
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !3718, !ctir !3462
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !3719, !ctir !175
  ret void, !dbg !3720
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !3721 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3727, metadata !DIExpression()), !dbg !3728
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !3731, metadata !DIExpression()), !dbg !3732
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !3733, metadata !DIExpression()), !dbg !3734
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !3735, metadata !DIExpression()), !dbg !3736
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !3737
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !3737
  br i1 %call, label %if.then, label %if.else, !dbg !3740

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3740

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2975, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !3737
  unreachable, !dbg !3737

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !3741
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !3742
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !3743
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !3744
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !3745, metadata !DIExpression()), !dbg !3746
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !3746
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !3747
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !3748
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !3749
  %tobool = trunc i8 %5 to i1, !dbg !3749
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !3750
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !3751
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3752
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !3753
  ret i1 %call1, !dbg !3754
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #10 !dbg !3755 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !3758, metadata !DIExpression()), !dbg !3759
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3760
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !3760
  br i1 %cmp, label %if.then, label %if.else, !dbg !3763

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3763

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.168, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2950, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3760
  unreachable, !dbg !3760

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3764
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !3764, !ctir !3461
  %2 = load i32, i32* %backup_type, align 8, !dbg !3764, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !3764
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !3767

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !3767

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2951, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3764
  unreachable, !dbg !3764

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3768
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !3768, !ctir !3461
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !3768, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !3768
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !3768

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3768
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !3768, !ctir !3461
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !3768, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !3768
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !3768

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3768
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !3768, !ctir !3461
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !3768, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !3768
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !3771

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !3771

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.170, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3768
  unreachable, !dbg !3768

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3772
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !3772, !ctir !3461
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !3772, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !3772
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !3772

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3772
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !3772, !ctir !3461
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !3772, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !3772
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !3772

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3772
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !3772, !ctir !3461
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !3772, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !3772
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !3775

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !3775

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.171, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2953, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3772
  unreachable, !dbg !3772

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3776
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !3776, !ctir !3461
  %16 = load i8, i8* %hard_link, align 1, !dbg !3776
  %tobool = trunc i8 %16 to i1, !dbg !3776, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !3776

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3776
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !3776, !ctir !3461
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !3776
  %tobool24 = trunc i8 %18 to i1, !dbg !3776, !ctir !142
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !3779

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !3779

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.172, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3776
  unreachable, !dbg !3776

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3780
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !3780, !ctir !3461
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !3780, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !3780
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !3780

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !3780
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !3780, !ctir !3461
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !3780, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !3780
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !3783

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !3783

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.173, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !3780
  unreachable, !dbg !3780

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !3784
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !3785 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !462
  %dst_sb = alloca %struct.stat, align 8, !ctir !462
  %src_mode = alloca i32, align 4, !ctir !139
  %dst_mode = alloca i32, align 4, !ctir !139
  %dst_mode_bits = alloca i32, align 4, !ctir !139
  %omitted_permissions = alloca i32, align 4, !ctir !139
  %restore_dst_mode = alloca i8, align 1, !ctir !142
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !142
  %copied_as_regular = alloca i8, align 1, !ctir !142
  %dest_is_symlink = alloca i8, align 1, !ctir !142
  %have_dst_lstat = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !183
  %dereference69 = alloca i8, align 1, !ctir !142
  %use_lstat = alloca i8, align 1, !ctir !142
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !142
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !183
  %fmt = alloca i8*, align 8, !ctir !183
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !183
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !142
  %tmp_buf = alloca %struct.stat, align 8, !ctir !462
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !461
  %dir = alloca %struct.dir_list*, align 8, !ctir !493
  %dot_sb = alloca %struct.stat, align 8, !ctir !462
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !462
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !142
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !142
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !462
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !510
  %tmp955 = alloca %struct.timespec, align 8
  %tmp958 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3788, metadata !DIExpression()), !dbg !3789
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3790, metadata !DIExpression()), !dbg !3791
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3792, metadata !DIExpression()), !dbg !3793
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3808, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !3810, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !3812, metadata !DIExpression()), !dbg !3813
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !3814, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !3818, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !3820, metadata !DIExpression()), !dbg !3821
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !3821
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !3822, metadata !DIExpression()), !dbg !3823
  store i8* null, i8** %earlier_file, align 8, !dbg !3823
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !3824, metadata !DIExpression()), !dbg !3825
  store i8* null, i8** %dst_backup, align 8, !dbg !3825
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !3828, metadata !DIExpression()), !dbg !3829
  store i8 0, i8* %copied_as_regular, align 1, !dbg !3829
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !3830, metadata !DIExpression()), !dbg !3831
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !3831
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !3832, metadata !DIExpression()), !dbg !3833
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !3833
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !3834
  store i8 0, i8* %0, align 1, !dbg !3835, !ctir !142
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !3836, metadata !DIExpression()), !dbg !3837
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3838
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !3839, !ctir !3461
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !3839, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !3837
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3840
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !3842, !ctir !3461
  %4 = load i8, i8* %move_mode, align 8, !dbg !3842
  %tobool = trunc i8 %4 to i1, !dbg !3842, !ctir !142
  br i1 %tobool, label %if.then, label %if.end13, !dbg !3843

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !3844
  %cmp = icmp slt i32 %5, 0, !dbg !3847
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3848

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !3849
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !3850
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !3851
  %tobool4 = icmp ne i32 %call, 0, !dbg !3851
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !3851

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #16, !dbg !3852
  %8 = load i32, i32* %call5, align 4, !dbg !3852, !ctir !7
  br label %cond.end, !dbg !3851

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !3851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !3851
  store i32 %cond, i32* %rename_errno, align 4, !dbg !3853
  br label %if.end, !dbg !3854

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !3855
  %cmp6 = icmp eq i32 %9, 0, !dbg !3856
  %frombool7 = zext i1 %cmp6 to i8, !dbg !3857
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !3857
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3858
  %tobool8 = icmp ne i8* %10, null, !dbg !3858
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !3860

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !3861
  %tobool10 = trunc i8 %11 to i1, !dbg !3861
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !3862
  %frombool11 = zext i1 %tobool10 to i8, !dbg !3863
  store i8 %frombool11, i8* %12, align 1, !dbg !3863, !ctir !142
  br label %if.end12, !dbg !3864

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !3865

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !3866
  %cmp14 = icmp eq i32 %13, 0, !dbg !3868
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !3869

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3870
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !3871, !ctir !3461
  %15 = load i8, i8* %last_file, align 1, !dbg !3871
  %tobool16 = trunc i8 %15 to i1, !dbg !3871, !ctir !142
  br i1 %tobool16, label %if.end51, label %if.then20, !dbg !3866

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !3872
  %cmp18 = icmp ne i32 %16, 17, !dbg !3873
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !3874

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3875
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !3876, !ctir !3461
  %18 = load i32, i32* %interactive, align 8, !dbg !3876, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !3877
  br i1 %cmp19, label %if.then20, label %if.end51, !dbg !3869

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3878, metadata !DIExpression()), !dbg !3880
  %19 = load i32, i32* %rename_errno, align 4, !dbg !3881
  %cmp21 = icmp eq i32 %19, 0, !dbg !3882
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !3881

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !3883
  br label %cond.end24, !dbg !3881

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !3884
  br label %cond.end24, !dbg !3881

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !3881
  store i8* %cond25, i8** %name, align 8, !dbg !3880
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3885
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !3885, !ctir !3461
  %23 = load i32, i32* %dereference, align 4, !dbg !3885, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !3885
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !3885

cond.true27:                                      ; preds = %cond.end24
  %24 = load i8*, i8** %name, align 8, !dbg !3885
  %call28 = call i32 @lstat(i8* %24, %struct.stat* %src_sb) #9, !dbg !3885
  br label %cond.end31, !dbg !3885

cond.false29:                                     ; preds = %cond.end24
  %25 = load i8*, i8** %name, align 8, !dbg !3885
  %call30 = call i32 @stat(i8* %25, %struct.stat* %src_sb) #9, !dbg !3885
  br label %cond.end31, !dbg !3885

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !3885
  %cmp33 = icmp ne i32 %cond32, 0, !dbg !3887
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !3888

if.then34:                                        ; preds = %cond.end31
  %call35 = call i32* @__errno_location() #16, !dbg !3889
  %26 = load i32, i32* %call35, align 4, !dbg !3889, !ctir !7
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !3891
  %27 = load i8*, i8** %name, align 8, !dbg !3892
  %call37 = call i8* @quotearg_style(i32 4, i8* %27), !dbg !3892
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %26, i8* %call36, i8* %call37), !dbg !3893
  store i1 false, i1* %retval, align 1, !dbg !3894
  br label %return, !dbg !3894

if.end38:                                         ; preds = %cond.end31
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !3895, !ctir !462
  %28 = load i32, i32* %st_mode, align 8, !dbg !3895, !ctir !140
  store i32 %28, i32* %src_mode, align 4, !dbg !3896
  %29 = load i32, i32* %src_mode, align 4, !dbg !3897
  %and = and i32 %29, 61440, !dbg !3897
  %cmp39 = icmp eq i32 %and, 16384, !dbg !3897
  br i1 %cmp39, label %land.lhs.true, label %if.end50, !dbg !3899

land.lhs.true:                                    ; preds = %if.end38
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3900
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 27, !dbg !3901, !ctir !3461
  %31 = load i8, i8* %recursive, align 2, !dbg !3901
  %tobool40 = trunc i8 %31 to i1, !dbg !3901, !ctir !142
  br i1 %tobool40, label %if.end50, label %if.then41, !dbg !3902

if.then41:                                        ; preds = %land.lhs.true
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3903
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 10, !dbg !3905, !ctir !3461
  %33 = load i8, i8* %install_mode, align 1, !dbg !3905
  %tobool42 = trunc i8 %33 to i1, !dbg !3905, !ctir !142
  br i1 %tobool42, label %cond.false45, label %cond.true43, !dbg !3906

cond.true43:                                      ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.103, i64 0, i64 0)) #9, !dbg !3907
  br label %cond.end47, !dbg !3906

cond.false45:                                     ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.104, i64 0, i64 0)) #9, !dbg !3908
  br label %cond.end47, !dbg !3906

cond.end47:                                       ; preds = %cond.false45, %cond.true43
  %cond48 = phi i8* [ %call44, %cond.true43 ], [ %call46, %cond.false45 ], !dbg !3906
  %34 = load i8*, i8** %src_name.addr, align 8, !dbg !3909
  %call49 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !3909
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond48, i8* %call49), !dbg !3910
  store i1 false, i1* %retval, align 1, !dbg !3911
  br label %return, !dbg !3911

if.end50:                                         ; preds = %land.lhs.true, %if.end38
  br label %if.end51, !dbg !3912

if.end51:                                         ; preds = %if.end50, %lor.lhs.false, %cond.true15
  %35 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3913
  %tobool52 = trunc i8 %35 to i1, !dbg !3913
  br i1 %tobool52, label %land.lhs.true53, label %if.end68, !dbg !3915

land.lhs.true53:                                  ; preds = %if.end51
  %36 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3916
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 38, !dbg !3917, !ctir !3461
  %37 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !3917, !ctir !175
  %tobool54 = icmp ne %struct.hash_table* %37, null, !dbg !3916
  br i1 %tobool54, label %if.then55, label %if.end68, !dbg !3918

if.then55:                                        ; preds = %land.lhs.true53
  %38 = load i32, i32* %src_mode, align 4, !dbg !3919
  %and56 = and i32 %38, 61440, !dbg !3919
  %cmp57 = icmp eq i32 %and56, 16384, !dbg !3919
  br i1 %cmp57, label %if.end66, label %land.lhs.true58, !dbg !3922

land.lhs.true58:                                  ; preds = %if.then55
  %39 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3923
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %39, i32 0, i32 0, !dbg !3924, !ctir !3461
  %40 = load i32, i32* %backup_type, align 8, !dbg !3924, !ctir !68
  %cmp59 = icmp eq i32 %40, 0, !dbg !3925
  br i1 %cmp59, label %land.lhs.true60, label %if.end66, !dbg !3926

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3927
  %src_info61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 38, !dbg !3928, !ctir !3461
  %42 = load %struct.hash_table*, %struct.hash_table** %src_info61, align 8, !dbg !3928, !ctir !175
  %43 = load i8*, i8** %src_name.addr, align 8, !dbg !3929
  %call62 = call zeroext i1 @seen_file(%struct.hash_table* %42, i8* %43, %struct.stat* %src_sb), !dbg !3930
  br i1 %call62, label %if.then63, label %if.end66, !dbg !3931

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.105, i64 0, i64 0)) #9, !dbg !3932
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !3934
  %call65 = call i8* @quotearg_style(i32 4, i8* %44), !dbg !3934
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call64, i8* %call65), !dbg !3935
  store i1 true, i1* %retval, align 1, !dbg !3936
  br label %return, !dbg !3936

if.end66:                                         ; preds = %land.lhs.true60, %land.lhs.true58, %if.then55
  %45 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3937
  %src_info67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %45, i32 0, i32 38, !dbg !3938, !ctir !3461
  %46 = load %struct.hash_table*, %struct.hash_table** %src_info67, align 8, !dbg !3938, !ctir !175
  %47 = load i8*, i8** %src_name.addr, align 8, !dbg !3939
  call void @record_file(%struct.hash_table* %46, i8* %47, %struct.stat* %src_sb), !dbg !3940
  br label %if.end68, !dbg !3941

if.end68:                                         ; preds = %if.end66, %land.lhs.true53, %if.end51
  call void @llvm.dbg.declare(metadata i8* %dereference69, metadata !3942, metadata !DIExpression()), !dbg !3943
  %48 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3944
  %49 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3945
  %tobool70 = trunc i8 %49 to i1, !dbg !3945
  %call71 = call zeroext i1 @should_dereference(%struct.cp_options* %48, i1 zeroext %tobool70) #14, !dbg !3946
  %frombool72 = zext i1 %call71 to i8, !dbg !3943
  store i8 %frombool72, i8* %dereference69, align 1, !dbg !3943
  %50 = load i8, i8* %new_dst.addr, align 1, !dbg !3947
  %tobool73 = trunc i8 %50 to i1, !dbg !3947
  br i1 %tobool73, label %if.end348, label %if.then74, !dbg !3949

if.then74:                                        ; preds = %if.end68
  %51 = load i32, i32* %rename_errno, align 4, !dbg !3950
  %cmp75 = icmp eq i32 %51, 17, !dbg !3953
  br i1 %cmp75, label %land.lhs.true76, label %if.then79, !dbg !3954

land.lhs.true76:                                  ; preds = %if.then74
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3955
  %interactive77 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 2, !dbg !3956, !ctir !3461
  %53 = load i32, i32* %interactive77, align 8, !dbg !3956, !ctir !83
  %cmp78 = icmp eq i32 %53, 2, !dbg !3957
  br i1 %cmp78, label %if.end125, label %if.then79, !dbg !3958

if.then79:                                        ; preds = %land.lhs.true76, %if.then74
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !3959, metadata !DIExpression()), !dbg !3961
  %54 = load i32, i32* %src_mode, align 4, !dbg !3962
  %and80 = and i32 %54, 61440, !dbg !3962
  %cmp81 = icmp eq i32 %and80, 32768, !dbg !3962
  br i1 %cmp81, label %lor.lhs.false90, label %land.lhs.true82, !dbg !3963

land.lhs.true82:                                  ; preds = %if.then79
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3964
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 5, !dbg !3965, !ctir !3461
  %56 = load i8, i8* %copy_as_regular, align 4, !dbg !3965
  %tobool83 = trunc i8 %56 to i1, !dbg !3965, !ctir !142
  br i1 %tobool83, label %lor.lhs.false84, label %lor.end, !dbg !3966

lor.lhs.false84:                                  ; preds = %land.lhs.true82
  %57 = load i32, i32* %src_mode, align 4, !dbg !3967
  %and85 = and i32 %57, 61440, !dbg !3967
  %cmp86 = icmp eq i32 %and85, 16384, !dbg !3967
  br i1 %cmp86, label %lor.end, label %lor.lhs.false87, !dbg !3968

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %58 = load i32, i32* %src_mode, align 4, !dbg !3969
  %and88 = and i32 %58, 61440, !dbg !3969
  %cmp89 = icmp eq i32 %and88, 40960, !dbg !3969
  br i1 %cmp89, label %lor.end, label %lor.lhs.false90, !dbg !3970

lor.lhs.false90:                                  ; preds = %lor.lhs.false87, %if.then79
  %59 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3971
  %move_mode91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %59, i32 0, i32 9, !dbg !3972, !ctir !3461
  %60 = load i8, i8* %move_mode91, align 8, !dbg !3972
  %tobool92 = trunc i8 %60 to i1, !dbg !3972, !ctir !142
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !3973

lor.lhs.false93:                                  ; preds = %lor.lhs.false90
  %61 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3974
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 29, !dbg !3975, !ctir !3461
  %62 = load i8, i8* %symbolic_link, align 4, !dbg !3975
  %tobool94 = trunc i8 %62 to i1, !dbg !3975, !ctir !142
  br i1 %tobool94, label %lor.end, label %lor.lhs.false95, !dbg !3976

lor.lhs.false95:                                  ; preds = %lor.lhs.false93
  %63 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3977
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %63, i32 0, i32 8, !dbg !3978, !ctir !3461
  %64 = load i8, i8* %hard_link, align 1, !dbg !3978
  %tobool96 = trunc i8 %64 to i1, !dbg !3978, !ctir !142
  br i1 %tobool96, label %lor.end, label %lor.lhs.false97, !dbg !3979

lor.lhs.false97:                                  ; preds = %lor.lhs.false95
  %65 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3980
  %backup_type98 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %65, i32 0, i32 0, !dbg !3981, !ctir !3461
  %66 = load i32, i32* %backup_type98, align 8, !dbg !3981, !ctir !68
  %cmp99 = icmp ne i32 %66, 0, !dbg !3982
  br i1 %cmp99, label %lor.end, label %lor.rhs, !dbg !3983

lor.rhs:                                          ; preds = %lor.lhs.false97
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3984
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 6, !dbg !3985, !ctir !3461
  %68 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !3985
  %tobool100 = trunc i8 %68 to i1, !dbg !3985, !ctir !142
  br label %lor.end, !dbg !3983

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false97, %lor.lhs.false95, %lor.lhs.false93, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %land.lhs.true82
  %69 = phi i1 [ true, %lor.lhs.false97 ], [ true, %lor.lhs.false95 ], [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false90 ], [ true, %lor.lhs.false87 ], [ true, %lor.lhs.false84 ], [ true, %land.lhs.true82 ], [ %tobool100, %lor.rhs ]
  %frombool101 = zext i1 %69 to i8, !dbg !3961
  store i8 %frombool101, i8* %use_lstat, align 1, !dbg !3961
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !3986, metadata !DIExpression()), !dbg !3987
  %70 = load i8, i8* %use_lstat, align 1, !dbg !3988
  %tobool102 = trunc i8 %70 to i1, !dbg !3988
  %71 = zext i1 %tobool102 to i64, !dbg !3988
  %cond103 = select i1 %tobool102, i32 256, i32 0, !dbg !3988
  store i32 %cond103, i32* %fstatat_flags, align 4, !dbg !3987
  %72 = load i8*, i8** %dst_name.addr, align 8, !dbg !3989
  %73 = load i32, i32* %fstatat_flags, align 4, !dbg !3991
  %call104 = call i32 @fstatat(i32 -100, i8* %72, %struct.stat* %dst_sb, i32 %73) #9, !dbg !3992
  %cmp105 = icmp eq i32 %call104, 0, !dbg !3993
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !3994

if.then106:                                       ; preds = %lor.end
  %74 = load i8, i8* %use_lstat, align 1, !dbg !3995
  %tobool107 = trunc i8 %74 to i1, !dbg !3995
  %frombool108 = zext i1 %tobool107 to i8, !dbg !3997
  store i8 %frombool108, i8* %have_dst_lstat, align 1, !dbg !3997
  store i32 17, i32* %rename_errno, align 4, !dbg !3998
  br label %if.end124, !dbg !3999

if.else:                                          ; preds = %lor.end
  %call109 = call i32* @__errno_location() #16, !dbg !4000
  %75 = load i32, i32* %call109, align 4, !dbg !4000, !ctir !7
  %cmp110 = icmp eq i32 %75, 40, !dbg !4003
  br i1 %cmp110, label %land.lhs.true111, label %if.else114, !dbg !4004

land.lhs.true111:                                 ; preds = %if.else
  %76 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4005
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %76, i32 0, i32 7, !dbg !4006, !ctir !3461
  %77 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4006
  %tobool112 = trunc i8 %77 to i1, !dbg !4006, !ctir !142
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !4007

if.then113:                                       ; preds = %land.lhs.true111
  br label %if.end123, !dbg !4007

if.else114:                                       ; preds = %land.lhs.true111, %if.else
  %call115 = call i32* @__errno_location() #16, !dbg !4008
  %78 = load i32, i32* %call115, align 4, !dbg !4008, !ctir !7
  %cmp116 = icmp ne i32 %78, 2, !dbg !4010
  br i1 %cmp116, label %if.then117, label %if.else121, !dbg !4011

if.then117:                                       ; preds = %if.else114
  %call118 = call i32* @__errno_location() #16, !dbg !4012
  %79 = load i32, i32* %call118, align 4, !dbg !4012, !ctir !7
  %call119 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4014
  %80 = load i8*, i8** %dst_name.addr, align 8, !dbg !4015
  %call120 = call i8* @quotearg_style(i32 4, i8* %80), !dbg !4015
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %79, i8* %call119, i8* %call120), !dbg !4016
  store i1 false, i1* %retval, align 1, !dbg !4017
  br label %return, !dbg !4017

if.else121:                                       ; preds = %if.else114
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4018
  br label %if.end122

if.end122:                                        ; preds = %if.else121
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then113
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then106
  br label %if.end125, !dbg !4019

if.end125:                                        ; preds = %if.end124, %land.lhs.true76
  %81 = load i32, i32* %rename_errno, align 4, !dbg !4020
  %cmp126 = icmp eq i32 %81, 17, !dbg !4022
  br i1 %cmp126, label %if.then127, label %if.end347, !dbg !4023

if.then127:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4024, metadata !DIExpression()), !dbg !4026
  store i8 0, i8* %return_now, align 1, !dbg !4026
  %82 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4027
  %interactive128 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %82, i32 0, i32 2, !dbg !4029, !ctir !3461
  %83 = load i32, i32* %interactive128, align 8, !dbg !4029, !ctir !83
  %cmp129 = icmp ne i32 %83, 2, !dbg !4030
  br i1 %cmp129, label %land.lhs.true130, label %if.end136, !dbg !4031

land.lhs.true130:                                 ; preds = %if.then127
  %84 = load i8*, i8** %src_name.addr, align 8, !dbg !4032
  %85 = load i8*, i8** %dst_name.addr, align 8, !dbg !4033
  %86 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4034
  %call131 = call zeroext i1 @same_file_ok(i8* %84, %struct.stat* %src_sb, i8* %85, %struct.stat* %dst_sb, %struct.cp_options* %86, i8* %return_now), !dbg !4035
  br i1 %call131, label %if.end136, label %if.then132, !dbg !4036

if.then132:                                       ; preds = %land.lhs.true130
  %call133 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.106, i64 0, i64 0)) #9, !dbg !4037
  %87 = load i8*, i8** %src_name.addr, align 8, !dbg !4039
  %call134 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %87), !dbg !4039
  %88 = load i8*, i8** %dst_name.addr, align 8, !dbg !4040
  %call135 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %88), !dbg !4040
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call133, i8* %call134, i8* %call135), !dbg !4041
  store i1 false, i1* %retval, align 1, !dbg !4042
  br label %return, !dbg !4042

if.end136:                                        ; preds = %land.lhs.true130, %if.then127
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4043
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 30, !dbg !4045, !ctir !3461
  %90 = load i8, i8* %update, align 1, !dbg !4045
  %tobool137 = trunc i8 %90 to i1, !dbg !4045, !ctir !142
  br i1 %tobool137, label %land.lhs.true138, label %if.end167, !dbg !4046

land.lhs.true138:                                 ; preds = %if.end136
  %91 = load i32, i32* %src_mode, align 4, !dbg !4047
  %and139 = and i32 %91, 61440, !dbg !4047
  %cmp140 = icmp eq i32 %and139, 16384, !dbg !4047
  br i1 %cmp140, label %if.end167, label %if.then141, !dbg !4048

if.then141:                                       ; preds = %land.lhs.true138
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4049, metadata !DIExpression()), !dbg !4051
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4052
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 16, !dbg !4053, !ctir !3461
  %93 = load i8, i8* %preserve_timestamps, align 1, !dbg !4053
  %tobool142 = trunc i8 %93 to i1, !dbg !4053, !ctir !142
  br i1 %tobool142, label %land.rhs, label %land.end148, !dbg !4054

land.rhs:                                         ; preds = %if.then141
  %94 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4055
  %move_mode143 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 9, !dbg !4056, !ctir !3461
  %95 = load i8, i8* %move_mode143, align 8, !dbg !4056
  %tobool144 = trunc i8 %95 to i1, !dbg !4056, !ctir !142
  br i1 %tobool144, label %land.rhs145, label %land.end, !dbg !4057

land.rhs145:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4058, !ctir !462
  %96 = load i64, i64* %st_dev, align 8, !dbg !4058, !ctir !452
  %st_dev146 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4059, !ctir !462
  %97 = load i64, i64* %st_dev146, align 8, !dbg !4059, !ctir !452
  %cmp147 = icmp eq i64 %96, %97, !dbg !4060
  br label %land.end

land.end:                                         ; preds = %land.rhs145, %land.rhs
  %98 = phi i1 [ false, %land.rhs ], [ %cmp147, %land.rhs145 ], !dbg !4061
  %lnot = xor i1 %98, true, !dbg !4062
  br label %land.end148

land.end148:                                      ; preds = %land.end, %if.then141
  %99 = phi i1 [ false, %if.then141 ], [ %lnot, %land.end ], !dbg !4061
  %100 = zext i1 %99 to i64, !dbg !4063
  %cond149 = select i1 %99, i32 1, i32 0, !dbg !4063
  store i32 %cond149, i32* %options, align 4, !dbg !4051
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !4064
  %102 = load i32, i32* %options, align 4, !dbg !4066
  %call150 = call i32 @utimecmp(i8* %101, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %102), !dbg !4067
  %cmp151 = icmp sle i32 0, %call150, !dbg !4068
  br i1 %cmp151, label %if.then152, label %if.end166, !dbg !4069

if.then152:                                       ; preds = %land.end148
  %103 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4070
  %tobool153 = icmp ne i8* %103, null, !dbg !4070
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !4073

if.then154:                                       ; preds = %if.then152
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4074
  store i8 1, i8* %104, align 1, !dbg !4075, !ctir !142
  br label %if.end155, !dbg !4076

if.end155:                                        ; preds = %if.then154, %if.then152
  %105 = load i8*, i8** %dst_name.addr, align 8, !dbg !4077
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4078, !ctir !462
  %106 = load i64, i64* %st_ino, align 8, !dbg !4078, !ctir !453
  %st_dev156 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4079, !ctir !462
  %107 = load i64, i64* %st_dev156, align 8, !dbg !4079, !ctir !452
  %call157 = call i8* @remember_copied(i8* %105, i64 %106, i64 %107), !dbg !4080
  store i8* %call157, i8** %earlier_file, align 8, !dbg !4081
  %108 = load i8*, i8** %earlier_file, align 8, !dbg !4082
  %tobool158 = icmp ne i8* %108, null, !dbg !4082
  br i1 %tobool158, label %if.then159, label %if.end165, !dbg !4084

if.then159:                                       ; preds = %if.end155
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4085
  %110 = load i8*, i8** %dst_name.addr, align 8, !dbg !4088
  %111 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4089
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %111, i32 0, i32 31, !dbg !4090, !ctir !3461
  %112 = load i8, i8* %verbose, align 2, !dbg !4090
  %tobool160 = trunc i8 %112 to i1, !dbg !4090, !ctir !142
  %113 = load i8, i8* %dereference69, align 1, !dbg !4091
  %tobool161 = trunc i8 %113 to i1, !dbg !4091
  %call162 = call zeroext i1 @create_hard_link(i8* %109, i8* %110, i1 zeroext true, i1 zeroext %tobool160, i1 zeroext %tobool161), !dbg !4092
  br i1 %call162, label %if.end164, label %if.then163, !dbg !4093

if.then163:                                       ; preds = %if.then159
  br label %un_backup, !dbg !4094

if.end164:                                        ; preds = %if.then159
  br label %if.end165, !dbg !4096

if.end165:                                        ; preds = %if.end164, %if.end155
  store i1 true, i1* %retval, align 1, !dbg !4097
  br label %return, !dbg !4097

if.end166:                                        ; preds = %land.end148
  br label %if.end167, !dbg !4098

if.end167:                                        ; preds = %if.end166, %land.lhs.true138, %if.end136
  %114 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4099
  %move_mode168 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %114, i32 0, i32 9, !dbg !4101, !ctir !3461
  %115 = load i8, i8* %move_mode168, align 8, !dbg !4101
  %tobool169 = trunc i8 %115 to i1, !dbg !4101, !ctir !142
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !4102

if.then170:                                       ; preds = %if.end167
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4103
  %117 = load i8*, i8** %dst_name.addr, align 8, !dbg !4106
  %call171 = call zeroext i1 @abandon_move(%struct.cp_options* %116, i8* %117, %struct.stat* %dst_sb), !dbg !4107
  br i1 %call171, label %if.then172, label %if.end176, !dbg !4108

if.then172:                                       ; preds = %if.then170
  %118 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4109
  %tobool173 = icmp ne i8* %118, null, !dbg !4109
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !4112

if.then174:                                       ; preds = %if.then172
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4113
  store i8 1, i8* %119, align 1, !dbg !4114, !ctir !142
  br label %if.end175, !dbg !4115

if.end175:                                        ; preds = %if.then174, %if.then172
  store i1 true, i1* %retval, align 1, !dbg !4116
  br label %return, !dbg !4116

if.end176:                                        ; preds = %if.then170
  br label %if.end190, !dbg !4117

if.else177:                                       ; preds = %if.end167
  %120 = load i32, i32* %src_mode, align 4, !dbg !4118
  %and178 = and i32 %120, 61440, !dbg !4118
  %cmp179 = icmp eq i32 %and178, 16384, !dbg !4118
  br i1 %cmp179, label %if.end189, label %land.lhs.true180, !dbg !4121

land.lhs.true180:                                 ; preds = %if.else177
  %121 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4122
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %121, i32 0, i32 2, !dbg !4123, !ctir !3461
  %122 = load i32, i32* %interactive181, align 8, !dbg !4123, !ctir !83
  %cmp182 = icmp eq i32 %122, 2, !dbg !4124
  br i1 %cmp182, label %if.then188, label %lor.lhs.false183, !dbg !4125

lor.lhs.false183:                                 ; preds = %land.lhs.true180
  %123 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4126
  %interactive184 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %123, i32 0, i32 2, !dbg !4127, !ctir !3461
  %124 = load i32, i32* %interactive184, align 8, !dbg !4127, !ctir !83
  %cmp185 = icmp eq i32 %124, 3, !dbg !4128
  br i1 %cmp185, label %land.lhs.true186, label %if.end189, !dbg !4129

land.lhs.true186:                                 ; preds = %lor.lhs.false183
  %125 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4130
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !4131
  %call187 = call zeroext i1 @overwrite_ok(%struct.cp_options* %125, i8* %126, %struct.stat* %dst_sb), !dbg !4132
  br i1 %call187, label %if.end189, label %if.then188, !dbg !4133

if.then188:                                       ; preds = %land.lhs.true186, %land.lhs.true180
  store i1 true, i1* %retval, align 1, !dbg !4134
  br label %return, !dbg !4134

if.end189:                                        ; preds = %land.lhs.true186, %lor.lhs.false183, %if.else177
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end176
  %127 = load i8, i8* %return_now, align 1, !dbg !4135
  %tobool191 = trunc i8 %127 to i1, !dbg !4135
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4137

if.then192:                                       ; preds = %if.end190
  store i1 true, i1* %retval, align 1, !dbg !4138
  br label %return, !dbg !4138

if.end193:                                        ; preds = %if.end190
  %st_mode194 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4139, !ctir !462
  %128 = load i32, i32* %st_mode194, align 8, !dbg !4139, !ctir !140
  %and195 = and i32 %128, 61440, !dbg !4139
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4139
  br i1 %cmp196, label %if.end224, label %if.then197, !dbg !4141

if.then197:                                       ; preds = %if.end193
  %129 = load i32, i32* %src_mode, align 4, !dbg !4142
  %and198 = and i32 %129, 61440, !dbg !4142
  %cmp199 = icmp eq i32 %and198, 16384, !dbg !4142
  br i1 %cmp199, label %if.then200, label %if.end212, !dbg !4145

if.then200:                                       ; preds = %if.then197
  %130 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4146
  %move_mode201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %130, i32 0, i32 9, !dbg !4149, !ctir !3461
  %131 = load i8, i8* %move_mode201, align 8, !dbg !4149
  %tobool202 = trunc i8 %131 to i1, !dbg !4149, !ctir !142
  br i1 %tobool202, label %land.lhs.true203, label %if.else207, !dbg !4150

land.lhs.true203:                                 ; preds = %if.then200
  %132 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4151
  %backup_type204 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %132, i32 0, i32 0, !dbg !4152, !ctir !3461
  %133 = load i32, i32* %backup_type204, align 8, !dbg !4152, !ctir !68
  %cmp205 = icmp ne i32 %133, 0, !dbg !4153
  br i1 %cmp205, label %if.then206, label %if.else207, !dbg !4154

if.then206:                                       ; preds = %land.lhs.true203
  br label %if.end211, !dbg !4155

if.else207:                                       ; preds = %land.lhs.true203, %if.then200
  %call208 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.107, i64 0, i64 0)) #9, !dbg !4157
  %134 = load i8*, i8** %dst_name.addr, align 8, !dbg !4159
  %call209 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %134), !dbg !4159
  %135 = load i8*, i8** %src_name.addr, align 8, !dbg !4160
  %call210 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %135), !dbg !4160
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call208, i8* %call209, i8* %call210), !dbg !4161
  store i1 false, i1* %retval, align 1, !dbg !4162
  br label %return, !dbg !4162

if.end211:                                        ; preds = %if.then206
  br label %if.end212, !dbg !4163

if.end212:                                        ; preds = %if.end211, %if.then197
  %136 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4164
  %tobool213 = trunc i8 %136 to i1, !dbg !4164
  br i1 %tobool213, label %land.lhs.true214, label %if.end223, !dbg !4166

land.lhs.true214:                                 ; preds = %if.end212
  %137 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4167
  %backup_type215 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %137, i32 0, i32 0, !dbg !4168, !ctir !3461
  %138 = load i32, i32* %backup_type215, align 8, !dbg !4168, !ctir !68
  %cmp216 = icmp ne i32 %138, 3, !dbg !4169
  br i1 %cmp216, label %land.lhs.true217, label %if.end223, !dbg !4170

land.lhs.true217:                                 ; preds = %land.lhs.true214
  %139 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4171
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %139, i32 0, i32 37, !dbg !4172, !ctir !3461
  %140 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4172, !ctir !175
  %141 = load i8*, i8** %dst_name.addr, align 8, !dbg !4173
  %call218 = call zeroext i1 @seen_file(%struct.hash_table* %140, i8* %141, %struct.stat* %dst_sb), !dbg !4174
  br i1 %call218, label %if.then219, label %if.end223, !dbg !4175

if.then219:                                       ; preds = %land.lhs.true217
  %call220 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.108, i64 0, i64 0)) #9, !dbg !4176
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4178
  %call221 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %142), !dbg !4178
  %143 = load i8*, i8** %src_name.addr, align 8, !dbg !4179
  %call222 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %143), !dbg !4179
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call220, i8* %call221, i8* %call222), !dbg !4180
  store i1 false, i1* %retval, align 1, !dbg !4181
  br label %return, !dbg !4181

if.end223:                                        ; preds = %land.lhs.true217, %land.lhs.true214, %if.end212
  br label %if.end224, !dbg !4182

if.end224:                                        ; preds = %if.end223, %if.end193
  %144 = load i32, i32* %src_mode, align 4, !dbg !4183
  %and225 = and i32 %144, 61440, !dbg !4183
  %cmp226 = icmp eq i32 %and225, 16384, !dbg !4183
  br i1 %cmp226, label %if.end243, label %if.then227, !dbg !4185

if.then227:                                       ; preds = %if.end224
  %st_mode228 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4186, !ctir !462
  %145 = load i32, i32* %st_mode228, align 8, !dbg !4186, !ctir !140
  %and229 = and i32 %145, 61440, !dbg !4186
  %cmp230 = icmp eq i32 %and229, 16384, !dbg !4186
  br i1 %cmp230, label %if.then231, label %if.end242, !dbg !4189

if.then231:                                       ; preds = %if.then227
  %146 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4190
  %move_mode232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %146, i32 0, i32 9, !dbg !4193, !ctir !3461
  %147 = load i8, i8* %move_mode232, align 8, !dbg !4193
  %tobool233 = trunc i8 %147 to i1, !dbg !4193, !ctir !142
  br i1 %tobool233, label %land.lhs.true234, label %if.else238, !dbg !4194

land.lhs.true234:                                 ; preds = %if.then231
  %148 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4195
  %backup_type235 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %148, i32 0, i32 0, !dbg !4196, !ctir !3461
  %149 = load i32, i32* %backup_type235, align 8, !dbg !4196, !ctir !68
  %cmp236 = icmp ne i32 %149, 0, !dbg !4197
  br i1 %cmp236, label %if.then237, label %if.else238, !dbg !4198

if.then237:                                       ; preds = %land.lhs.true234
  br label %if.end241, !dbg !4199

if.else238:                                       ; preds = %land.lhs.true234, %if.then231
  %call239 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.109, i64 0, i64 0)) #9, !dbg !4201
  %150 = load i8*, i8** %dst_name.addr, align 8, !dbg !4203
  %call240 = call i8* @quotearg_style(i32 4, i8* %150), !dbg !4203
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call239, i8* %call240), !dbg !4204
  store i1 false, i1* %retval, align 1, !dbg !4205
  br label %return, !dbg !4205

if.end241:                                        ; preds = %if.then237
  br label %if.end242, !dbg !4206

if.end242:                                        ; preds = %if.end241, %if.then227
  br label %if.end243, !dbg !4207

if.end243:                                        ; preds = %if.end242, %if.end224
  %151 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4208
  %move_mode244 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %151, i32 0, i32 9, !dbg !4210, !ctir !3461
  %152 = load i8, i8* %move_mode244, align 8, !dbg !4210
  %tobool245 = trunc i8 %152 to i1, !dbg !4210, !ctir !142
  br i1 %tobool245, label %if.then246, label %if.end262, !dbg !4211

if.then246:                                       ; preds = %if.end243
  %st_mode247 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4212, !ctir !462
  %153 = load i32, i32* %st_mode247, align 8, !dbg !4212, !ctir !140
  %and248 = and i32 %153, 61440, !dbg !4212
  %cmp249 = icmp eq i32 %and248, 16384, !dbg !4212
  br i1 %cmp249, label %land.lhs.true250, label %if.end261, !dbg !4215

land.lhs.true250:                                 ; preds = %if.then246
  %st_mode251 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4216, !ctir !462
  %154 = load i32, i32* %st_mode251, align 8, !dbg !4216, !ctir !140
  %and252 = and i32 %154, 61440, !dbg !4216
  %cmp253 = icmp eq i32 %and252, 16384, !dbg !4216
  br i1 %cmp253, label %if.end261, label %land.lhs.true254, !dbg !4217

land.lhs.true254:                                 ; preds = %land.lhs.true250
  %155 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4218
  %backup_type255 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %155, i32 0, i32 0, !dbg !4219, !ctir !3461
  %156 = load i32, i32* %backup_type255, align 8, !dbg !4219, !ctir !68
  %cmp256 = icmp eq i32 %156, 0, !dbg !4220
  br i1 %cmp256, label %if.then257, label %if.end261, !dbg !4221

if.then257:                                       ; preds = %land.lhs.true254
  %call258 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.110, i64 0, i64 0)) #9, !dbg !4222
  %157 = load i8*, i8** %src_name.addr, align 8, !dbg !4224
  %call259 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %157), !dbg !4224
  %158 = load i8*, i8** %dst_name.addr, align 8, !dbg !4225
  %call260 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4225
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call258, i8* %call259, i8* %call260), !dbg !4226
  store i1 false, i1* %retval, align 1, !dbg !4227
  br label %return, !dbg !4227

if.end261:                                        ; preds = %land.lhs.true254, %land.lhs.true250, %if.then246
  br label %if.end262, !dbg !4228

if.end262:                                        ; preds = %if.end261, %if.end243
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4229, metadata !DIExpression()), !dbg !4230
  %159 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4231
  %backup_type263 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %159, i32 0, i32 0, !dbg !4233, !ctir !3461
  %160 = load i32, i32* %backup_type263, align 8, !dbg !4233, !ctir !68
  %cmp264 = icmp ne i32 %160, 0, !dbg !4234
  br i1 %cmp264, label %land.lhs.true265, label %if.else306, !dbg !4235

land.lhs.true265:                                 ; preds = %if.end262
  %161 = load i8*, i8** %src_name.addr, align 8, !dbg !4236
  %call266 = call i8* @last_component(i8* %161) #14, !dbg !4237
  store i8* %call266, i8** %srcbase, align 8, !dbg !4238
  %call267 = call zeroext i1 @dot_or_dotdot(i8* %call266), !dbg !4239
  br i1 %call267, label %if.else306, label %land.lhs.true268, !dbg !4240

land.lhs.true268:                                 ; preds = %land.lhs.true265
  %162 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4241
  %move_mode269 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %162, i32 0, i32 9, !dbg !4242, !ctir !3461
  %163 = load i8, i8* %move_mode269, align 8, !dbg !4242
  %tobool270 = trunc i8 %163 to i1, !dbg !4242, !ctir !142
  br i1 %tobool270, label %if.then275, label %lor.lhs.false271, !dbg !4243

lor.lhs.false271:                                 ; preds = %land.lhs.true268
  %st_mode272 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4244, !ctir !462
  %164 = load i32, i32* %st_mode272, align 8, !dbg !4244, !ctir !140
  %and273 = and i32 %164, 61440, !dbg !4244
  %cmp274 = icmp eq i32 %and273, 16384, !dbg !4244
  br i1 %cmp274, label %if.else306, label %if.then275, !dbg !4245

if.then275:                                       ; preds = %lor.lhs.false271, %land.lhs.true268
  %165 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4246
  %backup_type276 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %165, i32 0, i32 0, !dbg !4249, !ctir !3461
  %166 = load i32, i32* %backup_type276, align 8, !dbg !4249, !ctir !68
  %cmp277 = icmp ne i32 %166, 3, !dbg !4250
  br i1 %cmp277, label %land.lhs.true278, label %if.end291, !dbg !4251

land.lhs.true278:                                 ; preds = %if.then275
  %167 = load i8*, i8** %srcbase, align 8, !dbg !4252
  %168 = load i8*, i8** %dst_name.addr, align 8, !dbg !4253
  %call279 = call zeroext i1 @source_is_dst_backup(i8* %167, %struct.stat* %src_sb, i8* %168), !dbg !4254
  br i1 %call279, label %if.then280, label %if.end291, !dbg !4255

if.then280:                                       ; preds = %land.lhs.true278
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4256, metadata !DIExpression()), !dbg !4258
  %169 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4259
  %move_mode281 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %169, i32 0, i32 9, !dbg !4260, !ctir !3461
  %170 = load i8, i8* %move_mode281, align 8, !dbg !4260
  %tobool282 = trunc i8 %170 to i1, !dbg !4260, !ctir !142
  br i1 %tobool282, label %cond.true283, label %cond.false285, !dbg !4259

cond.true283:                                     ; preds = %if.then280
  %call284 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.111, i64 0, i64 0)) #9, !dbg !4261
  br label %cond.end287, !dbg !4259

cond.false285:                                    ; preds = %if.then280
  %call286 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.112, i64 0, i64 0)) #9, !dbg !4262
  br label %cond.end287, !dbg !4259

cond.end287:                                      ; preds = %cond.false285, %cond.true283
  %cond288 = phi i8* [ %call284, %cond.true283 ], [ %call286, %cond.false285 ], !dbg !4259
  store i8* %cond288, i8** %fmt, align 8, !dbg !4263
  %171 = load i8*, i8** %fmt, align 8, !dbg !4264
  %172 = load i8*, i8** %dst_name.addr, align 8, !dbg !4265
  %call289 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %172), !dbg !4265
  %173 = load i8*, i8** %src_name.addr, align 8, !dbg !4266
  %call290 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %173), !dbg !4266
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %171, i8* %call289, i8* %call290), !dbg !4267
  store i1 false, i1* %retval, align 1, !dbg !4268
  br label %return, !dbg !4268

if.end291:                                        ; preds = %land.lhs.true278, %if.then275
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4269, metadata !DIExpression()), !dbg !4270
  %174 = load i8*, i8** %dst_name.addr, align 8, !dbg !4271
  %175 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4272
  %backup_type292 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %175, i32 0, i32 0, !dbg !4273, !ctir !3461
  %176 = load i32, i32* %backup_type292, align 8, !dbg !4273, !ctir !68
  %call293 = call i8* @backup_file_rename(i32 -100, i8* %174, i32 %176), !dbg !4274
  store i8* %call293, i8** %tmp_backup, align 8, !dbg !4270
  %177 = load i8*, i8** %tmp_backup, align 8, !dbg !4275
  %tobool294 = icmp ne i8* %177, null, !dbg !4275
  br i1 %tobool294, label %if.then295, label %if.else297, !dbg !4277

if.then295:                                       ; preds = %if.end291
  br label %do.body, !dbg !4278

do.body:                                          ; preds = %if.then295
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4280, metadata !DIExpression()), !dbg !4283
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4283
  store i8* %178, i8** %__old, align 8, !dbg !4283
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4284, metadata !DIExpression()), !dbg !4283
  %179 = load i8*, i8** %__old, align 8, !dbg !4283
  %call296 = call i64 @strlen(i8* %179) #14, !dbg !4283
  %add = add i64 %call296, 1, !dbg !4283
  store i64 %add, i64* %__len, align 8, !dbg !4283
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4285, metadata !DIExpression()), !dbg !4283
  %180 = load i64, i64* %__len, align 8, !dbg !4283
  %181 = alloca i8, i64 %180, align 16, !dbg !4283
  store i8* %181, i8** %__new, align 8, !dbg !4283
  %182 = load i8*, i8** %__new, align 8, !dbg !4283
  %183 = load i8*, i8** %__old, align 8, !dbg !4283
  %184 = load i64, i64* %__len, align 8, !dbg !4283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %183, i64 %184, i1 false), !dbg !4283
  store i8* %182, i8** %tmp, align 8, !dbg !4283
  %185 = load i8*, i8** %tmp, align 8, !dbg !4283
  store i8* %185, i8** %dst_backup, align 8, !dbg !4286
  br label %do.end, !dbg !4286

do.end:                                           ; preds = %do.body
  %186 = load i8*, i8** %tmp_backup, align 8, !dbg !4287
  call void @free(i8* %186) #9, !dbg !4288
  br label %if.end305, !dbg !4289

if.else297:                                       ; preds = %if.end291
  %call298 = call i32* @__errno_location() #16, !dbg !4290
  %187 = load i32, i32* %call298, align 4, !dbg !4290, !ctir !7
  %cmp299 = icmp ne i32 %187, 2, !dbg !4292
  br i1 %cmp299, label %if.then300, label %if.end304, !dbg !4293

if.then300:                                       ; preds = %if.else297
  %call301 = call i32* @__errno_location() #16, !dbg !4294
  %188 = load i32, i32* %call301, align 4, !dbg !4294, !ctir !7
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.113, i64 0, i64 0)) #9, !dbg !4296
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !4297
  %call303 = call i8* @quotearg_style(i32 4, i8* %189), !dbg !4297
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %188, i8* %call302, i8* %call303), !dbg !4298
  store i1 false, i1* %retval, align 1, !dbg !4299
  br label %return, !dbg !4299

if.end304:                                        ; preds = %if.else297
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4300
  br label %if.end346, !dbg !4301

if.else306:                                       ; preds = %lor.lhs.false271, %land.lhs.true265, %if.end262
  %st_mode307 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4302, !ctir !462
  %190 = load i32, i32* %st_mode307, align 8, !dbg !4302, !ctir !140
  %and308 = and i32 %190, 61440, !dbg !4302
  %cmp309 = icmp eq i32 %and308, 16384, !dbg !4302
  br i1 %cmp309, label %if.end345, label %land.lhs.true310, !dbg !4304

land.lhs.true310:                                 ; preds = %if.else306
  %191 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4305
  %move_mode311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %191, i32 0, i32 9, !dbg !4306, !ctir !3461
  %192 = load i8, i8* %move_mode311, align 8, !dbg !4306
  %tobool312 = trunc i8 %192 to i1, !dbg !4306, !ctir !142
  br i1 %tobool312, label %if.end345, label %land.lhs.true313, !dbg !4307

land.lhs.true313:                                 ; preds = %land.lhs.true310
  %193 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4308
  %unlink_dest_before_opening314 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %193, i32 0, i32 6, !dbg !4309, !ctir !3461
  %194 = load i8, i8* %unlink_dest_before_opening314, align 1, !dbg !4309
  %tobool315 = trunc i8 %194 to i1, !dbg !4309, !ctir !142
  br i1 %tobool315, label %if.then327, label %lor.lhs.false316, !dbg !4310

lor.lhs.false316:                                 ; preds = %land.lhs.true313
  %195 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4311
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %195, i32 0, i32 19, !dbg !4312, !ctir !3461
  %196 = load i8, i8* %preserve_links, align 2, !dbg !4312
  %tobool317 = trunc i8 %196 to i1, !dbg !4312, !ctir !142
  br i1 %tobool317, label %land.lhs.true318, label %lor.lhs.false320, !dbg !4313

land.lhs.true318:                                 ; preds = %lor.lhs.false316
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !4314, !ctir !462
  %197 = load i64, i64* %st_nlink, align 8, !dbg !4314, !ctir !460
  %cmp319 = icmp ult i64 1, %197, !dbg !4315
  br i1 %cmp319, label %if.then327, label %lor.lhs.false320, !dbg !4316

lor.lhs.false320:                                 ; preds = %land.lhs.true318, %lor.lhs.false316
  %198 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4317
  %dereference321 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %198, i32 0, i32 1, !dbg !4318, !ctir !3461
  %199 = load i32, i32* %dereference321, align 4, !dbg !4318, !ctir !76
  %cmp322 = icmp eq i32 %199, 2, !dbg !4319
  br i1 %cmp322, label %land.lhs.true323, label %if.end345, !dbg !4320

land.lhs.true323:                                 ; preds = %lor.lhs.false320
  %st_mode324 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4321, !ctir !462
  %200 = load i32, i32* %st_mode324, align 8, !dbg !4321, !ctir !140
  %and325 = and i32 %200, 61440, !dbg !4321
  %cmp326 = icmp eq i32 %and325, 32768, !dbg !4321
  br i1 %cmp326, label %if.end345, label %if.then327, !dbg !4322

if.then327:                                       ; preds = %land.lhs.true323, %land.lhs.true318, %land.lhs.true313
  %201 = load i8*, i8** %dst_name.addr, align 8, !dbg !4323
  %call328 = call i32 @unlink(i8* %201) #9, !dbg !4326
  %cmp329 = icmp ne i32 %call328, 0, !dbg !4327
  br i1 %cmp329, label %land.lhs.true330, label %if.end337, !dbg !4328

land.lhs.true330:                                 ; preds = %if.then327
  %call331 = call i32* @__errno_location() #16, !dbg !4329
  %202 = load i32, i32* %call331, align 4, !dbg !4329, !ctir !7
  %cmp332 = icmp ne i32 %202, 2, !dbg !4330
  br i1 %cmp332, label %if.then333, label %if.end337, !dbg !4331

if.then333:                                       ; preds = %land.lhs.true330
  %call334 = call i32* @__errno_location() #16, !dbg !4332
  %203 = load i32, i32* %call334, align 4, !dbg !4332, !ctir !7
  %call335 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !4334
  %204 = load i8*, i8** %dst_name.addr, align 8, !dbg !4335
  %call336 = call i8* @quotearg_style(i32 4, i8* %204), !dbg !4335
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %203, i8* %call335, i8* %call336), !dbg !4336
  store i1 false, i1* %retval, align 1, !dbg !4337
  br label %return, !dbg !4337

if.end337:                                        ; preds = %land.lhs.true330, %if.then327
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4338
  %205 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4339
  %verbose338 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %205, i32 0, i32 31, !dbg !4341, !ctir !3461
  %206 = load i8, i8* %verbose338, align 2, !dbg !4341
  %tobool339 = trunc i8 %206 to i1, !dbg !4341, !ctir !142
  br i1 %tobool339, label %if.then340, label %if.end344, !dbg !4342

if.then340:                                       ; preds = %if.end337
  %call341 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !4343
  %207 = load i8*, i8** %dst_name.addr, align 8, !dbg !4344
  %call342 = call i8* @quotearg_style(i32 4, i8* %207), !dbg !4344
  %call343 = call i32 (i8*, ...) @printf(i8* %call341, i8* %call342), !dbg !4345
  br label %if.end344, !dbg !4345

if.end344:                                        ; preds = %if.then340, %if.end337
  br label %if.end345, !dbg !4346

if.end345:                                        ; preds = %if.end344, %land.lhs.true323, %lor.lhs.false320, %land.lhs.true310, %if.else306
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.end305
  br label %if.end347, !dbg !4347

if.end347:                                        ; preds = %if.end346, %if.end125
  br label %if.end348, !dbg !4348

if.end348:                                        ; preds = %if.end347, %if.end68
  %208 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4349
  %tobool349 = trunc i8 %208 to i1, !dbg !4349
  br i1 %tobool349, label %land.lhs.true350, label %if.end382, !dbg !4351

land.lhs.true350:                                 ; preds = %if.end348
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4352
  %dest_info351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 37, !dbg !4353, !ctir !3461
  %210 = load %struct.hash_table*, %struct.hash_table** %dest_info351, align 8, !dbg !4353, !ctir !175
  %tobool352 = icmp ne %struct.hash_table* %210, null, !dbg !4352
  br i1 %tobool352, label %land.lhs.true353, label %if.end382, !dbg !4354

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %211 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4355
  %move_mode354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %211, i32 0, i32 9, !dbg !4356, !ctir !3461
  %212 = load i8, i8* %move_mode354, align 8, !dbg !4356
  %tobool355 = trunc i8 %212 to i1, !dbg !4356, !ctir !142
  br i1 %tobool355, label %if.end382, label %land.lhs.true356, !dbg !4357

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %213 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4358
  %backup_type357 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %213, i32 0, i32 0, !dbg !4359, !ctir !3461
  %214 = load i32, i32* %backup_type357, align 8, !dbg !4359, !ctir !68
  %cmp358 = icmp eq i32 %214, 0, !dbg !4360
  br i1 %cmp358, label %if.then359, label %if.end382, !dbg !4361

if.then359:                                       ; preds = %land.lhs.true356
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !4362, metadata !DIExpression()), !dbg !4364
  store i8 1, i8* %lstat_ok, align 1, !dbg !4364
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !4367, metadata !DIExpression()), !dbg !4368
  %215 = load i8, i8* %have_dst_lstat, align 1, !dbg !4369
  %tobool360 = trunc i8 %215 to i1, !dbg !4369
  br i1 %tobool360, label %if.then361, label %if.else362, !dbg !4371

if.then361:                                       ; preds = %if.then359
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !4372
  br label %if.end368, !dbg !4373

if.else362:                                       ; preds = %if.then359
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !4374
  %call363 = call i32 @lstat(i8* %216, %struct.stat* %tmp_buf) #9, !dbg !4377
  %cmp364 = icmp eq i32 %call363, 0, !dbg !4378
  br i1 %cmp364, label %if.then365, label %if.else366, !dbg !4379

if.then365:                                       ; preds = %if.else362
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !4380
  br label %if.end367, !dbg !4381

if.else366:                                       ; preds = %if.else362
  store i8 0, i8* %lstat_ok, align 1, !dbg !4382
  br label %if.end367

if.end367:                                        ; preds = %if.else366, %if.then365
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then361
  %217 = load i8, i8* %lstat_ok, align 1, !dbg !4383
  %tobool369 = trunc i8 %217 to i1, !dbg !4383
  br i1 %tobool369, label %land.lhs.true370, label %if.end381, !dbg !4385

land.lhs.true370:                                 ; preds = %if.end368
  %218 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4386
  %st_mode371 = getelementptr inbounds %struct.stat, %struct.stat* %218, i32 0, i32 3, !dbg !4386, !ctir !462
  %219 = load i32, i32* %st_mode371, align 8, !dbg !4386, !ctir !140
  %and372 = and i32 %219, 61440, !dbg !4386
  %cmp373 = icmp eq i32 %and372, 40960, !dbg !4386
  br i1 %cmp373, label %land.lhs.true374, label %if.end381, !dbg !4387

land.lhs.true374:                                 ; preds = %land.lhs.true370
  %220 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4388
  %dest_info375 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %220, i32 0, i32 37, !dbg !4389, !ctir !3461
  %221 = load %struct.hash_table*, %struct.hash_table** %dest_info375, align 8, !dbg !4389, !ctir !175
  %222 = load i8*, i8** %dst_name.addr, align 8, !dbg !4390
  %223 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4391
  %call376 = call zeroext i1 @seen_file(%struct.hash_table* %221, i8* %222, %struct.stat* %223), !dbg !4392
  br i1 %call376, label %if.then377, label %if.end381, !dbg !4393

if.then377:                                       ; preds = %land.lhs.true374
  %call378 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.116, i64 0, i64 0)) #9, !dbg !4394
  %224 = load i8*, i8** %src_name.addr, align 8, !dbg !4396
  %call379 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %224), !dbg !4396
  %225 = load i8*, i8** %dst_name.addr, align 8, !dbg !4397
  %call380 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %225), !dbg !4397
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call378, i8* %call379, i8* %call380), !dbg !4398
  store i1 false, i1* %retval, align 1, !dbg !4399
  br label %return, !dbg !4399

if.end381:                                        ; preds = %land.lhs.true374, %land.lhs.true370, %if.end368
  br label %if.end382, !dbg !4400

if.end382:                                        ; preds = %if.end381, %land.lhs.true356, %land.lhs.true353, %land.lhs.true350, %if.end348
  %226 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4401
  %verbose383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %226, i32 0, i32 31, !dbg !4403, !ctir !3461
  %227 = load i8, i8* %verbose383, align 2, !dbg !4403
  %tobool384 = trunc i8 %227 to i1, !dbg !4403, !ctir !142
  br i1 %tobool384, label %land.lhs.true385, label %if.end392, !dbg !4404

land.lhs.true385:                                 ; preds = %if.end382
  %228 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4405
  %move_mode386 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %228, i32 0, i32 9, !dbg !4406, !ctir !3461
  %229 = load i8, i8* %move_mode386, align 8, !dbg !4406
  %tobool387 = trunc i8 %229 to i1, !dbg !4406, !ctir !142
  br i1 %tobool387, label %if.end392, label %land.lhs.true388, !dbg !4407

land.lhs.true388:                                 ; preds = %land.lhs.true385
  %230 = load i32, i32* %src_mode, align 4, !dbg !4408
  %and389 = and i32 %230, 61440, !dbg !4408
  %cmp390 = icmp eq i32 %and389, 16384, !dbg !4408
  br i1 %cmp390, label %if.end392, label %if.then391, !dbg !4409

if.then391:                                       ; preds = %land.lhs.true388
  %231 = load i8*, i8** %src_name.addr, align 8, !dbg !4410
  %232 = load i8*, i8** %dst_name.addr, align 8, !dbg !4411
  %233 = load i8*, i8** %dst_backup, align 8, !dbg !4412
  call void @emit_verbose(i8* %231, i8* %232, i8* %233), !dbg !4413
  br label %if.end392, !dbg !4413

if.end392:                                        ; preds = %if.then391, %land.lhs.true388, %land.lhs.true385, %if.end382
  %234 = load i32, i32* %rename_errno, align 4, !dbg !4414
  %cmp393 = icmp eq i32 %234, 0, !dbg !4416
  br i1 %cmp393, label %if.then394, label %if.else395, !dbg !4417

if.then394:                                       ; preds = %if.end392
  store i8* null, i8** %earlier_file, align 8, !dbg !4418
  br label %if.end446, !dbg !4419

if.else395:                                       ; preds = %if.end392
  %235 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4420
  %recursive396 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %235, i32 0, i32 27, !dbg !4422, !ctir !3461
  %236 = load i8, i8* %recursive396, align 2, !dbg !4422
  %tobool397 = trunc i8 %236 to i1, !dbg !4422, !ctir !142
  br i1 %tobool397, label %land.lhs.true398, label %if.else412, !dbg !4423

land.lhs.true398:                                 ; preds = %if.else395
  %237 = load i32, i32* %src_mode, align 4, !dbg !4424
  %and399 = and i32 %237, 61440, !dbg !4424
  %cmp400 = icmp eq i32 %and399, 16384, !dbg !4424
  br i1 %cmp400, label %if.then401, label %if.else412, !dbg !4425

if.then401:                                       ; preds = %land.lhs.true398
  %238 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4426
  %tobool402 = trunc i8 %238 to i1, !dbg !4426
  br i1 %tobool402, label %if.then403, label %if.else407, !dbg !4429

if.then403:                                       ; preds = %if.then401
  %239 = load i8*, i8** %dst_name.addr, align 8, !dbg !4430
  %st_ino404 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4431, !ctir !462
  %240 = load i64, i64* %st_ino404, align 8, !dbg !4431, !ctir !453
  %st_dev405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4432, !ctir !462
  %241 = load i64, i64* %st_dev405, align 8, !dbg !4432, !ctir !452
  %call406 = call i8* @remember_copied(i8* %239, i64 %240, i64 %241), !dbg !4433
  store i8* %call406, i8** %earlier_file, align 8, !dbg !4434
  br label %if.end411, !dbg !4435

if.else407:                                       ; preds = %if.then401
  %st_ino408 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4436, !ctir !462
  %242 = load i64, i64* %st_ino408, align 8, !dbg !4436, !ctir !453
  %st_dev409 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4437, !ctir !462
  %243 = load i64, i64* %st_dev409, align 8, !dbg !4437, !ctir !452
  %call410 = call i8* @src_to_dest_lookup(i64 %242, i64 %243), !dbg !4438
  store i8* %call410, i8** %earlier_file, align 8, !dbg !4439
  br label %if.end411

if.end411:                                        ; preds = %if.else407, %if.then403
  br label %if.end445, !dbg !4440

if.else412:                                       ; preds = %land.lhs.true398, %if.else395
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4441
  %move_mode413 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 9, !dbg !4443, !ctir !3461
  %245 = load i8, i8* %move_mode413, align 8, !dbg !4443
  %tobool414 = trunc i8 %245 to i1, !dbg !4443, !ctir !142
  br i1 %tobool414, label %land.lhs.true415, label %if.else422, !dbg !4444

land.lhs.true415:                                 ; preds = %if.else412
  %st_nlink416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4445, !ctir !462
  %246 = load i64, i64* %st_nlink416, align 8, !dbg !4445, !ctir !460
  %cmp417 = icmp eq i64 %246, 1, !dbg !4446
  br i1 %cmp417, label %if.then418, label %if.else422, !dbg !4447

if.then418:                                       ; preds = %land.lhs.true415
  %st_ino419 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4448, !ctir !462
  %247 = load i64, i64* %st_ino419, align 8, !dbg !4448, !ctir !453
  %st_dev420 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4450, !ctir !462
  %248 = load i64, i64* %st_dev420, align 8, !dbg !4450, !ctir !452
  %call421 = call i8* @src_to_dest_lookup(i64 %247, i64 %248), !dbg !4451
  store i8* %call421, i8** %earlier_file, align 8, !dbg !4452
  br label %if.end444, !dbg !4453

if.else422:                                       ; preds = %land.lhs.true415, %if.else412
  %249 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4454
  %preserve_links423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %249, i32 0, i32 19, !dbg !4456, !ctir !3461
  %250 = load i8, i8* %preserve_links423, align 2, !dbg !4456
  %tobool424 = trunc i8 %250 to i1, !dbg !4456, !ctir !142
  br i1 %tobool424, label %land.lhs.true425, label %if.end443, !dbg !4457

land.lhs.true425:                                 ; preds = %if.else422
  %251 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4458
  %hard_link426 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %251, i32 0, i32 8, !dbg !4459, !ctir !3461
  %252 = load i8, i8* %hard_link426, align 1, !dbg !4459
  %tobool427 = trunc i8 %252 to i1, !dbg !4459, !ctir !142
  br i1 %tobool427, label %if.end443, label %land.lhs.true428, !dbg !4460

land.lhs.true428:                                 ; preds = %land.lhs.true425
  %st_nlink429 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4461, !ctir !462
  %253 = load i64, i64* %st_nlink429, align 8, !dbg !4461, !ctir !460
  %cmp430 = icmp ult i64 1, %253, !dbg !4462
  br i1 %cmp430, label %if.then439, label %lor.lhs.false431, !dbg !4463

lor.lhs.false431:                                 ; preds = %land.lhs.true428
  %254 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4464
  %tobool432 = trunc i8 %254 to i1, !dbg !4464
  br i1 %tobool432, label %land.lhs.true433, label %lor.lhs.false436, !dbg !4465

land.lhs.true433:                                 ; preds = %lor.lhs.false431
  %255 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4466
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %255, i32 0, i32 1, !dbg !4467, !ctir !3461
  %256 = load i32, i32* %dereference434, align 4, !dbg !4467, !ctir !76
  %cmp435 = icmp eq i32 %256, 3, !dbg !4468
  br i1 %cmp435, label %if.then439, label %lor.lhs.false436, !dbg !4469

lor.lhs.false436:                                 ; preds = %land.lhs.true433, %lor.lhs.false431
  %257 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4470
  %dereference437 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %257, i32 0, i32 1, !dbg !4471, !ctir !3461
  %258 = load i32, i32* %dereference437, align 4, !dbg !4471, !ctir !76
  %cmp438 = icmp eq i32 %258, 4, !dbg !4472
  br i1 %cmp438, label %if.then439, label %if.end443, !dbg !4473

if.then439:                                       ; preds = %lor.lhs.false436, %land.lhs.true433, %land.lhs.true428
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !4474
  %st_ino440 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4476, !ctir !462
  %260 = load i64, i64* %st_ino440, align 8, !dbg !4476, !ctir !453
  %st_dev441 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4477, !ctir !462
  %261 = load i64, i64* %st_dev441, align 8, !dbg !4477, !ctir !452
  %call442 = call i8* @remember_copied(i8* %259, i64 %260, i64 %261), !dbg !4478
  store i8* %call442, i8** %earlier_file, align 8, !dbg !4479
  br label %if.end443, !dbg !4480

if.end443:                                        ; preds = %if.then439, %lor.lhs.false436, %land.lhs.true425, %if.else422
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then418
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.end411
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then394
  %262 = load i8*, i8** %earlier_file, align 8, !dbg !4481
  %tobool447 = icmp ne i8* %262, null, !dbg !4481
  br i1 %tobool447, label %if.then448, label %if.end492, !dbg !4483

if.then448:                                       ; preds = %if.end446
  %263 = load i32, i32* %src_mode, align 4, !dbg !4484
  %and449 = and i32 %263, 61440, !dbg !4484
  %cmp450 = icmp eq i32 %and449, 16384, !dbg !4484
  br i1 %cmp450, label %if.then451, label %if.else484, !dbg !4487

if.then451:                                       ; preds = %if.then448
  %264 = load i8*, i8** %src_name.addr, align 8, !dbg !4488
  %265 = load i8*, i8** %earlier_file, align 8, !dbg !4491
  %call452 = call zeroext i1 @same_name(i8* %264, i8* %265), !dbg !4492
  br i1 %call452, label %if.then453, label %if.else457, !dbg !4493

if.then453:                                       ; preds = %if.then451
  %call454 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.117, i64 0, i64 0)) #9, !dbg !4494
  %266 = load i8*, i8** @top_level_src_name, align 8, !dbg !4496
  %call455 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %266), !dbg !4496
  %267 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4497
  %call456 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %267), !dbg !4497
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call454, i8* %call455, i8* %call456), !dbg !4498
  %268 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4499
  store i8 1, i8* %268, align 1, !dbg !4500, !ctir !142
  br label %un_backup, !dbg !4501

if.else457:                                       ; preds = %if.then451
  %269 = load i8*, i8** %dst_name.addr, align 8, !dbg !4502
  %270 = load i8*, i8** %earlier_file, align 8, !dbg !4504
  %call458 = call zeroext i1 @same_name(i8* %269, i8* %270), !dbg !4505
  br i1 %call458, label %if.then459, label %if.else468, !dbg !4506

if.then459:                                       ; preds = %if.else457
  %call460 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.118, i64 0, i64 0)) #9, !dbg !4507
  %271 = load i8*, i8** @top_level_src_name, align 8, !dbg !4509
  %call461 = call i8* @quotearg_style(i32 4, i8* %271), !dbg !4509
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call460, i8* %call461), !dbg !4510
  %272 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4511
  %move_mode462 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %272, i32 0, i32 9, !dbg !4513, !ctir !3461
  %273 = load i8, i8* %move_mode462, align 8, !dbg !4513
  %tobool463 = trunc i8 %273 to i1, !dbg !4513, !ctir !142
  br i1 %tobool463, label %land.lhs.true464, label %if.end467, !dbg !4514

land.lhs.true464:                                 ; preds = %if.then459
  %274 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4515
  %tobool465 = icmp ne i8* %274, null, !dbg !4515
  br i1 %tobool465, label %if.then466, label %if.end467, !dbg !4516

if.then466:                                       ; preds = %land.lhs.true464
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4517
  store i8 1, i8* %275, align 1, !dbg !4518, !ctir !142
  br label %if.end467, !dbg !4519

if.end467:                                        ; preds = %if.then466, %land.lhs.true464, %if.then459
  store i1 true, i1* %retval, align 1, !dbg !4520
  br label %return, !dbg !4520

if.else468:                                       ; preds = %if.else457
  %276 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4521
  %dereference469 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %276, i32 0, i32 1, !dbg !4523, !ctir !3461
  %277 = load i32, i32* %dereference469, align 4, !dbg !4523, !ctir !76
  %cmp470 = icmp eq i32 %277, 4, !dbg !4524
  br i1 %cmp470, label %if.then476, label %lor.lhs.false471, !dbg !4525

lor.lhs.false471:                                 ; preds = %if.else468
  %278 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4526
  %tobool472 = trunc i8 %278 to i1, !dbg !4526
  br i1 %tobool472, label %land.lhs.true473, label %if.else477, !dbg !4527

land.lhs.true473:                                 ; preds = %lor.lhs.false471
  %279 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4528
  %dereference474 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %279, i32 0, i32 1, !dbg !4529, !ctir !3461
  %280 = load i32, i32* %dereference474, align 4, !dbg !4529, !ctir !76
  %cmp475 = icmp eq i32 %280, 3, !dbg !4530
  br i1 %cmp475, label %if.then476, label %if.else477, !dbg !4531

if.then476:                                       ; preds = %land.lhs.true473, %if.else468
  br label %if.end481, !dbg !4532

if.else477:                                       ; preds = %land.lhs.true473, %lor.lhs.false471
  %call478 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.119, i64 0, i64 0)) #9, !dbg !4534
  %281 = load i8*, i8** %dst_name.addr, align 8, !dbg !4536
  %call479 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %281), !dbg !4536
  %282 = load i8*, i8** %earlier_file, align 8, !dbg !4537
  %call480 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %282), !dbg !4537
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call478, i8* %call479, i8* %call480), !dbg !4538
  br label %un_backup, !dbg !4539

if.end481:                                        ; preds = %if.then476
  br label %if.end482

if.end482:                                        ; preds = %if.end481
  br label %if.end483

if.end483:                                        ; preds = %if.end482
  br label %if.end491, !dbg !4540

if.else484:                                       ; preds = %if.then448
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !4541
  %284 = load i8*, i8** %dst_name.addr, align 8, !dbg !4544
  %285 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4545
  %verbose485 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %285, i32 0, i32 31, !dbg !4546, !ctir !3461
  %286 = load i8, i8* %verbose485, align 2, !dbg !4546
  %tobool486 = trunc i8 %286 to i1, !dbg !4546, !ctir !142
  %287 = load i8, i8* %dereference69, align 1, !dbg !4547
  %tobool487 = trunc i8 %287 to i1, !dbg !4547
  %call488 = call zeroext i1 @create_hard_link(i8* %283, i8* %284, i1 zeroext true, i1 zeroext %tobool486, i1 zeroext %tobool487), !dbg !4548
  br i1 %call488, label %if.end490, label %if.then489, !dbg !4549

if.then489:                                       ; preds = %if.else484
  br label %un_backup, !dbg !4550

if.end490:                                        ; preds = %if.else484
  store i1 true, i1* %retval, align 1, !dbg !4551
  br label %return, !dbg !4551

if.end491:                                        ; preds = %if.end483
  br label %if.end492, !dbg !4552

if.end492:                                        ; preds = %if.end491, %if.end446
  %288 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4553
  %move_mode493 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %288, i32 0, i32 9, !dbg !4555, !ctir !3461
  %289 = load i8, i8* %move_mode493, align 8, !dbg !4555
  %tobool494 = trunc i8 %289 to i1, !dbg !4555, !ctir !142
  br i1 %tobool494, label %if.then495, label %if.end572, !dbg !4556

if.then495:                                       ; preds = %if.end492
  %290 = load i32, i32* %rename_errno, align 4, !dbg !4557
  %cmp496 = icmp eq i32 %290, 17, !dbg !4560
  br i1 %cmp496, label %if.then497, label %if.end505, !dbg !4561

if.then497:                                       ; preds = %if.then495
  %291 = load i8*, i8** %src_name.addr, align 8, !dbg !4562
  %292 = load i8*, i8** %dst_name.addr, align 8, !dbg !4563
  %call498 = call i32 @rename(i8* %291, i8* %292) #9, !dbg !4564
  %cmp499 = icmp eq i32 %call498, 0, !dbg !4565
  br i1 %cmp499, label %cond.true500, label %cond.false501, !dbg !4564

cond.true500:                                     ; preds = %if.then497
  br label %cond.end503, !dbg !4564

cond.false501:                                    ; preds = %if.then497
  %call502 = call i32* @__errno_location() #16, !dbg !4566
  %293 = load i32, i32* %call502, align 4, !dbg !4566, !ctir !7
  br label %cond.end503, !dbg !4564

cond.end503:                                      ; preds = %cond.false501, %cond.true500
  %cond504 = phi i32 [ 0, %cond.true500 ], [ %293, %cond.false501 ], !dbg !4564
  store i32 %cond504, i32* %rename_errno, align 4, !dbg !4567
  br label %if.end505, !dbg !4568

if.end505:                                        ; preds = %cond.end503, %if.then495
  %294 = load i32, i32* %rename_errno, align 4, !dbg !4569
  %cmp506 = icmp eq i32 %294, 0, !dbg !4571
  br i1 %cmp506, label %if.then507, label %if.end528, !dbg !4572

if.then507:                                       ; preds = %if.end505
  %295 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4573
  %verbose508 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %295, i32 0, i32 31, !dbg !4576, !ctir !3461
  %296 = load i8, i8* %verbose508, align 2, !dbg !4576
  %tobool509 = trunc i8 %296 to i1, !dbg !4576, !ctir !142
  br i1 %tobool509, label %if.then510, label %if.end513, !dbg !4577

if.then510:                                       ; preds = %if.then507
  %call511 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.120, i64 0, i64 0)) #9, !dbg !4578
  %call512 = call i32 (i8*, ...) @printf(i8* %call511), !dbg !4580
  %297 = load i8*, i8** %src_name.addr, align 8, !dbg !4581
  %298 = load i8*, i8** %dst_name.addr, align 8, !dbg !4582
  %299 = load i8*, i8** %dst_backup, align 8, !dbg !4583
  call void @emit_verbose(i8* %297, i8* %298, i8* %299), !dbg !4584
  br label %if.end513, !dbg !4585

if.end513:                                        ; preds = %if.then510, %if.then507
  %300 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4586
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %300, i32 0, i32 18, !dbg !4588, !ctir !3461
  %301 = load i8, i8* %set_security_context, align 1, !dbg !4588
  %tobool514 = trunc i8 %301 to i1, !dbg !4588, !ctir !142
  br i1 %tobool514, label %if.then515, label %if.end517, !dbg !4589

if.then515:                                       ; preds = %if.end513
  %302 = load i8*, i8** %dst_name.addr, align 8, !dbg !4590
  %303 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4592
  %call516 = call zeroext i1 @set_file_security_ctx(i8* %302, i1 zeroext false, i1 zeroext true, %struct.cp_options* %303), !dbg !4593
  br label %if.end517, !dbg !4594

if.end517:                                        ; preds = %if.then515, %if.end513
  %304 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4595
  %tobool518 = icmp ne i8* %304, null, !dbg !4595
  br i1 %tobool518, label %if.then519, label %if.end520, !dbg !4597

if.then519:                                       ; preds = %if.end517
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4598
  store i8 1, i8* %305, align 1, !dbg !4599, !ctir !142
  br label %if.end520, !dbg !4600

if.end520:                                        ; preds = %if.then519, %if.end517
  %306 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4601
  %tobool521 = trunc i8 %306 to i1, !dbg !4601
  br i1 %tobool521, label %land.lhs.true522, label %if.end527, !dbg !4603

land.lhs.true522:                                 ; preds = %if.end520
  %307 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4604
  %last_file523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %307, i32 0, i32 34, !dbg !4605, !ctir !3461
  %308 = load i8, i8* %last_file523, align 1, !dbg !4605
  %tobool524 = trunc i8 %308 to i1, !dbg !4605, !ctir !142
  br i1 %tobool524, label %if.end527, label %if.then525, !dbg !4606

if.then525:                                       ; preds = %land.lhs.true522
  %309 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4607
  %dest_info526 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %309, i32 0, i32 37, !dbg !4609, !ctir !3461
  %310 = load %struct.hash_table*, %struct.hash_table** %dest_info526, align 8, !dbg !4609, !ctir !175
  %311 = load i8*, i8** %dst_name.addr, align 8, !dbg !4610
  call void @record_file(%struct.hash_table* %310, i8* %311, %struct.stat* %src_sb), !dbg !4611
  br label %if.end527, !dbg !4612

if.end527:                                        ; preds = %if.then525, %land.lhs.true522, %if.end520
  store i1 true, i1* %retval, align 1, !dbg !4613
  br label %return, !dbg !4613

if.end528:                                        ; preds = %if.end505
  %312 = load i32, i32* %rename_errno, align 4, !dbg !4614
  %cmp529 = icmp eq i32 %312, 22, !dbg !4616
  br i1 %cmp529, label %if.then530, label %if.end534, !dbg !4617

if.then530:                                       ; preds = %if.end528
  %call531 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.121, i64 0, i64 0)) #9, !dbg !4618
  %313 = load i8*, i8** @top_level_src_name, align 8, !dbg !4620
  %call532 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %313), !dbg !4620
  %314 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4621
  %call533 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %314), !dbg !4621
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call531, i8* %call532, i8* %call533), !dbg !4622
  %315 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4623
  store i8 1, i8* %315, align 1, !dbg !4624, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !4625
  br label %return, !dbg !4625

if.end534:                                        ; preds = %if.end528
  %316 = load i32, i32* %rename_errno, align 4, !dbg !4626
  %cmp535 = icmp ne i32 %316, 18, !dbg !4628
  br i1 %cmp535, label %if.then536, label %if.end542, !dbg !4629

if.then536:                                       ; preds = %if.end534
  %317 = load i32, i32* %rename_errno, align 4, !dbg !4630
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.122, i64 0, i64 0)) #9, !dbg !4632
  %318 = load i8*, i8** %src_name.addr, align 8, !dbg !4633
  %call538 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %318), !dbg !4633
  %319 = load i8*, i8** %dst_name.addr, align 8, !dbg !4634
  %call539 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %319), !dbg !4634
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %call537, i8* %call538, i8* %call539), !dbg !4635
  %st_ino540 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4636, !ctir !462
  %320 = load i64, i64* %st_ino540, align 8, !dbg !4636, !ctir !453
  %st_dev541 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4637, !ctir !462
  %321 = load i64, i64* %st_dev541, align 8, !dbg !4637, !ctir !452
  call void @forget_created(i64 %320, i64 %321), !dbg !4638
  store i1 false, i1* %retval, align 1, !dbg !4639
  br label %return, !dbg !4639

if.end542:                                        ; preds = %if.end534
  %322 = load i32, i32* %src_mode, align 4, !dbg !4640
  %and543 = and i32 %322, 61440, !dbg !4640
  %cmp544 = icmp eq i32 %and543, 16384, !dbg !4640
  br i1 %cmp544, label %cond.true545, label %cond.false547, !dbg !4640

cond.true545:                                     ; preds = %if.end542
  %323 = load i8*, i8** %dst_name.addr, align 8, !dbg !4642
  %call546 = call i32 @rmdir(i8* %323) #9, !dbg !4643
  br label %cond.end549, !dbg !4640

cond.false547:                                    ; preds = %if.end542
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !4644
  %call548 = call i32 @unlink(i8* %324) #9, !dbg !4645
  br label %cond.end549, !dbg !4640

cond.end549:                                      ; preds = %cond.false547, %cond.true545
  %cond550 = phi i32 [ %call546, %cond.true545 ], [ %call548, %cond.false547 ], !dbg !4640
  %cmp551 = icmp ne i32 %cond550, 0, !dbg !4646
  br i1 %cmp551, label %land.lhs.true552, label %if.end562, !dbg !4647

land.lhs.true552:                                 ; preds = %cond.end549
  %call553 = call i32* @__errno_location() #16, !dbg !4648
  %325 = load i32, i32* %call553, align 4, !dbg !4648, !ctir !7
  %cmp554 = icmp ne i32 %325, 2, !dbg !4649
  br i1 %cmp554, label %if.then555, label %if.end562, !dbg !4650

if.then555:                                       ; preds = %land.lhs.true552
  %call556 = call i32* @__errno_location() #16, !dbg !4651
  %326 = load i32, i32* %call556, align 4, !dbg !4651, !ctir !7
  %call557 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.123, i64 0, i64 0)) #9, !dbg !4653
  %327 = load i8*, i8** %src_name.addr, align 8, !dbg !4654
  %call558 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %327), !dbg !4654
  %328 = load i8*, i8** %dst_name.addr, align 8, !dbg !4655
  %call559 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %328), !dbg !4655
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %326, i8* %call557, i8* %call558, i8* %call559), !dbg !4656
  %st_ino560 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4657, !ctir !462
  %329 = load i64, i64* %st_ino560, align 8, !dbg !4657, !ctir !453
  %st_dev561 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4658, !ctir !462
  %330 = load i64, i64* %st_dev561, align 8, !dbg !4658, !ctir !452
  call void @forget_created(i64 %329, i64 %330), !dbg !4659
  store i1 false, i1* %retval, align 1, !dbg !4660
  br label %return, !dbg !4660

if.end562:                                        ; preds = %land.lhs.true552, %cond.end549
  %331 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4661
  %verbose563 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %331, i32 0, i32 31, !dbg !4663, !ctir !3461
  %332 = load i8, i8* %verbose563, align 2, !dbg !4663
  %tobool564 = trunc i8 %332 to i1, !dbg !4663, !ctir !142
  br i1 %tobool564, label %land.lhs.true565, label %if.end571, !dbg !4664

land.lhs.true565:                                 ; preds = %if.end562
  %333 = load i32, i32* %src_mode, align 4, !dbg !4665
  %and566 = and i32 %333, 61440, !dbg !4665
  %cmp567 = icmp eq i32 %and566, 16384, !dbg !4665
  br i1 %cmp567, label %if.end571, label %if.then568, !dbg !4666

if.then568:                                       ; preds = %land.lhs.true565
  %call569 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.124, i64 0, i64 0)) #9, !dbg !4667
  %call570 = call i32 (i8*, ...) @printf(i8* %call569), !dbg !4669
  %334 = load i8*, i8** %src_name.addr, align 8, !dbg !4670
  %335 = load i8*, i8** %dst_name.addr, align 8, !dbg !4671
  %336 = load i8*, i8** %dst_backup, align 8, !dbg !4672
  call void @emit_verbose(i8* %334, i8* %335, i8* %336), !dbg !4673
  br label %if.end571, !dbg !4674

if.end571:                                        ; preds = %if.then568, %land.lhs.true565, %if.end562
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4675
  br label %if.end572, !dbg !4676

if.end572:                                        ; preds = %if.end571, %if.end492
  %337 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4677
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %337, i32 0, i32 28, !dbg !4678, !ctir !3461
  %338 = load i8, i8* %set_mode, align 1, !dbg !4678
  %tobool573 = trunc i8 %338 to i1, !dbg !4678, !ctir !142
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !4677

cond.true574:                                     ; preds = %if.end572
  %339 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4679
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %339, i32 0, i32 4, !dbg !4680, !ctir !3461
  %340 = load i32, i32* %mode, align 8, !dbg !4680, !ctir !139
  br label %cond.end576, !dbg !4677

cond.false575:                                    ; preds = %if.end572
  %341 = load i32, i32* %src_mode, align 4, !dbg !4681
  br label %cond.end576, !dbg !4677

cond.end576:                                      ; preds = %cond.false575, %cond.true574
  %cond577 = phi i32 [ %340, %cond.true574 ], [ %341, %cond.false575 ], !dbg !4677
  %and578 = and i32 %cond577, 4095, !dbg !4682
  store i32 %and578, i32* %dst_mode_bits, align 4, !dbg !4683
  %342 = load i32, i32* %dst_mode_bits, align 4, !dbg !4684
  %343 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4685
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %343, i32 0, i32 14, !dbg !4686, !ctir !3461
  %344 = load i8, i8* %preserve_ownership, align 1, !dbg !4686
  %tobool579 = trunc i8 %344 to i1, !dbg !4686, !ctir !142
  br i1 %tobool579, label %cond.true580, label %cond.false581, !dbg !4685

cond.true580:                                     ; preds = %cond.end576
  br label %cond.end585, !dbg !4685

cond.false581:                                    ; preds = %cond.end576
  %345 = load i32, i32* %src_mode, align 4, !dbg !4687
  %and582 = and i32 %345, 61440, !dbg !4687
  %cmp583 = icmp eq i32 %and582, 16384, !dbg !4687
  %346 = zext i1 %cmp583 to i64, !dbg !4687
  %cond584 = select i1 %cmp583, i32 18, i32 0, !dbg !4687
  br label %cond.end585, !dbg !4685

cond.end585:                                      ; preds = %cond.false581, %cond.true580
  %cond586 = phi i32 [ 63, %cond.true580 ], [ %cond584, %cond.false581 ], !dbg !4685
  %and587 = and i32 %342, %cond586, !dbg !4688
  store i32 %and587, i32* %omitted_permissions, align 4, !dbg !4689
  store i8 1, i8* %delayed_ok, align 1, !dbg !4690
  %347 = load i8*, i8** %src_name.addr, align 8, !dbg !4691
  %348 = load i8*, i8** %dst_name.addr, align 8, !dbg !4693
  %349 = load i32, i32* %src_mode, align 4, !dbg !4694
  %350 = load i8, i8* %new_dst.addr, align 1, !dbg !4695
  %tobool588 = trunc i8 %350 to i1, !dbg !4695
  %351 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4696
  %call589 = call zeroext i1 @set_process_security_ctx(i8* %347, i8* %348, i32 %349, i1 zeroext %tobool588, %struct.cp_options* %351), !dbg !4697
  br i1 %call589, label %if.end591, label %if.then590, !dbg !4698

if.then590:                                       ; preds = %cond.end585
  store i1 false, i1* %retval, align 1, !dbg !4699
  br label %return, !dbg !4699

if.end591:                                        ; preds = %cond.end585
  %352 = load i32, i32* %src_mode, align 4, !dbg !4700
  %and592 = and i32 %352, 61440, !dbg !4700
  %cmp593 = icmp eq i32 %and592, 16384, !dbg !4700
  br i1 %cmp593, label %if.then594, label %if.else685, !dbg !4702

if.then594:                                       ; preds = %if.end591
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !4703, metadata !DIExpression()), !dbg !4705
  %353 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4706
  %call595 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %353) #14, !dbg !4708
  br i1 %call595, label %if.then596, label %if.end599, !dbg !4709

if.then596:                                       ; preds = %if.then594
  %call597 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.125, i64 0, i64 0)) #9, !dbg !4710
  %354 = load i8*, i8** %src_name.addr, align 8, !dbg !4712
  %call598 = call i8* @quotearg_style(i32 4, i8* %354), !dbg !4712
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call597, i8* %call598), !dbg !4713
  br label %un_backup, !dbg !4714

if.end599:                                        ; preds = %if.then594
  %355 = alloca i8, i64 24, align 16, !dbg !4715
  %356 = bitcast i8* %355 to %struct.dir_list*, !dbg !4715
  store %struct.dir_list* %356, %struct.dir_list** %dir, align 8, !dbg !4716
  %357 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4717
  %358 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4718
  %parent600 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %358, i32 0, i32 0, !dbg !4719, !ctir !494
  store %struct.dir_list* %357, %struct.dir_list** %parent600, align 8, !dbg !4720, !ctir !493
  %st_ino601 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4721, !ctir !462
  %359 = load i64, i64* %st_ino601, align 8, !dbg !4721, !ctir !453
  %360 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4722
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %360, i32 0, i32 1, !dbg !4723, !ctir !494
  store i64 %359, i64* %ino, align 8, !dbg !4724, !ctir !498
  %st_dev602 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4725, !ctir !462
  %361 = load i64, i64* %st_dev602, align 8, !dbg !4725, !ctir !452
  %362 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4726
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %362, i32 0, i32 2, !dbg !4727, !ctir !494
  store i64 %361, i64* %dev, align 8, !dbg !4728, !ctir !500
  %363 = load i8, i8* %new_dst.addr, align 1, !dbg !4729
  %tobool603 = trunc i8 %363 to i1, !dbg !4729
  br i1 %tobool603, label %if.then608, label %lor.lhs.false604, !dbg !4731

lor.lhs.false604:                                 ; preds = %if.end599
  %st_mode605 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4732, !ctir !462
  %364 = load i32, i32* %st_mode605, align 8, !dbg !4732, !ctir !140
  %and606 = and i32 %364, 61440, !dbg !4732
  %cmp607 = icmp eq i32 %and606, 16384, !dbg !4732
  br i1 %cmp607, label %if.else656, label %if.then608, !dbg !4733

if.then608:                                       ; preds = %lor.lhs.false604, %if.end599
  %365 = load i8*, i8** %dst_name.addr, align 8, !dbg !4734
  %366 = load i32, i32* %dst_mode_bits, align 4, !dbg !4737
  %367 = load i32, i32* %omitted_permissions, align 4, !dbg !4738
  %neg = xor i32 %367, -1, !dbg !4739
  %and609 = and i32 %366, %neg, !dbg !4740
  %call610 = call i32 @mkdir(i8* %365, i32 %and609) #9, !dbg !4741
  %cmp611 = icmp ne i32 %call610, 0, !dbg !4742
  br i1 %cmp611, label %if.then612, label %if.end616, !dbg !4743

if.then612:                                       ; preds = %if.then608
  %call613 = call i32* @__errno_location() #16, !dbg !4744
  %368 = load i32, i32* %call613, align 4, !dbg !4744, !ctir !7
  %call614 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.126, i64 0, i64 0)) #9, !dbg !4746
  %369 = load i8*, i8** %dst_name.addr, align 8, !dbg !4747
  %call615 = call i8* @quotearg_style(i32 4, i8* %369), !dbg !4747
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %368, i8* %call614, i8* %call615), !dbg !4748
  br label %un_backup, !dbg !4749

if.end616:                                        ; preds = %if.then608
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !4750
  %call617 = call i32 @lstat(i8* %370, %struct.stat* %dst_sb) #9, !dbg !4752
  %cmp618 = icmp ne i32 %call617, 0, !dbg !4753
  br i1 %cmp618, label %if.then619, label %if.else623, !dbg !4754

if.then619:                                       ; preds = %if.end616
  %call620 = call i32* @__errno_location() #16, !dbg !4755
  %371 = load i32, i32* %call620, align 4, !dbg !4755, !ctir !7
  %call621 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4757
  %372 = load i8*, i8** %dst_name.addr, align 8, !dbg !4758
  %call622 = call i8* @quotearg_style(i32 4, i8* %372), !dbg !4758
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %371, i8* %call621, i8* %call622), !dbg !4759
  br label %un_backup, !dbg !4760

if.else623:                                       ; preds = %if.end616
  %st_mode624 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4761, !ctir !462
  %373 = load i32, i32* %st_mode624, align 8, !dbg !4761, !ctir !140
  %and625 = and i32 %373, 448, !dbg !4763
  %cmp626 = icmp ne i32 %and625, 448, !dbg !4764
  br i1 %cmp626, label %if.then627, label %if.end636, !dbg !4765

if.then627:                                       ; preds = %if.else623
  %st_mode628 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4766, !ctir !462
  %374 = load i32, i32* %st_mode628, align 8, !dbg !4766, !ctir !140
  store i32 %374, i32* %dst_mode, align 4, !dbg !4768
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !4769
  %375 = load i8*, i8** %dst_name.addr, align 8, !dbg !4770
  %376 = load i32, i32* %dst_mode, align 4, !dbg !4772
  %or = or i32 %376, 448, !dbg !4773
  %call629 = call i32 @chmod(i8* %375, i32 %or) #9, !dbg !4774
  %cmp630 = icmp ne i32 %call629, 0, !dbg !4775
  br i1 %cmp630, label %if.then631, label %if.end635, !dbg !4776

if.then631:                                       ; preds = %if.then627
  %call632 = call i32* @__errno_location() #16, !dbg !4777
  %377 = load i32, i32* %call632, align 4, !dbg !4777, !ctir !7
  %call633 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.127, i64 0, i64 0)) #9, !dbg !4779
  %378 = load i8*, i8** %dst_name.addr, align 8, !dbg !4780
  %call634 = call i8* @quotearg_style(i32 4, i8* %378), !dbg !4780
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %377, i8* %call633, i8* %call634), !dbg !4781
  br label %un_backup, !dbg !4782

if.end635:                                        ; preds = %if.then627
  br label %if.end636, !dbg !4783

if.end636:                                        ; preds = %if.end635, %if.else623
  br label %if.end637

if.end637:                                        ; preds = %if.end636
  %379 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4784
  %380 = load i8, i8* %379, align 1, !dbg !4786
  %tobool638 = trunc i8 %380 to i1, !dbg !4786, !ctir !142
  br i1 %tobool638, label %if.end643, label %if.then639, !dbg !4787

if.then639:                                       ; preds = %if.end637
  %381 = load i8*, i8** %dst_name.addr, align 8, !dbg !4788
  %st_ino640 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !4790, !ctir !462
  %382 = load i64, i64* %st_ino640, align 8, !dbg !4790, !ctir !453
  %st_dev641 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4791, !ctir !462
  %383 = load i64, i64* %st_dev641, align 8, !dbg !4791, !ctir !452
  %call642 = call i8* @remember_copied(i8* %381, i64 %382, i64 %383), !dbg !4792
  %384 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4793
  store i8 1, i8* %384, align 1, !dbg !4794, !ctir !142
  br label %if.end643, !dbg !4795

if.end643:                                        ; preds = %if.then639, %if.end637
  %385 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4796
  %verbose644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %385, i32 0, i32 31, !dbg !4798, !ctir !3461
  %386 = load i8, i8* %verbose644, align 2, !dbg !4798
  %tobool645 = trunc i8 %386 to i1, !dbg !4798, !ctir !142
  br i1 %tobool645, label %if.then646, label %if.end655, !dbg !4799

if.then646:                                       ; preds = %if.end643
  %387 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4800
  %move_mode647 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %387, i32 0, i32 9, !dbg !4803, !ctir !3461
  %388 = load i8, i8* %move_mode647, align 8, !dbg !4803
  %tobool648 = trunc i8 %388 to i1, !dbg !4803, !ctir !142
  br i1 %tobool648, label %if.then649, label %if.else653, !dbg !4804

if.then649:                                       ; preds = %if.then646
  %call650 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.128, i64 0, i64 0)) #9, !dbg !4805
  %389 = load i8*, i8** %dst_name.addr, align 8, !dbg !4806
  %call651 = call i8* @quotearg_style(i32 4, i8* %389), !dbg !4806
  %call652 = call i32 (i8*, ...) @printf(i8* %call650, i8* %call651), !dbg !4807
  br label %if.end654, !dbg !4807

if.else653:                                       ; preds = %if.then646
  %390 = load i8*, i8** %src_name.addr, align 8, !dbg !4808
  %391 = load i8*, i8** %dst_name.addr, align 8, !dbg !4809
  call void @emit_verbose(i8* %390, i8* %391, i8* null), !dbg !4810
  br label %if.end654

if.end654:                                        ; preds = %if.else653, %if.then649
  br label %if.end655, !dbg !4811

if.end655:                                        ; preds = %if.end654, %if.end643
  br label %if.end671, !dbg !4812

if.else656:                                       ; preds = %lor.lhs.false604
  store i32 0, i32* %omitted_permissions, align 4, !dbg !4813
  %392 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4815
  %set_security_context657 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %392, i32 0, i32 18, !dbg !4817, !ctir !3461
  %393 = load i8, i8* %set_security_context657, align 1, !dbg !4817
  %tobool658 = trunc i8 %393 to i1, !dbg !4817, !ctir !142
  br i1 %tobool658, label %if.then661, label %lor.lhs.false659, !dbg !4818

lor.lhs.false659:                                 ; preds = %if.else656
  %394 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4819
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %394, i32 0, i32 22, !dbg !4820, !ctir !3461
  %395 = load i8, i8* %preserve_security_context, align 1, !dbg !4820
  %tobool660 = trunc i8 %395 to i1, !dbg !4820, !ctir !142
  br i1 %tobool660, label %if.then661, label %if.end670, !dbg !4821

if.then661:                                       ; preds = %lor.lhs.false659, %if.else656
  %396 = load i8*, i8** %dst_name.addr, align 8, !dbg !4822
  %397 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4824
  %preserve_security_context662 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %397, i32 0, i32 22, !dbg !4825, !ctir !3461
  %398 = load i8, i8* %preserve_security_context662, align 1, !dbg !4825
  %tobool663 = trunc i8 %398 to i1, !dbg !4825, !ctir !142
  %399 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4826
  %call664 = call zeroext i1 @set_file_security_ctx(i8* %396, i1 zeroext %tobool663, i1 zeroext false, %struct.cp_options* %399), !dbg !4827
  br i1 %call664, label %if.end669, label %if.then665, !dbg !4828

if.then665:                                       ; preds = %if.then661
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4829
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %400, i32 0, i32 23, !dbg !4832, !ctir !3461
  %401 = load i8, i8* %require_preserve_context, align 2, !dbg !4832
  %tobool666 = trunc i8 %401 to i1, !dbg !4832, !ctir !142
  br i1 %tobool666, label %if.then667, label %if.end668, !dbg !4833

if.then667:                                       ; preds = %if.then665
  br label %un_backup, !dbg !4834

if.end668:                                        ; preds = %if.then665
  br label %if.end669, !dbg !4835

if.end669:                                        ; preds = %if.end668, %if.then661
  br label %if.end670, !dbg !4836

if.end670:                                        ; preds = %if.end669, %lor.lhs.false659
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end655
  %402 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4837
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %402, i32 0, i32 13, !dbg !4839, !ctir !3461
  %403 = load i8, i8* %one_file_system, align 4, !dbg !4839
  %tobool672 = trunc i8 %403 to i1, !dbg !4839, !ctir !142
  br i1 %tobool672, label %land.lhs.true673, label %if.else680, !dbg !4840

land.lhs.true673:                                 ; preds = %if.end671
  %404 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !4841
  %tobool674 = icmp ne %struct.stat* %404, null, !dbg !4841
  br i1 %tobool674, label %land.lhs.true675, label %if.else680, !dbg !4842

land.lhs.true675:                                 ; preds = %land.lhs.true673
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !4843
  %st_dev676 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 0, !dbg !4844, !ctir !512
  %406 = load i64, i64* %st_dev676, align 8, !dbg !4844, !ctir !452
  %st_dev677 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4845, !ctir !462
  %407 = load i64, i64* %st_dev677, align 8, !dbg !4845, !ctir !452
  %cmp678 = icmp ne i64 %406, %407, !dbg !4846
  br i1 %cmp678, label %if.then679, label %if.else680, !dbg !4847

if.then679:                                       ; preds = %land.lhs.true675
  br label %if.end684, !dbg !4848

if.else680:                                       ; preds = %land.lhs.true675, %land.lhs.true673, %if.end671
  %408 = load i8*, i8** %src_name.addr, align 8, !dbg !4850
  %409 = load i8*, i8** %dst_name.addr, align 8, !dbg !4852
  %410 = load i8, i8* %new_dst.addr, align 1, !dbg !4853
  %tobool681 = trunc i8 %410 to i1, !dbg !4853
  %411 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !4854
  %412 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4855
  %413 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !4856
  %414 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4857
  %call682 = call zeroext i1 @copy_dir(i8* %408, i8* %409, i1 zeroext %tobool681, %struct.stat* %src_sb, %struct.dir_list* %411, %struct.cp_options* %412, i8* %413, i8* %414), !dbg !4858
  %frombool683 = zext i1 %call682 to i8, !dbg !4859
  store i8 %frombool683, i8* %delayed_ok, align 1, !dbg !4859
  br label %if.end684

if.end684:                                        ; preds = %if.else680, %if.then679
  br label %if.end897, !dbg !4860

if.else685:                                       ; preds = %if.end591
  %415 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4861
  %symbolic_link686 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %415, i32 0, i32 29, !dbg !4863, !ctir !3461
  %416 = load i8, i8* %symbolic_link686, align 4, !dbg !4863
  %tobool687 = trunc i8 %416 to i1, !dbg !4863, !ctir !142
  br i1 %tobool687, label %if.then688, label %if.else733, !dbg !4864

if.then688:                                       ; preds = %if.else685
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !4865
  %417 = load i8*, i8** %src_name.addr, align 8, !dbg !4867
  %418 = load i8, i8* %417, align 1, !dbg !4869, !ctir !184
  %conv = sext i8 %418 to i32, !dbg !4869
  %cmp689 = icmp ne i32 %conv, 47, !dbg !4870
  br i1 %cmp689, label %if.then691, label %if.end722, !dbg !4871

if.then691:                                       ; preds = %if.then688
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !4872, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !4875, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !4877, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !4879, metadata !DIExpression()), !dbg !4880
  %419 = load i8*, i8** %dst_name.addr, align 8, !dbg !4881
  %call692 = call i8* @dir_name(i8* %419), !dbg !4882
  store i8* %call692, i8** %dst_parent, align 8, !dbg !4883
  %420 = load i8*, i8** %dst_parent, align 8, !dbg !4884
  %call693 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), i8* %420) #14, !dbg !4884
  %cmp694 = icmp eq i32 %call693, 0, !dbg !4884
  br i1 %cmp694, label %lor.end715, label %lor.lhs.false696, !dbg !4885

lor.lhs.false696:                                 ; preds = %if.then691
  %call697 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), %struct.stat* %dot_sb) #9, !dbg !4886
  %cmp698 = icmp ne i32 %call697, 0, !dbg !4887
  br i1 %cmp698, label %lor.end715, label %lor.lhs.false700, !dbg !4888

lor.lhs.false700:                                 ; preds = %lor.lhs.false696
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !4889
  %call701 = call i32 @stat(i8* %421, %struct.stat* %dst_parent_sb) #9, !dbg !4890
  %cmp702 = icmp ne i32 %call701, 0, !dbg !4891
  br i1 %cmp702, label %lor.end715, label %lor.rhs704, !dbg !4892

lor.rhs704:                                       ; preds = %lor.lhs.false700
  %st_ino705 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !4893, !ctir !462
  %422 = load i64, i64* %st_ino705, align 8, !dbg !4893, !ctir !453
  %st_ino706 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !4893, !ctir !462
  %423 = load i64, i64* %st_ino706, align 8, !dbg !4893, !ctir !453
  %cmp707 = icmp eq i64 %422, %423, !dbg !4893
  br i1 %cmp707, label %land.rhs709, label %land.end714, !dbg !4893

land.rhs709:                                      ; preds = %lor.rhs704
  %st_dev710 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !4893, !ctir !462
  %424 = load i64, i64* %st_dev710, align 8, !dbg !4893, !ctir !452
  %st_dev711 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !4893, !ctir !462
  %425 = load i64, i64* %st_dev711, align 8, !dbg !4893, !ctir !452
  %cmp712 = icmp eq i64 %424, %425, !dbg !4893
  br label %land.end714

land.end714:                                      ; preds = %land.rhs709, %lor.rhs704
  %426 = phi i1 [ false, %lor.rhs704 ], [ %cmp712, %land.rhs709 ], !dbg !4894
  br label %lor.end715, !dbg !4892

lor.end715:                                       ; preds = %land.end714, %lor.lhs.false700, %lor.lhs.false696, %if.then691
  %427 = phi i1 [ true, %lor.lhs.false700 ], [ true, %lor.lhs.false696 ], [ true, %if.then691 ], [ %426, %land.end714 ]
  %frombool716 = zext i1 %427 to i8, !dbg !4895
  store i8 %frombool716, i8* %in_current_dir, align 1, !dbg !4895
  %428 = load i8*, i8** %dst_parent, align 8, !dbg !4896
  call void @free(i8* %428) #9, !dbg !4897
  %429 = load i8, i8* %in_current_dir, align 1, !dbg !4898
  %tobool717 = trunc i8 %429 to i1, !dbg !4898
  br i1 %tobool717, label %if.end721, label %if.then718, !dbg !4900

if.then718:                                       ; preds = %lor.end715
  %call719 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.130, i64 0, i64 0)) #9, !dbg !4901
  %430 = load i8*, i8** %dst_name.addr, align 8, !dbg !4903
  %call720 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %430), !dbg !4903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call719, i8* %call720), !dbg !4904
  br label %un_backup, !dbg !4905

if.end721:                                        ; preds = %lor.end715
  br label %if.end722, !dbg !4906

if.end722:                                        ; preds = %if.end721, %if.then688
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4907, metadata !DIExpression()), !dbg !4908
  %431 = load i8*, i8** %src_name.addr, align 8, !dbg !4909
  %432 = load i8*, i8** %dst_name.addr, align 8, !dbg !4910
  %433 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4911
  %unlink_dest_after_failed_open723 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %433, i32 0, i32 7, !dbg !4912, !ctir !3461
  %434 = load i8, i8* %unlink_dest_after_failed_open723, align 2, !dbg !4912
  %tobool724 = trunc i8 %434 to i1, !dbg !4912, !ctir !142
  %call725 = call i32 @force_symlinkat(i8* %431, i32 -100, i8* %432, i1 zeroext %tobool724, i32 -1), !dbg !4913
  store i32 %call725, i32* %err, align 4, !dbg !4908
  %435 = load i32, i32* %err, align 4, !dbg !4914
  %cmp726 = icmp slt i32 0, %435, !dbg !4916
  br i1 %cmp726, label %if.then728, label %if.end732, !dbg !4917

if.then728:                                       ; preds = %if.end722
  %436 = load i32, i32* %err, align 4, !dbg !4918
  %call729 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.131, i64 0, i64 0)) #9, !dbg !4920
  %437 = load i8*, i8** %dst_name.addr, align 8, !dbg !4921
  %call730 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %437), !dbg !4921
  %438 = load i8*, i8** %src_name.addr, align 8, !dbg !4922
  %call731 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %438), !dbg !4922
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %436, i8* %call729, i8* %call730, i8* %call731), !dbg !4923
  br label %un_backup, !dbg !4924

if.end732:                                        ; preds = %if.end722
  br label %if.end896, !dbg !4925

if.else733:                                       ; preds = %if.else685
  %439 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4926
  %hard_link734 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %439, i32 0, i32 8, !dbg !4928, !ctir !3461
  %440 = load i8, i8* %hard_link734, align 1, !dbg !4928
  %tobool735 = trunc i8 %440 to i1, !dbg !4928, !ctir !142
  br i1 %tobool735, label %if.then737, label %if.else752, !dbg !4929

if.then737:                                       ; preds = %if.else733
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !4930, metadata !DIExpression()), !dbg !4932
  %441 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4933
  %unlink_dest_after_failed_open738 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %441, i32 0, i32 7, !dbg !4934, !ctir !3461
  %442 = load i8, i8* %unlink_dest_after_failed_open738, align 2, !dbg !4934
  %tobool739 = trunc i8 %442 to i1, !dbg !4934, !ctir !142
  br i1 %tobool739, label %lor.end745, label %lor.rhs741, !dbg !4935

lor.rhs741:                                       ; preds = %if.then737
  %443 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4936
  %interactive742 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %443, i32 0, i32 2, !dbg !4937, !ctir !3461
  %444 = load i32, i32* %interactive742, align 8, !dbg !4937, !ctir !83
  %cmp743 = icmp eq i32 %444, 3, !dbg !4938
  br label %lor.end745, !dbg !4935

lor.end745:                                       ; preds = %lor.rhs741, %if.then737
  %445 = phi i1 [ true, %if.then737 ], [ %cmp743, %lor.rhs741 ]
  %frombool746 = zext i1 %445 to i8, !dbg !4932
  store i8 %frombool746, i8* %replace, align 1, !dbg !4932
  %446 = load i8*, i8** %src_name.addr, align 8, !dbg !4939
  %447 = load i8*, i8** %dst_name.addr, align 8, !dbg !4941
  %448 = load i8, i8* %replace, align 1, !dbg !4942
  %tobool747 = trunc i8 %448 to i1, !dbg !4942
  %449 = load i8, i8* %dereference69, align 1, !dbg !4943
  %tobool748 = trunc i8 %449 to i1, !dbg !4943
  %call749 = call zeroext i1 @create_hard_link(i8* %446, i8* %447, i1 zeroext %tobool747, i1 zeroext false, i1 zeroext %tobool748), !dbg !4944
  br i1 %call749, label %if.end751, label %if.then750, !dbg !4945

if.then750:                                       ; preds = %lor.end745
  br label %un_backup, !dbg !4946

if.end751:                                        ; preds = %lor.end745
  br label %if.end895, !dbg !4947

if.else752:                                       ; preds = %if.else733
  %450 = load i32, i32* %src_mode, align 4, !dbg !4948
  %and753 = and i32 %450, 61440, !dbg !4948
  %cmp754 = icmp eq i32 %and753, 32768, !dbg !4948
  br i1 %cmp754, label %if.then764, label %lor.lhs.false756, !dbg !4950

lor.lhs.false756:                                 ; preds = %if.else752
  %451 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4951
  %copy_as_regular757 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %451, i32 0, i32 5, !dbg !4952, !ctir !3461
  %452 = load i8, i8* %copy_as_regular757, align 4, !dbg !4952
  %tobool758 = trunc i8 %452 to i1, !dbg !4952, !ctir !142
  br i1 %tobool758, label %land.lhs.true760, label %if.else769, !dbg !4953

land.lhs.true760:                                 ; preds = %lor.lhs.false756
  %453 = load i32, i32* %src_mode, align 4, !dbg !4954
  %and761 = and i32 %453, 61440, !dbg !4954
  %cmp762 = icmp eq i32 %and761, 40960, !dbg !4954
  br i1 %cmp762, label %if.else769, label %if.then764, !dbg !4955

if.then764:                                       ; preds = %land.lhs.true760, %if.else752
  store i8 1, i8* %copied_as_regular, align 1, !dbg !4956
  %454 = load i8*, i8** %src_name.addr, align 8, !dbg !4958
  %455 = load i8*, i8** %dst_name.addr, align 8, !dbg !4960
  %456 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4961
  %457 = load i32, i32* %dst_mode_bits, align 4, !dbg !4962
  %and765 = and i32 %457, 511, !dbg !4963
  %458 = load i32, i32* %omitted_permissions, align 4, !dbg !4964
  %call766 = call zeroext i1 @copy_reg(i8* %454, i8* %455, %struct.cp_options* %456, i32 %and765, i32 %458, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !4965
  br i1 %call766, label %if.end768, label %if.then767, !dbg !4966

if.then767:                                       ; preds = %if.then764
  br label %un_backup, !dbg !4967

if.end768:                                        ; preds = %if.then764
  br label %if.end894, !dbg !4968

if.else769:                                       ; preds = %land.lhs.true760, %lor.lhs.false756
  %459 = load i32, i32* %src_mode, align 4, !dbg !4969
  %and770 = and i32 %459, 61440, !dbg !4969
  %cmp771 = icmp eq i32 %and770, 4096, !dbg !4969
  br i1 %cmp771, label %if.then773, label %if.else792, !dbg !4971

if.then773:                                       ; preds = %if.else769
  %460 = load i8*, i8** %dst_name.addr, align 8, !dbg !4972
  %461 = load i32, i32* %src_mode, align 4, !dbg !4975
  %462 = load i32, i32* %omitted_permissions, align 4, !dbg !4976
  %neg774 = xor i32 %462, -1, !dbg !4977
  %and775 = and i32 %461, %neg774, !dbg !4978
  %call776 = call i32 @mknod(i8* %460, i32 %and775, i64 0) #9, !dbg !4979
  %cmp777 = icmp ne i32 %call776, 0, !dbg !4980
  br i1 %cmp777, label %if.then779, label %if.end791, !dbg !4981

if.then779:                                       ; preds = %if.then773
  %463 = load i8*, i8** %dst_name.addr, align 8, !dbg !4982
  %464 = load i32, i32* %src_mode, align 4, !dbg !4984
  %and780 = and i32 %464, -4097, !dbg !4985
  %465 = load i32, i32* %omitted_permissions, align 4, !dbg !4986
  %neg781 = xor i32 %465, -1, !dbg !4987
  %and782 = and i32 %and780, %neg781, !dbg !4988
  %call783 = call i32 @mkfifo(i8* %463, i32 %and782) #9, !dbg !4989
  %cmp784 = icmp ne i32 %call783, 0, !dbg !4990
  br i1 %cmp784, label %if.then786, label %if.end790, !dbg !4991

if.then786:                                       ; preds = %if.then779
  %call787 = call i32* @__errno_location() #16, !dbg !4992
  %466 = load i32, i32* %call787, align 4, !dbg !4992, !ctir !7
  %call788 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.132, i64 0, i64 0)) #9, !dbg !4994
  %467 = load i8*, i8** %dst_name.addr, align 8, !dbg !4995
  %call789 = call i8* @quotearg_style(i32 4, i8* %467), !dbg !4995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %466, i8* %call788, i8* %call789), !dbg !4996
  br label %un_backup, !dbg !4997

if.end790:                                        ; preds = %if.then779
  br label %if.end791, !dbg !4998

if.end791:                                        ; preds = %if.end790, %if.then773
  br label %if.end893, !dbg !4999

if.else792:                                       ; preds = %if.else769
  %468 = load i32, i32* %src_mode, align 4, !dbg !5000
  %and793 = and i32 %468, 61440, !dbg !5000
  %cmp794 = icmp eq i32 %and793, 24576, !dbg !5000
  br i1 %cmp794, label %if.then804, label %lor.lhs.false796, !dbg !5002

lor.lhs.false796:                                 ; preds = %if.else792
  %469 = load i32, i32* %src_mode, align 4, !dbg !5003
  %and797 = and i32 %469, 61440, !dbg !5003
  %cmp798 = icmp eq i32 %and797, 8192, !dbg !5003
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800, !dbg !5004

lor.lhs.false800:                                 ; preds = %lor.lhs.false796
  %470 = load i32, i32* %src_mode, align 4, !dbg !5005
  %and801 = and i32 %470, 61440, !dbg !5005
  %cmp802 = icmp eq i32 %and801, 49152, !dbg !5005
  br i1 %cmp802, label %if.then804, label %if.else815, !dbg !5006

if.then804:                                       ; preds = %lor.lhs.false800, %lor.lhs.false796, %if.else792
  %471 = load i8*, i8** %dst_name.addr, align 8, !dbg !5007
  %472 = load i32, i32* %src_mode, align 4, !dbg !5010
  %473 = load i32, i32* %omitted_permissions, align 4, !dbg !5011
  %neg805 = xor i32 %473, -1, !dbg !5012
  %and806 = and i32 %472, %neg805, !dbg !5013
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5014, !ctir !462
  %474 = load i64, i64* %st_rdev, align 8, !dbg !5014, !ctir !452
  %call807 = call i32 @mknod(i8* %471, i32 %and806, i64 %474) #9, !dbg !5015
  %cmp808 = icmp ne i32 %call807, 0, !dbg !5016
  br i1 %cmp808, label %if.then810, label %if.end814, !dbg !5017

if.then810:                                       ; preds = %if.then804
  %call811 = call i32* @__errno_location() #16, !dbg !5018
  %475 = load i32, i32* %call811, align 4, !dbg !5018, !ctir !7
  %call812 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.133, i64 0, i64 0)) #9, !dbg !5020
  %476 = load i8*, i8** %dst_name.addr, align 8, !dbg !5021
  %call813 = call i8* @quotearg_style(i32 4, i8* %476), !dbg !5021
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %475, i8* %call812, i8* %call813), !dbg !5022
  br label %un_backup, !dbg !5023

if.end814:                                        ; preds = %if.then804
  br label %if.end892, !dbg !5024

if.else815:                                       ; preds = %lor.lhs.false800
  %477 = load i32, i32* %src_mode, align 4, !dbg !5025
  %and816 = and i32 %477, 61440, !dbg !5025
  %cmp817 = icmp eq i32 %and816, 40960, !dbg !5025
  br i1 %cmp817, label %if.then819, label %if.else888, !dbg !5027

if.then819:                                       ; preds = %if.else815
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5028, metadata !DIExpression()), !dbg !5030
  %478 = load i8*, i8** %src_name.addr, align 8, !dbg !5031
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5032, !ctir !462
  %479 = load i64, i64* %st_size, align 8, !dbg !5032, !ctir !29
  %call820 = call i8* @areadlink_with_size(i8* %478, i64 %479), !dbg !5033
  store i8* %call820, i8** %src_link_val, align 8, !dbg !5030
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5034
  %480 = load i8*, i8** %src_link_val, align 8, !dbg !5035
  %cmp821 = icmp eq i8* %480, null, !dbg !5037
  br i1 %cmp821, label %if.then823, label %if.end827, !dbg !5038

if.then823:                                       ; preds = %if.then819
  %call824 = call i32* @__errno_location() #16, !dbg !5039
  %481 = load i32, i32* %call824, align 4, !dbg !5039, !ctir !7
  %call825 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.134, i64 0, i64 0)) #9, !dbg !5041
  %482 = load i8*, i8** %src_name.addr, align 8, !dbg !5042
  %call826 = call i8* @quotearg_style(i32 4, i8* %482), !dbg !5042
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %481, i8* %call825, i8* %call826), !dbg !5043
  br label %un_backup, !dbg !5044

if.end827:                                        ; preds = %if.then819
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5045, metadata !DIExpression()), !dbg !5046
  %483 = load i8*, i8** %src_link_val, align 8, !dbg !5047
  %484 = load i8*, i8** %dst_name.addr, align 8, !dbg !5048
  %485 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5049
  %unlink_dest_after_failed_open828 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %485, i32 0, i32 7, !dbg !5050, !ctir !3461
  %486 = load i8, i8* %unlink_dest_after_failed_open828, align 2, !dbg !5050
  %tobool829 = trunc i8 %486 to i1, !dbg !5050, !ctir !142
  %call830 = call i32 @force_symlinkat(i8* %483, i32 -100, i8* %484, i1 zeroext %tobool829, i32 -1), !dbg !5051
  store i32 %call830, i32* %symlink_err, align 4, !dbg !5046
  %487 = load i32, i32* %symlink_err, align 4, !dbg !5052
  %cmp831 = icmp slt i32 0, %487, !dbg !5054
  br i1 %cmp831, label %land.lhs.true833, label %if.end860, !dbg !5055

land.lhs.true833:                                 ; preds = %if.end827
  %488 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5056
  %update834 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %488, i32 0, i32 30, !dbg !5057, !ctir !3461
  %489 = load i8, i8* %update834, align 1, !dbg !5057
  %tobool835 = trunc i8 %489 to i1, !dbg !5057, !ctir !142
  br i1 %tobool835, label %land.lhs.true837, label %if.end860, !dbg !5058

land.lhs.true837:                                 ; preds = %land.lhs.true833
  %490 = load i8, i8* %new_dst.addr, align 1, !dbg !5059
  %tobool838 = trunc i8 %490 to i1, !dbg !5059
  br i1 %tobool838, label %if.end860, label %land.lhs.true839, !dbg !5060

land.lhs.true839:                                 ; preds = %land.lhs.true837
  %st_mode840 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5061, !ctir !462
  %491 = load i32, i32* %st_mode840, align 8, !dbg !5061, !ctir !140
  %and841 = and i32 %491, 61440, !dbg !5061
  %cmp842 = icmp eq i32 %and841, 40960, !dbg !5061
  br i1 %cmp842, label %land.lhs.true844, label %if.end860, !dbg !5062

land.lhs.true844:                                 ; preds = %land.lhs.true839
  %st_size845 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5063, !ctir !462
  %492 = load i64, i64* %st_size845, align 8, !dbg !5063, !ctir !29
  %493 = load i8*, i8** %src_link_val, align 8, !dbg !5064
  %call846 = call i64 @strlen(i8* %493) #14, !dbg !5065
  %cmp847 = icmp eq i64 %492, %call846, !dbg !5066
  br i1 %cmp847, label %if.then849, label %if.end860, !dbg !5067

if.then849:                                       ; preds = %land.lhs.true844
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5068, metadata !DIExpression()), !dbg !5070
  %494 = load i8*, i8** %dst_name.addr, align 8, !dbg !5071
  %st_size850 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5072, !ctir !462
  %495 = load i64, i64* %st_size850, align 8, !dbg !5072, !ctir !29
  %call851 = call i8* @areadlink_with_size(i8* %494, i64 %495), !dbg !5073
  store i8* %call851, i8** %dest_link_val, align 8, !dbg !5070
  %496 = load i8*, i8** %dest_link_val, align 8, !dbg !5074
  %tobool852 = icmp ne i8* %496, null, !dbg !5074
  br i1 %tobool852, label %if.then853, label %if.end859, !dbg !5076

if.then853:                                       ; preds = %if.then849
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5077
  %498 = load i8*, i8** %src_link_val, align 8, !dbg !5077
  %call854 = call i32 @strcmp(i8* %497, i8* %498) #14, !dbg !5077
  %cmp855 = icmp eq i32 %call854, 0, !dbg !5077
  br i1 %cmp855, label %if.then857, label %if.end858, !dbg !5080

if.then857:                                       ; preds = %if.then853
  store i32 0, i32* %symlink_err, align 4, !dbg !5081
  br label %if.end858, !dbg !5082

if.end858:                                        ; preds = %if.then857, %if.then853
  %499 = load i8*, i8** %dest_link_val, align 8, !dbg !5083
  call void @free(i8* %499) #9, !dbg !5084
  br label %if.end859, !dbg !5085

if.end859:                                        ; preds = %if.end858, %if.then849
  br label %if.end860, !dbg !5086

if.end860:                                        ; preds = %if.end859, %land.lhs.true844, %land.lhs.true839, %land.lhs.true837, %land.lhs.true833, %if.end827
  %500 = load i8*, i8** %src_link_val, align 8, !dbg !5087
  call void @free(i8* %500) #9, !dbg !5088
  %501 = load i32, i32* %symlink_err, align 4, !dbg !5089
  %cmp861 = icmp slt i32 0, %501, !dbg !5091
  br i1 %cmp861, label %if.then863, label %if.end866, !dbg !5092

if.then863:                                       ; preds = %if.end860
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5093
  %call864 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.135, i64 0, i64 0)) #9, !dbg !5095
  %503 = load i8*, i8** %dst_name.addr, align 8, !dbg !5096
  %call865 = call i8* @quotearg_style(i32 4, i8* %503), !dbg !5096
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %502, i8* %call864, i8* %call865), !dbg !5097
  br label %un_backup, !dbg !5098

if.end866:                                        ; preds = %if.end860
  %504 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5099
  %preserve_security_context867 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %504, i32 0, i32 22, !dbg !5101, !ctir !3461
  %505 = load i8, i8* %preserve_security_context867, align 1, !dbg !5101
  %tobool868 = trunc i8 %505 to i1, !dbg !5101, !ctir !142
  br i1 %tobool868, label %if.then869, label %if.end870, !dbg !5102

if.then869:                                       ; preds = %if.end866
  call void @restore_default_fscreatecon_or_die(), !dbg !5103
  br label %if.end870, !dbg !5103

if.end870:                                        ; preds = %if.then869, %if.end866
  %506 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5104
  %preserve_ownership871 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %506, i32 0, i32 14, !dbg !5106, !ctir !3461
  %507 = load i8, i8* %preserve_ownership871, align 1, !dbg !5106
  %tobool872 = trunc i8 %507 to i1, !dbg !5106, !ctir !142
  br i1 %tobool872, label %if.then873, label %if.end887, !dbg !5107

if.then873:                                       ; preds = %if.end870
  %508 = load i8*, i8** %dst_name.addr, align 8, !dbg !5108
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5111, !ctir !462
  %509 = load i32, i32* %st_uid, align 4, !dbg !5111, !ctir !128
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5112, !ctir !462
  %510 = load i32, i32* %st_gid, align 8, !dbg !5112, !ctir !130
  %call874 = call i32 @lchown(i8* %508, i32 %509, i32 %510) #9, !dbg !5113
  %cmp875 = icmp ne i32 %call874, 0, !dbg !5114
  br i1 %cmp875, label %land.lhs.true877, label %if.else885, !dbg !5115

land.lhs.true877:                                 ; preds = %if.then873
  %511 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5116
  %call878 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %511) #14, !dbg !5117
  br i1 %call878, label %if.else885, label %if.then879, !dbg !5118

if.then879:                                       ; preds = %land.lhs.true877
  %call880 = call i32* @__errno_location() #16, !dbg !5119
  %512 = load i32, i32* %call880, align 4, !dbg !5119, !ctir !7
  %call881 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !5121
  %513 = load i8*, i8** %dst_name.addr, align 8, !dbg !5122
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %512, i8* %call881, i8* %513), !dbg !5123
  %514 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5124
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %514, i32 0, i32 21, !dbg !5126, !ctir !3461
  %515 = load i8, i8* %require_preserve, align 4, !dbg !5126
  %tobool882 = trunc i8 %515 to i1, !dbg !5126, !ctir !142
  br i1 %tobool882, label %if.then883, label %if.end884, !dbg !5127

if.then883:                                       ; preds = %if.then879
  br label %un_backup, !dbg !5128

if.end884:                                        ; preds = %if.then879
  br label %if.end886, !dbg !5129

if.else885:                                       ; preds = %land.lhs.true877, %if.then873
  br label %if.end886

if.end886:                                        ; preds = %if.else885, %if.end884
  br label %if.end887, !dbg !5130

if.end887:                                        ; preds = %if.end886, %if.end870
  br label %if.end891, !dbg !5131

if.else888:                                       ; preds = %if.else815
  %call889 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.137, i64 0, i64 0)) #9, !dbg !5132
  %516 = load i8*, i8** %src_name.addr, align 8, !dbg !5134
  %call890 = call i8* @quotearg_style(i32 4, i8* %516), !dbg !5134
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call889, i8* %call890), !dbg !5135
  br label %un_backup, !dbg !5136

if.end891:                                        ; preds = %if.end887
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end814
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end791
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end768
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %if.end751
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %if.end732
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end684
  %517 = load i8, i8* %new_dst.addr, align 1, !dbg !5137
  %tobool898 = trunc i8 %517 to i1, !dbg !5137
  br i1 %tobool898, label %if.end924, label %land.lhs.true899, !dbg !5139

land.lhs.true899:                                 ; preds = %if.end897
  %518 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5140
  %copy_as_regular900 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %518, i32 0, i32 5, !dbg !5141, !ctir !3461
  %519 = load i8, i8* %copy_as_regular900, align 4, !dbg !5141
  %tobool901 = trunc i8 %519 to i1, !dbg !5141, !ctir !142
  br i1 %tobool901, label %if.end924, label %land.lhs.true902, !dbg !5142

land.lhs.true902:                                 ; preds = %land.lhs.true899
  %520 = load i32, i32* %src_mode, align 4, !dbg !5143
  %and903 = and i32 %520, 61440, !dbg !5143
  %cmp904 = icmp eq i32 %and903, 16384, !dbg !5143
  br i1 %cmp904, label %if.end924, label %land.lhs.true906, !dbg !5144

land.lhs.true906:                                 ; preds = %land.lhs.true902
  %521 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5145
  %set_security_context907 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %521, i32 0, i32 18, !dbg !5146, !ctir !3461
  %522 = load i8, i8* %set_security_context907, align 1, !dbg !5146
  %tobool908 = trunc i8 %522 to i1, !dbg !5146, !ctir !142
  br i1 %tobool908, label %if.then914, label %lor.lhs.false910, !dbg !5147

lor.lhs.false910:                                 ; preds = %land.lhs.true906
  %523 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5148
  %preserve_security_context911 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %523, i32 0, i32 22, !dbg !5149, !ctir !3461
  %524 = load i8, i8* %preserve_security_context911, align 1, !dbg !5149
  %tobool912 = trunc i8 %524 to i1, !dbg !5149, !ctir !142
  br i1 %tobool912, label %if.then914, label %if.end924, !dbg !5150

if.then914:                                       ; preds = %lor.lhs.false910, %land.lhs.true906
  %525 = load i8*, i8** %dst_name.addr, align 8, !dbg !5151
  %526 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5154
  %preserve_security_context915 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %526, i32 0, i32 22, !dbg !5155, !ctir !3461
  %527 = load i8, i8* %preserve_security_context915, align 1, !dbg !5155
  %tobool916 = trunc i8 %527 to i1, !dbg !5155, !ctir !142
  %528 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5156
  %call917 = call zeroext i1 @set_file_security_ctx(i8* %525, i1 zeroext %tobool916, i1 zeroext false, %struct.cp_options* %528), !dbg !5157
  br i1 %call917, label %if.end923, label %if.then918, !dbg !5158

if.then918:                                       ; preds = %if.then914
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5159
  %require_preserve_context919 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %529, i32 0, i32 23, !dbg !5162, !ctir !3461
  %530 = load i8, i8* %require_preserve_context919, align 2, !dbg !5162
  %tobool920 = trunc i8 %530 to i1, !dbg !5162, !ctir !142
  br i1 %tobool920, label %if.then921, label %if.end922, !dbg !5163

if.then921:                                       ; preds = %if.then918
  br label %un_backup, !dbg !5164

if.end922:                                        ; preds = %if.then918
  br label %if.end923, !dbg !5165

if.end923:                                        ; preds = %if.end922, %if.then914
  br label %if.end924, !dbg !5166

if.end924:                                        ; preds = %if.end923, %lor.lhs.false910, %land.lhs.true902, %land.lhs.true899, %if.end897
  %531 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5167
  %tobool925 = trunc i8 %531 to i1, !dbg !5167
  br i1 %tobool925, label %land.lhs.true927, label %if.end937, !dbg !5169

land.lhs.true927:                                 ; preds = %if.end924
  %532 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5170
  %dest_info928 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %532, i32 0, i32 37, !dbg !5171, !ctir !3461
  %533 = load %struct.hash_table*, %struct.hash_table** %dest_info928, align 8, !dbg !5171, !ctir !175
  %tobool929 = icmp ne %struct.hash_table* %533, null, !dbg !5170
  br i1 %tobool929, label %if.then930, label %if.end937, !dbg !5172

if.then930:                                       ; preds = %land.lhs.true927
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5173, metadata !DIExpression()), !dbg !5175
  %534 = load i8*, i8** %dst_name.addr, align 8, !dbg !5176
  %call931 = call i32 @lstat(i8* %534, %struct.stat* %sb) #9, !dbg !5178
  %cmp932 = icmp eq i32 %call931, 0, !dbg !5179
  br i1 %cmp932, label %if.then934, label %if.end936, !dbg !5180

if.then934:                                       ; preds = %if.then930
  %535 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5181
  %dest_info935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %535, i32 0, i32 37, !dbg !5182, !ctir !3461
  %536 = load %struct.hash_table*, %struct.hash_table** %dest_info935, align 8, !dbg !5182, !ctir !175
  %537 = load i8*, i8** %dst_name.addr, align 8, !dbg !5183
  call void @record_file(%struct.hash_table* %536, i8* %537, %struct.stat* %sb), !dbg !5184
  br label %if.end936, !dbg !5184

if.end936:                                        ; preds = %if.then934, %if.then930
  br label %if.end937, !dbg !5185

if.end937:                                        ; preds = %if.end936, %land.lhs.true927, %if.end924
  %538 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5186
  %hard_link938 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %538, i32 0, i32 8, !dbg !5188, !ctir !3461
  %539 = load i8, i8* %hard_link938, align 1, !dbg !5188
  %tobool939 = trunc i8 %539 to i1, !dbg !5188, !ctir !142
  br i1 %tobool939, label %land.lhs.true941, label %if.end947, !dbg !5189

land.lhs.true941:                                 ; preds = %if.end937
  %540 = load i32, i32* %src_mode, align 4, !dbg !5190
  %and942 = and i32 %540, 61440, !dbg !5190
  %cmp943 = icmp eq i32 %and942, 16384, !dbg !5190
  br i1 %cmp943, label %if.end947, label %if.then945, !dbg !5191

if.then945:                                       ; preds = %land.lhs.true941
  %541 = load i8, i8* %delayed_ok, align 1, !dbg !5192
  %tobool946 = trunc i8 %541 to i1, !dbg !5192
  store i1 %tobool946, i1* %retval, align 1, !dbg !5193
  br label %return, !dbg !5193

if.end947:                                        ; preds = %land.lhs.true941, %if.end937
  %542 = load i8, i8* %copied_as_regular, align 1, !dbg !5194
  %tobool948 = trunc i8 %542 to i1, !dbg !5194
  br i1 %tobool948, label %if.then949, label %if.end951, !dbg !5196

if.then949:                                       ; preds = %if.end947
  %543 = load i8, i8* %delayed_ok, align 1, !dbg !5197
  %tobool950 = trunc i8 %543 to i1, !dbg !5197
  store i1 %tobool950, i1* %retval, align 1, !dbg !5198
  br label %return, !dbg !5198

if.end951:                                        ; preds = %if.end947
  %544 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5199
  %preserve_timestamps952 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %544, i32 0, i32 16, !dbg !5201, !ctir !3461
  %545 = load i8, i8* %preserve_timestamps952, align 1, !dbg !5201
  %tobool953 = trunc i8 %545 to i1, !dbg !5201, !ctir !142
  br i1 %tobool953, label %if.then954, label %if.end980, !dbg !5202

if.then954:                                       ; preds = %if.end951
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5203, metadata !DIExpression()), !dbg !5205
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5206, !ctir !510
  %call956 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5207
  %546 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5207
  %547 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 0, !dbg !5207
  %548 = extractvalue { i64, i64 } %call956, 0, !dbg !5207
  store i64 %548, i64* %547, align 8, !dbg !5207
  %549 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 1, !dbg !5207
  %550 = extractvalue { i64, i64 } %call956, 1, !dbg !5207
  store i64 %550, i64* %549, align 8, !dbg !5207
  %551 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5207
  %552 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %551, i8* align 8 %552, i64 16, i1 false), !dbg !5207
  %arrayidx957 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5208, !ctir !510
  %call959 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5209
  %553 = bitcast %struct.timespec* %tmp958 to { i64, i64 }*, !dbg !5209
  %554 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 0, !dbg !5209
  %555 = extractvalue { i64, i64 } %call959, 0, !dbg !5209
  store i64 %555, i64* %554, align 8, !dbg !5209
  %556 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 1, !dbg !5209
  %557 = extractvalue { i64, i64 } %call959, 1, !dbg !5209
  store i64 %557, i64* %556, align 8, !dbg !5209
  %558 = bitcast %struct.timespec* %arrayidx957 to i8*, !dbg !5209
  %559 = bitcast %struct.timespec* %tmp958 to i8*, !dbg !5209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %558, i8* align 8 %559, i64 16, i1 false), !dbg !5209
  %560 = load i8, i8* %dest_is_symlink, align 1, !dbg !5210
  %tobool960 = trunc i8 %560 to i1, !dbg !5210
  br i1 %tobool960, label %cond.true962, label %cond.false964, !dbg !5210

cond.true962:                                     ; preds = %if.then954
  %561 = load i8*, i8** %dst_name.addr, align 8, !dbg !5212
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5213, !ctir !510
  %call963 = call i32 @utimens_symlink(i8* %561, %struct.timespec* %arraydecay), !dbg !5214
  br label %cond.end967, !dbg !5210

cond.false964:                                    ; preds = %if.then954
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5215
  %arraydecay965 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5216, !ctir !510
  %call966 = call i32 @utimens(i8* %562, %struct.timespec* %arraydecay965), !dbg !5217
  br label %cond.end967, !dbg !5210

cond.end967:                                      ; preds = %cond.false964, %cond.true962
  %cond968 = phi i32 [ %call963, %cond.true962 ], [ %call966, %cond.false964 ], !dbg !5210
  %cmp969 = icmp ne i32 %cond968, 0, !dbg !5218
  br i1 %cmp969, label %if.then971, label %if.end979, !dbg !5219

if.then971:                                       ; preds = %cond.end967
  %call972 = call i32* @__errno_location() #16, !dbg !5220
  %563 = load i32, i32* %call972, align 4, !dbg !5220, !ctir !7
  %call973 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !5222
  %564 = load i8*, i8** %dst_name.addr, align 8, !dbg !5223
  %call974 = call i8* @quotearg_style(i32 4, i8* %564), !dbg !5223
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %563, i8* %call973, i8* %call974), !dbg !5224
  %565 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5225
  %require_preserve975 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %565, i32 0, i32 21, !dbg !5227, !ctir !3461
  %566 = load i8, i8* %require_preserve975, align 4, !dbg !5227
  %tobool976 = trunc i8 %566 to i1, !dbg !5227, !ctir !142
  br i1 %tobool976, label %if.then977, label %if.end978, !dbg !5228

if.then977:                                       ; preds = %if.then971
  store i1 false, i1* %retval, align 1, !dbg !5229
  br label %return, !dbg !5229

if.end978:                                        ; preds = %if.then971
  br label %if.end979, !dbg !5230

if.end979:                                        ; preds = %if.end978, %cond.end967
  br label %if.end980, !dbg !5231

if.end980:                                        ; preds = %if.end979, %if.end951
  %567 = load i8, i8* %dest_is_symlink, align 1, !dbg !5232
  %tobool981 = trunc i8 %567 to i1, !dbg !5232
  br i1 %tobool981, label %if.end1004, label %land.lhs.true982, !dbg !5234

land.lhs.true982:                                 ; preds = %if.end980
  %568 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5235
  %preserve_ownership983 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %568, i32 0, i32 14, !dbg !5236, !ctir !3461
  %569 = load i8, i8* %preserve_ownership983, align 1, !dbg !5236
  %tobool984 = trunc i8 %569 to i1, !dbg !5236, !ctir !142
  br i1 %tobool984, label %land.lhs.true986, label %if.end1004, !dbg !5237

land.lhs.true986:                                 ; preds = %land.lhs.true982
  %570 = load i8, i8* %new_dst.addr, align 1, !dbg !5238
  %tobool987 = trunc i8 %570 to i1, !dbg !5238
  br i1 %tobool987, label %if.then999, label %lor.lhs.false989, !dbg !5239

lor.lhs.false989:                                 ; preds = %land.lhs.true986
  %st_uid990 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5240, !ctir !462
  %571 = load i32, i32* %st_uid990, align 4, !dbg !5240, !ctir !128
  %st_uid991 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5240, !ctir !462
  %572 = load i32, i32* %st_uid991, align 4, !dbg !5240, !ctir !128
  %cmp992 = icmp eq i32 %571, %572, !dbg !5240
  br i1 %cmp992, label %land.lhs.true994, label %if.then999, !dbg !5240

land.lhs.true994:                                 ; preds = %lor.lhs.false989
  %st_gid995 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5240, !ctir !462
  %573 = load i32, i32* %st_gid995, align 8, !dbg !5240, !ctir !130
  %st_gid996 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5240, !ctir !462
  %574 = load i32, i32* %st_gid996, align 8, !dbg !5240, !ctir !130
  %cmp997 = icmp eq i32 %573, %574, !dbg !5240
  br i1 %cmp997, label %if.end1004, label %if.then999, !dbg !5241

if.then999:                                       ; preds = %land.lhs.true994, %lor.lhs.false989, %land.lhs.true986
  %575 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5242
  %576 = load i8*, i8** %dst_name.addr, align 8, !dbg !5244
  %577 = load i8, i8* %new_dst.addr, align 1, !dbg !5245
  %tobool1000 = trunc i8 %577 to i1, !dbg !5245
  %call1001 = call i32 @set_owner(%struct.cp_options* %575, i8* %576, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool1000, %struct.stat* %dst_sb), !dbg !5246
  switch i32 %call1001, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb1002
  ], !dbg !5247

sw.bb:                                            ; preds = %if.then999
  store i1 false, i1* %retval, align 1, !dbg !5248
  br label %return, !dbg !5248

sw.bb1002:                                        ; preds = %if.then999
  %578 = load i32, i32* %src_mode, align 4, !dbg !5250
  %and1003 = and i32 %578, -3585, !dbg !5250
  store i32 %and1003, i32* %src_mode, align 4, !dbg !5250
  br label %sw.epilog, !dbg !5251

sw.epilog:                                        ; preds = %if.then999, %sw.bb1002
  br label %if.end1004, !dbg !5252

if.end1004:                                       ; preds = %sw.epilog, %land.lhs.true994, %land.lhs.true982, %if.end980
  %579 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5253
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %579, i32 0, i32 24, !dbg !5255, !ctir !3461
  %580 = load i8, i8* %preserve_xattr, align 1, !dbg !5255
  %tobool1005 = trunc i8 %580 to i1, !dbg !5255, !ctir !142
  br i1 %tobool1005, label %land.lhs.true1007, label %if.end1013, !dbg !5256

land.lhs.true1007:                                ; preds = %if.end1004
  %581 = load i8*, i8** %src_name.addr, align 8, !dbg !5257
  %582 = load i8*, i8** %dst_name.addr, align 8, !dbg !5258
  %583 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5259
  %call1008 = call zeroext i1 @copy_attr(i8* %581, i32 -1, i8* %582, i32 -1, %struct.cp_options* %583), !dbg !5260
  br i1 %call1008, label %if.end1013, label %land.lhs.true1009, !dbg !5261

land.lhs.true1009:                                ; preds = %land.lhs.true1007
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5262
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %584, i32 0, i32 25, !dbg !5263, !ctir !3461
  %585 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5263
  %tobool1010 = trunc i8 %585 to i1, !dbg !5263, !ctir !142
  br i1 %tobool1010, label %if.then1012, label %if.end1013, !dbg !5264

if.then1012:                                      ; preds = %land.lhs.true1009
  store i1 false, i1* %retval, align 1, !dbg !5265
  br label %return, !dbg !5265

if.end1013:                                       ; preds = %land.lhs.true1009, %land.lhs.true1007, %if.end1004
  %586 = load i8, i8* %dest_is_symlink, align 1, !dbg !5266
  %tobool1014 = trunc i8 %586 to i1, !dbg !5266
  br i1 %tobool1014, label %if.then1015, label %if.end1017, !dbg !5268

if.then1015:                                      ; preds = %if.end1013
  %587 = load i8, i8* %delayed_ok, align 1, !dbg !5269
  %tobool1016 = trunc i8 %587 to i1, !dbg !5269
  store i1 %tobool1016, i1* %retval, align 1, !dbg !5270
  br label %return, !dbg !5270

if.end1017:                                       ; preds = %if.end1013
  %588 = load i8*, i8** %dst_name.addr, align 8, !dbg !5271
  call void @set_author(i8* %588, i32 -1, %struct.stat* %src_sb), !dbg !5272
  %589 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5273
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %589, i32 0, i32 15, !dbg !5275, !ctir !3461
  %590 = load i8, i8* %preserve_mode, align 2, !dbg !5275
  %tobool1018 = trunc i8 %590 to i1, !dbg !5275, !ctir !142
  br i1 %tobool1018, label %if.then1024, label %lor.lhs.false1020, !dbg !5276

lor.lhs.false1020:                                ; preds = %if.end1017
  %591 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5277
  %move_mode1021 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %591, i32 0, i32 9, !dbg !5278, !ctir !3461
  %592 = load i8, i8* %move_mode1021, align 8, !dbg !5278
  %tobool1022 = trunc i8 %592 to i1, !dbg !5278, !ctir !142
  br i1 %tobool1022, label %if.then1024, label %if.else1034, !dbg !5279

if.then1024:                                      ; preds = %lor.lhs.false1020, %if.end1017
  %593 = load i8*, i8** %src_name.addr, align 8, !dbg !5280
  %594 = load i8*, i8** %dst_name.addr, align 8, !dbg !5283
  %595 = load i32, i32* %src_mode, align 4, !dbg !5284
  %call1025 = call i32 @copy_acl(i8* %593, i32 -1, i8* %594, i32 -1, i32 %595), !dbg !5285
  %cmp1026 = icmp ne i32 %call1025, 0, !dbg !5286
  br i1 %cmp1026, label %land.lhs.true1028, label %if.end1033, !dbg !5287

land.lhs.true1028:                                ; preds = %if.then1024
  %596 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5288
  %require_preserve1029 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %596, i32 0, i32 21, !dbg !5289, !ctir !3461
  %597 = load i8, i8* %require_preserve1029, align 4, !dbg !5289
  %tobool1030 = trunc i8 %597 to i1, !dbg !5289, !ctir !142
  br i1 %tobool1030, label %if.then1032, label %if.end1033, !dbg !5290

if.then1032:                                      ; preds = %land.lhs.true1028
  store i1 false, i1* %retval, align 1, !dbg !5291
  br label %return, !dbg !5291

if.end1033:                                       ; preds = %land.lhs.true1028, %if.then1024
  br label %if.end1115, !dbg !5292

if.else1034:                                      ; preds = %lor.lhs.false1020
  %598 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5293
  %set_mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %598, i32 0, i32 28, !dbg !5295, !ctir !3461
  %599 = load i8, i8* %set_mode1035, align 1, !dbg !5295
  %tobool1036 = trunc i8 %599 to i1, !dbg !5295, !ctir !142
  br i1 %tobool1036, label %if.then1037, label %if.else1044, !dbg !5296

if.then1037:                                      ; preds = %if.else1034
  %600 = load i8*, i8** %dst_name.addr, align 8, !dbg !5297
  %601 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5300
  %mode1038 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %601, i32 0, i32 4, !dbg !5301, !ctir !3461
  %602 = load i32, i32* %mode1038, align 8, !dbg !5301, !ctir !139
  %call1039 = call i32 @set_acl(i8* %600, i32 -1, i32 %602), !dbg !5302
  %cmp1040 = icmp ne i32 %call1039, 0, !dbg !5303
  br i1 %cmp1040, label %if.then1042, label %if.end1043, !dbg !5304

if.then1042:                                      ; preds = %if.then1037
  store i1 false, i1* %retval, align 1, !dbg !5305
  br label %return, !dbg !5305

if.end1043:                                       ; preds = %if.then1037
  br label %if.end1114, !dbg !5306

if.else1044:                                      ; preds = %if.else1034
  %603 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5307
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %603, i32 0, i32 17, !dbg !5309, !ctir !3461
  %604 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !5309
  %tobool1045 = trunc i8 %604 to i1, !dbg !5309, !ctir !142
  br i1 %tobool1045, label %land.lhs.true1047, label %if.else1068, !dbg !5310

land.lhs.true1047:                                ; preds = %if.else1044
  %605 = load i8, i8* %new_dst.addr, align 1, !dbg !5311
  %tobool1048 = trunc i8 %605 to i1, !dbg !5311
  br i1 %tobool1048, label %if.then1050, label %if.else1068, !dbg !5312

if.then1050:                                      ; preds = %land.lhs.true1047
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !5313, metadata !DIExpression()), !dbg !5315
  %606 = load i32, i32* %src_mode, align 4, !dbg !5316
  %and1051 = and i32 %606, 61440, !dbg !5316
  %cmp1052 = icmp eq i32 %and1051, 16384, !dbg !5316
  br i1 %cmp1052, label %lor.end1058, label %lor.rhs1054, !dbg !5317

lor.rhs1054:                                      ; preds = %if.then1050
  %607 = load i32, i32* %src_mode, align 4, !dbg !5318
  %and1055 = and i32 %607, 61440, !dbg !5318
  %cmp1056 = icmp eq i32 %and1055, 49152, !dbg !5318
  br label %lor.end1058, !dbg !5317

lor.end1058:                                      ; preds = %lor.rhs1054, %if.then1050
  %608 = phi i1 [ true, %if.then1050 ], [ %cmp1056, %lor.rhs1054 ]
  %609 = zext i1 %608 to i64, !dbg !5316
  %cond1059 = select i1 %608, i32 511, i32 438, !dbg !5316
  store i32 %cond1059, i32* %default_permissions, align 4, !dbg !5315
  %610 = load i8*, i8** %dst_name.addr, align 8, !dbg !5319
  %611 = load i32, i32* %default_permissions, align 4, !dbg !5321
  %call1060 = call i32 @cached_umask(), !dbg !5322
  %neg1061 = xor i32 %call1060, -1, !dbg !5323
  %and1062 = and i32 %611, %neg1061, !dbg !5324
  %call1063 = call i32 @set_acl(i8* %610, i32 -1, i32 %and1062), !dbg !5325
  %cmp1064 = icmp ne i32 %call1063, 0, !dbg !5326
  br i1 %cmp1064, label %if.then1066, label %if.end1067, !dbg !5327

if.then1066:                                      ; preds = %lor.end1058
  store i1 false, i1* %retval, align 1, !dbg !5328
  br label %return, !dbg !5328

if.end1067:                                       ; preds = %lor.end1058
  br label %if.end1113, !dbg !5329

if.else1068:                                      ; preds = %land.lhs.true1047, %if.else1044
  %612 = load i32, i32* %omitted_permissions, align 4, !dbg !5330
  %tobool1069 = icmp ne i32 %612, 0, !dbg !5330
  br i1 %tobool1069, label %if.then1070, label %if.end1096, !dbg !5333

if.then1070:                                      ; preds = %if.else1068
  %call1071 = call i32 @cached_umask(), !dbg !5334
  %neg1072 = xor i32 %call1071, -1, !dbg !5336
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !5337
  %and1073 = and i32 %613, %neg1072, !dbg !5337
  store i32 %and1073, i32* %omitted_permissions, align 4, !dbg !5337
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !5338
  %tobool1074 = icmp ne i32 %614, 0, !dbg !5338
  br i1 %tobool1074, label %land.lhs.true1075, label %if.end1095, !dbg !5340

land.lhs.true1075:                                ; preds = %if.then1070
  %615 = load i8, i8* %restore_dst_mode, align 1, !dbg !5341
  %tobool1076 = trunc i8 %615 to i1, !dbg !5341
  br i1 %tobool1076, label %if.end1095, label %if.then1077, !dbg !5342

if.then1077:                                      ; preds = %land.lhs.true1075
  %616 = load i8, i8* %new_dst.addr, align 1, !dbg !5343
  %tobool1078 = trunc i8 %616 to i1, !dbg !5343
  br i1 %tobool1078, label %land.lhs.true1080, label %if.end1088, !dbg !5346

land.lhs.true1080:                                ; preds = %if.then1077
  %617 = load i8*, i8** %dst_name.addr, align 8, !dbg !5347
  %call1081 = call i32 @lstat(i8* %617, %struct.stat* %dst_sb) #9, !dbg !5348
  %cmp1082 = icmp ne i32 %call1081, 0, !dbg !5349
  br i1 %cmp1082, label %if.then1084, label %if.end1088, !dbg !5350

if.then1084:                                      ; preds = %land.lhs.true1080
  %call1085 = call i32* @__errno_location() #16, !dbg !5351
  %618 = load i32, i32* %call1085, align 4, !dbg !5351, !ctir !7
  %call1086 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !5353
  %619 = load i8*, i8** %dst_name.addr, align 8, !dbg !5354
  %call1087 = call i8* @quotearg_style(i32 4, i8* %619), !dbg !5354
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %618, i8* %call1086, i8* %call1087), !dbg !5355
  store i1 false, i1* %retval, align 1, !dbg !5356
  br label %return, !dbg !5356

if.end1088:                                       ; preds = %land.lhs.true1080, %if.then1077
  %st_mode1089 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5357, !ctir !462
  %620 = load i32, i32* %st_mode1089, align 8, !dbg !5357, !ctir !140
  store i32 %620, i32* %dst_mode, align 4, !dbg !5358
  %621 = load i32, i32* %omitted_permissions, align 4, !dbg !5359
  %622 = load i32, i32* %dst_mode, align 4, !dbg !5361
  %neg1090 = xor i32 %622, -1, !dbg !5362
  %and1091 = and i32 %621, %neg1090, !dbg !5363
  %tobool1092 = icmp ne i32 %and1091, 0, !dbg !5363
  br i1 %tobool1092, label %if.then1093, label %if.end1094, !dbg !5364

if.then1093:                                      ; preds = %if.end1088
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5365
  br label %if.end1094, !dbg !5366

if.end1094:                                       ; preds = %if.then1093, %if.end1088
  br label %if.end1095, !dbg !5367

if.end1095:                                       ; preds = %if.end1094, %land.lhs.true1075, %if.then1070
  br label %if.end1096, !dbg !5368

if.end1096:                                       ; preds = %if.end1095, %if.else1068
  %623 = load i8, i8* %restore_dst_mode, align 1, !dbg !5369
  %tobool1097 = trunc i8 %623 to i1, !dbg !5369
  br i1 %tobool1097, label %if.then1098, label %if.end1112, !dbg !5371

if.then1098:                                      ; preds = %if.end1096
  %624 = load i8*, i8** %dst_name.addr, align 8, !dbg !5372
  %625 = load i32, i32* %dst_mode, align 4, !dbg !5375
  %626 = load i32, i32* %omitted_permissions, align 4, !dbg !5376
  %or1099 = or i32 %625, %626, !dbg !5377
  %call1100 = call i32 @chmod(i8* %624, i32 %or1099) #9, !dbg !5378
  %cmp1101 = icmp ne i32 %call1100, 0, !dbg !5379
  br i1 %cmp1101, label %if.then1103, label %if.end1111, !dbg !5380

if.then1103:                                      ; preds = %if.then1098
  %call1104 = call i32* @__errno_location() #16, !dbg !5381
  %627 = load i32, i32* %call1104, align 4, !dbg !5381, !ctir !7
  %call1105 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !5383
  %628 = load i8*, i8** %dst_name.addr, align 8, !dbg !5384
  %call1106 = call i8* @quotearg_style(i32 4, i8* %628), !dbg !5384
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %627, i8* %call1105, i8* %call1106), !dbg !5385
  %629 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5386
  %require_preserve1107 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %629, i32 0, i32 21, !dbg !5388, !ctir !3461
  %630 = load i8, i8* %require_preserve1107, align 4, !dbg !5388
  %tobool1108 = trunc i8 %630 to i1, !dbg !5388, !ctir !142
  br i1 %tobool1108, label %if.then1109, label %if.end1110, !dbg !5389

if.then1109:                                      ; preds = %if.then1103
  store i1 false, i1* %retval, align 1, !dbg !5390
  br label %return, !dbg !5390

if.end1110:                                       ; preds = %if.then1103
  br label %if.end1111, !dbg !5391

if.end1111:                                       ; preds = %if.end1110, %if.then1098
  br label %if.end1112, !dbg !5392

if.end1112:                                       ; preds = %if.end1111, %if.end1096
  br label %if.end1113

if.end1113:                                       ; preds = %if.end1112, %if.end1067
  br label %if.end1114

if.end1114:                                       ; preds = %if.end1113, %if.end1043
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end1033
  %631 = load i8, i8* %delayed_ok, align 1, !dbg !5393
  %tobool1116 = trunc i8 %631 to i1, !dbg !5393
  store i1 %tobool1116, i1* %retval, align 1, !dbg !5394
  br label %return, !dbg !5394

un_backup:                                        ; preds = %if.then921, %if.else888, %if.then883, %if.then863, %if.then823, %if.then810, %if.then786, %if.then767, %if.then750, %if.then728, %if.then718, %if.then667, %if.then631, %if.then619, %if.then612, %if.then596, %if.then489, %if.else477, %if.then453, %if.then163
  call void @llvm.dbg.label(metadata !5395), !dbg !5396
  %632 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5397
  %preserve_security_context1117 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %632, i32 0, i32 22, !dbg !5399, !ctir !3461
  %633 = load i8, i8* %preserve_security_context1117, align 1, !dbg !5399
  %tobool1118 = trunc i8 %633 to i1, !dbg !5399, !ctir !142
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !5400

if.then1119:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !5401
  br label %if.end1120, !dbg !5401

if.end1120:                                       ; preds = %if.then1119, %un_backup
  %634 = load i8*, i8** %earlier_file, align 8, !dbg !5402
  %cmp1121 = icmp eq i8* %634, null, !dbg !5404
  br i1 %cmp1121, label %if.then1123, label %if.end1126, !dbg !5405

if.then1123:                                      ; preds = %if.end1120
  %st_ino1124 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5406, !ctir !462
  %635 = load i64, i64* %st_ino1124, align 8, !dbg !5406, !ctir !453
  %st_dev1125 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5407, !ctir !462
  %636 = load i64, i64* %st_dev1125, align 8, !dbg !5407, !ctir !452
  call void @forget_created(i64 %635, i64 %636), !dbg !5408
  br label %if.end1126, !dbg !5408

if.end1126:                                       ; preds = %if.then1123, %if.end1120
  %637 = load i8*, i8** %dst_backup, align 8, !dbg !5409
  %tobool1127 = icmp ne i8* %637, null, !dbg !5409
  br i1 %tobool1127, label %if.then1128, label %if.end1146, !dbg !5411

if.then1128:                                      ; preds = %if.end1126
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !5412
  %639 = load i8*, i8** %dst_name.addr, align 8, !dbg !5415
  %call1129 = call i32 @rename(i8* %638, i8* %639) #9, !dbg !5416
  %cmp1130 = icmp ne i32 %call1129, 0, !dbg !5417
  br i1 %cmp1130, label %if.then1132, label %if.else1136, !dbg !5418

if.then1132:                                      ; preds = %if.then1128
  %call1133 = call i32* @__errno_location() #16, !dbg !5419
  %640 = load i32, i32* %call1133, align 4, !dbg !5419, !ctir !7
  %call1134 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.140, i64 0, i64 0)) #9, !dbg !5420
  %641 = load i8*, i8** %dst_name.addr, align 8, !dbg !5421
  %call1135 = call i8* @quotearg_style(i32 4, i8* %641), !dbg !5421
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %640, i8* %call1134, i8* %call1135), !dbg !5422
  br label %if.end1145, !dbg !5422

if.else1136:                                      ; preds = %if.then1128
  %642 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5423
  %verbose1137 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %642, i32 0, i32 31, !dbg !5426, !ctir !3461
  %643 = load i8, i8* %verbose1137, align 2, !dbg !5426
  %tobool1138 = trunc i8 %643 to i1, !dbg !5426, !ctir !142
  br i1 %tobool1138, label %if.then1139, label %if.end1144, !dbg !5427

if.then1139:                                      ; preds = %if.else1136
  %call1140 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.141, i64 0, i64 0)) #9, !dbg !5428
  %644 = load i8*, i8** %dst_backup, align 8, !dbg !5429
  %call1141 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %644), !dbg !5429
  %645 = load i8*, i8** %dst_name.addr, align 8, !dbg !5430
  %call1142 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %645), !dbg !5430
  %call1143 = call i32 (i8*, ...) @printf(i8* %call1140, i8* %call1141, i8* %call1142), !dbg !5431
  br label %if.end1144, !dbg !5431

if.end1144:                                       ; preds = %if.then1139, %if.else1136
  br label %if.end1145

if.end1145:                                       ; preds = %if.end1144, %if.then1132
  br label %if.end1146, !dbg !5432

if.end1146:                                       ; preds = %if.end1145, %if.end1126
  store i1 false, i1* %retval, align 1, !dbg !5433
  br label %return, !dbg !5433

return:                                           ; preds = %if.end1146, %if.end1115, %if.then1109, %if.then1084, %if.then1066, %if.then1042, %if.then1032, %if.then1015, %if.then1012, %sw.bb, %if.then977, %if.then949, %if.then945, %if.then590, %if.then555, %if.then536, %if.then530, %if.end527, %if.end490, %if.end467, %if.then377, %if.then333, %if.then300, %cond.end287, %if.then257, %if.else238, %if.then219, %if.else207, %if.then192, %if.then188, %if.end175, %if.end165, %if.then132, %if.then117, %if.then63, %cond.end47, %if.then34
  %646 = load i1, i1* %retval, align 1, !dbg !5434
  ret i1 %646, !dbg !5434
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #10 !dbg !5435 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5438, metadata !DIExpression()), !dbg !5439
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !5440, metadata !DIExpression()), !dbg !5441
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5442
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !5443, !ctir !3461
  %1 = load i32, i32* %dereference, align 4, !dbg !5443, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !5444
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5445

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5446
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !5447, !ctir !3461
  %3 = load i32, i32* %dereference1, align 4, !dbg !5447, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !5448
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !5449

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5450
  %tobool = trunc i8 %4 to i1, !dbg !5450
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !5451
  br label %lor.end, !dbg !5445

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !5452
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !5453 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !511
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !511
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !462
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !462
  %same_link = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %sn = alloca i8, align 1, !ctir !142
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !5458, metadata !DIExpression()), !dbg !5459
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5460, metadata !DIExpression()), !dbg !5461
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5464, metadata !DIExpression()), !dbg !5465
  store i8* %return_now, i8** %return_now.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !5466, metadata !DIExpression()), !dbg !5467
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !5468, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !5470, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !5472, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !5474, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata i8* %same, metadata !5478, metadata !DIExpression()), !dbg !5479
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5480
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !5480, !ctir !512
  %1 = load i64, i64* %st_ino, align 8, !dbg !5480, !ctir !453
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5480
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !5480, !ctir !512
  %3 = load i64, i64* %st_ino1, align 8, !dbg !5480, !ctir !453
  %cmp = icmp eq i64 %1, %3, !dbg !5480
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5480

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5480
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !5480, !ctir !512
  %5 = load i64, i64* %st_dev, align 8, !dbg !5480, !ctir !452
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5480
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !5480, !ctir !512
  %7 = load i64, i64* %st_dev2, align 8, !dbg !5480, !ctir !452
  %cmp3 = icmp eq i64 %5, %7, !dbg !5480
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !5481
  %frombool = zext i1 %8 to i8, !dbg !5479
  store i8 %frombool, i8* %same, align 1, !dbg !5479
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !5482
  store i8 0, i8* %9, align 1, !dbg !5483, !ctir !142
  %10 = load i8, i8* %same, align 1, !dbg !5484
  %tobool = trunc i8 %10 to i1, !dbg !5484
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5486

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5487
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !5488, !ctir !3461
  %12 = load i8, i8* %hard_link, align 1, !dbg !5488
  %tobool4 = trunc i8 %12 to i1, !dbg !5488, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5489

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !5490
  store i8 1, i8* %13, align 1, !dbg !5492, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5493
  br label %return, !dbg !5493

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5494
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !5496, !ctir !3461
  %15 = load i32, i32* %dereference, align 4, !dbg !5496, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !5497
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5498

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !5499
  %tobool7 = trunc i8 %16 to i1, !dbg !5499
  %frombool8 = zext i1 %tobool7 to i8, !dbg !5501
  store i8 %frombool8, i8* %same_link, align 1, !dbg !5501
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5502
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !5502, !ctir !512
  %18 = load i32, i32* %st_mode, align 8, !dbg !5502, !ctir !140
  %and = and i32 %18, 61440, !dbg !5502
  %cmp9 = icmp eq i32 %and, 40960, !dbg !5502
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !5504

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5505
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !5505, !ctir !512
  %20 = load i32, i32* %st_mode11, align 8, !dbg !5505, !ctir !140
  %and12 = and i32 %20, 61440, !dbg !5505
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !5505
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !5506

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !5507, metadata !DIExpression()), !dbg !5509
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !5510
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !5511
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !5512
  %frombool15 = zext i1 %call to i8, !dbg !5509
  store i8 %frombool15, i8* %sn, align 1, !dbg !5509
  %23 = load i8, i8* %sn, align 1, !dbg !5513
  %tobool16 = trunc i8 %23 to i1, !dbg !5513
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !5515

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5516
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !5519, !ctir !3461
  %25 = load i32, i32* %backup_type, align 8, !dbg !5519, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !5520
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5521

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !5522
  br label %return, !dbg !5522

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !5523
  %tobool21 = trunc i8 %26 to i1, !dbg !5523
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5525

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !5526
  store i8 1, i8* %27, align 1, !dbg !5528, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5529
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !5530, !ctir !3461
  %29 = load i8, i8* %move_mode, align 8, !dbg !5530
  %tobool23 = trunc i8 %29 to i1, !dbg !5530, !ctir !142
  %lnot = xor i1 %tobool23, true, !dbg !5531
  store i1 %lnot, i1* %retval, align 1, !dbg !5532
  br label %return, !dbg !5532

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !5533

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !5534
  %tobool26 = trunc i8 %30 to i1, !dbg !5534
  %lnot27 = xor i1 %tobool26, true, !dbg !5535
  store i1 %lnot27, i1* %retval, align 1, !dbg !5536
  br label %return, !dbg !5536

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5537
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !5538
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5539
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !5540
  br label %if.end58, !dbg !5541

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !5542
  %tobool29 = trunc i8 %33 to i1, !dbg !5542
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !5545

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !5546
  br label %return, !dbg !5546

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !5547
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #9, !dbg !5549
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5550
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !5551

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !5552
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #9, !dbg !5553
  %cmp35 = icmp ne i32 %call34, 0, !dbg !5554
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !5555

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !5556
  br label %return, !dbg !5556

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !5557
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !5558
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5559
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !5559, !ctir !512
  %37 = load i64, i64* %st_ino38, align 8, !dbg !5559, !ctir !453
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5559
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !5559, !ctir !512
  %39 = load i64, i64* %st_ino39, align 8, !dbg !5559, !ctir !453
  %cmp40 = icmp eq i64 %37, %39, !dbg !5559
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !5559

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5559
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !5559, !ctir !512
  %41 = load i64, i64* %st_dev42, align 8, !dbg !5559, !ctir !452
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5559
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !5559, !ctir !512
  %43 = load i64, i64* %st_dev43, align 8, !dbg !5559, !ctir !452
  %cmp44 = icmp eq i64 %41, %43, !dbg !5559
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !5560
  %frombool46 = zext i1 %44 to i8, !dbg !5561
  store i8 %frombool46, i8* %same_link, align 1, !dbg !5561
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5562
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !5562, !ctir !512
  %46 = load i32, i32* %st_mode47, align 8, !dbg !5562, !ctir !140
  %and48 = and i32 %46, 61440, !dbg !5562
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !5562
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !5564

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5565
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !5565, !ctir !512
  %48 = load i32, i32* %st_mode51, align 8, !dbg !5565, !ctir !140
  %and52 = and i32 %48, 61440, !dbg !5565
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !5565
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !5566

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5567
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !5568, !ctir !3461
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5568
  %tobool55 = trunc i8 %50 to i1, !dbg !5568, !ctir !142
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5569

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !5570
  br label %return, !dbg !5570

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5571
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !5573, !ctir !3461
  %52 = load i32, i32* %backup_type59, align 8, !dbg !5573, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !5574
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !5575

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !5576
  %tobool62 = trunc i8 %53 to i1, !dbg !5576
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !5579

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5580
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !5583, !ctir !3461
  %55 = load i8, i8* %move_mode64, align 8, !dbg !5583
  %tobool65 = trunc i8 %55 to i1, !dbg !5583, !ctir !142
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !5584

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5585
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !5586, !ctir !3461
  %57 = load i32, i32* %dereference67, align 4, !dbg !5586, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !5587
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !5588

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5589
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !5589, !ctir !512
  %59 = load i32, i32* %st_mode70, align 8, !dbg !5589, !ctir !140
  %and71 = and i32 %59, 61440, !dbg !5589
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !5589
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !5590

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5591
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !5591, !ctir !512
  %61 = load i32, i32* %st_mode74, align 8, !dbg !5591, !ctir !140
  %and75 = and i32 %61, 61440, !dbg !5591
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !5591
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !5592

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !5593
  br label %return, !dbg !5593

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !5594
  br label %return, !dbg !5594

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !5595
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !5596
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !5597
  %lnot81 = xor i1 %call80, true, !dbg !5598
  store i1 %lnot81, i1* %retval, align 1, !dbg !5599
  br label %return, !dbg !5599

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5600
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !5602, !ctir !3461
  %65 = load i8, i8* %move_mode83, align 8, !dbg !5602
  %tobool84 = trunc i8 %65 to i1, !dbg !5602, !ctir !142
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !5603

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5604
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !5605, !ctir !3461
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !5605
  %tobool87 = trunc i8 %67 to i1, !dbg !5605, !ctir !142
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !5606

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5607
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !5607, !ctir !512
  %69 = load i32, i32* %st_mode89, align 8, !dbg !5607, !ctir !140
  %and90 = and i32 %69, 61440, !dbg !5607
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !5607
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !5610

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !5611
  br label %return, !dbg !5611

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !5612
  %tobool94 = trunc i8 %70 to i1, !dbg !5612
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !5614

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5615
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !5616, !ctir !512
  %72 = load i64, i64* %st_nlink, align 8, !dbg !5616, !ctir !460
  %cmp96 = icmp ult i64 1, %72, !dbg !5617
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !5618

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !5619
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !5620
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !5621
  br i1 %call98, label %if.end103, label %if.then99, !dbg !5622

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5623
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !5624, !ctir !3461
  %76 = load i8, i8* %move_mode100, align 8, !dbg !5624
  %tobool101 = trunc i8 %76 to i1, !dbg !5624, !ctir !142
  %lnot102 = xor i1 %tobool101, true, !dbg !5625
  store i1 %lnot102, i1* %retval, align 1, !dbg !5626
  br label %return, !dbg !5626

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !5627

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5628
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !5628, !ctir !512
  %78 = load i32, i32* %st_mode105, align 8, !dbg !5628, !ctir !140
  %and106 = and i32 %78, 61440, !dbg !5628
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !5628
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !5630

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5631
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !5631, !ctir !512
  %80 = load i32, i32* %st_mode109, align 8, !dbg !5631, !ctir !140
  %and110 = and i32 %80, 61440, !dbg !5631
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !5631
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !5632

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5633
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !5633, !ctir !512
  %82 = load i64, i64* %st_ino113, align 8, !dbg !5633, !ctir !453
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5633
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !5633, !ctir !512
  %84 = load i64, i64* %st_ino114, align 8, !dbg !5633, !ctir !453
  %cmp115 = icmp eq i64 %82, %84, !dbg !5633
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !5633

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5633
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !5633, !ctir !512
  %86 = load i64, i64* %st_dev117, align 8, !dbg !5633, !ctir !452
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5633
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !5633, !ctir !512
  %88 = load i64, i64* %st_dev118, align 8, !dbg !5633, !ctir !452
  %cmp119 = icmp eq i64 %86, %88, !dbg !5633
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !5636

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !5637
  br label %return, !dbg !5637

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5638
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !5640, !ctir !3461
  %90 = load i8, i8* %hard_link122, align 1, !dbg !5640
  %tobool123 = trunc i8 %90 to i1, !dbg !5640, !ctir !142
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !5641

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !5642
  store i8 1, i8* %91, align 1, !dbg !5644, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5645
  br label %return, !dbg !5645

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !5646

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5647
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !5649, !ctir !3461
  %93 = load i8, i8* %move_mode127, align 8, !dbg !5649
  %tobool128 = trunc i8 %93 to i1, !dbg !5649, !ctir !142
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !5650

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5651
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !5651, !ctir !512
  %95 = load i32, i32* %st_mode130, align 8, !dbg !5651, !ctir !140
  %and131 = and i32 %95, 61440, !dbg !5651
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !5651
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !5652

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5653
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !5654, !ctir !512
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !5654, !ctir !460
  %cmp135 = icmp ult i64 1, %97, !dbg !5655
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !5656

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !5657, metadata !DIExpression()), !dbg !5659
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !5660
  %call137 = call i8* @canonicalize_file_name(i8* %98) #9, !dbg !5661
  store i8* %call137, i8** %abs_src, align 8, !dbg !5659
  %99 = load i8*, i8** %abs_src, align 8, !dbg !5662
  %tobool138 = icmp ne i8* %99, null, !dbg !5662
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !5664

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5665, metadata !DIExpression()), !dbg !5667
  %100 = load i8*, i8** %abs_src, align 8, !dbg !5668
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !5669
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !5670
  %lnot141 = xor i1 %call140, true, !dbg !5671
  %frombool142 = zext i1 %lnot141 to i8, !dbg !5667
  store i8 %frombool142, i8* %result, align 1, !dbg !5667
  %102 = load i8*, i8** %abs_src, align 8, !dbg !5672
  call void @free(i8* %102) #9, !dbg !5673
  %103 = load i8, i8* %result, align 1, !dbg !5674
  %tobool143 = trunc i8 %103 to i1, !dbg !5674
  store i1 %tobool143, i1* %retval, align 1, !dbg !5675
  br label %return, !dbg !5675

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !5676

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5677
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !5679, !ctir !3461
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !5679
  %tobool146 = trunc i8 %105 to i1, !dbg !5679, !ctir !142
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !5680

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5681
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !5681, !ctir !512
  %107 = load i32, i32* %st_mode148, align 8, !dbg !5681, !ctir !140
  %and149 = and i32 %107, 61440, !dbg !5681
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !5681
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !5682

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !5683
  br label %return, !dbg !5683

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5684
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !5686, !ctir !3461
  %109 = load i32, i32* %dereference153, align 4, !dbg !5686, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !5687
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !5688

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5689
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !5689, !ctir !512
  %111 = load i32, i32* %st_mode156, align 8, !dbg !5689, !ctir !140
  %and157 = and i32 %111, 61440, !dbg !5689
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !5689
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !5692

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5693
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !5694
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !5694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !5694
  br label %if.end165, !dbg !5695

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !5696
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #9, !dbg !5698
  %cmp162 = icmp ne i32 %call161, 0, !dbg !5699
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !5700

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !5701
  br label %return, !dbg !5701

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5702
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !5702, !ctir !512
  %117 = load i32, i32* %st_mode166, align 8, !dbg !5702, !ctir !140
  %and167 = and i32 %117, 61440, !dbg !5702
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !5702
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !5704

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5705
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !5706
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !5706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !5706
  br label %if.end175, !dbg !5707

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !5708
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #9, !dbg !5710
  %cmp172 = icmp ne i32 %call171, 0, !dbg !5711
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !5712

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !5713
  br label %return, !dbg !5713

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !5714, !ctir !462
  %122 = load i64, i64* %st_ino176, align 8, !dbg !5714, !ctir !453
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !5714, !ctir !462
  %123 = load i64, i64* %st_ino177, align 8, !dbg !5714, !ctir !453
  %cmp178 = icmp eq i64 %122, %123, !dbg !5714
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !5714

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !5714, !ctir !462
  %124 = load i64, i64* %st_dev180, align 8, !dbg !5714, !ctir !452
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !5714, !ctir !462
  %125 = load i64, i64* %st_dev181, align 8, !dbg !5714, !ctir !452
  %cmp182 = icmp eq i64 %124, %125, !dbg !5714
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !5716

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !5717
  br label %return, !dbg !5717

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5718
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !5720, !ctir !3461
  %127 = load i8, i8* %hard_link185, align 1, !dbg !5720
  %tobool186 = trunc i8 %127 to i1, !dbg !5720, !ctir !142
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !5721

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5722
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !5722, !ctir !512
  %129 = load i32, i32* %st_mode188, align 8, !dbg !5722, !ctir !140
  %and189 = and i32 %129, 61440, !dbg !5722
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !5722
  %lnot191 = xor i1 %cmp190, true, !dbg !5724
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !5725
  %frombool192 = zext i1 %lnot191 to i8, !dbg !5726
  store i8 %frombool192, i8* %130, align 1, !dbg !5726, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5727
  br label %return, !dbg !5727

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !5728

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !5729
  br label %return, !dbg !5729

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !5730
  ret i1 %131, !dbg !5730
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !5731 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !5738, metadata !DIExpression()), !dbg !5739
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5744, metadata !DIExpression()), !dbg !5745
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !5746
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !5747
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !5748
  %tobool = trunc i8 %2 to i1, !dbg !5748
  %3 = zext i1 %tobool to i64, !dbg !5748
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !5748
  %4 = load i8, i8* %replace.addr, align 1, !dbg !5749
  %tobool3 = trunc i8 %4 to i1, !dbg !5749
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !5750
  store i32 %call, i32* %err, align 4, !dbg !5745
  %5 = load i32, i32* %err, align 4, !dbg !5751
  %cmp = icmp slt i32 0, %5, !dbg !5753
  br i1 %cmp, label %if.then, label %if.end, !dbg !5754

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !5755
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.167, i64 0, i64 0)) #9, !dbg !5757
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !5758
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !5758
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !5759
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !5759
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !5760
  store i1 false, i1* %retval, align 1, !dbg !5761
  br label %return, !dbg !5761

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !5762
  %cmp7 = icmp slt i32 %9, 0, !dbg !5764
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !5765

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !5766
  %tobool8 = trunc i8 %10 to i1, !dbg !5766
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !5767

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !5768
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !5769
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !5769
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !5770
  br label %if.end13, !dbg !5770

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !5771
  br label %return, !dbg !5771

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !5772
  ret i1 %12, !dbg !5772
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !5773 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5782
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !5782, !ctir !3461
  %1 = load i8, i8* %move_mode, align 8, !dbg !5782
  %tobool = trunc i8 %1 to i1, !dbg !5782, !ctir !142
  br i1 %tobool, label %if.then, label %if.else, !dbg !5785

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5785

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.166, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 1746, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !5782
  unreachable, !dbg !5782

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5786
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !5787, !ctir !3461
  %3 = load i32, i32* %interactive, align 8, !dbg !5787, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !5788
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5789

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5790
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !5791, !ctir !3461
  %5 = load i32, i32* %interactive1, align 8, !dbg !5791, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !5792
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !5793

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5794
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !5795, !ctir !3461
  %7 = load i32, i32* %interactive3, align 8, !dbg !5795, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !5796
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !5797

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5798
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !5799, !ctir !3461
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !5799
  %tobool5 = trunc i8 %9 to i1, !dbg !5799, !ctir !142
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !5800

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !5801
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5802
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !5803, !ctir !512
  %12 = load i32, i32* %st_mode, align 8, !dbg !5803, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !5804
  br i1 %call, label %land.end, label %land.rhs, !dbg !5805

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5806
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !5807
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5808
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !5809
  %lnot = xor i1 %call7, true, !dbg !5810
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !5811
  br label %lor.end, !dbg !5789

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !5812
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !5813 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !255
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !5820
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5822
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !5823, !ctir !512
  %2 = load i32, i32* %st_mode, align 8, !dbg !5823, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !5824
  br i1 %call, label %if.else, label %if.then, !dbg !5825

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !5826, metadata !DIExpression()), !dbg !5828
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5829
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !5830, !ctir !512
  %4 = load i32, i32* %st_mode1, align 8, !dbg !5830, !ctir !140
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !5831, !ctir !255
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !5832
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !5833, !ctir !255
  store i8 0, i8* %arrayidx, align 1, !dbg !5834
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5835
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5836
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !5837, !ctir !3461
  %7 = load i8, i8* %move_mode, align 8, !dbg !5837
  %tobool = trunc i8 %7 to i1, !dbg !5837, !ctir !142
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !5838

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5839
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !5840, !ctir !3461
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5840
  %tobool2 = trunc i8 %9 to i1, !dbg !5840, !ctir !142
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !5841

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5842
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !5843, !ctir !3461
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !5843
  %tobool4 = trunc i8 %11 to i1, !dbg !5843, !ctir !142
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5844

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.163, i64 0, i64 0)) #9, !dbg !5845
  br label %cond.end, !dbg !5844

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.164, i64 0, i64 0)) #9, !dbg !5846
  br label %cond.end, !dbg !5844

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !5844
  %12 = load i8*, i8** @program_name, align 8, !dbg !5847
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !5848
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !5848
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5849
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !5850, !ctir !512
  %15 = load i32, i32* %st_mode8, align 8, !dbg !5850, !ctir !140
  %and = and i32 %15, 4095, !dbg !5851
  %conv = zext i32 %and to i64, !dbg !5852
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !5853, !ctir !255
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !5854
  br label %if.end, !dbg !5855

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5856
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.165, i64 0, i64 0)) #9, !dbg !5858
  %17 = load i8*, i8** @program_name, align 8, !dbg !5859
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !5860
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !5860
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !5861
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !5862
  ret i1 %call14, !dbg !5863
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !5864 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !5867
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5867, !ctir !183
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5867
  %conv = sext i8 %1 to i32, !dbg !5867
  %cmp = icmp eq i32 %conv, 46, !dbg !5869
  br i1 %cmp, label %if.then, label %if.else, !dbg !5870

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !5871, metadata !DIExpression()), !dbg !5873
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !5874
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !5875
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5875, !ctir !183
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !5875
  %conv3 = sext i8 %4 to i32, !dbg !5875
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !5876
  %conv5 = zext i1 %cmp4 to i32, !dbg !5876
  %add = add nsw i32 %conv5, 1, !dbg !5877
  %idxprom = sext i32 %add to i64, !dbg !5874
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !5874, !ctir !183
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !5874
  store i8 %5, i8* %sep, align 1, !dbg !5873
  %6 = load i8, i8* %sep, align 1, !dbg !5878
  %tobool = icmp ne i8 %6, 0, !dbg !5878
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5879

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !5880
  %conv7 = sext i8 %7 to i32, !dbg !5880
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !5880
  br label %lor.end, !dbg !5879

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !5881
  br label %return, !dbg !5881

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5882
  br label %return, !dbg !5882

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !5883
  ret i1 %9, !dbg !5883
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !5884 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !183
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !462
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !5893, metadata !DIExpression()), !dbg !5894
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !5895
  %call = call i64 @strlen(i8* %0) #14, !dbg !5896
  store i64 %call, i64* %srcbaselen, align 8, !dbg !5894
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !5897, metadata !DIExpression()), !dbg !5898
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !5899
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !5900
  store i8* %call1, i8** %dstbase, align 8, !dbg !5898
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !5901, metadata !DIExpression()), !dbg !5902
  %2 = load i8*, i8** %dstbase, align 8, !dbg !5903
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !5904
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !5902
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !5905, metadata !DIExpression()), !dbg !5906
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5907
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !5908
  store i64 %call3, i64* %suffixlen, align 8, !dbg !5906
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !5909
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !5911
  %6 = load i64, i64* %suffixlen, align 8, !dbg !5912
  %add = add i64 %5, %6, !dbg !5913
  %cmp = icmp eq i64 %4, %add, !dbg !5914
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !5915

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !5916
  %8 = load i8*, i8** %dstbase, align 8, !dbg !5917
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !5918
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !5919
  %cmp5 = icmp eq i32 %call4, 0, !dbg !5920
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !5921

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !5922
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !5922
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !5922, !ctir !184
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5922
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !5922
  %cmp8 = icmp eq i32 %call7, 0, !dbg !5922
  br i1 %cmp8, label %if.end, label %if.then, !dbg !5923

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !5924
  br label %return, !dbg !5924

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !5925, metadata !DIExpression()), !dbg !5926
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !5927
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !5928
  store i64 %call9, i64* %dstlen, align 8, !dbg !5926
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !5929, metadata !DIExpression()), !dbg !5930
  %14 = load i64, i64* %dstlen, align 8, !dbg !5931
  %15 = load i64, i64* %suffixlen, align 8, !dbg !5932
  %add10 = add i64 %14, %15, !dbg !5933
  %add11 = add i64 %add10, 1, !dbg !5934
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !5935
  store i8* %call12, i8** %dst_back, align 8, !dbg !5930
  %16 = load i8*, i8** %dst_back, align 8, !dbg !5936
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !5937
  %18 = load i64, i64* %dstlen, align 8, !dbg !5938
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #9, !dbg !5939
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !5940
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #9, !dbg !5941
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !5944, metadata !DIExpression()), !dbg !5945
  %20 = load i8*, i8** %dst_back, align 8, !dbg !5946
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #9, !dbg !5947
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !5945
  %21 = load i8*, i8** %dst_back, align 8, !dbg !5948
  call void @free(i8* %21) #9, !dbg !5949
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !5950
  %cmp16 = icmp eq i32 %22, 0, !dbg !5951
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !5952

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !5953
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !5953, !ctir !512
  %24 = load i64, i64* %st_ino, align 8, !dbg !5953, !ctir !453
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !5953, !ctir !462
  %25 = load i64, i64* %st_ino17, align 8, !dbg !5953, !ctir !453
  %cmp18 = icmp eq i64 %24, %25, !dbg !5953
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !5953

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !5953
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !5953, !ctir !512
  %27 = load i64, i64* %st_dev, align 8, !dbg !5953, !ctir !452
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !5953, !ctir !462
  %28 = load i64, i64* %st_dev20, align 8, !dbg !5953, !ctir !452
  %cmp21 = icmp eq i64 %27, %28, !dbg !5953
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !5954
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !5954
  store i1 %30, i1* %retval, align 1, !dbg !5955
  br label %return, !dbg !5955

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !5956
  ret i1 %31, !dbg !5956
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !5957 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5960, metadata !DIExpression()), !dbg !5961
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5962, metadata !DIExpression()), !dbg !5963
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !5964, metadata !DIExpression()), !dbg !5965
  %0 = load i8*, i8** %src.addr, align 8, !dbg !5966
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !5966
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !5967
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !5967
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.161, i64 0, i64 0), i8* %call, i8* %call1), !dbg !5968
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !5969
  %tobool = icmp ne i8* %2, null, !dbg !5969
  br i1 %tobool, label %if.then, label %if.end, !dbg !5971

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.162, i64 0, i64 0)) #9, !dbg !5972
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !5973
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !5973
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !5974
  br label %if.end, !dbg !5974

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #10 !dbg !5977 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  br label %while.cond, !dbg !5986

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5987
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !5988
  br i1 %cmp, label %while.body, label %while.end, !dbg !5986

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5989
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !5992, !ctir !5981
  %2 = load i64, i64* %ino, align 8, !dbg !5992, !ctir !498
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !5993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !5994, !ctir !512
  %4 = load i64, i64* %st_ino, align 8, !dbg !5994, !ctir !453
  %cmp1 = icmp eq i64 %2, %4, !dbg !5995
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !5996

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5997
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !5998, !ctir !5981
  %6 = load i64, i64* %dev, align 8, !dbg !5998, !ctir !500
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !5999
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6000, !ctir !512
  %8 = load i64, i64* %st_dev, align 8, !dbg !6000, !ctir !452
  %cmp2 = icmp eq i64 %6, %8, !dbg !6001
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6002

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6003
  br label %return, !dbg !6003

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6004
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6005, !ctir !5981
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6005, !ctir !493
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6006
  br label %while.cond, !dbg !5986, !llvm.loop !6007

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6009
  br label %return, !dbg !6009

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6010
  ret i1 %11, !dbg !6010
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6011 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !3462
  %ok = alloca i8, align 1, !ctir !142
  %new_first_dir_created = alloca i8, align 1, !ctir !142
  %local_copy_into_self = alloca i8, align 1, !ctir !142
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !142
  store i8* %src_name_in, i8** %src_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6020, metadata !DIExpression()), !dbg !6021
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6022, metadata !DIExpression()), !dbg !6023
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6034, metadata !DIExpression()), !dbg !6035
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6036
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6037
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6037
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6038, metadata !DIExpression()), !dbg !6039
  store i8 1, i8* %ok, align 1, !dbg !6039
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6040
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6041
  store i8* %call, i8** %name_space, align 8, !dbg !6042
  %4 = load i8*, i8** %name_space, align 8, !dbg !6043
  %cmp = icmp eq i8* %4, null, !dbg !6045
  br i1 %cmp, label %if.then, label %if.end, !dbg !6046

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6047
  %5 = load i32, i32* %call1, align 4, !dbg !6047, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.160, i64 0, i64 0)) #9, !dbg !6049
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6050
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6050
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6051
  store i1 false, i1* %retval, align 1, !dbg !6052
  br label %return, !dbg !6052

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6053
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6055, !ctir !3461
  %8 = load i32, i32* %dereference, align 4, !dbg !6055, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !6056
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6057

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6058, !ctir !3462
  store i32 2, i32* %dereference6, align 4, !dbg !6059, !ctir !76
  br label %if.end7, !dbg !6060

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6061, metadata !DIExpression()), !dbg !6062
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6062
  %9 = load i8*, i8** %name_space, align 8, !dbg !6063
  store i8* %9, i8** %namep, align 8, !dbg !6064
  br label %while.cond, !dbg !6065

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6066
  %11 = load i8, i8* %10, align 1, !dbg !6067, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !6067
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6068
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6065

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6072, metadata !DIExpression()), !dbg !6073
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6074
  %13 = load i8*, i8** %namep, align 8, !dbg !6075
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6076
  store i8* %call10, i8** %src_name, align 8, !dbg !6073
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6077, metadata !DIExpression()), !dbg !6078
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6079
  %15 = load i8*, i8** %namep, align 8, !dbg !6080
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6081
  store i8* %call11, i8** %dst_name, align 8, !dbg !6078
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6082, metadata !DIExpression()), !dbg !6083
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6084
  %17 = load i8, i8* %16, align 1, !dbg !6085
  %tobool = trunc i8 %17 to i1, !dbg !6085, !ctir !142
  %frombool12 = zext i1 %tobool to i8, !dbg !6083
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6083
  %18 = load i8*, i8** %src_name, align 8, !dbg !6086
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6087
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6088
  %tobool13 = trunc i8 %20 to i1, !dbg !6088
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6089
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6090
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6091
  %conv15 = zext i1 %call14 to i32, !dbg !6091
  %23 = load i8, i8* %ok, align 1, !dbg !6092
  %tobool16 = trunc i8 %23 to i1, !dbg !6092
  %conv17 = zext i1 %tobool16 to i32, !dbg !6092
  %and = and i32 %conv17, %conv15, !dbg !6092
  %tobool18 = icmp ne i32 %and, 0, !dbg !6092
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6092
  store i8 %frombool19, i8* %ok, align 1, !dbg !6092
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6093
  %tobool20 = trunc i8 %24 to i1, !dbg !6093
  %conv21 = zext i1 %tobool20 to i32, !dbg !6093
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6094
  %26 = load i8, i8* %25, align 1, !dbg !6095
  %tobool22 = trunc i8 %26 to i1, !dbg !6095, !ctir !142
  %conv23 = zext i1 %tobool22 to i32, !dbg !6095
  %or = or i32 %conv23, %conv21, !dbg !6095
  %tobool24 = icmp ne i32 %or, 0, !dbg !6095
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6095
  store i8 %frombool25, i8* %25, align 1, !dbg !6095, !ctir !142
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6096
  call void @free(i8* %27) #9, !dbg !6097
  %28 = load i8*, i8** %src_name, align 8, !dbg !6098
  call void @free(i8* %28) #9, !dbg !6099
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6100
  %tobool26 = trunc i8 %29 to i1, !dbg !6100
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6102

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6103

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6104
  %tobool29 = trunc i8 %30 to i1, !dbg !6104
  %conv30 = zext i1 %tobool29 to i32, !dbg !6104
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6105
  %tobool31 = trunc i8 %31 to i1, !dbg !6105
  %conv32 = zext i1 %tobool31 to i32, !dbg !6105
  %or33 = or i32 %conv32, %conv30, !dbg !6105
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6105
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6105
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6105
  %32 = load i8*, i8** %namep, align 8, !dbg !6106
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6107
  %add = add i64 %call36, 1, !dbg !6108
  %33 = load i8*, i8** %namep, align 8, !dbg !6109
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6109, !ctir !10
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6109
  br label %while.cond, !dbg !6065, !llvm.loop !6110

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6112
  call void @free(i8* %34) #9, !dbg !6113
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6114
  %tobool37 = trunc i8 %35 to i1, !dbg !6114
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6115
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6116
  store i8 %frombool38, i8* %36, align 1, !dbg !6116, !ctir !142
  %37 = load i8, i8* %ok, align 1, !dbg !6117
  %tobool39 = trunc i8 %37 to i1, !dbg !6117
  store i1 %tobool39, i1* %retval, align 1, !dbg !6118
  br label %return, !dbg !6118

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6119
  ret i1 %38, !dbg !6119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6120 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !139
  %sb = alloca %struct.stat, align 8, !ctir !462
  %src_open_sb = alloca %struct.stat, align 8, !ctir !462
  %return_val = alloca i8, align 1, !ctir !142
  %data_copy_required = alloca i8, align 1, !ctir !142
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !462
  %clone_ok = alloca i8, align 1, !ctir !142
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !142
  %sparse_src = alloca i8, align 1, !ctir !142
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !142
  %n_read = alloca i64, align 8, !ctir !429
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !510
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  store i32 %dst_mode, i32* %dst_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6129, metadata !DIExpression()), !dbg !6130
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6131, metadata !DIExpression()), !dbg !6132
  store i8* %new_dst, i8** %new_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6133, metadata !DIExpression()), !dbg !6134
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6137, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6139, metadata !DIExpression()), !dbg !6140
  store i8* null, i8** %buf_alloc, align 8, !dbg !6140
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6141, metadata !DIExpression()), !dbg !6142
  store i8* null, i8** %name_alloc, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6143, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6145, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6147, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6149, metadata !DIExpression()), !dbg !6150
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6151
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6152, !ctir !512
  %1 = load i32, i32* %st_mode, align 8, !dbg !6152, !ctir !140
  store i32 %1, i32* %src_mode, align 4, !dbg !6150
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6157, metadata !DIExpression()), !dbg !6158
  store i8 1, i8* %return_val, align 1, !dbg !6158
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6159, metadata !DIExpression()), !dbg !6160
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6161
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6162, !ctir !3461
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6162
  %tobool = trunc i8 %3 to i1, !dbg !6162, !ctir !142
  %frombool = zext i1 %tobool to i8, !dbg !6160
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6160
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6163
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6164
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6165, !ctir !3461
  %6 = load i32, i32* %dereference, align 4, !dbg !6165, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !6166
  %7 = zext i1 %cmp to i64, !dbg !6164
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6164
  %or = or i32 0, %cond, !dbg !6167
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6168
  store i32 %call, i32* %source_desc, align 4, !dbg !6169
  %8 = load i32, i32* %source_desc, align 4, !dbg !6170
  %cmp2 = icmp slt i32 %8, 0, !dbg !6172
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6173

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !6174
  %9 = load i32, i32* %call3, align 4, !dbg !6174, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.145, i64 0, i64 0)) #9, !dbg !6176
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6177
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6177
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6178
  store i1 false, i1* %retval, align 1, !dbg !6179
  br label %return, !dbg !6179

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6180
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #9, !dbg !6182
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6183
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6184

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #16, !dbg !6185
  %12 = load i32, i32* %call9, align 4, !dbg !6185, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !6187
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6188
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6188
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6189
  store i8 0, i8* %return_val, align 1, !dbg !6190
  br label %close_src_desc, !dbg !6191

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6192
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6192, !ctir !512
  %15 = load i64, i64* %st_ino, align 8, !dbg !6192, !ctir !453
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6192, !ctir !462
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6192, !ctir !453
  %cmp14 = icmp eq i64 %15, %16, !dbg !6192
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6192

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6192
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6192, !ctir !512
  %18 = load i64, i64* %st_dev, align 8, !dbg !6192, !ctir !452
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6192, !ctir !462
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6192, !ctir !452
  %cmp16 = icmp eq i64 %18, %19, !dbg !6192
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6194

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.147, i64 0, i64 0)) #9, !dbg !6195
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6197
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6197
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6198
  store i8 0, i8* %return_val, align 1, !dbg !6199
  br label %close_src_desc, !dbg !6200

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6201
  %22 = load i8, i8* %21, align 1, !dbg !6203
  %tobool21 = trunc i8 %22 to i1, !dbg !6203, !ctir !142
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6204

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6205, metadata !DIExpression()), !dbg !6207
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6208
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6209, !ctir !3461
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6209
  %tobool24 = trunc i8 %24 to i1, !dbg !6209, !ctir !142
  %25 = zext i1 %tobool24 to i64, !dbg !6208
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6208
  %or26 = or i32 1, %cond25, !dbg !6210
  store i32 %or26, i32* %open_flags, align 4, !dbg !6207
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6211
  %27 = load i32, i32* %open_flags, align 4, !dbg !6212
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6213
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6214
  %call28 = call i32* @__errno_location() #16, !dbg !6215
  %28 = load i32, i32* %call28, align 4, !dbg !6215, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !6216
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6217
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6219, !ctir !3461
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6219
  %tobool29 = trunc i8 %30 to i1, !dbg !6219, !ctir !142
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6220

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6221
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6222, !ctir !3461
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6222
  %tobool30 = trunc i8 %32 to i1, !dbg !6222, !ctir !142
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6223

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6224
  %cmp32 = icmp sle i32 0, %33, !dbg !6225
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6226

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6227
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6230
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6231, !ctir !3461
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6231
  %tobool35 = trunc i8 %36 to i1, !dbg !6231, !ctir !142
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6232
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6233
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6234

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6235
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6238, !ctir !3461
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6238
  %tobool38 = trunc i8 %39 to i1, !dbg !6238, !ctir !142
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6239

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6240
  br label %close_src_and_dst_desc, !dbg !6242

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6243

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6244

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6245
  %cmp43 = icmp slt i32 %40, 0, !dbg !6247
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6248

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6249
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6250, !ctir !3461
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6250
  %tobool45 = trunc i8 %42 to i1, !dbg !6250, !ctir !142
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6251

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6252
  %call47 = call i32 @unlink(i8* %43) #9, !dbg !6255
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6256
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6257

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #16, !dbg !6258
  %44 = load i32, i32* %call50, align 4, !dbg !6258, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !6260
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6261
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6261
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6262
  store i8 0, i8* %return_val, align 1, !dbg !6263
  br label %close_src_desc, !dbg !6264

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6265
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6267, !ctir !3461
  %47 = load i8, i8* %verbose, align 2, !dbg !6267
  %tobool54 = trunc i8 %47 to i1, !dbg !6267, !ctir !142
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6268

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6269
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6270
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6270
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6271
  br label %if.end59, !dbg !6271

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6272
  store i8 1, i8* %49, align 1, !dbg !6273, !ctir !142
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6274
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6276, !ctir !3461
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6276
  %tobool61 = trunc i8 %51 to i1, !dbg !6276, !ctir !142
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6277

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6278
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6281
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6282
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6283
  %56 = load i8, i8* %55, align 1, !dbg !6284
  %tobool63 = trunc i8 %56 to i1, !dbg !6284, !ctir !142
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6285
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !6286
  br i1 %call64, label %if.end66, label %if.then65, !dbg !6287

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !6288
  br label %close_src_desc, !dbg !6290

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !6291

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !6292

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !6293

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !6294
  %59 = load i8, i8* %58, align 1, !dbg !6296
  %tobool70 = trunc i8 %59 to i1, !dbg !6296, !ctir !142
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !6297

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !6298

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !6299), !dbg !6301
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !6302, metadata !DIExpression()), !dbg !6303
  store i32 65, i32* %open_flags72, align 4, !dbg !6303
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !6304
  %61 = load i32, i32* %open_flags72, align 4, !dbg !6305
  %or73 = or i32 %61, 128, !dbg !6306
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !6307
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6308
  %neg = xor i32 %63, -1, !dbg !6309
  %and = and i32 %62, %neg, !dbg !6310
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !6311
  store i32 %call74, i32* %dest_desc, align 4, !dbg !6312
  %call75 = call i32* @__errno_location() #16, !dbg !6313
  %64 = load i32, i32* %call75, align 4, !dbg !6313, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !6314
  %65 = load i32, i32* %dest_desc, align 4, !dbg !6315
  %cmp76 = icmp slt i32 %65, 0, !dbg !6317
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !6318

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !6319
  %cmp78 = icmp eq i32 %66, 17, !dbg !6320
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !6321

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6322
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !6323, !ctir !3461
  %68 = load i8, i8* %move_mode, align 8, !dbg !6323
  %tobool80 = trunc i8 %68 to i1, !dbg !6323, !ctir !142
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !6324

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !6325, metadata !DIExpression()), !dbg !6327
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !6328
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #9, !dbg !6330
  %cmp83 = icmp eq i32 %call82, 0, !dbg !6331
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !6332

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !6333, !ctir !462
  %70 = load i32, i32* %st_mode85, align 8, !dbg !6333, !ctir !140
  %and86 = and i32 %70, 61440, !dbg !6333
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !6333
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !6334

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6335
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !6338, !ctir !3461
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !6338
  %tobool89 = trunc i8 %72 to i1, !dbg !6338, !ctir !142
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !6339

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !6340
  %74 = load i32, i32* %open_flags72, align 4, !dbg !6342
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !6343
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6344
  %neg91 = xor i32 %76, -1, !dbg !6345
  %and92 = and i32 %75, %neg91, !dbg !6346
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !6347
  store i32 %call93, i32* %dest_desc, align 4, !dbg !6348
  %call94 = call i32* @__errno_location() #16, !dbg !6349
  %77 = load i32, i32* %call94, align 4, !dbg !6349, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !6350
  br label %if.end97, !dbg !6351

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.148, i64 0, i64 0)) #9, !dbg !6352
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !6354
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !6354
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !6355
  store i8 0, i8* %return_val, align 1, !dbg !6356
  br label %close_src_desc, !dbg !6357

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !6358

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !6359

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !6360
  %cmp100 = icmp slt i32 %79, 0, !dbg !6362
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !6363

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !6364
  %cmp102 = icmp eq i32 %80, 21, !dbg !6365
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !6366

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !6367
  %82 = load i8, i8* %81, align 1, !dbg !6368, !ctir !184
  %conv = sext i8 %82 to i32, !dbg !6368
  %tobool104 = icmp ne i32 %conv, 0, !dbg !6368
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !6369

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !6370
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !6371
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !6372
  %sub = sub i64 %call106, 1, !dbg !6373
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !6370, !ctir !183
  %85 = load i8, i8* %arrayidx, align 1, !dbg !6370
  %conv107 = sext i8 %85 to i32, !dbg !6370
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !6374
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6375

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !6376
  br label %if.end111, !dbg !6377

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !6378

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !6379
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !6381
  %cmp114 = icmp slt i32 %86, 0, !dbg !6383
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !6384

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !6385
  %cmp117 = icmp eq i32 %87, 2, !dbg !6388
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !6389

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !6390
  %89 = load i8, i8* %88, align 1, !dbg !6391
  %tobool120 = trunc i8 %89 to i1, !dbg !6391, !ctir !142
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !6392

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6393
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !6394, !ctir !3461
  %91 = load i8, i8* %move_mode122, align 8, !dbg !6394
  %tobool123 = trunc i8 %91 to i1, !dbg !6394, !ctir !142
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !6395

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !6396
  store i8 1, i8* %92, align 1, !dbg !6398, !ctir !142
  br label %open_with_O_CREAT, !dbg !6399

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !6400
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.149, i64 0, i64 0)) #9, !dbg !6401
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !6402
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !6402
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !6403
  store i8 0, i8* %return_val, align 1, !dbg !6404
  br label %close_src_desc, !dbg !6405

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !6406
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #9, !dbg !6408
  %cmp130 = icmp ne i32 %call129, 0, !dbg !6409
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !6410

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #16, !dbg !6411
  %96 = load i32, i32* %call133, align 4, !dbg !6411, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !6413
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !6414
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !6414
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !6415
  store i8 0, i8* %return_val, align 1, !dbg !6416
  br label %close_src_and_dst_desc, !dbg !6417

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !6418
  %tobool137 = trunc i8 %98 to i1, !dbg !6418
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !6420

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6421
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !6422, !ctir !3461
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !6422, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !6421
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !6423

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !6424, metadata !DIExpression()), !dbg !6426
  %101 = load i32, i32* %dest_desc, align 4, !dbg !6427
  %102 = load i32, i32* %source_desc, align 4, !dbg !6428
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !6429
  %cmp143 = icmp eq i32 %call142, 0, !dbg !6430
  %frombool145 = zext i1 %cmp143 to i8, !dbg !6426
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !6426
  %103 = load i8, i8* %clone_ok, align 1, !dbg !6431
  %tobool146 = trunc i8 %103 to i1, !dbg !6431
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !6433

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6434
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !6435, !ctir !3461
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !6435, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !6436
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !6437

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !6438
  %tobool153 = trunc i8 %106 to i1, !dbg !6438
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !6441

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #16, !dbg !6442
  %107 = load i32, i32* %call155, align 4, !dbg !6442, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.150, i64 0, i64 0)) #9, !dbg !6444
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !6445
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !6445
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !6446
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !6446
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !6447
  store i8 0, i8* %return_val, align 1, !dbg !6448
  br label %close_src_and_dst_desc, !dbg !6449

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !6450
  br label %if.end160, !dbg !6451

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !6452

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !6453
  %tobool162 = trunc i8 %110 to i1, !dbg !6453
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !6455

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !6456, metadata !DIExpression()), !dbg !6458
  %call164 = call i32 @getpagesize() #16, !dbg !6459
  %conv165 = sext i32 %call164 to i64, !dbg !6459
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !6458
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !6460, metadata !DIExpression()), !dbg !6461
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !6462
  store i64 %call166, i64* %buf_size, align 8, !dbg !6461
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !6463, metadata !DIExpression()), !dbg !6464
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6465, !ctir !462
  %111 = load i64, i64* %st_blksize, align 8, !dbg !6465, !ctir !475
  %cmp167 = icmp slt i64 0, %111, !dbg !6465
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !6465

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6465, !ctir !462
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !6465, !ctir !475
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !6465
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !6465

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6465, !ctir !462
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !6465, !ctir !475
  br label %cond.end, !dbg !6465

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !6465

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !6465
  store i64 %cond174, i64* %hole_size, align 8, !dbg !6464
  %114 = load i32, i32* %source_desc, align 4, !dbg !6466
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !6467
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !6468, metadata !DIExpression()), !dbg !6469
  store i8 0, i8* %make_holes, align 1, !dbg !6469
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !6470, metadata !DIExpression()), !dbg !6471
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !6472
  %frombool176 = zext i1 %call175 to i8, !dbg !6471
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !6471
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6473, !ctir !462
  %115 = load i32, i32* %st_mode177, align 8, !dbg !6473, !ctir !140
  %and178 = and i32 %115, 61440, !dbg !6473
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !6473
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !6475

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6476
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !6479, !ctir !3461
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !6479, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !6480
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !6481

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !6482
  br label %if.end185, !dbg !6483

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6484
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !6486, !ctir !3461
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !6486, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !6487
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !6488

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !6489
  %tobool190 = trunc i8 %120 to i1, !dbg !6489
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !6490

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !6491
  br label %if.end193, !dbg !6492

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !6493

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !6494
  %tobool195 = trunc i8 %121 to i1, !dbg !6494
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !6496

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !6497, metadata !DIExpression()), !dbg !6499
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !6500
  %sub197 = sub i64 9223372036854775807, %122, !dbg !6501
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !6502, metadata !DIExpression()), !dbg !6503
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !6504
  %123 = load i64, i64* %buf_size, align 8, !dbg !6505
  %124 = load i64, i64* %blcm_max, align 8, !dbg !6506
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #16, !dbg !6507
  store i64 %call199, i64* %blcm, align 8, !dbg !6503
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !6508, !ctir !462
  %125 = load i32, i32* %st_mode200, align 8, !dbg !6508, !ctir !140
  %and201 = and i32 %125, 61440, !dbg !6508
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !6508
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !6510

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6511, !ctir !462
  %126 = load i64, i64* %st_size, align 8, !dbg !6511, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !6512
  %cmp205 = icmp ult i64 %126, %127, !dbg !6513
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !6514

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6515, !ctir !462
  %128 = load i64, i64* %st_size208, align 8, !dbg !6515, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !6516
  store i64 %add, i64* %buf_size, align 8, !dbg !6517
  br label %if.end209, !dbg !6518

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !6519
  %sub210 = sub i64 %129, 1, !dbg !6520
  %130 = load i64, i64* %buf_size, align 8, !dbg !6521
  %add211 = add i64 %130, %sub210, !dbg !6521
  store i64 %add211, i64* %buf_size, align 8, !dbg !6521
  %131 = load i64, i64* %buf_size, align 8, !dbg !6522
  %132 = load i64, i64* %blcm, align 8, !dbg !6523
  %rem = urem i64 %131, %132, !dbg !6524
  %133 = load i64, i64* %buf_size, align 8, !dbg !6525
  %sub212 = sub i64 %133, %rem, !dbg !6525
  store i64 %sub212, i64* %buf_size, align 8, !dbg !6525
  %134 = load i64, i64* %buf_size, align 8, !dbg !6526
  %cmp213 = icmp eq i64 %134, 0, !dbg !6528
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !6529

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !6530
  %136 = load i64, i64* %buf_size, align 8, !dbg !6531
  %cmp216 = icmp ult i64 %135, %136, !dbg !6532
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6533

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !6534
  store i64 %137, i64* %buf_size, align 8, !dbg !6535
  br label %if.end219, !dbg !6536

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !6537

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !6538
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !6539
  %add221 = add i64 %138, %139, !dbg !6540
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !6541
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !6542
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !6543
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !6544
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !6545
  store i8* %call223, i8** %buf, align 8, !dbg !6546
  %142 = load i8, i8* %sparse_src, align 1, !dbg !6547
  %tobool224 = trunc i8 %142 to i1, !dbg !6547
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !6549

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !6550, metadata !DIExpression()), !dbg !6552
  %143 = load i32, i32* %source_desc, align 4, !dbg !6553
  %144 = load i32, i32* %dest_desc, align 4, !dbg !6555
  %145 = load i8*, i8** %buf, align 8, !dbg !6556
  %146 = load i64, i64* %buf_size, align 8, !dbg !6557
  %147 = load i64, i64* %hole_size, align 8, !dbg !6558
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6559, !ctir !462
  %148 = load i64, i64* %st_size226, align 8, !dbg !6559, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !6560
  %tobool227 = trunc i8 %149 to i1, !dbg !6560
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !6560

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6561
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !6562, !ctir !3461
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !6562, !ctir !89
  br label %cond.end232, !dbg !6560

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !6560

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !6560
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !6563
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !6564
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !6565
  br i1 %call234, label %if.then235, label %if.end236, !dbg !6566

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !6567

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !6568
  %tobool237 = trunc i8 %154 to i1, !dbg !6568
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !6570

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !6571
  br label %close_src_and_dst_desc, !dbg !6573

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !6574

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !6577, metadata !DIExpression()), !dbg !6578
  %155 = load i32, i32* %source_desc, align 4, !dbg !6579
  %156 = load i32, i32* %dest_desc, align 4, !dbg !6581
  %157 = load i8*, i8** %buf, align 8, !dbg !6582
  %158 = load i64, i64* %buf_size, align 8, !dbg !6583
  %159 = load i8, i8* %make_holes, align 1, !dbg !6584
  %tobool241 = trunc i8 %159 to i1, !dbg !6584
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !6584

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !6585
  br label %cond.end245, !dbg !6584

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !6584

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !6584
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6586
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !6587, !ctir !3461
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !6587, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !6588
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !6589
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !6590
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !6591
  br i1 %call250, label %if.else252, label %if.then251, !dbg !6592

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !6593
  br label %close_src_and_dst_desc, !dbg !6595

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !6596
  %tobool253 = trunc i8 %165 to i1, !dbg !6596
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !6598

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !6599
  %167 = load i64, i64* %n_read, align 8, !dbg !6600
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #9, !dbg !6601
  %cmp257 = icmp slt i32 %call256, 0, !dbg !6602
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !6603

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #16, !dbg !6604
  %168 = load i32, i32* %call260, align 4, !dbg !6604, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !6606
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !6607
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !6607
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !6608
  store i8 0, i8* %return_val, align 1, !dbg !6609
  br label %close_src_and_dst_desc, !dbg !6610

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !6611

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !6453

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !6612), !dbg !6613
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6614
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !6616, !ctir !3461
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !6616
  %tobool266 = trunc i8 %171 to i1, !dbg !6616, !ctir !142
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !6617

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6618, metadata !DIExpression()), !dbg !6620
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6621, !ctir !510
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6622
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !6623
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !6623
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !6623
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !6623
  store i64 %175, i64* %174, align 8, !dbg !6623
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !6623
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !6623
  store i64 %177, i64* %176, align 8, !dbg !6623
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !6623
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !6623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !6623
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6624, !ctir !510
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6625
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !6626
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !6626
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !6626
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !6626
  store i64 %183, i64* %182, align 8, !dbg !6626
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !6626
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !6626
  store i64 %185, i64* %184, align 8, !dbg !6626
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !6626
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !6626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !6626
  %188 = load i32, i32* %dest_desc, align 4, !dbg !6627
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !6629
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6630, !ctir !510
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !6631
  %cmp274 = icmp ne i32 %call273, 0, !dbg !6632
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !6633

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #16, !dbg !6634
  %190 = load i32, i32* %call277, align 4, !dbg !6634, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !6636
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !6637
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !6637
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !6638
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6639
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !6641, !ctir !3461
  %193 = load i8, i8* %require_preserve, align 4, !dbg !6641
  %tobool280 = trunc i8 %193 to i1, !dbg !6641, !ctir !142
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !6642

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !6643
  br label %close_src_and_dst_desc, !dbg !6645

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !6646

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !6647

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6648
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !6650, !ctir !3461
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !6650
  %tobool285 = trunc i8 %195 to i1, !dbg !6650, !ctir !142
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !6651

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6652
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !6652, !ctir !512
  %197 = load i32, i32* %st_uid, align 4, !dbg !6652, !ctir !128
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !6652, !ctir !462
  %198 = load i32, i32* %st_uid288, align 4, !dbg !6652, !ctir !128
  %cmp289 = icmp eq i32 %197, %198, !dbg !6652
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !6652

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6652
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !6652, !ctir !512
  %200 = load i32, i32* %st_gid, align 8, !dbg !6652, !ctir !130
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !6652, !ctir !462
  %201 = load i32, i32* %st_gid292, align 8, !dbg !6652, !ctir !130
  %cmp293 = icmp eq i32 %200, %201, !dbg !6652
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !6653

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6654
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !6656
  %204 = load i32, i32* %dest_desc, align 4, !dbg !6657
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6658
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !6659
  %207 = load i8, i8* %206, align 1, !dbg !6660
  %tobool296 = trunc i8 %207 to i1, !dbg !6660, !ctir !142
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !6661
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !6662

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !6663
  br label %close_src_and_dst_desc, !dbg !6665

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !6666
  %and299 = and i32 %208, -3585, !dbg !6666
  store i32 %and299, i32* %src_mode, align 4, !dbg !6666
  br label %sw.epilog, !dbg !6667

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !6668

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6669
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !6671, !ctir !3461
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !6671
  %tobool301 = trunc i8 %210 to i1, !dbg !6671, !ctir !142
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !6672

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !6673, metadata !DIExpression()), !dbg !6675
  store i8 0, i8* %access_changed, align 1, !dbg !6675
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6676, !ctir !462
  %211 = load i32, i32* %st_mode303, align 8, !dbg !6676, !ctir !140
  %and304 = and i32 %211, 128, !dbg !6678
  %tobool305 = icmp ne i32 %and304, 0, !dbg !6678
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !6679

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #9, !dbg !6680
  %cmp308 = icmp ne i32 %call307, 0, !dbg !6681
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !6682

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !6683
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !6685
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !6686
  %cmp312 = icmp eq i32 %call311, 0, !dbg !6687
  %frombool314 = zext i1 %cmp312 to i8, !dbg !6688
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !6688
  br label %if.end315, !dbg !6689

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !6690
  %215 = load i32, i32* %source_desc, align 4, !dbg !6692
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !6693
  %217 = load i32, i32* %dest_desc, align 4, !dbg !6694
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6695
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !6696
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !6697

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6698
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !6699, !ctir !3461
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6699
  %tobool318 = trunc i8 %220 to i1, !dbg !6699, !ctir !142
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !6700

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !6701
  br label %if.end321, !dbg !6702

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !6703
  %tobool322 = trunc i8 %221 to i1, !dbg !6703
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !6705

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !6706
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !6707
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !6708
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6709
  %neg324 = xor i32 %225, -1, !dbg !6710
  %and325 = and i32 %224, %neg324, !dbg !6711
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !6712
  br label %if.end327, !dbg !6712

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !6713

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !6714
  %227 = load i32, i32* %dest_desc, align 4, !dbg !6715
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6716
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !6717
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6718
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !6720, !ctir !3461
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !6720
  %tobool329 = trunc i8 %230 to i1, !dbg !6720, !ctir !142
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !6721

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6722
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !6723, !ctir !3461
  %232 = load i8, i8* %move_mode332, align 8, !dbg !6723
  %tobool333 = trunc i8 %232 to i1, !dbg !6723, !ctir !142
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !6724

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !6725
  %234 = load i32, i32* %source_desc, align 4, !dbg !6728
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !6729
  %236 = load i32, i32* %dest_desc, align 4, !dbg !6730
  %237 = load i32, i32* %src_mode, align 4, !dbg !6731
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !6732
  %cmp337 = icmp ne i32 %call336, 0, !dbg !6733
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !6734

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6735
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !6736, !ctir !3461
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !6736
  %tobool341 = trunc i8 %239 to i1, !dbg !6736, !ctir !142
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !6737

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !6738
  br label %if.end344, !dbg !6739

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !6740

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6741
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !6743, !ctir !3461
  %241 = load i8, i8* %set_mode, align 1, !dbg !6743
  %tobool346 = trunc i8 %241 to i1, !dbg !6743, !ctir !142
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !6744

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !6745
  %243 = load i32, i32* %dest_desc, align 4, !dbg !6748
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6749
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !6750, !ctir !3461
  %245 = load i32, i32* %mode, align 8, !dbg !6750, !ctir !139
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !6751
  %cmp349 = icmp ne i32 %call348, 0, !dbg !6752
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !6753

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !6754
  br label %if.end352, !dbg !6755

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !6756

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6757
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !6759, !ctir !3461
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6759
  %tobool354 = trunc i8 %247 to i1, !dbg !6759, !ctir !142
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !6760

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !6761
  %249 = load i8, i8* %248, align 1, !dbg !6762
  %tobool357 = trunc i8 %249 to i1, !dbg !6762, !ctir !142
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !6763

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !6764
  %251 = load i32, i32* %dest_desc, align 4, !dbg !6767
  %call360 = call i32 @cached_umask(), !dbg !6768
  %neg361 = xor i32 %call360, -1, !dbg !6769
  %and362 = and i32 438, %neg361, !dbg !6770
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !6771
  %cmp364 = icmp ne i32 %call363, 0, !dbg !6772
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !6773

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !6774
  br label %if.end367, !dbg !6775

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !6776

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6777
  %tobool369 = icmp ne i32 %252, 0, !dbg !6777
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !6779

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !6780
  %neg372 = xor i32 %call371, -1, !dbg !6782
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6783
  %and373 = and i32 %253, %neg372, !dbg !6783
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !6783
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6784
  %tobool374 = icmp ne i32 %254, 0, !dbg !6784
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !6786

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !6787
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !6788
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !6789
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !6790
  %cmp377 = icmp ne i32 %call376, 0, !dbg !6791
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !6792

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #16, !dbg !6793
  %258 = load i32, i32* %call380, align 4, !dbg !6793, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !6795
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !6796
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !6796
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !6797
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6798
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !6800, !ctir !3461
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !6800
  %tobool384 = trunc i8 %261 to i1, !dbg !6800, !ctir !142
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !6801

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !6802
  br label %if.end386, !dbg !6803

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !6804

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !6805

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !6723

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !6806), !dbg !6807
  %262 = load i32, i32* %dest_desc, align 4, !dbg !6808
  %call392 = call i32 @close(i32 %262), !dbg !6810
  %cmp393 = icmp slt i32 %call392, 0, !dbg !6811
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !6812

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #16, !dbg !6813
  %263 = load i32, i32* %call396, align 4, !dbg !6813, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !6815
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !6816
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !6816
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !6817
  store i8 0, i8* %return_val, align 1, !dbg !6818
  br label %if.end399, !dbg !6819

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !6820

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !6821), !dbg !6822
  %265 = load i32, i32* %source_desc, align 4, !dbg !6823
  %call400 = call i32 @close(i32 %265), !dbg !6825
  %cmp401 = icmp slt i32 %call400, 0, !dbg !6826
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !6827

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #16, !dbg !6828
  %266 = load i32, i32* %call404, align 4, !dbg !6828, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !6830
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !6831
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !6831
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !6832
  store i8 0, i8* %return_val, align 1, !dbg !6833
  br label %if.end407, !dbg !6834

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !6835
  call void @free(i8* %268) #9, !dbg !6836
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !6837
  call void @free(i8* %269) #9, !dbg !6838
  %270 = load i8, i8* %return_val, align 1, !dbg !6839
  %tobool408 = trunc i8 %270 to i1, !dbg !6839
  store i1 %tobool408, i1* %retval, align 1, !dbg !6840
  br label %return, !dbg !6840

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !6841
  ret i1 %271, !dbg !6841
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !6842 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !6843
  %cmp = icmp ne i32 %call, 0, !dbg !6845
  br i1 %cmp, label %if.then, label %if.end, !dbg !6846

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6847
  %0 = load i32, i32* %call1, align 4, !dbg !6847, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.144, i64 0, i64 0)) #9, !dbg !6847
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !6847
  unreachable, !dbg !6847

if.end:                                           ; preds = %entry
  ret void, !dbg !6848
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #10 !dbg !6849 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  %call = call i32* @__errno_location() #16, !dbg !6852
  %0 = load i32, i32* %call, align 4, !dbg !6852, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !6853
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !6854

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6855
  %1 = load i32, i32* %call1, align 4, !dbg !6855, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !6856
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6857

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6858
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !6859, !ctir !3461
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !6859
  %tobool = trunc i8 %3 to i1, !dbg !6859, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !6860
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6861
  ret i1 %4, !dbg !6862
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !6863 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6872, metadata !DIExpression()), !dbg !6873
  %0 = load i8*, i8** %file.addr, align 8, !dbg !6874
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !6875
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !6876
  store i32 %call, i32* %err, align 4, !dbg !6873
  %2 = load i32, i32* %err, align 4, !dbg !6877
  %tobool = icmp ne i32 %2, 0, !dbg !6877
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6879

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6880
  %3 = load i32, i32* %call1, align 4, !dbg !6880, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !6881
  br i1 %cmp, label %if.then, label %if.end, !dbg !6882

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !6883
  br label %if.end, !dbg !6884

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !6885
  ret i32 %4, !dbg !6886
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !6887 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !127
  %gid = alloca i32, align 4, !ctir !129
  %old_mode = alloca i32, align 4, !ctir !139
  %new_mode = alloca i32, align 4, !ctir !139
  %restrictive_temp_mode = alloca i32, align 4, !ctir !139
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6890, metadata !DIExpression()), !dbg !6891
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6892, metadata !DIExpression()), !dbg !6893
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !6894, metadata !DIExpression()), !dbg !6895
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6896, metadata !DIExpression()), !dbg !6897
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !6902, metadata !DIExpression()), !dbg !6903
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6904
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !6905, !ctir !512
  %1 = load i32, i32* %st_uid, align 4, !dbg !6905, !ctir !128
  store i32 %1, i32* %uid, align 4, !dbg !6903
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !6906, metadata !DIExpression()), !dbg !6907
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6908
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !6909, !ctir !512
  %3 = load i32, i32* %st_gid, align 8, !dbg !6909, !ctir !130
  store i32 %3, i32* %gid, align 4, !dbg !6907
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !6910
  %tobool = trunc i8 %4 to i1, !dbg !6910
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !6912

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6913
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !6914, !ctir !3461
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !6914
  %tobool1 = trunc i8 %6 to i1, !dbg !6914, !ctir !142
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !6915

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6916
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !6917, !ctir !3461
  %8 = load i8, i8* %move_mode, align 8, !dbg !6917
  %tobool2 = trunc i8 %8 to i1, !dbg !6917, !ctir !142
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !6918

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6919
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !6920, !ctir !3461
  %10 = load i8, i8* %set_mode, align 1, !dbg !6920
  %tobool4 = trunc i8 %10 to i1, !dbg !6920, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !6921

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !6922, metadata !DIExpression()), !dbg !6924
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6925
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6926, !ctir !512
  %12 = load i32, i32* %st_mode, align 8, !dbg !6926, !ctir !140
  store i32 %12, i32* %old_mode, align 4, !dbg !6924
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !6927, metadata !DIExpression()), !dbg !6928
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6929
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !6930, !ctir !3461
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !6930
  %tobool6 = trunc i8 %14 to i1, !dbg !6930, !ctir !142
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !6931

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6932
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !6933, !ctir !3461
  %16 = load i8, i8* %move_mode8, align 8, !dbg !6933
  %tobool9 = trunc i8 %16 to i1, !dbg !6933, !ctir !142
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !6929

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6934
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6935, !ctir !512
  %18 = load i32, i32* %st_mode10, align 8, !dbg !6935, !ctir !140
  br label %cond.end, !dbg !6929

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6936
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !6937, !ctir !3461
  %20 = load i32, i32* %mode, align 8, !dbg !6937, !ctir !139
  br label %cond.end, !dbg !6929

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !6929
  store i32 %cond, i32* %new_mode, align 4, !dbg !6928
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !6938, metadata !DIExpression()), !dbg !6939
  %21 = load i32, i32* %old_mode, align 4, !dbg !6940
  %22 = load i32, i32* %new_mode, align 4, !dbg !6941
  %and = and i32 %21, %22, !dbg !6942
  %and11 = and i32 %and, 448, !dbg !6943
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !6939
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !6944
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !6946
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !6947
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !6948
  %cmp = icmp ne i32 %call, 0, !dbg !6949
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !6950

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6951
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !6954
  br i1 %call13, label %if.end, label %if.then14, !dbg !6955

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #16, !dbg !6956
  %27 = load i32, i32* %call15, align 4, !dbg !6956, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.143, i64 0, i64 0)) #9, !dbg !6957
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !6958
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !6958
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !6959
  br label %if.end, !dbg !6959

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6960
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !6961, !ctir !3461
  %30 = load i8, i8* %require_preserve, align 4, !dbg !6961
  %tobool18 = trunc i8 %30 to i1, !dbg !6961, !ctir !142
  %conv = zext i1 %tobool18 to i32, !dbg !6960
  %sub = sub nsw i32 0, %conv, !dbg !6962
  store i32 %sub, i32* %retval, align 4, !dbg !6963
  br label %return, !dbg !6963

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !6964

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !6965
  %cmp21 = icmp ne i32 %31, -1, !dbg !6967
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !6968

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !6969
  %33 = load i32, i32* %uid, align 4, !dbg !6972
  %34 = load i32, i32* %gid, align 4, !dbg !6973
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #9, !dbg !6974
  %cmp25 = icmp eq i32 %call24, 0, !dbg !6975
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6976

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !6977
  br label %return, !dbg !6977

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #16, !dbg !6978
  %35 = load i32, i32* %call29, align 4, !dbg !6978, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !6980
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !6981

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #16, !dbg !6982
  %36 = load i32, i32* %call33, align 4, !dbg !6982, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !6983
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !6984

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !6985, metadata !DIExpression()), !dbg !6987
  %call37 = call i32* @__errno_location() #16, !dbg !6988
  %37 = load i32, i32* %call37, align 4, !dbg !6988, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !6987
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !6989, metadata !DIExpression()), !dbg !6991
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !6991
  %39 = load i32, i32* %gid, align 4, !dbg !6991
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #9, !dbg !6991
  store i32 %call38, i32* %__x, align 4, !dbg !6991
  %40 = load i32, i32* %__x, align 4, !dbg !6991
  %41 = load i32, i32* %saved_errno, align 4, !dbg !6992
  %call39 = call i32* @__errno_location() #16, !dbg !6993
  store i32 %41, i32* %call39, align 4, !dbg !6994, !ctir !7
  br label %if.end40, !dbg !6995

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !6996

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !6997
  %43 = load i32, i32* %uid, align 4, !dbg !7000
  %44 = load i32, i32* %gid, align 4, !dbg !7001
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #9, !dbg !7002
  %cmp42 = icmp eq i32 %call41, 0, !dbg !7003
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7004

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7005
  br label %return, !dbg !7005

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #16, !dbg !7006
  %45 = load i32, i32* %call46, align 4, !dbg !7006, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !7008
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !7009

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #16, !dbg !7010
  %46 = load i32, i32* %call50, align 4, !dbg !7010, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !7011
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !7012

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !7013, metadata !DIExpression()), !dbg !7015
  %call55 = call i32* @__errno_location() #16, !dbg !7016
  %47 = load i32, i32* %call55, align 4, !dbg !7016, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !7017, metadata !DIExpression()), !dbg !7019
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7019
  %49 = load i32, i32* %gid, align 4, !dbg !7019
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #9, !dbg !7019
  store i32 %call57, i32* %__x56, align 4, !dbg !7019
  %50 = load i32, i32* %__x56, align 4, !dbg !7019
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !7020
  %call58 = call i32* @__errno_location() #16, !dbg !7021
  store i32 %51, i32* %call58, align 4, !dbg !7022, !ctir !7
  br label %if.end59, !dbg !7023

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7024
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !7026
  br i1 %call61, label %if.end70, label %if.then62, !dbg !7027

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #16, !dbg !7028
  %53 = load i32, i32* %call63, align 4, !dbg !7028, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !7030
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7031
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7031
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !7032
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7033
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !7035, !ctir !3461
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !7035
  %tobool67 = trunc i8 %56 to i1, !dbg !7035, !ctir !142
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !7036

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !7037
  br label %return, !dbg !7037

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !7038

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !7039
  br label %return, !dbg !7039

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !7040
  ret i32 %57, !dbg !7040
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7041 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %selinux_done = alloca i8, align 1, !ctir !142
  %ctx = alloca %struct.error_context, align 8, !ctir !7044
  store i8* %src_path, i8** %src_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7060, metadata !DIExpression()), !dbg !7061
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7062, metadata !DIExpression()), !dbg !7063
  store i8* %dst_path, i8** %dst_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store i32 %dst_fd, i32* %dst_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !7072, metadata !DIExpression()), !dbg !7073
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7074
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !7075, !ctir !3461
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !7075
  %tobool = trunc i8 %1 to i1, !dbg !7075, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7076

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7077
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !7078, !ctir !3461
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7078
  %tobool1 = trunc i8 %3 to i1, !dbg !7078, !ctir !142
  br label %lor.end, !dbg !7076

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !7073
  store i8 %frombool, i8* %all_errors, align 1, !dbg !7073
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !7079, metadata !DIExpression()), !dbg !7080
  %5 = load i8, i8* %all_errors, align 1, !dbg !7081
  %tobool2 = trunc i8 %5 to i1, !dbg !7081
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7082

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7083
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !7084, !ctir !3461
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !7084
  %tobool3 = trunc i8 %7 to i1, !dbg !7084, !ctir !142
  %lnot = xor i1 %tobool3, true, !dbg !7085
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !7086
  %frombool4 = zext i1 %8 to i8, !dbg !7080
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !7080
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !7087, metadata !DIExpression()), !dbg !7088
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7089
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !7090, !ctir !3461
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !7090
  %tobool5 = trunc i8 %10 to i1, !dbg !7090, !ctir !142
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !7091

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7092
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !7093, !ctir !3461
  %12 = load i8, i8* %set_security_context, align 1, !dbg !7093
  %tobool7 = trunc i8 %12 to i1, !dbg !7093, !ctir !142
  br label %lor.end8, !dbg !7091

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !7088
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !7088
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !7094, metadata !DIExpression()), !dbg !7095
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !7096
  %14 = load i8, i8* %all_errors, align 1, !dbg !7097
  %tobool10 = trunc i8 %14 to i1, !dbg !7097
  %15 = zext i1 %tobool10 to i64, !dbg !7097
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !7097
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !7096
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !7096
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !7096
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !7096
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !7096
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !7098
  %cmp = icmp sle i32 0, %16, !dbg !7100
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7101

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !7102
  %cmp11 = icmp sle i32 0, %17, !dbg !7103
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7104

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !7105
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !7106
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !7107
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !7108
  %22 = load i8, i8* %selinux_done, align 1, !dbg !7109
  %tobool12 = trunc i8 %22 to i1, !dbg !7109
  %23 = zext i1 %tobool12 to i64, !dbg !7109
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7109
  %24 = load i8, i8* %all_errors, align 1, !dbg !7110
  %tobool14 = trunc i8 %24 to i1, !dbg !7110
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !7111

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !7112
  %tobool15 = trunc i8 %25 to i1, !dbg !7112
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !7110

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !7110

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !7110

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !7110
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !7113
  store i32 %call, i32* %ret, align 4, !dbg !7114
  br label %if.end, !dbg !7115

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !7116
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !7117
  %28 = load i8, i8* %selinux_done, align 1, !dbg !7118
  %tobool17 = trunc i8 %28 to i1, !dbg !7118
  %29 = zext i1 %tobool17 to i64, !dbg !7118
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7118
  %30 = load i8, i8* %all_errors, align 1, !dbg !7119
  %tobool19 = trunc i8 %30 to i1, !dbg !7119
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !7120

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !7121
  %tobool21 = trunc i8 %31 to i1, !dbg !7121
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !7119

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !7119

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !7119

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !7119
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !7122
  store i32 %call26, i32* %ret, align 4, !dbg !7123
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !7124
  %cmp27 = icmp eq i32 %32, 0, !dbg !7125
  ret i1 %cmp27, !dbg !7126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7127 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7134, metadata !DIExpression()), !dbg !7135
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7136
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7137
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7138
  ret void, !dbg !7139
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !588 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7140
  %cmp = icmp eq i32 %0, -1, !dbg !7142
  br i1 %cmp, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #9, !dbg !7144
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7146
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7147
  %call1 = call i32 @umask(i32 %1) #9, !dbg !7148
  br label %if.end, !dbg !7149

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7150
  ret i32 %2, !dbg !7151
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7152 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !574
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7157, metadata !DIExpression()), !dbg !7158
  %call = call i32* @__errno_location() #16, !dbg !7159
  %0 = load i32, i32* %call, align 4, !dbg !7159, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !7158
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7160, metadata !DIExpression()), !dbg !7161
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7162, !ctir !574
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7162
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7162
  %1 = load i32, i32* %err, align 4, !dbg !7163
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !7164
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7165, !ctir !574
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !7166
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7167, !ctir !574
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7167
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7167
  ret void, !dbg !7168
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7169 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !574
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  %call = call i32* @__errno_location() #16, !dbg !7174
  %0 = load i32, i32* %call, align 4, !dbg !7174, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !7176
  br i1 %call1, label %if.end, label %if.then, !dbg !7177

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7178, metadata !DIExpression()), !dbg !7180
  %call2 = call i32* @__errno_location() #16, !dbg !7181
  %1 = load i32, i32* %call2, align 4, !dbg !7181, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !7180
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7182, metadata !DIExpression()), !dbg !7183
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7184, !ctir !574
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7184
  call void @llvm.va_start(i8* %arraydecay3), !dbg !7184
  %2 = load i32, i32* %err, align 4, !dbg !7185
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !7186
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7187, !ctir !574
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !7188
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7189, !ctir !574
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !7189
  call void @llvm.va_end(i8* %arraydecay56), !dbg !7189
  br label %if.end, !dbg !7190

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !7192 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  %0 = load i8*, i8** %str.addr, align 8, !dbg !7197
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !7197
  ret i8* %call, !dbg !7198
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !7199 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7200, metadata !DIExpression()), !dbg !7201
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  ret void, !dbg !7204
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !7205 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7210, metadata !DIExpression()), !dbg !7211
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7212
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.142, i64 0, i64 0), i64 16) #14, !dbg !7212
  %tobool = icmp ne i32 %call, 0, !dbg !7212
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7213

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7214
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !7215
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !7216
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7213
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !7217
  %land.ext = zext i1 %3 to i32, !dbg !7213
  ret i32 %land.ext, !dbg !7218
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7219 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  %call = call i32* @__errno_location() #16, !dbg !7222
  %0 = load i32, i32* %call, align 4, !dbg !7222, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7223
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7224

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7225
  %1 = load i32, i32* %call1, align 4, !dbg !7225, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7226
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7227

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7228
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7229, !ctir !3461
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7229
  %tobool = trunc i8 %3 to i1, !dbg !7229, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7230
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7231
  ret i1 %4, !dbg !7232
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7233 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7238
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7239
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #9, !dbg !7240
  ret i32 %call, !dbg !7241
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7242 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7246, metadata !DIExpression()), !dbg !7247
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7248, !ctir !475
  %cmp = icmp slt i64 0, %0, !dbg !7248
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7248

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7248, !ctir !475
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7248
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7248

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7248, !ctir !475
  br label %cond.end, !dbg !7248

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7248
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7248
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7248

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7248

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7248, !ctir !475
  %cmp8 = icmp slt i64 0, %3, !dbg !7248
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7248

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7248, !ctir !475
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7248
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7248

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7248, !ctir !462
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7248, !ctir !475
  br label %cond.end15, !dbg !7248

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7248

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7248
  br label %cond.end17, !dbg !7248

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7248
  ret i64 %cond18, !dbg !7249
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7250 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7255
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7255, !ctir !512
  %1 = load i32, i32* %st_mode, align 8, !dbg !7255, !ctir !140
  %and = and i32 %1, 61440, !dbg !7255
  %cmp = icmp eq i32 %and, 32768, !dbg !7255
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7256

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7257
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7257, !ctir !512
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7257, !ctir !477
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7258
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7259, !ctir !512
  %5 = load i64, i64* %st_size, align 8, !dbg !7259, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !7260
  %cmp1 = icmp slt i64 %3, %div, !dbg !7261
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7262
  ret i1 %6, !dbg !7263
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7264 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !183
  %p1 = alloca i8*, align 8, !ctir !183
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7271, metadata !DIExpression()), !dbg !7272
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7273
  store i8* %0, i8** %p0, align 8, !dbg !7272
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7274, metadata !DIExpression()), !dbg !7275
  %1 = load i8*, i8** %p0, align 8, !dbg !7276
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7277
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7278, !ctir !184
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7279, !ctir !184
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7275
  %3 = load i8*, i8** %p1, align 8, !dbg !7280
  %4 = load i8*, i8** %p1, align 8, !dbg !7281
  %5 = ptrtoint i8* %4 to i64, !dbg !7282
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7283
  %rem = urem i64 %5, %6, !dbg !7284
  %idx.neg = sub i64 0, %rem, !dbg !7285
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7285, !ctir !184
  ret i8* %add.ptr2, !dbg !7286
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7287 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !7290
  %last_ext_start = alloca i64, align 8, !ctir !429
  %last_ext_len = alloca i64, align 8, !ctir !429
  %dest_pos = alloca i64, align 8, !ctir !429
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %ok = alloca i8, align 1, !ctir !142
  %empty_extent = alloca i8, align 1, !ctir !142
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !429
  %ext_len = alloca i64, align 8, !ctir !429
  %ext_hole_size = alloca i64, align 8, !ctir !429
  %nzeros = alloca i64, align 8, !ctir !429
  %n_read = alloca i64, align 8, !ctir !429
  %read_hole = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7299, metadata !DIExpression()), !dbg !7300
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7301, metadata !DIExpression()), !dbg !7302
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7307, metadata !DIExpression()), !dbg !7308
  store i64 %src_total_size, i64* %src_total_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7309, metadata !DIExpression()), !dbg !7310
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7319, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7321, metadata !DIExpression()), !dbg !7322
  store i64 0, i64* %last_ext_start, align 8, !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7323, metadata !DIExpression()), !dbg !7324
  store i64 0, i64* %last_ext_len, align 8, !dbg !7324
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7325, metadata !DIExpression()), !dbg !7326
  store i64 0, i64* %dest_pos, align 8, !dbg !7326
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7327
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7328
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7329
  store i8 0, i8* %1, align 1, !dbg !7330, !ctir !142
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7331, metadata !DIExpression()), !dbg !7332
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7332
  br label %do.body, !dbg !7333

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7334, metadata !DIExpression()), !dbg !7336
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7337
  %frombool = zext i1 %call to i8, !dbg !7336
  store i8 %frombool, i8* %ok, align 1, !dbg !7336
  %2 = load i8, i8* %ok, align 1, !dbg !7338
  %tobool = trunc i8 %2 to i1, !dbg !7338
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7340

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7341, !ctir !7290
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7341
  %tobool1 = trunc i8 %3 to i1, !dbg !7341, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7344

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !7345

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !7346, !ctir !7290
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !7346
  %tobool3 = trunc i8 %4 to i1, !dbg !7346, !ctir !142
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7348

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7349
  store i8 1, i8* %5, align 1, !dbg !7351, !ctir !142
  store i1 false, i1* %retval, align 1, !dbg !7352
  br label %return, !dbg !7352

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #16, !dbg !7353
  %6 = load i32, i32* %call6, align 4, !dbg !7353, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.158, i64 0, i64 0)) #9, !dbg !7354
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !7355
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !7355
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !7356
  store i1 false, i1* %retval, align 1, !dbg !7357
  br label %return, !dbg !7357

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !7358, metadata !DIExpression()), !dbg !7359
  store i8 0, i8* %empty_extent, align 1, !dbg !7359
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7360, metadata !DIExpression()), !dbg !7362
  store i32 0, i32* %i, align 4, !dbg !7362
  br label %for.cond, !dbg !7363

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !7364
  %conv = zext i32 %8 to i64, !dbg !7364
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7366, !ctir !7290
  %9 = load i64, i64* %ei_count, align 8, !dbg !7366, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !7367
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7368

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !7369
  %tobool11 = trunc i8 %10 to i1, !dbg !7369
  br label %lor.end, !dbg !7368

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !7370

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !7371, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !7374, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !7376, metadata !DIExpression()), !dbg !7377
  %12 = load i32, i32* %i, align 4, !dbg !7378
  %conv13 = zext i32 %12 to i64, !dbg !7378
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7380, !ctir !7290
  %13 = load i64, i64* %ei_count14, align 8, !dbg !7380, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !7381
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7382

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7383, !ctir !7290
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7383, !ctir !559
  %15 = load i32, i32* %i, align 4, !dbg !7385
  %idxprom = zext i32 %15 to i64, !dbg !7386
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !7386, !ctir !559
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !7387, !ctir !560
  %16 = load i64, i64* %ext_logical, align 8, !dbg !7387, !ctir !429
  store i64 %16, i64* %ext_start, align 8, !dbg !7388
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7389, !ctir !7290
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !7389, !ctir !559
  %18 = load i32, i32* %i, align 4, !dbg !7390
  %idxprom19 = zext i32 %18 to i64, !dbg !7391
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !7391, !ctir !559
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !7392, !ctir !560
  %19 = load i64, i64* %ext_length, align 8, !dbg !7392, !ctir !429
  store i64 %19, i64* %ext_len, align 8, !dbg !7393
  br label %if.end25, !dbg !7394

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7395
  %dec = add i32 %20, -1, !dbg !7395
  store i32 %dec, i32* %i, align 4, !dbg !7395
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !7397
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7398, !ctir !7290
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !7398, !ctir !559
  %23 = load i32, i32* %i, align 4, !dbg !7399
  %idxprom22 = zext i32 %23 to i64, !dbg !7400
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !7400, !ctir !559
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !7401, !ctir !560
  %24 = load i64, i64* %ext_length24, align 8, !dbg !7401, !ctir !429
  %add = add nsw i64 %21, %24, !dbg !7402
  store i64 %add, i64* %ext_start, align 8, !dbg !7403
  store i64 0, i64* %ext_len, align 8, !dbg !7404
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !7405
  %26 = load i64, i64* %ext_start, align 8, !dbg !7407
  %27 = load i64, i64* %ext_len, align 8, !dbg !7408
  %add26 = add nsw i64 %26, %27, !dbg !7409
  %cmp27 = icmp slt i64 %25, %add26, !dbg !7410
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7411

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !7412
  %29 = load i64, i64* %ext_start, align 8, !dbg !7415
  %cmp30 = icmp slt i64 %28, %29, !dbg !7416
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7417

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !7418
  store i64 %30, i64* %ext_start, align 8, !dbg !7419
  br label %if.end33, !dbg !7420

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !7421
  %32 = load i64, i64* %ext_start, align 8, !dbg !7422
  %sub = sub nsw i64 %31, %32, !dbg !7423
  store i64 %sub, i64* %ext_len, align 8, !dbg !7424
  br label %if.end34, !dbg !7425

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !7426
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !7427
  %sub35 = sub nsw i64 %33, %34, !dbg !7428
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !7429
  %sub36 = sub nsw i64 %sub35, %35, !dbg !7430
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !7431
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !7432
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !7433
  %tobool37 = icmp ne i64 %36, 0, !dbg !7433
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !7435

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !7436
  %38 = load i64, i64* %ext_start, align 8, !dbg !7439
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #9, !dbg !7440
  %cmp40 = icmp slt i64 %call39, 0, !dbg !7441
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7442

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #16, !dbg !7443
  %39 = load i32, i32* %call43, align 4, !dbg !7443, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !7445
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !7446
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !7446
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !7447
  br label %fail, !dbg !7447

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !7448), !dbg !7449
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7450
  store i1 false, i1* %retval, align 1, !dbg !7451
  br label %return, !dbg !7451

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !7452
  %tobool47 = trunc i8 %41 to i1, !dbg !7452
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !7454

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7455
  %cmp49 = icmp eq i32 %42, 3, !dbg !7456
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !7457

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !7458
  %tobool51 = trunc i8 %43 to i1, !dbg !7458
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !7459

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7460
  %cmp53 = icmp ne i32 %44, 1, !dbg !7461
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !7462

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !7463
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !7466
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7467
  %cmp56 = icmp eq i32 %47, 3, !dbg !7468
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !7469
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !7470
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7471

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !7472

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7473
  br label %if.end81, !dbg !7474

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !7475, metadata !DIExpression()), !dbg !7477
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !7478
  store i64 %49, i64* %nzeros, align 8, !dbg !7477
  %50 = load i8, i8* %empty_extent, align 1, !dbg !7479
  %tobool62 = trunc i8 %50 to i1, !dbg !7479
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !7481

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !7482
  %52 = load i64, i64* %dest_pos, align 8, !dbg !7482
  %sub64 = sub nsw i64 %51, %52, !dbg !7482
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !7482
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !7482
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !7482

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !7482
  %55 = load i64, i64* %dest_pos, align 8, !dbg !7482
  %sub67 = sub nsw i64 %54, %55, !dbg !7482
  br label %cond.end, !dbg !7482

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !7482
  br label %cond.end, !dbg !7482

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !7482
  store i64 %cond, i64* %nzeros, align 8, !dbg !7483
  br label %if.end68, !dbg !7484

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !7485
  %58 = load i64, i64* %nzeros, align 8, !dbg !7487
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !7488
  br i1 %call69, label %if.end74, label %if.then70, !dbg !7489

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #16, !dbg !7490
  %59 = load i32, i32* %call71, align 4, !dbg !7490, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.159, i64 0, i64 0)) #9, !dbg !7492
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7493
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !7493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !7494
  br label %fail, !dbg !7495

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !7496
  %62 = load i64, i64* %ext_start, align 8, !dbg !7496
  %cmp75 = icmp slt i64 %61, %62, !dbg !7496
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !7496

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !7496
  br label %cond.end79, !dbg !7496

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !7496
  br label %cond.end79, !dbg !7496

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !7496
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !7497
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !7498

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !7499
  store i64 %65, i64* %last_ext_start, align 8, !dbg !7500
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7501, metadata !DIExpression()), !dbg !7504
  store i8 0, i8* %empty_extent, align 1, !dbg !7505
  %66 = load i64, i64* %ext_len, align 8, !dbg !7506
  store i64 %66, i64* %last_ext_len, align 8, !dbg !7507
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !7508, metadata !DIExpression()), !dbg !7509
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !7510
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !7512
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !7513
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !7514
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7515
  %cmp83 = icmp eq i32 %71, 3, !dbg !7516
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !7515

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !7517
  br label %cond.end87, !dbg !7515

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !7515

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !7515
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !7518
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !7519
  %75 = load i64, i64* %ext_len, align 8, !dbg !7520
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !7521
  br i1 %call89, label %if.end91, label %if.then90, !dbg !7522

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !7523

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !7524
  %77 = load i64, i64* %n_read, align 8, !dbg !7525
  %add92 = add nsw i64 %76, %77, !dbg !7526
  store i64 %add92, i64* %dest_pos, align 8, !dbg !7527
  %78 = load i64, i64* %n_read, align 8, !dbg !7528
  %tobool93 = icmp ne i64 %78, 0, !dbg !7528
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !7530

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !7531
  %tobool95 = trunc i8 %79 to i1, !dbg !7531
  %frombool96 = zext i1 %tobool95 to i8, !dbg !7532
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !7532
  br label %if.end97, !dbg !7533

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !7534
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !7536
  %cmp98 = icmp eq i64 %80, %81, !dbg !7537
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !7538

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7539, !ctir !7290
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !7541, !ctir !142
  br label %for.end, !dbg !7542

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !7543

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !7544
  %inc = add i32 %82, 1, !dbg !7544
  store i32 %inc, i32* %i, align 4, !dbg !7544
  br label %for.cond, !dbg !7545, !llvm.loop !7546

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7548
  br label %do.cond, !dbg !7549

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7550, !ctir !7290
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !7550
  %tobool104 = trunc i8 %83 to i1, !dbg !7550, !ctir !142
  %lnot = xor i1 %tobool104, true, !dbg !7551
  br i1 %lnot, label %do.body, label %do.end, !dbg !7549, !llvm.loop !7552

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !7554
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !7556
  %cmp105 = icmp slt i64 %84, %85, !dbg !7557
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !7558

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7559
  %tobool108 = trunc i8 %86 to i1, !dbg !7559
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !7560

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7561
  %cmp111 = icmp ne i32 %87, 1, !dbg !7562
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !7563

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !7564
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !7565
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #9, !dbg !7566
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7566
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !7561

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !7567
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !7568
  %92 = load i64, i64* %dest_pos, align 8, !dbg !7569
  %sub117 = sub nsw i64 %91, %92, !dbg !7570
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !7571
  br i1 %call118, label %if.end123, label %if.then119, !dbg !7563

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #16, !dbg !7572
  %93 = load i32, i32* %call120, align 4, !dbg !7572, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !7574
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7575
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7575
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !7576
  store i1 false, i1* %retval, align 1, !dbg !7577
  br label %return, !dbg !7577

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7578
  %cmp124 = icmp eq i32 %95, 3, !dbg !7580
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !7581

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !7582
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !7583
  %cmp127 = icmp slt i64 %96, %97, !dbg !7584
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !7585

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !7586
  %99 = load i64, i64* %dest_pos, align 8, !dbg !7587
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !7588
  %101 = load i64, i64* %dest_pos, align 8, !dbg !7589
  %sub130 = sub nsw i64 %100, %101, !dbg !7590
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !7591
  %cmp132 = icmp slt i32 %call131, 0, !dbg !7592
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !7593

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #16, !dbg !7594
  %102 = load i32, i32* %call135, align 4, !dbg !7594, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !7596
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !7597
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !7597
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !7598
  store i1 false, i1* %retval, align 1, !dbg !7599
  br label %return, !dbg !7599

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !7600
  br label %return, !dbg !7600

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !7601
  ret i1 %104, !dbg !7601
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !7602 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !142
  %psize = alloca i64, align 8, !ctir !429
  %n_read = alloca i64, align 8, !ctir !569
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !142
  %transition = alloca i8, align 1, !ctir !142
  %last_chunk = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7612, metadata !DIExpression()), !dbg !7613
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7616, metadata !DIExpression()), !dbg !7617
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  store i64 %max_n_read, i64* %max_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  store i64* %total_n_read, i64** %total_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7628
  store i8 0, i8* %0, align 1, !dbg !7629, !ctir !142
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7630
  store i64 0, i64* %1, align 8, !dbg !7631, !ctir !429
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !7632, metadata !DIExpression()), !dbg !7633
  store i8 0, i8* %make_hole, align 1, !dbg !7633
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !7634, metadata !DIExpression()), !dbg !7635
  store i64 0, i64* %psize, align 8, !dbg !7635
  br label %while.cond, !dbg !7636

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !7637
  %tobool = icmp ne i64 %2, 0, !dbg !7636
  br i1 %tobool, label %while.body, label %while.end94, !dbg !7636

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7638, metadata !DIExpression()), !dbg !7640
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !7641
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !7642
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !7643
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !7643
  %cmp = icmp ult i64 %5, %6, !dbg !7643
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7643

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !7643
  br label %cond.end, !dbg !7643

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !7643
  br label %cond.end, !dbg !7643

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !7643
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !7644
  store i64 %call, i64* %n_read, align 8, !dbg !7640
  %9 = load i64, i64* %n_read, align 8, !dbg !7645
  %cmp1 = icmp slt i64 %9, 0, !dbg !7647
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !7648

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #16, !dbg !7649
  %10 = load i32, i32* %call2, align 4, !dbg !7649, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !7652
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7653

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !7654, !llvm.loop !7655

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !7657
  %11 = load i32, i32* %call5, align 4, !dbg !7657, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.153, i64 0, i64 0)) #9, !dbg !7658
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !7659
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !7659
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !7660
  store i1 false, i1* %retval, align 1, !dbg !7661
  br label %return, !dbg !7661

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !7662
  %cmp9 = icmp eq i64 %13, 0, !dbg !7664
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7665

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !7666

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !7667
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !7668
  %sub = sub i64 %15, %14, !dbg !7668
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !7668
  %16 = load i64, i64* %n_read, align 8, !dbg !7669
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7670
  %18 = load i64, i64* %17, align 8, !dbg !7671, !ctir !429
  %add = add nsw i64 %18, %16, !dbg !7671
  store i64 %add, i64* %17, align 8, !dbg !7671, !ctir !429
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !7672, metadata !DIExpression()), !dbg !7673
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !7674
  %tobool12 = icmp ne i64 %19, 0, !dbg !7674
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !7674

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !7675
  br label %cond.end15, !dbg !7674

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !7676
  br label %cond.end15, !dbg !7674

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !7674
  store i64 %cond16, i64* %csize, align 8, !dbg !7673
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !7677, metadata !DIExpression()), !dbg !7678
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !7679
  store i8* %22, i8** %cbuf, align 8, !dbg !7678
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !7680, metadata !DIExpression()), !dbg !7681
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !7682
  store i8* %23, i8** %pbuf, align 8, !dbg !7681
  br label %while.cond17, !dbg !7683

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !7684
  %tobool18 = icmp ne i64 %24, 0, !dbg !7683
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !7683

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !7685, metadata !DIExpression()), !dbg !7687
  %25 = load i8, i8* %make_hole, align 1, !dbg !7688
  %tobool20 = trunc i8 %25 to i1, !dbg !7688
  %frombool21 = zext i1 %tobool20 to i8, !dbg !7687
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !7687
  %26 = load i64, i64* %csize, align 8, !dbg !7689
  %27 = load i64, i64* %n_read, align 8, !dbg !7689
  %cmp22 = icmp ult i64 %26, %27, !dbg !7689
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !7689

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !7689
  br label %cond.end25, !dbg !7689

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !7689
  br label %cond.end25, !dbg !7689

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !7689
  store i64 %cond26, i64* %csize, align 8, !dbg !7690
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !7691
  %tobool27 = icmp ne i64 %30, 0, !dbg !7691
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !7693

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !7694
  %tobool28 = icmp ne i64 %31, 0, !dbg !7694
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !7695

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !7696
  %33 = load i64, i64* %csize, align 8, !dbg !7697
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !7698
  %frombool31 = zext i1 %call30 to i8, !dbg !7699
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !7699
  br label %if.end32, !dbg !7700

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !7701, metadata !DIExpression()), !dbg !7702
  %34 = load i8, i8* %make_hole, align 1, !dbg !7703
  %tobool33 = trunc i8 %34 to i1, !dbg !7703
  %conv = zext i1 %tobool33 to i32, !dbg !7703
  %35 = load i8, i8* %prev_hole, align 1, !dbg !7704
  %tobool34 = trunc i8 %35 to i1, !dbg !7704
  %conv35 = zext i1 %tobool34 to i32, !dbg !7704
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !7705
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !7706

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !7707
  %tobool38 = icmp ne i64 %36, 0, !dbg !7706
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !7708
  %frombool39 = zext i1 %37 to i8, !dbg !7702
  store i8 %frombool39, i8* %transition, align 1, !dbg !7702
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !7709, metadata !DIExpression()), !dbg !7710
  %38 = load i64, i64* %n_read, align 8, !dbg !7711
  %39 = load i64, i64* %csize, align 8, !dbg !7712
  %cmp40 = icmp eq i64 %38, %39, !dbg !7713
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !7714

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !7715
  %tobool43 = trunc i8 %40 to i1, !dbg !7715
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !7716

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !7717
  %tobool44 = icmp ne i64 %41, 0, !dbg !7718
  %lnot = xor i1 %tobool44, true, !dbg !7718
  br label %lor.end, !dbg !7716

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !7710
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !7710
  %43 = load i8, i8* %transition, align 1, !dbg !7719
  %tobool46 = trunc i8 %43 to i1, !dbg !7719
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !7721

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !7722
  %tobool48 = trunc i8 %44 to i1, !dbg !7722
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !7723

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !7724
  %tobool51 = trunc i8 %45 to i1, !dbg !7724
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !7727

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !7728
  %47 = load i64, i64* %psize, align 8, !dbg !7729
  %add53 = add i64 %47, %46, !dbg !7729
  store i64 %add53, i64* %psize, align 8, !dbg !7729
  br label %if.end54, !dbg !7730

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !7731
  %tobool55 = trunc i8 %48 to i1, !dbg !7731
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !7733

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !7734
  %50 = load i8*, i8** %pbuf, align 8, !dbg !7737
  %51 = load i64, i64* %psize, align 8, !dbg !7738
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !7739
  %52 = load i64, i64* %psize, align 8, !dbg !7740
  %cmp58 = icmp ne i64 %call57, %52, !dbg !7741
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !7742

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #16, !dbg !7743
  %53 = load i32, i32* %call61, align 4, !dbg !7743, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.154, i64 0, i64 0)) #9, !dbg !7745
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7746
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7746
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !7747
  store i1 false, i1* %retval, align 1, !dbg !7748
  br label %return, !dbg !7748

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !7749

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !7750
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7753
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !7754
  %tobool65 = trunc i8 %57 to i1, !dbg !7754
  %58 = load i64, i64* %psize, align 8, !dbg !7755
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !7756
  br i1 %call66, label %if.end68, label %if.then67, !dbg !7757

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !7758
  br label %return, !dbg !7758

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !7759
  store i8* %59, i8** %pbuf, align 8, !dbg !7760
  %60 = load i64, i64* %csize, align 8, !dbg !7761
  store i64 %60, i64* %psize, align 8, !dbg !7762
  %61 = load i8, i8* %last_chunk, align 1, !dbg !7763
  %tobool70 = trunc i8 %61 to i1, !dbg !7763
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !7765

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !7766
  %tobool72 = icmp ne i64 %62, 0, !dbg !7766
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !7769

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !7770
  br label %if.end74, !dbg !7771

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !7772
  %tobool75 = trunc i8 %63 to i1, !dbg !7772
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !7774

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !7775
  br label %if.end78, !dbg !7776

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !7777
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !7778

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !7779

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !7780
  %65 = load i64, i64* %csize, align 8, !dbg !7783
  %sub81 = sub i64 9223372036854775807, %65, !dbg !7784
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !7785
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !7786

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !7787
  %67 = load i64, i64* %psize, align 8, !dbg !7788
  %add85 = add i64 %67, %66, !dbg !7788
  store i64 %add85, i64* %psize, align 8, !dbg !7788
  br label %if.end89, !dbg !7789

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.155, i64 0, i64 0)) #9, !dbg !7790
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !7792
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !7792
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !7793
  store i1 false, i1* %retval, align 1, !dbg !7794
  br label %return, !dbg !7794

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !7795
  %70 = load i64, i64* %n_read, align 8, !dbg !7796
  %sub91 = sub i64 %70, %69, !dbg !7796
  store i64 %sub91, i64* %n_read, align 8, !dbg !7796
  %71 = load i64, i64* %csize, align 8, !dbg !7797
  %72 = load i8*, i8** %cbuf, align 8, !dbg !7798
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !7798, !ctir !10
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !7798
  br label %while.cond17, !dbg !7683, !llvm.loop !7799

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !7801
  %tobool92 = trunc i8 %73 to i1, !dbg !7801
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7802
  %frombool93 = zext i1 %tobool92 to i8, !dbg !7803
  store i8 %frombool93, i8* %74, align 1, !dbg !7803, !ctir !142
  br label %while.cond, !dbg !7636, !llvm.loop !7655

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !7804
  %tobool95 = trunc i8 %75 to i1, !dbg !7804
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !7806

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !7807
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !7808
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !7809
  %tobool98 = trunc i8 %78 to i1, !dbg !7809
  %79 = load i64, i64* %psize, align 8, !dbg !7810
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !7811
  br i1 %call99, label %if.else101, label %if.then100, !dbg !7812

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !7813
  br label %return, !dbg !7813

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !7814
  br label %return, !dbg !7814

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !7815
  ret i1 %80, !dbg !7815
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !7816 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !7819, metadata !DIExpression()), !dbg !7820
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7821, metadata !DIExpression()), !dbg !7822
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7823, metadata !DIExpression()), !dbg !7824
  %0 = load i32, i32* %desc.addr, align 4, !dbg !7825
  %cmp = icmp sle i32 0, %0, !dbg !7827
  br i1 %cmp, label %if.then, label %if.end, !dbg !7828

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !7829
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7830
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !7831
  store i32 %call, i32* %retval, align 4, !dbg !7832
  br label %return, !dbg !7832

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7833
  %4 = load i32, i32* %mode.addr, align 4, !dbg !7834
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !7835
  store i32 %call1, i32* %retval, align 4, !dbg !7836
  br label %return, !dbg !7836

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7837
  ret i32 %5, !dbg !7837
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #10 !dbg !7838 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !571
  %word = alloca i8, align 1, !ctir !573
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7845, metadata !DIExpression()), !dbg !7846
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7847
  store i8* %0, i8** %p, align 8, !dbg !7846
  call void @llvm.dbg.declare(metadata i8* %word, metadata !7848, metadata !DIExpression()), !dbg !7849
  %1 = load i64, i64* %length.addr, align 8, !dbg !7850
  %tobool = icmp ne i64 %1, 0, !dbg !7850
  br i1 %tobool, label %if.end, label %if.then, !dbg !7852

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !7853
  br label %return, !dbg !7853

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7854

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !7855
  %and = and i64 %2, 0, !dbg !7855
  %tobool1 = icmp ne i64 %and, 0, !dbg !7854
  br i1 %tobool1, label %while.body, label %while.end, !dbg !7854

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !7856
  %4 = load i8, i8* %3, align 1, !dbg !7859, !ctir !572
  %tobool2 = icmp ne i8 %4, 0, !dbg !7859
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7860

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !7861
  br label %return, !dbg !7861

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !7862
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7862, !ctir !572
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !7862
  %6 = load i64, i64* %length.addr, align 8, !dbg !7863
  %dec = add i64 %6, -1, !dbg !7863
  store i64 %dec, i64* %length.addr, align 8, !dbg !7863
  %7 = load i64, i64* %length.addr, align 8, !dbg !7864
  %tobool5 = icmp ne i64 %7, 0, !dbg !7864
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7866

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !7867
  br label %return, !dbg !7867

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !7854, !llvm.loop !7868

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !7870

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !7871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !7875
  %9 = load i8, i8* %word, align 1, !dbg !7876
  %tobool8 = icmp ne i8 %9, 0, !dbg !7876
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7878

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !7879
  br label %return, !dbg !7879

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !7880
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !7880, !ctir !572
  store i8* %add.ptr, i8** %p, align 8, !dbg !7880
  %11 = load i64, i64* %length.addr, align 8, !dbg !7881
  %sub = sub i64 %11, 1, !dbg !7881
  store i64 %sub, i64* %length.addr, align 8, !dbg !7881
  %12 = load i64, i64* %length.addr, align 8, !dbg !7882
  %tobool11 = icmp ne i64 %12, 0, !dbg !7882
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !7884

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !7885
  br label %return, !dbg !7885

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !7886
  %and14 = and i64 %13, 15, !dbg !7886
  %cmp = icmp eq i64 %and14, 0, !dbg !7888
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !7889

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !7890

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !7891, !llvm.loop !7892

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !7895
  %15 = load i8*, i8** %p, align 8, !dbg !7896
  %16 = load i64, i64* %length.addr, align 8, !dbg !7897
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !7898
  %cmp17 = icmp eq i32 %call, 0, !dbg !7899
  store i1 %cmp17, i1* %retval, align 1, !dbg !7900
  br label %return, !dbg !7900

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !7901
  ret i1 %17, !dbg !7901
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !7902 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !429
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !7913, metadata !DIExpression()), !dbg !7914
  %0 = load i32, i32* %fd.addr, align 4, !dbg !7915
  %1 = load i64, i64* %size.addr, align 8, !dbg !7916
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #9, !dbg !7917
  store i64 %call, i64* %file_end, align 8, !dbg !7914
  %2 = load i64, i64* %file_end, align 8, !dbg !7918
  %cmp = icmp slt i64 %2, 0, !dbg !7920
  br i1 %cmp, label %if.then, label %if.end, !dbg !7921

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7922
  %3 = load i32, i32* %call1, align 4, !dbg !7922, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !7924
  %4 = load i8*, i8** %name.addr, align 8, !dbg !7925
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !7925
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !7926
  store i1 false, i1* %retval, align 1, !dbg !7927
  br label %return, !dbg !7927

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !7928
  %tobool = trunc i8 %5 to i1, !dbg !7928
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !7930

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !7931
  %7 = load i64, i64* %file_end, align 8, !dbg !7932
  %8 = load i64, i64* %size.addr, align 8, !dbg !7933
  %sub = sub nsw i64 %7, %8, !dbg !7934
  %9 = load i64, i64* %size.addr, align 8, !dbg !7935
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !7936
  %cmp5 = icmp slt i32 %call4, 0, !dbg !7937
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !7938

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #16, !dbg !7939
  %10 = load i32, i32* %call7, align 4, !dbg !7939, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !7941
  %11 = load i8*, i8** %name.addr, align 8, !dbg !7942
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !7942
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !7943
  store i1 false, i1* %retval, align 1, !dbg !7944
  br label %return, !dbg !7944

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !7945
  br label %return, !dbg !7945

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !7946
  ret i1 %12, !dbg !7946
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !7947 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7956, metadata !DIExpression()), !dbg !7957
  store i32 0, i32* %ret, align 4, !dbg !7957
  %0 = load i32, i32* %fd.addr, align 4, !dbg !7958
  %1 = load i64, i64* %offset.addr, align 8, !dbg !7959
  %2 = load i64, i64* %length.addr, align 8, !dbg !7960
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !7961
  store i32 %call, i32* %ret, align 4, !dbg !7962
  %3 = load i32, i32* %ret, align 4, !dbg !7963
  %cmp = icmp slt i32 %3, 0, !dbg !7965
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7966

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7967
  %4 = load i32, i32* %call1, align 4, !dbg !7967, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !7968
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !7969

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #16, !dbg !7970
  %5 = load i32, i32* %call3, align 4, !dbg !7970, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !7971
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7972

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !7973
  br label %if.end, !dbg !7974

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !7975
  ret i32 %6, !dbg !7976
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !7977 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  %0 = load i32, i32* %err.addr, align 4, !dbg !7980
  %cmp = icmp eq i32 %0, 95, !dbg !7981
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7982

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !7982

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !7983
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !7984 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7990
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !7991, !ctir !7290
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7991, !ctir !559
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !7990
  call void @free(i8* %2) #9, !dbg !7992
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7993
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !7994, !ctir !7290
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !7995, !ctir !559
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !7996
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !7997, !ctir !7290
  store i64 0, i64* %ei_count, align 8, !dbg !7998, !ctir !55
  ret void, !dbg !7999
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !595 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8000, metadata !DIExpression()), !dbg !8001
  store i64 %n_bytes, i64* %n_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8004
  %cmp = icmp eq i8* %0, null, !dbg !8006
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8007

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8008
  %call = call noalias i8* @calloc(i64 %1, i64 1) #9, !dbg !8010
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8011
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8012
  %cmp1 = icmp eq i8* %2, null, !dbg !8014
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8015

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8016
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8018
  br label %if.end, !dbg !8019

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8020

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8021

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8022
  %tobool = icmp ne i64 %3, 0, !dbg !8021
  br i1 %tobool, label %while.body, label %while.end, !dbg !8021

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8023, metadata !DIExpression()), !dbg !8025
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8026
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8026
  %cmp4 = icmp ult i64 %4, %5, !dbg !8026
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8026

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8026
  br label %cond.end, !dbg !8026

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8026
  br label %cond.end, !dbg !8026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8026
  store i64 %cond, i64* %n, align 8, !dbg !8025
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8027
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8029
  %10 = load i64, i64* %n, align 8, !dbg !8030
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8031
  %11 = load i64, i64* %n, align 8, !dbg !8032
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8033
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8034

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8035
  br label %return, !dbg !8035

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8036
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8037
  %sub = sub i64 %13, %12, !dbg !8037
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8037
  br label %while.cond, !dbg !8021, !llvm.loop !8038

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8040
  br label %return, !dbg !8040

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8041
  ret i1 %14, !dbg !8041
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8042 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8049
  %and = and i32 %0, 61440, !dbg !8049
  %cmp = icmp eq i32 %and, 40960, !dbg !8049
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8050

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8051
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8052

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8053
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #9, !dbg !8054
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8055
  br label %lor.end, !dbg !8052

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8056
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8057 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8060
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8061
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8061
  %call = call i32 @geteuid() #9, !dbg !8062
  %cmp = icmp eq i32 %call, 0, !dbg !8063
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8064
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8065, !ctir !3462
  %frombool = zext i1 %cmp to i8, !dbg !8066
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8066, !ctir !142
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8067
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8068, !ctir !3462
  %frombool1 = zext i1 %cmp to i8, !dbg !8069
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8069, !ctir !142
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8070
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8071, !ctir !3462
  store i32 -1, i32* %rename_errno, align 4, !dbg !8072, !ctir !7
  ret void, !dbg !8073
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8074 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !611
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8083, metadata !DIExpression()), !dbg !8084
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8085
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8086, !ctir !611
  store i64 %0, i64* %st_ino, align 8, !dbg !8087, !ctir !498
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8088
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8089, !ctir !611
  store i64 %1, i64* %st_dev, align 8, !dbg !8090, !ctir !500
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8091, !ctir !611
  store i8* null, i8** %name, align 8, !dbg !8092, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8093
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8094
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8095
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8095
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8096
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8097
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8097
  br i1 %tobool, label %if.then, label %if.end, !dbg !8099

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8100
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8100
  call void @src_to_dest_free(i8* %7), !dbg !8101
  br label %if.end, !dbg !8101

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8102
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8103 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8106, metadata !DIExpression()), !dbg !8107
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8108
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8108
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8107
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8109
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8110, !ctir !611
  %3 = load i8*, i8** %name, align 8, !dbg !8110, !ctir !9
  call void @free(i8* %3) #9, !dbg !8111
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8112
  call void @free(i8* %4) #9, !dbg !8113
  ret void, !dbg !8114
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8115 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !611
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8118, metadata !DIExpression()), !dbg !8119
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8122, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8124, metadata !DIExpression()), !dbg !8125
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8126
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8127, !ctir !611
  store i64 %0, i64* %st_ino, align 8, !dbg !8128, !ctir !498
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8129
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8130, !ctir !611
  store i64 %1, i64* %st_dev, align 8, !dbg !8131, !ctir !500
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8132
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8133
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8134
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8134
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8135
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8136
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8136
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8136

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8137
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8138, !ctir !617
  %7 = load i8*, i8** %name, align 8, !dbg !8138, !ctir !9
  br label %cond.end, !dbg !8136

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8136
  ret i8* %cond, !dbg !8139
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8140 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !610
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !610
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8143, metadata !DIExpression()), !dbg !8144
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8145, metadata !DIExpression()), !dbg !8146
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8149, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8151, metadata !DIExpression()), !dbg !8152
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8153
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8153
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8154
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8155
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8156
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8157
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8158, !ctir !611
  store i8* %call1, i8** %name2, align 8, !dbg !8159, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8160
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8161
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8162, !ctir !611
  store i64 %3, i64* %st_ino, align 8, !dbg !8163, !ctir !498
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8164
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8165
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8166, !ctir !611
  store i64 %5, i64* %st_dev, align 8, !dbg !8167, !ctir !500
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8168
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8169
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8169
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8170
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8170
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8171
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8172
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8174
  br i1 %cmp, label %if.then, label %if.end, !dbg !8175

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8176
  unreachable, !dbg !8176

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8178
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8180
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8181
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8182

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8183
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8183
  call void @src_to_dest_free(i8* %15), !dbg !8185
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8186
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8187, !ctir !611
  %17 = load i8*, i8** %name6, align 8, !dbg !8187, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !8188
  br label %return, !dbg !8188

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8189
  br label %return, !dbg !8189

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8190
  ret i8* %18, !dbg !8190
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8191 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8192
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8193
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8194
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8196
  br i1 %cmp, label %if.then, label %if.end, !dbg !8197

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8198
  unreachable, !dbg !8198

if.end:                                           ; preds = %entry
  ret void, !dbg !8199
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8200 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8205, metadata !DIExpression()), !dbg !8206
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8207
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8207
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8206
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8208
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8209, !ctir !617
  %3 = load i64, i64* %st_ino, align 8, !dbg !8209, !ctir !498
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8210
  %rem = urem i64 %3, %4, !dbg !8211
  ret i64 %rem, !dbg !8212
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8213 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !616
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !616
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8218, metadata !DIExpression()), !dbg !8219
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8220
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8220
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8219
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8221, metadata !DIExpression()), !dbg !8222
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8223
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8223
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8222
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8224
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8224, !ctir !617
  %5 = load i64, i64* %st_ino, align 8, !dbg !8224, !ctir !498
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8224
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8224, !ctir !617
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8224, !ctir !498
  %cmp = icmp eq i64 %5, %7, !dbg !8224
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8224

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8224
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8224, !ctir !617
  %9 = load i64, i64* %st_dev, align 8, !dbg !8224, !ctir !500
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8224
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8224, !ctir !617
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8224, !ctir !500
  %cmp3 = icmp eq i64 %9, %11, !dbg !8224
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8225
  %13 = zext i1 %12 to i64, !dbg !8224
  %cond = select i1 %12, i32 1, i32 0, !dbg !8224
  %tobool = icmp ne i32 %cond, 0, !dbg !8224
  ret i1 %tobool, !dbg !8226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8227 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8228
  call void @hash_free(%struct.hash_table* %0), !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8231 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8248
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8249
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8250, !ctir !8235
  store i32 %0, i32* %fd, align 8, !dbg !8251, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8252
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8253, !ctir !8235
  store i64 0, i64* %ei_count, align 8, !dbg !8254, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8255
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8256, !ctir !8235
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8257, !ctir !1188
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8258
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8259, !ctir !8235
  store i64 0, i64* %scan_start, align 8, !dbg !8260, !ctir !1187
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8261
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8262, !ctir !8235
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8263, !ctir !142
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8264
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8265, !ctir !8235
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8266, !ctir !142
  %call = call zeroext i1 @extent_need_sync(), !dbg !8267
  %7 = zext i1 %call to i64, !dbg !8267
  %cond = select i1 %call, i32 1, i32 0, !dbg !8267
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8268
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8269, !ctir !8235
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8270, !ctir !70
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8272 {
entry:
  ret i1 true, !dbg !8273
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8274 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1188
  %fiemap_buf = alloca %union.anon.17, align 8, !ctir !8277
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1194
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1223
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1199
  %length_adjust = alloca i64, align 8, !ctir !1199
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i32 0, i32* %si, align 4, !dbg !8284
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8285, metadata !DIExpression()), !dbg !8286
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8287
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8288, !ctir !8235
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8288, !ctir !1188
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8286
  br label %while.body, !dbg !8289

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.17* %fiemap_buf, metadata !8290, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8293, metadata !DIExpression()), !dbg !8294
  %f = bitcast %union.anon.17* %fiemap_buf to %struct.fiemap*, !dbg !8295
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8294
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8296, metadata !DIExpression()), !dbg !8297
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8298
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8299, !ctir !1195
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8298, !ctir !1210
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8297
  %3 = bitcast %union.anon.17* %fiemap_buf to i8*, !dbg !8300
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8300
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8301
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8302, !ctir !8235
  %5 = load i64, i64* %scan_start, align 8, !dbg !8302, !ctir !1187
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8303
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8304, !ctir !1195
  store i64 %5, i64* %fm_start, align 8, !dbg !8305, !ctir !1199
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8306
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8307, !ctir !8235
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8307, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8308
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8309, !ctir !1195
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8310, !ctir !1204
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8311
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8312, !ctir !1195
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8313, !ctir !1204
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8314
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8315, !ctir !8235
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8315, !ctir !1187
  %sub = sub i64 -1, %12, !dbg !8316
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8317
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8318, !ctir !1195
  store i64 %sub, i64* %fm_length, align 8, !dbg !8319, !ctir !1199
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8320
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8322, !ctir !8235
  %15 = load i32, i32* %fd, align 8, !dbg !8322, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8323
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #9, !dbg !8324
  %cmp = icmp slt i32 %call, 0, !dbg !8325
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8326

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8327
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8330, !ctir !8235
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8330, !ctir !1187
  %cmp5 = icmp eq i64 %18, 0, !dbg !8331
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8332

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8333
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8334, !ctir !8235
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8335, !ctir !142
  br label %if.end, !dbg !8333

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8336
  br label %return, !dbg !8336

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8337
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8339, !ctir !1195
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8339, !ctir !1204
  %cmp8 = icmp eq i32 %21, 0, !dbg !8340
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8341

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8342
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8344, !ctir !8235
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8345, !ctir !142
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8346
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8347, !ctir !8235
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8347, !ctir !1187
  %cmp11 = icmp ne i64 %24, 0, !dbg !8348
  store i1 %cmp11, i1* %retval, align 1, !dbg !8349
  br label %return, !dbg !8349

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8350
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8350, !ctir !8235
  %26 = load i64, i64* %ei_count, align 8, !dbg !8350, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8350
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8350, !ctir !1195
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8350, !ctir !1204
  %conv = zext i32 %28 to i64, !dbg !8350
  %sub14 = sub i64 -1, %conv, !dbg !8350
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8350
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8353

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !8353

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8350
  unreachable, !dbg !8350

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8354
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !8355, !ctir !1195
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !8355, !ctir !1204
  %conv20 = zext i32 %30 to i64, !dbg !8354
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8356
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !8357, !ctir !8235
  %32 = load i64, i64* %ei_count21, align 8, !dbg !8358, !ctir !55
  %add = add i64 %32, %conv20, !dbg !8358
  store i64 %add, i64* %ei_count21, align 8, !dbg !8358, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8359, metadata !DIExpression()), !dbg !8361
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8362
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8363
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !8364, !ctir !8235
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !8364, !ctir !1188
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !8365
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !8365
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8365
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8365
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !8361
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8366
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !8367, !ctir !8235
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !8367, !ctir !1188
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !8366
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8368
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !8369, !ctir !8235
  %40 = load i64, i64* %ei_count24, align 8, !dbg !8369, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !8370
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !8370
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8371
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !8372, !ctir !8235
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !8373, !ctir !1188
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8374
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !8375, !ctir !8235
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !8375, !ctir !1188
  %45 = load i64, i64* %prev_idx, align 8, !dbg !8376
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !8377, !ctir !1189
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8379, metadata !DIExpression()), !dbg !8380
  store i32 0, i32* %i, align 4, !dbg !8380
  store i32 0, i32* %i, align 4, !dbg !8381
  br label %for.cond, !dbg !8383

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !8384
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8386
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !8387, !ctir !1195
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !8387, !ctir !1204
  %cmp29 = icmp ult i32 %46, %48, !dbg !8388
  br i1 %cmp29, label %for.body, label %for.end, !dbg !8389

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8390
  %50 = load i32, i32* %i, align 4, !dbg !8390
  %idxprom = zext i32 %50 to i64, !dbg !8390
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !8390, !ctir !1223
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !8390, !ctir !1211
  %51 = load i64, i64* %fe_logical, align 8, !dbg !8390, !ctir !1199
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8390
  %53 = load i32, i32* %i, align 4, !dbg !8390
  %idxprom32 = zext i32 %53 to i64, !dbg !8390
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !8390, !ctir !1223
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !8390, !ctir !1211
  %54 = load i64, i64* %fe_length, align 8, !dbg !8390, !ctir !1199
  %sub34 = sub i64 9223372036854775807, %54, !dbg !8390
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !8390
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !8394

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !8394

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.190, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8390
  unreachable, !dbg !8390

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !8395
  %tobool = icmp ne i32 %55, 0, !dbg !8395
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !8397

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8398
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !8399, !ctir !1189
  %57 = load i32, i32* %ext_flags, align 8, !dbg !8399, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8400
  %59 = load i32, i32* %i, align 4, !dbg !8401
  %idxprom40 = zext i32 %59 to i64, !dbg !8400
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !8400, !ctir !1223
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !8402, !ctir !1211
  %60 = load i32, i32* %fe_flags, align 8, !dbg !8402, !ctir !1204
  %and = and i32 %60, -2, !dbg !8403
  %cmp42 = icmp eq i32 %57, %and, !dbg !8404
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !8405

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8406
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !8407, !ctir !1189
  %62 = load i64, i64* %ext_logical, align 8, !dbg !8407, !ctir !1187
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8408
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !8409, !ctir !1189
  %64 = load i64, i64* %ext_length, align 8, !dbg !8409, !ctir !1187
  %add45 = add nsw i64 %62, %64, !dbg !8410
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8411
  %66 = load i32, i32* %i, align 4, !dbg !8412
  %idxprom46 = zext i32 %66 to i64, !dbg !8411
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !8411, !ctir !1223
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !8413, !ctir !1211
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !8413, !ctir !1199
  %cmp49 = icmp eq i64 %add45, %67, !dbg !8414
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !8415

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8416
  %69 = load i32, i32* %i, align 4, !dbg !8418
  %idxprom52 = zext i32 %69 to i64, !dbg !8416
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !8416, !ctir !1223
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !8419, !ctir !1211
  %70 = load i64, i64* %fe_length54, align 8, !dbg !8419, !ctir !1199
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8420
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !8421, !ctir !1189
  %72 = load i64, i64* %ext_length55, align 8, !dbg !8422, !ctir !1187
  %add56 = add i64 %72, %70, !dbg !8422
  store i64 %add56, i64* %ext_length55, align 8, !dbg !8422, !ctir !1187
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8423
  %74 = load i32, i32* %i, align 4, !dbg !8424
  %idxprom57 = zext i32 %74 to i64, !dbg !8423
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !8423, !ctir !1223
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !8425, !ctir !1211
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !8425, !ctir !1204
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8426
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !8427, !ctir !1189
  store i32 %75, i32* %ext_flags60, align 8, !dbg !8428, !ctir !70
  br label %if.end131, !dbg !8429

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !8430
  %cmp62 = icmp eq i32 %77, 0, !dbg !8432
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !8433

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8434
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !8435, !ctir !8235
  %79 = load i64, i64* %scan_start65, align 8, !dbg !8435, !ctir !1187
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8436
  %81 = load i32, i32* %i, align 4, !dbg !8437
  %idxprom66 = zext i32 %81 to i64, !dbg !8436
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !8436, !ctir !1223
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !8438, !ctir !1211
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !8438, !ctir !1199
  %cmp69 = icmp ugt i64 %79, %82, !dbg !8439
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !8440

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !8441
  %tobool71 = icmp ne i32 %83, 0, !dbg !8441
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !8442

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8443
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !8444, !ctir !1189
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !8444, !ctir !1187
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8445
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !8446, !ctir !1189
  %87 = load i64, i64* %ext_length74, align 8, !dbg !8446, !ctir !1187
  %add75 = add nsw i64 %85, %87, !dbg !8447
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8448
  %89 = load i32, i32* %i, align 4, !dbg !8449
  %idxprom76 = zext i32 %89 to i64, !dbg !8448
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !8448, !ctir !1223
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !8450, !ctir !1211
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !8450, !ctir !1199
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !8451
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !8452

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !8453, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !8456, metadata !DIExpression()), !dbg !8457
  %91 = load i32, i32* %si, align 4, !dbg !8458
  %cmp82 = icmp eq i32 %91, 0, !dbg !8460
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8461

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8462
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !8463, !ctir !8235
  %93 = load i64, i64* %scan_start85, align 8, !dbg !8463, !ctir !1187
  store i64 %93, i64* %new_logical, align 8, !dbg !8464
  br label %if.end90, !dbg !8465

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8466
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !8468, !ctir !1189
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !8468, !ctir !1187
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8469
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !8470, !ctir !1189
  %97 = load i64, i64* %ext_length88, align 8, !dbg !8470, !ctir !1187
  %add89 = add nsw i64 %95, %97, !dbg !8471
  store i64 %add89, i64* %new_logical, align 8, !dbg !8472
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !8473
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8474
  %100 = load i32, i32* %i, align 4, !dbg !8475
  %idxprom91 = zext i32 %100 to i64, !dbg !8474
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !8474, !ctir !1223
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !8476, !ctir !1211
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !8476, !ctir !1199
  %sub94 = sub i64 %98, %101, !dbg !8477
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !8478
  %102 = load i64, i64* %length_adjust, align 8, !dbg !8479
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8481
  %104 = load i32, i32* %i, align 4, !dbg !8482
  %idxprom95 = zext i32 %104 to i64, !dbg !8481
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !8481, !ctir !1223
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !8483, !ctir !1211
  %105 = load i64, i64* %fe_length97, align 8, !dbg !8483, !ctir !1199
  %cmp98 = icmp ult i64 %102, %105, !dbg !8484
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !8485

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8486
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !8489, !ctir !8235
  %107 = load i64, i64* %scan_start101, align 8, !dbg !8489, !ctir !1187
  %cmp102 = icmp eq i64 %107, 0, !dbg !8490
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !8491

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8492
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !8493, !ctir !8235
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !8494, !ctir !142
  br label %if.end106, !dbg !8492

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !8495
  br label %return, !dbg !8495

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !8496
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8497
  %111 = load i32, i32* %i, align 4, !dbg !8498
  %idxprom108 = zext i32 %111 to i64, !dbg !8497
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !8497, !ctir !1223
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !8499, !ctir !1211
  store i64 %109, i64* %fe_logical110, align 8, !dbg !8500, !ctir !1199
  %112 = load i64, i64* %length_adjust, align 8, !dbg !8501
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8502
  %114 = load i32, i32* %i, align 4, !dbg !8503
  %idxprom111 = zext i32 %114 to i64, !dbg !8502
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !8502, !ctir !1223
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !8504, !ctir !1211
  %115 = load i64, i64* %fe_length113, align 8, !dbg !8505, !ctir !1199
  %sub114 = sub i64 %115, %112, !dbg !8505
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !8505, !ctir !1199
  %116 = load i32, i32* %i, align 4, !dbg !8506
  %dec = add i32 %116, -1, !dbg !8506
  store i32 %dec, i32* %i, align 4, !dbg !8506
  br label %for.inc, !dbg !8507

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8508
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !8510, !ctir !8235
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !8510, !ctir !1188
  %119 = load i32, i32* %si, align 4, !dbg !8511
  %idx.ext = zext i32 %119 to i64, !dbg !8512
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !8512, !ctir !1189
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !8513
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8514
  %121 = load i32, i32* %i, align 4, !dbg !8515
  %idxprom118 = zext i32 %121 to i64, !dbg !8514
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !8514, !ctir !1223
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !8516, !ctir !1211
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !8516, !ctir !1199
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8517
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !8518, !ctir !1189
  store i64 %122, i64* %ext_logical121, align 8, !dbg !8519, !ctir !1187
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8520
  %125 = load i32, i32* %i, align 4, !dbg !8521
  %idxprom122 = zext i32 %125 to i64, !dbg !8520
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !8520, !ctir !1223
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !8522, !ctir !1211
  %126 = load i64, i64* %fe_length124, align 8, !dbg !8522, !ctir !1199
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8523
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !8524, !ctir !1189
  store i64 %126, i64* %ext_length125, align 8, !dbg !8525, !ctir !1187
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8526
  %129 = load i32, i32* %i, align 4, !dbg !8527
  %idxprom126 = zext i32 %129 to i64, !dbg !8526
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !8526, !ctir !1223
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !8528, !ctir !1211
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !8528, !ctir !1204
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8529
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !8530, !ctir !1189
  store i32 %130, i32* %ext_flags129, align 8, !dbg !8531, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !8532
  %inc = add i32 %132, 1, !dbg !8532
  store i32 %inc, i32* %si, align 4, !dbg !8532
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !8533

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !8534
  %inc132 = add i32 %133, 1, !dbg !8534
  store i32 %inc132, i32* %i, align 4, !dbg !8534
  br label %for.cond, !dbg !8535, !llvm.loop !8536

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8538
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !8540, !ctir !1189
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !8540, !ctir !70
  %and134 = and i32 %135, 1, !dbg !8541
  %tobool135 = icmp ne i32 %and134, 0, !dbg !8541
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !8542

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8543
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !8544, !ctir !8235
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !8545, !ctir !142
  br label %if.end138, !dbg !8543

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !8546
  %cmp139 = icmp ugt i32 %137, 72, !dbg !8548
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !8549

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8550
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !8551, !ctir !8235
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !8551
  %tobool143 = trunc i8 %139 to i1, !dbg !8551, !ctir !142
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !8552

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8553
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !8554, !ctir !8235
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !8554, !ctir !1188
  %142 = load i32, i32* %si, align 4, !dbg !8555
  %dec146 = add i32 %142, -1, !dbg !8555
  store i32 %dec146, i32* %si, align 4, !dbg !8555
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !8556
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !8556, !ctir !1189
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !8557, !ctir !1189
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !8558
  br label %if.end150, !dbg !8559

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !8560
  %conv151 = zext i32 %143 to i64, !dbg !8560
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8561
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !8562, !ctir !8235
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !8563, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8564
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !8566, !ctir !8235
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !8566
  %tobool154 = trunc i8 %146 to i1, !dbg !8566, !ctir !142
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !8567

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !8568

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8569
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !8570, !ctir !1189
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !8570, !ctir !1187
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8571
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !8572, !ctir !1189
  %150 = load i64, i64* %ext_length158, align 8, !dbg !8572, !ctir !1187
  %add159 = add nsw i64 %148, %150, !dbg !8573
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8574
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !8575, !ctir !8235
  store i64 %add159, i64* %scan_start160, align 8, !dbg !8576, !ctir !1187
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !8577
  %cmp162 = icmp uge i32 %152, 72, !dbg !8579
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !8580

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !8581

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !8289, !llvm.loop !8582

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !8584
  br label %return, !dbg !8584

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !8585
  ret i1 %153, !dbg !8585
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !8586 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !624
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !630
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !8589, metadata !DIExpression()), !dbg !8590
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8593, metadata !DIExpression()), !dbg !8594
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8599, metadata !DIExpression()), !dbg !8600
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !8601, metadata !DIExpression()), !dbg !8602
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8603
  %cmp = icmp slt i32 %0, 0, !dbg !8605
  br i1 %cmp, label %if.then, label %if.end, !dbg !8606

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !8607
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !8608
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !8609
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !8610
  %5 = load i32, i32* %flags.addr, align 4, !dbg !8611
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #9, !dbg !8612
  %cmp1 = icmp eq i32 %call, 0, !dbg !8613
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8612

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8612

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !8614
  %6 = load i32, i32* %call2, align 4, !dbg !8614, !ctir !7
  br label %cond.end, !dbg !8612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !8612
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !8615
  br label %if.end, !dbg !8616

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !8617
  %tobool = trunc i8 %7 to i1, !dbg !8617
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8619

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8620
  %cmp3 = icmp ne i32 %8, 17, !dbg !8621
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8622

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8623
  store i32 %9, i32* %retval, align 4, !dbg !8624
  br label %return, !dbg !8624

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8627, metadata !DIExpression()), !dbg !8628
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !8629
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8630, !ctir !624
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !8631
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8628
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8632
  %tobool7 = icmp ne i8* %11, null, !dbg !8632
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8634

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !8635
  %12 = load i32, i32* %call9, align 4, !dbg !8635, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !8636
  br label %return, !dbg !8636

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !8637, metadata !DIExpression()), !dbg !8638
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !8639
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !8640
  store i32 %13, i32* %srcdir11, align 8, !dbg !8639
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !8639
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !8641
  store i8* %14, i8** %srcname12, align 8, !dbg !8639
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !8639
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !8642
  store i32 %15, i32* %dstdir13, align 8, !dbg !8639
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !8639
  %16 = load i32, i32* %flags.addr, align 4, !dbg !8643
  store i32 %16, i32* %flags14, align 4, !dbg !8639
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8644, metadata !DIExpression()), !dbg !8645
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8646
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !8648
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !8649
  %cmp16 = icmp ne i32 %call15, 0, !dbg !8650
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8651

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #16, !dbg !8652
  %19 = load i32, i32* %call18, align 4, !dbg !8652, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !8653
  br label %if.end27, !dbg !8654

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !8655
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !8657
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !8658
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !8659
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #9, !dbg !8660
  %cmp20 = icmp eq i32 %call19, 0, !dbg !8661
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !8660

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !8660

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #16, !dbg !8662
  %24 = load i32, i32* %call23, align 4, !dbg !8662, !ctir !7
  br label %cond.end24, !dbg !8660

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !8660
  store i32 %cond25, i32* %err, align 4, !dbg !8663
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !8664
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !8665
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #9, !dbg !8666
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !8667
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8669, !ctir !624
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !8670
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8671

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !8672
  call void @free(i8* %28) #9, !dbg !8673
  br label %if.end31, !dbg !8673

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !8674
  store i32 %29, i32* %retval, align 4, !dbg !8675
  br label %return, !dbg !8675

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !8676
  ret i32 %30, !dbg !8676
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !8677 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !627
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8680, metadata !DIExpression()), !dbg !8681
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !8684, metadata !DIExpression()), !dbg !8685
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !8686
  %call = call i8* @last_component(i8* %0) #14, !dbg !8687
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !8688
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !8689
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8689
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8689
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !8685
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !8690, metadata !DIExpression()), !dbg !8691
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !8692
  %add = add i64 %2, 9, !dbg !8693
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !8691
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8694, metadata !DIExpression()), !dbg !8695
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !8696
  %cmp = icmp ule i64 %3, 256, !dbg !8698
  br i1 %cmp, label %if.then, label %if.else, !dbg !8699

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8700
  store i8* %4, i8** %dsttmp, align 8, !dbg !8701
  br label %if.end3, !dbg !8702

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !8703
  %call1 = call noalias i8* @malloc(i64 %5) #9, !dbg !8705
  store i8* %call1, i8** %dsttmp, align 8, !dbg !8706
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !8707
  %tobool = icmp ne i8* %6, null, !dbg !8707
  br i1 %tobool, label %if.end, label %if.then2, !dbg !8709

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !8710
  store i8* %7, i8** %retval, align 8, !dbg !8711
  br label %return, !dbg !8711

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !8712
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !8713
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !8714
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #9, !dbg !8715
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #9, !dbg !8716
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8717
  store i8* %11, i8** %retval, align 8, !dbg !8718
  br label %return, !dbg !8718

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !8719
  ret i8* %12, !dbg !8719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !8720 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !629
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !8725, metadata !DIExpression()), !dbg !8726
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8727
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !8727
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !8726
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8728
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !8729, !ctir !630
  %3 = load i32, i32* %srcdir, align 8, !dbg !8729, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8730
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !8731, !ctir !630
  %5 = load i8*, i8** %srcname, align 8, !dbg !8731, !ctir !183
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8732
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !8733, !ctir !630
  %7 = load i32, i32* %dstdir, align 8, !dbg !8733, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !8734
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !8735
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !8736, !ctir !630
  %10 = load i32, i32* %flags, align 4, !dbg !8736, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #9, !dbg !8737
  ret i32 %call, !dbg !8738
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !8739 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !624
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !637
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8748, metadata !DIExpression()), !dbg !8749
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !8750, metadata !DIExpression()), !dbg !8751
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8752
  %cmp = icmp slt i32 %0, 0, !dbg !8754
  br i1 %cmp, label %if.then, label %if.end, !dbg !8755

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !8756
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !8757
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !8758
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #9, !dbg !8759
  %cmp1 = icmp eq i32 %call, 0, !dbg !8760
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8759

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8759

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !8761
  %4 = load i32, i32* %call2, align 4, !dbg !8761, !ctir !7
  br label %cond.end, !dbg !8759

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !8759
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !8762
  br label %if.end, !dbg !8763

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !8764
  %tobool = trunc i8 %5 to i1, !dbg !8764
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8766

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8767
  %cmp3 = icmp ne i32 %6, 17, !dbg !8768
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8769

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !8770
  store i32 %7, i32* %retval, align 4, !dbg !8771
  br label %return, !dbg !8771

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8774, metadata !DIExpression()), !dbg !8775
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !8776
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8777, !ctir !624
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !8778
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8775
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !8779
  %tobool7 = icmp ne i8* %9, null, !dbg !8779
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8781

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !8782
  %10 = load i32, i32* %call9, align 4, !dbg !8782, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !8783
  br label %return, !dbg !8783

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !8784, metadata !DIExpression()), !dbg !8785
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !8786
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !8787
  store i8* %11, i8** %srcname11, align 8, !dbg !8786
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !8786
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !8788
  store i32 %12, i32* %dstdir12, align 8, !dbg !8786
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8789, metadata !DIExpression()), !dbg !8790
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !8791
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !8793
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !8794
  %cmp14 = icmp ne i32 %call13, 0, !dbg !8795
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !8796

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #16, !dbg !8797
  %15 = load i32, i32* %call16, align 4, !dbg !8797, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !8798
  br label %if.end24, !dbg !8799

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !8800
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8802
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !8803
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !8804
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #9, !dbg !8805
  %cmp18 = icmp ne i32 %call17, 0, !dbg !8806
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !8807

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #16, !dbg !8808
  %20 = load i32, i32* %call20, align 4, !dbg !8808, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !8810
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !8811
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !8812
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #9, !dbg !8813
  br label %if.end23, !dbg !8814

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !8815
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !8817
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8819, !ctir !624
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !8820
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !8821

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !8822
  call void @free(i8* %24) #9, !dbg !8823
  br label %if.end28, !dbg !8823

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !8824
  store i32 %25, i32* %retval, align 4, !dbg !8825
  br label %return, !dbg !8825

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !8826
  ret i32 %26, !dbg !8826
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !8827 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !636
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !8832, metadata !DIExpression()), !dbg !8833
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8834
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !8834
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !8833
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !8835
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !8836, !ctir !637
  %3 = load i8*, i8** %srcname, align 8, !dbg !8836, !ctir !183
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !8837
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !8838, !ctir !637
  %5 = load i32, i32* %dstdir, align 8, !dbg !8838, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !8839
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #9, !dbg !8840
  ret i32 %call, !dbg !8841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !8842 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8856, metadata !DIExpression()), !dbg !8857
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !8858
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !8859
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !8860
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !8861
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8862
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !8863
  store i32 %call, i32* %ret, align 4, !dbg !8857
  %5 = load i32, i32* %ret, align 4, !dbg !8864
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !8865

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8866
  %6 = load i32, i32* %call1, align 4, !dbg !8866, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8868
  %call2 = call i8* @quote(i8* %7), !dbg !8869
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i64 0, i64 0), i8* %call2), !dbg !8870
  br label %sw.epilog, !dbg !8871

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !8872
  %8 = load i32, i32* %call4, align 4, !dbg !8872, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.201, i64 0, i64 0)) #9, !dbg !8873
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !8874
  %call6 = call i8* @quote(i8* %9), !dbg !8875
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !8876
  br label %sw.epilog, !dbg !8877

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8878

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !8879
  ret i32 %10, !dbg !8880
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !8881 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8889, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8891, metadata !DIExpression()), !dbg !8892
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8893
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8894
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8895
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !8896
  store i32 %call, i32* %ret, align 4, !dbg !8892
  %3 = load i32, i32* %ret, align 4, !dbg !8897
  %cmp = icmp ne i32 %3, 0, !dbg !8899
  br i1 %cmp, label %if.then, label %if.end, !dbg !8900

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8901
  %4 = load i32, i32* %call1, align 4, !dbg !8901, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.204, i64 0, i64 0)) #9, !dbg !8902
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8903
  %call3 = call i8* @quote(i8* %5), !dbg !8904
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !8905
  br label %if.end, !dbg !8905

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8906
  ret i32 %6, !dbg !8907
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !8908 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !661
  %link_length = alloca i64, align 8, !ctir !55
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8912, metadata !DIExpression()), !dbg !8913
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !8916, metadata !DIExpression()), !dbg !8917
  store i64 1024, i64* %symlink_max, align 8, !dbg !8917
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !8918, metadata !DIExpression()), !dbg !8919
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8919
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !8920, metadata !DIExpression()), !dbg !8921
  %0 = load i64, i64* %symlink_max, align 8, !dbg !8922
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8923
  %cmp = icmp ult i64 %0, %1, !dbg !8924
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8922

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !8925
  %add = add i64 %2, 1, !dbg !8926
  br label %cond.end, !dbg !8922

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !8927
  br label %cond.end, !dbg !8922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !8922
  store i64 %cond, i64* %initial_limit, align 8, !dbg !8921
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !8928, metadata !DIExpression()), !dbg !8929
  %4 = load i64, i64* %size.addr, align 8, !dbg !8930
  %5 = load i64, i64* %initial_limit, align 8, !dbg !8931
  %cmp1 = icmp ult i64 %4, %5, !dbg !8932
  br i1 %cmp1, label %cond.true2, label %cond.false4, !dbg !8930

cond.true2:                                       ; preds = %cond.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !8933
  %add3 = add i64 %6, 1, !dbg !8934
  br label %cond.end5, !dbg !8930

cond.false4:                                      ; preds = %cond.end
  %7 = load i64, i64* %initial_limit, align 8, !dbg !8935
  br label %cond.end5, !dbg !8930

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi i64 [ %add3, %cond.true2 ], [ %7, %cond.false4 ], !dbg !8930
  store i64 %cond6, i64* %buf_size, align 8, !dbg !8929
  br label %while.body, !dbg !8936

while.body:                                       ; preds = %cond.end5, %if.end26
  call void @llvm.dbg.declare(metadata i64* %r, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !8942, metadata !DIExpression()), !dbg !8943
  %8 = load i64, i64* %buf_size, align 8, !dbg !8944
  %call = call noalias i8* @malloc(i64 %8) #9, !dbg !8945
  store i8* %call, i8** %buffer, align 8, !dbg !8943
  %9 = load i8*, i8** %buffer, align 8, !dbg !8946
  %cmp7 = icmp eq i8* %9, null, !dbg !8948
  br i1 %cmp7, label %if.then, label %if.end, !dbg !8949

if.then:                                          ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !8950
  br label %return, !dbg !8950

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %file.addr, align 8, !dbg !8951
  %11 = load i8*, i8** %buffer, align 8, !dbg !8952
  %12 = load i64, i64* %buf_size, align 8, !dbg !8953
  %call8 = call i64 @readlink(i8* %10, i8* %11, i64 %12) #9, !dbg !8954
  store i64 %call8, i64* %r, align 8, !dbg !8955
  %13 = load i64, i64* %r, align 8, !dbg !8956
  store i64 %13, i64* %link_length, align 8, !dbg !8957
  %14 = load i64, i64* %r, align 8, !dbg !8958
  %cmp9 = icmp slt i64 %14, 0, !dbg !8960
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !8961

land.lhs.true:                                    ; preds = %if.end
  %call10 = call i32* @__errno_location() #16, !dbg !8962
  %15 = load i32, i32* %call10, align 4, !dbg !8962, !ctir !7
  %cmp11 = icmp ne i32 %15, 34, !dbg !8963
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !8964

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8965, metadata !DIExpression()), !dbg !8967
  %call13 = call i32* @__errno_location() #16, !dbg !8968
  %16 = load i32, i32* %call13, align 4, !dbg !8968, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !8967
  %17 = load i8*, i8** %buffer, align 8, !dbg !8969
  call void @free(i8* %17) #9, !dbg !8970
  %18 = load i32, i32* %saved_errno, align 4, !dbg !8971
  %call14 = call i32* @__errno_location() #16, !dbg !8972
  store i32 %18, i32* %call14, align 4, !dbg !8973, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !8974
  br label %return, !dbg !8974

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %19 = load i64, i64* %link_length, align 8, !dbg !8975
  %20 = load i64, i64* %buf_size, align 8, !dbg !8977
  %cmp16 = icmp ult i64 %19, %20, !dbg !8978
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !8979

if.then17:                                        ; preds = %if.end15
  %21 = load i8*, i8** %buffer, align 8, !dbg !8980
  %22 = load i64, i64* %link_length, align 8, !dbg !8982
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !8980, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !8983
  %23 = load i8*, i8** %buffer, align 8, !dbg !8984
  store i8* %23, i8** %retval, align 8, !dbg !8985
  br label %return, !dbg !8985

if.end18:                                         ; preds = %if.end15
  %24 = load i8*, i8** %buffer, align 8, !dbg !8986
  call void @free(i8* %24) #9, !dbg !8987
  %25 = load i64, i64* %buf_size, align 8, !dbg !8988
  %cmp19 = icmp ule i64 %25, 4611686018427387903, !dbg !8990
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !8991

if.then20:                                        ; preds = %if.end18
  %26 = load i64, i64* %buf_size, align 8, !dbg !8992
  %mul = mul i64 %26, 2, !dbg !8992
  store i64 %mul, i64* %buf_size, align 8, !dbg !8992
  br label %if.end26, !dbg !8993

if.else:                                          ; preds = %if.end18
  %27 = load i64, i64* %buf_size, align 8, !dbg !8994
  %cmp21 = icmp ult i64 %27, 9223372036854775807, !dbg !8996
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !8997

if.then22:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !8998
  br label %if.end25, !dbg !8999

if.else23:                                        ; preds = %if.else
  %call24 = call i32* @__errno_location() #16, !dbg !9000
  store i32 12, i32* %call24, align 4, !dbg !9002, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9003
  br label %return, !dbg !9003

if.end25:                                         ; preds = %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then20
  br label %while.body, !dbg !8936, !llvm.loop !9004

return:                                           ; preds = %if.else23, %if.then17, %if.then12, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !9006
  ret i8* %28, !dbg !9006
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9007 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9010
  %tobool = icmp ne i8* %0, null, !dbg !9010
  br i1 %tobool, label %if.end, label %if.then, !dbg !9012

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.211, i64 0, i64 0)) #9, !dbg !9013
  store i8* %call, i8** %s.addr, align 8, !dbg !9014
  br label %if.end, !dbg !9015

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9016
  %tobool1 = icmp ne i8* %1, null, !dbg !9016
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9017

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9018
  %3 = load i8, i8* %2, align 1, !dbg !9019, !ctir !184
  %conv = sext i8 %3 to i32, !dbg !9019
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9019
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9020

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9021
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9022
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9023
  %cmp = icmp eq i8* %4, %call4, !dbg !9024
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9016

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9025
  br label %cond.end, !dbg !9016

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9016

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.212, i64 0, i64 0), %cond.false ], !dbg !9016
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9026
  ret void, !dbg !9027
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9028 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !627
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !661
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9039, metadata !DIExpression()), !dbg !9040
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9041
  %call = call i8* @last_component(i8* %0) #14, !dbg !9042
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9043
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9044
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9044
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9044
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9040
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9045, metadata !DIExpression()), !dbg !9046
  %2 = load i64, i64* %base_offset, align 8, !dbg !9047
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9048
  %4 = load i64, i64* %base_offset, align 8, !dbg !9049
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9050, !ctir !184
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9051
  %add = add i64 %2, %call1, !dbg !9052
  store i64 %add, i64* %filelen, align 8, !dbg !9046
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9053
  %tobool = icmp ne i8* %5, null, !dbg !9053
  br i1 %tobool, label %if.end, label %if.then, !dbg !9055

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9056
  br label %if.end, !dbg !9056

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9057, metadata !DIExpression()), !dbg !9058
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9059
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9060
  %add3 = add i64 %call2, 1, !dbg !9061
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9058
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9062, metadata !DIExpression()), !dbg !9063
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9064
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9063
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9065
  %cmp = icmp ult i64 %8, 9, !dbg !9067
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9068

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9069
  br label %if.end5, !dbg !9070

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9071, metadata !DIExpression()), !dbg !9072
  %9 = load i64, i64* %filelen, align 8, !dbg !9073
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9074
  %add6 = add i64 %9, %10, !dbg !9075
  %add7 = add i64 %add6, 1, !dbg !9076
  store i64 %add7, i64* %ssize, align 8, !dbg !9072
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9077, metadata !DIExpression()), !dbg !9078
  %11 = load i64, i64* %ssize, align 8, !dbg !9079
  %call8 = call noalias i8* @malloc(i64 %11) #9, !dbg !9080
  store i8* %call8, i8** %s, align 8, !dbg !9078
  %12 = load i8*, i8** %s, align 8, !dbg !9081
  %tobool9 = icmp ne i8* %12, null, !dbg !9081
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9083

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9084
  store i8* %13, i8** %retval, align 8, !dbg !9085
  br label %return, !dbg !9085

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9086, metadata !DIExpression()), !dbg !9087
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9087
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9088, metadata !DIExpression()), !dbg !9089
  store i32 -1, i32* %sdir, align 4, !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9090, metadata !DIExpression()), !dbg !9091
  store i64 0, i64* %base_max, align 8, !dbg !9091
  br label %while.body, !dbg !9092

while.body:                                       ; preds = %if.end11, %if.end46
  %14 = load i8*, i8** %s, align 8, !dbg !9093
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9095
  %16 = load i64, i64* %filelen, align 8, !dbg !9096
  %add12 = add i64 %16, 1, !dbg !9097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9098
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9099
  %cmp13 = icmp eq i32 %17, 1, !dbg !9101
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9102

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9103
  %19 = load i64, i64* %filelen, align 8, !dbg !9104
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9105, !ctir !10
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9106
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9108
  br label %if.end25, !dbg !9108

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9109
  %23 = load i64, i64* %ssize, align 8, !dbg !9110
  %24 = load i64, i64* %filelen, align 8, !dbg !9111
  %25 = load i64, i64* %base_offset, align 8, !dbg !9112
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9113
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9114

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9115

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9117
  %cmp18 = icmp eq i32 %26, 2, !dbg !9119
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9120

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9121
  %27 = load i8*, i8** %s, align 8, !dbg !9123
  %28 = load i64, i64* %filelen, align 8, !dbg !9124
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9125, !ctir !10
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9126
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9128
  br label %if.end21, !dbg !9129

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9130

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9131
  %32 = load i64, i64* %filelen, align 8, !dbg !9132
  %33 = load i32, i32* %sdir, align 4, !dbg !9133
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9134
  br label %sw.epilog, !dbg !9135

sw.bb23:                                          ; preds = %if.else
  %34 = load i8*, i8** %s, align 8, !dbg !9136
  call void @free(i8* %34) #9, !dbg !9137
  %call24 = call i32* @__errno_location() #16, !dbg !9138
  store i32 12, i32* %call24, align 4, !dbg !9139, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9140
  br label %return, !dbg !9140

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then14
  %35 = load i8, i8* %rename.addr, align 1, !dbg !9141
  %tobool26 = trunc i8 %35 to i1, !dbg !9141
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !9143

if.then27:                                        ; preds = %if.end25
  br label %while.end, !dbg !9144

if.end28:                                         ; preds = %if.end25
  %36 = load i32, i32* %sdir, align 4, !dbg !9145
  %cmp29 = icmp slt i32 %36, 0, !dbg !9147
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9148

if.then30:                                        ; preds = %if.end28
  store i32 -100, i32* %sdir, align 4, !dbg !9149
  store i64 0, i64* %base_offset, align 8, !dbg !9151
  br label %if.end31, !dbg !9152

if.end31:                                         ; preds = %if.then30, %if.end28
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9153, metadata !DIExpression()), !dbg !9154
  %37 = load i32, i32* %backup_type.addr, align 4, !dbg !9155
  %cmp32 = icmp eq i32 %37, 1, !dbg !9156
  %38 = zext i1 %cmp32 to i64, !dbg !9155
  %cond = select i1 %cmp32, i32 0, i32 1, !dbg !9155
  store i32 %cond, i32* %flags, align 4, !dbg !9154
  %39 = load i8*, i8** %file.addr, align 8, !dbg !9157
  %40 = load i32, i32* %sdir, align 4, !dbg !9159
  %41 = load i8*, i8** %s, align 8, !dbg !9160
  %42 = load i64, i64* %base_offset, align 8, !dbg !9161
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9162, !ctir !10
  %43 = load i32, i32* %flags, align 4, !dbg !9163
  %call34 = call i32 @renameatu(i32 -100, i8* %39, i32 %40, i8* %add.ptr33, i32 %43), !dbg !9164
  %cmp35 = icmp eq i32 %call34, 0, !dbg !9165
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !9166

if.then36:                                        ; preds = %if.end31
  br label %while.end, !dbg !9167

if.end37:                                         ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9168, metadata !DIExpression()), !dbg !9169
  %call38 = call i32* @__errno_location() #16, !dbg !9170
  %44 = load i32, i32* %call38, align 4, !dbg !9170, !ctir !7
  store i32 %44, i32* %e, align 4, !dbg !9169
  %45 = load i32, i32* %e, align 4, !dbg !9171
  %cmp39 = icmp ne i32 %45, 17, !dbg !9173
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !9174

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9175
  %tobool41 = icmp ne %struct.__dirstream* %46, null, !dbg !9175
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9178

if.then42:                                        ; preds = %if.then40
  %47 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9179
  %call43 = call i32 @closedir(%struct.__dirstream* %47), !dbg !9180
  br label %if.end44, !dbg !9180

if.end44:                                         ; preds = %if.then42, %if.then40
  %48 = load i8*, i8** %s, align 8, !dbg !9181
  call void @free(i8* %48) #9, !dbg !9182
  %49 = load i32, i32* %e, align 4, !dbg !9183
  %call45 = call i32* @__errno_location() #16, !dbg !9184
  store i32 %49, i32* %call45, align 4, !dbg !9185, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9186
  br label %return, !dbg !9186

if.end46:                                         ; preds = %if.end37
  br label %while.body, !dbg !9092, !llvm.loop !9187

while.end:                                        ; preds = %if.then36, %if.then27
  %50 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9189
  %tobool47 = icmp ne %struct.__dirstream* %50, null, !dbg !9189
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !9191

if.then48:                                        ; preds = %while.end
  %51 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9192
  %call49 = call i32 @closedir(%struct.__dirstream* %51), !dbg !9193
  br label %if.end50, !dbg !9193

if.end50:                                         ; preds = %if.then48, %while.end
  %52 = load i8*, i8** %s, align 8, !dbg !9194
  store i8* %52, i8** %retval, align 8, !dbg !9195
  br label %return, !dbg !9195

return:                                           ; preds = %if.end50, %if.end44, %sw.bb23, %if.then10
  %53 = load i8*, i8** %retval, align 8, !dbg !9196
  ret i8* %53, !dbg !9196
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9197 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !653
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %dp = alloca %struct.dirent*, align 8, !ctir !666
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !379
  %p = alloca i8*, align 8, !ctir !183
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !142
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9203, metadata !DIExpression()), !dbg !9204
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9205, metadata !DIExpression()), !dbg !9206
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  store i64 %base_offset, i64* %base_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9213, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9215, metadata !DIExpression()), !dbg !9216
  store i32 2, i32* %result, align 4, !dbg !9216
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9217, metadata !DIExpression()), !dbg !9218
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9219
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9220, !ctir !662
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9218
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9221, metadata !DIExpression()), !dbg !9222
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9223, metadata !DIExpression()), !dbg !9224
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9225
  %3 = load i8*, i8** %2, align 8, !dbg !9226, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !9224
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9227, metadata !DIExpression()), !dbg !9228
  store i64 1, i64* %versionlenmax, align 8, !dbg !9228
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9229, metadata !DIExpression()), !dbg !9230
  %4 = load i8*, i8** %buf, align 8, !dbg !9231
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9232
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9233, !ctir !10
  store i8* %add.ptr, i8** %base, align 8, !dbg !9230
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9234, metadata !DIExpression()), !dbg !9235
  %6 = load i8*, i8** %base, align 8, !dbg !9236
  %call = call i64 @base_len(i8* %6) #14, !dbg !9237
  store i64 %call, i64* %baselen, align 8, !dbg !9235
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9238
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9238
  br i1 %tobool, label %if.then, label %if.else, !dbg !9240

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9241
  call void @rewinddir(%struct.__dirstream* %8) #9, !dbg !9242
  br label %if.end12, !dbg !9242

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9243, metadata !DIExpression()), !dbg !9245
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9246, !ctir !379
  %9 = load i8*, i8** %base, align 8, !dbg !9247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9246
  %10 = load i8*, i8** %base, align 8, !dbg !9248
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !9249
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9250
  %12 = load i8*, i8** %buf, align 8, !dbg !9251
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9252
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9253
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9254
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9255
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9255
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9257

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #16, !dbg !9258
  %15 = load i32, i32* %call4, align 4, !dbg !9258, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !9259
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9260

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9261
  br label %if.end, !dbg !9262

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9263
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9264, !ctir !379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9264
  %17 = load i8*, i8** %base, align 8, !dbg !9265
  %18 = load i64, i64* %baselen, align 8, !dbg !9266
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9267, !ctir !10
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i64 0, i64 0)) #9, !dbg !9268
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9269
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9269
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9271

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9272
  store i32 %20, i32* %retval, align 4, !dbg !9273
  br label %return, !dbg !9273

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9274
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9275
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9276, !ctir !662
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9277

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9278
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9279
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9280
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9281
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9277

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9289, metadata !DIExpression()), !dbg !9290
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9291
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9291, !ctir !667
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9291, !ctir !624
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9291
  %25 = load i64, i64* %baselen, align 8, !dbg !9293
  %add = add i64 %25, 4, !dbg !9294
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9295
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9296

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9297, !llvm.loop !9298

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9300
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9302
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9303, !ctir !10
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9304
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9305, !ctir !667
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9304, !ctir !624
  %29 = load i64, i64* %baselen, align 8, !dbg !9306
  %add23 = add i64 %29, 2, !dbg !9307
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9308
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9309
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9310

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9311, !llvm.loop !9298

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9312
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9313, !ctir !667
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9312, !ctir !624
  %31 = load i64, i64* %baselen, align 8, !dbg !9314
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9315, !ctir !10
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9316, !ctir !10
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9317
  %32 = load i8*, i8** %p, align 8, !dbg !9318
  %33 = load i8, i8* %32, align 1, !dbg !9320, !ctir !184
  %conv = sext i8 %33 to i32, !dbg !9320
  %cmp32 = icmp sle i32 49, %conv, !dbg !9321
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9322

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9323
  %35 = load i8, i8* %34, align 1, !dbg !9324, !ctir !184
  %conv35 = sext i8 %35 to i32, !dbg !9324
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9325
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9326

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9327, !llvm.loop !9298

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9328
  %37 = load i8, i8* %36, align 1, !dbg !9329, !ctir !184
  %conv40 = sext i8 %37 to i32, !dbg !9329
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9330
  %frombool = zext i1 %cmp41 to i8, !dbg !9331
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9331
  store i64 1, i64* %versionlen, align 8, !dbg !9332
  br label %for.cond, !dbg !9334

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9335
  %39 = load i64, i64* %versionlen, align 8, !dbg !9335
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9335, !ctir !183
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9335
  %conv43 = sext i8 %40 to i32, !dbg !9335
  %sub = sub i32 %conv43, 48, !dbg !9335
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9335
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9337

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9338
  %42 = load i64, i64* %versionlen, align 8, !dbg !9339
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9338, !ctir !183
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9338
  %conv47 = sext i8 %43 to i32, !dbg !9338
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9340
  %conv49 = zext i1 %cmp48 to i32, !dbg !9340
  %44 = load i8, i8* %all_9s, align 1, !dbg !9341
  %tobool50 = trunc i8 %44 to i1, !dbg !9341
  %conv51 = zext i1 %tobool50 to i32, !dbg !9341
  %and = and i32 %conv51, %conv49, !dbg !9341
  %tobool52 = icmp ne i32 %and, 0, !dbg !9341
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9341
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9341
  br label %for.inc, !dbg !9342

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9343
  %inc = add i64 %45, 1, !dbg !9343
  store i64 %inc, i64* %versionlen, align 8, !dbg !9343
  br label %for.cond, !dbg !9344, !llvm.loop !9345

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9347
  %47 = load i64, i64* %versionlen, align 8, !dbg !9349
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9347, !ctir !183
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9347
  %conv55 = sext i8 %48 to i32, !dbg !9347
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9350
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9351

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9352
  %50 = load i64, i64* %versionlen, align 8, !dbg !9353
  %add59 = add i64 %50, 1, !dbg !9354
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9352, !ctir !183
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9352
  %tobool61 = icmp ne i8 %51, 0, !dbg !9352
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9355

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9356
  %53 = load i64, i64* %versionlen, align 8, !dbg !9357
  %cmp63 = icmp ult i64 %52, %53, !dbg !9358
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9359

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9360
  %55 = load i64, i64* %versionlen, align 8, !dbg !9361
  %cmp65 = icmp eq i64 %54, %55, !dbg !9362
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9363

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9364
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !9365
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !9366, !ctir !10
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !9367, !ctir !10
  %58 = load i8*, i8** %p, align 8, !dbg !9368
  %59 = load i64, i64* %versionlen, align 8, !dbg !9369
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !9370
  %cmp71 = icmp sle i32 %call70, 0, !dbg !9371
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !9372

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !9373, !llvm.loop !9298

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !9374
  %tobool75 = trunc i8 %60 to i1, !dbg !9374
  %conv76 = zext i1 %tobool75 to i64, !dbg !9374
  %61 = load i64, i64* %versionlen, align 8, !dbg !9375
  %add77 = add i64 %conv76, %61, !dbg !9376
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !9377
  %62 = load i8, i8* %all_9s, align 1, !dbg !9378
  %tobool78 = trunc i8 %62 to i1, !dbg !9378
  %63 = zext i1 %tobool78 to i64, !dbg !9378
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !9378
  store i32 %cond, i32* %result, align 4, !dbg !9379
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !9380, metadata !DIExpression()), !dbg !9381
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !9382
  %add80 = add i64 %64, 2, !dbg !9383
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !9384
  %add81 = add i64 %add80, %65, !dbg !9385
  %add82 = add i64 %add81, 2, !dbg !9386
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !9381
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !9387
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !9389
  %cmp83 = icmp ult i64 %66, %67, !dbg !9390
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !9391

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !9392
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !9392
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !9395

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !9396
  %mul = mul i64 %69, 2, !dbg !9396
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !9396
  br label %if.end89, !dbg !9397

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !9398, metadata !DIExpression()), !dbg !9399
  %70 = load i8*, i8** %buf, align 8, !dbg !9400
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !9401
  %call90 = call i8* @realloc(i8* %70, i64 %71) #9, !dbg !9402
  store i8* %call90, i8** %new_buf, align 8, !dbg !9399
  %72 = load i8*, i8** %new_buf, align 8, !dbg !9403
  %tobool91 = icmp ne i8* %72, null, !dbg !9403
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9405

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !9406
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !9408
  store i8* %73, i8** %74, align 8, !dbg !9409, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !9410
  br label %return, !dbg !9410

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !9411
  store i8* %75, i8** %buf, align 8, !dbg !9412
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !9413
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !9414
  br label %if.end94, !dbg !9415

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !9416
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !9417
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !9418, !ctir !10
  store i8* %add.ptr95, i8** %q, align 8, !dbg !9419
  %79 = load i8*, i8** %q, align 8, !dbg !9420
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !9420, !ctir !10
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !9420
  store i8 46, i8* %79, align 1, !dbg !9421, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !9422
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !9422, !ctir !10
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !9422
  store i8 126, i8* %80, align 1, !dbg !9423, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !9424
  store i8 48, i8* %81, align 1, !dbg !9425, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !9426
  %tobool97 = trunc i8 %82 to i1, !dbg !9426
  %conv98 = zext i1 %tobool97 to i32, !dbg !9426
  %83 = load i8*, i8** %q, align 8, !dbg !9427
  %idx.ext = sext i32 %conv98 to i64, !dbg !9427
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !9427, !ctir !10
  store i8* %add.ptr99, i8** %q, align 8, !dbg !9427
  %84 = load i8*, i8** %q, align 8, !dbg !9428
  %85 = load i8*, i8** %p, align 8, !dbg !9429
  %86 = load i64, i64* %versionlen, align 8, !dbg !9430
  %add100 = add i64 %86, 2, !dbg !9431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !9432
  %87 = load i64, i64* %versionlen, align 8, !dbg !9433
  %88 = load i8*, i8** %q, align 8, !dbg !9434
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !9434, !ctir !10
  store i8* %add.ptr101, i8** %q, align 8, !dbg !9434
  br label %while.cond102, !dbg !9435

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !9436
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !9436, !ctir !10
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !9436
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !9437, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !9437
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !9438
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !9435

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !9439
  store i8 48, i8* %91, align 1, !dbg !9440, !ctir !10
  br label %while.cond102, !dbg !9435, !llvm.loop !9441

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !9443
  %93 = load i8, i8* %92, align 1, !dbg !9444, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !9444
  store i8 %inc108, i8* %92, align 1, !dbg !9444, !ctir !10
  br label %while.cond, !dbg !9277, !llvm.loop !9298

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !9445
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !9446
  store i8* %94, i8** %95, align 8, !dbg !9447, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !9448
  store i32 %96, i32* %retval, align 4, !dbg !9449
  br label %return, !dbg !9449

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !9450
  ret i32 %97, !dbg !9450
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !9451 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !379
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  store i8 %e, i8* %e.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  store i64* %base_max, i64** %base_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9465, metadata !DIExpression()), !dbg !9466
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9467
  %call = call i8* @last_component(i8* %0) #14, !dbg !9468
  store i8* %call, i8** %base, align 8, !dbg !9466
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9469, metadata !DIExpression()), !dbg !9470
  %1 = load i8*, i8** %base, align 8, !dbg !9471
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !9472
  store i64 %call1, i64* %baselen, align 8, !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !9473, metadata !DIExpression()), !dbg !9474
  store i64 255, i64* %baselen_max, align 8, !dbg !9474
  %2 = load i64, i64* %baselen, align 8, !dbg !9475
  %cmp = icmp ult i64 14, %2, !dbg !9477
  br i1 %cmp, label %if.then, label %if.end27, !dbg !9478

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !9479
  %4 = load i64, i64* %3, align 8, !dbg !9482, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !9483
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !9484

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !9485, metadata !DIExpression()), !dbg !9487
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !9488
  %cmp4 = icmp slt i32 %5, 0, !dbg !9490
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9491

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9492, metadata !DIExpression()), !dbg !9494
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9495, !ctir !379
  %6 = load i8*, i8** %base, align 8, !dbg !9496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !9495
  %7 = load i8*, i8** %base, align 8, !dbg !9497
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !9498
  %call7 = call i32* @__errno_location() #16, !dbg !9499
  store i32 0, i32* %call7, align 4, !dbg !9500, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !9501
  %call8 = call i64 @pathconf(i8* %8, i32 3) #9, !dbg !9502
  store i64 %call8, i64* %name_max, align 8, !dbg !9503
  %call9 = call i32* @__errno_location() #16, !dbg !9504
  %9 = load i32, i32* %call9, align 4, !dbg !9504, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !9505
  %lnot = xor i1 %tobool, true, !dbg !9505
  %lnot.ext = zext i1 %lnot to i32, !dbg !9505
  %conv = sext i32 %lnot.ext to i64, !dbg !9505
  %10 = load i64, i64* %name_max, align 8, !dbg !9506
  %sub = sub nsw i64 %10, %conv, !dbg !9506
  store i64 %sub, i64* %name_max, align 8, !dbg !9506
  %11 = load i8*, i8** %base, align 8, !dbg !9507
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9508, !ctir !379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !9508
  br label %if.end, !dbg !9509

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #16, !dbg !9510
  store i32 0, i32* %call11, align 4, !dbg !9512, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !9513
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #9, !dbg !9514
  store i64 %call12, i64* %name_max, align 8, !dbg !9515
  %call13 = call i32* @__errno_location() #16, !dbg !9516
  %13 = load i32, i32* %call13, align 4, !dbg !9516, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !9517
  %lnot15 = xor i1 %tobool14, true, !dbg !9517
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9517
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !9517
  %14 = load i64, i64* %name_max, align 8, !dbg !9518
  %sub18 = sub nsw i64 %14, %conv17, !dbg !9518
  store i64 %sub18, i64* %name_max, align 8, !dbg !9518
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !9519
  %cmp19 = icmp sle i64 0, %15, !dbg !9520
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !9521

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !9522
  %cmp21 = icmp ule i64 %16, -1, !dbg !9523
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !9524

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !9525
  br label %cond.end, !dbg !9524

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !9526
  %cmp23 = icmp slt i64 %18, -1, !dbg !9527
  %19 = zext i1 %cmp23 to i64, !dbg !9526
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !9526
  br label %cond.end, !dbg !9524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !9524
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !9528
  store i64 %cond25, i64* %20, align 8, !dbg !9529, !ctir !55
  br label %if.end26, !dbg !9530

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !9531
  %22 = load i64, i64* %21, align 8, !dbg !9532, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !9533
  br label %if.end27, !dbg !9534

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !9535
  %24 = load i64, i64* %baselen, align 8, !dbg !9537
  %cmp28 = icmp ult i64 %23, %24, !dbg !9538
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !9539

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !9540
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !9542
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !9543, !ctir !10
  %27 = load i8*, i8** %base, align 8, !dbg !9544
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !9545
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !9545
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9545
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !9546
  %28 = load i64, i64* %baselen_max, align 8, !dbg !9547
  %29 = load i64, i64* %baselen, align 8, !dbg !9549
  %cmp31 = icmp ule i64 %28, %29, !dbg !9550
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !9551

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !9552
  %sub34 = sub i64 %30, 1, !dbg !9553
  store i64 %sub34, i64* %baselen, align 8, !dbg !9554
  br label %if.end35, !dbg !9555

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !9556
  %32 = load i8*, i8** %base, align 8, !dbg !9557
  %33 = load i64, i64* %baselen, align 8, !dbg !9558
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !9557, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !9559
  %34 = load i8*, i8** %base, align 8, !dbg !9560
  %35 = load i64, i64* %baselen, align 8, !dbg !9561
  %add = add i64 %35, 1, !dbg !9562
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !9560, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !9563
  br label %if.end37, !dbg !9564

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !9565
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9566 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9576
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9577
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9578
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !9579
  ret i8* %call, !dbg !9580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9581 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9582, metadata !DIExpression()), !dbg !9583
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9584, metadata !DIExpression()), !dbg !9585
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9586, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9588, metadata !DIExpression()), !dbg !9589
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9590
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9591
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9592
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !9593
  store i8* %call, i8** %result, align 8, !dbg !9589
  %3 = load i8*, i8** %result, align 8, !dbg !9594
  %tobool = icmp ne i8* %3, null, !dbg !9594
  br i1 %tobool, label %if.end, label %if.then, !dbg !9596

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !9597
  unreachable, !dbg !9597

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !9598
  ret i8* %4, !dbg !9599
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !9600 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9603, metadata !DIExpression()), !dbg !9604
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9605, metadata !DIExpression()), !dbg !9606
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9607
  %cmp = icmp eq i8* %0, null, !dbg !9609
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9610

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9611
  %2 = load i8, i8* %1, align 1, !dbg !9612, !ctir !184
  %conv = sext i8 %2 to i32, !dbg !9612
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9613
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9614

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !9615
  br label %return, !dbg !9615

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9616
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9616
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !9616
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !9616
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !9616, !ctir !685
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9616
  store i32 %6, i32* %retval, align 4, !dbg !9617
  br label %return, !dbg !9617

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9618
  ret i32 %7, !dbg !9618
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !9619 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9620, metadata !DIExpression()), !dbg !9621
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9624
  %tobool = icmp ne i8* %0, null, !dbg !9624
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9626

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9627
  %2 = load i8, i8* %1, align 1, !dbg !9628, !ctir !184
  %conv = sext i8 %2 to i32, !dbg !9628
  %tobool1 = icmp ne i32 %conv, 0, !dbg !9628
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9629

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9630
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9631
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !9632
  store i32 %call, i32* %retval, align 4, !dbg !9633
  br label %return, !dbg !9633

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.227, i64 0, i64 0)) #9, !dbg !9634
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.228, i64 0, i64 0), i8* %call2), !dbg !9635
  store i32 %call3, i32* %retval, align 4, !dbg !9636
  br label %return, !dbg !9636

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9637
  ret i32 %5, !dbg !9637
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !9638 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9642, metadata !DIExpression()), !dbg !9643
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  store i64 %lcm_max, i64* %lcm_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9648, metadata !DIExpression()), !dbg !9649
  %0 = load i64, i64* %a.addr, align 8, !dbg !9650
  %tobool = icmp ne i64 %0, 0, !dbg !9650
  br i1 %tobool, label %if.else, label %if.then, !dbg !9652

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !9653
  %tobool1 = icmp ne i64 %1, 0, !dbg !9653
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9653

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !9654
  br label %cond.end, !dbg !9653

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !9653
  store i64 %cond, i64* %size, align 8, !dbg !9655
  br label %if.end9, !dbg !9656

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !9657
  %tobool2 = icmp ne i64 %3, 0, !dbg !9657
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !9660

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !9661, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.declare(metadata i64* %m, metadata !9664, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9666, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.declare(metadata i64* %q, metadata !9668, metadata !DIExpression()), !dbg !9669
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9670, metadata !DIExpression()), !dbg !9671
  %4 = load i64, i64* %a.addr, align 8, !dbg !9672
  store i64 %4, i64* %m, align 8, !dbg !9674
  %5 = load i64, i64* %b.addr, align 8, !dbg !9675
  store i64 %5, i64* %n, align 8, !dbg !9676
  br label %for.cond, !dbg !9677

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !9678
  %7 = load i64, i64* %n, align 8, !dbg !9680
  %rem = urem i64 %6, %7, !dbg !9681
  store i64 %rem, i64* %r, align 8, !dbg !9682
  %cmp = icmp ne i64 %rem, 0, !dbg !9683
  br i1 %cmp, label %for.body, label %for.end, !dbg !9684

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !9685

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !9686
  store i64 %8, i64* %m, align 8, !dbg !9687
  %9 = load i64, i64* %r, align 8, !dbg !9688
  store i64 %9, i64* %n, align 8, !dbg !9689
  br label %for.cond, !dbg !9690, !llvm.loop !9691

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !9693
  %11 = load i64, i64* %n, align 8, !dbg !9694
  %div = udiv i64 %10, %11, !dbg !9695
  store i64 %div, i64* %q, align 8, !dbg !9696
  %12 = load i64, i64* %q, align 8, !dbg !9697
  %13 = load i64, i64* %b.addr, align 8, !dbg !9698
  %mul = mul i64 %12, %13, !dbg !9699
  store i64 %mul, i64* %lcm, align 8, !dbg !9700
  %14 = load i64, i64* %lcm, align 8, !dbg !9701
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !9703
  %cmp4 = icmp ule i64 %14, %15, !dbg !9704
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !9705

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !9706
  %17 = load i64, i64* %b.addr, align 8, !dbg !9707
  %div5 = udiv i64 %16, %17, !dbg !9708
  %18 = load i64, i64* %q, align 8, !dbg !9709
  %cmp6 = icmp eq i64 %div5, %18, !dbg !9710
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !9711

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !9712
  store i64 %19, i64* %retval, align 8, !dbg !9713
  br label %return, !dbg !9713

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !9714

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !9715
  store i64 %20, i64* %size, align 8, !dbg !9716
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !9717
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !9718
  %cmp10 = icmp ule i64 %21, %22, !dbg !9719
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !9717

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !9720
  br label %cond.end13, !dbg !9717

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !9721
  br label %cond.end13, !dbg !9717

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !9717
  store i64 %cond14, i64* %retval, align 8, !dbg !9722
  br label %return, !dbg !9722

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !9723
  ret i64 %25, !dbg !9723
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !9724 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9725, metadata !DIExpression()), !dbg !9726
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9727
  store i8* %0, i8** @file_name, align 8, !dbg !9728
  ret void, !dbg !9729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !9730 {
entry:
  %fail = alloca i8, align 1, !ctir !142
  %close_error = alloca i8*, align 8, !ctir !183
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i8 0, i8* %fail, align 1, !dbg !9732
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9733
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !9735
  %cmp = icmp ugt i64 %call, 0, !dbg !9736
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9737

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9738
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !9741
  %cmp2 = icmp eq i32 %call1, 0, !dbg !9742
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !9743

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9744
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !9745
  %cmp4 = icmp ne i32 %call3, 0, !dbg !9746
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9747

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !9748
  br label %if.end, !dbg !9749

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !9750

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !9751
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !9753
  %cmp8 = icmp ne i32 %call7, 0, !dbg !9754
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9755

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !9756
  br label %if.end10, !dbg !9757

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !9758
  %tobool = trunc i8 %4 to i1, !dbg !9758
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !9760

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !9761, metadata !DIExpression()), !dbg !9763
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.233, i64 0, i64 0)) #9, !dbg !9764
  store i8* %call12, i8** %close_error, align 8, !dbg !9763
  %5 = load i8*, i8** @file_name, align 8, !dbg !9765
  %tobool13 = icmp ne i8* %5, null, !dbg !9765
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9767

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !9768
  %6 = load i32, i32* %call15, align 4, !dbg !9768, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !9769
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !9770
  %8 = load i8*, i8** %close_error, align 8, !dbg !9771
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.234, i64 0, i64 0), i8* %call16, i8* %8), !dbg !9772
  br label %if.end18, !dbg !9772

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #16, !dbg !9773
  %9 = load i32, i32* %call17, align 4, !dbg !9773, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !9774
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.235, i64 0, i64 0), i8* %10), !dbg !9775
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !9776

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !9777
  %11 = load i8, i8* %fail, align 1, !dbg !9778
  %tobool20 = trunc i8 %11 to i1, !dbg !9778
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9780

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !9781
  call void @_exit(i32 %12) #15, !dbg !9782
  unreachable, !dbg !9782

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !9783
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !9784 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9787
  store i8* %0, i8** @file_name.236, align 8, !dbg !9788
  ret void, !dbg !9789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !9790 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !9795
  %tobool = trunc i8 %0 to i1, !dbg !9795
  %frombool1 = zext i1 %tobool to i8, !dbg !9796
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !9798 {
entry:
  %write_error = alloca i8*, align 8, !ctir !183
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9799
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !9801
  %cmp = icmp ne i32 %call, 0, !dbg !9802
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !9803

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !9804
  %tobool = trunc i8 %1 to i1, !dbg !9804
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !9805

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !9806
  %2 = load i32, i32* %call2, align 4, !dbg !9806, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !9807
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !9808

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !9809, metadata !DIExpression()), !dbg !9811
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.239, i64 0, i64 0)) #9, !dbg !9812
  store i8* %call4, i8** %write_error, align 8, !dbg !9811
  %3 = load i8*, i8** @file_name.236, align 8, !dbg !9813
  %tobool5 = icmp ne i8* %3, null, !dbg !9813
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9815

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !9816
  %4 = load i32, i32* %call7, align 4, !dbg !9816, !ctir !7
  %5 = load i8*, i8** @file_name.236, align 8, !dbg !9817
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !9818
  %6 = load i8*, i8** %write_error, align 8, !dbg !9819
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.240, i64 0, i64 0), i8* %call8, i8* %6), !dbg !9820
  br label %if.end, !dbg !9820

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !9821
  %7 = load i32, i32* %call9, align 4, !dbg !9821, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !9822
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.241, i64 0, i64 0), i8* %8), !dbg !9823
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !9824
  call void @_exit(i32 %9) #15, !dbg !9825
  unreachable, !dbg !9825

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9826
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !9828
  %cmp12 = icmp ne i32 %call11, 0, !dbg !9829
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !9830

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !9831
  call void @_exit(i32 %11) #15, !dbg !9832
  unreachable, !dbg !9832

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !9833
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !9834 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9838, metadata !DIExpression()), !dbg !9839
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9840
  %call = call i8* @mdir_name(i8* %0), !dbg !9841
  store i8* %call, i8** %result, align 8, !dbg !9839
  %1 = load i8*, i8** %result, align 8, !dbg !9842
  %tobool = icmp ne i8* %1, null, !dbg !9842
  br i1 %tobool, label %if.end, label %if.then, !dbg !9844

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !9845
  unreachable, !dbg !9845

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !9846
  ret i8* %2, !dbg !9847
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #10 !dbg !9848 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !9854, metadata !DIExpression()), !dbg !9855
  store i64 0, i64* %prefix_length, align 8, !dbg !9855
  call void @llvm.dbg.declare(metadata i64* %length, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load i64, i64* %prefix_length, align 8, !dbg !9858
  %cmp = icmp ne i64 %0, 0, !dbg !9859
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9858

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9858

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9860
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !9860, !ctir !183
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9860
  %conv = sext i8 %2 to i32, !dbg !9860
  %cmp1 = icmp eq i32 %conv, 47, !dbg !9860
  %3 = zext i1 %cmp1 to i64, !dbg !9860
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !9860
  br label %cond.end, !dbg !9858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !9858
  %conv4 = sext i32 %cond3 to i64, !dbg !9861
  %4 = load i64, i64* %prefix_length, align 8, !dbg !9862
  %add = add i64 %4, %conv4, !dbg !9862
  store i64 %add, i64* %prefix_length, align 8, !dbg !9862
  %5 = load i8*, i8** %file.addr, align 8, !dbg !9863
  %call = call i8* @last_component(i8* %5) #14, !dbg !9865
  %6 = load i8*, i8** %file.addr, align 8, !dbg !9866
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9867
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !9867
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9867
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !9868
  br label %for.cond, !dbg !9869

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !9870
  %8 = load i64, i64* %length, align 8, !dbg !9872
  %cmp5 = icmp ult i64 %7, %8, !dbg !9873
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9874

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !9875
  %10 = load i64, i64* %length, align 8, !dbg !9875
  %sub = sub i64 %10, 1, !dbg !9875
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !9875, !ctir !183
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !9875
  %conv8 = sext i8 %11 to i32, !dbg !9875
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !9875
  br i1 %cmp9, label %if.end, label %if.then, !dbg !9877

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9878

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9875

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !9879
  %dec = add i64 %12, -1, !dbg !9879
  store i64 %dec, i64* %length, align 8, !dbg !9879
  br label %for.cond, !dbg !9880, !llvm.loop !9881

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !9883
  ret i64 %13, !dbg !9884
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !9885 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !142
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.declare(metadata i64* %length, metadata !9888, metadata !DIExpression()), !dbg !9889
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9890
  %call = call i64 @dir_len(i8* %0) #14, !dbg !9891
  store i64 %call, i64* %length, align 8, !dbg !9889
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !9892, metadata !DIExpression()), !dbg !9893
  %1 = load i64, i64* %length, align 8, !dbg !9894
  %cmp = icmp eq i64 %1, 0, !dbg !9895
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9896

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !9896

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !9893
  store i8 %frombool, i8* %append_dot, align 1, !dbg !9893
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !9897, metadata !DIExpression()), !dbg !9898
  %3 = load i64, i64* %length, align 8, !dbg !9899
  %4 = load i8, i8* %append_dot, align 1, !dbg !9900
  %tobool = trunc i8 %4 to i1, !dbg !9900
  %conv = zext i1 %tobool to i64, !dbg !9900
  %add = add i64 %3, %conv, !dbg !9901
  %add1 = add i64 %add, 1, !dbg !9902
  %call2 = call noalias i8* @malloc(i64 %add1) #9, !dbg !9903
  store i8* %call2, i8** %dir, align 8, !dbg !9898
  %5 = load i8*, i8** %dir, align 8, !dbg !9904
  %tobool3 = icmp ne i8* %5, null, !dbg !9904
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9906

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !9907
  br label %return, !dbg !9907

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !9908
  %7 = load i8*, i8** %file.addr, align 8, !dbg !9909
  %8 = load i64, i64* %length, align 8, !dbg !9910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !9911
  %9 = load i8, i8* %append_dot, align 1, !dbg !9912
  %tobool4 = trunc i8 %9 to i1, !dbg !9912
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9914

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !9915
  %11 = load i64, i64* %length, align 8, !dbg !9916
  %inc = add i64 %11, 1, !dbg !9916
  store i64 %inc, i64* %length, align 8, !dbg !9916
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !9915, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !9917
  br label %if.end6, !dbg !9915

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !9918
  %13 = load i64, i64* %length, align 8, !dbg !9919
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !9918, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !9920
  %14 = load i8*, i8** %dir, align 8, !dbg !9921
  store i8* %14, i8** %retval, align 8, !dbg !9922
  br label %return, !dbg !9922

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !9923
  ret i8* %15, !dbg !9923
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #10 !dbg !9924 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !183
  %p = alloca i8*, align 8, !ctir !183
  %saw_slash = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9928, metadata !DIExpression()), !dbg !9929
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9930
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !9931, !ctir !184
  store i8* %add.ptr, i8** %base, align 8, !dbg !9929
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9932, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !9934, metadata !DIExpression()), !dbg !9935
  store i8 0, i8* %saw_slash, align 1, !dbg !9935
  br label %while.cond, !dbg !9936

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !9937
  %2 = load i8, i8* %1, align 1, !dbg !9937, !ctir !184
  %conv = sext i8 %2 to i32, !dbg !9937
  %cmp = icmp eq i32 %conv, 47, !dbg !9937
  br i1 %cmp, label %while.body, label %while.end, !dbg !9936

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !9938
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !9938, !ctir !184
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !9938
  br label %while.cond, !dbg !9936, !llvm.loop !9939

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !9940
  store i8* %4, i8** %p, align 8, !dbg !9942
  br label %for.cond, !dbg !9943

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !9944
  %6 = load i8, i8* %5, align 1, !dbg !9946, !ctir !184
  %tobool = icmp ne i8 %6, 0, !dbg !9947
  br i1 %tobool, label %for.body, label %for.end, !dbg !9947

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !9948
  %8 = load i8, i8* %7, align 1, !dbg !9948, !ctir !184
  %conv2 = sext i8 %8 to i32, !dbg !9948
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !9948
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9951

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !9952
  br label %if.end7, !dbg !9953

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !9954
  %tobool5 = trunc i8 %9 to i1, !dbg !9954
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !9956

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !9957
  store i8* %10, i8** %base, align 8, !dbg !9959
  store i8 0, i8* %saw_slash, align 1, !dbg !9960
  br label %if.end, !dbg !9961

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !9962

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !9963
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9963, !ctir !184
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !9963
  br label %for.cond, !dbg !9964, !llvm.loop !9965

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !9967
  ret i8* %12, !dbg !9968
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #10 !dbg !9969 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata i64* %len, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i64 0, i64* %prefix_len, align 8, !dbg !9975
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9976
  %call = call i64 @strlen(i8* %0) #14, !dbg !9978
  store i64 %call, i64* %len, align 8, !dbg !9979
  br label %for.cond, !dbg !9980

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !9981
  %cmp = icmp ult i64 1, %1, !dbg !9983
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9984

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !9985
  %3 = load i64, i64* %len, align 8, !dbg !9985
  %sub = sub i64 %3, 1, !dbg !9985
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !9985, !ctir !183
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9985
  %conv = sext i8 %4 to i32, !dbg !9985
  %cmp1 = icmp eq i32 %conv, 47, !dbg !9985
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !9986
  br i1 %5, label %for.body, label %for.end, !dbg !9987

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !9988

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !9989
  %dec = add i64 %6, -1, !dbg !9989
  store i64 %dec, i64* %len, align 8, !dbg !9989
  br label %for.cond, !dbg !9990, !llvm.loop !9991

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !9993
  ret i64 %7, !dbg !9994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !9995 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10000, metadata !DIExpression()), !dbg !10001
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10004, metadata !DIExpression()), !dbg !10005
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10006, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10008, metadata !DIExpression()), !dbg !10010
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10010
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10010
  %2 = load i64, i64* %len.addr, align 8, !dbg !10010
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10010
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #9, !dbg !10010
  store i32 %call, i32* %__x, align 4, !dbg !10010
  %4 = load i32, i32* %__x, align 4, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10012 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10053
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10053
  br i1 %tobool, label %if.then, label %if.end, !dbg !10055

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10056
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9, !dbg !10057
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10058
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10059
  br label %if.end, !dbg !10059

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10060
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10061 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1271
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10069, metadata !DIExpression()), !dbg !10070
  store i32 0, i32* %mode, align 4, !dbg !10070
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10071
  %and = and i32 %0, 64, !dbg !10073
  %tobool = icmp ne i32 %and, 0, !dbg !10073
  br i1 %tobool, label %if.then, label %if.end, !dbg !10074

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10075, metadata !DIExpression()), !dbg !10077
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10078, !ctir !1271
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10078
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10078
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10079, !ctir !1271
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10079
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10079
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10079
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10079

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10079
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10079
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10079
  %3 = bitcast i8* %2 to i32*, !dbg !10079
  %4 = add i32 %gp_offset, 8, !dbg !10079
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10079
  br label %vaarg.end, !dbg !10079

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10079
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10079
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10079
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10079
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10079
  br label %vaarg.end, !dbg !10079

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10079
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10079
  store i32 %6, i32* %mode, align 4, !dbg !10080
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10081, !ctir !1271
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10081
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10081
  br label %if.end, !dbg !10082

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10083
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10084
  %9 = load i32, i32* %mode, align 4, !dbg !10085
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10086
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10087
  ret i32 %call5, !dbg !10088
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10089 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1283
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1283
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10122, metadata !DIExpression()), !dbg !10123
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10124
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10126
  br i1 %cmp, label %if.then, label %if.end, !dbg !10127

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10128

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10129
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10129
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10130
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10131
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10132
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10133
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10134, !ctir !1284
  store i8* %call1, i8** %name, align 8, !dbg !10135, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10136
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10137, !ctir !10094
  %5 = load i64, i64* %st_ino, align 8, !dbg !10137, !ctir !453
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10138
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10139, !ctir !1284
  store i64 %5, i64* %st_ino2, align 8, !dbg !10140, !ctir !498
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10141
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10142, !ctir !10094
  %8 = load i64, i64* %st_dev, align 8, !dbg !10142, !ctir !452
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10143
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10144, !ctir !1284
  store i64 %8, i64* %st_dev3, align 8, !dbg !10145, !ctir !500
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10146, metadata !DIExpression()), !dbg !10148
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10149
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10150
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10150
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10151
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10151
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10148
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10152
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10154
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10155

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !10156
  unreachable, !dbg !10156

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10158
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10160
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10161
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10162

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10163
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10163
  call void @triple_free(i8* %18), !dbg !10165
  br label %if.end10, !dbg !10166

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10167
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10168 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1284
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10179, metadata !DIExpression()), !dbg !10180
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10181
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10183
  br i1 %cmp, label %if.then, label %if.end, !dbg !10184

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10185
  br label %return, !dbg !10185

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10186
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10187, !ctir !1284
  store i8* %1, i8** %name, align 8, !dbg !10188, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10189
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10190, !ctir !10094
  %3 = load i64, i64* %st_ino, align 8, !dbg !10190, !ctir !453
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10191, !ctir !1284
  store i64 %3, i64* %st_ino1, align 8, !dbg !10192, !ctir !498
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10193
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10194, !ctir !10094
  %5 = load i64, i64* %st_dev, align 8, !dbg !10194, !ctir !452
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10195, !ctir !1284
  store i64 %5, i64* %st_dev2, align 8, !dbg !10196, !ctir !500
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10197
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10198
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10199
  %tobool = icmp ne i8* %call, null, !dbg !10200
  %lnot = xor i1 %tobool, true, !dbg !10200
  %lnot3 = xor i1 %lnot, true, !dbg !10201
  store i1 %lnot3, i1* %retval, align 1, !dbg !10202
  br label %return, !dbg !10202

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10203
  ret i1 %8, !dbg !10203
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10204 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10210, metadata !DIExpression()), !dbg !10211
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10212
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10213
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10214
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10214, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !10215
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10216
  %and = and i32 %2, 256, !dbg !10217
  %tobool = icmp ne i32 %and, 0, !dbg !10216
  %3 = zext i1 %tobool to i64, !dbg !10216
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10216
  %conv = trunc i32 %cond to i8, !dbg !10216
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10218
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10218, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10219
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10220
  %and2 = and i32 %5, 128, !dbg !10221
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10220
  %6 = zext i1 %tobool3 to i64, !dbg !10220
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10220
  %conv5 = trunc i32 %cond4 to i8, !dbg !10220
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10222
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10222, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10223
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10224
  %and7 = and i32 %8, 2048, !dbg !10225
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10225
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10224

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10226
  %and9 = and i32 %9, 64, !dbg !10227
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10226
  %10 = zext i1 %tobool10 to i64, !dbg !10226
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10226
  br label %cond.end, !dbg !10224

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10228
  %and12 = and i32 %11, 64, !dbg !10229
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10228
  %12 = zext i1 %tobool13 to i64, !dbg !10228
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10228
  br label %cond.end, !dbg !10224

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10224
  %conv16 = trunc i32 %cond15 to i8, !dbg !10230
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10231
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10231, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10232
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10233
  %and18 = and i32 %14, 32, !dbg !10234
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10233
  %15 = zext i1 %tobool19 to i64, !dbg !10233
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10233
  %conv21 = trunc i32 %cond20 to i8, !dbg !10233
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10235
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10235, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10236
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10237
  %and23 = and i32 %17, 16, !dbg !10238
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10237
  %18 = zext i1 %tobool24 to i64, !dbg !10237
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10237
  %conv26 = trunc i32 %cond25 to i8, !dbg !10237
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10239
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10239, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10240
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10241
  %and28 = and i32 %20, 1024, !dbg !10242
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10242
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10241

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10243
  %and31 = and i32 %21, 8, !dbg !10244
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10243
  %22 = zext i1 %tobool32 to i64, !dbg !10243
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10243
  br label %cond.end38, !dbg !10241

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10245
  %and35 = and i32 %23, 8, !dbg !10246
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10245
  %24 = zext i1 %tobool36 to i64, !dbg !10245
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10245
  br label %cond.end38, !dbg !10241

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10241
  %conv40 = trunc i32 %cond39 to i8, !dbg !10247
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10248
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10248, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10249
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10250
  %and42 = and i32 %26, 4, !dbg !10251
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10250
  %27 = zext i1 %tobool43 to i64, !dbg !10250
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10250
  %conv45 = trunc i32 %cond44 to i8, !dbg !10250
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10252
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10252, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10253
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10254
  %and47 = and i32 %29, 2, !dbg !10255
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10254
  %30 = zext i1 %tobool48 to i64, !dbg !10254
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10254
  %conv50 = trunc i32 %cond49 to i8, !dbg !10254
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10256
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10256, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10257
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10258
  %and52 = and i32 %32, 512, !dbg !10259
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10259
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10258

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10260
  %and55 = and i32 %33, 1, !dbg !10261
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10260
  %34 = zext i1 %tobool56 to i64, !dbg !10260
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10260
  br label %cond.end62, !dbg !10258

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10262
  %and59 = and i32 %35, 1, !dbg !10263
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10262
  %36 = zext i1 %tobool60 to i64, !dbg !10262
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10262
  br label %cond.end62, !dbg !10258

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10258
  %conv64 = trunc i32 %cond63 to i8, !dbg !10264
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10265
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10265, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10266
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10267
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10267, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !10268
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10269
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10269, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10272 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10277
  %and = and i32 %0, 61440, !dbg !10277
  %cmp = icmp eq i32 %and, 32768, !dbg !10277
  br i1 %cmp, label %if.then, label %if.end, !dbg !10279

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10280
  br label %return, !dbg !10280

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10281
  %and1 = and i32 %1, 61440, !dbg !10281
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10281
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10283

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10284
  br label %return, !dbg !10284

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10285
  %and5 = and i32 %2, 61440, !dbg !10285
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10285
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10287

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10288
  br label %return, !dbg !10288

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10289
  %and9 = and i32 %3, 61440, !dbg !10289
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10289
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10291

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10292
  br label %return, !dbg !10292

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10293
  %and13 = and i32 %4, 61440, !dbg !10293
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10293
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10295

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10296
  br label %return, !dbg !10296

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10297
  %and17 = and i32 %5, 61440, !dbg !10297
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10297
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10299

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10300
  br label %return, !dbg !10300

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10301
  %and21 = and i32 %6, 61440, !dbg !10301
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10301
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10303

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10304
  br label %return, !dbg !10304

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10305
  br label %return, !dbg !10305

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10306
  ret i8 %7, !dbg !10306
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10307 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10337
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10338, !ctir !10311
  %1 = load i32, i32* %st_mode, align 8, !dbg !10338, !ctir !140
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10339
  call void @strmode(i32 %1, i8* %2), !dbg !10340
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10341
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10341, !ctir !10311
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10341, !ctir !140
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10341
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10341, !ctir !10311
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10341, !ctir !140
  %sub = sub i32 %4, %6, !dbg !10341
  %tobool = icmp ne i32 %sub, 0, !dbg !10341
  br i1 %tobool, label %if.then, label %if.else, !dbg !10343

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10344
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10344, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !10345
  br label %if.end18, !dbg !10344

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10346
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10346, !ctir !10311
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10346, !ctir !140
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10346
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10346, !ctir !10311
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10346, !ctir !140
  %sub5 = sub i32 %9, %11, !dbg !10346
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10346
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10349

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10350
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10350, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !10351
  br label %if.end17, !dbg !10350

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10352
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10352, !ctir !10311
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10352, !ctir !140
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10352
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10352, !ctir !10311
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10352, !ctir !140
  %sub12 = sub i32 %14, %16, !dbg !10352
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10352
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10354

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10355
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10355, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !10356
  br label %if.end, !dbg !10355

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10357
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10358 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10368, metadata !DIExpression()), !dbg !10369
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10370
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10371
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10372
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10373
  store i8* %call, i8** %p, align 8, !dbg !10369
  %3 = load i8*, i8** %p, align 8, !dbg !10374
  %cmp = icmp eq i8* %3, null, !dbg !10376
  br i1 %cmp, label %if.then, label %if.end, !dbg !10377

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10378
  unreachable, !dbg !10378

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10379
  ret i8* %4, !dbg !10380
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10381 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !183
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10385, metadata !DIExpression()), !dbg !10386
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10387, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10389, metadata !DIExpression()), !dbg !10390
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10391
  %call = call i8* @last_component(i8* %0) #14, !dbg !10392
  store i8* %call, i8** %dirbase, align 8, !dbg !10390
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10393, metadata !DIExpression()), !dbg !10394
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10395
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10396
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10394
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10397, metadata !DIExpression()), !dbg !10398
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10399
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10400
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10401
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10401
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10401
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10402
  %add = add i64 %sub.ptr.sub, %4, !dbg !10403
  store i64 %add, i64* %dirlen, align 8, !dbg !10398
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10404, metadata !DIExpression()), !dbg !10405
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10406
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10407
  store i64 %call2, i64* %baselen, align 8, !dbg !10405
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10408, metadata !DIExpression()), !dbg !10409
  store i8 0, i8* %sep, align 1, !dbg !10409
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10410
  %tobool = icmp ne i64 %6, 0, !dbg !10410
  br i1 %tobool, label %if.then, label %if.else, !dbg !10412

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10413
  %8 = load i64, i64* %dirlen, align 8, !dbg !10413
  %sub = sub i64 %8, 1, !dbg !10413
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10413, !ctir !183
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10413
  %conv = sext i8 %9 to i32, !dbg !10413
  %cmp = icmp eq i32 %conv, 47, !dbg !10413
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10416

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10417
  %11 = load i8, i8* %10, align 1, !dbg !10417, !ctir !184
  %conv4 = sext i8 %11 to i32, !dbg !10417
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10417
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10418

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10419
  br label %if.end, !dbg !10420

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10421

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10422
  %13 = load i8, i8* %12, align 1, !dbg !10422, !ctir !184
  %conv8 = sext i8 %13 to i32, !dbg !10422
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10422
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10424

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10425
  br label %if.end12, !dbg !10427

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10428, metadata !DIExpression()), !dbg !10429
  %14 = load i64, i64* %dirlen, align 8, !dbg !10430
  %15 = load i8, i8* %sep, align 1, !dbg !10431
  %conv14 = sext i8 %15 to i32, !dbg !10431
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10432
  %conv16 = zext i1 %cmp15 to i32, !dbg !10432
  %conv17 = sext i32 %conv16 to i64, !dbg !10433
  %add18 = add i64 %14, %conv17, !dbg !10434
  %16 = load i64, i64* %baselen, align 8, !dbg !10435
  %add19 = add i64 %add18, %16, !dbg !10436
  %add20 = add i64 %add19, 1, !dbg !10437
  %call21 = call noalias i8* @malloc(i64 %add20) #9, !dbg !10438
  store i8* %call21, i8** %p_concat, align 8, !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10439, metadata !DIExpression()), !dbg !10440
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10441
  %cmp22 = icmp eq i8* %17, null, !dbg !10443
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10444

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10445
  br label %return, !dbg !10445

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10446
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10447
  %20 = load i64, i64* %dirlen, align 8, !dbg !10448
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #9, !dbg !10449
  store i8* %call26, i8** %p, align 8, !dbg !10450
  %21 = load i8, i8* %sep, align 1, !dbg !10451
  %22 = load i8*, i8** %p, align 8, !dbg !10452
  store i8 %21, i8* %22, align 1, !dbg !10453, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !10454
  %conv27 = sext i8 %23 to i32, !dbg !10454
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10455
  %conv29 = zext i1 %cmp28 to i32, !dbg !10455
  %24 = load i8*, i8** %p, align 8, !dbg !10456
  %idx.ext = sext i32 %conv29 to i64, !dbg !10456
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10456, !ctir !10
  store i8* %add.ptr, i8** %p, align 8, !dbg !10456
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10457
  %tobool30 = icmp ne i8** %25, null, !dbg !10457
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10459

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10460
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10461
  store i8* %26, i8** %27, align 8, !dbg !10462, !ctir !9
  br label %if.end32, !dbg !10463

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10464
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10465
  %30 = load i64, i64* %baselen, align 8, !dbg !10466
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #9, !dbg !10467
  store i8* %call33, i8** %p, align 8, !dbg !10468
  %31 = load i8*, i8** %p, align 8, !dbg !10469
  store i8 0, i8* %31, align 1, !dbg !10470, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10471
  store i8* %32, i8** %retval, align 8, !dbg !10472
  br label %return, !dbg !10472

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10473
  ret i8* %33, !dbg !10473
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10474 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !9
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10483, metadata !DIExpression()), !dbg !10484
  store i64 0, i64* %total, align 8, !dbg !10484
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10487
  store i8* %0, i8** %ptr, align 8, !dbg !10486
  br label %while.cond, !dbg !10488

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10489
  %cmp = icmp ugt i64 %1, 0, !dbg !10490
  br i1 %cmp, label %while.body, label %while.end, !dbg !10488

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10491, metadata !DIExpression()), !dbg !10493
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10494
  %3 = load i8*, i8** %ptr, align 8, !dbg !10495
  %4 = load i64, i64* %count.addr, align 8, !dbg !10496
  %call = call i64 @safe_read(i32 %2, i8* %3, i64 %4), !dbg !10497
  store i64 %call, i64* %n_rw, align 8, !dbg !10493
  %5 = load i64, i64* %n_rw, align 8, !dbg !10498
  %cmp1 = icmp eq i64 %5, -1, !dbg !10500
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10501

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10502

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10503
  %cmp2 = icmp eq i64 %6, 0, !dbg !10505
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10506

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !10507
  store i32 0, i32* %call4, align 4, !dbg !10509, !ctir !7
  br label %while.end, !dbg !10510

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10511
  %8 = load i64, i64* %total, align 8, !dbg !10512
  %add = add i64 %8, %7, !dbg !10512
  store i64 %add, i64* %total, align 8, !dbg !10512
  %9 = load i64, i64* %n_rw, align 8, !dbg !10513
  %10 = load i8*, i8** %ptr, align 8, !dbg !10514
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10514, !ctir !10
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10514
  %11 = load i64, i64* %n_rw, align 8, !dbg !10515
  %12 = load i64, i64* %count.addr, align 8, !dbg !10516
  %sub = sub i64 %12, %11, !dbg !10516
  store i64 %sub, i64* %count.addr, align 8, !dbg !10516
  br label %while.cond, !dbg !10488, !llvm.loop !10517

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10519
  ret i64 %13, !dbg !10520
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10521 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !183
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10531, metadata !DIExpression()), !dbg !10532
  store i64 0, i64* %total, align 8, !dbg !10532
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10533, metadata !DIExpression()), !dbg !10534
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10535
  store i8* %0, i8** %ptr, align 8, !dbg !10534
  br label %while.cond, !dbg !10536

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10537
  %cmp = icmp ugt i64 %1, 0, !dbg !10538
  br i1 %cmp, label %while.body, label %while.end, !dbg !10536

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10539, metadata !DIExpression()), !dbg !10541
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10542
  %3 = load i8*, i8** %ptr, align 8, !dbg !10543
  %4 = load i64, i64* %count.addr, align 8, !dbg !10544
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !10545
  store i64 %call, i64* %n_rw, align 8, !dbg !10541
  %5 = load i64, i64* %n_rw, align 8, !dbg !10546
  %cmp1 = icmp eq i64 %5, -1, !dbg !10548
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10549

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10550

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10551
  %cmp2 = icmp eq i64 %6, 0, !dbg !10553
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10554

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !10555
  store i32 28, i32* %call4, align 4, !dbg !10557, !ctir !7
  br label %while.end, !dbg !10558

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10559
  %8 = load i64, i64* %total, align 8, !dbg !10560
  %add = add i64 %8, %7, !dbg !10560
  store i64 %add, i64* %total, align 8, !dbg !10560
  %9 = load i64, i64* %n_rw, align 8, !dbg !10561
  %10 = load i8*, i8** %ptr, align 8, !dbg !10562
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10562, !ctir !184
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10562
  %11 = load i64, i64* %n_rw, align 8, !dbg !10563
  %12 = load i64, i64* %count.addr, align 8, !dbg !10564
  %sub = sub i64 %12, %11, !dbg !10564
  store i64 %sub, i64* %count.addr, align 8, !dbg !10564
  br label %while.cond, !dbg !10536, !llvm.loop !10565

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10567
  ret i64 %13, !dbg !10568
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #10 !dbg !10569 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10575
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !10576, !ctir !797
  %1 = load i64, i64* %n_buckets, align 8, !dbg !10576, !ctir !55
  ret i64 %1, !dbg !10577
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #10 !dbg !10578 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10581
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !10582, !ctir !797
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !10582, !ctir !55
  ret i64 %1, !dbg !10583
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #10 !dbg !10584 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10585, metadata !DIExpression()), !dbg !10586
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10587
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10588, !ctir !797
  %1 = load i64, i64* %n_entries, align 8, !dbg !10588, !ctir !55
  ret i64 %1, !dbg !10589
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #10 !dbg !10590 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10591, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10593, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10595, metadata !DIExpression()), !dbg !10596
  store i64 0, i64* %max_bucket_length, align 8, !dbg !10596
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10597
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10599, !ctir !797
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10599, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10600
  br label %for.cond, !dbg !10601

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10602
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10604
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10605, !ctir !797
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10605, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10606
  br i1 %cmp, label %for.body, label %for.end, !dbg !10607

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10608
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10611, !ctir !810
  %6 = load i8*, i8** %data, align 8, !dbg !10611, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !10608
  br i1 %tobool, label %if.then, label %if.end5, !dbg !10612

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10613, metadata !DIExpression()), !dbg !10615
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10616
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10615
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !10617, metadata !DIExpression()), !dbg !10618
  store i64 1, i64* %bucket_length, align 8, !dbg !10618
  br label %while.cond, !dbg !10619

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10620
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10621, !ctir !810
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10621, !ctir !803
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !10622
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10623
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !10619
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10619

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !10624
  %inc = add i64 %11, 1, !dbg !10624
  store i64 %inc, i64* %bucket_length, align 8, !dbg !10624
  br label %while.cond, !dbg !10619, !llvm.loop !10625

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !10626
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10628
  %cmp3 = icmp ugt i64 %12, %13, !dbg !10629
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10630

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !10631
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !10632
  br label %if.end, !dbg !10633

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !10634

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10635

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10636
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !10636, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10636
  br label %for.cond, !dbg !10637, !llvm.loop !10638

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !10640
  ret i64 %16, !dbg !10641
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #10 !dbg !10642 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10647, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !10649, metadata !DIExpression()), !dbg !10650
  store i64 0, i64* %n_buckets_used, align 8, !dbg !10650
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !10651, metadata !DIExpression()), !dbg !10652
  store i64 0, i64* %n_entries, align 8, !dbg !10652
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10653
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10655, !ctir !797
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10655, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10656
  br label %for.cond, !dbg !10657

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10658
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10660
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10661, !ctir !797
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10661, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10662
  br i1 %cmp, label %for.body, label %for.end, !dbg !10663

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10664
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10667, !ctir !810
  %6 = load i8*, i8** %data, align 8, !dbg !10667, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !10664
  br i1 %tobool, label %if.then, label %if.end, !dbg !10668

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10669, metadata !DIExpression()), !dbg !10671
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10672
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10671
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !10673
  %inc = add i64 %8, 1, !dbg !10673
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !10673
  %9 = load i64, i64* %n_entries, align 8, !dbg !10674
  %inc2 = add i64 %9, 1, !dbg !10674
  store i64 %inc2, i64* %n_entries, align 8, !dbg !10674
  br label %while.cond, !dbg !10675

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10676
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !10677, !ctir !810
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10677, !ctir !803
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !10678
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10679
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !10675
  br i1 %tobool3, label %while.body, label %while.end, !dbg !10675

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !10680
  %inc4 = add i64 %13, 1, !dbg !10680
  store i64 %inc4, i64* %n_entries, align 8, !dbg !10680
  br label %while.cond, !dbg !10675, !llvm.loop !10681

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !10682

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !10683

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10684
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !10684, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10684
  br label %for.cond, !dbg !10685, !llvm.loop !10686

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !10688
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10690
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !10691, !ctir !797
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !10691, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !10692
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !10693

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !10694
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10695
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !10696, !ctir !797
  %20 = load i64, i64* %n_entries7, align 8, !dbg !10696, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !10697
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10698

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !10699
  br label %return, !dbg !10699

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !10700
  br label %return, !dbg !10700

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !10701
  ret i1 %21, !dbg !10701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !10702 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !10743, metadata !DIExpression()), !dbg !10744
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10745
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !10746
  store i64 %call, i64* %n_entries, align 8, !dbg !10744
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !10747, metadata !DIExpression()), !dbg !10748
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10749
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !10750
  store i64 %call1, i64* %n_buckets, align 8, !dbg !10748
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !10751, metadata !DIExpression()), !dbg !10752
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10753
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !10754
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !10752
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10755, metadata !DIExpression()), !dbg !10756
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10757
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !10758
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !10756
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10759
  %5 = load i64, i64* %n_entries, align 8, !dbg !10760
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.270, i64 0, i64 0), i64 %5), !dbg !10761
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10762
  %7 = load i64, i64* %n_buckets, align 8, !dbg !10763
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.271, i64 0, i64 0), i64 %7), !dbg !10764
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10765
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !10766
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !10767
  %conv = uitofp i64 %10 to double, !dbg !10767
  %mul = fmul double 1.000000e+02, %conv, !dbg !10768
  %11 = load i64, i64* %n_buckets, align 8, !dbg !10769
  %conv6 = uitofp i64 %11 to double, !dbg !10769
  %div = fdiv double %mul, %conv6, !dbg !10770
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.272, i64 0, i64 0), i64 %9, double %div), !dbg !10771
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !10772
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10773
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.273, i64 0, i64 0), i64 %13), !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !10776 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10783, metadata !DIExpression()), !dbg !10784
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10785
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !10786
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !10787
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !10784
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10788, metadata !DIExpression()), !dbg !10789
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10790
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !10792, !ctir !810
  %3 = load i8*, i8** %data, align 8, !dbg !10792, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !10793
  br i1 %cmp, label %if.then, label %if.end, !dbg !10794

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10795
  br label %return, !dbg !10795

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10796
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !10798
  br label %for.cond, !dbg !10799

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10800
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !10802
  br i1 %tobool, label %for.body, label %for.end, !dbg !10802

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !10803
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10805
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !10806, !ctir !810
  %8 = load i8*, i8** %data2, align 8, !dbg !10806, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !10807
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !10808

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10809
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !10810, !ctir !797
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !10810, !ctir !834
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !10811
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10812
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !10813, !ctir !810
  %13 = load i8*, i8** %data4, align 8, !dbg !10813, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !10809
  br i1 %call5, label %if.then6, label %if.end8, !dbg !10814

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10815
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !10816, !ctir !810
  %15 = load i8*, i8** %data7, align 8, !dbg !10816, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !10817
  br label %return, !dbg !10817

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !10818

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10819
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !10820, !ctir !810
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10820, !ctir !803
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !10821
  br label %for.cond, !dbg !10822, !llvm.loop !10823

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !10825
  br label %return, !dbg !10825

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !10826
  ret i8* %18, !dbg !10826
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !10827 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10830, metadata !DIExpression()), !dbg !10831
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10834, metadata !DIExpression()), !dbg !10835
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10836
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !10837, !ctir !797
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !10837, !ctir !827
  %2 = load i8*, i8** %key.addr, align 8, !dbg !10838
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10839
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !10840, !ctir !797
  %4 = load i64, i64* %n_buckets, align 8, !dbg !10840, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !10836
  store i64 %call, i64* %n, align 8, !dbg !10835
  %5 = load i64, i64* %n, align 8, !dbg !10841
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10843
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !10844, !ctir !797
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !10844, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !10845
  br i1 %cmp, label %if.end, label %if.then, !dbg !10846

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !10847
  unreachable, !dbg !10847

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10848
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !10849, !ctir !797
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10849, !ctir !803
  %10 = load i64, i64* %n, align 8, !dbg !10850
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !10851, !ctir !804
  ret %struct.hash_entry* %add.ptr, !dbg !10852
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #10 !dbg !10853 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10856, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10858, metadata !DIExpression()), !dbg !10859
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10860
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10862, !ctir !797
  %1 = load i64, i64* %n_entries, align 8, !dbg !10862, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !10863
  br i1 %cmp, label %if.then, label %if.end, !dbg !10864

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10865
  br label %return, !dbg !10865

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10866
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !10868, !ctir !797
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10868, !ctir !803
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !10869
  br label %for.cond, !dbg !10870

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10871
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10874
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !10875, !ctir !797
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10875, !ctir !809
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !10876
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !10877

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !10878
  unreachable, !dbg !10878

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10879
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !10881, !ctir !810
  %8 = load i8*, i8** %data, align 8, !dbg !10881, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !10879
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !10882

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10883
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !10884, !ctir !810
  %10 = load i8*, i8** %data5, align 8, !dbg !10884, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !10885
  br label %return, !dbg !10885

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !10886

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10887
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !10887, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10887
  br label %for.cond, !dbg !10888, !llvm.loop !10889

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !10892
  ret i8* %12, !dbg !10892
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !10893 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10898, metadata !DIExpression()), !dbg !10899
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10900
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !10901
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !10902
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !10899
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10903, metadata !DIExpression()), !dbg !10904
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10905
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !10906
  br label %do.body, !dbg !10907

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10908
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !10911, !ctir !810
  %4 = load i8*, i8** %data, align 8, !dbg !10911, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !10912
  %cmp = icmp eq i8* %4, %5, !dbg !10913
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10914

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10915
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !10916, !ctir !810
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10916, !ctir !803
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !10915
  br i1 %tobool, label %if.then, label %if.end, !dbg !10917

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10918
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10919, !ctir !810
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !10919, !ctir !803
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !10920, !ctir !804
  %10 = load i8*, i8** %data3, align 8, !dbg !10920, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !10921
  br label %return, !dbg !10921

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10922
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !10923, !ctir !810
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !10923, !ctir !803
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !10924
  br label %do.cond, !dbg !10925

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10926
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !10927
  br i1 %cmp5, label %do.body, label %do.end, !dbg !10925, !llvm.loop !10928

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !10930

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10931
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !10931, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10931
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10932
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !10933, !ctir !797
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10933, !ctir !809
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !10934
  br i1 %cmp6, label %while.body, label %while.end, !dbg !10930

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10935
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !10937, !ctir !810
  %18 = load i8*, i8** %data7, align 8, !dbg !10937, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !10935
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10938

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10939
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !10940, !ctir !810
  %20 = load i8*, i8** %data10, align 8, !dbg !10940, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !10941
  br label %return, !dbg !10941

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !10930, !llvm.loop !10942

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !10944
  br label %return, !dbg !10944

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !10945
  ret i8* %21, !dbg !10945
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !10946 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10949, metadata !DIExpression()), !dbg !10950
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !10951, metadata !DIExpression()), !dbg !10952
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !10955, metadata !DIExpression()), !dbg !10956
  store i64 0, i64* %counter, align 8, !dbg !10956
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10959, metadata !DIExpression()), !dbg !10960
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10961
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10963, !ctir !797
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10963, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10964
  br label %for.cond, !dbg !10965

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10966
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10968
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10969, !ctir !797
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10969, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10970
  br i1 %cmp, label %for.body, label %for.end10, !dbg !10971

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10972
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10975, !ctir !810
  %6 = load i8*, i8** %data, align 8, !dbg !10975, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !10972
  br i1 %tobool, label %if.then, label %if.end8, !dbg !10976

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10977
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10980
  br label %for.cond2, !dbg !10981

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10982
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !10984
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !10984

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !10985
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !10988
  %cmp5 = icmp uge i64 %9, %10, !dbg !10989
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10990

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !10991
  store i64 %11, i64* %retval, align 8, !dbg !10992
  br label %return, !dbg !10992

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10993
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !10994, !ctir !810
  %13 = load i8*, i8** %data7, align 8, !dbg !10994, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !10995
  %15 = load i64, i64* %counter, align 8, !dbg !10996
  %inc = add i64 %15, 1, !dbg !10996
  store i64 %inc, i64* %counter, align 8, !dbg !10996
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !10995, !ctir !844
  store i8* %13, i8** %arrayidx, align 8, !dbg !10997
  br label %for.inc, !dbg !10998

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10999
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11000, !ctir !810
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11000, !ctir !803
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11001
  br label %for.cond2, !dbg !11002, !llvm.loop !11003

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11005

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11006

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11007
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11007, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11007
  br label %for.cond, !dbg !11008, !llvm.loop !11009

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11011
  store i64 %19, i64* %retval, align 8, !dbg !11012
  br label %return, !dbg !11012

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11013
  ret i64 %20, !dbg !11013
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11014 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !809
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !809
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11021, metadata !DIExpression()), !dbg !11022
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store i8* %processor_data, i8** %processor_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11027, metadata !DIExpression()), !dbg !11028
  store i64 0, i64* %counter, align 8, !dbg !11028
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11029, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11031, metadata !DIExpression()), !dbg !11032
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11033
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11035, !ctir !797
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11035, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11036
  br label %for.cond, !dbg !11037

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11038
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11040
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11041, !ctir !797
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11041, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11042
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11043

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11044
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11047, !ctir !810
  %6 = load i8*, i8** %data, align 8, !dbg !11047, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11044
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11048

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11049
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11052
  br label %for.cond2, !dbg !11053

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11054
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11056
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11056

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11057
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11060
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11061, !ctir !810
  %11 = load i8*, i8** %data5, align 8, !dbg !11061, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11062
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11057
  br i1 %call, label %if.end, label %if.then6, !dbg !11063

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11064
  store i64 %13, i64* %retval, align 8, !dbg !11065
  br label %return, !dbg !11065

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11066
  %inc = add i64 %14, 1, !dbg !11066
  store i64 %inc, i64* %counter, align 8, !dbg !11066
  br label %for.inc, !dbg !11067

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11068
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11069, !ctir !810
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11069, !ctir !803
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11070
  br label %for.cond2, !dbg !11071, !llvm.loop !11072

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11074

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11075

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11076
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11076, !ctir !810
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11076
  br label %for.cond, !dbg !11077, !llvm.loop !11078

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11080
  store i64 %18, i64* %retval, align 8, !dbg !11081
  br label %return, !dbg !11081

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11082
  ret i64 %19, !dbg !11082
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #10 !dbg !11083 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !573
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11086, metadata !DIExpression()), !dbg !11087
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11090, metadata !DIExpression()), !dbg !11091
  store i64 0, i64* %value, align 8, !dbg !11091
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11092, metadata !DIExpression()), !dbg !11093
  br label %for.cond, !dbg !11094

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11095
  %1 = load i8, i8* %0, align 1, !dbg !11098, !ctir !184
  store i8 %1, i8* %ch, align 1, !dbg !11099
  %tobool = icmp ne i8 %1, 0, !dbg !11100
  br i1 %tobool, label %for.body, label %for.end, !dbg !11100

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11101
  %mul = mul i64 %2, 31, !dbg !11102
  %3 = load i8, i8* %ch, align 1, !dbg !11103
  %conv = zext i8 %3 to i64, !dbg !11103
  %add = add i64 %mul, %conv, !dbg !11104
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11105
  %rem = urem i64 %add, %4, !dbg !11106
  store i64 %rem, i64* %value, align 8, !dbg !11107
  br label %for.inc, !dbg !11108

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11109
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11109, !ctir !184
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11109
  br label %for.cond, !dbg !11110, !llvm.loop !11111

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11113
  ret i64 %6, !dbg !11114
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11115 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11119, metadata !DIExpression()), !dbg !11120
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11121
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11122
  ret void, !dbg !11123
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11124 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !845
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11127, metadata !DIExpression()), !dbg !11128
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11129, metadata !DIExpression()), !dbg !11130
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11137, metadata !DIExpression()), !dbg !11138
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11139
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11141
  br i1 %cmp, label %if.then, label %if.end, !dbg !11142

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11143
  br label %if.end, !dbg !11144

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11145
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11147
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11148

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11149
  br label %if.end3, !dbg !11150

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !11151
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11151
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11152
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11153
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11155
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11156

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11157
  br label %return, !dbg !11157

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11158
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11158
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11160

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11161
  br label %if.end8, !dbg !11162

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11163
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11164
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11165, !ctir !798
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11166, !ctir !815
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11167
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11169
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11170

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11171

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11173
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11174
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11175
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11176
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11177, !ctir !798
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11178, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11179
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11181, !ctir !798
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11181, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !11179
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11182

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11183

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11184
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11185, !ctir !798
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11185, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #9, !dbg !11186
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11186
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11187
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11188, !ctir !798
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11189, !ctir !803
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11190
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11192, !ctir !798
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11192, !ctir !803
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11193
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11194

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11195

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11196
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11197, !ctir !798
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11197, !ctir !803
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11198
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11199, !ctir !798
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11199, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11200, !ctir !804
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11201
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11202, !ctir !798
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11203, !ctir !809
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11204
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11205, !ctir !798
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11206, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11207
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11208, !ctir !798
  store i64 0, i64* %n_entries, align 8, !dbg !11209, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11210
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11211
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11212, !ctir !798
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11213, !ctir !827
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11214
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11215
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11216, !ctir !798
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11217, !ctir !834
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11218
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11219
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11220, !ctir !798
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11221, !ctir !839
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11222
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11223, !ctir !798
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11224, !ctir !803
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11225
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11226
  br label %return, !dbg !11226

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11227), !dbg !11228
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11229
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11229
  call void @free(i8* %35) #9, !dbg !11230
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11231
  br label %return, !dbg !11231

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11232
  ret %struct.hash_table* %36, !dbg !11232
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11233 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11234, metadata !DIExpression()), !dbg !11235
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11236, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11238, metadata !DIExpression()), !dbg !11239
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11240
  %1 = ptrtoint i8* %0 to i64, !dbg !11241
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11242
  store i64 %call, i64* %val, align 8, !dbg !11239
  %2 = load i64, i64* %val, align 8, !dbg !11243
  %3 = load i64, i64* %n.addr, align 8, !dbg !11244
  %rem = urem i64 %2, %3, !dbg !11245
  ret i64 %rem, !dbg !11246
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11247 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11248, metadata !DIExpression()), !dbg !11249
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11250, metadata !DIExpression()), !dbg !11251
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11252
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11253
  %cmp = icmp eq i8* %0, %1, !dbg !11254
  ret i1 %cmp, !dbg !11255
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11256 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !815
  %epsilon = alloca float, align 4, !ctir !821
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11259, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11261, metadata !DIExpression()), !dbg !11262
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11263
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11264, !ctir !798
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11264, !ctir !815
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11262
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11267
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11269
  br i1 %cmp, label %if.then, label %if.end, !dbg !11270

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11271
  br label %return, !dbg !11271

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11272
  %3 = load float, float* %epsilon, align 4, !dbg !11273
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11275
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11276, !ctir !816
  %5 = load float, float* %growth_threshold, align 4, !dbg !11276, !ctir !821
  %cmp2 = fcmp olt float %3, %5, !dbg !11277
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11278

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11279
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11280, !ctir !816
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11280, !ctir !821
  %8 = load float, float* %epsilon, align 4, !dbg !11281
  %sub = fsub float 1.000000e+00, %8, !dbg !11282
  %cmp4 = fcmp olt float %7, %sub, !dbg !11283
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11284

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11285
  %add = fadd float 1.000000e+00, %9, !dbg !11286
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11287
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11288, !ctir !816
  %11 = load float, float* %growth_factor, align 4, !dbg !11288, !ctir !821
  %cmp6 = fcmp olt float %add, %11, !dbg !11289
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11290

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11291
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11292, !ctir !816
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11292, !ctir !821
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11293
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11294

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11295
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11296, !ctir !816
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11296, !ctir !821
  %16 = load float, float* %epsilon, align 4, !dbg !11297
  %add11 = fadd float %15, %16, !dbg !11298
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11299
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11300, !ctir !816
  %18 = load float, float* %shrink_factor, align 4, !dbg !11300, !ctir !821
  %cmp12 = fcmp olt float %add11, %18, !dbg !11301
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11302

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11303
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11304, !ctir !816
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11304, !ctir !821
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11305
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11306

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11307
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11308, !ctir !816
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11308, !ctir !821
  %23 = load float, float* %epsilon, align 4, !dbg !11309
  %add18 = fadd float %22, %23, !dbg !11310
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11311
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11312, !ctir !816
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11312, !ctir !821
  %cmp20 = fcmp olt float %add18, %25, !dbg !11313
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11314

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11315
  br label %return, !dbg !11315

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11316
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11317, !ctir !798
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11318, !ctir !815
  store i1 false, i1* %retval, align 1, !dbg !11319
  br label %return, !dbg !11319

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11320
  ret i1 %27, !dbg !11320
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #10 !dbg !11321 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !821
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11324, metadata !DIExpression()), !dbg !11325
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11326, metadata !DIExpression()), !dbg !11327
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11328
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11330, !ctir !816
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11330
  %tobool = trunc i8 %1 to i1, !dbg !11330, !ctir !142
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11331

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11332, metadata !DIExpression()), !dbg !11334
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11335
  %conv = uitofp i64 %2 to float, !dbg !11335
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11336
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11337, !ctir !816
  %4 = load float, float* %growth_threshold, align 4, !dbg !11337, !ctir !821
  %div = fdiv float %conv, %4, !dbg !11338
  store float %div, float* %new_candidate, align 4, !dbg !11334
  %5 = load float, float* %new_candidate, align 4, !dbg !11339
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11341
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11342

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11343
  br label %return, !dbg !11343

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11344
  %conv3 = fptoui float %6 to i64, !dbg !11344
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11345
  br label %if.end4, !dbg !11346

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11347
  %call = call i64 @next_prime(i64 %7) #16, !dbg !11348
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11349
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11350
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11350
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11352

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11353
  br label %return, !dbg !11353

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11354
  store i64 %9, i64* %retval, align 8, !dbg !11355
  br label %return, !dbg !11355

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11356
  ret i64 %10, !dbg !11356
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11357 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11362
  %cmp = icmp ult i64 %0, 10, !dbg !11364
  br i1 %cmp, label %if.then, label %if.end, !dbg !11365

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11366
  br label %if.end, !dbg !11367

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11368
  %or = or i64 %1, 1, !dbg !11368
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11368
  br label %while.cond, !dbg !11369

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11370
  %cmp1 = icmp ne i64 -1, %2, !dbg !11371
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11372

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11373
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !11374
  %lnot = xor i1 %call, true, !dbg !11375
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11376
  br i1 %4, label %while.body, label %while.end, !dbg !11369

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11377
  %add = add i64 %5, 2, !dbg !11377
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11377
  br label %while.cond, !dbg !11369, !llvm.loop !11378

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11380
  ret i64 %6, !dbg !11381
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11382 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11387, metadata !DIExpression()), !dbg !11388
  store i64 3, i64* %divisor, align 8, !dbg !11388
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11389, metadata !DIExpression()), !dbg !11390
  %0 = load i64, i64* %divisor, align 8, !dbg !11391
  %1 = load i64, i64* %divisor, align 8, !dbg !11392
  %mul = mul i64 %0, %1, !dbg !11393
  store i64 %mul, i64* %square, align 8, !dbg !11390
  br label %while.cond, !dbg !11394

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11395
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11396
  %cmp = icmp ult i64 %2, %3, !dbg !11397
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11398

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11399
  %5 = load i64, i64* %divisor, align 8, !dbg !11400
  %rem = urem i64 %4, %5, !dbg !11401
  %tobool = icmp ne i64 %rem, 0, !dbg !11398
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11402
  br i1 %6, label %while.body, label %while.end, !dbg !11394

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11403
  %inc = add i64 %7, 1, !dbg !11403
  store i64 %inc, i64* %divisor, align 8, !dbg !11403
  %8 = load i64, i64* %divisor, align 8, !dbg !11405
  %mul1 = mul i64 4, %8, !dbg !11406
  %9 = load i64, i64* %square, align 8, !dbg !11407
  %add = add i64 %9, %mul1, !dbg !11407
  store i64 %add, i64* %square, align 8, !dbg !11407
  %10 = load i64, i64* %divisor, align 8, !dbg !11408
  %inc2 = add i64 %10, 1, !dbg !11408
  store i64 %inc2, i64* %divisor, align 8, !dbg !11408
  br label %while.cond, !dbg !11394, !llvm.loop !11409

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11411
  %12 = load i64, i64* %divisor, align 8, !dbg !11412
  %rem3 = urem i64 %11, %12, !dbg !11413
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11411
  %13 = zext i1 %tobool4 to i64, !dbg !11411
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11411
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11414
  ret i1 %tobool5, !dbg !11415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11416 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !803
  %next = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11421, metadata !DIExpression()), !dbg !11422
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11423
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11425, !ctir !798
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11425, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11426
  br label %for.cond, !dbg !11427

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11428
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11430
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11431, !ctir !798
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11431, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11432
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11433

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11434
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11437, !ctir !804
  %6 = load i8*, i8** %data, align 8, !dbg !11437, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11434
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11438

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11439, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11442, metadata !DIExpression()), !dbg !11443
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11444
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11446, !ctir !804
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11446, !ctir !803
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11447
  br label %for.cond3, !dbg !11448

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11449
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11451
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11451

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11452
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11455, !ctir !798
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11455, !ctir !839
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11452
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11456

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11457
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11458, !ctir !798
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11458, !ctir !839
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11459
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11460, !ctir !804
  %15 = load i8*, i8** %data9, align 8, !dbg !11460, !ctir !53
  call void %13(i8* %15), !dbg !11457
  br label %if.end, !dbg !11457

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11461
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11462, !ctir !804
  store i8* null, i8** %data10, align 8, !dbg !11463, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11464
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11465, !ctir !804
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11465, !ctir !803
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11466
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11467
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11468, !ctir !798
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11468, !ctir !803
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11469
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11470, !ctir !804
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11471, !ctir !803
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11472
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11473
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11474, !ctir !798
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11475, !ctir !803
  br label %for.inc, !dbg !11476

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11477
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11478
  br label %for.cond3, !dbg !11479, !llvm.loop !11480

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11482
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11484, !ctir !798
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11484, !ctir !839
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11482
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11485

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11486
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11487, !ctir !798
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11487, !ctir !839
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11488
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11489, !ctir !804
  %30 = load i8*, i8** %data18, align 8, !dbg !11489, !ctir !53
  call void %28(i8* %30), !dbg !11486
  br label %if.end19, !dbg !11486

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11490
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11491, !ctir !804
  store i8* null, i8** %data20, align 8, !dbg !11492, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11493
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11494, !ctir !804
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11495, !ctir !803
  br label %if.end22, !dbg !11496

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11497

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11498
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11498, !ctir !804
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11498
  br label %for.cond, !dbg !11499, !llvm.loop !11500

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11502
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11503, !ctir !798
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11504, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11505
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11506, !ctir !798
  store i64 0, i64* %n_entries, align 8, !dbg !11507, !ctir !55
  ret void, !dbg !11508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11509 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !803
  %next = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11510, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11512, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11514, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11516, metadata !DIExpression()), !dbg !11517
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11518
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11520, !ctir !798
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11520, !ctir !839
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11518
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11521

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11522
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11523, !ctir !798
  %3 = load i64, i64* %n_entries, align 8, !dbg !11523, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !11522
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11524

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11525
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !11528, !ctir !798
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !11528, !ctir !803
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !11529
  br label %for.cond, !dbg !11530

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11531
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11533
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !11534, !ctir !798
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11534, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !11535
  br i1 %cmp, label %for.body, label %for.end12, !dbg !11536

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11537
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11540, !ctir !804
  %10 = load i8*, i8** %data, align 8, !dbg !11540, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !11537
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11541

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11542
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11545
  br label %for.cond5, !dbg !11546

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11547
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !11549
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !11549

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11550
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !11551, !ctir !798
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11551, !ctir !839
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11552
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !11553, !ctir !804
  %16 = load i8*, i8** %data9, align 8, !dbg !11553, !ctir !53
  call void %14(i8* %16), !dbg !11550
  br label %for.inc, !dbg !11550

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11554
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11555, !ctir !804
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !11555, !ctir !803
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !11556
  br label %for.cond5, !dbg !11557, !llvm.loop !11558

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11560

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !11561

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11562
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !11562, !ctir !804
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11562
  br label %for.cond, !dbg !11563, !llvm.loop !11564

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !11566

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11567
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !11569, !ctir !798
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !11569, !ctir !803
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !11570
  br label %for.cond15, !dbg !11571

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11572
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11574
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11575, !ctir !798
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !11575, !ctir !809
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !11576
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !11577

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11578
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !11581, !ctir !804
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !11581, !ctir !803
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !11582
  br label %for.cond20, !dbg !11583

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11584
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !11586
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !11586

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11587
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !11589, !ctir !804
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !11589, !ctir !803
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !11590
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11591
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !11591
  call void @free(i8* %31) #9, !dbg !11592
  br label %for.inc24, !dbg !11593

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11594
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !11595
  br label %for.cond20, !dbg !11596, !llvm.loop !11597

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !11599

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11600
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11600, !ctir !804
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !11600
  br label %for.cond15, !dbg !11601, !llvm.loop !11602

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11604
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11606, !ctir !798
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11606, !ctir !803
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !11607
  br label %for.cond29, !dbg !11608

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11609
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !11611
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !11611

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11612
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !11614, !ctir !804
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !11614, !ctir !803
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !11615
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11616
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !11616
  call void @free(i8* %40) #9, !dbg !11617
  br label %for.inc33, !dbg !11618

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11619
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !11620
  br label %for.cond29, !dbg !11621, !llvm.loop !11622

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11624
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11625, !ctir !798
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !11625, !ctir !803
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !11624
  call void @free(i8* %44) #9, !dbg !11626
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11627
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !11627
  call void @free(i8* %46) #9, !dbg !11628
  ret void, !dbg !11629
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !11630 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !798
  %new_table = alloca %struct.hash_table*, align 8, !ctir !845
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11633, metadata !DIExpression()), !dbg !11634
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !11641, metadata !DIExpression()), !dbg !11642
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11643
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11644
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !11645, !ctir !798
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11645, !ctir !815
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !11646
  store i64 %call, i64* %new_size, align 8, !dbg !11642
  %3 = load i64, i64* %new_size, align 8, !dbg !11647
  %tobool = icmp ne i64 %3, 0, !dbg !11647
  br i1 %tobool, label %if.end, label %if.then, !dbg !11649

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11650
  br label %return, !dbg !11650

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !11651
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11653
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !11654, !ctir !798
  %6 = load i64, i64* %n_buckets, align 8, !dbg !11654, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !11655
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11656

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !11657
  br label %return, !dbg !11657

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !11658
  %7 = load i64, i64* %new_size, align 8, !dbg !11659
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #9, !dbg !11660
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !11660
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11661
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !11662, !ctir !798
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !11663, !ctir !803
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11664
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !11666, !ctir !798
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !11666, !ctir !803
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !11667
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11668

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !11669
  br label %return, !dbg !11669

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !11670
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11671
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11672, !ctir !798
  store i64 %12, i64* %n_buckets8, align 8, !dbg !11673, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11674
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !11675, !ctir !798
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !11675, !ctir !803
  %16 = load i64, i64* %new_size, align 8, !dbg !11676
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !11677, !ctir !804
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11678
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !11679, !ctir !798
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11680, !ctir !809
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11681
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !11682, !ctir !798
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11683, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11684
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11685, !ctir !798
  store i64 0, i64* %n_entries, align 8, !dbg !11686, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11687
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !11688, !ctir !798
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !11688, !ctir !815
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11689
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !11690, !ctir !798
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !11691, !ctir !815
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11692
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !11693, !ctir !798
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11693, !ctir !827
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11694
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !11695, !ctir !798
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !11696, !ctir !827
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11697
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !11698, !ctir !798
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11698, !ctir !834
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11699
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !11700, !ctir !798
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !11701, !ctir !834
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11702
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !11703, !ctir !798
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11703, !ctir !839
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11704
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11705, !ctir !798
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !11706, !ctir !839
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11707
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11708, !ctir !798
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11708, !ctir !803
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11709
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11710, !ctir !798
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !11711, !ctir !803
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11712
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11714
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !11715
  br i1 %call16, label %if.then17, label %if.end29, !dbg !11716

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11717
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !11719, !ctir !798
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !11719, !ctir !803
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !11717
  call void @free(i8* %39) #9, !dbg !11720
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11721
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !11722, !ctir !798
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !11722, !ctir !803
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11724, !ctir !798
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !11725, !ctir !803
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11726
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !11727, !ctir !798
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !11727, !ctir !809
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11728
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !11729, !ctir !798
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !11730, !ctir !809
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11731
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !11732, !ctir !798
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !11732, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11733
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !11734, !ctir !798
  store i64 %47, i64* %n_buckets24, align 8, !dbg !11735, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11736
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !11737, !ctir !798
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !11737, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11738
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !11739, !ctir !798
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !11740, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11741
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !11742, !ctir !798
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !11742, !ctir !803
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11743
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !11744, !ctir !798
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !11745, !ctir !803
  store i1 true, i1* %retval, align 1, !dbg !11746
  br label %return, !dbg !11746

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11747
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !11748, !ctir !798
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !11748, !ctir !803
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11749
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !11750, !ctir !798
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !11751, !ctir !803
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11752
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11754
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !11755
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !11756

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11757
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11758
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !11759
  br i1 %call33, label %if.end35, label %if.then34, !dbg !11760

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !11761
  unreachable, !dbg !11761

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !11762
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !11763, !ctir !798
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !11763, !ctir !803
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !11762
  call void @free(i8* %64) #9, !dbg !11764
  store i1 false, i1* %retval, align 1, !dbg !11765
  br label %return, !dbg !11765

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !11766
  ret i1 %65, !dbg !11766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !11767 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !803
  %next = alloca %struct.hash_entry*, align 8, !ctir !803
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !11770, metadata !DIExpression()), !dbg !11771
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11776, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11780, metadata !DIExpression()), !dbg !11781
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11782
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11784, !ctir !798
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11784, !ctir !803
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11785
  br label %for.cond, !dbg !11786

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11787
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11789
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11790, !ctir !798
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11790, !ctir !809
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11791
  br i1 %cmp, label %for.body, label %for.end42, !dbg !11792

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11793
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11795, !ctir !804
  %6 = load i8*, i8** %data, align 8, !dbg !11795, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11793
  br i1 %tobool, label %if.then, label %if.end40, !dbg !11796

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !11797, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !11800, metadata !DIExpression()), !dbg !11801
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11802
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11804, !ctir !804
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !11804, !ctir !803
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11805
  br label %for.cond4, !dbg !11806

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11807
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !11809
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !11809

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11810
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11812, !ctir !804
  %11 = load i8*, i8** %data7, align 8, !dbg !11812, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !11813
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11814
  %13 = load i8*, i8** %data2, align 8, !dbg !11815
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !11816
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !11817
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11818
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !11819, !ctir !804
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !11819, !ctir !803
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !11820
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11821
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11823, !ctir !804
  %17 = load i8*, i8** %data9, align 8, !dbg !11823, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !11821
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !11824

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11825
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !11827, !ctir !804
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !11827, !ctir !803
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11828
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !11829, !ctir !804
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !11830, !ctir !803
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11831
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11832
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !11833, !ctir !804
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !11834, !ctir !803
  br label %if.end, !dbg !11835

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !11836
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11838
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !11839, !ctir !804
  store i8* %23, i8** %data15, align 8, !dbg !11840, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11841
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !11842, !ctir !798
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !11843, !ctir !55
  %inc = add i64 %26, 1, !dbg !11843
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11843, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11844
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11845
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !11846
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !11847

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11848
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !11849
  br label %for.cond4, !dbg !11850, !llvm.loop !11851

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11853
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !11854, !ctir !804
  %31 = load i8*, i8** %data16, align 8, !dbg !11854, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !11855
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11856
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11857, !ctir !804
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !11858, !ctir !803
  %33 = load i8, i8* %safe.addr, align 1, !dbg !11859
  %tobool18 = trunc i8 %33 to i1, !dbg !11859
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !11861

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !11862

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11863
  %35 = load i8*, i8** %data2, align 8, !dbg !11864
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !11865
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !11866
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11867
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !11869, !ctir !804
  %37 = load i8*, i8** %data22, align 8, !dbg !11869, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !11867
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !11870

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !11871, metadata !DIExpression()), !dbg !11873
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11874
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !11875
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !11873
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11876
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !11878
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !11879

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !11880
  br label %return, !dbg !11880

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !11881
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11882
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !11883, !ctir !804
  store i8* %40, i8** %data29, align 8, !dbg !11884, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11885
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !11886, !ctir !804
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !11886, !ctir !803
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11887
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !11888, !ctir !804
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !11889, !ctir !803
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !11890
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11891
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !11892, !ctir !804
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !11893, !ctir !803
  br label %if.end37, !dbg !11894

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !11895
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !11897
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !11898, !ctir !804
  store i8* %47, i8** %data34, align 8, !dbg !11899, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !11900
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !11901, !ctir !798
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !11902, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !11902
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !11902, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11903
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !11904, !ctir !804
  store i8* null, i8** %data38, align 8, !dbg !11905, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !11906
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !11907, !ctir !798
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !11908, !ctir !55
  %dec = add i64 %53, -1, !dbg !11908
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !11908, !ctir !55
  br label %if.end40, !dbg !11909

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !11795

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11910
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !11910, !ctir !804
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11910
  br label %for.cond, !dbg !11911, !llvm.loop !11912

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !11914
  br label %return, !dbg !11914

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !11915
  ret i1 %55, !dbg !11915
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !11916 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11923
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !11924, !ctir !804
  store i8* null, i8** %data, align 8, !dbg !11925, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11926
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !11927, !ctir !798
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11927, !ctir !803
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11928
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !11929, !ctir !804
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !11930, !ctir !803
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !11931
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11932
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !11933, !ctir !798
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !11934, !ctir !803
  ret void, !dbg !11935
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !11936 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !11941, metadata !DIExpression()), !dbg !11942
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11943
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !11945, !ctir !798
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11945, !ctir !803
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !11943
  br i1 %tobool, label %if.then, label %if.else, !dbg !11946

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11947
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !11949, !ctir !798
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !11949, !ctir !803
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !11950
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !11951
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !11952, !ctir !804
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11952, !ctir !803
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11953
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !11954, !ctir !798
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !11955, !ctir !803
  br label %if.end, !dbg !11956

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !11957
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !11957
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !11959
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !11960
  ret %struct.hash_entry* %8, !dbg !11961
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !11962 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !815
  %candidate = alloca float, align 4, !ctir !821
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11968, metadata !DIExpression()), !dbg !11969
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.declare(metadata i8** %data, metadata !11972, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11974, metadata !DIExpression()), !dbg !11975
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !11976
  %tobool = icmp ne i8* %0, null, !dbg !11976
  br i1 %tobool, label %if.end, label %if.then, !dbg !11978

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11979
  unreachable, !dbg !11979

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11980
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !11982
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !11983
  store i8* %call, i8** %data, align 8, !dbg !11984
  %cmp = icmp ne i8* %call, null, !dbg !11985
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !11986

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !11987
  %tobool3 = icmp ne i8** %3, null, !dbg !11987
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11990

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !11991
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !11992
  store i8* %4, i8** %5, align 8, !dbg !11993, !ctir !831
  br label %if.end5, !dbg !11994

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !11995
  br label %return, !dbg !11995

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11996
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !11998, !ctir !798
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !11998, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !11996
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11999
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12000, !ctir !798
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12000, !ctir !815
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12001, !ctir !816
  %10 = load float, float* %growth_threshold, align 4, !dbg !12001, !ctir !821
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12002
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12003, !ctir !798
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12003, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !12002
  %mul = fmul float %10, %conv7, !dbg !12004
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12005
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12006

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12007
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12009
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12010
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12012, !ctir !798
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12012, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !12010
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12013
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12014, !ctir !798
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12014, !ctir !815
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12015, !ctir !816
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12015, !ctir !821
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12016
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12017, !ctir !798
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12017, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !12016
  %mul18 = fmul float %18, %conv17, !dbg !12018
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12019
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12020

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12021, metadata !DIExpression()), !dbg !12023
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12024
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12025, !ctir !798
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12025, !ctir !815
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12023
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12026, metadata !DIExpression()), !dbg !12027
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12028
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12029, !ctir !816
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12029
  %tobool24 = trunc i8 %24 to i1, !dbg !12029, !ctir !142
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12028

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12030
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12031, !ctir !798
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12031, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !12030
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12032
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12033, !ctir !816
  %28 = load float, float* %growth_factor, align 4, !dbg !12033, !ctir !821
  %mul28 = fmul float %conv27, %28, !dbg !12034
  br label %cond.end, !dbg !12028

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12035
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12036, !ctir !798
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12036, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !12035
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12037
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12038, !ctir !816
  %32 = load float, float* %growth_factor31, align 4, !dbg !12038, !ctir !821
  %mul32 = fmul float %conv30, %32, !dbg !12039
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12040
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12041, !ctir !816
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12041, !ctir !821
  %mul34 = fmul float %mul32, %34, !dbg !12042
  br label %cond.end, !dbg !12028

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12028
  store float %cond, float* %candidate, align 4, !dbg !12027
  %35 = load float, float* %candidate, align 4, !dbg !12043
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12045
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12046

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12047
  br label %return, !dbg !12047

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12048
  %37 = load float, float* %candidate, align 4, !dbg !12050
  %conv39 = fptoui float %37 to i64, !dbg !12050
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12051
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12052

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12053
  br label %return, !dbg !12053

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12054
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12056
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12057
  %cmp44 = icmp ne i8* %call43, null, !dbg !12058
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12059

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12060
  unreachable, !dbg !12060

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12061

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12062

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12063
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12065, !ctir !804
  %41 = load i8*, i8** %data50, align 8, !dbg !12065, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !12063
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12066

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12067, metadata !DIExpression()), !dbg !12069
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12070
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12071
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12069
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12072
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12074
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12075

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12076
  br label %return, !dbg !12076

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12077
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12078
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12079, !ctir !804
  store i8* %44, i8** %data58, align 8, !dbg !12080, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12081
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12082, !ctir !804
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12082, !ctir !803
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12083
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12084, !ctir !804
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12085, !ctir !803
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12086
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12087
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12088, !ctir !804
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12089, !ctir !803
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12090
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12091, !ctir !798
  %52 = load i64, i64* %n_entries, align 8, !dbg !12092, !ctir !55
  %inc = add i64 %52, 1, !dbg !12092
  store i64 %inc, i64* %n_entries, align 8, !dbg !12092, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12093
  br label %return, !dbg !12093

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12094
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12095
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12096, !ctir !804
  store i8* %53, i8** %data62, align 8, !dbg !12097, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12098
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12099, !ctir !798
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12100, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !12100
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12100, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12101
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12102, !ctir !798
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12103, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !12103
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12103, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12104
  br label %return, !dbg !12104

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12105
  ret i32 %59, !dbg !12105
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12106 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !803
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !803
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12110, metadata !DIExpression()), !dbg !12111
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12112, metadata !DIExpression()), !dbg !12113
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12114, metadata !DIExpression()), !dbg !12115
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12116, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12118, metadata !DIExpression()), !dbg !12119
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12120
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12121
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12122
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12119
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12123, metadata !DIExpression()), !dbg !12124
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12125
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12126
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12127, !ctir !803
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12128
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12130, !ctir !804
  %5 = load i8*, i8** %data, align 8, !dbg !12130, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !12131
  br i1 %cmp, label %if.then, label %if.end, !dbg !12132

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12133
  br label %return, !dbg !12133

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12134
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12136
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12137, !ctir !804
  %8 = load i8*, i8** %data2, align 8, !dbg !12137, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !12138
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12139

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12140
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12141, !ctir !798
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12141, !ctir !834
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12142
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12143
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12144, !ctir !804
  %13 = load i8*, i8** %data4, align 8, !dbg !12144, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12140
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12145

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12146, metadata !DIExpression()), !dbg !12148
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12149
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12150, !ctir !804
  %15 = load i8*, i8** %data8, align 8, !dbg !12150, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !12148
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12151
  %tobool = trunc i8 %16 to i1, !dbg !12151
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12153

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12154
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12157, !ctir !804
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12157, !ctir !803
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12154
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12158

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12159, metadata !DIExpression()), !dbg !12161
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12162
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12163, !ctir !804
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12163, !ctir !803
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12161
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12164
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12165
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12166
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12166
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12167
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12168
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12169
  br label %if.end15, !dbg !12170

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12171
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12173, !ctir !804
  store i8* null, i8** %data14, align 8, !dbg !12174, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12175

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12176
  store i8* %28, i8** %retval, align 8, !dbg !12177
  br label %return, !dbg !12177

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12178
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12180
  br label %for.cond, !dbg !12181

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12182
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12184, !ctir !804
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12184, !ctir !803
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12185
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12185

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12186
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12189
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12190, !ctir !804
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12190, !ctir !803
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12191, !ctir !804
  %35 = load i8*, i8** %data21, align 8, !dbg !12191, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !12192
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12193

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12194
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12195, !ctir !798
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12195, !ctir !834
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12196
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12197
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12198, !ctir !804
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12198, !ctir !803
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12199, !ctir !804
  %41 = load i8*, i8** %data26, align 8, !dbg !12199, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12194
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12200

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12201, metadata !DIExpression()), !dbg !12203
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12204
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12205, !ctir !804
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12205, !ctir !803
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12206, !ctir !804
  %44 = load i8*, i8** %data31, align 8, !dbg !12206, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !12203
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12207
  %tobool32 = trunc i8 %45 to i1, !dbg !12207
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12209

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12210, metadata !DIExpression()), !dbg !12212
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12213
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12214, !ctir !804
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12214, !ctir !803
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12212
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12215
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12216, !ctir !804
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12216, !ctir !803
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12217
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12218, !ctir !804
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12219, !ctir !803
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12220
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12221
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12222
  br label %if.end38, !dbg !12223

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12224
  store i8* %53, i8** %retval, align 8, !dbg !12225
  br label %return, !dbg !12225

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12226

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12227
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12228, !ctir !804
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12228, !ctir !803
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12229
  br label %for.cond, !dbg !12230, !llvm.loop !12231

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12233
  br label %return, !dbg !12233

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12234
  ret i8* %56, !dbg !12234
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12235 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !831
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12238, metadata !DIExpression()), !dbg !12239
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12242, metadata !DIExpression()), !dbg !12243
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12244, metadata !DIExpression()), !dbg !12245
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12246
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12247
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12248
  store i32 %call, i32* %err, align 4, !dbg !12245
  %2 = load i32, i32* %err, align 4, !dbg !12249
  %cmp = icmp eq i32 %2, -1, !dbg !12250
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12249

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12249

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12251
  %cmp2 = icmp eq i32 %3, 0, !dbg !12252
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12251

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12253
  br label %cond.end, !dbg !12251

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12254
  br label %cond.end, !dbg !12251

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12251
  br label %cond.end5, !dbg !12249

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12249
  ret i8* %cond6, !dbg !12255
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12256 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !803
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !815
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !803
  %next = alloca %struct.hash_entry*, align 8, !ctir !803
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12261, metadata !DIExpression()), !dbg !12262
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12263, metadata !DIExpression()), !dbg !12264
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12265
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12266
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12267
  store i8* %call, i8** %data, align 8, !dbg !12268
  %2 = load i8*, i8** %data, align 8, !dbg !12269
  %tobool = icmp ne i8* %2, null, !dbg !12269
  br i1 %tobool, label %if.end, label %if.then, !dbg !12271

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12272
  br label %return, !dbg !12272

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12273
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12274, !ctir !798
  %4 = load i64, i64* %n_entries, align 8, !dbg !12275, !ctir !55
  %dec = add i64 %4, -1, !dbg !12275
  store i64 %dec, i64* %n_entries, align 8, !dbg !12275, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12276
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12278, !ctir !804
  %6 = load i8*, i8** %data2, align 8, !dbg !12278, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !12276
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12279

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12280
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12282, !ctir !798
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12283, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !12283
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12283, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12284
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12286, !ctir !798
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12286, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !12284
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12287
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12288, !ctir !798
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12288, !ctir !815
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12289, !ctir !816
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12289, !ctir !821
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12290
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12291, !ctir !798
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12291, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !12290
  %mul = fmul float %13, %conv7, !dbg !12292
  %cmp = fcmp olt float %conv, %mul, !dbg !12293
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12294

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12295
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12297
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12298
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12300, !ctir !798
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12300, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !12298
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12301
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12302, !ctir !798
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12302, !ctir !815
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12303, !ctir !816
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12303, !ctir !821
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12304
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12305, !ctir !798
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12305, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !12304
  %mul17 = fmul float %21, %conv16, !dbg !12306
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12307
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12308

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12309, metadata !DIExpression()), !dbg !12311
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12312
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12313, !ctir !798
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12313, !ctir !815
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12311
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12314, metadata !DIExpression()), !dbg !12315
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12316
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12317, !ctir !816
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12317
  %tobool23 = trunc i8 %27 to i1, !dbg !12317, !ctir !142
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12316

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12318
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12319, !ctir !798
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12319, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !12318
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12320
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12321, !ctir !816
  %31 = load float, float* %shrink_factor, align 4, !dbg !12321, !ctir !821
  %mul27 = fmul float %conv26, %31, !dbg !12322
  br label %cond.end, !dbg !12316

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12323
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12324, !ctir !798
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12324, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !12323
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12325
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12326, !ctir !816
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12326, !ctir !821
  %mul31 = fmul float %conv29, %35, !dbg !12327
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12328
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12329, !ctir !816
  %37 = load float, float* %growth_threshold, align 4, !dbg !12329, !ctir !821
  %mul32 = fmul float %mul31, %37, !dbg !12330
  br label %cond.end, !dbg !12316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12316
  %conv33 = fptoui float %cond to i64, !dbg !12331
  store i64 %conv33, i64* %candidate, align 8, !dbg !12315
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12332
  %39 = load i64, i64* %candidate, align 8, !dbg !12334
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12335
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12336

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12337, metadata !DIExpression()), !dbg !12339
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12340
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12341, !ctir !798
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12341, !ctir !803
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12339
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12342, metadata !DIExpression()), !dbg !12343
  br label %while.cond, !dbg !12344

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12345
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12344
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12344

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12346
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12348, !ctir !804
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12348, !ctir !803
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12349
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12350
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12350
  call void @free(i8* %46) #9, !dbg !12351
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12352
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12353
  br label %while.cond, !dbg !12344, !llvm.loop !12354

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12356
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12357, !ctir !798
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12358, !ctir !803
  br label %if.end39, !dbg !12359

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12360

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12361

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12362

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12363
  store i8* %49, i8** %retval, align 8, !dbg !12364
  br label %return, !dbg !12364

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12365
  ret i8* %50, !dbg !12365
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #10 !dbg !12366 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1308
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12368, metadata !DIExpression()), !dbg !12369
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12370, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12372, metadata !DIExpression()), !dbg !12373
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12374
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12374
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12373
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12375, metadata !DIExpression()), !dbg !12376
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12377
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12378, !ctir !1309
  %3 = load i8*, i8** %name, align 8, !dbg !12378, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12379
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12380
  store i64 %call, i64* %tmp, align 8, !dbg !12376
  %5 = load i64, i64* %tmp, align 8, !dbg !12381
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12382
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12383, !ctir !1309
  %7 = load i64, i64* %st_ino, align 8, !dbg !12383, !ctir !498
  %xor = xor i64 %5, %7, !dbg !12384
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12385
  %rem = urem i64 %xor, %8, !dbg !12386
  ret i64 %rem, !dbg !12387
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #10 !dbg !12388 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1308
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12391, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12393, metadata !DIExpression()), !dbg !12394
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12395
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12395
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12394
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12396
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12397, !ctir !1309
  %3 = load i64, i64* %st_ino, align 8, !dbg !12397, !ctir !498
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12398
  %rem = urem i64 %3, %4, !dbg !12399
  ret i64 %rem, !dbg !12400
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12401 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1308
  %b = alloca %struct.F_triple*, align 8, !ctir !1308
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12406, metadata !DIExpression()), !dbg !12407
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12408
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12408
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12407
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12409, metadata !DIExpression()), !dbg !12410
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12411
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12411
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12410
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12412
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12412, !ctir !1309
  %5 = load i64, i64* %st_ino, align 8, !dbg !12412, !ctir !498
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12412
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12412, !ctir !1309
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12412, !ctir !498
  %cmp = icmp eq i64 %5, %7, !dbg !12412
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12412

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12412
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12412, !ctir !1309
  %9 = load i64, i64* %st_dev, align 8, !dbg !12412, !ctir !500
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12412
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12412, !ctir !1309
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12412, !ctir !500
  %cmp3 = icmp eq i64 %9, %11, !dbg !12412
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12413

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12414
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12415, !ctir !1309
  %13 = load i8*, i8** %name, align 8, !dbg !12415, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12416
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12417, !ctir !1309
  %15 = load i8*, i8** %name4, align 8, !dbg !12417, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12418
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12419
  %17 = zext i1 %16 to i64, !dbg !12420
  %cond = select i1 %16, i32 1, i32 0, !dbg !12420
  %tobool = icmp ne i32 %cond, 0, !dbg !12420
  ret i1 %tobool, !dbg !12421
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #10 !dbg !12422 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1308
  %b = alloca %struct.F_triple*, align 8, !ctir !1308
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12427, metadata !DIExpression()), !dbg !12428
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12429
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12429
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12428
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12430, metadata !DIExpression()), !dbg !12431
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12432
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12432
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12431
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12433
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12433, !ctir !1309
  %5 = load i64, i64* %st_ino, align 8, !dbg !12433, !ctir !498
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12433
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12433, !ctir !1309
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12433, !ctir !498
  %cmp = icmp eq i64 %5, %7, !dbg !12433
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12433

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12433
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12433, !ctir !1309
  %9 = load i64, i64* %st_dev, align 8, !dbg !12433, !ctir !500
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12433
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12433, !ctir !1309
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12433, !ctir !500
  %cmp3 = icmp eq i64 %9, %11, !dbg !12433
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12434

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12435
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12435, !ctir !1309
  %13 = load i8*, i8** %name, align 8, !dbg !12435, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12435
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12435, !ctir !1309
  %15 = load i8*, i8** %name4, align 8, !dbg !12435, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12435
  %cmp5 = icmp eq i32 %call, 0, !dbg !12435
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12436
  %17 = zext i1 %16 to i64, !dbg !12437
  %cond = select i1 %16, i32 1, i32 0, !dbg !12437
  %tobool = icmp ne i32 %cond, 0, !dbg !12437
  ret i1 %tobool, !dbg !12438
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12439 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1315
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12440, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12442, metadata !DIExpression()), !dbg !12443
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12444
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12444
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12443
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12445
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12446, !ctir !1310
  %3 = load i8*, i8** %name, align 8, !dbg !12446, !ctir !9
  call void @free(i8* %3) #9, !dbg !12447
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12448
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12448
  call void @free(i8* %5) #9, !dbg !12449
  ret void, !dbg !12450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mkancesdirs(i8* %file, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_dir, i8* %make_dir_arg) #4 !dbg !12451 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_dir.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %make_dir_arg.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8, !ctir !9
  %component = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  %c = alloca i8, align 1, !ctir !10
  %made_dir = alloca i8, align 1, !ctir !142
  %make_dir_errno = alloca i32, align 4, !ctir !7
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %chdir_result = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !12457, metadata !DIExpression()), !dbg !12458
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12459, metadata !DIExpression()), !dbg !12460
  store i32 (i8*, i8*, i8*)* %make_dir, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_dir.addr, metadata !12461, metadata !DIExpression()), !dbg !12462
  store i8* %make_dir_arg, i8** %make_dir_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %make_dir_arg.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !12465, metadata !DIExpression()), !dbg !12466
  store i8* null, i8** %sep, align 8, !dbg !12466
  call void @llvm.dbg.declare(metadata i8** %component, metadata !12467, metadata !DIExpression()), !dbg !12468
  %0 = load i8*, i8** %file.addr, align 8, !dbg !12469
  store i8* %0, i8** %component, align 8, !dbg !12468
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12470, metadata !DIExpression()), !dbg !12471
  %1 = load i8*, i8** %file.addr, align 8, !dbg !12472
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !12473, !ctir !10
  store i8* %add.ptr, i8** %p, align 8, !dbg !12471
  call void @llvm.dbg.declare(metadata i8* %c, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata i8* %made_dir, metadata !12476, metadata !DIExpression()), !dbg !12477
  store i8 0, i8* %made_dir, align 1, !dbg !12477
  br label %while.cond, !dbg !12478

while.cond:                                       ; preds = %if.end69, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !12479
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !12479, !ctir !10
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12479
  %3 = load i8, i8* %2, align 1, !dbg !12480, !ctir !10
  store i8 %3, i8* %c, align 1, !dbg !12481
  %tobool = icmp ne i8 %3, 0, !dbg !12478
  br i1 %tobool, label %while.body, label %while.end, !dbg !12478

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !12482
  %5 = load i8, i8* %4, align 1, !dbg !12482, !ctir !10
  %conv = sext i8 %5 to i32, !dbg !12482
  %cmp = icmp eq i32 %conv, 47, !dbg !12482
  br i1 %cmp, label %if.then, label %if.else, !dbg !12484

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !12485
  %conv2 = sext i8 %6 to i32, !dbg !12485
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !12485
  br i1 %cmp3, label %if.end, label %if.then5, !dbg !12488

if.then5:                                         ; preds = %if.then
  %7 = load i8*, i8** %p, align 8, !dbg !12489
  store i8* %7, i8** %sep, align 8, !dbg !12490
  br label %if.end, !dbg !12491

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end69, !dbg !12492

if.else:                                          ; preds = %while.body
  %8 = load i8, i8* %c, align 1, !dbg !12493
  %conv6 = sext i8 %8 to i32, !dbg !12493
  %cmp7 = icmp eq i32 %conv6, 47, !dbg !12493
  br i1 %cmp7, label %land.lhs.true, label %if.end68, !dbg !12495

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %p, align 8, !dbg !12496
  %10 = load i8, i8* %9, align 1, !dbg !12497, !ctir !10
  %conv9 = sext i8 %10 to i32, !dbg !12497
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !12497
  br i1 %tobool10, label %land.lhs.true11, label %if.end68, !dbg !12498

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %sep, align 8, !dbg !12499
  %tobool12 = icmp ne i8* %11, null, !dbg !12499
  br i1 %tobool12, label %if.then13, label %if.end68, !dbg !12500

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load i8*, i8** %sep, align 8, !dbg !12501
  %13 = load i8*, i8** %component, align 8, !dbg !12504
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !12505
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !12505
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12505
  %cmp14 = icmp eq i64 %sub.ptr.sub, 1, !dbg !12506
  br i1 %cmp14, label %land.lhs.true16, label %if.then20, !dbg !12507

land.lhs.true16:                                  ; preds = %if.then13
  %14 = load i8*, i8** %component, align 8, !dbg !12508
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12508, !ctir !9
  %15 = load i8, i8* %arrayidx, align 1, !dbg !12508
  %conv17 = sext i8 %15 to i32, !dbg !12508
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !12509
  br i1 %cmp18, label %if.end67, label %if.then20, !dbg !12510

if.then20:                                        ; preds = %land.lhs.true16, %if.then13
  call void @llvm.dbg.declare(metadata i32* %make_dir_errno, metadata !12511, metadata !DIExpression()), !dbg !12513
  store i32 0, i32* %make_dir_errno, align 4, !dbg !12513
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i32 0, i32* %savewd_chdir_options, align 4, !dbg !12515
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12516, metadata !DIExpression()), !dbg !12517
  %16 = load i8*, i8** %sep, align 8, !dbg !12518
  store i8 0, i8* %16, align 1, !dbg !12519, !ctir !10
  %17 = load i8*, i8** %sep, align 8, !dbg !12520
  %18 = load i8*, i8** %component, align 8, !dbg !12522
  %sub.ptr.lhs.cast21 = ptrtoint i8* %17 to i64, !dbg !12523
  %sub.ptr.rhs.cast22 = ptrtoint i8* %18 to i64, !dbg !12523
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !12523
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !12524
  br i1 %cmp24, label %land.lhs.true26, label %if.else37, !dbg !12525

land.lhs.true26:                                  ; preds = %if.then20
  %19 = load i8*, i8** %component, align 8, !dbg !12526
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !12526, !ctir !9
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !12526
  %conv28 = sext i8 %20 to i32, !dbg !12526
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !12527
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !12528

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %21 = load i8*, i8** %component, align 8, !dbg !12529
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12529, !ctir !9
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !12529
  %conv33 = sext i8 %22 to i32, !dbg !12529
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !12530
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !12531

if.then36:                                        ; preds = %land.lhs.true31
  store i8 0, i8* %made_dir, align 1, !dbg !12532
  br label %if.end44, !dbg !12533

if.else37:                                        ; preds = %land.lhs.true31, %land.lhs.true26, %if.then20
  %23 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !dbg !12534
  %24 = load i8*, i8** %file.addr, align 8, !dbg !12536
  %25 = load i8*, i8** %component, align 8, !dbg !12537
  %26 = load i8*, i8** %make_dir_arg.addr, align 8, !dbg !12538
  %call = call i32 %23(i8* %24, i8* %25, i8* %26), !dbg !12534
  %cmp38 = icmp slt i32 %call, 0, !dbg !12539
  br i1 %cmp38, label %if.then40, label %if.else42, !dbg !12540

if.then40:                                        ; preds = %if.else37
  %call41 = call i32* @__errno_location() #16, !dbg !12541
  %27 = load i32, i32* %call41, align 4, !dbg !12541, !ctir !7
  store i32 %27, i32* %make_dir_errno, align 4, !dbg !12542
  br label %if.end43, !dbg !12543

if.else42:                                        ; preds = %if.else37
  store i8 1, i8* %made_dir, align 1, !dbg !12544
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  %28 = load i8, i8* %made_dir, align 1, !dbg !12545
  %tobool45 = trunc i8 %28 to i1, !dbg !12545
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !12547

if.then46:                                        ; preds = %if.end44
  %29 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12548
  %or = or i32 %29, 1, !dbg !12548
  store i32 %or, i32* %savewd_chdir_options, align 4, !dbg !12548
  br label %if.end47, !dbg !12549

if.end47:                                         ; preds = %if.then46, %if.end44
  %30 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12550
  %31 = load i8*, i8** %component, align 8, !dbg !12551
  %32 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12552
  %call48 = call i32 @savewd_chdir(%struct.savewd* %30, i8* %31, i32 %32, i32* null), !dbg !12553
  store i32 %call48, i32* %chdir_result, align 4, !dbg !12554
  %33 = load i32, i32* %chdir_result, align 4, !dbg !12555
  %cmp49 = icmp ne i32 %33, -1, !dbg !12557
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !12558

if.then51:                                        ; preds = %if.end47
  %34 = load i8*, i8** %sep, align 8, !dbg !12559
  store i8 47, i8* %34, align 1, !dbg !12560, !ctir !10
  br label %if.end52, !dbg !12561

if.end52:                                         ; preds = %if.then51, %if.end47
  %35 = load i32, i32* %chdir_result, align 4, !dbg !12562
  %cmp53 = icmp ne i32 %35, 0, !dbg !12564
  br i1 %cmp53, label %if.then55, label %if.end66, !dbg !12565

if.then55:                                        ; preds = %if.end52
  %36 = load i32, i32* %make_dir_errno, align 4, !dbg !12566
  %cmp56 = icmp ne i32 %36, 0, !dbg !12569
  br i1 %cmp56, label %land.lhs.true58, label %if.end64, !dbg !12570

land.lhs.true58:                                  ; preds = %if.then55
  %call59 = call i32* @__errno_location() #16, !dbg !12571
  %37 = load i32, i32* %call59, align 4, !dbg !12571, !ctir !7
  %cmp60 = icmp eq i32 %37, 2, !dbg !12572
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !12573

if.then62:                                        ; preds = %land.lhs.true58
  %38 = load i32, i32* %make_dir_errno, align 4, !dbg !12574
  %call63 = call i32* @__errno_location() #16, !dbg !12575
  store i32 %38, i32* %call63, align 4, !dbg !12576, !ctir !7
  br label %if.end64, !dbg !12575

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %39 = load i32, i32* %chdir_result, align 4, !dbg !12577
  %conv65 = sext i32 %39 to i64, !dbg !12577
  store i64 %conv65, i64* %retval, align 8, !dbg !12578
  br label %return, !dbg !12578

if.end66:                                         ; preds = %if.end52
  br label %if.end67, !dbg !12579

if.end67:                                         ; preds = %if.end66, %land.lhs.true16
  %40 = load i8*, i8** %p, align 8, !dbg !12580
  store i8* %40, i8** %component, align 8, !dbg !12581
  br label %if.end68, !dbg !12582

if.end68:                                         ; preds = %if.end67, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  br label %while.cond, !dbg !12478, !llvm.loop !12583

while.end:                                        ; preds = %while.cond
  %41 = load i8*, i8** %component, align 8, !dbg !12585
  %42 = load i8*, i8** %file.addr, align 8, !dbg !12586
  %sub.ptr.lhs.cast70 = ptrtoint i8* %41 to i64, !dbg !12587
  %sub.ptr.rhs.cast71 = ptrtoint i8* %42 to i64, !dbg !12587
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !12587
  store i64 %sub.ptr.sub72, i64* %retval, align 8, !dbg !12588
  br label %return, !dbg !12588

return:                                           ; preds = %while.end, %if.end64
  %43 = load i64, i64* %retval, align 8, !dbg !12589
  ret i64 %43, !dbg !12589
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @make_dir_parents(i8* %dir, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_ancestor, i8* %options, i32 %mode, void (i8*, i8*)* %announce, i32 %mode_bits, i32 %owner, i32 %group, i1 zeroext %preserve_existing) #4 !dbg !12590 {
entry:
  %retval = alloca i1, align 1
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_ancestor.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %announce.addr = alloca void (i8*, i8*)*, align 8
  %mode_bits.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %preserve_existing.addr = alloca i8, align 1
  %mkdir_errno = alloca i32, align 4, !ctir !7
  %prefix_len = alloca i64, align 8, !ctir !627
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %keep_owner = alloca i8, align 1, !ctir !142
  %keep_special_mode_bits = alloca i8, align 1, !ctir !142
  %mkdir_mode = alloca i32, align 4, !ctir !139
  %umask_must_be_ok = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !12596
  %open_result = alloca [2 x i32], align 4, !ctir !1344
  %chdir_result = alloca i32, align 4, !ctir !7
  %chdir_ok = alloca i8, align 1, !ctir !142
  %subdir = alloca i8*, align 8, !ctir !183
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12619, metadata !DIExpression()), !dbg !12620
  store i32 (i8*, i8*, i8*)* %make_ancestor, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_ancestor.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !12623, metadata !DIExpression()), !dbg !12624
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12625, metadata !DIExpression()), !dbg !12626
  store void (i8*, i8*)* %announce, void (i8*, i8*)** %announce.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %announce.addr, metadata !12627, metadata !DIExpression()), !dbg !12628
  store i32 %mode_bits, i32* %mode_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !12629, metadata !DIExpression()), !dbg !12630
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !12631, metadata !DIExpression()), !dbg !12632
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !12633, metadata !DIExpression()), !dbg !12634
  %frombool = zext i1 %preserve_existing to i8
  store i8 %frombool, i8* %preserve_existing.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve_existing.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %mkdir_errno, metadata !12637, metadata !DIExpression()), !dbg !12638
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !12639
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !12639, !ctir !9
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12639
  %conv = sext i8 %1 to i32, !dbg !12639
  %cmp = icmp eq i32 %conv, 47, !dbg !12639
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12639

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12639

cond.false:                                       ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12640
  %call = call i32 @savewd_errno(%struct.savewd* %2) #14, !dbg !12641
  br label %cond.end, !dbg !12639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !12639
  store i32 %cond, i32* %mkdir_errno, align 4, !dbg !12638
  %3 = load i32, i32* %mkdir_errno, align 4, !dbg !12642
  %cmp2 = icmp eq i32 %3, 0, !dbg !12644
  br i1 %cmp2, label %if.then, label %if.end140, !dbg !12645

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !12646, metadata !DIExpression()), !dbg !12648
  store i64 0, i64* %prefix_len, align 8, !dbg !12648
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12649, metadata !DIExpression()), !dbg !12650
  store i32 2, i32* %savewd_chdir_options, align 4, !dbg !12650
  %4 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12651
  %tobool = icmp ne i32 (i8*, i8*, i8*)* %4, null, !dbg !12651
  br i1 %tobool, label %if.then4, label %if.end14, !dbg !12653

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !12654
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12656
  %7 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12657
  %8 = load i8*, i8** %options.addr, align 8, !dbg !12658
  %call5 = call i64 @mkancesdirs(i8* %5, %struct.savewd* %6, i32 (i8*, i8*, i8*)* %7, i8* %8), !dbg !12659
  store i64 %call5, i64* %prefix_len, align 8, !dbg !12660
  %9 = load i64, i64* %prefix_len, align 8, !dbg !12661
  %cmp6 = icmp slt i64 %9, 0, !dbg !12663
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !12664

if.then8:                                         ; preds = %if.then4
  %10 = load i64, i64* %prefix_len, align 8, !dbg !12665
  %cmp9 = icmp slt i64 %10, -1, !dbg !12668
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !12669

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !12670
  br label %return, !dbg !12670

if.end:                                           ; preds = %if.then8
  %call12 = call i32* @__errno_location() #16, !dbg !12671
  %11 = load i32, i32* %call12, align 4, !dbg !12671, !ctir !7
  store i32 %11, i32* %mkdir_errno, align 4, !dbg !12672
  br label %if.end13, !dbg !12673

if.end13:                                         ; preds = %if.end, %if.then4
  br label %if.end14, !dbg !12674

if.end14:                                         ; preds = %if.end13, %if.then
  %12 = load i64, i64* %prefix_len, align 8, !dbg !12675
  %cmp15 = icmp sle i64 0, %12, !dbg !12677
  br i1 %cmp15, label %if.then17, label %if.end139, !dbg !12678

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %keep_owner, metadata !12679, metadata !DIExpression()), !dbg !12681
  %13 = load i32, i32* %owner.addr, align 4, !dbg !12682
  %cmp18 = icmp eq i32 %13, -1, !dbg !12683
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !12684

land.rhs:                                         ; preds = %if.then17
  %14 = load i32, i32* %group.addr, align 4, !dbg !12685
  %cmp20 = icmp eq i32 %14, -1, !dbg !12686
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then17
  %15 = phi i1 [ false, %if.then17 ], [ %cmp20, %land.rhs ], !dbg !12687
  %frombool22 = zext i1 %15 to i8, !dbg !12681
  store i8 %frombool22, i8* %keep_owner, align 1, !dbg !12681
  call void @llvm.dbg.declare(metadata i8* %keep_special_mode_bits, metadata !12688, metadata !DIExpression()), !dbg !12689
  %16 = load i32, i32* %mode_bits.addr, align 4, !dbg !12690
  %and = and i32 %16, 3072, !dbg !12691
  %17 = load i32, i32* %mode.addr, align 4, !dbg !12692
  %and23 = and i32 %17, 512, !dbg !12693
  %or = or i32 %and, %and23, !dbg !12694
  %cmp24 = icmp eq i32 %or, 0, !dbg !12695
  %frombool26 = zext i1 %cmp24 to i8, !dbg !12689
  store i8 %frombool26, i8* %keep_special_mode_bits, align 1, !dbg !12689
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode, metadata !12696, metadata !DIExpression()), !dbg !12697
  %18 = load i32, i32* %mode.addr, align 4, !dbg !12698
  store i32 %18, i32* %mkdir_mode, align 4, !dbg !12697
  %19 = load i8, i8* %keep_owner, align 1, !dbg !12699
  %tobool27 = trunc i8 %19 to i1, !dbg !12699
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !12701

if.then28:                                        ; preds = %land.end
  %20 = load i32, i32* %mkdir_mode, align 4, !dbg !12702
  %and29 = and i32 %20, -64, !dbg !12702
  store i32 %and29, i32* %mkdir_mode, align 4, !dbg !12702
  br label %if.end34, !dbg !12703

if.else:                                          ; preds = %land.end
  %21 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !12704
  %tobool30 = trunc i8 %21 to i1, !dbg !12704
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !12706

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %mkdir_mode, align 4, !dbg !12707
  %and32 = and i32 %22, -19, !dbg !12707
  store i32 %and32, i32* %mkdir_mode, align 4, !dbg !12707
  br label %if.end33, !dbg !12708

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !12709
  %24 = load i64, i64* %prefix_len, align 8, !dbg !12711
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !12712, !ctir !10
  %25 = load i32, i32* %mkdir_mode, align 4, !dbg !12713
  %call35 = call i32 @mkdir(i8* %add.ptr, i32 %25) #9, !dbg !12714
  %cmp36 = icmp eq i32 %call35, 0, !dbg !12715
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !12716

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8* %umask_must_be_ok, metadata !12717, metadata !DIExpression()), !dbg !12719
  %26 = load i32, i32* %mode.addr, align 4, !dbg !12720
  %27 = load i32, i32* %mode_bits.addr, align 4, !dbg !12721
  %and39 = and i32 %26, %27, !dbg !12722
  %and40 = and i32 %and39, 511, !dbg !12723
  %cmp41 = icmp eq i32 %and40, 0, !dbg !12724
  %frombool43 = zext i1 %cmp41 to i8, !dbg !12719
  store i8 %frombool43, i8* %umask_must_be_ok, align 1, !dbg !12719
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %announce.addr, align 8, !dbg !12725
  %29 = load i8*, i8** %dir.addr, align 8, !dbg !12726
  %30 = load i8*, i8** %options.addr, align 8, !dbg !12727
  call void %28(i8* %29, i8* %30), !dbg !12725
  %31 = load i8, i8* %keep_owner, align 1, !dbg !12728
  %tobool44 = trunc i8 %31 to i1, !dbg !12728
  %conv45 = zext i1 %tobool44 to i32, !dbg !12728
  %32 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !12729
  %tobool46 = trunc i8 %32 to i1, !dbg !12729
  %conv47 = zext i1 %tobool46 to i32, !dbg !12729
  %and48 = and i32 %conv45, %conv47, !dbg !12730
  %33 = load i8, i8* %umask_must_be_ok, align 1, !dbg !12731
  %tobool49 = trunc i8 %33 to i1, !dbg !12731
  %conv50 = zext i1 %tobool49 to i32, !dbg !12731
  %and51 = and i32 %and48, %conv50, !dbg !12732
  %tobool52 = icmp ne i32 %and51, 0, !dbg !12733
  %frombool53 = zext i1 %tobool52 to i8, !dbg !12734
  store i8 %frombool53, i8* %preserve_existing.addr, align 1, !dbg !12734
  %34 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12735
  %or54 = or i32 %34, 1, !dbg !12735
  store i32 %or54, i32* %savewd_chdir_options, align 4, !dbg !12735
  br label %if.end57, !dbg !12736

if.else55:                                        ; preds = %if.end34
  %call56 = call i32* @__errno_location() #16, !dbg !12737
  %35 = load i32, i32* %call56, align 4, !dbg !12737, !ctir !7
  store i32 %35, i32* %mkdir_errno, align 4, !dbg !12739
  store i32 -1, i32* %mkdir_mode, align 4, !dbg !12740
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then38
  %36 = load i8, i8* %preserve_existing.addr, align 1, !dbg !12741
  %tobool58 = trunc i8 %36 to i1, !dbg !12741
  br i1 %tobool58, label %if.then59, label %if.else96, !dbg !12743

if.then59:                                        ; preds = %if.end57
  %37 = load i32, i32* %mkdir_errno, align 4, !dbg !12744
  %cmp60 = icmp eq i32 %37, 0, !dbg !12747
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !12748

if.then62:                                        ; preds = %if.then59
  store i1 true, i1* %retval, align 1, !dbg !12749
  br label %return, !dbg !12749

if.end63:                                         ; preds = %if.then59
  %38 = load i32, i32* %mkdir_errno, align 4, !dbg !12750
  %cmp64 = icmp ne i32 %38, 2, !dbg !12752
  br i1 %cmp64, label %land.lhs.true, label %if.end95, !dbg !12753

land.lhs.true:                                    ; preds = %if.end63
  %39 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12754
  %tobool66 = icmp ne i32 (i8*, i8*, i8*)* %39, null, !dbg !12754
  br i1 %tobool66, label %if.then67, label %if.end95, !dbg !12755

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !12756, metadata !DIExpression()), !dbg !12758
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !12759
  %41 = load i64, i64* %prefix_len, align 8, !dbg !12761
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !12762, !ctir !10
  %call69 = call i32 @stat(i8* %add.ptr68, %struct.stat* %st) #9, !dbg !12763
  %cmp70 = icmp eq i32 %call69, 0, !dbg !12764
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !12765

if.then72:                                        ; preds = %if.then67
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12766, !ctir !12596
  %42 = load i32, i32* %st_mode, align 8, !dbg !12766, !ctir !140
  %and73 = and i32 %42, 61440, !dbg !12766
  %cmp74 = icmp eq i32 %and73, 16384, !dbg !12766
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !12769

if.then76:                                        ; preds = %if.then72
  store i1 true, i1* %retval, align 1, !dbg !12770
  br label %return, !dbg !12770

if.end77:                                         ; preds = %if.then72
  br label %if.end94, !dbg !12771

if.else78:                                        ; preds = %if.then67
  %43 = load i32, i32* %mkdir_errno, align 4, !dbg !12772
  %cmp79 = icmp eq i32 %43, 17, !dbg !12774
  br i1 %cmp79, label %land.lhs.true81, label %if.end93, !dbg !12775

land.lhs.true81:                                  ; preds = %if.else78
  %call82 = call i32* @__errno_location() #16, !dbg !12776
  %44 = load i32, i32* %call82, align 4, !dbg !12776, !ctir !7
  %cmp83 = icmp ne i32 %44, 2, !dbg !12777
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !12778

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %call86 = call i32* @__errno_location() #16, !dbg !12779
  %45 = load i32, i32* %call86, align 4, !dbg !12779, !ctir !7
  %cmp87 = icmp ne i32 %45, 20, !dbg !12780
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !12781

if.then89:                                        ; preds = %land.lhs.true85
  %call90 = call i32* @__errno_location() #16, !dbg !12782
  %46 = load i32, i32* %call90, align 4, !dbg !12782, !ctir !7
  %call91 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i64 0, i64 0)) #9, !dbg !12784
  %47 = load i8*, i8** %dir.addr, align 8, !dbg !12785
  %call92 = call i8* @quote(i8* %47), !dbg !12786
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %46, i8* %call91, i8* %call92), !dbg !12787
  store i1 false, i1* %retval, align 1, !dbg !12788
  br label %return, !dbg !12788

if.end93:                                         ; preds = %land.lhs.true85, %land.lhs.true81, %if.else78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end77
  br label %if.end95, !dbg !12789

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end63
  br label %if.end138, !dbg !12790

if.else96:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata [2 x i32]* %open_result, metadata !12791, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12794, metadata !DIExpression()), !dbg !12795
  %48 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12796
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !12797
  %50 = load i64, i64* %prefix_len, align 8, !dbg !12798
  %add.ptr97 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !12799, !ctir !10
  %51 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12800
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !12801, !ctir !1344
  %call98 = call i32 @savewd_chdir(%struct.savewd* %48, i8* %add.ptr97, i32 %51, i32* %arraydecay), !dbg !12802
  store i32 %call98, i32* %chdir_result, align 4, !dbg !12795
  %52 = load i32, i32* %chdir_result, align 4, !dbg !12803
  %cmp99 = icmp slt i32 %52, -1, !dbg !12805
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !12806

if.then101:                                       ; preds = %if.else96
  store i1 true, i1* %retval, align 1, !dbg !12807
  br label %return, !dbg !12807

if.else102:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata i8* %chdir_ok, metadata !12808, metadata !DIExpression()), !dbg !12810
  %53 = load i32, i32* %chdir_result, align 4, !dbg !12811
  %cmp103 = icmp eq i32 %53, 0, !dbg !12812
  %frombool105 = zext i1 %cmp103 to i8, !dbg !12810
  store i8 %frombool105, i8* %chdir_ok, align 1, !dbg !12810
  call void @llvm.dbg.declare(metadata i8** %subdir, metadata !12813, metadata !DIExpression()), !dbg !12814
  %54 = load i8, i8* %chdir_ok, align 1, !dbg !12815
  %tobool106 = trunc i8 %54 to i1, !dbg !12815
  br i1 %tobool106, label %cond.true108, label %cond.false109, !dbg !12815

cond.true108:                                     ; preds = %if.else102
  br label %cond.end111, !dbg !12815

cond.false109:                                    ; preds = %if.else102
  %55 = load i8*, i8** %dir.addr, align 8, !dbg !12816
  %56 = load i64, i64* %prefix_len, align 8, !dbg !12817
  %add.ptr110 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !12818, !ctir !10
  br label %cond.end111, !dbg !12815

cond.end111:                                      ; preds = %cond.false109, %cond.true108
  %cond112 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.297, i64 0, i64 0), %cond.true108 ], [ %add.ptr110, %cond.false109 ], !dbg !12815
  store i8* %cond112, i8** %subdir, align 8, !dbg !12814
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !12819, !ctir !1344
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !12819
  %58 = load i8*, i8** %subdir, align 8, !dbg !12821
  %59 = load i32, i32* %mkdir_mode, align 4, !dbg !12822
  %60 = load i32, i32* %owner.addr, align 4, !dbg !12823
  %61 = load i32, i32* %group.addr, align 4, !dbg !12824
  %62 = load i32, i32* %mode.addr, align 4, !dbg !12825
  %63 = load i32, i32* %mode_bits.addr, align 4, !dbg !12826
  %call114 = call i32 @dirchownmod(i32 %57, i8* %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !12827
  %cmp115 = icmp eq i32 %call114, 0, !dbg !12828
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !12829

if.then117:                                       ; preds = %cond.end111
  store i1 true, i1* %retval, align 1, !dbg !12830
  br label %return, !dbg !12830

if.end118:                                        ; preds = %cond.end111
  %64 = load i32, i32* %mkdir_errno, align 4, !dbg !12831
  %cmp119 = icmp eq i32 %64, 0, !dbg !12833
  br i1 %cmp119, label %if.then129, label %lor.lhs.false, !dbg !12834

lor.lhs.false:                                    ; preds = %if.end118
  %65 = load i32, i32* %mkdir_errno, align 4, !dbg !12835
  %cmp121 = icmp ne i32 %65, 2, !dbg !12836
  br i1 %cmp121, label %land.lhs.true123, label %if.end136, !dbg !12837

land.lhs.true123:                                 ; preds = %lor.lhs.false
  %66 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !12838
  %tobool124 = icmp ne i32 (i8*, i8*, i8*)* %66, null, !dbg !12838
  br i1 %tobool124, label %land.lhs.true125, label %if.end136, !dbg !12839

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %call126 = call i32* @__errno_location() #16, !dbg !12840
  %67 = load i32, i32* %call126, align 4, !dbg !12840, !ctir !7
  %cmp127 = icmp ne i32 %67, 20, !dbg !12841
  br i1 %cmp127, label %if.then129, label %if.end136, !dbg !12842

if.then129:                                       ; preds = %land.lhs.true125, %if.end118
  %call130 = call i32* @__errno_location() #16, !dbg !12843
  %68 = load i32, i32* %call130, align 4, !dbg !12843, !ctir !7
  %69 = load i8, i8* %keep_owner, align 1, !dbg !12845
  %tobool131 = trunc i8 %69 to i1, !dbg !12845
  %70 = zext i1 %tobool131 to i64, !dbg !12845
  %cond133 = select i1 %tobool131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.298, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.299, i64 0, i64 0), !dbg !12845
  %call134 = call i8* @gettext(i8* %cond133) #9, !dbg !12845
  %71 = load i8*, i8** %dir.addr, align 8, !dbg !12846
  %call135 = call i8* @quote(i8* %71), !dbg !12847
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call134, i8* %call135), !dbg !12848
  store i1 false, i1* %retval, align 1, !dbg !12849
  br label %return, !dbg !12849

if.end136:                                        ; preds = %land.lhs.true125, %land.lhs.true123, %lor.lhs.false
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end95
  br label %if.end139, !dbg !12850

if.end139:                                        ; preds = %if.end138, %if.end14
  br label %if.end140, !dbg !12851

if.end140:                                        ; preds = %if.end139, %cond.end
  %72 = load i32, i32* %mkdir_errno, align 4, !dbg !12852
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.300, i64 0, i64 0)) #9, !dbg !12853
  %73 = load i8*, i8** %dir.addr, align 8, !dbg !12854
  %call142 = call i8* @quote(i8* %73), !dbg !12855
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* %call141, i8* %call142), !dbg !12856
  store i1 false, i1* %retval, align 1, !dbg !12857
  br label %return, !dbg !12857

return:                                           ; preds = %if.end140, %if.then129, %if.then117, %if.then101, %if.then89, %if.then76, %if.then62, %if.then11
  %74 = load i1, i1* %retval, align 1, !dbg !12858
  ret i1 %74, !dbg !12858
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_compile(i8* %mode_string) #4 !dbg !12859 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %mode_string.addr = alloca i8*, align 8
  %mc = alloca %struct.mode_change*, align 8, !ctir !1348
  %used = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !183
  %octal_mode = alloca i32, align 4, !ctir !70
  %mode = alloca i32, align 4, !ctir !139
  %mentioned = alloca i32, align 4, !ctir !139
  %needed = alloca i64, align 8, !ctir !55
  %affected = alloca i32, align 4, !ctir !139
  %op = alloca i8, align 1, !ctir !10
  %value = alloca i32, align 4, !ctir !139
  %mentioned51 = alloca i32, align 4, !ctir !139
  %flag = alloca i8, align 1, !ctir !10
  %change = alloca %struct.mode_change*, align 8, !ctir !1348
  %octal_mode54 = alloca i32, align 4, !ctir !70
  store i8* %mode_string, i8** %mode_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode_string.addr, metadata !12862, metadata !DIExpression()), !dbg !12863
  call void @llvm.dbg.declare(metadata %struct.mode_change** %mc, metadata !12864, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.declare(metadata i64* %used, metadata !12866, metadata !DIExpression()), !dbg !12867
  store i64 0, i64* %used, align 8, !dbg !12867
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12868, metadata !DIExpression()), !dbg !12869
  %0 = load i8*, i8** %mode_string.addr, align 8, !dbg !12870
  %1 = load i8, i8* %0, align 1, !dbg !12872, !ctir !184
  %conv = sext i8 %1 to i32, !dbg !12872
  %cmp = icmp sle i32 48, %conv, !dbg !12873
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !12874

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %mode_string.addr, align 8, !dbg !12875
  %3 = load i8, i8* %2, align 1, !dbg !12876, !ctir !184
  %conv2 = sext i8 %3 to i32, !dbg !12876
  %cmp3 = icmp slt i32 %conv2, 56, !dbg !12877
  br i1 %cmp3, label %if.then, label %if.end21, !dbg !12878

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %octal_mode, metadata !12879, metadata !DIExpression()), !dbg !12881
  store i32 0, i32* %octal_mode, align 4, !dbg !12881
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12882, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.declare(metadata i32* %mentioned, metadata !12884, metadata !DIExpression()), !dbg !12885
  %4 = load i8*, i8** %mode_string.addr, align 8, !dbg !12886
  store i8* %4, i8** %p, align 8, !dbg !12887
  br label %do.body, !dbg !12888

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %octal_mode, align 4, !dbg !12889
  %mul = mul i32 8, %5, !dbg !12891
  %6 = load i8*, i8** %p, align 8, !dbg !12892
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !12892, !ctir !184
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12892
  %7 = load i8, i8* %6, align 1, !dbg !12893, !ctir !184
  %conv5 = sext i8 %7 to i32, !dbg !12893
  %add = add i32 %mul, %conv5, !dbg !12894
  %sub = sub i32 %add, 48, !dbg !12895
  store i32 %sub, i32* %octal_mode, align 4, !dbg !12896
  %8 = load i32, i32* %octal_mode, align 4, !dbg !12897
  %cmp6 = icmp ult i32 4095, %8, !dbg !12899
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !12900

if.then8:                                         ; preds = %do.body
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !12901
  br label %return, !dbg !12901

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !12902

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !12903
  %10 = load i8, i8* %9, align 1, !dbg !12904, !ctir !184
  %conv9 = sext i8 %10 to i32, !dbg !12904
  %cmp10 = icmp sle i32 48, %conv9, !dbg !12905
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !12906

land.rhs:                                         ; preds = %do.cond
  %11 = load i8*, i8** %p, align 8, !dbg !12907
  %12 = load i8, i8* %11, align 1, !dbg !12908, !ctir !184
  %conv12 = sext i8 %12 to i32, !dbg !12908
  %cmp13 = icmp slt i32 %conv12, 56, !dbg !12909
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %13 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !12910
  br i1 %13, label %do.body, label %do.end, !dbg !12902, !llvm.loop !12911

do.end:                                           ; preds = %land.end
  %14 = load i8*, i8** %p, align 8, !dbg !12913
  %15 = load i8, i8* %14, align 1, !dbg !12915, !ctir !184
  %tobool = icmp ne i8 %15, 0, !dbg !12915
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !12916

if.then15:                                        ; preds = %do.end
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !12917
  br label %return, !dbg !12917

if.end16:                                         ; preds = %do.end
  %16 = load i32, i32* %octal_mode, align 4, !dbg !12918
  %call = call i32 @octal_to_mode(i32 %16), !dbg !12919
  store i32 %call, i32* %mode, align 4, !dbg !12920
  %17 = load i8*, i8** %p, align 8, !dbg !12921
  %18 = load i8*, i8** %mode_string.addr, align 8, !dbg !12922
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !12923
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !12923
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12923
  %cmp17 = icmp slt i64 %sub.ptr.sub, 5, !dbg !12924
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !12921

cond.true:                                        ; preds = %if.end16
  %19 = load i32, i32* %mode, align 4, !dbg !12925
  %and = and i32 %19, 3072, !dbg !12926
  %or = or i32 %and, 512, !dbg !12927
  %or19 = or i32 %or, 511, !dbg !12928
  br label %cond.end, !dbg !12921

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !12921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ 4095, %cond.false ], !dbg !12921
  store i32 %cond, i32* %mentioned, align 4, !dbg !12929
  %20 = load i32, i32* %mode, align 4, !dbg !12930
  %21 = load i32, i32* %mentioned, align 4, !dbg !12931
  %call20 = call %struct.mode_change* @make_node_op_equals(i32 %20, i32 %21), !dbg !12932
  store %struct.mode_change* %call20, %struct.mode_change** %retval, align 8, !dbg !12933
  br label %return, !dbg !12933

if.end21:                                         ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %needed, metadata !12934, metadata !DIExpression()), !dbg !12936
  store i64 1, i64* %needed, align 8, !dbg !12936
  %22 = load i8*, i8** %mode_string.addr, align 8, !dbg !12937
  store i8* %22, i8** %p, align 8, !dbg !12939
  br label %for.cond, !dbg !12940

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i8*, i8** %p, align 8, !dbg !12941
  %24 = load i8, i8* %23, align 1, !dbg !12943, !ctir !184
  %tobool22 = icmp ne i8 %24, 0, !dbg !12944
  br i1 %tobool22, label %for.body, label %for.end, !dbg !12944

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %p, align 8, !dbg !12945
  %26 = load i8, i8* %25, align 1, !dbg !12946, !ctir !184
  %conv23 = sext i8 %26 to i32, !dbg !12946
  %cmp24 = icmp eq i32 %conv23, 61, !dbg !12947
  br i1 %cmp24, label %lor.end, label %lor.lhs.false, !dbg !12948

lor.lhs.false:                                    ; preds = %for.body
  %27 = load i8*, i8** %p, align 8, !dbg !12949
  %28 = load i8, i8* %27, align 1, !dbg !12950, !ctir !184
  %conv26 = sext i8 %28 to i32, !dbg !12950
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !12951
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !12952

lor.rhs:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** %p, align 8, !dbg !12953
  %30 = load i8, i8* %29, align 1, !dbg !12954, !ctir !184
  %conv29 = sext i8 %30 to i32, !dbg !12954
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !12955
  br label %lor.end, !dbg !12952

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.body
  %31 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp30, %lor.rhs ]
  %lor.ext = zext i1 %31 to i32, !dbg !12952
  %conv32 = sext i32 %lor.ext to i64, !dbg !12956
  %32 = load i64, i64* %needed, align 8, !dbg !12957
  %add33 = add i64 %32, %conv32, !dbg !12957
  store i64 %add33, i64* %needed, align 8, !dbg !12957
  br label %for.inc, !dbg !12958

for.inc:                                          ; preds = %lor.end
  %33 = load i8*, i8** %p, align 8, !dbg !12959
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !12959, !ctir !184
  store i8* %incdec.ptr34, i8** %p, align 8, !dbg !12959
  br label %for.cond, !dbg !12960, !llvm.loop !12961

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %needed, align 8, !dbg !12963
  %call35 = call noalias i8* @xnmalloc(i64 %34, i64 16), !dbg !12964
  %35 = bitcast i8* %call35 to %struct.mode_change*, !dbg !12964
  store %struct.mode_change* %35, %struct.mode_change** %mc, align 8, !dbg !12965
  %36 = load i8*, i8** %mode_string.addr, align 8, !dbg !12966
  store i8* %36, i8** %p, align 8, !dbg !12968
  br label %for.cond36, !dbg !12969

for.cond36:                                       ; preds = %for.inc147, %for.end
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !12970, metadata !DIExpression()), !dbg !12973
  store i32 0, i32* %affected, align 4, !dbg !12973
  br label %for.cond37, !dbg !12974

for.cond37:                                       ; preds = %for.inc47, %for.cond36
  %37 = load i8*, i8** %p, align 8, !dbg !12975
  %38 = load i8, i8* %37, align 1, !dbg !12978, !ctir !184
  %conv38 = sext i8 %38 to i32, !dbg !12978
  switch i32 %conv38, label %sw.default [
    i32 117, label %sw.bb
    i32 103, label %sw.bb40
    i32 111, label %sw.bb42
    i32 97, label %sw.bb44
    i32 61, label %sw.bb46
    i32 43, label %sw.bb46
    i32 45, label %sw.bb46
  ], !dbg !12979

sw.default:                                       ; preds = %for.cond37
  br label %invalid, !dbg !12980

sw.bb:                                            ; preds = %for.cond37
  %39 = load i32, i32* %affected, align 4, !dbg !12982
  %or39 = or i32 %39, 2496, !dbg !12982
  store i32 %or39, i32* %affected, align 4, !dbg !12982
  br label %sw.epilog, !dbg !12983

sw.bb40:                                          ; preds = %for.cond37
  %40 = load i32, i32* %affected, align 4, !dbg !12984
  %or41 = or i32 %40, 1080, !dbg !12984
  store i32 %or41, i32* %affected, align 4, !dbg !12984
  br label %sw.epilog, !dbg !12985

sw.bb42:                                          ; preds = %for.cond37
  %41 = load i32, i32* %affected, align 4, !dbg !12986
  %or43 = or i32 %41, 519, !dbg !12986
  store i32 %or43, i32* %affected, align 4, !dbg !12986
  br label %sw.epilog, !dbg !12987

sw.bb44:                                          ; preds = %for.cond37
  %42 = load i32, i32* %affected, align 4, !dbg !12988
  %or45 = or i32 %42, 4095, !dbg !12988
  store i32 %or45, i32* %affected, align 4, !dbg !12988
  br label %sw.epilog, !dbg !12989

sw.bb46:                                          ; preds = %for.cond37, %for.cond37, %for.cond37
  br label %no_more_affected, !dbg !12990

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb
  br label %for.inc47, !dbg !12991

for.inc47:                                        ; preds = %sw.epilog
  %43 = load i8*, i8** %p, align 8, !dbg !12992
  %incdec.ptr48 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !12992, !ctir !184
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !12992
  br label %for.cond37, !dbg !12993, !llvm.loop !12994

no_more_affected:                                 ; preds = %sw.bb46
  call void @llvm.dbg.label(metadata !12997), !dbg !12998
  br label %do.body49, !dbg !12999

do.body49:                                        ; preds = %lor.end139, %no_more_affected
  call void @llvm.dbg.declare(metadata i8* %op, metadata !13000, metadata !DIExpression()), !dbg !13002
  %44 = load i8*, i8** %p, align 8, !dbg !13003
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !13003, !ctir !184
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !13003
  %45 = load i8, i8* %44, align 1, !dbg !13004, !ctir !184
  store i8 %45, i8* %op, align 1, !dbg !13002
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13005, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.declare(metadata i32* %mentioned51, metadata !13007, metadata !DIExpression()), !dbg !13008
  store i32 0, i32* %mentioned51, align 4, !dbg !13008
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !13009, metadata !DIExpression()), !dbg !13010
  store i8 3, i8* %flag, align 1, !dbg !13010
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !13011, metadata !DIExpression()), !dbg !13012
  %46 = load i8*, i8** %p, align 8, !dbg !13013
  %47 = load i8, i8* %46, align 1, !dbg !13014, !ctir !184
  %conv52 = sext i8 %47 to i32, !dbg !13014
  switch i32 %conv52, label %sw.default92 [
    i32 48, label %sw.bb53
    i32 49, label %sw.bb53
    i32 50, label %sw.bb53
    i32 51, label %sw.bb53
    i32 52, label %sw.bb53
    i32 53, label %sw.bb53
    i32 54, label %sw.bb53
    i32 55, label %sw.bb53
    i32 117, label %sw.bb86
    i32 103, label %sw.bb88
    i32 111, label %sw.bb90
  ], !dbg !13015

sw.bb53:                                          ; preds = %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49
  call void @llvm.dbg.declare(metadata i32* %octal_mode54, metadata !13016, metadata !DIExpression()), !dbg !13019
  store i32 0, i32* %octal_mode54, align 4, !dbg !13019
  br label %do.body55, !dbg !13020

do.body55:                                        ; preds = %land.end73, %sw.bb53
  %48 = load i32, i32* %octal_mode54, align 4, !dbg !13021
  %mul56 = mul i32 8, %48, !dbg !13023
  %49 = load i8*, i8** %p, align 8, !dbg !13024
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !13024, !ctir !184
  store i8* %incdec.ptr57, i8** %p, align 8, !dbg !13024
  %50 = load i8, i8* %49, align 1, !dbg !13025, !ctir !184
  %conv58 = sext i8 %50 to i32, !dbg !13025
  %add59 = add i32 %mul56, %conv58, !dbg !13026
  %sub60 = sub i32 %add59, 48, !dbg !13027
  store i32 %sub60, i32* %octal_mode54, align 4, !dbg !13028
  %51 = load i32, i32* %octal_mode54, align 4, !dbg !13029
  %cmp61 = icmp ult i32 4095, %51, !dbg !13031
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13032

if.then63:                                        ; preds = %do.body55
  br label %invalid, !dbg !13033

if.end64:                                         ; preds = %do.body55
  br label %do.cond65, !dbg !13034

do.cond65:                                        ; preds = %if.end64
  %52 = load i8*, i8** %p, align 8, !dbg !13035
  %53 = load i8, i8* %52, align 1, !dbg !13036, !ctir !184
  %conv66 = sext i8 %53 to i32, !dbg !13036
  %cmp67 = icmp sle i32 48, %conv66, !dbg !13037
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !13038

land.rhs69:                                       ; preds = %do.cond65
  %54 = load i8*, i8** %p, align 8, !dbg !13039
  %55 = load i8, i8* %54, align 1, !dbg !13040, !ctir !184
  %conv70 = sext i8 %55 to i32, !dbg !13040
  %cmp71 = icmp slt i32 %conv70, 56, !dbg !13041
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %do.cond65
  %56 = phi i1 [ false, %do.cond65 ], [ %cmp71, %land.rhs69 ], !dbg !13042
  br i1 %56, label %do.body55, label %do.end74, !dbg !13034, !llvm.loop !13043

do.end74:                                         ; preds = %land.end73
  %57 = load i32, i32* %affected, align 4, !dbg !13045
  %tobool75 = icmp ne i32 %57, 0, !dbg !13045
  br i1 %tobool75, label %if.then83, label %lor.lhs.false76, !dbg !13047

lor.lhs.false76:                                  ; preds = %do.end74
  %58 = load i8*, i8** %p, align 8, !dbg !13048
  %59 = load i8, i8* %58, align 1, !dbg !13049, !ctir !184
  %conv77 = sext i8 %59 to i32, !dbg !13049
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !13049
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !13050

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %60 = load i8*, i8** %p, align 8, !dbg !13051
  %61 = load i8, i8* %60, align 1, !dbg !13052, !ctir !184
  %conv80 = sext i8 %61 to i32, !dbg !13052
  %cmp81 = icmp ne i32 %conv80, 44, !dbg !13053
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13054

if.then83:                                        ; preds = %land.lhs.true79, %do.end74
  br label %invalid, !dbg !13055

if.end84:                                         ; preds = %land.lhs.true79, %lor.lhs.false76
  store i32 4095, i32* %mentioned51, align 4, !dbg !13056
  store i32 4095, i32* %affected, align 4, !dbg !13057
  %62 = load i32, i32* %octal_mode54, align 4, !dbg !13058
  %call85 = call i32 @octal_to_mode(i32 %62), !dbg !13059
  store i32 %call85, i32* %value, align 4, !dbg !13060
  store i8 1, i8* %flag, align 1, !dbg !13061
  br label %sw.epilog110, !dbg !13062

sw.bb86:                                          ; preds = %do.body49
  store i32 448, i32* %value, align 4, !dbg !13063
  %63 = load i8*, i8** %p, align 8, !dbg !13064
  %incdec.ptr87 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13064, !ctir !184
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !13064
  br label %sw.epilog110, !dbg !13065

sw.bb88:                                          ; preds = %do.body49
  store i32 56, i32* %value, align 4, !dbg !13066
  %64 = load i8*, i8** %p, align 8, !dbg !13067
  %incdec.ptr89 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !13067, !ctir !184
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !13067
  br label %sw.epilog110, !dbg !13068

sw.bb90:                                          ; preds = %do.body49
  store i32 7, i32* %value, align 4, !dbg !13069
  %65 = load i8*, i8** %p, align 8, !dbg !13070
  %incdec.ptr91 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13070, !ctir !184
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !13070
  br label %sw.epilog110, !dbg !13071

sw.default92:                                     ; preds = %do.body49
  store i32 0, i32* %value, align 4, !dbg !13072
  store i8 1, i8* %flag, align 1, !dbg !13073
  br label %for.cond93, !dbg !13074

for.cond93:                                       ; preds = %for.inc108, %sw.default92
  %66 = load i8*, i8** %p, align 8, !dbg !13075
  %67 = load i8, i8* %66, align 1, !dbg !13078, !ctir !184
  %conv94 = sext i8 %67 to i32, !dbg !13078
  switch i32 %conv94, label %sw.default106 [
    i32 114, label %sw.bb95
    i32 119, label %sw.bb97
    i32 120, label %sw.bb99
    i32 88, label %sw.bb101
    i32 115, label %sw.bb102
    i32 116, label %sw.bb104
  ], !dbg !13079

sw.bb95:                                          ; preds = %for.cond93
  %68 = load i32, i32* %value, align 4, !dbg !13080
  %or96 = or i32 %68, 292, !dbg !13080
  store i32 %or96, i32* %value, align 4, !dbg !13080
  br label %sw.epilog107, !dbg !13082

sw.bb97:                                          ; preds = %for.cond93
  %69 = load i32, i32* %value, align 4, !dbg !13083
  %or98 = or i32 %69, 146, !dbg !13083
  store i32 %or98, i32* %value, align 4, !dbg !13083
  br label %sw.epilog107, !dbg !13084

sw.bb99:                                          ; preds = %for.cond93
  %70 = load i32, i32* %value, align 4, !dbg !13085
  %or100 = or i32 %70, 73, !dbg !13085
  store i32 %or100, i32* %value, align 4, !dbg !13085
  br label %sw.epilog107, !dbg !13086

sw.bb101:                                         ; preds = %for.cond93
  store i8 2, i8* %flag, align 1, !dbg !13087
  br label %sw.epilog107, !dbg !13088

sw.bb102:                                         ; preds = %for.cond93
  %71 = load i32, i32* %value, align 4, !dbg !13089
  %or103 = or i32 %71, 3072, !dbg !13089
  store i32 %or103, i32* %value, align 4, !dbg !13089
  br label %sw.epilog107, !dbg !13090

sw.bb104:                                         ; preds = %for.cond93
  %72 = load i32, i32* %value, align 4, !dbg !13091
  %or105 = or i32 %72, 512, !dbg !13091
  store i32 %or105, i32* %value, align 4, !dbg !13091
  br label %sw.epilog107, !dbg !13092

sw.default106:                                    ; preds = %for.cond93
  br label %no_more_values, !dbg !13093

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95
  br label %for.inc108, !dbg !13094

for.inc108:                                       ; preds = %sw.epilog107
  %73 = load i8*, i8** %p, align 8, !dbg !13095
  %incdec.ptr109 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !13095, !ctir !184
  store i8* %incdec.ptr109, i8** %p, align 8, !dbg !13095
  br label %for.cond93, !dbg !13096, !llvm.loop !13097

no_more_values:                                   ; preds = %sw.default106
  call void @llvm.dbg.label(metadata !13100), !dbg !13101
  br label %sw.epilog110, !dbg !13102

sw.epilog110:                                     ; preds = %no_more_values, %sw.bb90, %sw.bb88, %sw.bb86, %if.end84
  %74 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13103
  %75 = load i64, i64* %used, align 8, !dbg !13104
  %inc = add i64 %75, 1, !dbg !13104
  store i64 %inc, i64* %used, align 8, !dbg !13104
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %74, i64 %75, !dbg !13103, !ctir !1348
  store %struct.mode_change* %arrayidx, %struct.mode_change** %change, align 8, !dbg !13105
  %76 = load i8, i8* %op, align 1, !dbg !13106
  %77 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13107
  %op111 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %77, i32 0, i32 0, !dbg !13108, !ctir !1349
  store i8 %76, i8* %op111, align 4, !dbg !13109, !ctir !10
  %78 = load i8, i8* %flag, align 1, !dbg !13110
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13111
  %flag112 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %79, i32 0, i32 1, !dbg !13112, !ctir !1349
  store i8 %78, i8* %flag112, align 1, !dbg !13113, !ctir !10
  %80 = load i32, i32* %affected, align 4, !dbg !13114
  %81 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13115
  %affected113 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %81, i32 0, i32 2, !dbg !13116, !ctir !1349
  store i32 %80, i32* %affected113, align 4, !dbg !13117, !ctir !139
  %82 = load i32, i32* %value, align 4, !dbg !13118
  %83 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13119
  %value114 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %83, i32 0, i32 3, !dbg !13120, !ctir !1349
  store i32 %82, i32* %value114, align 4, !dbg !13121, !ctir !139
  %84 = load i32, i32* %mentioned51, align 4, !dbg !13122
  %tobool115 = icmp ne i32 %84, 0, !dbg !13122
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13122

cond.true116:                                     ; preds = %sw.epilog110
  %85 = load i32, i32* %mentioned51, align 4, !dbg !13123
  br label %cond.end124, !dbg !13122

cond.false117:                                    ; preds = %sw.epilog110
  %86 = load i32, i32* %affected, align 4, !dbg !13124
  %tobool118 = icmp ne i32 %86, 0, !dbg !13124
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !13124

cond.true119:                                     ; preds = %cond.false117
  %87 = load i32, i32* %affected, align 4, !dbg !13125
  %88 = load i32, i32* %value, align 4, !dbg !13126
  %and120 = and i32 %87, %88, !dbg !13127
  br label %cond.end122, !dbg !13124

cond.false121:                                    ; preds = %cond.false117
  %89 = load i32, i32* %value, align 4, !dbg !13128
  br label %cond.end122, !dbg !13124

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %and120, %cond.true119 ], [ %89, %cond.false121 ], !dbg !13124
  br label %cond.end124, !dbg !13122

cond.end124:                                      ; preds = %cond.end122, %cond.true116
  %cond125 = phi i32 [ %85, %cond.true116 ], [ %cond123, %cond.end122 ], !dbg !13122
  %90 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13129
  %mentioned126 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %90, i32 0, i32 4, !dbg !13130, !ctir !1349
  store i32 %cond125, i32* %mentioned126, align 4, !dbg !13131, !ctir !139
  br label %do.cond127, !dbg !13132

do.cond127:                                       ; preds = %cond.end124
  %91 = load i8*, i8** %p, align 8, !dbg !13133
  %92 = load i8, i8* %91, align 1, !dbg !13134, !ctir !184
  %conv128 = sext i8 %92 to i32, !dbg !13134
  %cmp129 = icmp eq i32 %conv128, 61, !dbg !13135
  br i1 %cmp129, label %lor.end139, label %lor.lhs.false131, !dbg !13136

lor.lhs.false131:                                 ; preds = %do.cond127
  %93 = load i8*, i8** %p, align 8, !dbg !13137
  %94 = load i8, i8* %93, align 1, !dbg !13138, !ctir !184
  %conv132 = sext i8 %94 to i32, !dbg !13138
  %cmp133 = icmp eq i32 %conv132, 43, !dbg !13139
  br i1 %cmp133, label %lor.end139, label %lor.rhs135, !dbg !13140

lor.rhs135:                                       ; preds = %lor.lhs.false131
  %95 = load i8*, i8** %p, align 8, !dbg !13141
  %96 = load i8, i8* %95, align 1, !dbg !13142, !ctir !184
  %conv136 = sext i8 %96 to i32, !dbg !13142
  %cmp137 = icmp eq i32 %conv136, 45, !dbg !13143
  br label %lor.end139, !dbg !13140

lor.end139:                                       ; preds = %lor.rhs135, %lor.lhs.false131, %do.cond127
  %97 = phi i1 [ true, %lor.lhs.false131 ], [ true, %do.cond127 ], [ %cmp137, %lor.rhs135 ]
  br i1 %97, label %do.body49, label %do.end141, !dbg !13132, !llvm.loop !13144

do.end141:                                        ; preds = %lor.end139
  %98 = load i8*, i8** %p, align 8, !dbg !13146
  %99 = load i8, i8* %98, align 1, !dbg !13148, !ctir !184
  %conv142 = sext i8 %99 to i32, !dbg !13148
  %cmp143 = icmp ne i32 %conv142, 44, !dbg !13149
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13150

if.then145:                                       ; preds = %do.end141
  br label %for.end149, !dbg !13151

if.end146:                                        ; preds = %do.end141
  br label %for.inc147, !dbg !13152

for.inc147:                                       ; preds = %if.end146
  %100 = load i8*, i8** %p, align 8, !dbg !13153
  %incdec.ptr148 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13153, !ctir !184
  store i8* %incdec.ptr148, i8** %p, align 8, !dbg !13153
  br label %for.cond36, !dbg !13154, !llvm.loop !13155

for.end149:                                       ; preds = %if.then145
  %101 = load i8*, i8** %p, align 8, !dbg !13158
  %102 = load i8, i8* %101, align 1, !dbg !13160, !ctir !184
  %conv150 = sext i8 %102 to i32, !dbg !13160
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !13161
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !13162

if.then153:                                       ; preds = %for.end149
  %103 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13163
  %104 = load i64, i64* %used, align 8, !dbg !13165
  %arrayidx154 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %103, i64 %104, !dbg !13163, !ctir !1348
  %flag155 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx154, i32 0, i32 1, !dbg !13166, !ctir !1349
  store i8 0, i8* %flag155, align 1, !dbg !13167, !ctir !10
  %105 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13168
  store %struct.mode_change* %105, %struct.mode_change** %retval, align 8, !dbg !13169
  br label %return, !dbg !13169

if.end156:                                        ; preds = %for.end149
  br label %invalid, !dbg !13170

invalid:                                          ; preds = %if.end156, %if.then83, %if.then63, %sw.default
  call void @llvm.dbg.label(metadata !13171), !dbg !13172
  %106 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13173
  %107 = bitcast %struct.mode_change* %106 to i8*, !dbg !13173
  call void @free(i8* %107) #9, !dbg !13174
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13175
  br label %return, !dbg !13175

return:                                           ; preds = %invalid, %if.then153, %cond.end, %if.then15, %if.then8
  %108 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13176
  ret %struct.mode_change* %108, !dbg !13176
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @octal_to_mode(i32 %octal) #4 !dbg !13177 {
entry:
  %octal.addr = alloca i32, align 4
  store i32 %octal, i32* %octal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %octal.addr, metadata !13180, metadata !DIExpression()), !dbg !13181
  %0 = load i32, i32* %octal.addr, align 4, !dbg !13182
  ret i32 %0, !dbg !13183
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.mode_change* @make_node_op_equals(i32 %new_mode, i32 %mentioned) #4 !dbg !13184 {
entry:
  %new_mode.addr = alloca i32, align 4
  %mentioned.addr = alloca i32, align 4
  %p = alloca %struct.mode_change*, align 8, !ctir !1348
  store i32 %new_mode, i32* %new_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !13187, metadata !DIExpression()), !dbg !13188
  store i32 %mentioned, i32* %mentioned.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mentioned.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.declare(metadata %struct.mode_change** %p, metadata !13191, metadata !DIExpression()), !dbg !13192
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13193
  %0 = bitcast i8* %call to %struct.mode_change*, !dbg !13193
  store %struct.mode_change* %0, %struct.mode_change** %p, align 8, !dbg !13192
  %1 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13194
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 0, !dbg !13195, !ctir !1349
  store i8 61, i8* %op, align 4, !dbg !13196, !ctir !10
  %2 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13197
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %2, i32 0, i32 1, !dbg !13198, !ctir !1349
  store i8 1, i8* %flag, align 1, !dbg !13199, !ctir !10
  %3 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13200
  %affected = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13201, !ctir !1349
  store i32 4095, i32* %affected, align 4, !dbg !13202, !ctir !139
  %4 = load i32, i32* %new_mode.addr, align 4, !dbg !13203
  %5 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13204
  %value = getelementptr inbounds %struct.mode_change, %struct.mode_change* %5, i32 0, i32 3, !dbg !13205, !ctir !1349
  store i32 %4, i32* %value, align 4, !dbg !13206, !ctir !139
  %6 = load i32, i32* %mentioned.addr, align 4, !dbg !13207
  %7 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13208
  %mentioned1 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13209, !ctir !1349
  store i32 %6, i32* %mentioned1, align 4, !dbg !13210, !ctir !139
  %8 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13211
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %8, i64 1, !dbg !13211, !ctir !1348
  %flag2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx, i32 0, i32 1, !dbg !13212, !ctir !1349
  store i8 0, i8* %flag2, align 1, !dbg !13213, !ctir !10
  %9 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13214
  ret %struct.mode_change* %9, !dbg !13215
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_create_from_ref(i8* %ref_file) #4 !dbg !13216 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %ref_file.addr = alloca i8*, align 8
  %ref_stats = alloca %struct.stat, align 8, !ctir !13217
  store i8* %ref_file, i8** %ref_file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ref_file.addr, metadata !13238, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.declare(metadata %struct.stat* %ref_stats, metadata !13240, metadata !DIExpression()), !dbg !13241
  %0 = load i8*, i8** %ref_file.addr, align 8, !dbg !13242
  %call = call i32 @stat(i8* %0, %struct.stat* %ref_stats) #9, !dbg !13244
  %cmp = icmp ne i32 %call, 0, !dbg !13245
  br i1 %cmp, label %if.then, label %if.end, !dbg !13246

if.then:                                          ; preds = %entry
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13247
  br label %return, !dbg !13247

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %ref_stats, i32 0, i32 3, !dbg !13248, !ctir !13217
  %1 = load i32, i32* %st_mode, align 8, !dbg !13248, !ctir !140
  %call1 = call %struct.mode_change* @make_node_op_equals(i32 %1, i32 4095), !dbg !13249
  store %struct.mode_change* %call1, %struct.mode_change** %retval, align 8, !dbg !13250
  br label %return, !dbg !13250

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13251
  ret %struct.mode_change* %2, !dbg !13251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mode_adjust(i32 %oldmode, i1 zeroext %dir, i32 %umask_value, %struct.mode_change* %changes, i32* %pmode_bits) #4 !dbg !13252 {
entry:
  %oldmode.addr = alloca i32, align 4
  %dir.addr = alloca i8, align 1
  %umask_value.addr = alloca i32, align 4
  %changes.addr = alloca %struct.mode_change*, align 8
  %pmode_bits.addr = alloca i32*, align 8
  %newmode = alloca i32, align 4, !ctir !139
  %mode_bits = alloca i32, align 4, !ctir !139
  %affected = alloca i32, align 4, !ctir !139
  %omit_change = alloca i32, align 4, !ctir !139
  %value = alloca i32, align 4, !ctir !139
  %preserved = alloca i32, align 4, !ctir !139
  store i32 %oldmode, i32* %oldmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldmode.addr, metadata !13258, metadata !DIExpression()), !dbg !13259
  %frombool = zext i1 %dir to i8
  store i8 %frombool, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !13260, metadata !DIExpression()), !dbg !13261
  store i32 %umask_value, i32* %umask_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %umask_value.addr, metadata !13262, metadata !DIExpression()), !dbg !13263
  store %struct.mode_change* %changes, %struct.mode_change** %changes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mode_change** %changes.addr, metadata !13264, metadata !DIExpression()), !dbg !13265
  store i32* %pmode_bits, i32** %pmode_bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pmode_bits.addr, metadata !13266, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !13268, metadata !DIExpression()), !dbg !13269
  %0 = load i32, i32* %oldmode.addr, align 4, !dbg !13270
  %and = and i32 %0, 4095, !dbg !13271
  store i32 %and, i32* %newmode, align 4, !dbg !13269
  call void @llvm.dbg.declare(metadata i32* %mode_bits, metadata !13272, metadata !DIExpression()), !dbg !13273
  store i32 0, i32* %mode_bits, align 4, !dbg !13273
  br label %for.cond, !dbg !13274

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13275
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 1, !dbg !13278, !ctir !13256
  %2 = load i8, i8* %flag, align 1, !dbg !13278, !ctir !10
  %conv = sext i8 %2 to i32, !dbg !13275
  %cmp = icmp ne i32 %conv, 0, !dbg !13279
  br i1 %cmp, label %for.body, label %for.end, !dbg !13280

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13281, metadata !DIExpression()), !dbg !13283
  %3 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13284
  %affected2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13285, !ctir !13256
  %4 = load i32, i32* %affected2, align 4, !dbg !13285, !ctir !139
  store i32 %4, i32* %affected, align 4, !dbg !13283
  call void @llvm.dbg.declare(metadata i32* %omit_change, metadata !13286, metadata !DIExpression()), !dbg !13287
  %5 = load i8, i8* %dir.addr, align 1, !dbg !13288
  %tobool = trunc i8 %5 to i1, !dbg !13288
  %6 = zext i1 %tobool to i64, !dbg !13288
  %cond = select i1 %tobool, i32 3072, i32 0, !dbg !13288
  %7 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13289
  %mentioned = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13290, !ctir !13256
  %8 = load i32, i32* %mentioned, align 4, !dbg !13290, !ctir !139
  %neg = xor i32 %8, -1, !dbg !13291
  %and4 = and i32 %cond, %neg, !dbg !13292
  store i32 %and4, i32* %omit_change, align 4, !dbg !13287
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13293, metadata !DIExpression()), !dbg !13294
  %9 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13295
  %value5 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %9, i32 0, i32 3, !dbg !13296, !ctir !13256
  %10 = load i32, i32* %value5, align 4, !dbg !13296, !ctir !139
  store i32 %10, i32* %value, align 4, !dbg !13294
  %11 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13297
  %flag6 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %11, i32 0, i32 1, !dbg !13298, !ctir !13256
  %12 = load i8, i8* %flag6, align 1, !dbg !13298, !ctir !10
  %conv7 = sext i8 %12 to i32, !dbg !13297
  switch i32 %conv7, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb21
  ], !dbg !13299

sw.bb:                                            ; preds = %for.body
  br label %sw.epilog, !dbg !13300

sw.bb8:                                           ; preds = %for.body
  %13 = load i32, i32* %newmode, align 4, !dbg !13302
  %14 = load i32, i32* %value, align 4, !dbg !13303
  %and9 = and i32 %14, %13, !dbg !13303
  store i32 %and9, i32* %value, align 4, !dbg !13303
  %15 = load i32, i32* %value, align 4, !dbg !13304
  %and10 = and i32 %15, 292, !dbg !13305
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13304
  %16 = zext i1 %tobool11 to i64, !dbg !13304
  %cond12 = select i1 %tobool11, i32 292, i32 0, !dbg !13304
  %17 = load i32, i32* %value, align 4, !dbg !13306
  %and13 = and i32 %17, 146, !dbg !13307
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13306
  %18 = zext i1 %tobool14 to i64, !dbg !13306
  %cond15 = select i1 %tobool14, i32 146, i32 0, !dbg !13306
  %or = or i32 %cond12, %cond15, !dbg !13308
  %19 = load i32, i32* %value, align 4, !dbg !13309
  %and16 = and i32 %19, 73, !dbg !13310
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13309
  %20 = zext i1 %tobool17 to i64, !dbg !13309
  %cond18 = select i1 %tobool17, i32 73, i32 0, !dbg !13309
  %or19 = or i32 %or, %cond18, !dbg !13311
  %21 = load i32, i32* %value, align 4, !dbg !13312
  %or20 = or i32 %21, %or19, !dbg !13312
  store i32 %or20, i32* %value, align 4, !dbg !13312
  br label %sw.epilog, !dbg !13313

sw.bb21:                                          ; preds = %for.body
  %22 = load i32, i32* %newmode, align 4, !dbg !13314
  %and22 = and i32 %22, 73, !dbg !13316
  %23 = load i8, i8* %dir.addr, align 1, !dbg !13317
  %tobool23 = trunc i8 %23 to i1, !dbg !13317
  %conv24 = zext i1 %tobool23 to i32, !dbg !13317
  %or25 = or i32 %and22, %conv24, !dbg !13318
  %tobool26 = icmp ne i32 %or25, 0, !dbg !13318
  br i1 %tobool26, label %if.then, label %if.end, !dbg !13319

if.then:                                          ; preds = %sw.bb21
  %24 = load i32, i32* %value, align 4, !dbg !13320
  %or27 = or i32 %24, 73, !dbg !13320
  store i32 %or27, i32* %value, align 4, !dbg !13320
  br label %if.end, !dbg !13321

if.end:                                           ; preds = %if.then, %sw.bb21
  br label %sw.epilog, !dbg !13322

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb8, %sw.bb
  %25 = load i32, i32* %affected, align 4, !dbg !13323
  %tobool28 = icmp ne i32 %25, 0, !dbg !13323
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !13323

cond.true:                                        ; preds = %sw.epilog
  %26 = load i32, i32* %affected, align 4, !dbg !13324
  br label %cond.end, !dbg !13323

cond.false:                                       ; preds = %sw.epilog
  %27 = load i32, i32* %umask_value.addr, align 4, !dbg !13325
  %neg29 = xor i32 %27, -1, !dbg !13326
  br label %cond.end, !dbg !13323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %26, %cond.true ], [ %neg29, %cond.false ], !dbg !13323
  %28 = load i32, i32* %omit_change, align 4, !dbg !13327
  %neg31 = xor i32 %28, -1, !dbg !13328
  %and32 = and i32 %cond30, %neg31, !dbg !13329
  %29 = load i32, i32* %value, align 4, !dbg !13330
  %and33 = and i32 %29, %and32, !dbg !13330
  store i32 %and33, i32* %value, align 4, !dbg !13330
  %30 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13331
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %30, i32 0, i32 0, !dbg !13332, !ctir !13256
  %31 = load i8, i8* %op, align 4, !dbg !13332, !ctir !10
  %conv34 = sext i8 %31 to i32, !dbg !13331
  switch i32 %conv34, label %sw.epilog55 [
    i32 61, label %sw.bb35
    i32 43, label %sw.bb48
    i32 45, label %sw.bb51
  ], !dbg !13333

sw.bb35:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %preserved, metadata !13334, metadata !DIExpression()), !dbg !13337
  %32 = load i32, i32* %affected, align 4, !dbg !13338
  %tobool36 = icmp ne i32 %32, 0, !dbg !13338
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !13338

cond.true37:                                      ; preds = %sw.bb35
  %33 = load i32, i32* %affected, align 4, !dbg !13339
  %neg38 = xor i32 %33, -1, !dbg !13340
  br label %cond.end40, !dbg !13338

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !13338

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %neg38, %cond.true37 ], [ 0, %cond.false39 ], !dbg !13338
  %34 = load i32, i32* %omit_change, align 4, !dbg !13341
  %or42 = or i32 %cond41, %34, !dbg !13342
  store i32 %or42, i32* %preserved, align 4, !dbg !13337
  %35 = load i32, i32* %preserved, align 4, !dbg !13343
  %neg43 = xor i32 %35, -1, !dbg !13344
  %and44 = and i32 4095, %neg43, !dbg !13345
  %36 = load i32, i32* %mode_bits, align 4, !dbg !13346
  %or45 = or i32 %36, %and44, !dbg !13346
  store i32 %or45, i32* %mode_bits, align 4, !dbg !13346
  %37 = load i32, i32* %newmode, align 4, !dbg !13347
  %38 = load i32, i32* %preserved, align 4, !dbg !13348
  %and46 = and i32 %37, %38, !dbg !13349
  %39 = load i32, i32* %value, align 4, !dbg !13350
  %or47 = or i32 %and46, %39, !dbg !13351
  store i32 %or47, i32* %newmode, align 4, !dbg !13352
  br label %sw.epilog55, !dbg !13353

sw.bb48:                                          ; preds = %cond.end
  %40 = load i32, i32* %value, align 4, !dbg !13354
  %41 = load i32, i32* %mode_bits, align 4, !dbg !13355
  %or49 = or i32 %41, %40, !dbg !13355
  store i32 %or49, i32* %mode_bits, align 4, !dbg !13355
  %42 = load i32, i32* %value, align 4, !dbg !13356
  %43 = load i32, i32* %newmode, align 4, !dbg !13357
  %or50 = or i32 %43, %42, !dbg !13357
  store i32 %or50, i32* %newmode, align 4, !dbg !13357
  br label %sw.epilog55, !dbg !13358

sw.bb51:                                          ; preds = %cond.end
  %44 = load i32, i32* %value, align 4, !dbg !13359
  %45 = load i32, i32* %mode_bits, align 4, !dbg !13360
  %or52 = or i32 %45, %44, !dbg !13360
  store i32 %or52, i32* %mode_bits, align 4, !dbg !13360
  %46 = load i32, i32* %value, align 4, !dbg !13361
  %neg53 = xor i32 %46, -1, !dbg !13362
  %47 = load i32, i32* %newmode, align 4, !dbg !13363
  %and54 = and i32 %47, %neg53, !dbg !13363
  store i32 %and54, i32* %newmode, align 4, !dbg !13363
  br label %sw.epilog55, !dbg !13364

sw.epilog55:                                      ; preds = %cond.end, %sw.bb51, %sw.bb48, %cond.end40
  br label %for.inc, !dbg !13365

for.inc:                                          ; preds = %sw.epilog55
  %48 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13366
  %incdec.ptr = getelementptr inbounds %struct.mode_change, %struct.mode_change* %48, i32 1, !dbg !13366, !ctir !13256
  store %struct.mode_change* %incdec.ptr, %struct.mode_change** %changes.addr, align 8, !dbg !13366
  br label %for.cond, !dbg !13367, !llvm.loop !13368

for.end:                                          ; preds = %for.cond
  %49 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13370
  %tobool56 = icmp ne i32* %49, null, !dbg !13370
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !13372

if.then57:                                        ; preds = %for.end
  %50 = load i32, i32* %mode_bits, align 4, !dbg !13373
  %51 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13374
  store i32 %50, i32* %51, align 4, !dbg !13375, !ctir !139
  br label %if.end58, !dbg !13376

if.end58:                                         ; preds = %if.then57, %for.end
  %52 = load i32, i32* %newmode, align 4, !dbg !13377
  ret i32 %52, !dbg !13378
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13379 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13383, metadata !DIExpression()), !dbg !13384
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13385, metadata !DIExpression()), !dbg !13386
  store i32 %extra_flags, i32* %extra_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13389, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13391, metadata !DIExpression()), !dbg !13392
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13393
  %or = or i32 592128, %0, !dbg !13394
  store i32 %or, i32* %open_flags, align 4, !dbg !13392
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13395, metadata !DIExpression()), !dbg !13396
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13397
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13398
  %3 = load i32, i32* %open_flags, align 4, !dbg !13399
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13400
  store i32 %call, i32* %new_fd, align 4, !dbg !13396
  %4 = load i32, i32* %new_fd, align 4, !dbg !13401
  %cmp = icmp slt i32 %4, 0, !dbg !13403
  br i1 %cmp, label %if.then, label %if.end, !dbg !13404

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13405
  br label %return, !dbg !13405

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13406, metadata !DIExpression()), !dbg !13407
  %5 = load i32, i32* %new_fd, align 4, !dbg !13408
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13409
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13407
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13410
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13410
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13412

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13413
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13414
  store i32 %7, i32* %8, align 4, !dbg !13415, !ctir !7
  br label %if.end6, !dbg !13416

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13417, metadata !DIExpression()), !dbg !13419
  %call3 = call i32* @__errno_location() #16, !dbg !13420
  %9 = load i32, i32* %call3, align 4, !dbg !13420, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13419
  %10 = load i32, i32* %new_fd, align 4, !dbg !13421
  %call4 = call i32 @close(i32 %10), !dbg !13422
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13423
  %call5 = call i32* @__errno_location() #16, !dbg !13424
  store i32 %11, i32* %call5, align 4, !dbg !13425, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13426
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13427
  br label %return, !dbg !13427

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13428
  ret %struct.__dirstream* %13, !dbg !13428
}

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13429 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !183
  %base = alloca i8*, align 8, !ctir !183
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13432, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13434, metadata !DIExpression()), !dbg !13435
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13436
  %cmp = icmp eq i8* %0, null, !dbg !13438
  br i1 %cmp, label %if.then, label %if.end, !dbg !13439

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13440
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.311, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13442
  call void @abort() #13, !dbg !13443
  unreachable, !dbg !13443

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13444
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13445
  store i8* %call1, i8** %slash, align 8, !dbg !13446
  %3 = load i8*, i8** %slash, align 8, !dbg !13447
  %cmp2 = icmp ne i8* %3, null, !dbg !13448
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13447

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13449
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13450, !ctir !184
  br label %cond.end, !dbg !13447

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13451
  br label %cond.end, !dbg !13447

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13447
  store i8* %cond, i8** %base, align 8, !dbg !13452
  %6 = load i8*, i8** %base, align 8, !dbg !13453
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13455
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13456
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13456
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13456
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13457
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13458

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13459
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13460, !ctir !184
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.312, i64 0, i64 0), i64 7) #14, !dbg !13461
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13462
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13463

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13464
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13466
  %10 = load i8*, i8** %base, align 8, !dbg !13467
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.313, i64 0, i64 0), i64 3) #14, !dbg !13469
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13470
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13471

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13472
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13474, !ctir !184
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13475
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13476
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13477
  br label %if.end12, !dbg !13478

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13479

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13480
  store i8* %13, i8** @program_name, align 8, !dbg !13481
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13482
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13483
  ret void, !dbg !13484
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13485 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13487
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13494, metadata !DIExpression()), !dbg !13495
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13496, metadata !DIExpression()), !dbg !13497
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13498, metadata !DIExpression()), !dbg !13499
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13500, metadata !DIExpression()), !dbg !13501
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13502, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13504, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13506, metadata !DIExpression()), !dbg !13507
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13508
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13509
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13510
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !13511
  store i32 %call, i32* %ret, align 4, !dbg !13512
  %3 = load i32, i32* %ret, align 4, !dbg !13513
  %cmp = icmp ne i32 %3, 0, !dbg !13515
  br i1 %cmp, label %if.then, label %if.end, !dbg !13516

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13517
  br label %return, !dbg !13517

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13518
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13519
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !13520
  store i32 %call1, i32* %ret, align 4, !dbg !13521
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13522
  %6 = load i32, i32* %ret, align 4, !dbg !13523
  store i32 %6, i32* %retval, align 4, !dbg !13524
  br label %return, !dbg !13524

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13525
  ret i32 %7, !dbg !13525
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13526 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13528
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13534, metadata !DIExpression()), !dbg !13535
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13536, metadata !DIExpression()), !dbg !13537
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13538, metadata !DIExpression()), !dbg !13539
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13540, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13542, metadata !DIExpression()), !dbg !13543
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !13544
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !13544
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13545
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !13546, !ctir !13528
  store i32 %1, i32* %mode1, align 8, !dbg !13547, !ctir !139
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13548
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13549
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !13550
  store i32 %call, i32* %ret, align 4, !dbg !13551
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13552
  %4 = load i32, i32* %ret, align 4, !dbg !13553
  ret i32 %4, !dbg !13554
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13555 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !911
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13558, metadata !DIExpression()), !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13560, metadata !DIExpression()), !dbg !13561
  %call = call i32* @__errno_location() #16, !dbg !13562
  %0 = load i32, i32* %call, align 4, !dbg !13562, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !13561
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13563, metadata !DIExpression()), !dbg !13564
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13565
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13565
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13565

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13566
  br label %cond.end, !dbg !13565

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13565

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13565
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13565
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13567
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13567
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13564
  %5 = load i32, i32* %e, align 4, !dbg !13568
  %call2 = call i32* @__errno_location() #16, !dbg !13569
  store i32 %5, i32* %call2, align 4, !dbg !13570, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13571
  ret %struct.quoting_options* %6, !dbg !13572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13573 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13576, metadata !DIExpression()), !dbg !13577
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13578
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13578
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13578

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13579
  br label %cond.end, !dbg !13578

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13578

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13578
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13580, !ctir !923
  %2 = load i32, i32* %style, align 8, !dbg !13580, !ctir !893
  ret i32 %2, !dbg !13581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13582 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13585, metadata !DIExpression()), !dbg !13586
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13587, metadata !DIExpression()), !dbg !13588
  %0 = load i32, i32* %s.addr, align 4, !dbg !13589
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13590
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13590
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13590

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13591
  br label %cond.end, !dbg !13590

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13590

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13590
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13592, !ctir !912
  store i32 %0, i32* %style, align 8, !dbg !13593, !ctir !893
  ret void, !dbg !13594
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13595 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !573
  %p = alloca i32*, align 8, !ctir !921
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13598, metadata !DIExpression()), !dbg !13599
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13600, metadata !DIExpression()), !dbg !13601
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13602, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13604, metadata !DIExpression()), !dbg !13605
  %0 = load i8, i8* %c.addr, align 1, !dbg !13606
  store i8 %0, i8* %uc, align 1, !dbg !13605
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13607, metadata !DIExpression()), !dbg !13608
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13609
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13609
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13609

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13610
  br label %cond.end, !dbg !13609

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13609

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13609
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13611, !ctir !912
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13612, !ctir !918
  %3 = load i8, i8* %uc, align 1, !dbg !13613
  %conv = zext i8 %3 to i64, !dbg !13613
  %div = udiv i64 %conv, 32, !dbg !13614
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13615, !ctir !70
  store i32* %add.ptr, i32** %p, align 8, !dbg !13608
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13616, metadata !DIExpression()), !dbg !13617
  %4 = load i8, i8* %uc, align 1, !dbg !13618
  %conv1 = zext i8 %4 to i64, !dbg !13618
  %rem = urem i64 %conv1, 32, !dbg !13619
  %conv2 = trunc i64 %rem to i32, !dbg !13618
  store i32 %conv2, i32* %shift, align 4, !dbg !13617
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13620, metadata !DIExpression()), !dbg !13621
  %5 = load i32*, i32** %p, align 8, !dbg !13622
  %6 = load i32, i32* %5, align 4, !dbg !13623, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !13624
  %shr = lshr i32 %6, %7, !dbg !13625
  %and = and i32 %shr, 1, !dbg !13626
  store i32 %and, i32* %r, align 4, !dbg !13621
  %8 = load i32, i32* %i.addr, align 4, !dbg !13627
  %and3 = and i32 %8, 1, !dbg !13628
  %9 = load i32, i32* %r, align 4, !dbg !13629
  %xor = xor i32 %and3, %9, !dbg !13630
  %10 = load i32, i32* %shift, align 4, !dbg !13631
  %shl = shl i32 %xor, %10, !dbg !13632
  %11 = load i32*, i32** %p, align 8, !dbg !13633
  %12 = load i32, i32* %11, align 4, !dbg !13634, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !13634
  store i32 %xor4, i32* %11, align 4, !dbg !13634, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !13635
  ret i32 %13, !dbg !13636
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13637 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13644, metadata !DIExpression()), !dbg !13645
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13646
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13646
  br i1 %tobool, label %if.end, label %if.then, !dbg !13648

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13649
  br label %if.end, !dbg !13650

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13651
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13652, !ctir !912
  %2 = load i32, i32* %flags, align 4, !dbg !13652, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !13653
  %3 = load i32, i32* %i.addr, align 4, !dbg !13654
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13655
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13656, !ctir !912
  store i32 %3, i32* %flags1, align 4, !dbg !13657, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !13658
  ret i32 %5, !dbg !13659
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13660 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13663, metadata !DIExpression()), !dbg !13664
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13665, metadata !DIExpression()), !dbg !13666
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13669
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13669
  br i1 %tobool, label %if.end, label %if.then, !dbg !13671

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13672
  br label %if.end, !dbg !13673

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13674
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13675, !ctir !912
  store i32 10, i32* %style, align 8, !dbg !13676, !ctir !893
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13677
  %tobool1 = icmp ne i8* %2, null, !dbg !13677
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13679

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13680
  %tobool2 = icmp ne i8* %3, null, !dbg !13680
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13681

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13682
  unreachable, !dbg !13682

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13683
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13684
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13685, !ctir !912
  store i8* %4, i8** %left_quote5, align 8, !dbg !13686, !ctir !183
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13687
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13688
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13689, !ctir !912
  store i8* %6, i8** %right_quote6, align 8, !dbg !13690, !ctir !183
  ret void, !dbg !13691
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13692 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !922
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13695, metadata !DIExpression()), !dbg !13696
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13697, metadata !DIExpression()), !dbg !13698
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13699, metadata !DIExpression()), !dbg !13700
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13701, metadata !DIExpression()), !dbg !13702
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13703, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13705, metadata !DIExpression()), !dbg !13706
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13707
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13707
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13707

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13708
  br label %cond.end, !dbg !13707

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13707
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13706
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13709, metadata !DIExpression()), !dbg !13710
  %call = call i32* @__errno_location() #16, !dbg !13711
  %2 = load i32, i32* %call, align 4, !dbg !13711, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !13710
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13712, metadata !DIExpression()), !dbg !13713
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13714
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13715
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13716
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13717
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13718
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13719, !ctir !923
  %8 = load i32, i32* %style, align 8, !dbg !13719, !ctir !893
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13720
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13721, !ctir !923
  %10 = load i32, i32* %flags, align 4, !dbg !13721, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13722
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13723, !ctir !923
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13722, !ctir !924
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13724
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13725, !ctir !923
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13725, !ctir !183
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13726
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13727, !ctir !923
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13727, !ctir !183
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13728
  store i64 %call1, i64* %r, align 8, !dbg !13713
  %16 = load i32, i32* %e, align 4, !dbg !13729
  %call2 = call i32* @__errno_location() #16, !dbg !13730
  store i32 %16, i32* %call2, align 4, !dbg !13731, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !13732
  ret i64 %17, !dbg !13733
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13734 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !183
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !142
  %unibyte_locale = alloca i8, align 1, !ctir !142
  %elide_outer_quotes = alloca i8, align 1, !ctir !142
  %pending_shell_escape_end = alloca i8, align 1, !ctir !142
  %encountered_single_quote = alloca i8, align 1, !ctir !142
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %c = alloca i8, align 1, !ctir !573
  %esc = alloca i8, align 1, !ctir !573
  %is_right_quote = alloca i8, align 1, !ctir !142
  %escaping = alloca i8, align 1, !ctir !142
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !142
  %mbstate = alloca %struct.savewd, align 4, !ctir !932
  %w = alloca i32, align 4, !ctir !944
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13737, metadata !DIExpression()), !dbg !13738
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13739, metadata !DIExpression()), !dbg !13740
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13741, metadata !DIExpression()), !dbg !13742
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13743, metadata !DIExpression()), !dbg !13744
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13745, metadata !DIExpression()), !dbg !13746
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13751, metadata !DIExpression()), !dbg !13752
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13753, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13755, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i64 0, i64* %len, align 8, !dbg !13758
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13760
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13761, metadata !DIExpression()), !dbg !13762
  store i8* null, i8** %quote_string, align 8, !dbg !13762
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13763, metadata !DIExpression()), !dbg !13764
  store i64 0, i64* %quote_string_len, align 8, !dbg !13764
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13765, metadata !DIExpression()), !dbg !13766
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13766
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13767, metadata !DIExpression()), !dbg !13768
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !13769
  %cmp = icmp eq i64 %call, 1, !dbg !13770
  %frombool = zext i1 %cmp to i8, !dbg !13768
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13768
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13771, metadata !DIExpression()), !dbg !13772
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13773
  %and = and i32 %0, 2, !dbg !13774
  %cmp1 = icmp ne i32 %and, 0, !dbg !13775
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13772
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13772
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13776, metadata !DIExpression()), !dbg !13777
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13777
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13778, metadata !DIExpression()), !dbg !13779
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13779
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13780, metadata !DIExpression()), !dbg !13781
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13781
  br label %process_input, !dbg !13782

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13783), !dbg !13784
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13785
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13786

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13787
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13789
  br label %sw.bb3, !dbg !13790

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13791
  %tobool = trunc i8 %2 to i1, !dbg !13791
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13793

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13794

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13795
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13795
  %cmp4 = icmp ult i64 %3, %4, !dbg !13795
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13798

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13795
  %6 = load i64, i64* %len, align 8, !dbg !13795
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13795, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !13795
  br label %if.end, !dbg !13795

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13798
  %inc = add i64 %7, 1, !dbg !13798
  store i64 %inc, i64* %len, align 8, !dbg !13798
  br label %do.end, !dbg !13798

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13798

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13799
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13800
  store i64 1, i64* %quote_string_len, align 8, !dbg !13801
  br label %sw.epilog, !dbg !13802

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13803
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13804
  br label %sw.epilog, !dbg !13805

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13806
  %cmp9 = icmp ne i32 %8, 10, !dbg !13809
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13810

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13811
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.329, i64 0, i64 0), i32 %9), !dbg !13813
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13814
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13815
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i32 %10), !dbg !13816
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13817
  br label %if.end13, !dbg !13818

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13819
  %tobool14 = trunc i8 %11 to i1, !dbg !13819
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13821

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13822
  store i8* %12, i8** %quote_string, align 8, !dbg !13824
  br label %for.cond, !dbg !13825

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13826
  %14 = load i8, i8* %13, align 1, !dbg !13828, !ctir !184
  %tobool16 = icmp ne i8 %14, 0, !dbg !13829
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13829

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13830

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13831
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13831
  %cmp18 = icmp ult i64 %15, %16, !dbg !13831
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13834

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13831
  %18 = load i8, i8* %17, align 1, !dbg !13831, !ctir !184
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13831
  %20 = load i64, i64* %len, align 8, !dbg !13831
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13831, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13831
  br label %if.end21, !dbg !13831

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13834
  %inc22 = add i64 %21, 1, !dbg !13834
  store i64 %inc22, i64* %len, align 8, !dbg !13834
  br label %do.end23, !dbg !13834

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13834

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13835
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13835, !ctir !184
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13835
  br label %for.cond, !dbg !13836, !llvm.loop !13837

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13838

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13839
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13840
  store i8* %23, i8** %quote_string, align 8, !dbg !13841
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13842
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13843
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13844
  br label %sw.epilog, !dbg !13845

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13846
  br label %sw.bb27, !dbg !13847

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13848
  br label %sw.bb28, !dbg !13849

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13850
  %tobool29 = trunc i8 %25 to i1, !dbg !13850
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13852

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13853
  br label %if.end31, !dbg !13854

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13855

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13856
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13857
  %tobool33 = trunc i8 %26 to i1, !dbg !13857
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13859

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13860

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13861
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13861
  %cmp36 = icmp ult i64 %27, %28, !dbg !13861
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13864

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13861
  %30 = load i64, i64* %len, align 8, !dbg !13861
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13861, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !13861
  br label %if.end39, !dbg !13861

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13864
  %inc40 = add i64 %31, 1, !dbg !13864
  store i64 %inc40, i64* %len, align 8, !dbg !13864
  br label %do.end41, !dbg !13864

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13864

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13865
  store i64 1, i64* %quote_string_len, align 8, !dbg !13866
  br label %sw.epilog, !dbg !13867

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13868
  br label %sw.epilog, !dbg !13869

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13870
  unreachable, !dbg !13870

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13871
  br label %for.cond44, !dbg !13873

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13874
  %cmp45 = icmp eq i64 %32, -1, !dbg !13876
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13874

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13877
  %34 = load i64, i64* %i, align 8, !dbg !13878
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13877, !ctir !183
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13877
  %conv = sext i8 %35 to i32, !dbg !13877
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13879
  %conv48 = zext i1 %cmp47 to i32, !dbg !13879
  br label %cond.end, !dbg !13874

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13880
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13881
  %cmp49 = icmp eq i64 %36, %37, !dbg !13882
  %conv50 = zext i1 %cmp49 to i32, !dbg !13882
  br label %cond.end, !dbg !13874

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13874
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13883
  %lnot = xor i1 %tobool51, true, !dbg !13883
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13884

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13885, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13888, metadata !DIExpression()), !dbg !13889
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13890, metadata !DIExpression()), !dbg !13891
  store i8 0, i8* %is_right_quote, align 1, !dbg !13891
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i8 0, i8* %escaping, align 1, !dbg !13893
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13894, metadata !DIExpression()), !dbg !13895
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13895
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13896
  %tobool53 = trunc i8 %38 to i1, !dbg !13896
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13898

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13899
  %cmp55 = icmp ne i32 %39, 2, !dbg !13900
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13901

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13902
  %tobool58 = icmp ne i64 %40, 0, !dbg !13902
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13903

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13904
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13905
  %add = add i64 %41, %42, !dbg !13906
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13907
  %cmp60 = icmp eq i64 %43, -1, !dbg !13908
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13909

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13910
  %cmp63 = icmp ult i64 1, %44, !dbg !13911
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13907

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13912
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13913
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13914
  br label %cond.end68, !dbg !13907

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13915
  br label %cond.end68, !dbg !13907

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13907
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13916
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13917

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13918
  %48 = load i64, i64* %i, align 8, !dbg !13919
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13920, !ctir !184
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13921
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13922
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13923
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13924
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13925

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13926
  %tobool77 = trunc i8 %51 to i1, !dbg !13926
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13929

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13930

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13931
  br label %if.end80, !dbg !13932

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13933
  %53 = load i64, i64* %i, align 8, !dbg !13934
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13933, !ctir !183
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13933
  store i8 %54, i8* %c, align 1, !dbg !13935
  %55 = load i8, i8* %c, align 1, !dbg !13936
  %conv82 = zext i8 %55 to i32, !dbg !13936
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13937

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13938
  %tobool84 = trunc i8 %56 to i1, !dbg !13938
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13941

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13942

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13944
  %tobool87 = trunc i8 %57 to i1, !dbg !13944
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13947

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13944

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13947
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13948
  %cmp90 = icmp eq i32 %58, 2, !dbg !13948
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13948

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13948
  %tobool93 = trunc i8 %59 to i1, !dbg !13948
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13947

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13950

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13952
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13952
  %cmp96 = icmp ult i64 %60, %61, !dbg !13952
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13955

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13952
  %63 = load i64, i64* %len, align 8, !dbg !13952
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13952, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !13952
  br label %if.end100, !dbg !13952

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13955
  %inc101 = add i64 %64, 1, !dbg !13955
  store i64 %inc101, i64* %len, align 8, !dbg !13955
  br label %do.end102, !dbg !13955

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13950

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13956
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13956
  %cmp104 = icmp ult i64 %65, %66, !dbg !13956
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13959

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13956
  %68 = load i64, i64* %len, align 8, !dbg !13956
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13956, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !13956
  br label %if.end108, !dbg !13956

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13959
  %inc109 = add i64 %69, 1, !dbg !13959
  store i64 %inc109, i64* %len, align 8, !dbg !13959
  br label %do.end110, !dbg !13959

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13950

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13960
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13960
  %cmp112 = icmp ult i64 %70, %71, !dbg !13960
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13963

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13960
  %73 = load i64, i64* %len, align 8, !dbg !13960
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13960, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !13960
  br label %if.end116, !dbg !13960

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13963
  %inc117 = add i64 %74, 1, !dbg !13963
  store i64 %inc117, i64* %len, align 8, !dbg !13963
  br label %do.end118, !dbg !13963

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13950
  br label %if.end119, !dbg !13950

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13947

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13964
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13964
  %cmp121 = icmp ult i64 %75, %76, !dbg !13964
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13967

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13964
  %78 = load i64, i64* %len, align 8, !dbg !13964
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13964, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !13964
  br label %if.end125, !dbg !13964

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13967
  %inc126 = add i64 %79, 1, !dbg !13967
  store i64 %inc126, i64* %len, align 8, !dbg !13967
  br label %do.end127, !dbg !13967

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13947

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13968
  %cmp129 = icmp ne i32 %80, 2, !dbg !13970
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13971

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13972
  %add132 = add i64 %81, 1, !dbg !13973
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13974
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13975
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13976

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13977
  %84 = load i64, i64* %i, align 8, !dbg !13978
  %add136 = add i64 %84, 1, !dbg !13979
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13977, !ctir !183
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13977
  %conv138 = sext i8 %85 to i32, !dbg !13977
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13980
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13981

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13982
  %87 = load i64, i64* %i, align 8, !dbg !13983
  %add142 = add i64 %87, 1, !dbg !13984
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13982, !ctir !183
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13982
  %conv144 = sext i8 %88 to i32, !dbg !13982
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13985
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13986

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13987

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13989
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13989
  %cmp149 = icmp ult i64 %89, %90, !dbg !13989
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13992

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13989
  %92 = load i64, i64* %len, align 8, !dbg !13989
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13989, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !13989
  br label %if.end153, !dbg !13989

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13992
  %inc154 = add i64 %93, 1, !dbg !13992
  store i64 %inc154, i64* %len, align 8, !dbg !13992
  br label %do.end155, !dbg !13992

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13993

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13994
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13994
  %cmp157 = icmp ult i64 %94, %95, !dbg !13994
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13997

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13994
  %97 = load i64, i64* %len, align 8, !dbg !13994
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13994, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !13994
  br label %if.end161, !dbg !13994

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13997
  %inc162 = add i64 %98, 1, !dbg !13997
  store i64 %inc162, i64* %len, align 8, !dbg !13997
  br label %do.end163, !dbg !13997

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13998

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13999
  br label %if.end169, !dbg !14000

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14001
  %and165 = and i32 %99, 1, !dbg !14003
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14003
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14004

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14005

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14006

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14007
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14008

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14009
  %tobool172 = trunc i8 %101 to i1, !dbg !14009
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14012

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14013

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14014

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14015
  %and176 = and i32 %102, 4, !dbg !14017
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14017
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14018

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14019
  %add179 = add i64 %103, 2, !dbg !14020
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14021
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14022
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14023

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14024
  %106 = load i64, i64* %i, align 8, !dbg !14025
  %add183 = add i64 %106, 1, !dbg !14026
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14024, !ctir !183
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14024
  %conv185 = sext i8 %107 to i32, !dbg !14024
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14027
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14028

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14029
  %109 = load i64, i64* %i, align 8, !dbg !14030
  %add189 = add i64 %109, 2, !dbg !14031
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14029, !ctir !183
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14029
  %conv191 = sext i8 %110 to i32, !dbg !14029
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14032

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14033
  %tobool193 = trunc i8 %111 to i1, !dbg !14033
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14036

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14037

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14038
  %113 = load i64, i64* %i, align 8, !dbg !14039
  %add196 = add i64 %113, 2, !dbg !14040
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14038, !ctir !183
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14038
  store i8 %114, i8* %c, align 1, !dbg !14041
  %115 = load i64, i64* %i, align 8, !dbg !14042
  %add198 = add i64 %115, 2, !dbg !14042
  store i64 %add198, i64* %i, align 8, !dbg !14042
  br label %do.body199, !dbg !14043

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14044
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14044
  %cmp200 = icmp ult i64 %116, %117, !dbg !14044
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14047

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14044
  %119 = load i64, i64* %len, align 8, !dbg !14044
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14044, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14044
  br label %if.end204, !dbg !14044

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14047
  %inc205 = add i64 %120, 1, !dbg !14047
  store i64 %inc205, i64* %len, align 8, !dbg !14047
  br label %do.end206, !dbg !14047

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14048

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14049
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14049
  %cmp208 = icmp ult i64 %121, %122, !dbg !14049
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14052

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14049
  %124 = load i64, i64* %len, align 8, !dbg !14049
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14049, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14049
  br label %if.end212, !dbg !14049

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14052
  %inc213 = add i64 %125, 1, !dbg !14052
  store i64 %inc213, i64* %len, align 8, !dbg !14052
  br label %do.end214, !dbg !14052

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14053

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14054
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14054
  %cmp216 = icmp ult i64 %126, %127, !dbg !14054
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14057

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14054
  %129 = load i64, i64* %len, align 8, !dbg !14054
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14054, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14054
  br label %if.end220, !dbg !14054

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14057
  %inc221 = add i64 %130, 1, !dbg !14057
  store i64 %inc221, i64* %len, align 8, !dbg !14057
  br label %do.end222, !dbg !14057

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14058

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14059
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14059
  %cmp224 = icmp ult i64 %131, %132, !dbg !14059
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14062

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14059
  %134 = load i64, i64* %len, align 8, !dbg !14059
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14059, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14059
  br label %if.end228, !dbg !14059

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14062
  %inc229 = add i64 %135, 1, !dbg !14062
  store i64 %inc229, i64* %len, align 8, !dbg !14062
  br label %do.end230, !dbg !14062

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14063

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14064

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14065

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14066

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14067

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14068

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14069
  br label %c_escape, !dbg !14070

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14071
  br label %c_escape, !dbg !14072

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14073
  br label %c_escape, !dbg !14074

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14075
  br label %c_and_shell_escape, !dbg !14076

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14077
  br label %c_and_shell_escape, !dbg !14078

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14079
  br label %c_and_shell_escape, !dbg !14080

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14081
  br label %c_escape, !dbg !14082

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14083
  store i8 %136, i8* %esc, align 1, !dbg !14084
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14085
  %cmp244 = icmp eq i32 %137, 2, !dbg !14087
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14088

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14089
  %tobool247 = trunc i8 %138 to i1, !dbg !14089
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14092

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14093

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14094

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14095
  %tobool251 = trunc i8 %139 to i1, !dbg !14095
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14097

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14098
  %tobool254 = trunc i8 %140 to i1, !dbg !14098
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14099

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14100
  %tobool257 = icmp ne i64 %141, 0, !dbg !14100
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14101

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14102

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14100

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14103), !dbg !14104
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14105
  %cmp260 = icmp eq i32 %142, 2, !dbg !14107
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14108

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14109
  %tobool263 = trunc i8 %143 to i1, !dbg !14109
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14110

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14111

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14109

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14112), !dbg !14113
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14114
  %tobool267 = trunc i8 %144 to i1, !dbg !14114
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14116

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14117
  store i8 %145, i8* %c, align 1, !dbg !14119
  br label %store_escape, !dbg !14120

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14121

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14122
  %cmp271 = icmp eq i64 %146, -1, !dbg !14124
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14125

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14126
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14126, !ctir !183
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14126
  %conv275 = sext i8 %148 to i32, !dbg !14126
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14127
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14122

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14128
  %cmp279 = icmp eq i64 %149, 1, !dbg !14129
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14125

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14130

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14131

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14132
  %cmp284 = icmp ne i64 %150, 0, !dbg !14134
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14135

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14136

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14137

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14138
  br label %sw.bb289, !dbg !14139

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14140
  %cmp290 = icmp eq i32 %151, 2, !dbg !14142
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14143

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14144
  %tobool293 = trunc i8 %152 to i1, !dbg !14144
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14145

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14146

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14147

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14148
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14149
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14150
  %cmp298 = icmp eq i32 %153, 2, !dbg !14152
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14153

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14154
  %tobool301 = trunc i8 %154 to i1, !dbg !14154
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14157

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14158

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14159
  %tobool304 = icmp ne i64 %155, 0, !dbg !14159
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14161

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14162
  %tobool306 = icmp ne i64 %156, 0, !dbg !14162
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14163

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14164
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14166
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14167
  br label %if.end308, !dbg !14168

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14169

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14170
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14170
  %cmp310 = icmp ult i64 %158, %159, !dbg !14170
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14173

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14170
  %161 = load i64, i64* %len, align 8, !dbg !14170
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14170, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !14170
  br label %if.end314, !dbg !14170

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14173
  %inc315 = add i64 %162, 1, !dbg !14173
  store i64 %inc315, i64* %len, align 8, !dbg !14173
  br label %do.end316, !dbg !14173

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14174

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14175
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14175
  %cmp318 = icmp ult i64 %163, %164, !dbg !14175
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14178

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14175
  %166 = load i64, i64* %len, align 8, !dbg !14175
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14175, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !14175
  br label %if.end322, !dbg !14175

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14178
  %inc323 = add i64 %167, 1, !dbg !14178
  store i64 %inc323, i64* %len, align 8, !dbg !14178
  br label %do.end324, !dbg !14178

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14179

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14180
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14180
  %cmp326 = icmp ult i64 %168, %169, !dbg !14180
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14183

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14180
  %171 = load i64, i64* %len, align 8, !dbg !14180
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14180, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !14180
  br label %if.end330, !dbg !14180

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14183
  %inc331 = add i64 %172, 1, !dbg !14183
  store i64 %inc331, i64* %len, align 8, !dbg !14183
  br label %do.end332, !dbg !14183

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14184
  br label %if.end333, !dbg !14185

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14186

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14187
  br label %sw.epilog564, !dbg !14188

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14189, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14192, metadata !DIExpression()), !dbg !14193
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14194
  %tobool336 = trunc i8 %173 to i1, !dbg !14194
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14196

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14197
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !14199
  %174 = load i16*, i16** %call338, align 8, !dbg !14199, !ctir !930
  %175 = load i8, i8* %c, align 1, !dbg !14199
  %conv339 = zext i8 %175 to i32, !dbg !14199
  %idxprom = sext i32 %conv339 to i64, !dbg !14199
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14199, !ctir !930
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14199
  %conv341 = zext i16 %176 to i32, !dbg !14199
  %and342 = and i32 %conv341, 16384, !dbg !14199
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14200
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14201
  store i8 %frombool345, i8* %printable, align 1, !dbg !14201
  br label %if.end410, !dbg !14202

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.savewd* %mbstate, metadata !14203, metadata !DIExpression()), !dbg !14205
  %177 = bitcast %struct.savewd* %mbstate to i8*, !dbg !14206
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14206
  store i64 0, i64* %m, align 8, !dbg !14207
  store i8 1, i8* %printable, align 1, !dbg !14208
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14209
  %cmp347 = icmp eq i64 %178, -1, !dbg !14211
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14212

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14213
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14214
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14215
  br label %if.end351, !dbg !14216

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14217

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14218, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14221, metadata !DIExpression()), !dbg !14222
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14223
  %181 = load i64, i64* %i, align 8, !dbg !14224
  %182 = load i64, i64* %m, align 8, !dbg !14225
  %add353 = add i64 %181, %182, !dbg !14226
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14223, !ctir !183
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14227
  %184 = load i64, i64* %i, align 8, !dbg !14228
  %185 = load i64, i64* %m, align 8, !dbg !14229
  %add355 = add i64 %184, %185, !dbg !14230
  %sub = sub i64 %183, %add355, !dbg !14231
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.savewd* %mbstate), !dbg !14232
  store i64 %call356, i64* %bytes, align 8, !dbg !14222
  %186 = load i64, i64* %bytes, align 8, !dbg !14233
  %cmp357 = icmp eq i64 %186, 0, !dbg !14235
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14236

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14237

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14238
  %cmp361 = icmp eq i64 %187, -1, !dbg !14240
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14241

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14242
  br label %do.end409, !dbg !14244

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14245
  %cmp365 = icmp eq i64 %188, -2, !dbg !14247
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14248

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14249
  br label %while.cond, !dbg !14251

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14252
  %190 = load i64, i64* %m, align 8, !dbg !14253
  %add368 = add i64 %189, %190, !dbg !14254
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14255
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14256
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14257

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14258
  %193 = load i64, i64* %i, align 8, !dbg !14259
  %194 = load i64, i64* %m, align 8, !dbg !14260
  %add371 = add i64 %193, %194, !dbg !14261
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14258, !ctir !183
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14258
  %conv373 = sext i8 %195 to i32, !dbg !14258
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14257
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14262
  br i1 %196, label %while.body, label %while.end, !dbg !14251

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14263
  %inc375 = add i64 %197, 1, !dbg !14263
  store i64 %inc375, i64* %m, align 8, !dbg !14263
  br label %while.cond, !dbg !14251, !llvm.loop !14264

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14265

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14266
  %tobool377 = trunc i8 %198 to i1, !dbg !14266
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14269

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14270
  %cmp380 = icmp eq i32 %199, 2, !dbg !14271
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14272

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14273, metadata !DIExpression()), !dbg !14275
  store i64 1, i64* %j, align 8, !dbg !14276
  br label %for.cond383, !dbg !14278

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14279
  %201 = load i64, i64* %bytes, align 8, !dbg !14281
  %cmp384 = icmp ult i64 %200, %201, !dbg !14282
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14283

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14284
  %203 = load i64, i64* %i, align 8, !dbg !14285
  %204 = load i64, i64* %m, align 8, !dbg !14286
  %add387 = add i64 %203, %204, !dbg !14287
  %205 = load i64, i64* %j, align 8, !dbg !14288
  %add388 = add i64 %add387, %205, !dbg !14289
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14284, !ctir !183
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14284
  %conv390 = sext i8 %206 to i32, !dbg !14284
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14290

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14291

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14293

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14294

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14295
  %inc395 = add i64 %207, 1, !dbg !14295
  store i64 %inc395, i64* %j, align 8, !dbg !14295
  br label %for.cond383, !dbg !14296, !llvm.loop !14297

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14299

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14300
  %call398 = call i32 @iswprint(i32 %208) #9, !dbg !14302
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14302
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14303

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14304
  br label %if.end401, !dbg !14305

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14306
  %210 = load i64, i64* %m, align 8, !dbg !14307
  %add402 = add i64 %210, %209, !dbg !14307
  store i64 %add402, i64* %m, align 8, !dbg !14307
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14308

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.savewd* %mbstate) #14, !dbg !14309
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14310
  %lnot408 = xor i1 %tobool407, true, !dbg !14310
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14308, !llvm.loop !14311

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14313
  %tobool411 = trunc i8 %211 to i1, !dbg !14313
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14314
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14314
  %212 = load i64, i64* %m, align 8, !dbg !14315
  %cmp413 = icmp ult i64 1, %212, !dbg !14317
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14318

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14319
  %tobool415 = trunc i8 %213 to i1, !dbg !14319
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14320

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14321
  %tobool418 = trunc i8 %214 to i1, !dbg !14321
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14322

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14323, metadata !DIExpression()), !dbg !14325
  %215 = load i64, i64* %i, align 8, !dbg !14326
  %216 = load i64, i64* %m, align 8, !dbg !14327
  %add420 = add i64 %215, %216, !dbg !14328
  store i64 %add420, i64* %ilim, align 8, !dbg !14325
  br label %for.cond421, !dbg !14329

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14330
  %tobool422 = trunc i8 %217 to i1, !dbg !14330
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14335

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14336
  %tobool425 = trunc i8 %218 to i1, !dbg !14336
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14337

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14338

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14340
  %tobool428 = trunc i8 %219 to i1, !dbg !14340
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14343

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14340

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14343
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14344
  %cmp431 = icmp eq i32 %220, 2, !dbg !14344
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14344

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14344
  %tobool434 = trunc i8 %221 to i1, !dbg !14344
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14343

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14346

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14348
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14348
  %cmp437 = icmp ult i64 %222, %223, !dbg !14348
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14351

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14348
  %225 = load i64, i64* %len, align 8, !dbg !14348
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14348, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !14348
  br label %if.end441, !dbg !14348

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14351
  %inc442 = add i64 %226, 1, !dbg !14351
  store i64 %inc442, i64* %len, align 8, !dbg !14351
  br label %do.end444, !dbg !14351

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14346

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14352
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14352
  %cmp446 = icmp ult i64 %227, %228, !dbg !14352
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14355

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14352
  %230 = load i64, i64* %len, align 8, !dbg !14352
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14352, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !14352
  br label %if.end450, !dbg !14352

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14355
  %inc451 = add i64 %231, 1, !dbg !14355
  store i64 %inc451, i64* %len, align 8, !dbg !14355
  br label %do.end453, !dbg !14355

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14346

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14356
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14356
  %cmp455 = icmp ult i64 %232, %233, !dbg !14356
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14359

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14356
  %235 = load i64, i64* %len, align 8, !dbg !14356
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14356, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !14356
  br label %if.end459, !dbg !14356

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14359
  %inc460 = add i64 %236, 1, !dbg !14359
  store i64 %inc460, i64* %len, align 8, !dbg !14359
  br label %do.end462, !dbg !14359

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14346
  br label %if.end463, !dbg !14346

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14343

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14360
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14360
  %cmp465 = icmp ult i64 %237, %238, !dbg !14360
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14363

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14360
  %240 = load i64, i64* %len, align 8, !dbg !14360
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14360, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !14360
  br label %if.end469, !dbg !14360

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14363
  %inc470 = add i64 %241, 1, !dbg !14363
  store i64 %inc470, i64* %len, align 8, !dbg !14363
  br label %do.end472, !dbg !14363

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14343

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14364

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14365
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14365
  %cmp476 = icmp ult i64 %242, %243, !dbg !14365
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14368

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14365
  %conv479 = zext i8 %244 to i32, !dbg !14365
  %shr = ashr i32 %conv479, 6, !dbg !14365
  %add480 = add nsw i32 48, %shr, !dbg !14365
  %conv481 = trunc i32 %add480 to i8, !dbg !14365
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14365
  %246 = load i64, i64* %len, align 8, !dbg !14365
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14365, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14365
  br label %if.end483, !dbg !14365

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14368
  %inc484 = add i64 %247, 1, !dbg !14368
  store i64 %inc484, i64* %len, align 8, !dbg !14368
  br label %do.end486, !dbg !14368

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14369

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14370
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14370
  %cmp488 = icmp ult i64 %248, %249, !dbg !14370
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14373

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14370
  %conv491 = zext i8 %250 to i32, !dbg !14370
  %shr492 = ashr i32 %conv491, 3, !dbg !14370
  %and493 = and i32 %shr492, 7, !dbg !14370
  %add494 = add nsw i32 48, %and493, !dbg !14370
  %conv495 = trunc i32 %add494 to i8, !dbg !14370
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14370
  %252 = load i64, i64* %len, align 8, !dbg !14370
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14370, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14370
  br label %if.end497, !dbg !14370

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14373
  %inc498 = add i64 %253, 1, !dbg !14373
  store i64 %inc498, i64* %len, align 8, !dbg !14373
  br label %do.end500, !dbg !14373

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14374
  %conv501 = zext i8 %254 to i32, !dbg !14374
  %and502 = and i32 %conv501, 7, !dbg !14375
  %add503 = add nsw i32 48, %and502, !dbg !14376
  %conv504 = trunc i32 %add503 to i8, !dbg !14377
  store i8 %conv504, i8* %c, align 1, !dbg !14378
  br label %if.end518, !dbg !14379

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14380
  %tobool506 = trunc i8 %255 to i1, !dbg !14380
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14382

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14383

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14385
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14385
  %cmp509 = icmp ult i64 %256, %257, !dbg !14385
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14388

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14385
  %259 = load i64, i64* %len, align 8, !dbg !14385
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14385, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !14385
  br label %if.end513, !dbg !14385

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14388
  %inc514 = add i64 %260, 1, !dbg !14388
  store i64 %inc514, i64* %len, align 8, !dbg !14388
  br label %do.end516, !dbg !14388

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14389
  br label %if.end517, !dbg !14390

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14391
  %262 = load i64, i64* %i, align 8, !dbg !14393
  %add519 = add i64 %262, 1, !dbg !14394
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14395
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14396

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14397

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14398

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14399
  %tobool525 = trunc i8 %263 to i1, !dbg !14399
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14399

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14399
  %tobool528 = trunc i8 %264 to i1, !dbg !14399
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14402

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14403

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14405
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14405
  %cmp531 = icmp ult i64 %265, %266, !dbg !14405
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14408

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14405
  %268 = load i64, i64* %len, align 8, !dbg !14405
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14405, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !14405
  br label %if.end535, !dbg !14405

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14408
  %inc536 = add i64 %269, 1, !dbg !14408
  store i64 %inc536, i64* %len, align 8, !dbg !14408
  br label %do.end538, !dbg !14408

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14403

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14409
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14409
  %cmp540 = icmp ult i64 %270, %271, !dbg !14409
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14412

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14409
  %273 = load i64, i64* %len, align 8, !dbg !14409
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14409, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !14409
  br label %if.end544, !dbg !14409

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14412
  %inc545 = add i64 %274, 1, !dbg !14412
  store i64 %inc545, i64* %len, align 8, !dbg !14412
  br label %do.end547, !dbg !14412

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14403
  br label %if.end548, !dbg !14403

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14402

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14413

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14414
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14414
  %cmp552 = icmp ult i64 %275, %276, !dbg !14414
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14417

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14414
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14414
  %279 = load i64, i64* %len, align 8, !dbg !14414
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14414, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14414
  br label %if.end556, !dbg !14414

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14417
  %inc557 = add i64 %280, 1, !dbg !14417
  store i64 %inc557, i64* %len, align 8, !dbg !14417
  br label %do.end559, !dbg !14417

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14418
  %282 = load i64, i64* %i, align 8, !dbg !14419
  %inc560 = add i64 %282, 1, !dbg !14419
  store i64 %inc560, i64* %i, align 8, !dbg !14419
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14418, !ctir !183
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14418
  store i8 %283, i8* %c, align 1, !dbg !14420
  br label %for.cond421, !dbg !14421, !llvm.loop !14422

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14425

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14426

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14427
  %tobool565 = trunc i8 %284 to i1, !dbg !14427
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14429

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14430
  %cmp568 = icmp ne i32 %285, 2, !dbg !14431
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14432

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14433
  %tobool571 = trunc i8 %286 to i1, !dbg !14433
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14434

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14435
  %tobool574 = icmp ne i32* %287, null, !dbg !14435
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14436

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14437
  %289 = load i8, i8* %c, align 1, !dbg !14438
  %conv576 = zext i8 %289 to i64, !dbg !14438
  %div = udiv i64 %conv576, 32, !dbg !14439
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14437, !ctir !945
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14437
  %291 = load i8, i8* %c, align 1, !dbg !14440
  %conv578 = zext i8 %291 to i64, !dbg !14440
  %rem = urem i64 %conv578, 32, !dbg !14441
  %sh_prom = trunc i64 %rem to i32, !dbg !14442
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14442
  %and580 = and i32 %shr579, 1, !dbg !14443
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14443
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14444

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14445
  %tobool583 = trunc i8 %292 to i1, !dbg !14445
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14446

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14447

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14445

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14448), !dbg !14449
  br label %do.body586, !dbg !14450

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14451
  %tobool587 = trunc i8 %293 to i1, !dbg !14451
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14454

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14451

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14454
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14455
  %cmp590 = icmp eq i32 %294, 2, !dbg !14455
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14455

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14455
  %tobool593 = trunc i8 %295 to i1, !dbg !14455
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14454

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14457

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14459
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14459
  %cmp596 = icmp ult i64 %296, %297, !dbg !14459
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14462

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14459
  %299 = load i64, i64* %len, align 8, !dbg !14459
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14459, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !14459
  br label %if.end600, !dbg !14459

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14462
  %inc601 = add i64 %300, 1, !dbg !14462
  store i64 %inc601, i64* %len, align 8, !dbg !14462
  br label %do.end603, !dbg !14462

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14457

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14463
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14463
  %cmp605 = icmp ult i64 %301, %302, !dbg !14463
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14466

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14463
  %304 = load i64, i64* %len, align 8, !dbg !14463
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14463, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !14463
  br label %if.end609, !dbg !14463

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14466
  %inc610 = add i64 %305, 1, !dbg !14466
  store i64 %inc610, i64* %len, align 8, !dbg !14466
  br label %do.end612, !dbg !14466

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14457

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14467
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14467
  %cmp614 = icmp ult i64 %306, %307, !dbg !14467
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14470

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14467
  %309 = load i64, i64* %len, align 8, !dbg !14467
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14467, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !14467
  br label %if.end618, !dbg !14467

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14470
  %inc619 = add i64 %310, 1, !dbg !14470
  store i64 %inc619, i64* %len, align 8, !dbg !14470
  br label %do.end621, !dbg !14470

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14457
  br label %if.end622, !dbg !14457

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14454

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14471
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14471
  %cmp624 = icmp ult i64 %311, %312, !dbg !14471
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14474

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14471
  %314 = load i64, i64* %len, align 8, !dbg !14471
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14471, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !14471
  br label %if.end628, !dbg !14471

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14474
  %inc629 = add i64 %315, 1, !dbg !14474
  store i64 %inc629, i64* %len, align 8, !dbg !14474
  br label %do.end631, !dbg !14474

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14454

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14454

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14475), !dbg !14476
  br label %do.body634, !dbg !14477

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14478
  %tobool635 = trunc i8 %316 to i1, !dbg !14478
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14478

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14478
  %tobool638 = trunc i8 %317 to i1, !dbg !14478
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14481

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14482

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14484
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14484
  %cmp641 = icmp ult i64 %318, %319, !dbg !14484
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14487

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14484
  %321 = load i64, i64* %len, align 8, !dbg !14484
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14484, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !14484
  br label %if.end645, !dbg !14484

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14487
  %inc646 = add i64 %322, 1, !dbg !14487
  store i64 %inc646, i64* %len, align 8, !dbg !14487
  br label %do.end648, !dbg !14487

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14482

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14488
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14488
  %cmp650 = icmp ult i64 %323, %324, !dbg !14488
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14491

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14488
  %326 = load i64, i64* %len, align 8, !dbg !14488
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14488, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !14488
  br label %if.end654, !dbg !14488

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14491
  %inc655 = add i64 %327, 1, !dbg !14491
  store i64 %inc655, i64* %len, align 8, !dbg !14491
  br label %do.end657, !dbg !14491

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14482
  br label %if.end658, !dbg !14482

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14481

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14492

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14493
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14493
  %cmp662 = icmp ult i64 %328, %329, !dbg !14493
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14496

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14493
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14493
  %332 = load i64, i64* %len, align 8, !dbg !14493
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14493, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14493
  br label %if.end666, !dbg !14493

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14496
  %inc667 = add i64 %333, 1, !dbg !14496
  store i64 %inc667, i64* %len, align 8, !dbg !14496
  br label %do.end669, !dbg !14496

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14497
  %tobool670 = trunc i8 %334 to i1, !dbg !14497
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14499

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14500
  br label %if.end672, !dbg !14501

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14502

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14503
  %inc674 = add i64 %335, 1, !dbg !14503
  store i64 %inc674, i64* %i, align 8, !dbg !14503
  br label %for.cond44, !dbg !14504, !llvm.loop !14505

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14507
  %cmp676 = icmp eq i64 %336, 0, !dbg !14509
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14510

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14511
  %cmp679 = icmp eq i32 %337, 2, !dbg !14512
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14513

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14514
  %tobool682 = trunc i8 %338 to i1, !dbg !14514
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14515

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14516

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14517
  %cmp686 = icmp eq i32 %339, 2, !dbg !14519
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14520

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14521
  %tobool689 = trunc i8 %340 to i1, !dbg !14521
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14522

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14523
  %tobool691 = trunc i8 %341 to i1, !dbg !14523
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14524

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14525
  %tobool694 = trunc i8 %342 to i1, !dbg !14525
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14528

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14529
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14530
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14531
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14532
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14533
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14534
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14535
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14536
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14537
  store i64 %call696, i64* %retval, align 8, !dbg !14538
  br label %return, !dbg !14538

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14539
  %tobool698 = icmp ne i64 %351, 0, !dbg !14539
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14541

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14542
  %tobool700 = icmp ne i64 %352, 0, !dbg !14542
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14543

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14544
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14546
  store i64 0, i64* %len, align 8, !dbg !14547
  br label %process_input, !dbg !14548

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14549

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14550
  %tobool705 = icmp ne i8* %354, null, !dbg !14550
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14552

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14553
  %tobool707 = trunc i8 %355 to i1, !dbg !14553
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14554

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14555

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14556
  %357 = load i8, i8* %356, align 1, !dbg !14559, !ctir !184
  %tobool710 = icmp ne i8 %357, 0, !dbg !14560
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14560

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14561

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14562
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14562
  %cmp713 = icmp ult i64 %358, %359, !dbg !14562
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14565

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14562
  %361 = load i8, i8* %360, align 1, !dbg !14562, !ctir !184
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14562
  %363 = load i64, i64* %len, align 8, !dbg !14562
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14562, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14562
  br label %if.end717, !dbg !14562

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14565
  %inc718 = add i64 %364, 1, !dbg !14565
  store i64 %inc718, i64* %len, align 8, !dbg !14565
  br label %do.end720, !dbg !14565

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14565

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14566
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14566, !ctir !184
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14566
  br label %for.cond709, !dbg !14567, !llvm.loop !14568

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14569

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14570
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14572
  %cmp725 = icmp ult i64 %366, %367, !dbg !14573
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14574

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14575
  %369 = load i64, i64* %len, align 8, !dbg !14576
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14575, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !14577
  br label %if.end729, !dbg !14575

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14578
  store i64 %370, i64* %retval, align 8, !dbg !14579
  br label %return, !dbg !14579

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14580), !dbg !14581
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14582
  %cmp730 = icmp eq i32 %371, 2, !dbg !14584
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14585

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14586
  %tobool733 = trunc i8 %372 to i1, !dbg !14586
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14587

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14588
  br label %if.end736, !dbg !14589

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14590
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14591
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14592
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14593
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14594
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14595
  %and737 = and i32 %378, -3, !dbg !14596
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14597
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14598
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14599
  store i64 %call738, i64* %retval, align 8, !dbg !14600
  br label %return, !dbg !14600

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14601
  ret i64 %381, !dbg !14601
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14602 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !183
  %locale_code = alloca i8*, align 8, !ctir !183
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14605, metadata !DIExpression()), !dbg !14606
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14607, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14609, metadata !DIExpression()), !dbg !14610
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14611
  %call = call i8* @gettext(i8* %0) #9, !dbg !14611
  store i8* %call, i8** %translation, align 8, !dbg !14610
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14612, metadata !DIExpression()), !dbg !14613
  %1 = load i8*, i8** %translation, align 8, !dbg !14614
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14616
  %cmp = icmp ne i8* %1, %2, !dbg !14617
  br i1 %cmp, label %if.then, label %if.end, !dbg !14618

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14619
  store i8* %3, i8** %retval, align 8, !dbg !14620
  br label %return, !dbg !14620

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14621
  store i8* %call1, i8** %locale_code, align 8, !dbg !14622
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14623
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.331, i64 0, i64 0)) #14, !dbg !14623
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14623
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14625

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14626
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14626, !ctir !183
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14626
  %conv = sext i8 %6 to i32, !dbg !14626
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14627
  %7 = zext i1 %cmp5 to i64, !dbg !14626
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.332, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.333, i64 0, i64 0), !dbg !14626
  store i8* %cond, i8** %retval, align 8, !dbg !14628
  br label %return, !dbg !14628

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14629
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.334, i64 0, i64 0)) #14, !dbg !14629
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14629
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14631

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14632
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14632, !ctir !183
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14632
  %conv13 = sext i8 %10 to i32, !dbg !14632
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14633
  %11 = zext i1 %cmp14 to i64, !dbg !14632
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.335, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.336, i64 0, i64 0), !dbg !14632
  store i8* %cond16, i8** %retval, align 8, !dbg !14634
  br label %return, !dbg !14634

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14635
  %cmp18 = icmp eq i32 %12, 9, !dbg !14636
  %13 = zext i1 %cmp18 to i64, !dbg !14635
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), !dbg !14635
  store i8* %cond20, i8** %retval, align 8, !dbg !14637
  br label %return, !dbg !14637

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14638
  ret i8* %14, !dbg !14638
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.savewd*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14639 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14642, metadata !DIExpression()), !dbg !14643
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14644, metadata !DIExpression()), !dbg !14645
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14646, metadata !DIExpression()), !dbg !14647
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14648
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14649
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14650
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14651
  ret i8* %call, !dbg !14652
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14653 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !922
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14656, metadata !DIExpression()), !dbg !14657
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14658, metadata !DIExpression()), !dbg !14659
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14660, metadata !DIExpression()), !dbg !14661
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14662, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14664, metadata !DIExpression()), !dbg !14665
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14666
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14666
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14666

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14667
  br label %cond.end, !dbg !14666

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14666
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14665
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14668, metadata !DIExpression()), !dbg !14669
  %call = call i32* @__errno_location() #16, !dbg !14670
  %2 = load i32, i32* %call, align 4, !dbg !14670, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14669
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14671, metadata !DIExpression()), !dbg !14672
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14673
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14674, !ctir !923
  %4 = load i32, i32* %flags1, align 4, !dbg !14674, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14675
  %tobool2 = icmp ne i64* %5, null, !dbg !14675
  %6 = zext i1 %tobool2 to i64, !dbg !14675
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14675
  %or = or i32 %4, %cond3, !dbg !14676
  store i32 %or, i32* %flags, align 4, !dbg !14672
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14677, metadata !DIExpression()), !dbg !14678
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14679
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14680
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14681
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14682, !ctir !923
  %10 = load i32, i32* %style, align 8, !dbg !14682, !ctir !893
  %11 = load i32, i32* %flags, align 4, !dbg !14683
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14684
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14685, !ctir !923
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14684, !ctir !924
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14686
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14687, !ctir !923
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14687, !ctir !183
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14688
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14689, !ctir !923
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14689, !ctir !183
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14690
  %add = add i64 %call4, 1, !dbg !14691
  store i64 %add, i64* %bufsize, align 8, !dbg !14678
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14692, metadata !DIExpression()), !dbg !14693
  %17 = load i64, i64* %bufsize, align 8, !dbg !14694
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14695
  store i8* %call5, i8** %buf, align 8, !dbg !14693
  %18 = load i8*, i8** %buf, align 8, !dbg !14696
  %19 = load i64, i64* %bufsize, align 8, !dbg !14697
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14698
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14699
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14700
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14701, !ctir !923
  %23 = load i32, i32* %style6, align 8, !dbg !14701, !ctir !893
  %24 = load i32, i32* %flags, align 4, !dbg !14702
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14703
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14704, !ctir !923
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14703, !ctir !924
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14705
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14706, !ctir !923
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14706, !ctir !183
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14707
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14708, !ctir !923
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14708, !ctir !183
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14709
  %30 = load i32, i32* %e, align 4, !dbg !14710
  %call12 = call i32* @__errno_location() #16, !dbg !14711
  store i32 %30, i32* %call12, align 4, !dbg !14712, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14713
  %tobool13 = icmp ne i64* %31, null, !dbg !14713
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14715

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14716
  %sub = sub i64 %32, 1, !dbg !14717
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14718
  store i64 %sub, i64* %33, align 8, !dbg !14719, !ctir !55
  br label %if.end, !dbg !14720

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14721
  ret i8* %34, !dbg !14722
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14723 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !925
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14724, metadata !DIExpression()), !dbg !14725
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14726
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14727, metadata !DIExpression()), !dbg !14728
  store i32 1, i32* %i, align 4, !dbg !14729
  br label %for.cond, !dbg !14731

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14732
  %2 = load i32, i32* @nslots, align 4, !dbg !14734
  %cmp = icmp slt i32 %1, %2, !dbg !14735
  br i1 %cmp, label %for.body, label %for.end, !dbg !14736

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14737
  %4 = load i32, i32* %i, align 4, !dbg !14738
  %idxprom = sext i32 %4 to i64, !dbg !14737
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14737, !ctir !925
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14739, !ctir !926
  %5 = load i8*, i8** %val, align 8, !dbg !14739, !ctir !9
  call void @free(i8* %5) #9, !dbg !14740
  br label %for.inc, !dbg !14740

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14741
  %inc = add nsw i32 %6, 1, !dbg !14741
  store i32 %inc, i32* %i, align 4, !dbg !14741
  br label %for.cond, !dbg !14742, !llvm.loop !14743

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14745
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14745, !ctir !925
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14747, !ctir !926
  %8 = load i8*, i8** %val2, align 8, !dbg !14747, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14748
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14749

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14750
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14750, !ctir !925
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14752, !ctir !926
  %10 = load i8*, i8** %val5, align 8, !dbg !14752, !ctir !9
  call void @free(i8* %10) #9, !dbg !14753
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14754, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14755, !ctir !9
  br label %if.end, !dbg !14756

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14757
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14759
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14760

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14761
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14761
  call void @free(i8* %13) #9, !dbg !14763
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14764
  br label %if.end8, !dbg !14765

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14766
  ret void, !dbg !14767
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14768 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14771, metadata !DIExpression()), !dbg !14772
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14773, metadata !DIExpression()), !dbg !14774
  %0 = load i32, i32* %n.addr, align 4, !dbg !14775
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14776
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14777
  ret i8* %call, !dbg !14778
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14779 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !925
  %preallocated = alloca i8, align 1, !ctir !142
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14782, metadata !DIExpression()), !dbg !14783
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14784, metadata !DIExpression()), !dbg !14785
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14786, metadata !DIExpression()), !dbg !14787
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14788, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14790, metadata !DIExpression()), !dbg !14791
  %call = call i32* @__errno_location() #16, !dbg !14792
  %0 = load i32, i32* %call, align 4, !dbg !14792, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14791
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14793, metadata !DIExpression()), !dbg !14794
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14795
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14794
  %2 = load i32, i32* %n.addr, align 4, !dbg !14796
  %cmp = icmp slt i32 %2, 0, !dbg !14798
  br i1 %cmp, label %if.then, label %if.end, !dbg !14799

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14800
  unreachable, !dbg !14800

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14801
  %4 = load i32, i32* %n.addr, align 4, !dbg !14803
  %cmp1 = icmp sle i32 %3, %4, !dbg !14804
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14805

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14806, metadata !DIExpression()), !dbg !14808
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14809
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14810
  %frombool = zext i1 %cmp3 to i8, !dbg !14808
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14808
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14811, metadata !DIExpression()), !dbg !14812
  store i32 2147483646, i32* %nmax, align 4, !dbg !14812
  %6 = load i32, i32* %nmax, align 4, !dbg !14813
  %7 = load i32, i32* %n.addr, align 4, !dbg !14815
  %cmp4 = icmp slt i32 %6, %7, !dbg !14816
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14817

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !14818
  unreachable, !dbg !14818

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14819
  %tobool = trunc i8 %8 to i1, !dbg !14819
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14819

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14819

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14820
  br label %cond.end, !dbg !14819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14819
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14819
  %11 = load i32, i32* %n.addr, align 4, !dbg !14821
  %add = add nsw i32 %11, 1, !dbg !14822
  %conv = sext i32 %add to i64, !dbg !14823
  %mul = mul i64 %conv, 16, !dbg !14824
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14825
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14825
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14826
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14827
  %13 = load i8, i8* %preallocated, align 1, !dbg !14828
  %tobool8 = trunc i8 %13 to i1, !dbg !14828
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14830

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14831
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14832
  br label %if.end10, !dbg !14833

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14834
  %17 = load i32, i32* @nslots, align 4, !dbg !14835
  %idx.ext = sext i32 %17 to i64, !dbg !14836
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14836, !ctir !926
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14837
  %19 = load i32, i32* %n.addr, align 4, !dbg !14838
  %add11 = add nsw i32 %19, 1, !dbg !14839
  %20 = load i32, i32* @nslots, align 4, !dbg !14840
  %sub = sub nsw i32 %add11, %20, !dbg !14841
  %conv12 = sext i32 %sub to i64, !dbg !14842
  %mul13 = mul i64 %conv12, 16, !dbg !14843
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14837
  %21 = load i32, i32* %n.addr, align 4, !dbg !14844
  %add14 = add nsw i32 %21, 1, !dbg !14845
  store i32 %add14, i32* @nslots, align 4, !dbg !14846
  br label %if.end15, !dbg !14847

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14848, metadata !DIExpression()), !dbg !14850
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14851
  %23 = load i32, i32* %n.addr, align 4, !dbg !14852
  %idxprom = sext i32 %23 to i64, !dbg !14851
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14851, !ctir !925
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14853, !ctir !926
  %24 = load i64, i64* %size16, align 8, !dbg !14853, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !14850
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14854, metadata !DIExpression()), !dbg !14855
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14856
  %26 = load i32, i32* %n.addr, align 4, !dbg !14857
  %idxprom17 = sext i32 %26 to i64, !dbg !14856
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14856, !ctir !925
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14858, !ctir !926
  %27 = load i8*, i8** %val19, align 8, !dbg !14858, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !14855
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14859, metadata !DIExpression()), !dbg !14860
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14861
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14862, !ctir !923
  %29 = load i32, i32* %flags20, align 4, !dbg !14862, !ctir !7
  %or = or i32 %29, 1, !dbg !14863
  store i32 %or, i32* %flags, align 4, !dbg !14860
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14864, metadata !DIExpression()), !dbg !14865
  %30 = load i8*, i8** %val, align 8, !dbg !14866
  %31 = load i64, i64* %size, align 8, !dbg !14867
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14868
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14869
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14870
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14871, !ctir !923
  %35 = load i32, i32* %style, align 8, !dbg !14871, !ctir !893
  %36 = load i32, i32* %flags, align 4, !dbg !14872
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14873
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14874, !ctir !923
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14873, !ctir !924
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14875
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14876, !ctir !923
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14876, !ctir !183
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14877
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14878, !ctir !923
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14878, !ctir !183
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14879
  store i64 %call21, i64* %qsize, align 8, !dbg !14865
  %42 = load i64, i64* %size, align 8, !dbg !14880
  %43 = load i64, i64* %qsize, align 8, !dbg !14882
  %cmp22 = icmp ule i64 %42, %43, !dbg !14883
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14884

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14885
  %add25 = add i64 %44, 1, !dbg !14887
  store i64 %add25, i64* %size, align 8, !dbg !14888
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14889
  %46 = load i32, i32* %n.addr, align 4, !dbg !14890
  %idxprom26 = sext i32 %46 to i64, !dbg !14889
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14889, !ctir !925
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14891, !ctir !926
  store i64 %add25, i64* %size28, align 8, !dbg !14892, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !14893
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14895
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14896

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14897
  call void @free(i8* %48) #9, !dbg !14898
  br label %if.end32, !dbg !14898

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14899
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14900
  store i8* %call33, i8** %val, align 8, !dbg !14901
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14902
  %51 = load i32, i32* %n.addr, align 4, !dbg !14903
  %idxprom34 = sext i32 %51 to i64, !dbg !14902
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14902, !ctir !925
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14904, !ctir !926
  store i8* %call33, i8** %val36, align 8, !dbg !14905, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !14906
  %53 = load i64, i64* %size, align 8, !dbg !14907
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14908
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14909
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14910
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14911, !ctir !923
  %57 = load i32, i32* %style37, align 8, !dbg !14911, !ctir !893
  %58 = load i32, i32* %flags, align 4, !dbg !14912
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14913
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14914, !ctir !923
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14913, !ctir !924
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14915
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14916, !ctir !923
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14916, !ctir !183
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14917
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14918, !ctir !923
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14918, !ctir !183
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14919
  br label %if.end43, !dbg !14920

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14921
  %call44 = call i32* @__errno_location() #16, !dbg !14922
  store i32 %64, i32* %call44, align 4, !dbg !14923, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !14924
  ret i8* %65, !dbg !14925
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14926 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14929, metadata !DIExpression()), !dbg !14930
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14931, metadata !DIExpression()), !dbg !14932
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14933, metadata !DIExpression()), !dbg !14934
  %0 = load i32, i32* %n.addr, align 4, !dbg !14935
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14936
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14937
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14938
  ret i8* %call, !dbg !14939
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14940 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14941, metadata !DIExpression()), !dbg !14942
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14943
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14944
  ret i8* %call, !dbg !14945
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14946 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14947, metadata !DIExpression()), !dbg !14948
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14949, metadata !DIExpression()), !dbg !14950
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14951
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14952
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14953
  ret i8* %call, !dbg !14954
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14955 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !923
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14958, metadata !DIExpression()), !dbg !14959
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14960, metadata !DIExpression()), !dbg !14961
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14962, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14964, metadata !DIExpression()), !dbg !14965
  %0 = load i32, i32* %s.addr, align 4, !dbg !14966
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14967
  %1 = load i32, i32* %n.addr, align 4, !dbg !14968
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14969
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14970
  ret i8* %call, !dbg !14971
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14972 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14975, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14977, metadata !DIExpression()), !dbg !14978
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14978
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14978
  %1 = load i32, i32* %style.addr, align 4, !dbg !14979
  %cmp = icmp eq i32 %1, 10, !dbg !14981
  br i1 %cmp, label %if.then, label %if.end, !dbg !14982

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14983
  unreachable, !dbg !14983

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14984
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14985, !ctir !912
  store i32 %2, i32* %style1, align 8, !dbg !14986, !ctir !893
  ret void, !dbg !14987
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14988 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !923
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14991, metadata !DIExpression()), !dbg !14992
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14993, metadata !DIExpression()), !dbg !14994
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14995, metadata !DIExpression()), !dbg !14996
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14997, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14999, metadata !DIExpression()), !dbg !15000
  %0 = load i32, i32* %s.addr, align 4, !dbg !15001
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15002
  %1 = load i32, i32* %n.addr, align 4, !dbg !15003
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15004
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15005
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15006
  ret i8* %call, !dbg !15007
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15008 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15013, metadata !DIExpression()), !dbg !15014
  %0 = load i32, i32* %s.addr, align 4, !dbg !15015
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15016
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15017
  ret i8* %call, !dbg !15018
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15019 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  %0 = load i32, i32* %s.addr, align 4, !dbg !15028
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15029
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15030
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15031
  ret i8* %call, !dbg !15032
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15033 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !912
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15036, metadata !DIExpression()), !dbg !15037
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15038, metadata !DIExpression()), !dbg !15039
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15042, metadata !DIExpression()), !dbg !15043
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15044
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15045
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15046
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15047
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15048
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15049
  ret i8* %call1, !dbg !15050
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15051 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15054, metadata !DIExpression()), !dbg !15055
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15056, metadata !DIExpression()), !dbg !15057
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15058
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15059
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15060
  ret i8* %call, !dbg !15061
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15062 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15063, metadata !DIExpression()), !dbg !15064
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15065
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15066
  ret i8* %call, !dbg !15067
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15068 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15069, metadata !DIExpression()), !dbg !15070
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15071, metadata !DIExpression()), !dbg !15072
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15073
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15074
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15075
  ret i8* %call, !dbg !15076
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15077 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !912
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15078, metadata !DIExpression()), !dbg !15079
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15080, metadata !DIExpression()), !dbg !15081
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15082, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15084, metadata !DIExpression()), !dbg !15085
  %0 = load i32, i32* %s.addr, align 4, !dbg !15086
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15087
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15087
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15087
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15088
  %3 = load i32, i32* %n.addr, align 4, !dbg !15089
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15090
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15091
  ret i8* %call1, !dbg !15092
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15093 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15096, metadata !DIExpression()), !dbg !15097
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = load i32, i32* %n.addr, align 4, !dbg !15104
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15105
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15106
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15107
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15108
  ret i8* %call, !dbg !15109
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15110 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !912
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15113, metadata !DIExpression()), !dbg !15114
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15115, metadata !DIExpression()), !dbg !15116
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15117, metadata !DIExpression()), !dbg !15118
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15119, metadata !DIExpression()), !dbg !15120
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15121, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15123, metadata !DIExpression()), !dbg !15124
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15125
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15126
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15127
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15128
  %3 = load i32, i32* %n.addr, align 4, !dbg !15129
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15130
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15131
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15132
  ret i8* %call, !dbg !15133
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15134 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15139, metadata !DIExpression()), !dbg !15140
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15141, metadata !DIExpression()), !dbg !15142
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15143
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15144
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15145
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15146
  ret i8* %call, !dbg !15147
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15148 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15151, metadata !DIExpression()), !dbg !15152
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15153, metadata !DIExpression()), !dbg !15154
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15155, metadata !DIExpression()), !dbg !15156
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15157, metadata !DIExpression()), !dbg !15158
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15159
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15160
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15161
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15162
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15163
  ret i8* %call, !dbg !15164
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15165 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15168, metadata !DIExpression()), !dbg !15169
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15170, metadata !DIExpression()), !dbg !15171
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  %0 = load i32, i32* %n.addr, align 4, !dbg !15174
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15175
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15176
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15177
  ret i8* %call, !dbg !15178
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15179 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15182, metadata !DIExpression()), !dbg !15183
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15184, metadata !DIExpression()), !dbg !15185
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15186
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15187
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15188
  ret i8* %call, !dbg !15189
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15190 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15193, metadata !DIExpression()), !dbg !15194
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15195, metadata !DIExpression()), !dbg !15196
  %0 = load i32, i32* %n.addr, align 4, !dbg !15197
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15198
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15199
  ret i8* %call, !dbg !15200
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15201 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15204, metadata !DIExpression()), !dbg !15205
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15206
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15207
  ret i8* %call, !dbg !15208
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15209 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !142
  %dst_slash = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !15213
  %dst_st = alloca %struct.stat, align 8, !ctir !15213
  %dst_found_nonexistent = alloca i8, align 1, !ctir !142
  store i32 %fd1, i32* %fd1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15234, metadata !DIExpression()), !dbg !15235
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15236, metadata !DIExpression()), !dbg !15237
  store i32 %fd2, i32* %fd2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15238, metadata !DIExpression()), !dbg !15239
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15242, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15244, metadata !DIExpression()), !dbg !15245
  store i32 -1, i32* %ret_val, align 4, !dbg !15245
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15246, metadata !DIExpression()), !dbg !15247
  store i32 22, i32* %err, align 4, !dbg !15247
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15248
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15249
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15250
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15251
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15252
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #9, !dbg !15253
  store i32 %call, i32* %ret_val, align 4, !dbg !15254
  %call1 = call i32* @__errno_location() #16, !dbg !15255
  %5 = load i32, i32* %call1, align 4, !dbg !15255, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !15256
  %6 = load i32, i32* %ret_val, align 4, !dbg !15257
  %cmp = icmp slt i32 %6, 0, !dbg !15259
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15260

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15261
  %cmp2 = icmp eq i32 %7, 22, !dbg !15262
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !15263

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15264
  %cmp3 = icmp eq i32 %8, 38, !dbg !15265
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !15266

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15267
  %cmp5 = icmp eq i32 %9, 95, !dbg !15268
  br i1 %cmp5, label %if.end, label %if.then, !dbg !15269

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15270
  store i32 %10, i32* %retval, align 4, !dbg !15271
  br label %return, !dbg !15271

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15272, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15275, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15277, metadata !DIExpression()), !dbg !15278
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15279
  store i8* %11, i8** %src_temp, align 8, !dbg !15278
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15280, metadata !DIExpression()), !dbg !15281
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15282
  store i8* %12, i8** %dst_temp, align 8, !dbg !15281
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15283, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15285, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15287, metadata !DIExpression()), !dbg !15288
  store i32 20, i32* %rename_errno, align 4, !dbg !15288
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15289, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15291, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15293, metadata !DIExpression()), !dbg !15294
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15294
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15295
  %cmp6 = icmp ne i32 %13, 0, !dbg !15297
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !15298

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15299
  %and = and i32 %14, -2, !dbg !15302
  %tobool = icmp ne i32 %and, 0, !dbg !15302
  br i1 %tobool, label %if.then8, label %if.else, !dbg !15303

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !15304
  store i32 %call9, i32* %retval, align 4, !dbg !15305
  br label %return, !dbg !15305

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15306
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15309
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15310
  %cmp11 = icmp eq i32 %call10, 0, !dbg !15311
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !15312

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #16, !dbg !15313
  %17 = load i32, i32* %call13, align 4, !dbg !15313, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !15314
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !15315

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !15316
  store i32 %call16, i32* %retval, align 4, !dbg !15317
  br label %return, !dbg !15317

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #16, !dbg !15318
  %18 = load i32, i32* %call18, align 4, !dbg !15318, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !15320
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !15321

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !15322
  br label %return, !dbg !15322

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15323
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !15324

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15325
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !15326
  store i64 %call24, i64* %src_len, align 8, !dbg !15327
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15328
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !15329
  store i64 %call25, i64* %dst_len, align 8, !dbg !15330
  %21 = load i64, i64* %src_len, align 8, !dbg !15331
  %tobool26 = icmp ne i64 %21, 0, !dbg !15331
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !15333

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !15334
  %tobool28 = icmp ne i64 %22, 0, !dbg !15334
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !15335

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15336
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15337
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15338
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15339
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #9, !dbg !15340
  store i32 %call30, i32* %retval, align 4, !dbg !15341
  br label %return, !dbg !15341

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15342
  %28 = load i64, i64* %src_len, align 8, !dbg !15343
  %sub = sub i64 %28, 1, !dbg !15344
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15342, !ctir !183
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15342
  %conv = sext i8 %29 to i32, !dbg !15342
  %cmp32 = icmp eq i32 %conv, 47, !dbg !15345
  %frombool = zext i1 %cmp32 to i8, !dbg !15346
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15346
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15347
  %31 = load i64, i64* %dst_len, align 8, !dbg !15348
  %sub34 = sub i64 %31, 1, !dbg !15349
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !15347, !ctir !183
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !15347
  %conv36 = sext i8 %32 to i32, !dbg !15347
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !15350
  %frombool39 = zext i1 %cmp37 to i8, !dbg !15351
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !15351
  %33 = load i8, i8* %src_slash, align 1, !dbg !15352
  %tobool40 = trunc i8 %33 to i1, !dbg !15352
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !15354

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15355
  %tobool42 = trunc i8 %34 to i1, !dbg !15355
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !15356

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15357
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15358
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15359
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15360
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #9, !dbg !15361
  store i32 %call44, i32* %retval, align 4, !dbg !15362
  br label %return, !dbg !15362

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15363
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15365
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15366
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15366
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15367

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !15368
  br label %return, !dbg !15368

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15369
  %tobool50 = trunc i8 %41 to i1, !dbg !15369
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !15371

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15372, !ctir !15213
  %42 = load i32, i32* %st_mode, align 8, !dbg !15372, !ctir !140
  %and52 = and i32 %42, 61440, !dbg !15372
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !15372
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !15375

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !15376
  store i32 %call56, i32* %retval, align 4, !dbg !15377
  br label %return, !dbg !15377

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !15378

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15379
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15381
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15382
  %tobool60 = icmp ne i32 %call59, 0, !dbg !15382
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !15383

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #16, !dbg !15384
  %45 = load i32, i32* %call62, align 4, !dbg !15384, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !15387
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !15388

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15389, !ctir !15213
  %46 = load i32, i32* %st_mode66, align 8, !dbg !15389, !ctir !140
  %and67 = and i32 %46, 61440, !dbg !15389
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !15389
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !15390

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !15391
  br label %return, !dbg !15391

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !15392

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15393, !ctir !15213
  %47 = load i32, i32* %st_mode73, align 8, !dbg !15393, !ctir !140
  %and74 = and i32 %47, 61440, !dbg !15393
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !15393
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !15395

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !15396
  store i32 %call78, i32* %retval, align 4, !dbg !15397
  br label %return, !dbg !15397

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15398, !ctir !15213
  %48 = load i32, i32* %st_mode80, align 8, !dbg !15398, !ctir !140
  %and81 = and i32 %48, 61440, !dbg !15398
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !15398
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !15400

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !15401
  store i32 %call85, i32* %retval, align 4, !dbg !15402
  br label %return, !dbg !15402

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15403
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15404
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15405
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15406
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #9, !dbg !15407
  store i32 %call90, i32* %ret_val, align 4, !dbg !15408
  %call91 = call i32* @__errno_location() #16, !dbg !15409
  %53 = load i32, i32* %call91, align 4, !dbg !15409, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !15410
  br label %out, !dbg !15411

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !15412), !dbg !15413
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15414
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15416
  %cmp92 = icmp ne i8* %54, %55, !dbg !15417
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15418

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15419
  call void @free(i8* %56) #9, !dbg !15420
  br label %if.end95, !dbg !15420

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15421
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15423
  %cmp96 = icmp ne i8* %57, %58, !dbg !15424
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !15425

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15426
  call void @free(i8* %59) #9, !dbg !15427
  br label %if.end99, !dbg !15427

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15428
  %call100 = call i32* @__errno_location() #16, !dbg !15429
  store i32 %60, i32* %call100, align 4, !dbg !15430, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !15431
  store i32 %61, i32* %retval, align 4, !dbg !15432
  br label %return, !dbg !15432

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15433
  ret i32 %62, !dbg !15433
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15434 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15437, metadata !DIExpression()), !dbg !15438
  %0 = load i32, i32* %e.addr, align 4, !dbg !15439
  %call = call i32* @__errno_location() #16, !dbg !15440
  store i32 %0, i32* %call, align 4, !dbg !15441, !ctir !7
  ret i32 -1, !dbg !15442
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15443 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !661
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15445, metadata !DIExpression()), !dbg !15446
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15447, metadata !DIExpression()), !dbg !15448
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15449, metadata !DIExpression()), !dbg !15450
  br label %for.cond, !dbg !15451

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15452, metadata !DIExpression()), !dbg !15456
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15457
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15458
  %2 = load i64, i64* %count.addr, align 8, !dbg !15459
  %call = call i64 @read(i32 %0, i8* %1, i64 %2), !dbg !15460
  store i64 %call, i64* %result, align 8, !dbg !15456
  %3 = load i64, i64* %result, align 8, !dbg !15461
  %cmp = icmp sle i64 0, %3, !dbg !15463
  br i1 %cmp, label %if.then, label %if.else, !dbg !15464

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15465
  store i64 %4, i64* %retval, align 8, !dbg !15466
  br label %return, !dbg !15466

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15467
  %5 = load i32, i32* %call1, align 4, !dbg !15467, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15467
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15469

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15470, !llvm.loop !15471

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15474
  %6 = load i32, i32* %call5, align 4, !dbg !15474, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15476
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15477

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15478
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15479
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15480

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15481
  br label %if.end, !dbg !15482

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15483
  store i64 %8, i64* %retval, align 8, !dbg !15484
  br label %return, !dbg !15484

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15485, !llvm.loop !15471

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15486
  ret i64 %9, !dbg !15486
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15487 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !661
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15488, metadata !DIExpression()), !dbg !15489
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15490, metadata !DIExpression()), !dbg !15491
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15492, metadata !DIExpression()), !dbg !15493
  br label %for.cond, !dbg !15494

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15495, metadata !DIExpression()), !dbg !15499
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15500
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15501
  %2 = load i64, i64* %count.addr, align 8, !dbg !15502
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15503
  store i64 %call, i64* %result, align 8, !dbg !15499
  %3 = load i64, i64* %result, align 8, !dbg !15504
  %cmp = icmp sle i64 0, %3, !dbg !15506
  br i1 %cmp, label %if.then, label %if.else, !dbg !15507

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15508
  store i64 %4, i64* %retval, align 8, !dbg !15509
  br label %return, !dbg !15509

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15510
  %5 = load i32, i32* %call1, align 4, !dbg !15510, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15510
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15512

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15513, !llvm.loop !15514

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15517
  %6 = load i32, i32* %call5, align 4, !dbg !15517, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15519
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15520

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15521
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15522
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15523

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15524
  br label %if.end, !dbg !15525

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15526
  store i64 %8, i64* %retval, align 8, !dbg !15527
  br label %return, !dbg !15527

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15528, !llvm.loop !15514

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15529
  ret i64 %9, !dbg !15529
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15530 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15534, metadata !DIExpression()), !dbg !15535
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15536, metadata !DIExpression()), !dbg !15537
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15538
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15539
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15540
  ret i1 %call, !dbg !15541
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15542 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !183
  %dest_basename = alloca i8*, align 8, !ctir !183
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !142
  %compare_dirs = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15545
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15545
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15566, metadata !DIExpression()), !dbg !15567
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15568, metadata !DIExpression()), !dbg !15569
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15570, metadata !DIExpression()), !dbg !15571
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15572, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15574, metadata !DIExpression()), !dbg !15575
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15576
  %call = call i8* @last_component(i8* %0) #14, !dbg !15577
  store i8* %call, i8** %source_basename, align 8, !dbg !15575
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15578, metadata !DIExpression()), !dbg !15579
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15580
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15581
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15579
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15582, metadata !DIExpression()), !dbg !15583
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15584
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15585
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15583
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15586, metadata !DIExpression()), !dbg !15587
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15588
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15589
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15587
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15590, metadata !DIExpression()), !dbg !15591
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15592
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15593
  %cmp = icmp eq i64 %4, %5, !dbg !15594
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15595

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15596
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15597
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15598
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15599
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15600
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15601
  %frombool = zext i1 %9 to i8, !dbg !15591
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15591
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15602, metadata !DIExpression()), !dbg !15603
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15604
  %tobool = trunc i8 %10 to i1, !dbg !15604
  %frombool6 = zext i1 %tobool to i8, !dbg !15603
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15603
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15605, metadata !DIExpression()), !dbg !15606
  store i8 0, i8* %same, align 1, !dbg !15606
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15607
  %tobool7 = trunc i8 %11 to i1, !dbg !15607
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15609

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15610, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15613, metadata !DIExpression()), !dbg !15614
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15615, metadata !DIExpression()), !dbg !15616
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15617
  %call8 = call i8* @dir_name(i8* %12), !dbg !15618
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15616
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i32 256, i32* %flags, align 4, !dbg !15620
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15621
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15623
  %15 = load i32, i32* %flags, align 4, !dbg !15624
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #9, !dbg !15625
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15626
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15627

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #16, !dbg !15628
  %16 = load i32, i32* %call12, align 4, !dbg !15628, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15630
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %17), !dbg !15631
  br label %if.end, !dbg !15632

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15633
  call void @free(i8* %18) #9, !dbg !15634
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15635, metadata !DIExpression()), !dbg !15636
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15637
  %call13 = call i8* @dir_name(i8* %19), !dbg !15638
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15636
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15639
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15641
  %22 = load i32, i32* %flags, align 4, !dbg !15642
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #9, !dbg !15643
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15644
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15645

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #16, !dbg !15646
  %23 = load i32, i32* %call17, align 4, !dbg !15646, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15648
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %24), !dbg !15649
  br label %if.end18, !dbg !15650

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15651, !ctir !15545
  %25 = load i64, i64* %st_ino, align 8, !dbg !15651, !ctir !453
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15651, !ctir !15545
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15651, !ctir !453
  %cmp20 = icmp eq i64 %25, %26, !dbg !15651
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15651

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15651, !ctir !15545
  %27 = load i64, i64* %st_dev, align 8, !dbg !15651, !ctir !452
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15651, !ctir !15545
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15651, !ctir !452
  %cmp23 = icmp eq i64 %27, %28, !dbg !15651
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15652
  %frombool25 = zext i1 %29 to i8, !dbg !15653
  store i8 %frombool25, i8* %same, align 1, !dbg !15653
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15654
  call void @free(i8* %30) #9, !dbg !15655
  br label %if.end26, !dbg !15656

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15657
  %tobool27 = trunc i8 %31 to i1, !dbg !15657
  ret i1 %tobool27, !dbg !15658
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15659 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !978
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !986
  %dp = alloca %struct.dirent*, align 8, !ctir !992
  %entry2 = alloca i8*, align 8, !ctir !183
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15662, metadata !DIExpression()), !dbg !15663
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15664, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15666, metadata !DIExpression()), !dbg !15667
  store i8* null, i8** %name_space, align 8, !dbg !15667
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15668, metadata !DIExpression()), !dbg !15669
  store i64 0, i64* %allocated, align 8, !dbg !15669
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15670, metadata !DIExpression()), !dbg !15671
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15671
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15672, metadata !DIExpression()), !dbg !15673
  store i64 0, i64* %entries_allocated, align 8, !dbg !15673
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i64 0, i64* %entries_used, align 8, !dbg !15675
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15676, metadata !DIExpression()), !dbg !15677
  store i64 0, i64* %used, align 8, !dbg !15677
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15678, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15680, metadata !DIExpression()), !dbg !15681
  %0 = load i32, i32* %option.addr, align 4, !dbg !15682
  %idxprom = zext i32 %0 to i64, !dbg !15683
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15683, !ctir !990
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15683
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15681
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15684
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15686
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15687

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15688
  br label %return, !dbg !15688

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15689

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15690, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15695, metadata !DIExpression()), !dbg !15696
  %call = call i32* @__errno_location() #16, !dbg !15697
  store i32 0, i32* %call, align 4, !dbg !15698, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15699
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15700
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15701
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15702
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15702
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15704

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15705

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15706
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15707, !ctir !993
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15706, !ctir !1001
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15708
  %6 = load i8*, i8** %entry2, align 8, !dbg !15709
  %7 = load i8*, i8** %entry2, align 8, !dbg !15711
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15711, !ctir !183
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15711
  %conv = sext i8 %8 to i32, !dbg !15711
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15712
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15711

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15711

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15713
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15713, !ctir !183
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15713
  %conv10 = sext i8 %10 to i32, !dbg !15713
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15714
  %11 = zext i1 %cmp11 to i64, !dbg !15713
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15713
  br label %cond.end, !dbg !15711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15711
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15709
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15709, !ctir !183
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15709
  %conv16 = sext i8 %12 to i32, !dbg !15709
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15715
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15716

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15717, metadata !DIExpression()), !dbg !15719
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15720
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15720, !ctir !993
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15720, !ctir !1001
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15720
  %add = add i64 %call22, 1, !dbg !15721
  store i64 %add, i64* %entry_size, align 8, !dbg !15719
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15722
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15722
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15724

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15725
  %16 = load i64, i64* %entries_used, align 8, !dbg !15728
  %cmp25 = icmp eq i64 %15, %16, !dbg !15729
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15730

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15731, metadata !DIExpression()), !dbg !15733
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15734
  store i64 %17, i64* %n, align 8, !dbg !15733
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15735
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15735
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15736
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15736
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15737
  %21 = load i64, i64* %n, align 8, !dbg !15738
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15739
  br label %if.end29, !dbg !15740

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15741
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15742
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15743
  %24 = load i64, i64* %entries_used, align 8, !dbg !15744
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15743, !ctir !978
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15745, !ctir !979
  store i8* %call30, i8** %name, align 8, !dbg !15746, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15747
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15748, !ctir !993
  %26 = load i64, i64* %d_ino, align 8, !dbg !15748, !ctir !453
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15749
  %28 = load i64, i64* %entries_used, align 8, !dbg !15750
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15749, !ctir !978
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15751, !ctir !979
  store i64 %26, i64* %ino, align 8, !dbg !15752, !ctir !985
  %29 = load i64, i64* %entries_used, align 8, !dbg !15753
  %inc = add i64 %29, 1, !dbg !15753
  store i64 %inc, i64* %entries_used, align 8, !dbg !15753
  br label %if.end44, !dbg !15754

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15755
  %31 = load i64, i64* %used, align 8, !dbg !15758
  %sub = sub i64 %30, %31, !dbg !15759
  %32 = load i64, i64* %entry_size, align 8, !dbg !15760
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15761
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15762

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15763, metadata !DIExpression()), !dbg !15765
  %33 = load i64, i64* %used, align 8, !dbg !15766
  %34 = load i64, i64* %entry_size, align 8, !dbg !15767
  %add37 = add i64 %33, %34, !dbg !15768
  store i64 %add37, i64* %n36, align 8, !dbg !15765
  %35 = load i64, i64* %n36, align 8, !dbg !15769
  %36 = load i64, i64* %used, align 8, !dbg !15771
  %cmp38 = icmp ult i64 %35, %36, !dbg !15772
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15773

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #15, !dbg !15774
  unreachable, !dbg !15774

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15775
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15776
  store i8* %call42, i8** %name_space, align 8, !dbg !15777
  %38 = load i64, i64* %n36, align 8, !dbg !15778
  store i64 %38, i64* %allocated, align 8, !dbg !15779
  br label %if.end43, !dbg !15780

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15781
  %40 = load i64, i64* %used, align 8, !dbg !15782
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15783, !ctir !10
  %41 = load i8*, i8** %entry2, align 8, !dbg !15784
  %42 = load i64, i64* %entry_size, align 8, !dbg !15785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15786
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15787
  %44 = load i64, i64* %used, align 8, !dbg !15788
  %add45 = add i64 %44, %43, !dbg !15788
  store i64 %add45, i64* %used, align 8, !dbg !15788
  br label %if.end46, !dbg !15789

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15790, !llvm.loop !15791

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #16, !dbg !15794
  %45 = load i32, i32* %call47, align 4, !dbg !15794, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15795
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15796
  %cmp48 = icmp ne i32 %46, 0, !dbg !15798
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15799

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15800
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15800
  call void @free(i8* %48) #9, !dbg !15802
  %49 = load i8*, i8** %name_space, align 8, !dbg !15803
  call void @free(i8* %49) #9, !dbg !15804
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15805
  %call51 = call i32* @__errno_location() #16, !dbg !15806
  store i32 %50, i32* %call51, align 4, !dbg !15807, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15808
  br label %return, !dbg !15808

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15809
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15809
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15811

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15812, metadata !DIExpression()), !dbg !15814
  %52 = load i64, i64* %entries_used, align 8, !dbg !15815
  %tobool55 = icmp ne i64 %52, 0, !dbg !15815
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15817

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15818
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15818
  %55 = load i64, i64* %entries_used, align 8, !dbg !15819
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15820
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15821
  br label %if.end57, !dbg !15821

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15822
  %add58 = add i64 %57, 1, !dbg !15823
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15824
  store i8* %call59, i8** %name_space, align 8, !dbg !15825
  store i64 0, i64* %used, align 8, !dbg !15826
  store i64 0, i64* %i, align 8, !dbg !15827
  br label %for.cond60, !dbg !15829

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15830
  %59 = load i64, i64* %entries_used, align 8, !dbg !15832
  %cmp61 = icmp ult i64 %58, %59, !dbg !15833
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15834

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15835, metadata !DIExpression()), !dbg !15837
  %60 = load i8*, i8** %name_space, align 8, !dbg !15838
  %61 = load i64, i64* %used, align 8, !dbg !15839
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15840, !ctir !10
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15837
  %62 = load i8*, i8** %dest, align 8, !dbg !15841
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15842
  %64 = load i64, i64* %i, align 8, !dbg !15843
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15842, !ctir !978
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15844, !ctir !979
  %65 = load i8*, i8** %name65, align 8, !dbg !15844, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #9, !dbg !15845
  %66 = load i8*, i8** %dest, align 8, !dbg !15846
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15847
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15847
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15847
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15848
  %67 = load i64, i64* %used, align 8, !dbg !15849
  %add68 = add i64 %67, %add67, !dbg !15849
  store i64 %add68, i64* %used, align 8, !dbg !15849
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15850
  %69 = load i64, i64* %i, align 8, !dbg !15851
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15850, !ctir !978
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15852, !ctir !979
  %70 = load i8*, i8** %name70, align 8, !dbg !15852, !ctir !9
  call void @free(i8* %70) #9, !dbg !15853
  br label %for.inc, !dbg !15854

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15855
  %inc71 = add i64 %71, 1, !dbg !15855
  store i64 %inc71, i64* %i, align 8, !dbg !15855
  br label %for.cond60, !dbg !15856, !llvm.loop !15857

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15859
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15859
  call void @free(i8* %73) #9, !dbg !15860
  br label %if.end80, !dbg !15861

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15862
  %75 = load i64, i64* %allocated, align 8, !dbg !15864
  %cmp74 = icmp eq i64 %74, %75, !dbg !15865
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15866

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15867
  %77 = load i64, i64* %used, align 8, !dbg !15868
  %add77 = add i64 %77, 1, !dbg !15869
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15870
  store i8* %call78, i8** %name_space, align 8, !dbg !15871
  br label %if.end79, !dbg !15872

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15873
  %79 = load i64, i64* %used, align 8, !dbg !15874
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15873, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !15875
  %80 = load i8*, i8** %name_space, align 8, !dbg !15876
  store i8* %80, i8** %retval, align 8, !dbg !15877
  br label %return, !dbg !15877

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15878
  ret i8* %81, !dbg !15878
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15879 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1002
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1002
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15880, metadata !DIExpression()), !dbg !15881
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15882, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15884, metadata !DIExpression()), !dbg !15885
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15886
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15886
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15885
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15887, metadata !DIExpression()), !dbg !15888
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15889
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15889
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15888
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15890
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15891, !ctir !1003
  %5 = load i8*, i8** %name, align 8, !dbg !15891, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15892
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15893, !ctir !1003
  %7 = load i8*, i8** %name1, align 8, !dbg !15893, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15894
  ret i32 %call, !dbg !15895
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15896 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1002
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1002
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15897, metadata !DIExpression()), !dbg !15898
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15899, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15901, metadata !DIExpression()), !dbg !15902
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15903
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15903
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15902
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15904, metadata !DIExpression()), !dbg !15905
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15906
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15906
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15905
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15907
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15908, !ctir !1003
  %5 = load i64, i64* %ino, align 8, !dbg !15908, !ctir !985
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15909
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15910, !ctir !1003
  %7 = load i64, i64* %ino1, align 8, !dbg !15910, !ctir !985
  %cmp = icmp ult i64 %5, %7, !dbg !15911
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15907

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15907

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15912
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15913, !ctir !1003
  %9 = load i64, i64* %ino2, align 8, !dbg !15913, !ctir !985
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15914
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15915, !ctir !1003
  %11 = load i64, i64* %ino3, align 8, !dbg !15915, !ctir !985
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15916
  %conv = zext i1 %cmp4 to i32, !dbg !15916
  br label %cond.end, !dbg !15907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15907
  ret i32 %cond, !dbg !15917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15918 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !662
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15921, metadata !DIExpression()), !dbg !15922
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15923, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15925, metadata !DIExpression()), !dbg !15926
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15927
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15928
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15926
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15929
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15929
  br i1 %tobool, label %if.else, label %if.then, !dbg !15931

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15932
  br label %return, !dbg !15932

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15933, metadata !DIExpression()), !dbg !15935
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15936
  %3 = load i32, i32* %option.addr, align 4, !dbg !15937
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15938
  store i8* %call1, i8** %name_space, align 8, !dbg !15935
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15939
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15941
  %cmp = icmp ne i32 %call2, 0, !dbg !15942
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15943

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15944, metadata !DIExpression()), !dbg !15946
  %call4 = call i32* @__errno_location() #16, !dbg !15947
  %5 = load i32, i32* %call4, align 4, !dbg !15947, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15946
  %6 = load i8*, i8** %name_space, align 8, !dbg !15948
  call void @free(i8* %6) #9, !dbg !15949
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15950
  %call5 = call i32* @__errno_location() #16, !dbg !15951
  store i32 %7, i32* %call5, align 4, !dbg !15952, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15953
  br label %return, !dbg !15953

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15954
  store i8* %8, i8** %retval, align 8, !dbg !15955
  br label %return, !dbg !15955

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15956
  ret i8* %9, !dbg !15956
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_init(%struct.savewd* %wd) #4 !dbg !15957 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15963
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !15964, !ctir !1381
  store i32 0, i32* %state, align 4, !dbg !15965, !ctir !1380
  ret void, !dbg !15966
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @savewd_errno(%struct.savewd* %wd) #10 !dbg !15967 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15972, metadata !DIExpression()), !dbg !15973
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15974
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !15975, !ctir !15971
  %1 = load i32, i32* %state, align 4, !dbg !15975, !ctir !1380
  %cmp = icmp eq i32 %1, 4, !dbg !15976
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15974

cond.true:                                        ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !15977
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !15978, !ctir !15971
  %errnum = bitcast %union.anon* %val to i32*, !dbg !15979
  %3 = load i32, i32* %errnum, align 4, !dbg !15979, !ctir !1385
  br label %cond.end, !dbg !15974

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15974

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !15974
  ret i32 %cond, !dbg !15980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_chdir(%struct.savewd* %wd, i8* %dir, i32 %options, i32* %open_result) #4 !dbg !15981 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i32, align 4
  %open_result.addr = alloca i32*, align 8
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !15985, metadata !DIExpression()), !dbg !15986
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15987, metadata !DIExpression()), !dbg !15988
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !15989, metadata !DIExpression()), !dbg !15990
  store i32* %open_result, i32** %open_result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %open_result.addr, metadata !15991, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !15993, metadata !DIExpression()), !dbg !15994
  store i32 -1, i32* %fd, align 4, !dbg !15994
  call void @llvm.dbg.declare(metadata i32* %result, metadata !15995, metadata !DIExpression()), !dbg !15996
  store i32 0, i32* %result, align 4, !dbg !15996
  %0 = load i32*, i32** %open_result.addr, align 8, !dbg !15997
  %tobool = icmp ne i32* %0, null, !dbg !15997
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15999

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !16000
  %and = and i32 %1, 1, !dbg !16001
  %tobool1 = icmp ne i32 %and, 0, !dbg !16001
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !16002

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !16003
  %3 = load i32, i32* %options.addr, align 4, !dbg !16005
  %and2 = and i32 %3, 1, !dbg !16006
  %tobool3 = icmp ne i32 %and2, 0, !dbg !16005
  %4 = zext i1 %tobool3 to i64, !dbg !16005
  %cond = select i1 %tobool3, i32 131072, i32 0, !dbg !16005
  %or = or i32 67840, %cond, !dbg !16007
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or), !dbg !16008
  store i32 %call, i32* %fd, align 4, !dbg !16009
  %5 = load i32*, i32** %open_result.addr, align 8, !dbg !16010
  %tobool4 = icmp ne i32* %5, null, !dbg !16010
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16012

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %fd, align 4, !dbg !16013
  %7 = load i32*, i32** %open_result.addr, align 8, !dbg !16015
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !16015, !ctir !227
  store i32 %6, i32* %arrayidx, align 4, !dbg !16016
  %call6 = call i32* @__errno_location() #16, !dbg !16017
  %8 = load i32, i32* %call6, align 4, !dbg !16017, !ctir !7
  %9 = load i32*, i32** %open_result.addr, align 8, !dbg !16018
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !16018, !ctir !227
  store i32 %8, i32* %arrayidx7, align 4, !dbg !16019
  br label %if.end, !dbg !16020

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %fd, align 4, !dbg !16021
  %cmp = icmp slt i32 %10, 0, !dbg !16023
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !16024

land.lhs.true:                                    ; preds = %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !16025
  %11 = load i32, i32* %call8, align 4, !dbg !16025, !ctir !7
  %cmp9 = icmp ne i32 %11, 13, !dbg !16026
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16027

if.then10:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !16028
  br label %if.end11, !dbg !16029

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %if.end12, !dbg !16030

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  %12 = load i32, i32* %result, align 4, !dbg !16031
  %cmp13 = icmp eq i32 %12, 0, !dbg !16033
  br i1 %cmp13, label %land.lhs.true14, label %if.end37, !dbg !16034

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i32, i32* %fd, align 4, !dbg !16035
  %cmp15 = icmp sle i32 0, %13, !dbg !16036
  br i1 %cmp15, label %land.lhs.true16, label %if.then19, !dbg !16037

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %14 = load i32, i32* %options.addr, align 4, !dbg !16038
  %and17 = and i32 %14, 2, !dbg !16039
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16039
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !16040

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true14
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16041
  %call20 = call zeroext i1 @savewd_save(%struct.savewd* %15), !dbg !16044
  br i1 %call20, label %if.then21, label %if.else, !dbg !16045

if.then21:                                        ; preds = %if.then19
  store i32* null, i32** %open_result.addr, align 8, !dbg !16046
  store i32 -2, i32* %result, align 4, !dbg !16048
  br label %if.end36, !dbg !16049

if.else:                                          ; preds = %if.then19
  %16 = load i32, i32* %fd, align 4, !dbg !16050
  %cmp22 = icmp slt i32 %16, 0, !dbg !16052
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !16050

cond.true:                                        ; preds = %if.else
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !16053
  %call23 = call i32 @chdir(i8* %17) #9, !dbg !16054
  br label %cond.end, !dbg !16050

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %fd, align 4, !dbg !16055
  %call24 = call i32 @fchdir(i32 %18) #9, !dbg !16056
  br label %cond.end, !dbg !16050

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ %call23, %cond.true ], [ %call24, %cond.false ], !dbg !16050
  store i32 %cond25, i32* %result, align 4, !dbg !16057
  %19 = load i32, i32* %result, align 4, !dbg !16058
  %cmp26 = icmp eq i32 %19, 0, !dbg !16060
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !16061

if.then27:                                        ; preds = %cond.end
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16062
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16063, !ctir !1381
  %21 = load i32, i32* %state, align 4, !dbg !16063, !ctir !1380
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb29
    i32 2, label %sw.bb29
    i32 5, label %sw.bb29
    i32 3, label %sw.bb30
  ], !dbg !16064

sw.bb:                                            ; preds = %if.then27
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16065
  %state28 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 0, !dbg !16067, !ctir !1381
  store i32 2, i32* %state28, align 4, !dbg !16068, !ctir !1380
  br label %sw.epilog, !dbg !16069

sw.bb29:                                          ; preds = %if.then27, %if.then27, %if.then27
  br label %sw.epilog, !dbg !16070

sw.bb30:                                          ; preds = %if.then27
  %23 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16071
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %23, i32 0, i32 1, !dbg !16071, !ctir !1381
  %child = bitcast %union.anon* %val to i32*, !dbg !16071
  %24 = load i32, i32* %child, align 4, !dbg !16071, !ctir !1385
  %cmp31 = icmp eq i32 %24, 0, !dbg !16071
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !16074

if.then32:                                        ; preds = %sw.bb30
  br label %if.end34, !dbg !16074

if.else33:                                        ; preds = %sw.bb30
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 155, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16071
  unreachable, !dbg !16071

if.end34:                                         ; preds = %if.then32
  br label %sw.epilog, !dbg !16075

sw.default:                                       ; preds = %if.then27
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16076
  unreachable, !dbg !16076

sw.epilog:                                        ; preds = %if.end34, %sw.bb29, %sw.bb
  br label %if.end35, !dbg !16079

if.end35:                                         ; preds = %sw.epilog, %cond.end
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !16080

if.end37:                                         ; preds = %if.end36, %land.lhs.true16, %if.end12
  %25 = load i32, i32* %fd, align 4, !dbg !16081
  %cmp38 = icmp sle i32 0, %25, !dbg !16083
  br i1 %cmp38, label %land.lhs.true39, label %if.end45, !dbg !16084

land.lhs.true39:                                  ; preds = %if.end37
  %26 = load i32*, i32** %open_result.addr, align 8, !dbg !16085
  %tobool40 = icmp ne i32* %26, null, !dbg !16085
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !16086

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16087, metadata !DIExpression()), !dbg !16089
  %call42 = call i32* @__errno_location() #16, !dbg !16090
  %27 = load i32, i32* %call42, align 4, !dbg !16090, !ctir !7
  store i32 %27, i32* %e, align 4, !dbg !16089
  %28 = load i32, i32* %fd, align 4, !dbg !16091
  %call43 = call i32 @close(i32 %28), !dbg !16092
  %29 = load i32, i32* %e, align 4, !dbg !16093
  %call44 = call i32* @__errno_location() #16, !dbg !16094
  store i32 %29, i32* %call44, align 4, !dbg !16095, !ctir !7
  br label %if.end45, !dbg !16096

if.end45:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %30 = load i32, i32* %result, align 4, !dbg !16097
  ret i32 %30, !dbg !16098
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_save(%struct.savewd* %wd) #4 !dbg !16099 {
entry:
  %retval = alloca i1, align 1
  %wd.addr = alloca %struct.savewd*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16102, metadata !DIExpression()), !dbg !16103
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16104
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16105, !ctir !1381
  %1 = load i32, i32* %state, align 4, !dbg !16105, !ctir !1380
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb14
    i32 1, label %sw.bb37
    i32 2, label %sw.bb37
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
  ], !dbg !16106

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16107, metadata !DIExpression()), !dbg !16110
  %call = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.369, i64 0, i64 0), i32 0), !dbg !16111
  store i32 %call, i32* %fd, align 4, !dbg !16110
  %2 = load i32, i32* %fd, align 4, !dbg !16112
  %cmp = icmp sle i32 0, %2, !dbg !16114
  br i1 %cmp, label %if.then, label %if.end, !dbg !16115

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16116
  %state1 = getelementptr inbounds %struct.savewd, %struct.savewd* %3, i32 0, i32 0, !dbg !16118, !ctir !1381
  store i32 1, i32* %state1, align 4, !dbg !16119, !ctir !1380
  %4 = load i32, i32* %fd, align 4, !dbg !16120
  %5 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16121
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %5, i32 0, i32 1, !dbg !16122, !ctir !1381
  %fd2 = bitcast %union.anon* %val to i32*, !dbg !16123
  store i32 %4, i32* %fd2, align 4, !dbg !16124, !ctir !1385
  br label %sw.epilog, !dbg !16125

if.end:                                           ; preds = %sw.bb
  %call3 = call i32* @__errno_location() #16, !dbg !16126
  %6 = load i32, i32* %call3, align 4, !dbg !16126, !ctir !7
  %cmp4 = icmp ne i32 %6, 13, !dbg !16128
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !16129

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !16130
  %7 = load i32, i32* %call5, align 4, !dbg !16130, !ctir !7
  %cmp6 = icmp ne i32 %7, 116, !dbg !16131
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !16132

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16133
  %state8 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16135, !ctir !1381
  store i32 4, i32* %state8, align 4, !dbg !16136, !ctir !1380
  %call9 = call i32* @__errno_location() #16, !dbg !16137
  %9 = load i32, i32* %call9, align 4, !dbg !16137, !ctir !7
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16138
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16139, !ctir !1381
  %errnum = bitcast %union.anon* %val10 to i32*, !dbg !16140
  store i32 %9, i32* %errnum, align 4, !dbg !16141, !ctir !1385
  br label %sw.epilog, !dbg !16142

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16143
  %state12 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 0, !dbg !16144, !ctir !1381
  store i32 3, i32* %state12, align 4, !dbg !16145, !ctir !1380
  %12 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16146
  %val13 = getelementptr inbounds %struct.savewd, %struct.savewd* %12, i32 0, i32 1, !dbg !16147, !ctir !1381
  %child = bitcast %union.anon* %val13 to i32*, !dbg !16148
  store i32 -1, i32* %child, align 4, !dbg !16149, !ctir !1385
  br label %sw.bb14, !dbg !16150

sw.bb14:                                          ; preds = %entry, %if.end11
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16151
  %val15 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16153, !ctir !1381
  %child16 = bitcast %union.anon* %val15 to i32*, !dbg !16154
  %14 = load i32, i32* %child16, align 4, !dbg !16154, !ctir !1385
  %cmp17 = icmp slt i32 %14, 0, !dbg !16155
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !16156

if.then18:                                        ; preds = %sw.bb14
  %call19 = call i32 @fork() #9, !dbg !16157
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16159
  %val20 = getelementptr inbounds %struct.savewd, %struct.savewd* %15, i32 0, i32 1, !dbg !16160, !ctir !1381
  %child21 = bitcast %union.anon* %val20 to i32*, !dbg !16161
  store i32 %call19, i32* %child21, align 4, !dbg !16162, !ctir !1385
  %16 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16163
  %val22 = getelementptr inbounds %struct.savewd, %struct.savewd* %16, i32 0, i32 1, !dbg !16165, !ctir !1381
  %child23 = bitcast %union.anon* %val22 to i32*, !dbg !16166
  %17 = load i32, i32* %child23, align 4, !dbg !16166, !ctir !1385
  %cmp24 = icmp ne i32 %17, 0, !dbg !16167
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !16168

if.then25:                                        ; preds = %if.then18
  %18 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16169
  %val26 = getelementptr inbounds %struct.savewd, %struct.savewd* %18, i32 0, i32 1, !dbg !16172, !ctir !1381
  %child27 = bitcast %union.anon* %val26 to i32*, !dbg !16173
  %19 = load i32, i32* %child27, align 4, !dbg !16173, !ctir !1385
  %cmp28 = icmp slt i32 0, %19, !dbg !16174
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !16175

if.then29:                                        ; preds = %if.then25
  store i1 true, i1* %retval, align 1, !dbg !16176
  br label %return, !dbg !16176

if.end30:                                         ; preds = %if.then25
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16177
  %state31 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16178, !ctir !1381
  store i32 4, i32* %state31, align 4, !dbg !16179, !ctir !1380
  %call32 = call i32* @__errno_location() #16, !dbg !16180
  %21 = load i32, i32* %call32, align 4, !dbg !16180, !ctir !7
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16181
  %val33 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 1, !dbg !16182, !ctir !1381
  %errnum34 = bitcast %union.anon* %val33 to i32*, !dbg !16183
  store i32 %21, i32* %errnum34, align 4, !dbg !16184, !ctir !1385
  br label %if.end35, !dbg !16185

if.end35:                                         ; preds = %if.end30, %if.then18
  br label %if.end36, !dbg !16186

if.end36:                                         ; preds = %if.end35, %sw.bb14
  br label %sw.epilog, !dbg !16187

sw.bb37:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !16188

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.savewd_save, i64 0, i64 0)) #13, !dbg !16189
  unreachable, !dbg !16189

sw.epilog:                                        ; preds = %sw.bb37, %if.end36, %if.then7, %if.then
  store i1 false, i1* %retval, align 1, !dbg !16192
  br label %return, !dbg !16192

return:                                           ; preds = %sw.epilog, %if.then29
  %23 = load i1, i1* %retval, align 1, !dbg !16193
  ret i1 %23, !dbg !16193
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_restore(%struct.savewd* %wd, i32 %status) #4 !dbg !16194 {
entry:
  %retval = alloca i32, align 4
  %wd.addr = alloca %struct.savewd*, align 8
  %status.addr = alloca i32, align 4
  %chdir_errno = alloca i32, align 4, !ctir !7
  %child = alloca i32, align 4, !ctir !111
  %child_status = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16197, metadata !DIExpression()), !dbg !16198
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16199, metadata !DIExpression()), !dbg !16200
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16201
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16202, !ctir !1381
  %1 = load i32, i32* %state, align 4, !dbg !16202, !ctir !1380
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb9
    i32 3, label %sw.bb13
  ], !dbg !16203

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16204

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16206
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16208, !ctir !1381
  %fd = bitcast %union.anon* %val to i32*, !dbg !16209
  %3 = load i32, i32* %fd, align 4, !dbg !16209, !ctir !1385
  %call = call i32 @fchdir(i32 %3) #9, !dbg !16210
  %cmp = icmp eq i32 %call, 0, !dbg !16211
  br i1 %cmp, label %if.then, label %if.else, !dbg !16212

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16213
  %state2 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 0, !dbg !16215, !ctir !1381
  store i32 1, i32* %state2, align 4, !dbg !16216, !ctir !1380
  br label %sw.epilog, !dbg !16217

if.else:                                          ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %chdir_errno, metadata !16218, metadata !DIExpression()), !dbg !16220
  %call3 = call i32* @__errno_location() #16, !dbg !16221
  %5 = load i32, i32* %call3, align 4, !dbg !16221, !ctir !7
  store i32 %5, i32* %chdir_errno, align 4, !dbg !16220
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16222
  %val4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 1, !dbg !16223, !ctir !1381
  %fd5 = bitcast %union.anon* %val4 to i32*, !dbg !16224
  %7 = load i32, i32* %fd5, align 4, !dbg !16224, !ctir !1385
  %call6 = call i32 @close(i32 %7), !dbg !16225
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16226
  %state7 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16227, !ctir !1381
  store i32 4, i32* %state7, align 4, !dbg !16228, !ctir !1380
  %9 = load i32, i32* %chdir_errno, align 4, !dbg !16229
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16230
  %val8 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16231, !ctir !1381
  %errnum = bitcast %union.anon* %val8 to i32*, !dbg !16232
  store i32 %9, i32* %errnum, align 4, !dbg !16233, !ctir !1385
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.bb9, !dbg !16234

sw.bb9:                                           ; preds = %entry, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16235
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 1, !dbg !16236, !ctir !1381
  %errnum11 = bitcast %union.anon* %val10 to i32*, !dbg !16237
  %12 = load i32, i32* %errnum11, align 4, !dbg !16237, !ctir !1385
  %call12 = call i32* @__errno_location() #16, !dbg !16238
  store i32 %12, i32* %call12, align 4, !dbg !16239, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16240
  br label %return, !dbg !16240

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %child, metadata !16241, metadata !DIExpression()), !dbg !16243
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16244
  %val14 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16245, !ctir !1381
  %child15 = bitcast %union.anon* %val14 to i32*, !dbg !16246
  %14 = load i32, i32* %child15, align 4, !dbg !16246, !ctir !1385
  store i32 %14, i32* %child, align 4, !dbg !16243
  %15 = load i32, i32* %child, align 4, !dbg !16247
  %cmp16 = icmp eq i32 %15, 0, !dbg !16249
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16250

if.then17:                                        ; preds = %sw.bb13
  %16 = load i32, i32* %status.addr, align 4, !dbg !16251
  call void @_exit(i32 %16) #15, !dbg !16252
  unreachable, !dbg !16252

if.end18:                                         ; preds = %sw.bb13
  %17 = load i32, i32* %child, align 4, !dbg !16253
  %cmp19 = icmp slt i32 0, %17, !dbg !16255
  br i1 %cmp19, label %if.then20, label %if.end36, !dbg !16256

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %child_status, metadata !16257, metadata !DIExpression()), !dbg !16259
  br label %while.cond, !dbg !16260

while.cond:                                       ; preds = %if.end27, %if.then20
  %18 = load i32, i32* %child, align 4, !dbg !16261
  %call21 = call i32 @waitpid(i32 %18, i32* %child_status, i32 0), !dbg !16262
  %cmp22 = icmp slt i32 %call21, 0, !dbg !16263
  br i1 %cmp22, label %while.body, label %while.end, !dbg !16260

while.body:                                       ; preds = %while.cond
  %call23 = call i32* @__errno_location() #16, !dbg !16264
  %19 = load i32, i32* %call23, align 4, !dbg !16264, !ctir !7
  %cmp24 = icmp eq i32 %19, 4, !dbg !16264
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !16267

if.then25:                                        ; preds = %while.body
  br label %if.end27, !dbg !16267

if.else26:                                        ; preds = %while.body
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.372, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16264
  unreachable, !dbg !16264

if.end27:                                         ; preds = %if.then25
  br label %while.cond, !dbg !16260, !llvm.loop !16268

while.end:                                        ; preds = %while.cond
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16270
  %val28 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 1, !dbg !16271, !ctir !1381
  %child29 = bitcast %union.anon* %val28 to i32*, !dbg !16272
  store i32 -1, i32* %child29, align 4, !dbg !16273, !ctir !1385
  %21 = load i32, i32* %child_status, align 4, !dbg !16274
  %and = and i32 %21, 127, !dbg !16274
  %cmp30 = icmp eq i32 %and, 0, !dbg !16274
  br i1 %cmp30, label %if.end34, label %if.then31, !dbg !16276

if.then31:                                        ; preds = %while.end
  %22 = load i32, i32* %child_status, align 4, !dbg !16277
  %and32 = and i32 %22, 127, !dbg !16277
  %call33 = call i32 @raise(i32 %and32) #9, !dbg !16278
  br label %if.end34, !dbg !16278

if.end34:                                         ; preds = %if.then31, %while.end
  %23 = load i32, i32* %child_status, align 4, !dbg !16279
  %and35 = and i32 %23, 65280, !dbg !16279
  %shr = ashr i32 %and35, 8, !dbg !16279
  store i32 %shr, i32* %retval, align 4, !dbg !16280
  br label %return, !dbg !16280

if.end36:                                         ; preds = %if.end18
  br label %sw.epilog, !dbg !16281

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16282
  unreachable, !dbg !16282

sw.epilog:                                        ; preds = %if.end36, %if.then, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !16285
  br label %return, !dbg !16285

return:                                           ; preds = %sw.epilog, %if.end34, %sw.bb9
  %24 = load i32, i32* %retval, align 4, !dbg !16286
  ret i32 %24, !dbg !16286
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_finish(%struct.savewd* %wd) #4 !dbg !16287 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16288, metadata !DIExpression()), !dbg !16289
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16290
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16291, !ctir !1381
  %1 = load i32, i32* %state, align 4, !dbg !16291, !ctir !1380
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !16292

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16293

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16295
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16296, !ctir !1381
  %fd = bitcast %union.anon* %val to i32*, !dbg !16297
  %3 = load i32, i32* %fd, align 4, !dbg !16297, !ctir !1385
  %call = call i32 @close(i32 %3), !dbg !16298
  br label %sw.epilog, !dbg !16299

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16300
  %val3 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 1, !dbg !16300, !ctir !1381
  %child = bitcast %union.anon* %val3 to i32*, !dbg !16300
  %5 = load i32, i32* %child, align 4, !dbg !16300, !ctir !1385
  %cmp = icmp slt i32 %5, 0, !dbg !16300
  br i1 %cmp, label %if.then, label %if.else, !dbg !16303

if.then:                                          ; preds = %sw.bb2
  br label %if.end, !dbg !16303

if.else:                                          ; preds = %sw.bb2
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.375, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16300
  unreachable, !dbg !16300

if.end:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !16304

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16305
  unreachable, !dbg !16305

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16308
  %state4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 0, !dbg !16309, !ctir !1381
  store i32 5, i32* %state4, align 4, !dbg !16310, !ctir !1380
  ret void, !dbg !16311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_process_files(i32 %n_files, i8** %file, i32 (i8*, %struct.savewd*, i8*)* %act, i8* %options) #4 !dbg !16312 {
entry:
  %n_files.addr = alloca i32, align 4
  %file.addr = alloca i8**, align 8
  %act.addr = alloca i32 (i8*, %struct.savewd*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %i = alloca i32, align 4, !ctir !7
  %last_relative = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !1381
  %s = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  %s36 = alloca i32, align 4, !ctir !7
  store i32 %n_files, i32* %n_files.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !16318, metadata !DIExpression()), !dbg !16319
  store i8** %file, i8*** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !16320, metadata !DIExpression()), !dbg !16321
  store i32 (i8*, %struct.savewd*, i8*)* %act, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.savewd*, i8*)** %act.addr, metadata !16322, metadata !DIExpression()), !dbg !16323
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !16324, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16326, metadata !DIExpression()), !dbg !16327
  store i32 0, i32* %i, align 4, !dbg !16327
  call void @llvm.dbg.declare(metadata i32* %last_relative, metadata !16328, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !16330, metadata !DIExpression()), !dbg !16331
  store i32 0, i32* %exit_status, align 4, !dbg !16331
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !16332, metadata !DIExpression()), !dbg !16333
  call void @savewd_init(%struct.savewd* %wd), !dbg !16334
  %0 = load i32, i32* %n_files.addr, align 4, !dbg !16335
  %sub = sub nsw i32 %0, 1, !dbg !16337
  store i32 %sub, i32* %last_relative, align 4, !dbg !16338
  br label %for.cond, !dbg !16339

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %last_relative, align 4, !dbg !16340
  %cmp = icmp sle i32 0, %1, !dbg !16342
  br i1 %cmp, label %for.body, label %for.end, !dbg !16343

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %file.addr, align 8, !dbg !16344
  %3 = load i32, i32* %last_relative, align 4, !dbg !16344
  %idxprom = sext i32 %3 to i64, !dbg !16344
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !16344, !ctir !209
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !16344
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16344, !ctir !9
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !16344
  %conv = sext i8 %5 to i32, !dbg !16344
  %cmp2 = icmp eq i32 %conv, 47, !dbg !16344
  br i1 %cmp2, label %if.end, label %if.then, !dbg !16346

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16347

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16344

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %last_relative, align 4, !dbg !16348
  %dec = add nsw i32 %6, -1, !dbg !16348
  store i32 %dec, i32* %last_relative, align 4, !dbg !16348
  br label %for.cond, !dbg !16349, !llvm.loop !16350

for.end:                                          ; preds = %if.then, %for.cond
  br label %for.cond4, !dbg !16352

for.cond4:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !16353
  %8 = load i32, i32* %last_relative, align 4, !dbg !16356
  %cmp5 = icmp slt i32 %7, %8, !dbg !16357
  br i1 %cmp5, label %for.body7, label %for.end31, !dbg !16358

for.body7:                                        ; preds = %for.cond4
  %call = call zeroext i1 @savewd_delegating(%struct.savewd* %wd), !dbg !16359
  br i1 %call, label %if.end16, label %if.then8, !dbg !16362

if.then8:                                         ; preds = %for.body7
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16363, metadata !DIExpression()), !dbg !16365
  %9 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16366
  %10 = load i8**, i8*** %file.addr, align 8, !dbg !16367
  %11 = load i32, i32* %i, align 4, !dbg !16368
  %idxprom9 = sext i32 %11 to i64, !dbg !16367
  %arrayidx10 = getelementptr inbounds i8*, i8** %10, i64 %idxprom9, !dbg !16367, !ctir !209
  %12 = load i8*, i8** %arrayidx10, align 8, !dbg !16367
  %13 = load i8*, i8** %options.addr, align 8, !dbg !16369
  %call11 = call i32 %9(i8* %12, %struct.savewd* %wd, i8* %13), !dbg !16366
  store i32 %call11, i32* %s, align 4, !dbg !16365
  %14 = load i32, i32* %exit_status, align 4, !dbg !16370
  %15 = load i32, i32* %s, align 4, !dbg !16372
  %cmp12 = icmp slt i32 %14, %15, !dbg !16373
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16374

if.then14:                                        ; preds = %if.then8
  %16 = load i32, i32* %s, align 4, !dbg !16375
  store i32 %16, i32* %exit_status, align 4, !dbg !16376
  br label %if.end15, !dbg !16377

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !16378

if.end16:                                         ; preds = %if.end15, %for.body7
  %17 = load i8**, i8*** %file.addr, align 8, !dbg !16379
  %18 = load i32, i32* %i, align 4, !dbg !16379
  %add = add nsw i32 %18, 1, !dbg !16379
  %idxprom17 = sext i32 %add to i64, !dbg !16379
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !16379, !ctir !209
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !16379
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !16379, !ctir !9
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16379
  %conv20 = sext i8 %20 to i32, !dbg !16379
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !16379
  br i1 %cmp21, label %if.end29, label %if.then23, !dbg !16381

if.then23:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16382, metadata !DIExpression()), !dbg !16384
  %21 = load i32, i32* %exit_status, align 4, !dbg !16385
  %call24 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %21), !dbg !16386
  store i32 %call24, i32* %r, align 4, !dbg !16384
  %22 = load i32, i32* %exit_status, align 4, !dbg !16387
  %23 = load i32, i32* %r, align 4, !dbg !16389
  %cmp25 = icmp slt i32 %22, %23, !dbg !16390
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16391

if.then27:                                        ; preds = %if.then23
  %24 = load i32, i32* %r, align 4, !dbg !16392
  store i32 %24, i32* %exit_status, align 4, !dbg !16393
  br label %if.end28, !dbg !16394

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !16395

if.end29:                                         ; preds = %if.end28, %if.end16
  br label %for.inc30, !dbg !16396

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %i, align 4, !dbg !16397
  %inc = add nsw i32 %25, 1, !dbg !16397
  store i32 %inc, i32* %i, align 4, !dbg !16397
  br label %for.cond4, !dbg !16398, !llvm.loop !16399

for.end31:                                        ; preds = %for.cond4
  call void @savewd_finish(%struct.savewd* %wd), !dbg !16401
  br label %for.cond32, !dbg !16402

for.cond32:                                       ; preds = %for.inc44, %for.end31
  %26 = load i32, i32* %i, align 4, !dbg !16403
  %27 = load i32, i32* %n_files.addr, align 4, !dbg !16406
  %cmp33 = icmp slt i32 %26, %27, !dbg !16407
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !16408

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %s36, metadata !16409, metadata !DIExpression()), !dbg !16411
  %28 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16412
  %29 = load i8**, i8*** %file.addr, align 8, !dbg !16413
  %30 = load i32, i32* %i, align 4, !dbg !16414
  %idxprom37 = sext i32 %30 to i64, !dbg !16413
  %arrayidx38 = getelementptr inbounds i8*, i8** %29, i64 %idxprom37, !dbg !16413, !ctir !209
  %31 = load i8*, i8** %arrayidx38, align 8, !dbg !16413
  %32 = load i8*, i8** %options.addr, align 8, !dbg !16415
  %call39 = call i32 %28(i8* %31, %struct.savewd* %wd, i8* %32), !dbg !16412
  store i32 %call39, i32* %s36, align 4, !dbg !16411
  %33 = load i32, i32* %exit_status, align 4, !dbg !16416
  %34 = load i32, i32* %s36, align 4, !dbg !16418
  %cmp40 = icmp slt i32 %33, %34, !dbg !16419
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16420

if.then42:                                        ; preds = %for.body35
  %35 = load i32, i32* %s36, align 4, !dbg !16421
  store i32 %35, i32* %exit_status, align 4, !dbg !16422
  br label %if.end43, !dbg !16423

if.end43:                                         ; preds = %if.then42, %for.body35
  br label %for.inc44, !dbg !16424

for.inc44:                                        ; preds = %if.end43
  %36 = load i32, i32* %i, align 4, !dbg !16425
  %inc45 = add nsw i32 %36, 1, !dbg !16425
  store i32 %inc45, i32* %i, align 4, !dbg !16425
  br label %for.cond32, !dbg !16426, !llvm.loop !16427

for.end46:                                        ; preds = %for.cond32
  %37 = load i32, i32* %exit_status, align 4, !dbg !16429
  ret i32 %37, !dbg !16430
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_delegating(%struct.savewd* %wd) #4 !dbg !16431 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16434, metadata !DIExpression()), !dbg !16435
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16436
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16437, !ctir !15971
  %1 = load i32, i32* %state, align 4, !dbg !16437, !ctir !1380
  %cmp = icmp eq i32 %1, 3, !dbg !16438
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16439

land.rhs:                                         ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16440
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16441, !ctir !15971
  %child = bitcast %union.anon* %val to i32*, !dbg !16442
  %3 = load i32, i32* %child, align 4, !dbg !16442, !ctir !1385
  %cmp1 = icmp slt i32 0, %3, !dbg !16443
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16444
  ret i1 %4, !dbg !16445
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !16446 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16452, metadata !DIExpression()), !dbg !16453
  %call = call i32* @__errno_location() #16, !dbg !16454
  store i32 95, i32* %call, align 4, !dbg !16455, !ctir !7
  ret i32 -1, !dbg !16456
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !16457 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16460, metadata !DIExpression()), !dbg !16461
  ret void, !dbg !16462
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !16463 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16464, metadata !DIExpression()), !dbg !16465
  %call = call i32* @__errno_location() #16, !dbg !16466
  store i32 95, i32* %call, align 4, !dbg !16467, !ctir !7
  ret i32 -1, !dbg !16468
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !16469 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16472, metadata !DIExpression()), !dbg !16473
  %call = call i32* @__errno_location() #16, !dbg !16474
  store i32 95, i32* %call, align 4, !dbg !16475, !ctir !7
  ret i32 -1, !dbg !16476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !16477 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16480, metadata !DIExpression()), !dbg !16481
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16482, metadata !DIExpression()), !dbg !16483
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16484, metadata !DIExpression()), !dbg !16485
  %call = call i32* @__errno_location() #16, !dbg !16486
  store i32 95, i32* %call, align 4, !dbg !16487, !ctir !7
  ret i32 -1, !dbg !16488
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16489 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16492, metadata !DIExpression()), !dbg !16493
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16494, metadata !DIExpression()), !dbg !16495
  %call = call i32* @__errno_location() #16, !dbg !16496
  store i32 95, i32* %call, align 4, !dbg !16497, !ctir !7
  ret i32 -1, !dbg !16498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16499 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16500, metadata !DIExpression()), !dbg !16501
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16502, metadata !DIExpression()), !dbg !16503
  %call = call i32* @__errno_location() #16, !dbg !16504
  store i32 95, i32* %call, align 4, !dbg !16505, !ctir !7
  ret i32 -1, !dbg !16506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16507 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16510, metadata !DIExpression()), !dbg !16511
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16512, metadata !DIExpression()), !dbg !16513
  %call = call i32* @__errno_location() #16, !dbg !16514
  store i32 95, i32* %call, align 4, !dbg !16515, !ctir !7
  ret i32 -1, !dbg !16516
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16517 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16520, metadata !DIExpression()), !dbg !16521
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16522, metadata !DIExpression()), !dbg !16523
  %call = call i32* @__errno_location() #16, !dbg !16524
  store i32 95, i32* %call, align 4, !dbg !16525, !ctir !7
  ret i32 -1, !dbg !16526
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16527 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16528, metadata !DIExpression()), !dbg !16529
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16530, metadata !DIExpression()), !dbg !16531
  %call = call i32* @__errno_location() #16, !dbg !16532
  store i32 95, i32* %call, align 4, !dbg !16533, !ctir !7
  ret i32 -1, !dbg !16534
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16535 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16538, metadata !DIExpression()), !dbg !16539
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16540, metadata !DIExpression()), !dbg !16541
  %call = call i32* @__errno_location() #16, !dbg !16542
  store i32 95, i32* %call, align 4, !dbg !16543, !ctir !7
  ret i32 -1, !dbg !16544
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16545 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16546, metadata !DIExpression()), !dbg !16547
  %call = call i32* @__errno_location() #16, !dbg !16548
  store i32 95, i32* %call, align 4, !dbg !16549, !ctir !7
  ret i32 -1, !dbg !16550
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16551 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16552, metadata !DIExpression()), !dbg !16553
  %call = call i32* @__errno_location() #16, !dbg !16554
  store i32 95, i32* %call, align 4, !dbg !16555, !ctir !7
  ret i32 -1, !dbg !16556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16557 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  %call = call i32* @__errno_location() #16, !dbg !16560
  store i32 95, i32* %call, align 4, !dbg !16561, !ctir !7
  ret i32 -1, !dbg !16562
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !16563 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !16567, metadata !DIExpression()), !dbg !16568
  store i8* %tcon, i8** %tcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !16569, metadata !DIExpression()), !dbg !16570
  store i16 %tclass, i16* %tclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !16571, metadata !DIExpression()), !dbg !16572
  store i8** %newcon, i8*** %newcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !16573, metadata !DIExpression()), !dbg !16574
  %call = call i32* @__errno_location() #16, !dbg !16575
  store i32 95, i32* %call, align 4, !dbg !16576, !ctir !7
  ret i32 -1, !dbg !16577
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !16578 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16581, metadata !DIExpression()), !dbg !16582
  %call = call i32* @__errno_location() #16, !dbg !16583
  store i32 95, i32* %call, align 4, !dbg !16584, !ctir !7
  ret i16 0, !dbg !16585
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16586 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16589, metadata !DIExpression()), !dbg !16590
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  %call = call i32* @__errno_location() #16, !dbg !16593
  store i32 95, i32* %call, align 4, !dbg !16594, !ctir !7
  ret i32 -1, !dbg !16595
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #10 !dbg !16596 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16623, metadata !DIExpression()), !dbg !16624
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16625
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16625, !ctir !16601
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16626, !ctir !16616
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16626, !ctir !370
  ret i64 %1, !dbg !16627
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #10 !dbg !16628 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16629, metadata !DIExpression()), !dbg !16630
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16631
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16631, !ctir !16601
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16632, !ctir !16616
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16632, !ctir !370
  ret i64 %1, !dbg !16633
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #10 !dbg !16634 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16635, metadata !DIExpression()), !dbg !16636
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16637
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16637, !ctir !16601
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16638, !ctir !16616
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16638, !ctir !370
  ret i64 %1, !dbg !16639
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #10 !dbg !16640 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16641, metadata !DIExpression()), !dbg !16642
  ret i64 0, !dbg !16643
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 !dbg !16644 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16647, metadata !DIExpression()), !dbg !16648
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16649
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16649, !ctir !16601
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16649
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16649
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16650
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16650
  ret { i64, i64 } %4, !dbg !16650
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 !dbg !16651 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16652, metadata !DIExpression()), !dbg !16653
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16654
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16654, !ctir !16601
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16654
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16654
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16655
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16655
  ret { i64, i64 } %4, !dbg !16655
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 !dbg !16656 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16657, metadata !DIExpression()), !dbg !16658
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16659
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16659, !ctir !16601
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16659
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16659
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16660
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16660
  ret { i64, i64 } %4, !dbg !16660
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 !dbg !16661 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16662, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16664, metadata !DIExpression()), !dbg !16665
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16666, !ctir !16616
  store i64 -1, i64* %tv_sec, align 8, !dbg !16667, !ctir !368
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16668, !ctir !16616
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16669, !ctir !370
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16670
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16670
  ret { i64, i64 } %1, !dbg !16670
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16671 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16675, metadata !DIExpression()), !dbg !16676
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16677, metadata !DIExpression()), !dbg !16678
  %0 = load i32, i32* %result.addr, align 4, !dbg !16679
  ret i32 %0, !dbg !16680
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16681 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16707, metadata !DIExpression()), !dbg !16708
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16709, metadata !DIExpression()), !dbg !16710
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16711, metadata !DIExpression()), !dbg !16712
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16713
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16714
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16715
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #9, !dbg !16716
  ret i32 %call, !dbg !16717
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16718 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16719, metadata !DIExpression()), !dbg !16720
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16721, metadata !DIExpression()), !dbg !16722
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16723, metadata !DIExpression()), !dbg !16724
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16725
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16726
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16727
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #9, !dbg !16728
  ret i32 %call, !dbg !16729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16730 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1010
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16733, metadata !DIExpression()), !dbg !16734
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16735, metadata !DIExpression()), !dbg !16736
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16737, metadata !DIExpression()), !dbg !16738
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16739, metadata !DIExpression()), !dbg !16740
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16743, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16745, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16747, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16749, metadata !DIExpression()), !dbg !16750
  store i32 -1, i32* %fd, align 4, !dbg !16750
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16751, metadata !DIExpression()), !dbg !16752
  %call = call i32* @__errno_location() #16, !dbg !16753
  %0 = load i32, i32* %call, align 4, !dbg !16753, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !16752
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16754, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16756, metadata !DIExpression()), !dbg !16757
  store i32 238328, i32* %attempts, align 4, !dbg !16757
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16758
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16759
  store i64 %call1, i64* %len, align 8, !dbg !16760
  %2 = load i64, i64* %len, align 8, !dbg !16761
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16763
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16764
  %conv = sext i32 %4 to i64, !dbg !16764
  %add = add i64 %3, %conv, !dbg !16765
  %cmp = icmp ult i64 %2, %add, !dbg !16766
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16767

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16768
  %6 = load i64, i64* %len, align 8, !dbg !16769
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16770
  %sub = sub i64 %6, %7, !dbg !16771
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16772
  %conv3 = sext i32 %8 to i64, !dbg !16772
  %sub4 = sub i64 %sub, %conv3, !dbg !16773
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16768, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16774
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !16775
  br i1 %call5, label %if.end, label %if.then, !dbg !16776

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #16, !dbg !16777
  store i32 22, i32* %call6, align 4, !dbg !16777, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16779
  br label %return, !dbg !16779

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !16780
  %11 = load i64, i64* %len, align 8, !dbg !16781
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16782
  %sub7 = sub i64 %11, %12, !dbg !16783
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !16784
  %conv8 = sext i32 %13 to i64, !dbg !16784
  %sub9 = sub i64 %sub7, %conv8, !dbg !16785
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !16780, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !16786
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16787
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !16788
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !16789
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16790
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !16790
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !16792

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16793
  br label %return, !dbg !16793

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !16794
  br label %for.cond, !dbg !16796

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !16797
  %17 = load i32, i32* %attempts, align 4, !dbg !16799
  %cmp14 = icmp ult i32 %16, %17, !dbg !16800
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !16801

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16802, metadata !DIExpression()), !dbg !16804
  store i64 0, i64* %i, align 8, !dbg !16805
  br label %for.cond16, !dbg !16807

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !16808
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16810
  %cmp17 = icmp ult i64 %18, %19, !dbg !16811
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !16812

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16813
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !16814
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !16815, !ctir !1013
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !16815
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !16816
  %23 = load i64, i64* %i, align 8, !dbg !16817
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16816, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !16818
  br label %for.inc, !dbg !16816

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !16819
  %inc = add i64 %24, 1, !dbg !16819
  store i64 %inc, i64* %i, align 8, !dbg !16819
  br label %for.cond16, !dbg !16820, !llvm.loop !16821

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16823
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !16824
  %27 = load i8*, i8** %args.addr, align 8, !dbg !16825
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !16823
  store i32 %call23, i32* %fd, align 4, !dbg !16826
  %28 = load i32, i32* %fd, align 4, !dbg !16827
  %cmp24 = icmp sge i32 %28, 0, !dbg !16829
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !16830

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !16831
  %call27 = call i32* @__errno_location() #16, !dbg !16831
  store i32 %29, i32* %call27, align 4, !dbg !16831, !ctir !7
  br label %done, !dbg !16833

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #16, !dbg !16834
  %30 = load i32, i32* %call28, align 4, !dbg !16834, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !16836
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16837

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !16838
  br label %done, !dbg !16840

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !16841

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !16842
  %inc35 = add i32 %31, 1, !dbg !16842
  store i32 %inc35, i32* %count, align 4, !dbg !16842
  br label %for.cond, !dbg !16843, !llvm.loop !16844

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16846
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !16847
  %call38 = call i32* @__errno_location() #16, !dbg !16848
  store i32 17, i32* %call38, align 4, !dbg !16848, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16849
  br label %return, !dbg !16849

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !16850), !dbg !16851
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !16852, metadata !DIExpression()), !dbg !16854
  %call39 = call i32* @__errno_location() #16, !dbg !16855
  %33 = load i32, i32* %call39, align 4, !dbg !16855, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !16854
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16856
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !16857
  %35 = load i32, i32* %saved_errno, align 4, !dbg !16858
  %call41 = call i32* @__errno_location() #16, !dbg !16858
  store i32 %35, i32* %call41, align 4, !dbg !16858, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !16859
  store i32 %36, i32* %retval, align 4, !dbg !16860
  br label %return, !dbg !16860

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !16861
  ret i32 %37, !dbg !16861
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #10 !dbg !16862 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !16865, metadata !DIExpression()), !dbg !16866
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16867, metadata !DIExpression()), !dbg !16868
  %0 = load i64, i64* %len.addr, align 8, !dbg !16869
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16870
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.398, i64 0, i64 0)) #14, !dbg !16871
  %cmp = icmp ule i64 %0, %call, !dbg !16872
  ret i1 %cmp, !dbg !16873
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !16874 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1014
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16877, metadata !DIExpression()), !dbg !16878
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16879, metadata !DIExpression()), !dbg !16880
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16881, metadata !DIExpression()), !dbg !16882
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16885, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !16887, metadata !DIExpression()), !dbg !16888
  %0 = load i32, i32* %kind.addr, align 4, !dbg !16889
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !16890

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16891
  br label %sw.epilog, !dbg !16893

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16894
  br label %sw.epilog, !dbg !16895

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16896
  br label %sw.epilog, !dbg !16897

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.400, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !16898
  unreachable, !dbg !16898

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16901
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !16902
  %3 = bitcast i32* %flags.addr to i8*, !dbg !16903
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16904
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16905
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !16906
  ret i32 %call, !dbg !16907
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !16908 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !227
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16909, metadata !DIExpression()), !dbg !16910
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16911, metadata !DIExpression()), !dbg !16912
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !16913, metadata !DIExpression()), !dbg !16914
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !16915
  %1 = bitcast i8* %0 to i32*, !dbg !16915
  store i32* %1, i32** %openflags, align 8, !dbg !16914
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !16916
  %3 = load i32*, i32** %openflags, align 8, !dbg !16917
  %4 = load i32, i32* %3, align 4, !dbg !16918, !ctir !7
  %and = and i32 %4, -4, !dbg !16919
  %or = or i32 %and, 2, !dbg !16920
  %or1 = or i32 %or, 64, !dbg !16921
  %or2 = or i32 %or1, 128, !dbg !16922
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !16923
  ret i32 %call, !dbg !16924
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !16925 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16926, metadata !DIExpression()), !dbg !16927
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16928, metadata !DIExpression()), !dbg !16929
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16930
  %call = call i32 @mkdir(i8* %0, i32 448) #9, !dbg !16931
  ret i32 %call, !dbg !16932
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !16933 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !16934
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16955, metadata !DIExpression()), !dbg !16956
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16957, metadata !DIExpression()), !dbg !16958
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16959, metadata !DIExpression()), !dbg !16960
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16961
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #9, !dbg !16961
  %cmp = icmp eq i32 %call, 0, !dbg !16963
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16964

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !16965
  %1 = load i32, i32* %call1, align 4, !dbg !16965, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !16966
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16967

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #16, !dbg !16968
  store i32 17, i32* %call3, align 4, !dbg !16968, !ctir !7
  br label %if.end, !dbg !16968

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #16, !dbg !16969
  %2 = load i32, i32* %call4, align 4, !dbg !16969, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !16970
  %3 = zext i1 %cmp5 to i64, !dbg !16969
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !16969
  ret i32 %cond, !dbg !16971
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !16972 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16975, metadata !DIExpression()), !dbg !16976
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16977, metadata !DIExpression()), !dbg !16978
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16979, metadata !DIExpression()), !dbg !16980
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16981, metadata !DIExpression()), !dbg !16982
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16983
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16984
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16985
  %3 = load i32, i32* %kind.addr, align 4, !dbg !16986
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !16987
  ret i32 %call, !dbg !16988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !16989 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16992, metadata !DIExpression()), !dbg !16993
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16994, metadata !DIExpression()), !dbg !16995
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16998, metadata !DIExpression()), !dbg !16999
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17000
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17001
  %2 = load i8*, i8** %args.addr, align 8, !dbg !17002
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17003
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !17004
  ret i32 %call, !dbg !17005
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17006 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17008, metadata !DIExpression()), !dbg !17009
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17010
  %cmp = icmp sle i32 0, %0, !dbg !17012
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17013

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17014
  %cmp1 = icmp sle i32 %1, 2, !dbg !17015
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17016

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17017, metadata !DIExpression()), !dbg !17019
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17020
  %call = call i32 @dup_safer(i32 %2), !dbg !17021
  store i32 %call, i32* %f, align 4, !dbg !17019
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17022, metadata !DIExpression()), !dbg !17023
  %call2 = call i32* @__errno_location() #16, !dbg !17024
  %3 = load i32, i32* %call2, align 4, !dbg !17024, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !17023
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17025
  %call3 = call i32 @close(i32 %4), !dbg !17026
  %5 = load i32, i32* %e, align 4, !dbg !17027
  %call4 = call i32* @__errno_location() #16, !dbg !17028
  store i32 %5, i32* %call4, align 4, !dbg !17029, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !17030
  store i32 %6, i32* %fd.addr, align 4, !dbg !17031
  br label %if.end, !dbg !17032

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17033
  ret i32 %7, !dbg !17034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !17035 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17038, metadata !DIExpression()), !dbg !17039
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17040, metadata !DIExpression()), !dbg !17041
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17042, metadata !DIExpression()), !dbg !17043
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17044, metadata !DIExpression()), !dbg !17045
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !17046
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17047
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17048
  %3 = load i32, i32* %options.addr, align 4, !dbg !17049
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !17050
  ret i32 %call, !dbg !17051
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1025 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1055
  %src_s = alloca i64, align 8, !ctir !1055
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1057
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1058
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !1055
  %dst_c_s = alloca i64, align 8, !ctir !1055
  %dst_m_s = alloca i64, align 8, !ctir !1055
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !142
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1063
  %dst_status = alloca %struct.stat, align 8, !ctir !1031
  %s = alloca i64, align 8, !ctir !1055
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !17052, metadata !DIExpression()), !dbg !17053
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17058, metadata !DIExpression()), !dbg !17059
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17060, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !17062, metadata !DIExpression()), !dbg !17063
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17064
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17065, !ctir !1030
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17065, !ctir !1045
  %1 = load i64, i64* %tv_sec, align 8, !dbg !17065, !ctir !368
  store i64 %1, i64* %dst_s, align 8, !dbg !17063
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !17066, metadata !DIExpression()), !dbg !17067
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17068
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !17069, !ctir !1030
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !17069, !ctir !1045
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !17069, !ctir !368
  store i64 %3, i64* %src_s, align 8, !dbg !17067
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !17070, metadata !DIExpression()), !dbg !17071
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17072
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !17073
  %conv = trunc i64 %call to i32, !dbg !17073
  store i32 %conv, i32* %dst_ns, align 4, !dbg !17071
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !17074, metadata !DIExpression()), !dbg !17075
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17076
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !17077
  %conv4 = trunc i64 %call3 to i32, !dbg !17077
  store i32 %conv4, i32* %src_ns, align 4, !dbg !17075
  %6 = load i32, i32* %options.addr, align 4, !dbg !17078
  %and = and i32 %6, 1, !dbg !17080
  %tobool = icmp ne i32 %and, 0, !dbg !17080
  br i1 %tobool, label %if.then, label %if.end207, !dbg !17081

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !17082, metadata !DIExpression()), !dbg !17084
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !17084
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !17085, metadata !DIExpression()), !dbg !17086
  call void @llvm.dbg.declare(metadata i32* %res, metadata !17087, metadata !DIExpression()), !dbg !17088
  %7 = load i64, i64* %dst_s, align 8, !dbg !17089
  %8 = load i64, i64* %src_s, align 8, !dbg !17091
  %cmp = icmp eq i64 %7, %8, !dbg !17092
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17093

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !17094
  %10 = load i32, i32* %src_ns, align 4, !dbg !17095
  %cmp6 = icmp eq i32 %9, %10, !dbg !17096
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17097

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17098
  br label %return, !dbg !17098

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !17099
  %12 = load i64, i64* %src_s, align 8, !dbg !17101
  %sub = sub nsw i64 %12, 2, !dbg !17102
  %cmp9 = icmp sle i64 %11, %sub, !dbg !17103
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17104

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17105
  br label %return, !dbg !17105

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !17106
  %14 = load i64, i64* %dst_s, align 8, !dbg !17108
  %sub13 = sub nsw i64 %14, 2, !dbg !17109
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !17110
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !17111

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !17112
  br label %return, !dbg !17112

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17113
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !17113
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !17115

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !17116
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17117
  br label %if.end21, !dbg !17118

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17119
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !17119
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !17121

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17122
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !17122
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !17125

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #9, !dbg !17126
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !17126
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17128
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17129
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !17129
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !17131

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !17132

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17133
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !17134, !ctir !1058
  store i32 2000000000, i32* %resolution, align 8, !dbg !17135, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17136
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !17137, !ctir !1058
  store i8 0, i8* %exact, align 4, !dbg !17138, !ctir !142
  br label %if.end30, !dbg !17139

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17140
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !17141, !ctir !1030
  %23 = load i64, i64* %st_dev, align 8, !dbg !17141, !ctir !452
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17142
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !17143, !ctir !1058
  store i64 %23, i64* %dev, align 8, !dbg !17144, !ctir !500
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17145
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17146
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !17146
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !17147
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !17147
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !17148
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17149
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !17149
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !17151

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !17152

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17153
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17155
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !17156
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !17157

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17158
  br label %if.end38, !dbg !17160

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !17161

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !17162

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !17163), !dbg !17165
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17166
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !17166
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !17168

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17169
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !17171, !ctir !1030
  %34 = load i64, i64* %st_dev41, align 8, !dbg !17171, !ctir !452
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !17172, !ctir !1058
  store i64 %34, i64* %dev42, align 8, !dbg !17173, !ctir !500
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17174
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !17175
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !17176
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !17176
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !17177
  br label %if.end44, !dbg !17178

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17179
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !17179
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !17181

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !17182
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17184
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !17185, !ctir !1058
  store i32 2000000000, i32* %resolution47, align 8, !dbg !17186, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17187
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !17188, !ctir !1058
  store i8 0, i8* %exact48, align 4, !dbg !17189, !ctir !142
  br label %if.end49, !dbg !17190

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17191
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !17192, !ctir !1058
  %42 = load i32, i32* %resolution51, align 8, !dbg !17192, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !17193
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17194
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !17196, !ctir !1058
  %44 = load i8, i8* %exact52, align 4, !dbg !17196
  %tobool53 = trunc i8 %44 to i1, !dbg !17196, !ctir !142
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !17197

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !17198, metadata !DIExpression()), !dbg !17200
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17201
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !17202, !ctir !1030
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17202, !ctir !1045
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !17202, !ctir !368
  store i64 %46, i64* %dst_a_s, align 8, !dbg !17200
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !17203, metadata !DIExpression()), !dbg !17204
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17205
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !17206, !ctir !1030
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !17206, !ctir !1045
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !17206, !ctir !368
  store i64 %48, i64* %dst_c_s, align 8, !dbg !17204
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !17207, metadata !DIExpression()), !dbg !17208
  %49 = load i64, i64* %dst_s, align 8, !dbg !17209
  store i64 %49, i64* %dst_m_s, align 8, !dbg !17208
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !17210, metadata !DIExpression()), !dbg !17211
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17212
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !17213
  %conv58 = trunc i64 %call57 to i32, !dbg !17213
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !17211
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !17214, metadata !DIExpression()), !dbg !17215
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17216
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !17217
  %conv60 = trunc i64 %call59 to i32, !dbg !17217
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !17215
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !17218, metadata !DIExpression()), !dbg !17219
  %52 = load i32, i32* %dst_ns, align 4, !dbg !17220
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !17219
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !17221, metadata !DIExpression()), !dbg !17223
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !17224
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !17225
  %or = or i64 %53, %54, !dbg !17226
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !17227
  %or61 = or i64 %or, %55, !dbg !17228
  %and62 = and i64 %or61, 1, !dbg !17229
  %tobool63 = icmp ne i64 %and62, 0, !dbg !17230
  %frombool = zext i1 %tobool63 to i8, !dbg !17223
  store i8 %frombool, i8* %odd_second, align 1, !dbg !17223
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17231, metadata !DIExpression()), !dbg !17234
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !17235
  store i32 %56, i32* %a, align 4, !dbg !17234
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17236, metadata !DIExpression()), !dbg !17237
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !17238
  store i32 %57, i32* %c, align 4, !dbg !17237
  call void @llvm.dbg.declare(metadata i32* %m, metadata !17239, metadata !DIExpression()), !dbg !17240
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !17241
  store i32 %58, i32* %m, align 4, !dbg !17240
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !17242, metadata !DIExpression()), !dbg !17243
  store i32 1, i32* %SR10, align 4, !dbg !17243
  %59 = load i32, i32* %SR10, align 4, !dbg !17244
  %mul = mul nsw i32 %59, 10, !dbg !17244
  store i32 %mul, i32* %SR10, align 4, !dbg !17244
  %60 = load i32, i32* %a, align 4, !dbg !17245
  %61 = load i32, i32* %SR10, align 4, !dbg !17247
  %rem = srem i32 %60, %61, !dbg !17248
  %62 = load i32, i32* %c, align 4, !dbg !17249
  %63 = load i32, i32* %SR10, align 4, !dbg !17250
  %rem64 = srem i32 %62, %63, !dbg !17251
  %or65 = or i32 %rem, %rem64, !dbg !17252
  %64 = load i32, i32* %m, align 4, !dbg !17253
  %65 = load i32, i32* %SR10, align 4, !dbg !17254
  %rem66 = srem i32 %64, %65, !dbg !17255
  %or67 = or i32 %or65, %rem66, !dbg !17256
  %cmp68 = icmp ne i32 %or67, 0, !dbg !17257
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !17258

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !17259
  br label %if.end96, !dbg !17260

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !17261
  store i32 %66, i32* %res, align 4, !dbg !17263
  %67 = load i32, i32* %SR10, align 4, !dbg !17264
  %68 = load i32, i32* %a, align 4, !dbg !17265
  %div = sdiv i32 %68, %67, !dbg !17265
  store i32 %div, i32* %a, align 4, !dbg !17265
  %69 = load i32, i32* %SR10, align 4, !dbg !17266
  %70 = load i32, i32* %c, align 4, !dbg !17267
  %div72 = sdiv i32 %70, %69, !dbg !17267
  store i32 %div72, i32* %c, align 4, !dbg !17267
  %71 = load i32, i32* %SR10, align 4, !dbg !17268
  %72 = load i32, i32* %m, align 4, !dbg !17269
  %div73 = sdiv i32 %72, %71, !dbg !17269
  store i32 %div73, i32* %m, align 4, !dbg !17269
  br label %for.cond, !dbg !17270

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !17271
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17273
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !17274, !ctir !1058
  %75 = load i32, i32* %resolution74, align 8, !dbg !17274, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !17275
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !17276

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !17277
  %rem77 = srem i32 %76, 10, !dbg !17278
  %77 = load i32, i32* %c, align 4, !dbg !17279
  %rem78 = srem i32 %77, 10, !dbg !17280
  %or79 = or i32 %rem77, %rem78, !dbg !17281
  %78 = load i32, i32* %m, align 4, !dbg !17282
  %rem80 = srem i32 %78, 10, !dbg !17283
  %or81 = or i32 %or79, %rem80, !dbg !17284
  %cmp82 = icmp eq i32 %or81, 0, !dbg !17285
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !17286
  br i1 %79, label %for.body, label %for.end, !dbg !17287

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !17288
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !17290
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !17291

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !17292
  %tobool87 = trunc i8 %81 to i1, !dbg !17292
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !17295

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !17296
  %mul89 = mul nsw i32 %82, 2, !dbg !17296
  store i32 %mul89, i32* %res, align 4, !dbg !17296
  br label %if.end90, !dbg !17297

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !17298

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !17299

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !17300
  %mul92 = mul nsw i32 %83, 10, !dbg !17300
  store i32 %mul92, i32* %res, align 4, !dbg !17300
  %84 = load i32, i32* %a, align 4, !dbg !17301
  %div93 = sdiv i32 %84, 10, !dbg !17301
  store i32 %div93, i32* %a, align 4, !dbg !17301
  %85 = load i32, i32* %c, align 4, !dbg !17302
  %div94 = sdiv i32 %85, 10, !dbg !17302
  store i32 %div94, i32* %c, align 4, !dbg !17302
  %86 = load i32, i32* %m, align 4, !dbg !17303
  %div95 = sdiv i32 %86, 10, !dbg !17303
  store i32 %div95, i32* %m, align 4, !dbg !17303
  br label %for.cond, !dbg !17304, !llvm.loop !17305

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !17307
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17308
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !17309, !ctir !1058
  store i32 %87, i32* %resolution97, align 8, !dbg !17310, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !17311
  %cmp98 = icmp slt i32 1, %89, !dbg !17313
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !17314

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !17315, metadata !DIExpression()), !dbg !17317
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !17318, metadata !DIExpression()), !dbg !17319
  %90 = load i32, i32* %src_ns, align 4, !dbg !17320
  %rem101 = srem i32 %90, 1, !dbg !17321
  %91 = load i32, i32* %src_ns, align 4, !dbg !17322
  %sub102 = sub nsw i32 %91, %rem101, !dbg !17322
  store i32 %sub102, i32* %src_ns, align 4, !dbg !17322
  call void @llvm.dbg.declare(metadata i64* %s, metadata !17323, metadata !DIExpression()), !dbg !17325
  %92 = load i64, i64* %src_s, align 8, !dbg !17326
  %93 = load i32, i32* %res, align 4, !dbg !17327
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !17328
  %94 = zext i1 %cmp103 to i64, !dbg !17327
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !17327
  %neg = xor i32 %cond, -1, !dbg !17329
  %conv105 = sext i32 %neg to i64, !dbg !17329
  %and106 = and i64 %92, %conv105, !dbg !17330
  store i64 %and106, i64* %s, align 8, !dbg !17325
  %95 = load i64, i64* %src_s, align 8, !dbg !17331
  %96 = load i64, i64* %dst_s, align 8, !dbg !17333
  %cmp107 = icmp slt i64 %95, %96, !dbg !17334
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !17335

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !17336
  %98 = load i64, i64* %dst_s, align 8, !dbg !17337
  %cmp109 = icmp eq i64 %97, %98, !dbg !17338
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !17339

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !17340
  %100 = load i32, i32* %dst_ns, align 4, !dbg !17341
  %cmp112 = icmp sle i32 %99, %100, !dbg !17342
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !17343

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !17344
  br label %return, !dbg !17344

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !17345
  %102 = load i64, i64* %s, align 8, !dbg !17347
  %cmp116 = icmp slt i64 %101, %102, !dbg !17348
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !17349

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !17350
  %104 = load i64, i64* %s, align 8, !dbg !17351
  %cmp119 = icmp eq i64 %103, %104, !dbg !17352
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !17353

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !17354
  %106 = load i32, i32* %src_ns, align 4, !dbg !17355
  %107 = load i32, i32* %src_ns, align 4, !dbg !17356
  %108 = load i32, i32* %res, align 4, !dbg !17357
  %rem122 = srem i32 %107, %108, !dbg !17358
  %sub123 = sub nsw i32 %106, %rem122, !dbg !17359
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !17360
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !17361

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !17362
  br label %return, !dbg !17362

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !17363
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17364, !ctir !1063
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !17365, !ctir !1045
  store i64 %109, i64* %tv_sec128, align 16, !dbg !17366, !ctir !368
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !17367
  %conv129 = sext i32 %110 to i64, !dbg !17367
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17368, !ctir !1063
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !17369, !ctir !1045
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !17370, !ctir !370
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !17371
  %112 = load i32, i32* %res, align 4, !dbg !17372
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !17373
  %conv132 = zext i1 %cmp131 to i32, !dbg !17373
  %conv133 = sext i32 %conv132 to i64, !dbg !17374
  %or134 = or i64 %111, %conv133, !dbg !17375
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17376, !ctir !1063
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !17377, !ctir !1045
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !17378, !ctir !368
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !17379
  %114 = load i32, i32* %res, align 4, !dbg !17380
  %div137 = sdiv i32 %114, 9, !dbg !17381
  %add = add nsw i32 %113, %div137, !dbg !17382
  %conv138 = sext i32 %add to i64, !dbg !17379
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17383, !ctir !1063
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !17384, !ctir !1045
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !17385, !ctir !370
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !17386
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !17388
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17389, !ctir !1063
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #9, !dbg !17390
  %tobool142 = icmp ne i32 %call141, 0, !dbg !17390
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !17391

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !17392
  br label %return, !dbg !17392

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !17393, metadata !DIExpression()), !dbg !17395
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !17396
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !17397
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #9, !dbg !17398
  store i32 %call145, i32* %stat_result, align 4, !dbg !17395
  %119 = load i32, i32* %stat_result, align 4, !dbg !17399
  %conv146 = sext i32 %119 to i64, !dbg !17399
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17401, !ctir !1031
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !17401, !ctir !1045
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !17401, !ctir !368
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !17402
  %xor = xor i64 %120, %121, !dbg !17403
  %or149 = or i64 %conv146, %xor, !dbg !17404
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17405
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !17406
  %conv151 = sext i32 %122 to i64, !dbg !17406
  %xor152 = xor i64 %call150, %conv151, !dbg !17407
  %or153 = or i64 %or149, %xor152, !dbg !17408
  %tobool154 = icmp ne i64 %or153, 0, !dbg !17408
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !17409

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !17410
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17412, !ctir !1063
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !17413, !ctir !1045
  store i64 %123, i64* %tv_sec157, align 16, !dbg !17414, !ctir !368
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !17415
  %conv158 = sext i32 %124 to i64, !dbg !17415
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17416, !ctir !1063
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !17417, !ctir !1045
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !17418, !ctir !370
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !17419
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !17420
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17421, !ctir !1063
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #9, !dbg !17422
  br label %if.end163, !dbg !17423

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !17424
  %cmp164 = icmp ne i32 %127, 0, !dbg !17426
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !17427

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !17428
  br label %return, !dbg !17428

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !17429, metadata !DIExpression()), !dbg !17431
  %128 = load i32, i32* %res, align 4, !dbg !17432
  store i32 %128, i32* %old_res, align 4, !dbg !17431
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !17433, metadata !DIExpression()), !dbg !17434
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17435, !ctir !1031
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !17435, !ctir !1045
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !17435, !ctir !368
  %and171 = and i64 %129, 1, !dbg !17436
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !17437
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17438
  %add174 = add nsw i64 %mul172, %call173, !dbg !17439
  %conv175 = trunc i64 %add174 to i32, !dbg !17440
  store i32 %conv175, i32* %a168, align 4, !dbg !17434
  store i32 1, i32* %res, align 4, !dbg !17441
  %130 = load i32, i32* %res, align 4, !dbg !17442
  %131 = load i32, i32* %a168, align 4, !dbg !17444
  %div176 = sdiv i32 %131, %130, !dbg !17444
  store i32 %div176, i32* %a168, align 4, !dbg !17444
  br label %for.cond177, !dbg !17445

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !17446
  %rem178 = srem i32 %132, 10, !dbg !17448
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !17449
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !17450

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !17451
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !17454
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !17455

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !17456
  %mul185 = mul nsw i32 %134, 2, !dbg !17456
  store i32 %mul185, i32* %res, align 4, !dbg !17456
  br label %for.end194, !dbg !17458

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !17459
  %mul187 = mul nsw i32 %135, 10, !dbg !17459
  store i32 %mul187, i32* %res, align 4, !dbg !17459
  %136 = load i32, i32* %res, align 4, !dbg !17460
  %137 = load i32, i32* %old_res, align 4, !dbg !17462
  %cmp188 = icmp eq i32 %136, %137, !dbg !17463
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !17464

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !17465

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !17466

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !17467
  %div193 = sdiv i32 %138, 10, !dbg !17467
  store i32 %div193, i32* %a168, align 4, !dbg !17467
  br label %for.cond177, !dbg !17468, !llvm.loop !17469

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !17471

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !17472
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17473
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !17474, !ctir !1058
  store i32 %139, i32* %resolution196, align 8, !dbg !17475, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17476
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !17477, !ctir !1058
  store i8 1, i8* %exact197, align 4, !dbg !17478, !ctir !142
  br label %if.end198, !dbg !17479

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !17480
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !17481
  %143 = zext i1 %cmp199 to i64, !dbg !17480
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !17480
  %neg202 = xor i32 %cond201, -1, !dbg !17482
  %conv203 = sext i32 %neg202 to i64, !dbg !17482
  %144 = load i64, i64* %src_s, align 8, !dbg !17483
  %and204 = and i64 %144, %conv203, !dbg !17483
  store i64 %and204, i64* %src_s, align 8, !dbg !17483
  %145 = load i32, i32* %src_ns, align 4, !dbg !17484
  %146 = load i32, i32* %res, align 4, !dbg !17485
  %rem205 = srem i32 %145, %146, !dbg !17486
  %147 = load i32, i32* %src_ns, align 4, !dbg !17487
  %sub206 = sub nsw i32 %147, %rem205, !dbg !17487
  store i32 %sub206, i32* %src_ns, align 4, !dbg !17487
  br label %if.end207, !dbg !17488

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !17489
  %149 = load i64, i64* %src_s, align 8, !dbg !17490
  %cmp208 = icmp slt i64 %148, %149, !dbg !17491
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !17489

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !17489

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !17492
  %151 = load i64, i64* %src_s, align 8, !dbg !17493
  %cmp210 = icmp sgt i64 %150, %151, !dbg !17494
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !17492

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !17492

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !17495
  %153 = load i32, i32* %src_ns, align 4, !dbg !17496
  %cmp214 = icmp slt i32 %152, %153, !dbg !17497
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !17495

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !17495

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !17498
  %155 = load i32, i32* %src_ns, align 4, !dbg !17499
  %cmp218 = icmp sgt i32 %154, %155, !dbg !17500
  %conv219 = zext i1 %cmp218 to i32, !dbg !17500
  br label %cond.end, !dbg !17495

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !17495
  br label %cond.end221, !dbg !17492

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !17492
  br label %cond.end223, !dbg !17489

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !17489
  store i32 %cond224, i32* %retval, align 4, !dbg !17501
  br label %return, !dbg !17501

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !17502
  ret i32 %156, !dbg !17502
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !17503 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1064
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17504, metadata !DIExpression()), !dbg !17505
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !17506, metadata !DIExpression()), !dbg !17507
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !17508, metadata !DIExpression()), !dbg !17509
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17510
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17510
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !17509
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !17511
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !17512, !ctir !1065
  %3 = load i64, i64* %dev, align 8, !dbg !17512, !ctir !500
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !17513
  %rem = urem i64 %3, %4, !dbg !17514
  ret i64 %rem, !dbg !17515
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !17516 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1064
  %b = alloca %struct.fs_res*, align 8, !ctir !1064
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17517, metadata !DIExpression()), !dbg !17518
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !17519, metadata !DIExpression()), !dbg !17520
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !17521, metadata !DIExpression()), !dbg !17522
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17523
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17523
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !17522
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !17524, metadata !DIExpression()), !dbg !17525
  %2 = load i8*, i8** %y.addr, align 8, !dbg !17526
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !17526
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !17525
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !17527
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !17528, !ctir !1065
  %5 = load i64, i64* %dev, align 8, !dbg !17528, !ctir !500
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !17529
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !17530, !ctir !1065
  %7 = load i64, i64* %dev1, align 8, !dbg !17530, !ctir !500
  %cmp = icmp eq i64 %5, %7, !dbg !17531
  ret i1 %cmp, !dbg !17532
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !17533 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17539, metadata !DIExpression()), !dbg !17540
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17541, metadata !DIExpression()), !dbg !17542
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  %0 = load i32, i32* %dir.addr, align 4, !dbg !17545
  %1 = load i8*, i8** %file.addr, align 8, !dbg !17546
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !17547
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #9, !dbg !17548
  ret i32 %call, !dbg !17549
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !17550 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1074
  %ts = alloca %struct.timespec*, align 8, !ctir !1079
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !17551
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1080
  %t = alloca %struct.timespec*, align 8, !ctir !1087
  %abig = alloca i8, align 1, !ctir !142
  %mbig = alloca i8, align 1, !ctir !142
  %adiff = alloca i64, align 8, !ctir !1055
  %mdiff = alloca i64, align 8, !ctir !1055
  %tt = alloca %struct.timespec*, align 8, !ctir !1087
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1080
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17568, metadata !DIExpression()), !dbg !17569
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17570, metadata !DIExpression()), !dbg !17571
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17572, metadata !DIExpression()), !dbg !17573
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17574, metadata !DIExpression()), !dbg !17575
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17576, metadata !DIExpression()), !dbg !17577
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17578
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17578
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17578

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17579, !ctir !1074
  br label %cond.end, !dbg !17578

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17578

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17578
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17577
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17580, metadata !DIExpression()), !dbg !17581
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17581
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17582, metadata !DIExpression()), !dbg !17583
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17584
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17584
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17586

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17587, !ctir !1074
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17589
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17589, !ctir !17537
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17589
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17589
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17589
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17590, !ctir !1074
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17591
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17591, !ctir !17537
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17591
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17591
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17592
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17593
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17594
  br label %if.end, !dbg !17595

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17596
  %cmp = icmp slt i32 %9, 0, !dbg !17598
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17599

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17600
  br label %return, !dbg !17600

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17601
  %cmp7 = icmp slt i32 %10, 0, !dbg !17603
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17604

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17605
  %tobool8 = icmp ne i8* %11, null, !dbg !17605
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17606

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !17607
  store i32 9, i32* %call10, align 4, !dbg !17609, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17610
  br label %return, !dbg !17610

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17611
  %cmp12 = icmp sle i32 0, %12, !dbg !17613
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17614

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17615, metadata !DIExpression()), !dbg !17617
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17618
  %cmp14 = icmp eq i32 %13, 2, !dbg !17620
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17621

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17622
  %cmp16 = icmp slt i32 %14, 0, !dbg !17625
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17626

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17627
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #9, !dbg !17628
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17628
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17622

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17629
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #9, !dbg !17630
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17630
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17626

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17631
  br label %return, !dbg !17631

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17632
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17632, !ctir !1079
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17634, !ctir !1075
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17634, !ctir !370
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17635
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17636

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17637
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17637, !ctir !1079
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17638
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17638
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17638
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17638
  store i64 %22, i64* %21, align 8, !dbg !17638
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17638
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17638
  store i64 %24, i64* %23, align 8, !dbg !17638
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17638
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17638
  br label %if.end38, !dbg !17637

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17639
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17639, !ctir !1079
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17641, !ctir !1075
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17641, !ctir !370
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17642
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17643

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17644
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17644, !ctir !1079
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17645
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !17645
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !17645
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !17645
  store i64 %32, i64* %31, align 8, !dbg !17645
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !17645
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !17645
  store i64 %34, i64* %33, align 8, !dbg !17645
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !17645
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !17645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !17645
  br label %if.end37, !dbg !17644

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !17646
  %inc = add nsw i32 %37, 1, !dbg !17646
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17646
  br label %if.end39, !dbg !17647

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !17648
  %cmp40 = icmp slt i32 %38, 0, !dbg !17650
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !17651

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !17652
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17654
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #9, !dbg !17655
  store i32 %call42, i32* %result, align 4, !dbg !17656
  %41 = load i32, i32* %result, align 4, !dbg !17657
  %cmp43 = icmp slt i32 0, %41, !dbg !17659
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17660

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #16, !dbg !17661
  store i32 38, i32* %call45, align 4, !dbg !17662, !ctir !7
  br label %if.end46, !dbg !17661

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17663
  %cmp47 = icmp eq i32 %42, 0, !dbg !17665
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17666

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #16, !dbg !17667
  %43 = load i32, i32* %call48, align 4, !dbg !17667, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !17668
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17669

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17670
  %44 = load i32, i32* %result, align 4, !dbg !17672
  store i32 %44, i32* %retval, align 4, !dbg !17673
  br label %return, !dbg !17673

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17674

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17675
  %cmp53 = icmp sle i32 0, %45, !dbg !17677
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17678

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17679
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17681
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #9, !dbg !17682
  store i32 %call55, i32* %result, align 4, !dbg !17683
  %48 = load i32, i32* %result, align 4, !dbg !17684
  %cmp56 = icmp slt i32 0, %48, !dbg !17686
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17687

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #16, !dbg !17688
  store i32 38, i32* %call58, align 4, !dbg !17689, !ctir !7
  br label %if.end59, !dbg !17688

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17690
  %cmp60 = icmp eq i32 %49, 0, !dbg !17692
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17693

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #16, !dbg !17694
  %50 = load i32, i32* %call62, align 4, !dbg !17694, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !17695
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17696

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17697
  %51 = load i32, i32* %result, align 4, !dbg !17699
  store i32 %51, i32* %retval, align 4, !dbg !17700
  br label %return, !dbg !17700

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17701

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17702

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17703
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17704
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17705
  %tobool68 = icmp ne i32 %52, 0, !dbg !17705
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17707

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17708
  %cmp70 = icmp ne i32 %53, 3, !dbg !17711
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17712

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17713
  %cmp72 = icmp slt i32 %54, 0, !dbg !17714
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17715

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17716
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #9, !dbg !17717
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17717
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17713

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17718
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #9, !dbg !17719
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17719
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17715

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17720
  br label %return, !dbg !17720

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17721
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17721
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17723

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17724
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17725

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17726
  br label %return, !dbg !17726

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !17727

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !17728, metadata !DIExpression()), !dbg !17730
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !17731, metadata !DIExpression()), !dbg !17732
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17733
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !17733
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !17735

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17736
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !17736, !ctir !1079
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !17738, !ctir !1075
  %60 = load i64, i64* %tv_sec, align 8, !dbg !17738, !ctir !368
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17739, !ctir !1080
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !17740, !ctir !1081
  store i64 %60, i64* %tv_sec91, align 16, !dbg !17741, !ctir !368
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17742
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17742, !ctir !1079
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17743, !ctir !1075
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17743, !ctir !370
  %div = sdiv i64 %62, 1000, !dbg !17744
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17745, !ctir !1080
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17746, !ctir !1081
  store i64 %div, i64* %tv_usec, align 8, !dbg !17747, !ctir !1086
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17748
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17748, !ctir !1079
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17749, !ctir !1075
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17749, !ctir !368
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17750, !ctir !1080
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17751, !ctir !1081
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17752, !ctir !368
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17753
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17753, !ctir !1079
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17754, !ctir !1075
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17754, !ctir !370
  %div101 = sdiv i64 %66, 1000, !dbg !17755
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17756, !ctir !1080
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17757, !ctir !1081
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17758, !ctir !1086
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17759, !ctir !1080
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17760
  br label %if.end106, !dbg !17761

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17762
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17763
  %cmp107 = icmp slt i32 %67, 0, !dbg !17765
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17766

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17767
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17769
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #9, !dbg !17770
  store i32 %call109, i32* %retval, align 4, !dbg !17771
  br label %return, !dbg !17771

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17772
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17772
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #9, !dbg !17772
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17775
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17776

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17777
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17777
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17780

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17781, metadata !DIExpression()), !dbg !17783
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17784
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17784, !ctir !1087
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17785, !ctir !1081
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17785, !ctir !1086
  %cmp118 = icmp sle i64 500000, %74, !dbg !17786
  %frombool = zext i1 %cmp118 to i8, !dbg !17783
  store i8 %frombool, i8* %abig, align 1, !dbg !17783
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17787, metadata !DIExpression()), !dbg !17788
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17789
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17789, !ctir !1087
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17790, !ctir !1081
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17790, !ctir !1086
  %cmp121 = icmp sle i64 500000, %76, !dbg !17791
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17788
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17788
  %77 = load i8, i8* %abig, align 1, !dbg !17792
  %tobool123 = trunc i8 %77 to i1, !dbg !17792
  %conv = zext i1 %tobool123 to i32, !dbg !17792
  %78 = load i8, i8* %mbig, align 1, !dbg !17794
  %tobool124 = trunc i8 %78 to i1, !dbg !17794
  %conv125 = zext i1 %tobool124 to i32, !dbg !17794
  %or = or i32 %conv, %conv125, !dbg !17795
  %tobool126 = icmp ne i32 %or, 0, !dbg !17795
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !17796

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !17797
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #9, !dbg !17798
  %cmp129 = icmp eq i32 %call128, 0, !dbg !17799
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !17800

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !17801, metadata !DIExpression()), !dbg !17803
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !17804, !ctir !17551
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17804, !ctir !1075
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !17804, !ctir !368
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17805
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !17805, !ctir !1087
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !17806, !ctir !1081
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !17806, !ctir !368
  %sub = sub nsw i64 %80, %82, !dbg !17807
  store i64 %sub, i64* %adiff, align 8, !dbg !17803
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !17808, metadata !DIExpression()), !dbg !17809
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !17810, !ctir !17551
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17810, !ctir !1075
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !17810, !ctir !368
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17811
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !17811, !ctir !1087
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !17812, !ctir !1081
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !17812, !ctir !368
  %sub138 = sub nsw i64 %83, %85, !dbg !17813
  store i64 %sub138, i64* %mdiff, align 8, !dbg !17809
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !17814, metadata !DIExpression()), !dbg !17815
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !17815
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !17816, metadata !DIExpression()), !dbg !17817
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17818, !ctir !1080
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17819
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !17819, !ctir !1087
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !17819
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !17819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !17819
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !17820, !ctir !1080
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17821
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !17821, !ctir !1087
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !17821
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !17821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !17821
  %92 = load i8, i8* %abig, align 1, !dbg !17822
  %tobool143 = trunc i8 %92 to i1, !dbg !17822
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !17824

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !17825
  %cmp146 = icmp eq i64 %93, 1, !dbg !17826
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !17827

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !17828
  %cmp150 = icmp eq i64 %call149, 0, !dbg !17829
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !17830

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17831, !ctir !1080
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !17833
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17834
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !17834, !ctir !1087
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !17835, !ctir !1081
  store i64 0, i64* %tv_usec155, align 8, !dbg !17836, !ctir !1086
  br label %if.end156, !dbg !17837

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !17838
  %tobool157 = trunc i8 %95 to i1, !dbg !17838
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !17840

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !17841
  %cmp160 = icmp eq i64 %96, 1, !dbg !17842
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !17843

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !17844
  %cmp164 = icmp eq i64 %call163, 0, !dbg !17845
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !17846

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17847, !ctir !1080
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !17849
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17850
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !17850, !ctir !1087
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !17851, !ctir !1081
  store i64 0, i64* %tv_usec169, align 8, !dbg !17852, !ctir !1086
  br label %if.end170, !dbg !17853

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17854
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !17854
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !17856

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !17857
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17857
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #9, !dbg !17857
  br label %if.end174, !dbg !17857

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !17858

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !17859

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !17860
  br label %return, !dbg !17860

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !17861
  %tobool179 = icmp ne i8* %101, null, !dbg !17861
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !17863

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !17864
  br label %return, !dbg !17864

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !17866
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17867
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #9, !dbg !17868
  store i32 %call182, i32* %retval, align 4, !dbg !17869
  br label %return, !dbg !17869

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !17870
  ret i32 %104, !dbg !17870
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !17871 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17874, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17876, metadata !DIExpression()), !dbg !17877
  store i32 0, i32* %result, align 4, !dbg !17877
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !17878, metadata !DIExpression()), !dbg !17879
  store i32 0, i32* %utime_omit_count, align 4, !dbg !17879
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17880
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !17880, !ctir !1079
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17882, !ctir !1075
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17882, !ctir !370
  %cmp = icmp ne i64 %1, 1073741823, !dbg !17883
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17884

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17885
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17885, !ctir !1079
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17886, !ctir !1075
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !17886, !ctir !370
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !17887
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !17888

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17889
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !17889, !ctir !1079
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !17890, !ctir !1075
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !17890, !ctir !370
  %cmp7 = icmp sle i64 0, %5, !dbg !17891
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !17892

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17893
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17893, !ctir !1079
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !17894, !ctir !1075
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !17894, !ctir !370
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !17895
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !17896

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17897
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17897, !ctir !1079
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !17898, !ctir !1075
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !17898, !ctir !370
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !17899
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !17900

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17901
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !17901, !ctir !1079
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !17902, !ctir !1075
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !17902, !ctir !370
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !17903
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !17904

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17905
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !17905, !ctir !1079
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17906, !ctir !1075
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !17906, !ctir !370
  %cmp22 = icmp sle i64 0, %13, !dbg !17907
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !17908

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17909
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !17909, !ctir !1079
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !17910, !ctir !1075
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !17910, !ctir !370
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !17911
  br i1 %cmp26, label %if.end, label %if.then, !dbg !17912

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #16, !dbg !17913
  store i32 22, i32* %call, align 4, !dbg !17915, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17916
  br label %return, !dbg !17916

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17917
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !17917, !ctir !1079
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !17919, !ctir !1075
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !17919, !ctir !370
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !17920
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !17921

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17922
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !17922, !ctir !1079
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !17923, !ctir !1075
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !17923, !ctir !370
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !17924
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !17925

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17926
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !17926, !ctir !1079
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !17928, !ctir !1075
  store i64 0, i64* %tv_sec, align 8, !dbg !17929, !ctir !368
  store i32 1, i32* %result, align 4, !dbg !17930
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17931
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !17931, !ctir !1079
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !17933, !ctir !1075
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !17933, !ctir !370
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !17934
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17935

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !17936
  %inc = add nsw i32 %23, 1, !dbg !17936
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !17936
  br label %if.end40, !dbg !17937

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !17938

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17939
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !17939, !ctir !1079
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !17941, !ctir !1075
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !17941, !ctir !370
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !17942
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !17943

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17944
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !17944, !ctir !1079
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !17945, !ctir !1075
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !17945, !ctir !370
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !17946
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !17947

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17948
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !17948, !ctir !1079
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !17950, !ctir !1075
  store i64 0, i64* %tv_sec51, align 8, !dbg !17951, !ctir !368
  store i32 1, i32* %result, align 4, !dbg !17952
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17953
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17953, !ctir !1079
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !17955, !ctir !1075
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !17955, !ctir !370
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !17956
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !17957

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !17958
  %inc56 = add nsw i32 %31, 1, !dbg !17958
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !17958
  br label %if.end57, !dbg !17959

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !17960

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !17961
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !17962
  %cmp59 = icmp eq i32 %33, 1, !dbg !17963
  %conv = zext i1 %cmp59 to i32, !dbg !17963
  %add = add nsw i32 %32, %conv, !dbg !17964
  store i32 %add, i32* %retval, align 4, !dbg !17965
  br label %return, !dbg !17965

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17966
  ret i32 %34, !dbg !17966
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !17967 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1079
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !17973, metadata !DIExpression()), !dbg !17974
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !17975, metadata !DIExpression()), !dbg !17976
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !17977, metadata !DIExpression()), !dbg !17978
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17979
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !17980, !ctir !1079
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !17978
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17981
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17981, !ctir !1079
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17983, !ctir !1075
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !17983, !ctir !370
  %cmp = icmp eq i64 %3, 1073741822, !dbg !17984
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17985

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17986
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !17986, !ctir !1079
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17987, !ctir !1075
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !17987, !ctir !370
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !17988
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17989

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17990
  br label %return, !dbg !17990

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17991
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17991, !ctir !1079
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !17993, !ctir !1075
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !17993, !ctir !370
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !17994
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !17995

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17996
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17996, !ctir !1079
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !17997, !ctir !1075
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !17997, !ctir !370
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !17998
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17999

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18000
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !18002, !ctir !1079
  store i1 false, i1* %retval, align 1, !dbg !18003
  br label %return, !dbg !18003

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18004
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !18004, !ctir !1079
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !18006, !ctir !1075
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !18006, !ctir !370
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !18007
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !18008

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18009
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18009, !ctir !1079
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18010
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !18011
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18011
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !18011
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !18011
  store i64 %17, i64* %16, align 8, !dbg !18011
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !18011
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !18011
  store i64 %19, i64* %18, align 8, !dbg !18011
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !18011
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !18011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !18011
  br label %if.end24, !dbg !18009

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18012
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !18012, !ctir !1079
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !18014, !ctir !1075
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !18014, !ctir !370
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !18015
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !18016

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18017
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !18017, !ctir !1079
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !18018
  br label %if.end23, !dbg !18018

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18019
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18019, !ctir !1079
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !18021, !ctir !1075
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !18021, !ctir !370
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !18022
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !18023

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18024
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !18024, !ctir !1079
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18025
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !18026
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !18026
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !18026
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !18026
  store i64 %31, i64* %30, align 8, !dbg !18026
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !18026
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !18026
  store i64 %33, i64* %32, align 8, !dbg !18026
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !18026
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !18026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !18026
  br label %if.end39, !dbg !18024

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18027
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !18027, !ctir !1079
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !18029, !ctir !1075
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !18029, !ctir !370
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !18030
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !18031

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18032
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !18032, !ctir !1079
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !18033
  br label %if.end38, !dbg !18033

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !18034
  br label %return, !dbg !18034

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !18035
  ret i1 %39, !dbg !18035
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18036 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18039, metadata !DIExpression()), !dbg !18040
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18041, metadata !DIExpression()), !dbg !18042
  %0 = load i8*, i8** %file.addr, align 8, !dbg !18043
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18044
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !18045
  ret i32 %call, !dbg !18046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18047 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1074
  %ts = alloca %struct.timespec*, align 8, !ctir !1079
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !17551
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18048, metadata !DIExpression()), !dbg !18049
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18050, metadata !DIExpression()), !dbg !18051
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !18052, metadata !DIExpression()), !dbg !18053
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !18054, metadata !DIExpression()), !dbg !18055
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18056
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !18056
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18056

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18057, !ctir !1074
  br label %cond.end, !dbg !18056

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18056

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !18056
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !18055
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !18058, metadata !DIExpression()), !dbg !18059
  store i32 0, i32* %adjustment_needed, align 4, !dbg !18059
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !18060, metadata !DIExpression()), !dbg !18061
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18062
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !18062
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18064

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18065, !ctir !1074
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18067
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18067, !ctir !17537
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !18067
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !18067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !18067
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !18068, !ctir !1074
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18069
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !18069, !ctir !17537
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !18069
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !18069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !18069
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18070
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !18071
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !18072
  br label %if.end, !dbg !18073

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !18074
  %cmp = icmp slt i32 %9, 0, !dbg !18076
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18077

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18078
  br label %return, !dbg !18078

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !18079
  %cmp7 = icmp sle i32 0, %10, !dbg !18081
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !18082

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18083, metadata !DIExpression()), !dbg !18085
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !18086
  %cmp9 = icmp eq i32 %11, 2, !dbg !18088
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !18089

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !18090
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #9, !dbg !18093
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18093
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18094

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !18095
  br label %return, !dbg !18095

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18096
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18096, !ctir !1079
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !18098, !ctir !1075
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !18098, !ctir !370
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !18099
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !18100

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18101
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !18101, !ctir !1079
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !18102
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18102
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !18102
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !18102
  store i64 %18, i64* %17, align 8, !dbg !18102
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !18102
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !18102
  store i64 %20, i64* %19, align 8, !dbg !18102
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !18102
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !18102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !18102
  br label %if.end28, !dbg !18101

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18103
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !18103, !ctir !1079
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18105, !ctir !1075
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !18105, !ctir !370
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !18106
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !18107

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18108
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18108, !ctir !1079
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18109
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !18109
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !18109
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !18109
  store i64 %28, i64* %27, align 8, !dbg !18109
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !18109
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !18109
  store i64 %30, i64* %29, align 8, !dbg !18109
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !18109
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !18109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !18109
  br label %if.end27, !dbg !18108

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !18110
  %inc = add nsw i32 %33, 1, !dbg !18110
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18110
  br label %if.end29, !dbg !18111

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !18112
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18113
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #9, !dbg !18114
  store i32 %call30, i32* %result, align 4, !dbg !18115
  %36 = load i32, i32* %result, align 4, !dbg !18116
  %cmp31 = icmp slt i32 0, %36, !dbg !18118
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18119

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #16, !dbg !18120
  store i32 38, i32* %call33, align 4, !dbg !18121, !ctir !7
  br label %if.end34, !dbg !18120

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !18122
  %cmp35 = icmp eq i32 %37, 0, !dbg !18124
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !18125

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #16, !dbg !18126
  %38 = load i32, i32* %call36, align 4, !dbg !18126, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !18127
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !18128

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18129
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !18131
  %39 = load i32, i32* %result, align 4, !dbg !18132
  store i32 %39, i32* %retval, align 4, !dbg !18133
  br label %return, !dbg !18133

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !18134

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18135
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !18136
  %tobool41 = icmp ne i32 %40, 0, !dbg !18136
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !18138

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !18139
  %cmp43 = icmp ne i32 %41, 3, !dbg !18142
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !18143

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !18144
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #9, !dbg !18145
  %tobool45 = icmp ne i32 %call44, 0, !dbg !18145
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !18146

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !18147
  br label %return, !dbg !18147

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18148
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !18148
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !18150

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18151
  br i1 %call50, label %if.then51, label %if.end52, !dbg !18152

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !18153
  br label %return, !dbg !18153

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !18154

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !18155
  %tobool54 = icmp ne i32 %44, 0, !dbg !18155
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !18157

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !18158
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #9, !dbg !18159
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18159
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !18160

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !18161
  br label %return, !dbg !18161

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !18162, !ctir !17551
  %46 = load i32, i32* %st_mode, align 8, !dbg !18162, !ctir !140
  %and = and i32 %46, 61440, !dbg !18162
  %cmp60 = icmp eq i32 %and, 40960, !dbg !18162
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !18164

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !18165
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18166
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !18167
  store i32 %call62, i32* %retval, align 4, !dbg !18168
  br label %return, !dbg !18168

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #16, !dbg !18169
  store i32 38, i32* %call64, align 4, !dbg !18170, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18171
  br label %return, !dbg !18171

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !18172
  ret i32 %49, !dbg !18172
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18173 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18186, metadata !DIExpression()), !dbg !18187
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18188, metadata !DIExpression()), !dbg !18189
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18190, metadata !DIExpression()), !dbg !18191
  %0 = load i32, i32* %status.addr, align 4, !dbg !18192
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !18193
  %2 = load i8*, i8** %format.addr, align 8, !dbg !18194
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18195
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !18196
  ret void, !dbg !18197
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18198 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18201, metadata !DIExpression()), !dbg !18202
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18203, metadata !DIExpression()), !dbg !18204
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18205, metadata !DIExpression()), !dbg !18206
  store i32 %line_number, i32* %line_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !18207, metadata !DIExpression()), !dbg !18208
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18209, metadata !DIExpression()), !dbg !18210
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18211, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.declare(metadata i8** %message, metadata !18213, metadata !DIExpression()), !dbg !18214
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18215
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18216
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !18217
  store i8* %call, i8** %message, align 8, !dbg !18214
  %2 = load i8*, i8** %message, align 8, !dbg !18218
  %tobool = icmp ne i8* %2, null, !dbg !18218
  br i1 %tobool, label %if.then, label %if.else3, !dbg !18220

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !18221
  %tobool1 = icmp ne i8* %3, null, !dbg !18221
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !18224

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !18225
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !18226
  %6 = load i8*, i8** %file.addr, align 8, !dbg !18227
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !18228
  %8 = load i8*, i8** %message, align 8, !dbg !18229
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %8), !dbg !18230
  br label %if.end, !dbg !18230

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !18231
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !18232
  %11 = load i8*, i8** %message, align 8, !dbg !18233
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %11), !dbg !18234
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !18235

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !18236
  %12 = load i32, i32* %call4, align 4, !dbg !18236, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.414, i64 0, i64 0)) #9, !dbg !18238
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !18239
  call void @abort() #13, !dbg !18240
  unreachable, !dbg !18240

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !18241
  call void @free(i8* %13) #9, !dbg !18242
  ret void, !dbg !18243
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !18244 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18248, metadata !DIExpression()), !dbg !18249
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18250, metadata !DIExpression()), !dbg !18251
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18252, metadata !DIExpression()), !dbg !18253
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18254, metadata !DIExpression()), !dbg !18255
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18256, metadata !DIExpression()), !dbg !18257
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18258, metadata !DIExpression()), !dbg !18259
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18260
  %tobool = icmp ne i8* %0, null, !dbg !18260
  br i1 %tobool, label %if.then, label %if.else, !dbg !18262

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18263
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18264
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18265
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18266
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.415, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18267
  br label %if.end, !dbg !18267

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18268
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18269
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18270
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.416, i64 0, i64 0), i8* %6, i8* %7), !dbg !18271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18272
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.417, i64 0, i64 0)) #9, !dbg !18273
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18274
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.418, i64 0, i64 0)) #9, !dbg !18275
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18275
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !18275
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !18276
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !18277

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18278

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18280
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.419, i64 0, i64 0)) #9, !dbg !18281
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !18282
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !18282, !ctir !1115
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !18282
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !18283
  br label %sw.epilog, !dbg !18284

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18285
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.420, i64 0, i64 0)) #9, !dbg !18286
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !18287
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !18287, !ctir !1115
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !18287
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18288
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !18288, !ctir !1115
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !18288
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !18289
  br label %sw.epilog, !dbg !18290

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18291
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.421, i64 0, i64 0)) #9, !dbg !18292
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !18293
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !18293, !ctir !1115
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !18293
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18294
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !18294, !ctir !1115
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !18294
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18295
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !18295, !ctir !1115
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !18295
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !18296
  br label %sw.epilog, !dbg !18297

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18298
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.422, i64 0, i64 0)) #9, !dbg !18299
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !18300
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !18300, !ctir !1115
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !18300
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18301
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !18301, !ctir !1115
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !18301
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18302
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !18302, !ctir !1115
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !18302
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18303
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !18303, !ctir !1115
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !18303
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !18304
  br label %sw.epilog, !dbg !18305

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18306
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.423, i64 0, i64 0)) #9, !dbg !18307
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !18308
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !18308, !ctir !1115
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !18308
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18309
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !18309, !ctir !1115
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !18309
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18310
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !18310, !ctir !1115
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !18310
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18311
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !18311, !ctir !1115
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !18311
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18312
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !18312, !ctir !1115
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !18312
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !18313
  br label %sw.epilog, !dbg !18314

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18315
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.424, i64 0, i64 0)) #9, !dbg !18316
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !18317
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !18317, !ctir !1115
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !18317
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18318
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !18318, !ctir !1115
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !18318
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18319
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !18319, !ctir !1115
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !18319
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18320
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !18320, !ctir !1115
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !18320
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18321
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !18321, !ctir !1115
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !18321
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18322
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !18322, !ctir !1115
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !18322
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !18323
  br label %sw.epilog, !dbg !18324

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18325
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.425, i64 0, i64 0)) #9, !dbg !18326
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !18327
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !18327, !ctir !1115
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !18327
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18328
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !18328, !ctir !1115
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !18328
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18329
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !18329, !ctir !1115
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !18329
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18330
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !18330, !ctir !1115
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !18330
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18331
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !18331, !ctir !1115
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !18331
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18332
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !18332, !ctir !1115
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !18332
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18333
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !18333, !ctir !1115
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !18333
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !18334
  br label %sw.epilog, !dbg !18335

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18336
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.426, i64 0, i64 0)) #9, !dbg !18337
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !18338
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !18338, !ctir !1115
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !18338
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18339
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !18339, !ctir !1115
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !18339
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18340
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !18340, !ctir !1115
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !18340
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18341
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !18341, !ctir !1115
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !18341
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18342
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !18342, !ctir !1115
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !18342
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18343
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !18343, !ctir !1115
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !18343
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18344
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !18344, !ctir !1115
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !18344
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18345
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !18345, !ctir !1115
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !18345
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !18346
  br label %sw.epilog, !dbg !18347

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18348
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.427, i64 0, i64 0)) #9, !dbg !18349
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !18350
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !18350, !ctir !1115
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !18350
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18351
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !18351, !ctir !1115
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !18351
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18352
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !18352, !ctir !1115
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !18352
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18353
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !18353, !ctir !1115
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !18353
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18354
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !18354, !ctir !1115
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !18354
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18355
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !18355, !ctir !1115
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !18355
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18356
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !18356, !ctir !1115
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !18356
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18357
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !18357, !ctir !1115
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !18357
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18358
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !18358, !ctir !1115
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !18358
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !18359
  br label %sw.epilog, !dbg !18360

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18361
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.428, i64 0, i64 0)) #9, !dbg !18362
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !18363
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !18363, !ctir !1115
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !18363
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18364
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !18364, !ctir !1115
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !18364
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18365
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !18365, !ctir !1115
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !18365
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18366
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !18366, !ctir !1115
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !18366
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18367
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !18367, !ctir !1115
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !18367
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18368
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !18368, !ctir !1115
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !18368
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18369
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !18369, !ctir !1115
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !18369
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18370
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !18370, !ctir !1115
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !18370
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18371
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !18371, !ctir !1115
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !18371
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !18372
  br label %sw.epilog, !dbg !18373

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !18374
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !18375 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18378, metadata !DIExpression()), !dbg !18379
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18380, metadata !DIExpression()), !dbg !18381
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18382, metadata !DIExpression()), !dbg !18383
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18384, metadata !DIExpression()), !dbg !18385
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18386, metadata !DIExpression()), !dbg !18387
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18388, metadata !DIExpression()), !dbg !18389
  store i64 0, i64* %n_authors, align 8, !dbg !18390
  br label %for.cond, !dbg !18392

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18393
  %1 = load i64, i64* %n_authors, align 8, !dbg !18395
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18393, !ctir !1115
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18393
  %tobool = icmp ne i8* %2, null, !dbg !18396
  br i1 %tobool, label %for.body, label %for.end, !dbg !18396

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18396

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18397
  %inc = add i64 %3, 1, !dbg !18397
  store i64 %inc, i64* %n_authors, align 8, !dbg !18397
  br label %for.cond, !dbg !18398, !llvm.loop !18399

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18401
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18402
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18403
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18404
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18405
  %9 = load i64, i64* %n_authors, align 8, !dbg !18406
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18407
  ret void, !dbg !18408
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !18409 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !1419
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18413, metadata !DIExpression()), !dbg !18414
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18415, metadata !DIExpression()), !dbg !18416
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18417, metadata !DIExpression()), !dbg !18418
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18419, metadata !DIExpression()), !dbg !18420
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18421, metadata !DIExpression()), !dbg !18422
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18423, metadata !DIExpression()), !dbg !18424
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18425, metadata !DIExpression()), !dbg !18426
  store i64 0, i64* %n_authors, align 8, !dbg !18427
  br label %for.cond, !dbg !18429

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18430
  %cmp = icmp ult i64 %0, 10, !dbg !18432
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18433

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18434
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18434
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18434
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18434
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18434

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18434
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18434
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18434
  %4 = bitcast i8* %3 to i8**, !dbg !18434
  %5 = add i32 %gp_offset, 8, !dbg !18434
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18434
  br label %vaarg.end, !dbg !18434

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18434
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18434
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18434
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18434
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18434
  br label %vaarg.end, !dbg !18434

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18434
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18434
  %8 = load i64, i64* %n_authors, align 8, !dbg !18435
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18436, !ctir !1419
  store i8* %7, i8** %arrayidx, align 8, !dbg !18437
  %cmp1 = icmp ne i8* %7, null, !dbg !18438
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18439
  br i1 %9, label %for.body, label %for.end, !dbg !18440

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18440

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18441
  %inc = add i64 %10, 1, !dbg !18441
  store i64 %inc, i64* %n_authors, align 8, !dbg !18441
  br label %for.cond, !dbg !18442, !llvm.loop !18443

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18445
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !18446
  %13 = load i8*, i8** %package.addr, align 8, !dbg !18447
  %14 = load i8*, i8** %version.addr, align 8, !dbg !18448
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !18449, !ctir !1419
  %15 = load i64, i64* %n_authors, align 8, !dbg !18450
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !18451
  ret void, !dbg !18452
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !18453 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1420
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18456, metadata !DIExpression()), !dbg !18457
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18458, metadata !DIExpression()), !dbg !18459
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18460, metadata !DIExpression()), !dbg !18461
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18462, metadata !DIExpression()), !dbg !18463
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !18464, metadata !DIExpression()), !dbg !18465
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18466, !ctir !1420
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18466
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18466
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18467
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !18468
  %2 = load i8*, i8** %package.addr, align 8, !dbg !18469
  %3 = load i8*, i8** %version.addr, align 8, !dbg !18470
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18471, !ctir !1420
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !18472
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18473, !ctir !1420
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18473
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18473
  ret void, !dbg !18474
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !18475 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.431, i64 0, i64 0)) #9, !dbg !18476
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.432, i64 0, i64 0)), !dbg !18477
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.433, i64 0, i64 0)) #9, !dbg !18478
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.434, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.435, i64 0, i64 0)), !dbg !18479
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.436, i64 0, i64 0)) #9, !dbg !18480
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18480
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !18480
  ret void, !dbg !18481
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1101 {
entry:
  %can = alloca i8, align 1, !ctir !142
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !18482
  %tobool = trunc i8 %0 to i1, !dbg !18482
  br i1 %tobool, label %if.end, label %if.then, !dbg !18484

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !18485, metadata !DIExpression()), !dbg !18487
  store i8 0, i8* %can, align 1, !dbg !18487
  %call = call i32 @geteuid() #9, !dbg !18488
  %cmp = icmp eq i32 %call, 0, !dbg !18489
  %frombool = zext i1 %cmp to i8, !dbg !18490
  store i8 %frombool, i8* %can, align 1, !dbg !18490
  %1 = load i8, i8* %can, align 1, !dbg !18491
  %tobool1 = trunc i8 %1 to i1, !dbg !18491
  %frombool2 = zext i1 %tobool1 to i8, !dbg !18492
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !18492
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !18493
  br label %if.end, !dbg !18494

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !18495
  %tobool3 = trunc i8 %2 to i1, !dbg !18495
  ret i1 %tobool3, !dbg !18496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !18497 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18501, metadata !DIExpression()), !dbg !18502
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18503, metadata !DIExpression()), !dbg !18504
  %0 = load i64, i64* %s.addr, align 8, !dbg !18505
  %div = udiv i64 9223372036854775807, %0, !dbg !18505
  %1 = load i64, i64* %n.addr, align 8, !dbg !18505
  %cmp = icmp ult i64 %div, %1, !dbg !18505
  br i1 %cmp, label %if.then, label %if.end, !dbg !18507

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18508
  unreachable, !dbg !18508

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18509
  %3 = load i64, i64* %s.addr, align 8, !dbg !18510
  %mul = mul i64 %2, %3, !dbg !18511
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !18512
  ret i8* %call, !dbg !18513
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !18514 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18518, metadata !DIExpression()), !dbg !18519
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18520, metadata !DIExpression()), !dbg !18521
  %0 = load i64, i64* %n.addr, align 8, !dbg !18522
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !18523
  store i8* %call, i8** %p, align 8, !dbg !18521
  %1 = load i8*, i8** %p, align 8, !dbg !18524
  %tobool = icmp ne i8* %1, null, !dbg !18524
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18526

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18527
  %cmp = icmp ne i64 %2, 0, !dbg !18528
  br i1 %cmp, label %if.then, label %if.end, !dbg !18529

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !18530
  unreachable, !dbg !18530

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !18531
  ret i8* %3, !dbg !18532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !18533 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18536, metadata !DIExpression()), !dbg !18537
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18538, metadata !DIExpression()), !dbg !18539
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18540, metadata !DIExpression()), !dbg !18541
  %0 = load i64, i64* %s.addr, align 8, !dbg !18542
  %div = udiv i64 9223372036854775807, %0, !dbg !18542
  %1 = load i64, i64* %n.addr, align 8, !dbg !18542
  %cmp = icmp ult i64 %div, %1, !dbg !18542
  br i1 %cmp, label %if.then, label %if.end, !dbg !18544

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18545
  unreachable, !dbg !18545

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18546
  %3 = load i64, i64* %n.addr, align 8, !dbg !18547
  %4 = load i64, i64* %s.addr, align 8, !dbg !18548
  %mul = mul i64 %3, %4, !dbg !18549
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !18550
  ret i8* %call, !dbg !18551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !18552 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18557, metadata !DIExpression()), !dbg !18558
  %0 = load i64, i64* %n.addr, align 8, !dbg !18559
  %tobool = icmp ne i64 %0, 0, !dbg !18559
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18561

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18562
  %tobool1 = icmp ne i8* %1, null, !dbg !18562
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18563

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18564
  call void @free(i8* %2) #9, !dbg !18566
  store i8* null, i8** %retval, align 8, !dbg !18567
  br label %return, !dbg !18567

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !18568
  %4 = load i64, i64* %n.addr, align 8, !dbg !18569
  %call = call i8* @realloc(i8* %3, i64 %4) #9, !dbg !18570
  store i8* %call, i8** %p.addr, align 8, !dbg !18571
  %5 = load i8*, i8** %p.addr, align 8, !dbg !18572
  %tobool2 = icmp ne i8* %5, null, !dbg !18572
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !18574

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18575
  %tobool4 = icmp ne i64 %6, 0, !dbg !18575
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18576

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !18577
  unreachable, !dbg !18577

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !18578
  store i8* %7, i8** %retval, align 8, !dbg !18579
  br label %return, !dbg !18579

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !18580
  ret i8* %8, !dbg !18580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !18581 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18584, metadata !DIExpression()), !dbg !18585
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18586, metadata !DIExpression()), !dbg !18587
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18588, metadata !DIExpression()), !dbg !18589
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18590, metadata !DIExpression()), !dbg !18591
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !18592
  %1 = load i64, i64* %0, align 8, !dbg !18593, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !18591
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18594
  %tobool = icmp ne i8* %2, null, !dbg !18594
  br i1 %tobool, label %if.else, label %if.then, !dbg !18596

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !18597
  %tobool1 = icmp ne i64 %3, 0, !dbg !18597
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !18600

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !18601
  %div = udiv i64 128, %4, !dbg !18603
  store i64 %div, i64* %n, align 8, !dbg !18604
  %5 = load i64, i64* %n, align 8, !dbg !18605
  %tobool3 = icmp ne i64 %5, 0, !dbg !18606
  %lnot = xor i1 %tobool3, true, !dbg !18606
  %lnot.ext = zext i1 %lnot to i32, !dbg !18606
  %conv = sext i32 %lnot.ext to i64, !dbg !18606
  %6 = load i64, i64* %n, align 8, !dbg !18607
  %add = add i64 %6, %conv, !dbg !18607
  store i64 %add, i64* %n, align 8, !dbg !18607
  br label %if.end, !dbg !18608

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18609
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18609
  %8 = load i64, i64* %n, align 8, !dbg !18609
  %cmp = icmp ult i64 %div4, %8, !dbg !18609
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18611

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !18612
  unreachable, !dbg !18612

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18613

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18614
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18617
  %10 = load i64, i64* %n, align 8, !dbg !18618
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18619
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18620

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !18621
  unreachable, !dbg !18621

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18622
  %div13 = udiv i64 %11, 2, !dbg !18623
  %add14 = add i64 %div13, 1, !dbg !18624
  %12 = load i64, i64* %n, align 8, !dbg !18625
  %add15 = add i64 %12, %add14, !dbg !18625
  store i64 %add15, i64* %n, align 8, !dbg !18625
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18626
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18627
  store i64 %13, i64* %14, align 8, !dbg !18628, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18629
  %16 = load i64, i64* %n, align 8, !dbg !18630
  %17 = load i64, i64* %s.addr, align 8, !dbg !18631
  %mul = mul i64 %16, %17, !dbg !18632
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18633
  ret i8* %call, !dbg !18634
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18635 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18638, metadata !DIExpression()), !dbg !18639
  %0 = load i64, i64* %n.addr, align 8, !dbg !18640
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18640
  ret i8* %call, !dbg !18641
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18642 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18645, metadata !DIExpression()), !dbg !18646
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18647, metadata !DIExpression()), !dbg !18648
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18649
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18650
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18651
  ret i8* %call, !dbg !18652
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18653 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18654, metadata !DIExpression()), !dbg !18655
  %0 = load i64, i64* %s.addr, align 8, !dbg !18656
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18657
  %1 = load i64, i64* %s.addr, align 8, !dbg !18658
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18659
  ret i8* %call, !dbg !18660
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18661 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18662, metadata !DIExpression()), !dbg !18663
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18664, metadata !DIExpression()), !dbg !18665
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18666, metadata !DIExpression()), !dbg !18667
  %0 = load i64, i64* %s.addr, align 8, !dbg !18668
  %div = udiv i64 9223372036854775807, %0, !dbg !18668
  %1 = load i64, i64* %n.addr, align 8, !dbg !18668
  %cmp = icmp ult i64 %div, %1, !dbg !18668
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18670

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18671
  %3 = load i64, i64* %s.addr, align 8, !dbg !18672
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #9, !dbg !18673
  store i8* %call, i8** %p, align 8, !dbg !18674
  %tobool = icmp ne i8* %call, null, !dbg !18674
  br i1 %tobool, label %if.end, label %if.then, !dbg !18675

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !18676
  unreachable, !dbg !18676

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !18677
  ret i8* %4, !dbg !18678
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !18679 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18680, metadata !DIExpression()), !dbg !18681
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18682, metadata !DIExpression()), !dbg !18683
  %0 = load i64, i64* %s.addr, align 8, !dbg !18684
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18685
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18686
  %2 = load i64, i64* %s.addr, align 8, !dbg !18687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !18688
  ret i8* %call, !dbg !18689
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !18690 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !18691, metadata !DIExpression()), !dbg !18692
  %0 = load i8*, i8** %string.addr, align 8, !dbg !18693
  %1 = load i8*, i8** %string.addr, align 8, !dbg !18694
  %call = call i64 @strlen(i8* %1) #14, !dbg !18695
  %add = add i64 %call, 1, !dbg !18696
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18697
  ret i8* %call1, !dbg !18698
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18699 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18701
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.459, i64 0, i64 0)) #9, !dbg !18702
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.460, i64 0, i64 0), i8* %call), !dbg !18703
  call void @abort() #13, !dbg !18704
  unreachable, !dbg !18704
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18705 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !9
  %p = alloca i8**, align 8, !ctir !209
  %tmp = alloca i64, align 8, !ctir !57
  %err = alloca i32, align 4, !ctir !1485
  %q = alloca i8*, align 8, !ctir !183
  %ch = alloca i8, align 1, !ctir !573
  %base = alloca i32, align 4, !ctir !7
  %suffixes = alloca i32, align 4, !ctir !7
  %overflow = alloca i32, align 4, !ctir !1485
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18710, metadata !DIExpression()), !dbg !18711
  store i8** %ptr, i8*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18712, metadata !DIExpression()), !dbg !18713
  store i32 %strtol_base, i32* %strtol_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18714, metadata !DIExpression()), !dbg !18715
  store i64* %val, i64** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18716, metadata !DIExpression()), !dbg !18717
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18718, metadata !DIExpression()), !dbg !18719
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18720, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18722, metadata !DIExpression()), !dbg !18723
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18724, metadata !DIExpression()), !dbg !18725
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18726, metadata !DIExpression()), !dbg !18727
  store i32 0, i32* %err, align 4, !dbg !18727
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18728
  %cmp = icmp sle i32 0, %0, !dbg !18728
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !18728

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18728
  %cmp1 = icmp sle i32 %1, 36, !dbg !18728
  br i1 %cmp1, label %if.then, label %if.else, !dbg !18731

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !18731

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.463, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.464, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !18728
  unreachable, !dbg !18728

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !18732
  %tobool = icmp ne i8** %2, null, !dbg !18732
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18732

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18733
  br label %cond.end, !dbg !18732

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18732

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !18732
  store i8** %cond, i8*** %p, align 8, !dbg !18734
  %call = call i32* @__errno_location() #16, !dbg !18735
  store i32 0, i32* %call, align 4, !dbg !18736, !ctir !7
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18737, metadata !DIExpression()), !dbg !18740
  %4 = load i8*, i8** %s.addr, align 8, !dbg !18741
  store i8* %4, i8** %q, align 8, !dbg !18740
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18742, metadata !DIExpression()), !dbg !18743
  %5 = load i8*, i8** %q, align 8, !dbg !18744
  %6 = load i8, i8* %5, align 1, !dbg !18745, !ctir !184
  store i8 %6, i8* %ch, align 1, !dbg !18743
  br label %while.cond, !dbg !18746

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #16, !dbg !18747
  %7 = load i16*, i16** %call2, align 8, !dbg !18747, !ctir !930
  %8 = load i8, i8* %ch, align 1, !dbg !18747
  %conv = zext i8 %8 to i32, !dbg !18747
  %idxprom = sext i32 %conv to i64, !dbg !18747
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !18747, !ctir !930
  %9 = load i16, i16* %arrayidx, align 2, !dbg !18747
  %conv3 = zext i16 %9 to i32, !dbg !18747
  %and = and i32 %conv3, 8192, !dbg !18747
  %tobool4 = icmp ne i32 %and, 0, !dbg !18746
  br i1 %tobool4, label %while.body, label %while.end, !dbg !18746

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !18748
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !18748, !ctir !184
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18748
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !18749, !ctir !184
  store i8 %11, i8* %ch, align 1, !dbg !18750
  br label %while.cond, !dbg !18746, !llvm.loop !18751

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !18753
  %conv5 = zext i8 %12 to i32, !dbg !18753
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !18755
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !18756

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18757
  br label %return, !dbg !18757

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !18758
  %14 = load i8**, i8*** %p, align 8, !dbg !18759
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !18760
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #9, !dbg !18761
  store i64 %call10, i64* %tmp, align 8, !dbg !18762
  %16 = load i8**, i8*** %p, align 8, !dbg !18763
  %17 = load i8*, i8** %16, align 8, !dbg !18765, !ctir !9
  %18 = load i8*, i8** %s.addr, align 8, !dbg !18766
  %cmp11 = icmp eq i8* %17, %18, !dbg !18767
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !18768

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18769
  %tobool14 = icmp ne i8* %19, null, !dbg !18769
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !18772

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !18773
  %21 = load i8*, i8** %20, align 8, !dbg !18774, !ctir !9
  %22 = load i8, i8* %21, align 1, !dbg !18775, !ctir !10
  %conv16 = sext i8 %22 to i32, !dbg !18775
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !18775
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !18776

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18777
  %24 = load i8**, i8*** %p, align 8, !dbg !18778
  %25 = load i8*, i8** %24, align 8, !dbg !18779, !ctir !9
  %26 = load i8, i8* %25, align 1, !dbg !18780, !ctir !10
  %conv19 = sext i8 %26 to i32, !dbg !18780
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #14, !dbg !18781
  %tobool21 = icmp ne i8* %call20, null, !dbg !18781
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !18782

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !18783
  br label %if.end24, !dbg !18784

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !18785
  br label %return, !dbg !18785

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !18786

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #16, !dbg !18787
  %27 = load i32, i32* %call26, align 4, !dbg !18787, !ctir !7
  %cmp27 = icmp ne i32 %27, 0, !dbg !18789
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18790

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18791
  %28 = load i32, i32* %call30, align 4, !dbg !18791, !ctir !7
  %cmp31 = icmp ne i32 %28, 34, !dbg !18794
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18795

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18796
  br label %return, !dbg !18796

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18797
  br label %if.end35, !dbg !18798

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18799
  %tobool37 = icmp ne i8* %29, null, !dbg !18799
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18801

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !18802
  %31 = load i64*, i64** %val.addr, align 8, !dbg !18804
  store i64 %30, i64* %31, align 8, !dbg !18805, !ctir !57
  %32 = load i32, i32* %err, align 4, !dbg !18806
  store i32 %32, i32* %retval, align 4, !dbg !18807
  br label %return, !dbg !18807

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !18808
  %34 = load i8*, i8** %33, align 8, !dbg !18810, !ctir !9
  %35 = load i8, i8* %34, align 1, !dbg !18811, !ctir !10
  %conv40 = sext i8 %35 to i32, !dbg !18811
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18812
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18813

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18814, metadata !DIExpression()), !dbg !18816
  store i32 1024, i32* %base, align 4, !dbg !18816
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18817, metadata !DIExpression()), !dbg !18818
  store i32 1, i32* %suffixes, align 4, !dbg !18818
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18819, metadata !DIExpression()), !dbg !18820
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18821
  %37 = load i8**, i8*** %p, align 8, !dbg !18823
  %38 = load i8*, i8** %37, align 8, !dbg !18824, !ctir !9
  %39 = load i8, i8* %38, align 1, !dbg !18825, !ctir !10
  %conv44 = sext i8 %39 to i32, !dbg !18825
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #14, !dbg !18826
  %tobool46 = icmp ne i8* %call45, null, !dbg !18826
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18827

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !18828
  %41 = load i64*, i64** %val.addr, align 8, !dbg !18830
  store i64 %40, i64* %41, align 8, !dbg !18831, !ctir !57
  %42 = load i32, i32* %err, align 4, !dbg !18832
  %or = or i32 %42, 2, !dbg !18833
  store i32 %or, i32* %retval, align 4, !dbg !18834
  br label %return, !dbg !18834

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !18835
  %44 = load i8*, i8** %43, align 8, !dbg !18836, !ctir !9
  %45 = load i8, i8* %44, align 1, !dbg !18837, !ctir !10
  %conv49 = sext i8 %45 to i32, !dbg !18837
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18838

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18839
  %call50 = call i8* @strchr(i8* %46, i32 48) #14, !dbg !18842
  %tobool51 = icmp ne i8* %call50, null, !dbg !18842
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18843

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !18844
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !18844, !ctir !209
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !18844
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !18844, !ctir !9
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !18844
  %conv55 = sext i8 %49 to i32, !dbg !18844
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18845

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !18846
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !18846, !ctir !209
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !18846
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !18846, !ctir !9
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !18846
  %conv59 = sext i8 %52 to i32, !dbg !18846
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18849
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18850

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !18851
  %add = add nsw i32 %53, 2, !dbg !18851
  store i32 %add, i32* %suffixes, align 4, !dbg !18851
  br label %if.end63, !dbg !18852

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18853

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18854
  %54 = load i32, i32* %suffixes, align 4, !dbg !18855
  %inc = add nsw i32 %54, 1, !dbg !18855
  store i32 %inc, i32* %suffixes, align 4, !dbg !18855
  br label %sw.epilog, !dbg !18856

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18857

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18858

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !18859
  %56 = load i8*, i8** %55, align 8, !dbg !18860, !ctir !9
  %57 = load i8, i8* %56, align 1, !dbg !18861, !ctir !10
  %conv67 = sext i8 %57 to i32, !dbg !18861
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18862

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !18863
  store i32 %call69, i32* %overflow, align 4, !dbg !18865
  br label %sw.epilog92, !dbg !18866

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !18867
  store i32 %call71, i32* %overflow, align 4, !dbg !18868
  br label %sw.epilog92, !dbg !18869

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18870
  br label %sw.epilog92, !dbg !18871

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !18872
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !18873
  store i32 %call74, i32* %overflow, align 4, !dbg !18874
  br label %sw.epilog92, !dbg !18875

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18876
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !18877
  store i32 %call76, i32* %overflow, align 4, !dbg !18878
  br label %sw.epilog92, !dbg !18879

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18880
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !18881
  store i32 %call78, i32* %overflow, align 4, !dbg !18882
  br label %sw.epilog92, !dbg !18883

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18884
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !18885
  store i32 %call80, i32* %overflow, align 4, !dbg !18886
  br label %sw.epilog92, !dbg !18887

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18888
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !18889
  store i32 %call82, i32* %overflow, align 4, !dbg !18890
  br label %sw.epilog92, !dbg !18891

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18892
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !18893
  store i32 %call84, i32* %overflow, align 4, !dbg !18894
  br label %sw.epilog92, !dbg !18895

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !18896
  store i32 %call86, i32* %overflow, align 4, !dbg !18897
  br label %sw.epilog92, !dbg !18898

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18899
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !18900
  store i32 %call88, i32* %overflow, align 4, !dbg !18901
  br label %sw.epilog92, !dbg !18902

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !18903
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !18904
  store i32 %call90, i32* %overflow, align 4, !dbg !18905
  br label %sw.epilog92, !dbg !18906

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !18907
  %67 = load i64*, i64** %val.addr, align 8, !dbg !18908
  store i64 %66, i64* %67, align 8, !dbg !18909, !ctir !57
  %68 = load i32, i32* %err, align 4, !dbg !18910
  %or91 = or i32 %68, 2, !dbg !18911
  store i32 %or91, i32* %retval, align 4, !dbg !18912
  br label %return, !dbg !18912

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !18913
  %70 = load i32, i32* %err, align 4, !dbg !18914
  %or93 = or i32 %70, %69, !dbg !18914
  store i32 %or93, i32* %err, align 4, !dbg !18914
  %71 = load i32, i32* %suffixes, align 4, !dbg !18915
  %72 = load i8**, i8*** %p, align 8, !dbg !18916
  %73 = load i8*, i8** %72, align 8, !dbg !18917, !ctir !9
  %idx.ext = sext i32 %71 to i64, !dbg !18917
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !18917, !ctir !10
  store i8* %add.ptr, i8** %72, align 8, !dbg !18917, !ctir !9
  %74 = load i8**, i8*** %p, align 8, !dbg !18918
  %75 = load i8*, i8** %74, align 8, !dbg !18920, !ctir !9
  %76 = load i8, i8* %75, align 1, !dbg !18921, !ctir !10
  %tobool94 = icmp ne i8 %76, 0, !dbg !18921
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !18922

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !18923
  %or96 = or i32 %77, 2, !dbg !18923
  store i32 %or96, i32* %err, align 4, !dbg !18923
  br label %if.end97, !dbg !18924

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !18925

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !18926
  %79 = load i64*, i64** %val.addr, align 8, !dbg !18927
  store i64 %78, i64* %79, align 8, !dbg !18928, !ctir !57
  %80 = load i32, i32* %err, align 4, !dbg !18929
  store i32 %80, i32* %retval, align 4, !dbg !18930
  br label %return, !dbg !18930

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !18931
  ret i32 %81, !dbg !18931
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !18932 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18935, metadata !DIExpression()), !dbg !18936
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !18937, metadata !DIExpression()), !dbg !18938
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !18939
  %conv = sext i32 %0 to i64, !dbg !18939
  %div = udiv i64 -1, %conv, !dbg !18941
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18942
  %2 = load i64, i64* %1, align 8, !dbg !18943, !ctir !57
  %cmp = icmp ult i64 %div, %2, !dbg !18944
  br i1 %cmp, label %if.then, label %if.end, !dbg !18945

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !18946
  store i64 -1, i64* %3, align 8, !dbg !18948, !ctir !57
  store i32 1, i32* %retval, align 4, !dbg !18949
  br label %return, !dbg !18949

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !18950
  %conv2 = sext i32 %4 to i64, !dbg !18950
  %5 = load i64*, i64** %x.addr, align 8, !dbg !18951
  %6 = load i64, i64* %5, align 8, !dbg !18952, !ctir !57
  %mul = mul i64 %6, %conv2, !dbg !18952
  store i64 %mul, i64* %5, align 8, !dbg !18952, !ctir !57
  store i32 0, i32* %retval, align 4, !dbg !18953
  br label %return, !dbg !18953

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !18954
  ret i32 %7, !dbg !18954
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !18955 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1485
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !18958, metadata !DIExpression()), !dbg !18959
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !18960, metadata !DIExpression()), !dbg !18961
  store i32 %power, i32* %power.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !18962, metadata !DIExpression()), !dbg !18963
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18964, metadata !DIExpression()), !dbg !18965
  store i32 0, i32* %err, align 4, !dbg !18965
  br label %while.cond, !dbg !18966

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !18967
  %dec = add nsw i32 %0, -1, !dbg !18967
  store i32 %dec, i32* %power.addr, align 4, !dbg !18967
  %tobool = icmp ne i32 %0, 0, !dbg !18966
  br i1 %tobool, label %while.body, label %while.end, !dbg !18966

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !18968
  %2 = load i32, i32* %base.addr, align 4, !dbg !18969
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !18970
  %3 = load i32, i32* %err, align 4, !dbg !18971
  %or = or i32 %3, %call, !dbg !18971
  store i32 %or, i32* %err, align 4, !dbg !18971
  br label %while.cond, !dbg !18966, !llvm.loop !18972

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !18974
  ret i32 %4, !dbg !18975
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18976 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !183
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18981, metadata !DIExpression()), !dbg !18982
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18983, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.declare(metadata i8** %result, metadata !18985, metadata !DIExpression()), !dbg !18986
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !18987, metadata !DIExpression()), !dbg !18989
  store i64 0, i64* %argcount, align 8, !dbg !18989
  call void @llvm.dbg.declare(metadata i8** %f, metadata !18990, metadata !DIExpression()), !dbg !18991
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18992
  store i8* %0, i8** %f, align 8, !dbg !18994
  br label %for.cond, !dbg !18995

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !18996
  %2 = load i8, i8* %1, align 1, !dbg !19000, !ctir !184
  %conv = sext i8 %2 to i32, !dbg !19000
  %cmp = icmp eq i32 %conv, 0, !dbg !19001
  br i1 %cmp, label %if.then, label %if.end, !dbg !19002

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !19003
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19004
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !19005
  store i8* %call, i8** %retval, align 8, !dbg !19006
  br label %return, !dbg !19006

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !19007
  %6 = load i8, i8* %5, align 1, !dbg !19009, !ctir !184
  %conv2 = sext i8 %6 to i32, !dbg !19009
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !19010
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19011

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !19012

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !19013
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !19013, !ctir !184
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !19013
  %8 = load i8*, i8** %f, align 8, !dbg !19014
  %9 = load i8, i8* %8, align 1, !dbg !19016, !ctir !184
  %conv7 = sext i8 %9 to i32, !dbg !19016
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !19017
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !19018

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !19019

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !19020
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19020, !ctir !184
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !19020
  %11 = load i64, i64* %argcount, align 8, !dbg !19021
  %inc = add i64 %11, 1, !dbg !19021
  store i64 %inc, i64* %argcount, align 8, !dbg !19021
  br label %for.cond, !dbg !19022, !llvm.loop !19023

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !19026
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19028
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #9, !dbg !19029
  %cmp14 = icmp slt i32 %call13, 0, !dbg !19030
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !19031

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #16, !dbg !19032
  %14 = load i32, i32* %call17, align 4, !dbg !19032, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !19035
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !19036

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #15, !dbg !19037
  unreachable, !dbg !19037

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !19038
  br label %return, !dbg !19038

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !19039
  store i8* %15, i8** %retval, align 8, !dbg !19040
  br label %return, !dbg !19040

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !19041
  ret i8* %16, !dbg !19041
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !19042 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1489
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !183
  %next12 = alloca i8*, align 8, !ctir !183
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !19045, metadata !DIExpression()), !dbg !19046
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !19047, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.declare(metadata i8** %result, metadata !19049, metadata !DIExpression()), !dbg !19050
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !19051, metadata !DIExpression()), !dbg !19052
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !19053, metadata !DIExpression()), !dbg !19054
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19055, metadata !DIExpression()), !dbg !19056
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19057, metadata !DIExpression()), !dbg !19058
  store i64 0, i64* %totalsize, align 8, !dbg !19059
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19060, !ctir !1489
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19060
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19060
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !19060
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !19060
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !19061
  store i64 %3, i64* %i, align 8, !dbg !19063
  br label %for.cond, !dbg !19064

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !19065
  %cmp = icmp ugt i64 %4, 0, !dbg !19067
  br i1 %cmp, label %for.body, label %for.end, !dbg !19068

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !19069, metadata !DIExpression()), !dbg !19071
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19072, !ctir !1489
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !19072
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !19072
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19072
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19072

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !19072
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !19072
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19072
  %7 = bitcast i8* %6 to i8**, !dbg !19072
  %8 = add i32 %gp_offset, 8, !dbg !19072
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !19072
  br label %vaarg.end, !dbg !19072

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !19072
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19072
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !19072
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19072
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19072
  br label %vaarg.end, !dbg !19072

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !19072
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !19072
  store i8* %10, i8** %next, align 8, !dbg !19071
  %11 = load i64, i64* %totalsize, align 8, !dbg !19073
  %12 = load i8*, i8** %next, align 8, !dbg !19074
  %call = call i64 @strlen(i8* %12) #14, !dbg !19075
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !19076
  store i64 %call2, i64* %totalsize, align 8, !dbg !19077
  br label %for.inc, !dbg !19078

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !19079
  %dec = add i64 %13, -1, !dbg !19079
  store i64 %dec, i64* %i, align 8, !dbg !19079
  br label %for.cond, !dbg !19080, !llvm.loop !19081

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19083, !ctir !1489
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19083
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19083
  %14 = load i64, i64* %totalsize, align 8, !dbg !19084
  %cmp5 = icmp eq i64 %14, -1, !dbg !19086
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !19087

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !19088
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !19089
  br i1 %cmp6, label %if.then, label %if.end, !dbg !19090

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #16, !dbg !19091
  store i32 75, i32* %call7, align 4, !dbg !19093, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !19094
  br label %return, !dbg !19094

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !19095
  %add = add i64 %16, 1, !dbg !19095
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !19095
  store i8* %call8, i8** %result, align 8, !dbg !19096
  %17 = load i8*, i8** %result, align 8, !dbg !19097
  store i8* %17, i8** %p, align 8, !dbg !19098
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !19099
  store i64 %18, i64* %i, align 8, !dbg !19101
  br label %for.cond9, !dbg !19102

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !19103
  %cmp10 = icmp ugt i64 %19, 0, !dbg !19105
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !19106

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !19107, metadata !DIExpression()), !dbg !19109
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19110
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !19110
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !19110
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !19110
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !19110

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !19110
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !19110
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !19110
  %23 = bitcast i8* %22 to i8**, !dbg !19110
  %24 = add i32 %gp_offset14, 8, !dbg !19110
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !19110
  br label %vaarg.end22, !dbg !19110

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !19110
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !19110
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !19110
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !19110
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !19110
  br label %vaarg.end22, !dbg !19110

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !19110
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !19110
  store i8* %26, i8** %next12, align 8, !dbg !19109
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19111, metadata !DIExpression()), !dbg !19112
  %27 = load i8*, i8** %next12, align 8, !dbg !19113
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !19114
  store i64 %call24, i64* %len, align 8, !dbg !19112
  %28 = load i8*, i8** %p, align 8, !dbg !19115
  %29 = load i8*, i8** %next12, align 8, !dbg !19116
  %30 = load i64, i64* %len, align 8, !dbg !19117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !19118
  %31 = load i64, i64* %len, align 8, !dbg !19119
  %32 = load i8*, i8** %p, align 8, !dbg !19120
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !19120, !ctir !10
  store i8* %add.ptr, i8** %p, align 8, !dbg !19120
  br label %for.inc25, !dbg !19121

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !19122
  %dec26 = add i64 %33, -1, !dbg !19122
  store i64 %dec26, i64* %i, align 8, !dbg !19122
  br label %for.cond9, !dbg !19123, !llvm.loop !19124

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !19126
  store i8 0, i8* %34, align 1, !dbg !19127, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !19128
  store i8* %35, i8** %retval, align 8, !dbg !19129
  br label %return, !dbg !19129

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !19130
  ret i8* %36, !dbg !19130
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !19131 {
entry:
  %yes = alloca i8, align 1, !ctir !142
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !661
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !19133, metadata !DIExpression()), !dbg !19134
  call void @llvm.dbg.declare(metadata i8** %response, metadata !19135, metadata !DIExpression()), !dbg !19136
  store i8* null, i8** %response, align 8, !dbg !19136
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !19137, metadata !DIExpression()), !dbg !19138
  store i64 0, i64* %response_size, align 8, !dbg !19138
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !19139, metadata !DIExpression()), !dbg !19140
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !19141
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !19142
  store i64 %call, i64* %response_len, align 8, !dbg !19140
  %1 = load i64, i64* %response_len, align 8, !dbg !19143
  %cmp = icmp sle i64 %1, 0, !dbg !19145
  br i1 %cmp, label %if.then, label %if.else, !dbg !19146

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !19147
  br label %if.end9, !dbg !19148

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !19149
  %3 = load i64, i64* %response_len, align 8, !dbg !19152
  %sub = sub nsw i64 %3, 1, !dbg !19153
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !19149, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !19149
  %conv = sext i8 %4 to i32, !dbg !19149
  %cmp1 = icmp eq i32 %conv, 10, !dbg !19154
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !19155

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !19156
  %6 = load i64, i64* %response_len, align 8, !dbg !19157
  %sub4 = sub nsw i64 %6, 1, !dbg !19158
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !19156, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !19159
  br label %if.end, !dbg !19156

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !19160
  %call6 = call i32 @rpmatch(i8* %7) #9, !dbg !19161
  %cmp7 = icmp slt i32 0, %call6, !dbg !19162
  %frombool = zext i1 %cmp7 to i8, !dbg !19163
  store i8 %frombool, i8* %yes, align 1, !dbg !19163
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !19164
  call void @free(i8* %8) #9, !dbg !19165
  %9 = load i8, i8* %yes, align 1, !dbg !19166
  %tobool = trunc i8 %9 to i1, !dbg !19166
  ret i1 %tobool, !dbg !19167
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !19168 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19173, metadata !DIExpression()), !dbg !19174
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19175
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !19177
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19178

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19179
  %call = call i32 @__freading(%struct._IO_FILE* %1) #9, !dbg !19179
  %cmp1 = icmp ne i32 %call, 0, !dbg !19179
  br i1 %cmp1, label %if.end, label %if.then, !dbg !19180

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19181
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !19182
  store i32 %call2, i32* %retval, align 4, !dbg !19183
  br label %return, !dbg !19183

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19184
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !19185
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19186
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !19187
  store i32 %call3, i32* %retval, align 4, !dbg !19188
  br label %return, !dbg !19188

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19189
  ret i32 %5, !dbg !19189
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !19190 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19193, metadata !DIExpression()), !dbg !19194
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19195
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !19197, !ctir !1539
  %1 = load i32, i32* %_flags, align 8, !dbg !19197, !ctir !7
  %and = and i32 %1, 256, !dbg !19198
  %tobool = icmp ne i32 %and, 0, !dbg !19198
  br i1 %tobool, label %if.then, label %if.end, !dbg !19199

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19200
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !19201
  br label %if.end, !dbg !19201

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19202
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #10 !dbg !19203 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19208, metadata !DIExpression()), !dbg !19209
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19210
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !19212, !ctir !1575
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19212, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19213
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !19214, !ctir !1575
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !19214, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !19215
  br i1 %cmp, label %if.then, label %if.end, !dbg !19216

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !19217
  br label %return, !dbg !19217

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19218
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !19219, !ctir !1575
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !19219, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19220
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !19221, !ctir !1575
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19221, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !19222
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !19222
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19222
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19223
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !19224, !ctir !1575
  %9 = load i32, i32* %_flags, align 8, !dbg !19224, !ctir !7
  %and = and i32 %9, 256, !dbg !19225
  %tobool = icmp ne i32 %and, 0, !dbg !19225
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19223

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19226
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !19227, !ctir !1575
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !19227, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19228
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !19229, !ctir !1575
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !19229, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !19230
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !19230
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !19230
  br label %cond.end, !dbg !19223

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19223

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !19223
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !19231
  store i64 %add, i64* %retval, align 8, !dbg !19232
  br label %return, !dbg !19232

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !19233
  ret i64 %14, !dbg !19233
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !19234 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !429
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19239, metadata !DIExpression()), !dbg !19240
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19241, metadata !DIExpression()), !dbg !19242
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !19243, metadata !DIExpression()), !dbg !19244
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19245
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !19247, !ctir !1611
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !19247, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19248
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !19249, !ctir !1611
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19249, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !19250
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !19251

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19252
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !19253, !ctir !1611
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19253, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19254
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !19255, !ctir !1611
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !19255, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !19256
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !19257

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19258
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !19259, !ctir !1611
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !19259, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !19260
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !19261

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !19262, metadata !DIExpression()), !dbg !19264
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19265
  %call = call i32 @fileno(%struct._IO_FILE* %10) #9, !dbg !19266
  %11 = load i64, i64* %offset.addr, align 8, !dbg !19267
  %12 = load i32, i32* %whence.addr, align 4, !dbg !19268
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #9, !dbg !19269
  store i64 %call4, i64* %pos, align 8, !dbg !19264
  %13 = load i64, i64* %pos, align 8, !dbg !19270
  %cmp5 = icmp eq i64 %13, -1, !dbg !19272
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19273

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19274
  br label %return, !dbg !19274

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19276
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !19277, !ctir !1611
  %15 = load i32, i32* %_flags, align 8, !dbg !19278, !ctir !7
  %and = and i32 %15, -17, !dbg !19278
  store i32 %and, i32* %_flags, align 8, !dbg !19278, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !19279
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19280
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !19281, !ctir !1611
  store i64 %16, i64* %_offset, align 8, !dbg !19282, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !19283
  br label %return, !dbg !19283

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19284
  %19 = load i64, i64* %offset.addr, align 8, !dbg !19285
  %20 = load i32, i32* %whence.addr, align 4, !dbg !19286
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !19287
  store i32 %call8, i32* %retval, align 4, !dbg !19288
  br label %return, !dbg !19288

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !19289
  ret i32 %21, !dbg !19289
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.savewd* %ps) #4 !dbg !19290 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.savewd*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !944
  %uc = alloca i8, align 1, !ctir !573
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !19306, metadata !DIExpression()), !dbg !19307
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19308, metadata !DIExpression()), !dbg !19309
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19310, metadata !DIExpression()), !dbg !19311
  store %struct.savewd* %ps, %struct.savewd** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.savewd** %ps.addr, metadata !19312, metadata !DIExpression()), !dbg !19313
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19314, metadata !DIExpression()), !dbg !19315
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !19316, metadata !DIExpression()), !dbg !19317
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !19318
  %tobool = icmp ne i32* %0, null, !dbg !19318
  br i1 %tobool, label %if.end, label %if.then, !dbg !19320

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !19321
  br label %if.end, !dbg !19322

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !19323
  %2 = load i8*, i8** %s.addr, align 8, !dbg !19324
  %3 = load i64, i64* %n.addr, align 8, !dbg !19325
  %4 = load %struct.savewd*, %struct.savewd** %ps.addr, align 8, !dbg !19326
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.savewd* %4) #9, !dbg !19327
  store i64 %call, i64* %ret, align 8, !dbg !19328
  %5 = load i64, i64* %ret, align 8, !dbg !19329
  %cmp = icmp ule i64 -2, %5, !dbg !19331
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !19332

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19333
  %cmp1 = icmp ne i64 %6, 0, !dbg !19334
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !19335

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !19336
  br i1 %call3, label %if.end5, label %if.then4, !dbg !19337

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !19338, metadata !DIExpression()), !dbg !19340
  %7 = load i8*, i8** %s.addr, align 8, !dbg !19341
  %8 = load i8, i8* %7, align 1, !dbg !19342, !ctir !184
  store i8 %8, i8* %uc, align 1, !dbg !19340
  %9 = load i8, i8* %uc, align 1, !dbg !19343
  %conv = zext i8 %9 to i32, !dbg !19343
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !19344
  store i32 %conv, i32* %10, align 4, !dbg !19345, !ctir !944
  store i64 1, i64* %retval, align 8, !dbg !19346
  br label %return, !dbg !19346

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !19347
  store i64 %11, i64* %retval, align 8, !dbg !19348
  br label %return, !dbg !19348

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !19349
  ret i64 %12, !dbg !19349
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.savewd*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19350 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !1650
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !1654
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19354, metadata !DIExpression()), !dbg !19355
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !19356, metadata !DIExpression()), !dbg !19357
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !19358, metadata !DIExpression()), !dbg !19359
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19360
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !19362
  store i32 %call, i32* %got_one, align 4, !dbg !19363
  br label %for.cond, !dbg !19364

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !19365
  %cmp = icmp sgt i32 %1, 0, !dbg !19367
  br i1 %cmp, label %for.body, label %for.end, !dbg !19368

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !19369, metadata !DIExpression()), !dbg !19371
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !19372
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !19374
  %cmp2 = icmp slt i32 %call1, 0, !dbg !19375
  br i1 %cmp2, label %if.then, label %if.end, !dbg !19376

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !19377
  br label %return, !dbg !19377

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !19378
  %cmp3 = icmp eq i32 %3, 1, !dbg !19380
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !19381

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !19382
  %cmp4 = icmp eq i32 %4, 4, !dbg !19383
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !19384

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !19385
  %cmp6 = icmp eq i32 %5, 32, !dbg !19386
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !19387

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !19388
  br label %return, !dbg !19388

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !19389

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19390
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !19391
  store i32 %call9, i32* %got_one, align 4, !dbg !19392
  br label %for.cond, !dbg !19393, !llvm.loop !19394

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !19396
  store i32 %7, i32* %retval, align 4, !dbg !19397
  br label %return, !dbg !19397

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !19398
  ret i32 %8, !dbg !19398
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19399 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19400, metadata !DIExpression()), !dbg !19401
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19402
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !19403
  %cmp = icmp sgt i32 %call, 0, !dbg !19404
  %conv = zext i1 %cmp to i32, !dbg !19404
  ret i32 %conv, !dbg !19405
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !19406 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19416, metadata !DIExpression()), !dbg !19417
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19418
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !19420, !ctir !19410
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19420, !ctir !1655
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !19418
  br i1 %tobool, label %if.then, label %if.end, !dbg !19421

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19422
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !19423, !ctir !19410
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !19423, !ctir !1655
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !19422
  %call = call i32 @acl_free(i8* %4), !dbg !19424
  br label %if.end, !dbg !19424

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19425
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !19427, !ctir !19410
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !19427, !ctir !1655
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !19425
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !19428

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19429
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !19430, !ctir !19410
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !19430, !ctir !1655
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !19429
  %call5 = call i32 @acl_free(i8* %9), !dbg !19431
  br label %if.end6, !dbg !19431

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !19432
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !19433 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19444, metadata !DIExpression()), !dbg !19445
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19446, metadata !DIExpression()), !dbg !19447
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19448, metadata !DIExpression()), !dbg !19449
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19450, metadata !DIExpression()), !dbg !19451
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19452
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !19453
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !19453
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19454
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19455
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !19456, !ctir !19438
  store i32 %2, i32* %mode1, align 8, !dbg !19457, !ctir !139
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19458
  %cmp = icmp ne i32 %4, -1, !dbg !19460
  br i1 %cmp, label %if.then, label %if.else, !dbg !19461

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !19462
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !19463
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19464
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19465, !ctir !19438
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !19466, !ctir !1655
  br label %if.end, !dbg !19464

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !19467
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !19468
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19469
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !19470, !ctir !19438
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !19471, !ctir !1655
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19472
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !19474, !ctir !19438
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !19474, !ctir !1655
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !19475
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !19476

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #16, !dbg !19477
  %11 = load i32, i32* %call7, align 4, !dbg !19477, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #16, !dbg !19478
  %12 = zext i1 %call8 to i64, !dbg !19478
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !19478
  store i32 %cond, i32* %retval, align 4, !dbg !19479
  br label %return, !dbg !19479

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !19480
  %and = and i32 %13, 61440, !dbg !19480
  %cmp10 = icmp eq i32 %and, 16384, !dbg !19480
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19482

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !19483
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !19485
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19486
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !19487, !ctir !19438
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !19488, !ctir !1655
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19489
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !19491, !ctir !19438
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !19491, !ctir !1655
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !19492
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !19493

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !19494
  br label %return, !dbg !19494

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !19495

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !19496
  br label %return, !dbg !19496

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !19497
  ret i32 %18, !dbg !19497
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !19498 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19500, metadata !DIExpression()), !dbg !19501
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19502, metadata !DIExpression()), !dbg !19503
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19504, metadata !DIExpression()), !dbg !19505
  %0 = load i32, i32* %desc.addr, align 4, !dbg !19506
  %cmp = icmp ne i32 %0, -1, !dbg !19508
  br i1 %cmp, label %if.then, label %if.else, !dbg !19509

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !19510
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19511
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !19512
  store i32 %call, i32* %retval, align 4, !dbg !19513
  br label %return, !dbg !19513

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19514
  %4 = load i32, i32* %mode.addr, align 4, !dbg !19515
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !19516
  store i32 %call1, i32* %retval, align 4, !dbg !19517
  br label %return, !dbg !19517

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19518
  ret i32 %5, !dbg !19518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !19519 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !142
  %early_chmod = alloca i8, align 1, !ctir !142
  %must_chmod = alloca i8, align 1, !ctir !142
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19529, metadata !DIExpression()), !dbg !19530
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19531, metadata !DIExpression()), !dbg !19532
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19533, metadata !DIExpression()), !dbg !19534
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !19535, metadata !DIExpression()), !dbg !19536
  store i8 0, i8* %acls_set, align 1, !dbg !19536
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !19537, metadata !DIExpression()), !dbg !19538
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !19539, metadata !DIExpression()), !dbg !19540
  store i8 0, i8* %must_chmod, align 1, !dbg !19540
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19541, metadata !DIExpression()), !dbg !19542
  store i32 0, i32* %ret, align 4, !dbg !19542
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19543
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !19544, !ctir !19523
  %1 = load i32, i32* %mode, align 8, !dbg !19544, !ctir !139
  %and = and i32 %1, 3584, !dbg !19545
  %tobool = icmp ne i32 %and, 0, !dbg !19546
  %frombool = zext i1 %tobool to i8, !dbg !19547
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !19547
  %2 = load i8, i8* %early_chmod, align 1, !dbg !19548
  %tobool1 = trunc i8 %2 to i1, !dbg !19548
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !19550

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19551
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19553
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19554
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !19555, !ctir !19523
  %6 = load i32, i32* %mode2, align 8, !dbg !19555, !ctir !139
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !19556
  store i32 %call, i32* %ret, align 4, !dbg !19557
  %7 = load i32, i32* %ret, align 4, !dbg !19558
  %cmp = icmp ne i32 %7, 0, !dbg !19560
  br i1 %cmp, label %if.then3, label %if.end, !dbg !19561

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19562
  br label %return, !dbg !19562

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !19563

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19564
  %9 = load i8*, i8** %name.addr, align 8, !dbg !19565
  %10 = load i32, i32* %desc.addr, align 4, !dbg !19566
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !19567
  store i32 %call5, i32* %ret, align 4, !dbg !19568
  %11 = load i8, i8* %acls_set, align 1, !dbg !19569
  %tobool6 = trunc i8 %11 to i1, !dbg !19569
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !19571

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19572, metadata !DIExpression()), !dbg !19574
  %12 = load i32, i32* %ret, align 4, !dbg !19575
  %tobool8 = icmp ne i32 %12, 0, !dbg !19575
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !19575

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #16, !dbg !19576
  %13 = load i32, i32* %call9, align 4, !dbg !19576, !ctir !7
  br label %cond.end, !dbg !19575

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !19575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !19575
  store i32 %cond, i32* %saved_errno, align 4, !dbg !19574
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19577
  %15 = load i8*, i8** %name.addr, align 8, !dbg !19578
  %16 = load i32, i32* %desc.addr, align 4, !dbg !19579
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !19580
  store i32 %call10, i32* %ret, align 4, !dbg !19581
  %17 = load i8, i8* %acls_set, align 1, !dbg !19582
  %tobool11 = trunc i8 %17 to i1, !dbg !19582
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !19584

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !19585
  br label %if.end13, !dbg !19586

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !19587
  %tobool14 = icmp ne i32 %18, 0, !dbg !19587
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !19589

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !19590
  %call16 = call i32* @__errno_location() #16, !dbg !19592
  store i32 %19, i32* %call16, align 4, !dbg !19593, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19594
  br label %if.end17, !dbg !19595

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !19596

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !19597
  %tobool19 = trunc i8 %20 to i1, !dbg !19597
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !19599

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !19600
  %tobool20 = trunc i8 %21 to i1, !dbg !19600
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !19601

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !19602, metadata !DIExpression()), !dbg !19604
  %22 = load i32, i32* %ret, align 4, !dbg !19605
  %tobool23 = icmp ne i32 %22, 0, !dbg !19605
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !19605

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #16, !dbg !19606
  %23 = load i32, i32* %call25, align 4, !dbg !19606, !ctir !7
  br label %cond.end27, !dbg !19605

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !19605

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !19605
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !19604
  %24 = load i8*, i8** %name.addr, align 8, !dbg !19607
  %25 = load i32, i32* %desc.addr, align 4, !dbg !19608
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19609
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !19610, !ctir !19523
  %27 = load i32, i32* %mode29, align 8, !dbg !19610, !ctir !139
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !19611
  store i32 %call30, i32* %ret, align 4, !dbg !19612
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !19613
  %tobool31 = icmp ne i32 %28, 0, !dbg !19613
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !19615

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !19616
  %call33 = call i32* @__errno_location() #16, !dbg !19618
  store i32 %29, i32* %call33, align 4, !dbg !19619, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19620
  br label %if.end34, !dbg !19621

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !19622

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !19623
  store i32 %30, i32* %retval, align 4, !dbg !19624
  br label %return, !dbg !19624

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !19625
  ret i32 %31, !dbg !19625
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !19626 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19629, metadata !DIExpression()), !dbg !19630
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19631, metadata !DIExpression()), !dbg !19632
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19633, metadata !DIExpression()), !dbg !19634
  store i32 %from_mode, i32* %from_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !19635, metadata !DIExpression()), !dbg !19636
  store i8* %must_chmod, i8** %must_chmod.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !19637, metadata !DIExpression()), !dbg !19638
  store i8* %acls_set, i8** %acls_set.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !19639, metadata !DIExpression()), !dbg !19640
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19641, metadata !DIExpression()), !dbg !19642
  store i32 0, i32* %ret, align 4, !dbg !19642
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19643
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !19645, !ctir !19523
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !19645
  %tobool = trunc i8 %1 to i1, !dbg !19645, !ctir !142
  br i1 %tobool, label %if.end58, label %if.then, !dbg !19646

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !19647
  %cmp = icmp eq i32 %2, 0, !dbg !19650
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !19651

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !19652
  %tobool1 = icmp ne i32 %3, 0, !dbg !19652
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !19653

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19654
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !19657, !ctir !19523
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19657, !ctir !1655
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !19654
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !19658

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19659
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19660, !ctir !19523
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !19660, !ctir !1655
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !19659
  %call = call i32 @acl_free(i8* %8), !dbg !19661
  br label %if.end, !dbg !19661

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19662
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !19663, !ctir !19523
  %10 = load i32, i32* %mode, align 8, !dbg !19663, !ctir !139
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !19664
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19665
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !19666, !ctir !19523
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !19667, !ctir !1655
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19668
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !19670, !ctir !19523
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !19670, !ctir !1655
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !19671
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !19672

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !19673
  br label %if.end11, !dbg !19674

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !19675

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !19676
  %cmp13 = icmp eq i32 %14, 0, !dbg !19678
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !19679

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19680
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !19681, !ctir !19523
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !19681, !ctir !1655
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !19680
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !19682

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !19683
  %cmp18 = icmp ne i32 %17, -1, !dbg !19686
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !19687

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !19688
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19689
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !19690, !ctir !19523
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !19690, !ctir !1655
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !19691
  store i32 %call21, i32* %ret, align 4, !dbg !19692
  br label %if.end24, !dbg !19693

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !19694
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19695
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !19696, !ctir !19523
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !19696, !ctir !1655
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !19697
  store i32 %call23, i32* %ret, align 4, !dbg !19698
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !19699
  %cmp25 = icmp ne i32 %24, 0, !dbg !19701
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !19702

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #16, !dbg !19703
  %25 = load i32, i32* %call27, align 4, !dbg !19703, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #16, !dbg !19706
  br i1 %call28, label %if.end37, label %if.then29, !dbg !19707

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19708
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !19710, !ctir !19523
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !19711, !ctir !142
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !19712
  %tobool31 = icmp ne i32 %27, 0, !dbg !19712
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !19714

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19715
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !19716, !ctir !19523
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !19716, !ctir !1655
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !19717
  %cmp34 = icmp eq i32 %call33, 0, !dbg !19718
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !19719

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !19720
  br label %if.end36, !dbg !19721

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !19722

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !19723

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !19724
  store i8 1, i8* %30, align 1, !dbg !19726, !ctir !142
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19727
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !19727, !ctir !19523
  %32 = load i32, i32* %mode39, align 8, !dbg !19727, !ctir !139
  %and = and i32 %32, 61440, !dbg !19727
  %cmp40 = icmp eq i32 %and, 16384, !dbg !19727
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !19729

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !19730
  %tobool42 = icmp ne i32 %33, 0, !dbg !19730
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !19733

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19734
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !19735, !ctir !19523
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !19735, !ctir !1655
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !19734
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !19736

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19737
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !19738, !ctir !19523
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !19738, !ctir !1655
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !19739
  %tobool48 = icmp ne i32 %call47, 0, !dbg !19739
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !19740

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !19741
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19742
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !19743, !ctir !19523
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !19743, !ctir !1655
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !19744
  store i32 %call51, i32* %ret, align 4, !dbg !19745
  br label %if.end54, !dbg !19746

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !19747
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !19748
  store i32 %call53, i32* %ret, align 4, !dbg !19749
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !19750

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !19751

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !19752

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !19753
  ret i32 %42, !dbg !19754
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !19755 {
entry:
  call void @usage(i32 1), !dbg !19756
  ret void, !dbg !19757
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19758 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !627
  %ambiguous = alloca i8, align 1, !ctir !142
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19761, metadata !DIExpression()), !dbg !19762
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19763, metadata !DIExpression()), !dbg !19764
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19765, metadata !DIExpression()), !dbg !19766
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19767, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19769, metadata !DIExpression()), !dbg !19770
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !19771, metadata !DIExpression()), !dbg !19772
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !19773, metadata !DIExpression()), !dbg !19774
  store i64 -1, i64* %matchind, align 8, !dbg !19774
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !19775, metadata !DIExpression()), !dbg !19776
  store i8 0, i8* %ambiguous, align 1, !dbg !19776
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19777
  %call = call i64 @strlen(i8* %0) #14, !dbg !19778
  store i64 %call, i64* %arglen, align 8, !dbg !19779
  store i64 0, i64* %i, align 8, !dbg !19780
  br label %for.cond, !dbg !19782

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19783
  %2 = load i64, i64* %i, align 8, !dbg !19785
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19783, !ctir !1115
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19783
  %tobool = icmp ne i8* %3, null, !dbg !19786
  br i1 %tobool, label %for.body, label %for.end, !dbg !19786

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !19787
  %5 = load i64, i64* %i, align 8, !dbg !19790
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !19787, !ctir !1115
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !19787
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19791
  %8 = load i64, i64* %arglen, align 8, !dbg !19792
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !19793
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19793
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !19794

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19795
  %10 = load i64, i64* %i, align 8, !dbg !19798
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !19795, !ctir !1115
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !19795
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !19799
  %12 = load i64, i64* %arglen, align 8, !dbg !19800
  %cmp = icmp eq i64 %call5, %12, !dbg !19801
  br i1 %cmp, label %if.then6, label %if.else, !dbg !19802

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !19803
  store i64 %13, i64* %retval, align 8, !dbg !19804
  br label %return, !dbg !19804

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !19805
  %cmp7 = icmp eq i64 %14, -1, !dbg !19807
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !19808

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !19809
  store i64 %15, i64* %matchind, align 8, !dbg !19810
  br label %if.end16, !dbg !19811

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !19812
  %cmp10 = icmp eq i8* %16, null, !dbg !19815
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !19816

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !19817
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !19818
  %19 = load i64, i64* %matchind, align 8, !dbg !19819
  %mul = mul i64 %18, %19, !dbg !19820
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !19821, !ctir !184
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !19822
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !19823
  %22 = load i64, i64* %i, align 8, !dbg !19824
  %mul11 = mul i64 %21, %22, !dbg !19825
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !19826, !ctir !184
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !19827
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !19828
  %tobool14 = icmp ne i32 %call13, 0, !dbg !19828
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !19829

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !19830
  br label %if.end, !dbg !19832

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !19833

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !19834

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !19835
  %inc = add i64 %24, 1, !dbg !19835
  store i64 %inc, i64* %i, align 8, !dbg !19835
  br label %for.cond, !dbg !19836, !llvm.loop !19837

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !19839
  %tobool19 = trunc i8 %25 to i1, !dbg !19839
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !19841

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !19842
  br label %return, !dbg !19842

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !19843
  store i64 %26, i64* %retval, align 8, !dbg !19844
  br label %return, !dbg !19844

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !19845
  ret i64 %27, !dbg !19845
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !19846 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !183
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19849, metadata !DIExpression()), !dbg !19850
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19851, metadata !DIExpression()), !dbg !19852
  store i64 %problem, i64* %problem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !19853, metadata !DIExpression()), !dbg !19854
  call void @llvm.dbg.declare(metadata i8** %format, metadata !19855, metadata !DIExpression()), !dbg !19856
  %0 = load i64, i64* %problem.addr, align 8, !dbg !19857
  %cmp = icmp eq i64 %0, -1, !dbg !19858
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19857

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.485, i64 0, i64 0)) #9, !dbg !19859
  br label %cond.end, !dbg !19857

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.486, i64 0, i64 0)) #9, !dbg !19860
  br label %cond.end, !dbg !19857

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !19857
  store i8* %cond, i8** %format, align 8, !dbg !19856
  %1 = load i8*, i8** %format, align 8, !dbg !19861
  %2 = load i8*, i8** %value.addr, align 8, !dbg !19862
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !19863
  %3 = load i8*, i8** %context.addr, align 8, !dbg !19864
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !19865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !19866
  ret void, !dbg !19867
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !19868 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !183
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19871, metadata !DIExpression()), !dbg !19872
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19873, metadata !DIExpression()), !dbg !19874
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19875, metadata !DIExpression()), !dbg !19876
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19877, metadata !DIExpression()), !dbg !19878
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !19879, metadata !DIExpression()), !dbg !19880
  store i8* null, i8** %last_val, align 8, !dbg !19880
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.487, i64 0, i64 0)) #9, !dbg !19881
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19881
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !19881
  store i64 0, i64* %i, align 8, !dbg !19882
  br label %for.cond, !dbg !19884

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19885
  %2 = load i64, i64* %i, align 8, !dbg !19887
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19885, !ctir !1115
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19885
  %tobool = icmp ne i8* %3, null, !dbg !19888
  br i1 %tobool, label %for.body, label %for.end, !dbg !19888

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !19889
  %cmp = icmp eq i64 %4, 0, !dbg !19891
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19892

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !19893
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !19894
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19895
  %8 = load i64, i64* %i, align 8, !dbg !19896
  %mul = mul i64 %7, %8, !dbg !19897
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !19898, !ctir !184
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !19899
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !19900
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19900
  br i1 %tobool3, label %if.then, label %if.else, !dbg !19901

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19902
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !19904
  %12 = load i64, i64* %i, align 8, !dbg !19905
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !19904, !ctir !1115
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !19904
  %call5 = call i8* @quote(i8* %13), !dbg !19906
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.488, i64 0, i64 0), i8* %call5), !dbg !19907
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !19908
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !19909
  %16 = load i64, i64* %i, align 8, !dbg !19910
  %mul7 = mul i64 %15, %16, !dbg !19911
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !19912, !ctir !184
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !19913
  br label %if.end, !dbg !19914

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19915
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !19917
  %19 = load i64, i64* %i, align 8, !dbg !19918
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !19917, !ctir !1115
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !19917
  %call10 = call i8* @quote(i8* %20), !dbg !19919
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.489, i64 0, i64 0), i8* %call10), !dbg !19920
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !19921

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !19922
  %inc = add i64 %21, 1, !dbg !19922
  store i64 %inc, i64* %i, align 8, !dbg !19922
  br label %for.cond, !dbg !19923, !llvm.loop !19924

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19926
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !19926
  ret void, !dbg !19927
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !19928 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !627
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19931, metadata !DIExpression()), !dbg !19932
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19933, metadata !DIExpression()), !dbg !19934
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19935, metadata !DIExpression()), !dbg !19936
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19937, metadata !DIExpression()), !dbg !19938
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19939, metadata !DIExpression()), !dbg !19940
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !19941, metadata !DIExpression()), !dbg !19942
  call void @llvm.dbg.declare(metadata i64* %res, metadata !19943, metadata !DIExpression()), !dbg !19944
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19945
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19946
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !19947
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !19948
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !19949
  store i64 %call, i64* %res, align 8, !dbg !19944
  %4 = load i64, i64* %res, align 8, !dbg !19950
  %cmp = icmp sge i64 %4, 0, !dbg !19952
  br i1 %cmp, label %if.then, label %if.end, !dbg !19953

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !19954
  store i64 %5, i64* %retval, align 8, !dbg !19955
  br label %return, !dbg !19955

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !19956
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19957
  %8 = load i64, i64* %res, align 8, !dbg !19958
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !19959
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19960
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !19961
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !19962
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !19963
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !19964
  call void %12(), !dbg !19965
  store i64 -1, i64* %retval, align 8, !dbg !19966
  br label %return, !dbg !19966

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !19967
  ret i64 %13, !dbg !19967
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19968 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19971, metadata !DIExpression()), !dbg !19972
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19973, metadata !DIExpression()), !dbg !19974
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19975, metadata !DIExpression()), !dbg !19976
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19977, metadata !DIExpression()), !dbg !19978
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19979, metadata !DIExpression()), !dbg !19980
  store i64 0, i64* %i, align 8, !dbg !19981
  br label %for.cond, !dbg !19983

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !19984
  %1 = load i64, i64* %i, align 8, !dbg !19986
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19984, !ctir !1115
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19984
  %tobool = icmp ne i8* %2, null, !dbg !19987
  br i1 %tobool, label %for.body, label %for.end, !dbg !19987

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !19988
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !19990
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !19991
  %6 = load i64, i64* %i, align 8, !dbg !19992
  %mul = mul i64 %5, %6, !dbg !19993
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !19994, !ctir !184
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19995
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !19996
  %tobool1 = icmp ne i32 %call, 0, !dbg !19996
  br i1 %tobool1, label %if.end, label %if.then, !dbg !19997

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !19998
  %9 = load i64, i64* %i, align 8, !dbg !19999
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !19998, !ctir !1115
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !19998
  store i8* %10, i8** %retval, align 8, !dbg !20000
  br label %return, !dbg !20000

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !20001

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !20002
  %inc = add i64 %11, 1, !dbg !20002
  store i64 %inc, i64* %i, align 8, !dbg !20002
  br label %for.cond, !dbg !20003, !llvm.loop !20004

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !20006
  br label %return, !dbg !20006

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !20007
  ret i8* %12, !dbg !20007
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !20008 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20012, metadata !DIExpression()), !dbg !20013
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20014, metadata !DIExpression()), !dbg !20015
  %0 = load i64, i64* %x.addr, align 8, !dbg !20016
  %1 = load i32, i32* %n.addr, align 4, !dbg !20017
  %sh_prom = zext i32 %1 to i64, !dbg !20018
  %shl = shl i64 %0, %sh_prom, !dbg !20018
  %2 = load i64, i64* %x.addr, align 8, !dbg !20019
  %3 = load i32, i32* %n.addr, align 4, !dbg !20020
  %sub = sub nsw i32 64, %3, !dbg !20021
  %sh_prom1 = zext i32 %sub to i64, !dbg !20022
  %shr = lshr i64 %2, %sh_prom1, !dbg !20022
  %or = or i64 %shl, %shr, !dbg !20023
  ret i64 %or, !dbg !20024
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !20025 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20026, metadata !DIExpression()), !dbg !20027
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20028, metadata !DIExpression()), !dbg !20029
  %0 = load i64, i64* %x.addr, align 8, !dbg !20030
  %1 = load i32, i32* %n.addr, align 4, !dbg !20031
  %sh_prom = zext i32 %1 to i64, !dbg !20032
  %shr = lshr i64 %0, %sh_prom, !dbg !20032
  %2 = load i64, i64* %x.addr, align 8, !dbg !20033
  %3 = load i32, i32* %n.addr, align 4, !dbg !20034
  %sub = sub nsw i32 64, %3, !dbg !20035
  %sh_prom1 = zext i32 %sub to i64, !dbg !20036
  %shl = shl i64 %2, %sh_prom1, !dbg !20036
  %or = or i64 %shr, %shl, !dbg !20037
  ret i64 %or, !dbg !20038
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !20039 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20042, metadata !DIExpression()), !dbg !20043
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20044, metadata !DIExpression()), !dbg !20045
  %0 = load i32, i32* %x.addr, align 4, !dbg !20046
  %1 = load i32, i32* %n.addr, align 4, !dbg !20047
  %shl = shl i32 %0, %1, !dbg !20048
  %2 = load i32, i32* %x.addr, align 4, !dbg !20049
  %3 = load i32, i32* %n.addr, align 4, !dbg !20050
  %sub = sub nsw i32 32, %3, !dbg !20051
  %shr = lshr i32 %2, %sub, !dbg !20052
  %or = or i32 %shl, %shr, !dbg !20053
  ret i32 %or, !dbg !20054
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !20055 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20056, metadata !DIExpression()), !dbg !20057
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20058, metadata !DIExpression()), !dbg !20059
  %0 = load i32, i32* %x.addr, align 4, !dbg !20060
  %1 = load i32, i32* %n.addr, align 4, !dbg !20061
  %shr = lshr i32 %0, %1, !dbg !20062
  %2 = load i32, i32* %x.addr, align 4, !dbg !20063
  %3 = load i32, i32* %n.addr, align 4, !dbg !20064
  %sub = sub nsw i32 32, %3, !dbg !20065
  %shl = shl i32 %2, %sub, !dbg !20066
  %or = or i32 %shr, %shl, !dbg !20067
  ret i32 %or, !dbg !20068
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !20069 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20072, metadata !DIExpression()), !dbg !20073
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20074, metadata !DIExpression()), !dbg !20075
  %0 = load i64, i64* %x.addr, align 8, !dbg !20076
  %1 = load i32, i32* %n.addr, align 4, !dbg !20077
  %sh_prom = zext i32 %1 to i64, !dbg !20078
  %shl = shl i64 %0, %sh_prom, !dbg !20078
  %2 = load i64, i64* %x.addr, align 8, !dbg !20079
  %3 = load i32, i32* %n.addr, align 4, !dbg !20080
  %conv = sext i32 %3 to i64, !dbg !20080
  %sub = sub i64 64, %conv, !dbg !20081
  %shr = lshr i64 %2, %sub, !dbg !20082
  %or = or i64 %shl, %shr, !dbg !20083
  ret i64 %or, !dbg !20084
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !20085 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20086, metadata !DIExpression()), !dbg !20087
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20088, metadata !DIExpression()), !dbg !20089
  %0 = load i64, i64* %x.addr, align 8, !dbg !20090
  %1 = load i32, i32* %n.addr, align 4, !dbg !20091
  %sh_prom = zext i32 %1 to i64, !dbg !20092
  %shr = lshr i64 %0, %sh_prom, !dbg !20092
  %2 = load i64, i64* %x.addr, align 8, !dbg !20093
  %3 = load i32, i32* %n.addr, align 4, !dbg !20094
  %conv = sext i32 %3 to i64, !dbg !20094
  %sub = sub i64 64, %conv, !dbg !20095
  %shl = shl i64 %2, %sub, !dbg !20096
  %or = or i64 %shr, %shl, !dbg !20097
  ret i64 %or, !dbg !20098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !20099 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20104, metadata !DIExpression()), !dbg !20105
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20106, metadata !DIExpression()), !dbg !20107
  %0 = load i16, i16* %x.addr, align 2, !dbg !20108
  %conv = zext i16 %0 to i32, !dbg !20108
  %1 = load i32, i32* %n.addr, align 4, !dbg !20109
  %shl = shl i32 %conv, %1, !dbg !20110
  %2 = load i16, i16* %x.addr, align 2, !dbg !20111
  %conv1 = zext i16 %2 to i32, !dbg !20111
  %3 = load i32, i32* %n.addr, align 4, !dbg !20112
  %sub = sub nsw i32 16, %3, !dbg !20113
  %shr = ashr i32 %conv1, %sub, !dbg !20114
  %or = or i32 %shl, %shr, !dbg !20115
  %and = and i32 %or, 65535, !dbg !20116
  %conv2 = trunc i32 %and to i16, !dbg !20117
  ret i16 %conv2, !dbg !20118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !20119 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20120, metadata !DIExpression()), !dbg !20121
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20122, metadata !DIExpression()), !dbg !20123
  %0 = load i16, i16* %x.addr, align 2, !dbg !20124
  %conv = zext i16 %0 to i32, !dbg !20124
  %1 = load i32, i32* %n.addr, align 4, !dbg !20125
  %shr = ashr i32 %conv, %1, !dbg !20126
  %2 = load i16, i16* %x.addr, align 2, !dbg !20127
  %conv1 = zext i16 %2 to i32, !dbg !20127
  %3 = load i32, i32* %n.addr, align 4, !dbg !20128
  %sub = sub nsw i32 16, %3, !dbg !20129
  %shl = shl i32 %conv1, %sub, !dbg !20130
  %or = or i32 %shr, %shl, !dbg !20131
  %and = and i32 %or, 65535, !dbg !20132
  %conv2 = trunc i32 %and to i16, !dbg !20133
  ret i16 %conv2, !dbg !20134
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !20135 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20140, metadata !DIExpression()), !dbg !20141
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20142, metadata !DIExpression()), !dbg !20143
  %0 = load i8, i8* %x.addr, align 1, !dbg !20144
  %conv = zext i8 %0 to i32, !dbg !20144
  %1 = load i32, i32* %n.addr, align 4, !dbg !20145
  %shl = shl i32 %conv, %1, !dbg !20146
  %2 = load i8, i8* %x.addr, align 1, !dbg !20147
  %conv1 = zext i8 %2 to i32, !dbg !20147
  %3 = load i32, i32* %n.addr, align 4, !dbg !20148
  %sub = sub nsw i32 8, %3, !dbg !20149
  %shr = ashr i32 %conv1, %sub, !dbg !20150
  %or = or i32 %shl, %shr, !dbg !20151
  %and = and i32 %or, 255, !dbg !20152
  %conv2 = trunc i32 %and to i8, !dbg !20153
  ret i8 %conv2, !dbg !20154
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !20155 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20156, metadata !DIExpression()), !dbg !20157
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20158, metadata !DIExpression()), !dbg !20159
  %0 = load i8, i8* %x.addr, align 1, !dbg !20160
  %conv = zext i8 %0 to i32, !dbg !20160
  %1 = load i32, i32* %n.addr, align 4, !dbg !20161
  %shr = ashr i32 %conv, %1, !dbg !20162
  %2 = load i8, i8* %x.addr, align 1, !dbg !20163
  %conv1 = zext i8 %2 to i32, !dbg !20163
  %3 = load i32, i32* %n.addr, align 4, !dbg !20164
  %sub = sub nsw i32 8, %3, !dbg !20165
  %shl = shl i32 %conv1, %sub, !dbg !20166
  %or = or i32 %shr, %shl, !dbg !20167
  %and = and i32 %or, 255, !dbg !20168
  %conv2 = trunc i32 %and to i8, !dbg !20169
  ret i8 %conv2, !dbg !20170
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #10 !dbg !20171 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !571
  %p2 = alloca i8*, align 8, !ctir !571
  %c1 = alloca i8, align 1, !ctir !573
  %c2 = alloca i8, align 1, !ctir !573
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20173, metadata !DIExpression()), !dbg !20174
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20175, metadata !DIExpression()), !dbg !20176
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !20177, metadata !DIExpression()), !dbg !20178
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !20179
  store i8* %0, i8** %p1, align 8, !dbg !20178
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !20180, metadata !DIExpression()), !dbg !20181
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !20182
  store i8* %1, i8** %p2, align 8, !dbg !20181
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !20183, metadata !DIExpression()), !dbg !20184
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !20185, metadata !DIExpression()), !dbg !20186
  %2 = load i8*, i8** %p1, align 8, !dbg !20187
  %3 = load i8*, i8** %p2, align 8, !dbg !20189
  %cmp = icmp eq i8* %2, %3, !dbg !20190
  br i1 %cmp, label %if.then, label %if.end, !dbg !20191

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20192
  br label %return, !dbg !20192

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !20193

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !20194
  %5 = load i8, i8* %4, align 1, !dbg !20196, !ctir !572
  %conv = zext i8 %5 to i32, !dbg !20196
  %call = call i32 @c_tolower(i32 %conv), !dbg !20197
  %conv1 = trunc i32 %call to i8, !dbg !20197
  store i8 %conv1, i8* %c1, align 1, !dbg !20198
  %6 = load i8*, i8** %p2, align 8, !dbg !20199
  %7 = load i8, i8* %6, align 1, !dbg !20200, !ctir !572
  %conv2 = zext i8 %7 to i32, !dbg !20200
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !20201
  %conv4 = trunc i32 %call3 to i8, !dbg !20201
  store i8 %conv4, i8* %c2, align 1, !dbg !20202
  %8 = load i8, i8* %c1, align 1, !dbg !20203
  %conv5 = zext i8 %8 to i32, !dbg !20203
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !20205
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !20206

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !20207

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !20208
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !20208, !ctir !572
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !20208
  %10 = load i8*, i8** %p2, align 8, !dbg !20209
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !20209, !ctir !572
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !20209
  br label %do.cond, !dbg !20210

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !20211
  %conv11 = zext i8 %11 to i32, !dbg !20211
  %12 = load i8, i8* %c2, align 1, !dbg !20212
  %conv12 = zext i8 %12 to i32, !dbg !20212
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !20213
  br i1 %cmp13, label %do.body, label %do.end, !dbg !20210, !llvm.loop !20214

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !20216
  %conv15 = zext i8 %13 to i32, !dbg !20216
  %14 = load i8, i8* %c2, align 1, !dbg !20218
  %conv16 = zext i8 %14 to i32, !dbg !20218
  %sub = sub nsw i32 %conv15, %conv16, !dbg !20219
  store i32 %sub, i32* %retval, align 4, !dbg !20220
  br label %return, !dbg !20220

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !20221
  ret i32 %15, !dbg !20221
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !20222 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !1672
  %prev_fail = alloca i8, align 1, !ctir !1672
  %fclose_fail = alloca i8, align 1, !ctir !1672
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !20260, metadata !DIExpression()), !dbg !20261
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !20262, metadata !DIExpression()), !dbg !20263
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20264
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !20265
  %cmp = icmp ne i64 %call, 0, !dbg !20266
  %frombool = zext i1 %cmp to i8, !dbg !20263
  store i8 %frombool, i8* %some_pending, align 1, !dbg !20263
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !20267, metadata !DIExpression()), !dbg !20268
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20269
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !20269
  %cmp2 = icmp ne i32 %call1, 0, !dbg !20270
  %frombool3 = zext i1 %cmp2 to i8, !dbg !20268
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !20268
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !20271, metadata !DIExpression()), !dbg !20272
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20273
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !20274
  %cmp5 = icmp ne i32 %call4, 0, !dbg !20275
  %frombool6 = zext i1 %cmp5 to i8, !dbg !20272
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !20272
  %3 = load i8, i8* %prev_fail, align 1, !dbg !20276
  %tobool = trunc i8 %3 to i1, !dbg !20276
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !20278

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !20279
  %tobool7 = trunc i8 %4 to i1, !dbg !20279
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !20280

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !20281
  %tobool8 = trunc i8 %5 to i1, !dbg !20281
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !20282

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !20283
  %6 = load i32, i32* %call10, align 4, !dbg !20283, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !20284
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !20285

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !20286
  %tobool12 = trunc i8 %7 to i1, !dbg !20286
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !20289

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !20290
  store i32 0, i32* %call14, align 4, !dbg !20291, !ctir !7
  br label %if.end, !dbg !20290

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !20292
  br label %return, !dbg !20292

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !20293
  br label %return, !dbg !20293

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !20294
  ret i32 %8, !dbg !20294
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !20295 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !662
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !662
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20299, metadata !DIExpression()), !dbg !20300
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !20301, metadata !DIExpression()), !dbg !20302
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20303
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !20304
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !20302
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20305
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !20305
  br i1 %tobool, label %if.then, label %if.end17, !dbg !20307

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20308, metadata !DIExpression()), !dbg !20310
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20311
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #9, !dbg !20312
  store i32 %call1, i32* %fd, align 4, !dbg !20310
  %3 = load i32, i32* %fd, align 4, !dbg !20313
  %cmp = icmp sle i32 0, %3, !dbg !20315
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !20316

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !20317
  %cmp2 = icmp sle i32 %4, 2, !dbg !20318
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !20319

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !20320, metadata !DIExpression()), !dbg !20322
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20323, metadata !DIExpression()), !dbg !20324
  call void @llvm.dbg.declare(metadata i32* %f, metadata !20325, metadata !DIExpression()), !dbg !20326
  %5 = load i32, i32* %fd, align 4, !dbg !20327
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !20328
  store i32 %call4, i32* %f, align 4, !dbg !20326
  %6 = load i32, i32* %f, align 4, !dbg !20329
  %cmp5 = icmp slt i32 %6, 0, !dbg !20331
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !20332

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #16, !dbg !20333
  %7 = load i32, i32* %call7, align 4, !dbg !20333, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !20335
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !20336
  br label %if.end13, !dbg !20337

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !20338
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !20340
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !20341
  %call9 = call i32* @__errno_location() #16, !dbg !20342
  %9 = load i32, i32* %call9, align 4, !dbg !20342, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !20343
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20344
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !20344
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !20346

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !20347
  %call12 = call i32 @close(i32 %11), !dbg !20348
  br label %if.end, !dbg !20348

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20349
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !20350
  %13 = load i32, i32* %e, align 4, !dbg !20351
  %call15 = call i32* @__errno_location() #16, !dbg !20352
  store i32 %13, i32* %call15, align 4, !dbg !20353, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20354
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !20355
  br label %if.end16, !dbg !20356

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !20357

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20358
  ret %struct.__dirstream* %15, !dbg !20359
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !20360 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !20369, metadata !DIExpression()), !dbg !20370
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !20371
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #9, !dbg !20372
  ret void, !dbg !20373
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !20374 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !20377, metadata !DIExpression()), !dbg !20378
  call void @gettime(%struct.timespec* %retval), !dbg !20379
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !20380
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !20380
  ret { i64, i64 } %1, !dbg !20380
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !20381 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !142
  %p = alloca i8*, align 8, !ctir !183
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !20383, metadata !DIExpression()), !dbg !20384
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !20385, metadata !DIExpression()), !dbg !20386
  store i8 1, i8* %hard, align 1, !dbg !20386
  call void @llvm.dbg.declare(metadata i8** %p, metadata !20387, metadata !DIExpression()), !dbg !20388
  %0 = load i32, i32* %category.addr, align 4, !dbg !20389
  %call = call i8* @setlocale(i32 %0, i8* null) #9, !dbg !20390
  store i8* %call, i8** %p, align 8, !dbg !20388
  %1 = load i8*, i8** %p, align 8, !dbg !20391
  %tobool = icmp ne i8* %1, null, !dbg !20391
  br i1 %tobool, label %if.then, label %if.end5, !dbg !20393

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !20394
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.504, i64 0, i64 0)) #14, !dbg !20399
  %cmp = icmp eq i32 %call1, 0, !dbg !20400
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !20401

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !20402
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.505, i64 0, i64 0)) #14, !dbg !20403
  %cmp3 = icmp eq i32 %call2, 0, !dbg !20404
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20405

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !20406
  br label %if.end, !dbg !20407

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !20408

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !20409
  %tobool6 = trunc i8 %4 to i1, !dbg !20409
  ret i1 %tobool6, !dbg !20410
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #10 !dbg !20411 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !183
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20413, metadata !DIExpression()), !dbg !20414
  store i64 %tablesize, i64* %tablesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !20415, metadata !DIExpression()), !dbg !20416
  call void @llvm.dbg.declare(metadata i8** %s, metadata !20417, metadata !DIExpression()), !dbg !20418
  call void @llvm.dbg.declare(metadata i64* %h, metadata !20419, metadata !DIExpression()), !dbg !20420
  store i64 0, i64* %h, align 8, !dbg !20420
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20421
  store i8* %0, i8** %s, align 8, !dbg !20423
  br label %for.cond, !dbg !20424

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !20425
  %2 = load i8, i8* %1, align 1, !dbg !20427, !ctir !184
  %tobool = icmp ne i8 %2, 0, !dbg !20428
  br i1 %tobool, label %for.body, label %for.end, !dbg !20428

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !20429
  %4 = load i8, i8* %3, align 1, !dbg !20430, !ctir !184
  %conv = sext i8 %4 to i64, !dbg !20430
  %5 = load i64, i64* %h, align 8, !dbg !20431
  %shl = shl i64 %5, 9, !dbg !20432
  %6 = load i64, i64* %h, align 8, !dbg !20433
  %shr = lshr i64 %6, 55, !dbg !20434
  %or = or i64 %shl, %shr, !dbg !20435
  %add = add i64 %conv, %or, !dbg !20436
  store i64 %add, i64* %h, align 8, !dbg !20437
  br label %for.inc, !dbg !20438

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !20439
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !20439, !ctir !184
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !20439
  br label %for.cond, !dbg !20440, !llvm.loop !20441

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !20443
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !20444
  %rem = urem i64 %8, %9, !dbg !20445
  ret i64 %rem, !dbg !20446
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !20447 {
entry:
  %codeset = alloca i8*, align 8, !ctir !183
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !20450, metadata !DIExpression()), !dbg !20451
  %call = call i8* @nl_langinfo(i32 14) #9, !dbg !20452
  store i8* %call, i8** %codeset, align 8, !dbg !20453
  %0 = load i8*, i8** %codeset, align 8, !dbg !20454
  %cmp = icmp eq i8* %0, null, !dbg !20456
  br i1 %cmp, label %if.then, label %if.end, !dbg !20457

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.510, i64 0, i64 0), i8** %codeset, align 8, !dbg !20458
  br label %if.end, !dbg !20459

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !20460
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !20460, !ctir !183
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20460
  %conv = sext i8 %2 to i32, !dbg !20460
  %cmp1 = icmp eq i32 %conv, 0, !dbg !20464
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !20465

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.511, i64 0, i64 0), i8** %codeset, align 8, !dbg !20466
  br label %if.end4, !dbg !20467

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !20468
  ret i8* %3, !dbg !20469
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dirchownmod(i32 %fd, i8* %dir, i32 %mkdir_mode, i32 %owner, i32 %group, i32 %mode, i32 %mode_bits) #4 !dbg !20470 {
entry:
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %mkdir_mode.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %mode_bits.addr = alloca i32, align 4
  %st = alloca %struct.stat, align 8, !ctir !20474
  %result = alloca i32, align 4, !ctir !7
  %dir_mode = alloca i32, align 4, !ctir !139
  %indeterminate = alloca i32, align 4, !ctir !139
  %chmod_mode = alloca i32, align 4, !ctir !139
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20495, metadata !DIExpression()), !dbg !20496
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20497, metadata !DIExpression()), !dbg !20498
  store i32 %mkdir_mode, i32* %mkdir_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode.addr, metadata !20499, metadata !DIExpression()), !dbg !20500
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !20501, metadata !DIExpression()), !dbg !20502
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !20503, metadata !DIExpression()), !dbg !20504
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20505, metadata !DIExpression()), !dbg !20506
  store i32 %mode_bits, i32* %mode_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !20507, metadata !DIExpression()), !dbg !20508
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !20509, metadata !DIExpression()), !dbg !20510
  call void @llvm.dbg.declare(metadata i32* %result, metadata !20511, metadata !DIExpression()), !dbg !20512
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20513
  %cmp = icmp slt i32 %0, 0, !dbg !20514
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20513

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20515
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !20516
  br label %cond.end, !dbg !20513

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !20517
  %call1 = call i32 @fstat(i32 %2, %struct.stat* %st) #9, !dbg !20518
  br label %cond.end, !dbg !20513

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20513
  store i32 %cond, i32* %result, align 4, !dbg !20512
  %3 = load i32, i32* %result, align 4, !dbg !20519
  %cmp2 = icmp eq i32 %3, 0, !dbg !20521
  br i1 %cmp2, label %if.then, label %if.end54, !dbg !20522

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %dir_mode, metadata !20523, metadata !DIExpression()), !dbg !20525
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !20526, !ctir !20474
  %4 = load i32, i32* %st_mode, align 8, !dbg !20526, !ctir !140
  store i32 %4, i32* %dir_mode, align 4, !dbg !20525
  %5 = load i32, i32* %dir_mode, align 4, !dbg !20527
  %and = and i32 %5, 61440, !dbg !20527
  %cmp3 = icmp eq i32 %and, 16384, !dbg !20527
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !20529

if.then4:                                         ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !20530
  store i32 20, i32* %call5, align 4, !dbg !20532, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !20533
  br label %if.end53, !dbg !20534

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %indeterminate, metadata !20535, metadata !DIExpression()), !dbg !20537
  store i32 0, i32* %indeterminate, align 4, !dbg !20537
  %6 = load i32, i32* %owner.addr, align 4, !dbg !20538
  %cmp6 = icmp ne i32 %6, -1, !dbg !20540
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !20541

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, i32* %owner.addr, align 4, !dbg !20542
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !20543, !ctir !20474
  %8 = load i32, i32* %st_uid, align 4, !dbg !20543, !ctir !128
  %cmp7 = icmp ne i32 %7, %8, !dbg !20544
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !20545

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %9 = load i32, i32* %group.addr, align 4, !dbg !20546
  %cmp8 = icmp ne i32 %9, -1, !dbg !20547
  br i1 %cmp8, label %land.lhs.true9, label %if.end30, !dbg !20548

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %group.addr, align 4, !dbg !20549
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !20550, !ctir !20474
  %11 = load i32, i32* %st_gid, align 8, !dbg !20550, !ctir !130
  %cmp10 = icmp ne i32 %10, %11, !dbg !20551
  br i1 %cmp10, label %if.then11, label %if.end30, !dbg !20552

if.then11:                                        ; preds = %land.lhs.true9, %land.lhs.true
  %12 = load i32, i32* %fd.addr, align 4, !dbg !20553
  %cmp12 = icmp sle i32 0, %12, !dbg !20555
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !20556

cond.true13:                                      ; preds = %if.then11
  %13 = load i32, i32* %fd.addr, align 4, !dbg !20557
  %14 = load i32, i32* %owner.addr, align 4, !dbg !20558
  %15 = load i32, i32* %group.addr, align 4, !dbg !20559
  %call14 = call i32 @fchown(i32 %13, i32 %14, i32 %15) #9, !dbg !20560
  br label %cond.end23, !dbg !20556

cond.false15:                                     ; preds = %if.then11
  %16 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20561
  %cmp16 = icmp ne i32 %16, -1, !dbg !20562
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !20561

cond.true17:                                      ; preds = %cond.false15
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !20563
  %18 = load i32, i32* %owner.addr, align 4, !dbg !20564
  %19 = load i32, i32* %group.addr, align 4, !dbg !20565
  %call18 = call i32 @lchown(i8* %17, i32 %18, i32 %19) #9, !dbg !20566
  br label %cond.end21, !dbg !20561

cond.false19:                                     ; preds = %cond.false15
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20567
  %21 = load i32, i32* %owner.addr, align 4, !dbg !20568
  %22 = load i32, i32* %group.addr, align 4, !dbg !20569
  %call20 = call i32 @chown(i8* %20, i32 %21, i32 %22) #9, !dbg !20570
  br label %cond.end21, !dbg !20561

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !20561
  br label %cond.end23, !dbg !20556

cond.end23:                                       ; preds = %cond.end21, %cond.true13
  %cond24 = phi i32 [ %call14, %cond.true13 ], [ %cond22, %cond.end21 ], !dbg !20556
  store i32 %cond24, i32* %result, align 4, !dbg !20571
  %23 = load i32, i32* %result, align 4, !dbg !20572
  %cmp25 = icmp eq i32 %23, 0, !dbg !20574
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !20575

land.lhs.true26:                                  ; preds = %cond.end23
  %24 = load i32, i32* %dir_mode, align 4, !dbg !20576
  %and27 = and i32 %24, 73, !dbg !20577
  %tobool = icmp ne i32 %and27, 0, !dbg !20577
  br i1 %tobool, label %if.then28, label %if.end, !dbg !20578

if.then28:                                        ; preds = %land.lhs.true26
  %25 = load i32, i32* %dir_mode, align 4, !dbg !20579
  %and29 = and i32 %25, 3072, !dbg !20580
  store i32 %and29, i32* %indeterminate, align 4, !dbg !20581
  br label %if.end, !dbg !20582

if.end:                                           ; preds = %if.then28, %land.lhs.true26, %cond.end23
  br label %if.end30, !dbg !20583

if.end30:                                         ; preds = %if.end, %land.lhs.true9, %lor.lhs.false
  %26 = load i32, i32* %result, align 4, !dbg !20584
  %cmp31 = icmp eq i32 %26, 0, !dbg !20586
  br i1 %cmp31, label %land.lhs.true32, label %if.end52, !dbg !20587

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load i32, i32* %dir_mode, align 4, !dbg !20588
  %28 = load i32, i32* %mode.addr, align 4, !dbg !20589
  %xor = xor i32 %27, %28, !dbg !20590
  %29 = load i32, i32* %indeterminate, align 4, !dbg !20591
  %or = or i32 %xor, %29, !dbg !20592
  %30 = load i32, i32* %mode_bits.addr, align 4, !dbg !20593
  %and33 = and i32 %or, %30, !dbg !20594
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20594
  br i1 %tobool34, label %if.then35, label %if.end52, !dbg !20595

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %chmod_mode, metadata !20596, metadata !DIExpression()), !dbg !20598
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20599
  %32 = load i32, i32* %dir_mode, align 4, !dbg !20600
  %and36 = and i32 %32, 4095, !dbg !20601
  %33 = load i32, i32* %mode_bits.addr, align 4, !dbg !20602
  %neg = xor i32 %33, -1, !dbg !20603
  %and37 = and i32 %and36, %neg, !dbg !20604
  %or38 = or i32 %31, %and37, !dbg !20605
  store i32 %or38, i32* %chmod_mode, align 4, !dbg !20598
  %34 = load i32, i32* %fd.addr, align 4, !dbg !20606
  %cmp39 = icmp sle i32 0, %34, !dbg !20607
  br i1 %cmp39, label %cond.true40, label %cond.false42, !dbg !20608

cond.true40:                                      ; preds = %if.then35
  %35 = load i32, i32* %fd.addr, align 4, !dbg !20609
  %36 = load i32, i32* %chmod_mode, align 4, !dbg !20610
  %call41 = call i32 @fchmod(i32 %35, i32 %36) #9, !dbg !20611
  br label %cond.end50, !dbg !20608

cond.false42:                                     ; preds = %if.then35
  %37 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20612
  %cmp43 = icmp ne i32 %37, -1, !dbg !20613
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !20612

cond.true44:                                      ; preds = %cond.false42
  %38 = load i8*, i8** %dir.addr, align 8, !dbg !20614
  %39 = load i32, i32* %chmod_mode, align 4, !dbg !20615
  %call45 = call i32 @chmod(i8* %38, i32 %39) #9, !dbg !20616
  br label %cond.end48, !dbg !20612

cond.false46:                                     ; preds = %cond.false42
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !20617
  %41 = load i32, i32* %chmod_mode, align 4, !dbg !20618
  %call47 = call i32 @chmod(i8* %40, i32 %41) #9, !dbg !20619
  br label %cond.end48, !dbg !20612

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !20612
  br label %cond.end50, !dbg !20608

cond.end50:                                       ; preds = %cond.end48, %cond.true40
  %cond51 = phi i32 [ %call41, %cond.true40 ], [ %cond49, %cond.end48 ], !dbg !20608
  store i32 %cond51, i32* %result, align 4, !dbg !20620
  br label %if.end52, !dbg !20621

if.end52:                                         ; preds = %cond.end50, %land.lhs.true32, %if.end30
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then4
  br label %if.end54, !dbg !20622

if.end54:                                         ; preds = %if.end53, %cond.end
  %42 = load i32, i32* %fd.addr, align 4, !dbg !20623
  %cmp55 = icmp sle i32 0, %42, !dbg !20625
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !20626

if.then56:                                        ; preds = %if.end54
  %43 = load i32, i32* %result, align 4, !dbg !20627
  %cmp57 = icmp eq i32 %43, 0, !dbg !20630
  br i1 %cmp57, label %if.then58, label %if.else60, !dbg !20631

if.then58:                                        ; preds = %if.then56
  %44 = load i32, i32* %fd.addr, align 4, !dbg !20632
  %call59 = call i32 @close(i32 %44), !dbg !20633
  store i32 %call59, i32* %result, align 4, !dbg !20634
  br label %if.end64, !dbg !20635

if.else60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20636, metadata !DIExpression()), !dbg !20638
  %call61 = call i32* @__errno_location() #16, !dbg !20639
  %45 = load i32, i32* %call61, align 4, !dbg !20639, !ctir !7
  store i32 %45, i32* %e, align 4, !dbg !20638
  %46 = load i32, i32* %fd.addr, align 4, !dbg !20640
  %call62 = call i32 @close(i32 %46), !dbg !20641
  %47 = load i32, i32* %e, align 4, !dbg !20642
  %call63 = call i32* @__errno_location() #16, !dbg !20643
  store i32 %47, i32* %call63, align 4, !dbg !20644, !ctir !7
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then58
  br label %if.end65, !dbg !20645

if.end65:                                         ; preds = %if.end64, %if.end54
  %48 = load i32, i32* %result, align 4, !dbg !20646
  ret i32 %48, !dbg !20647
}

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !20648 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1693
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20652, metadata !DIExpression()), !dbg !20653
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !20654, metadata !DIExpression()), !dbg !20655
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20656, metadata !DIExpression()), !dbg !20657
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !20658, metadata !DIExpression()), !dbg !20659
  store i32 0, i32* %mode, align 4, !dbg !20659
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20660
  %and = and i32 %0, 64, !dbg !20662
  %tobool = icmp ne i32 %and, 0, !dbg !20662
  br i1 %tobool, label %if.then, label %if.end, !dbg !20663

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !20664, metadata !DIExpression()), !dbg !20666
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20667, !ctir !1693
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !20667
  call void @llvm.va_start(i8* %arraydecay1), !dbg !20667
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20668, !ctir !1693
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !20668
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !20668
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !20668
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !20668

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !20668
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !20668
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !20668
  %3 = bitcast i8* %2 to i32*, !dbg !20668
  %4 = add i32 %gp_offset, 8, !dbg !20668
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !20668
  br label %vaarg.end, !dbg !20668

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !20668
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !20668
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !20668
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !20668
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !20668
  br label %vaarg.end, !dbg !20668

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !20668
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !20668
  store i32 %6, i32* %mode, align 4, !dbg !20669
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20670, !ctir !1693
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !20670
  call void @llvm.va_end(i8* %arraydecay34), !dbg !20670
  br label %if.end, !dbg !20671

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20672
  %8 = load i8*, i8** %file.addr, align 8, !dbg !20673
  %9 = load i32, i32* %flags.addr, align 4, !dbg !20674
  %10 = load i32, i32* %mode, align 4, !dbg !20675
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !20676
  %call5 = call i32 @fd_safer(i32 %call), !dbg !20677
  ret i32 %call5, !dbg !20678
}

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !20679 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !1705
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !20682, metadata !DIExpression()), !dbg !20683
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20684, metadata !DIExpression()), !dbg !20685
  %call = call noalias i8* @xmalloc(i64 24), !dbg !20686
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !20686
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !20685
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !20687
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20688
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !20689, !ctir !1706
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !20690, !ctir !1710
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20691
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !20692, !ctir !1706
  store i64 0, i64* %randmax, align 8, !dbg !20693, !ctir !1714
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20694
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !20695, !ctir !1706
  store i64 0, i64* %randnum, align 8, !dbg !20696, !ctir !1714
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20697
  ret %struct.randint_source* %5, !dbg !20698
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !20699 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1710
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20702, metadata !DIExpression()), !dbg !20703
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20704, metadata !DIExpression()), !dbg !20705
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20706, metadata !DIExpression()), !dbg !20707
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20708
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20709
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !20710
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !20707
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20711
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !20711
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20711

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20712
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !20713
  br label %cond.end, !dbg !20711

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !20711
  ret %struct.randint_source* %cond, !dbg !20714
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #10 !dbg !20715 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20720, metadata !DIExpression()), !dbg !20721
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20722
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20723, !ctir !20719
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20723, !ctir !1710
  ret %struct.randread_source* %1, !dbg !20724
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !20725 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1710
  %randnum = alloca i64, align 8, !ctir !1714
  %randmax = alloca i64, align 8, !ctir !1714
  %choices = alloca i64, align 8, !ctir !1714
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !1714
  %buf = alloca [8 x i8], align 1, !ctir !1716
  %excess_choices = alloca i64, align 8, !ctir !1714
  %unusable_choices = alloca i64, align 8, !ctir !1714
  %last_usable_choice = alloca i64, align 8, !ctir !1714
  %reduced_randnum = alloca i64, align 8, !ctir !1714
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20728, metadata !DIExpression()), !dbg !20729
  store i64 %genmax, i64* %genmax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !20730, metadata !DIExpression()), !dbg !20731
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20732, metadata !DIExpression()), !dbg !20733
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20734
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20735, !ctir !1706
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !20735, !ctir !1710
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !20733
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !20736, metadata !DIExpression()), !dbg !20737
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20738
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !20739, !ctir !1706
  %3 = load i64, i64* %randnum2, align 8, !dbg !20739, !ctir !1714
  store i64 %3, i64* %randnum, align 8, !dbg !20737
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !20740, metadata !DIExpression()), !dbg !20741
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20742
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !20743, !ctir !1706
  %5 = load i64, i64* %randmax3, align 8, !dbg !20743, !ctir !1714
  store i64 %5, i64* %randmax, align 8, !dbg !20741
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !20744, metadata !DIExpression()), !dbg !20745
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !20746
  %add = add i64 %6, 1, !dbg !20747
  store i64 %add, i64* %choices, align 8, !dbg !20745
  br label %while.body, !dbg !20748

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !20749
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !20752
  %cmp = icmp ult i64 %7, %8, !dbg !20753
  br i1 %cmp, label %if.then, label %if.end, !dbg !20754

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20755, metadata !DIExpression()), !dbg !20757
  store i64 0, i64* %i, align 8, !dbg !20757
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !20758, metadata !DIExpression()), !dbg !20759
  %9 = load i64, i64* %randmax, align 8, !dbg !20760
  store i64 %9, i64* %rmax, align 8, !dbg !20759
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !20761, metadata !DIExpression()), !dbg !20762
  br label %do.body, !dbg !20763

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !20764
  %call = call i64 @shift_left(i64 %10), !dbg !20766
  %add4 = add i64 %call, 255, !dbg !20767
  store i64 %add4, i64* %rmax, align 8, !dbg !20768
  %11 = load i64, i64* %i, align 8, !dbg !20769
  %inc = add i64 %11, 1, !dbg !20769
  store i64 %inc, i64* %i, align 8, !dbg !20769
  br label %do.cond, !dbg !20770

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !20771
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !20772
  %cmp5 = icmp ult i64 %12, %13, !dbg !20773
  br i1 %cmp5, label %do.body, label %do.end, !dbg !20770, !llvm.loop !20774

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20776
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !20777, !ctir !1716
  %15 = load i64, i64* %i, align 8, !dbg !20778
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !20779
  store i64 0, i64* %i, align 8, !dbg !20780
  br label %do.body6, !dbg !20781

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !20782
  %call7 = call i64 @shift_left(i64 %16), !dbg !20784
  %17 = load i64, i64* %i, align 8, !dbg !20785
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !20786, !ctir !1716
  %18 = load i8, i8* %arrayidx, align 1, !dbg !20786
  %conv = zext i8 %18 to i64, !dbg !20786
  %add8 = add i64 %call7, %conv, !dbg !20787
  store i64 %add8, i64* %randnum, align 8, !dbg !20788
  %19 = load i64, i64* %randmax, align 8, !dbg !20789
  %call9 = call i64 @shift_left(i64 %19), !dbg !20790
  %add10 = add i64 %call9, 255, !dbg !20791
  store i64 %add10, i64* %randmax, align 8, !dbg !20792
  %20 = load i64, i64* %i, align 8, !dbg !20793
  %inc11 = add i64 %20, 1, !dbg !20793
  store i64 %inc11, i64* %i, align 8, !dbg !20793
  br label %do.cond12, !dbg !20794

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !20795
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !20796
  %cmp13 = icmp ult i64 %21, %22, !dbg !20797
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !20794, !llvm.loop !20798

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !20800

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !20801
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !20803
  %cmp16 = icmp eq i64 %23, %24, !dbg !20804
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !20805

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20806
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !20808, !ctir !1706
  store i64 0, i64* %randmax19, align 8, !dbg !20809, !ctir !1714
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20810
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !20811, !ctir !1706
  store i64 0, i64* %randnum20, align 8, !dbg !20812, !ctir !1714
  %27 = load i64, i64* %randnum, align 8, !dbg !20813
  store i64 %27, i64* %retval, align 8, !dbg !20814
  br label %return, !dbg !20814

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !20815, metadata !DIExpression()), !dbg !20817
  %28 = load i64, i64* %randmax, align 8, !dbg !20818
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !20819
  %sub = sub i64 %28, %29, !dbg !20820
  store i64 %sub, i64* %excess_choices, align 8, !dbg !20817
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !20821, metadata !DIExpression()), !dbg !20822
  %30 = load i64, i64* %excess_choices, align 8, !dbg !20823
  %31 = load i64, i64* %choices, align 8, !dbg !20824
  %rem = urem i64 %30, %31, !dbg !20825
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !20822
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !20826, metadata !DIExpression()), !dbg !20827
  %32 = load i64, i64* %randmax, align 8, !dbg !20828
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !20829
  %sub21 = sub i64 %32, %33, !dbg !20830
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !20827
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !20831, metadata !DIExpression()), !dbg !20832
  %34 = load i64, i64* %randnum, align 8, !dbg !20833
  %35 = load i64, i64* %choices, align 8, !dbg !20834
  %rem22 = urem i64 %34, %35, !dbg !20835
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !20832
  %36 = load i64, i64* %randnum, align 8, !dbg !20836
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !20838
  %cmp23 = icmp ule i64 %36, %37, !dbg !20839
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !20840

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !20841
  %39 = load i64, i64* %choices, align 8, !dbg !20843
  %div = udiv i64 %38, %39, !dbg !20844
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20845
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !20846, !ctir !1706
  store i64 %div, i64* %randnum26, align 8, !dbg !20847, !ctir !1714
  %41 = load i64, i64* %excess_choices, align 8, !dbg !20848
  %42 = load i64, i64* %choices, align 8, !dbg !20849
  %div27 = udiv i64 %41, %42, !dbg !20850
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20851
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !20852, !ctir !1706
  store i64 %div27, i64* %randmax28, align 8, !dbg !20853, !ctir !1714
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !20854
  store i64 %44, i64* %retval, align 8, !dbg !20855
  br label %return, !dbg !20855

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !20856
  store i64 %45, i64* %randnum, align 8, !dbg !20857
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !20858
  %sub30 = sub i64 %46, 1, !dbg !20859
  store i64 %sub30, i64* %randmax, align 8, !dbg !20860
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !20748, !llvm.loop !20861

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !20863
  ret i64 %47, !dbg !20863
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !20864 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20867, metadata !DIExpression()), !dbg !20868
  %0 = load i64, i64* %x.addr, align 8, !dbg !20869
  %shl = shl i64 %0, 8, !dbg !20870
  ret i64 %shl, !dbg !20871
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !20872 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20875, metadata !DIExpression()), !dbg !20876
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20877
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !20877
  call void @explicit_bzero(i8* %1, i64 24) #9, !dbg !20878
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20879
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !20879
  call void @free(i8* %3) #9, !dbg !20880
  ret void, !dbg !20881
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !20882 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20885, metadata !DIExpression()), !dbg !20886
  call void @llvm.dbg.declare(metadata i32* %r, metadata !20887, metadata !DIExpression()), !dbg !20888
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20889
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20890, !ctir !1706
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20890, !ctir !1710
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !20891
  store i32 %call, i32* %r, align 4, !dbg !20888
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20892, metadata !DIExpression()), !dbg !20893
  %call1 = call i32* @__errno_location() #16, !dbg !20894
  %2 = load i32, i32* %call1, align 4, !dbg !20894, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !20893
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20895
  call void @randint_free(%struct.randint_source* %3), !dbg !20896
  %4 = load i32, i32* %e, align 4, !dbg !20897
  %call2 = call i32* @__errno_location() #16, !dbg !20898
  store i32 %4, i32* %call2, align 4, !dbg !20899, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !20900
  ret i32 %5, !dbg !20901
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !20902 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1720
  %s = alloca %struct.randread_source*, align 8, !ctir !1754
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20905, metadata !DIExpression()), !dbg !20906
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20907, metadata !DIExpression()), !dbg !20908
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20909
  %cmp = icmp eq i64 %0, 0, !dbg !20911
  br i1 %cmp, label %if.then, label %if.else, !dbg !20912

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !20913
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !20914
  br label %return, !dbg !20914

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !20915, metadata !DIExpression()), !dbg !20917
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !20917
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20918, metadata !DIExpression()), !dbg !20919
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20920
  %tobool = icmp ne i8* %1, null, !dbg !20920
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !20922

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !20923
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.524, i64 0, i64 0)), !dbg !20925
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !20926
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !20926
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !20927

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !20928
  br label %return, !dbg !20928

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !20929

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20930
  %4 = load i8*, i8** %name.addr, align 8, !dbg !20931
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !20932
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !20933
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20934
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !20934
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !20936

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20937
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20938
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !20939, !ctir !1755
  %c = bitcast %union.anon.128* %buf to [4096 x i8]*, !dbg !20940
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !20938, !ctir !356
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20941
  %cmp9 = icmp ult i64 4096, %8, !dbg !20941
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !20941

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !20941

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20941
  br label %cond.end, !dbg !20941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !20941
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #9, !dbg !20942
  br label %if.end19, !dbg !20942

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20943
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !20945, !ctir !1755
  %isaac = bitcast %union.anon.128* %buf12 to %struct.isaac*, !dbg !20946
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !20947, !ctir !1769
  store i64 0, i64* %buffered, align 8, !dbg !20948, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20949
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !20950, !ctir !1755
  %isaac14 = bitcast %union.anon.128* %buf13 to %struct.isaac*, !dbg !20951
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !20952, !ctir !1769
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !20953, !ctir !1773
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !20949, !ctir !1777
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !20949
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20954
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !20955
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20956
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !20957, !ctir !1755
  %isaac17 = bitcast %union.anon.128* %buf16 to %struct.isaac*, !dbg !20958
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !20959, !ctir !1769
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !20960
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20961
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !20962
  br label %return, !dbg !20962

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !20963
  ret %struct.randread_source* %16, !dbg !20963
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !20964 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !1754
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !20967, metadata !DIExpression()), !dbg !20968
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !20969, metadata !DIExpression()), !dbg !20970
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20971, metadata !DIExpression()), !dbg !20972
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !20973
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !20973
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !20972
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !20974
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20975
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !20976, !ctir !1755
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !20977, !ctir !1720
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20978
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !20979, !ctir !1755
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !20980, !ctir !1760
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !20981
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20982
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !20983, !ctir !1755
  store i8* %4, i8** %handler_arg2, align 8, !dbg !20984, !ctir !831
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20985
  ret %struct.randread_source* %6, !dbg !20986
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !20987 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !661
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !20990
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !111
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !111
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !127
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !127
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !20994, metadata !DIExpression()), !dbg !20995
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !20996, metadata !DIExpression()), !dbg !20997
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20998, metadata !DIExpression()), !dbg !20999
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !21000, metadata !DIExpression()), !dbg !21001
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !21002
  store i8* %0, i8** %buf, align 8, !dbg !21001
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !21003, metadata !DIExpression()), !dbg !21004
  store i64 0, i64* %seeded, align 8, !dbg !21004
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21005, metadata !DIExpression()), !dbg !21006
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.525, i64 0, i64 0), i32 0), !dbg !21007
  store i32 %call, i32* %fd, align 4, !dbg !21006
  %1 = load i32, i32* %fd, align 4, !dbg !21008
  %cmp = icmp sle i32 0, %1, !dbg !21010
  br i1 %cmp, label %if.then, label %if.end6, !dbg !21011

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !21012
  %3 = load i8*, i8** %buf, align 8, !dbg !21014
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !21015
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21015
  %cmp1 = icmp ult i64 %4, %5, !dbg !21015
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !21015

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !21015
  br label %cond.end, !dbg !21015

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21015
  br label %cond.end, !dbg !21015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !21015
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !21016
  store i64 %call2, i64* %seeded, align 8, !dbg !21017
  %8 = load i64, i64* %seeded, align 8, !dbg !21018
  %cmp3 = icmp slt i64 %8, 0, !dbg !21020
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !21021

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !21022
  br label %if.end, !dbg !21023

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !21024
  %call5 = call i32 @close(i32 %9), !dbg !21025
  br label %if.end6, !dbg !21026

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !21027
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !21027
  %cmp7 = icmp ult i64 %10, %11, !dbg !21027
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !21029

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !21030, metadata !DIExpression()), !dbg !21032
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !21033, metadata !DIExpression()), !dbg !21032
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !21032
  %13 = load i64, i64* %seeded, align 8, !dbg !21032
  %sub = sub i64 %12, %13, !dbg !21032
  %cmp9 = icmp ult i64 16, %sub, !dbg !21032
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !21032

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !21032

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !21032
  %15 = load i64, i64* %seeded, align 8, !dbg !21032
  %sub12 = sub i64 %14, %15, !dbg !21032
  br label %cond.end13, !dbg !21032

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !21032
  store i64 %cond14, i64* %nbytes, align 8, !dbg !21032
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #9, !dbg !21032
  %16 = load i8*, i8** %buf, align 8, !dbg !21032
  %17 = load i64, i64* %seeded, align 8, !dbg !21032
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21032, !ctir !10
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !21032
  %19 = load i64, i64* %nbytes, align 8, !dbg !21032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !21032
  %20 = load i64, i64* %nbytes, align 8, !dbg !21032
  %21 = load i64, i64* %seeded, align 8, !dbg !21032
  %add = add i64 %21, %20, !dbg !21032
  store i64 %add, i64* %seeded, align 8, !dbg !21032
  br label %if.end16, !dbg !21032

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !21034
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !21034
  %cmp17 = icmp ult i64 %22, %23, !dbg !21034
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !21036

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !21037, metadata !DIExpression()), !dbg !21039
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !21040, metadata !DIExpression()), !dbg !21039
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !21039
  %25 = load i64, i64* %seeded, align 8, !dbg !21039
  %sub21 = sub i64 %24, %25, !dbg !21039
  %cmp22 = icmp ult i64 4, %sub21, !dbg !21039
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !21039

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !21039

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !21039
  %27 = load i64, i64* %seeded, align 8, !dbg !21039
  %sub25 = sub i64 %26, %27, !dbg !21039
  br label %cond.end26, !dbg !21039

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !21039
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !21039
  %call28 = call i32 @getpid() #9, !dbg !21039
  store i32 %call28, i32* %v19, align 4, !dbg !21039
  %28 = load i8*, i8** %buf, align 8, !dbg !21039
  %29 = load i64, i64* %seeded, align 8, !dbg !21039
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !21039, !ctir !10
  %30 = bitcast i32* %v19 to i8*, !dbg !21039
  %31 = load i64, i64* %nbytes20, align 8, !dbg !21039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !21039
  %32 = load i64, i64* %nbytes20, align 8, !dbg !21039
  %33 = load i64, i64* %seeded, align 8, !dbg !21039
  %add30 = add i64 %33, %32, !dbg !21039
  store i64 %add30, i64* %seeded, align 8, !dbg !21039
  br label %if.end31, !dbg !21039

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !21041
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !21041
  %cmp32 = icmp ult i64 %34, %35, !dbg !21041
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !21043

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !21044, metadata !DIExpression()), !dbg !21046
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !21047, metadata !DIExpression()), !dbg !21046
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !21046
  %37 = load i64, i64* %seeded, align 8, !dbg !21046
  %sub36 = sub i64 %36, %37, !dbg !21046
  %cmp37 = icmp ult i64 4, %sub36, !dbg !21046
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !21046

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !21046

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !21046
  %39 = load i64, i64* %seeded, align 8, !dbg !21046
  %sub40 = sub i64 %38, %39, !dbg !21046
  br label %cond.end41, !dbg !21046

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !21046
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !21046
  %call43 = call i32 @getppid() #9, !dbg !21046
  store i32 %call43, i32* %v34, align 4, !dbg !21046
  %40 = load i8*, i8** %buf, align 8, !dbg !21046
  %41 = load i64, i64* %seeded, align 8, !dbg !21046
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !21046, !ctir !10
  %42 = bitcast i32* %v34 to i8*, !dbg !21046
  %43 = load i64, i64* %nbytes35, align 8, !dbg !21046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !21046
  %44 = load i64, i64* %nbytes35, align 8, !dbg !21046
  %45 = load i64, i64* %seeded, align 8, !dbg !21046
  %add45 = add i64 %45, %44, !dbg !21046
  store i64 %add45, i64* %seeded, align 8, !dbg !21046
  br label %if.end46, !dbg !21046

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !21048
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !21048
  %cmp47 = icmp ult i64 %46, %47, !dbg !21048
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !21050

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !21051, metadata !DIExpression()), !dbg !21053
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !21054, metadata !DIExpression()), !dbg !21053
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !21053
  %49 = load i64, i64* %seeded, align 8, !dbg !21053
  %sub51 = sub i64 %48, %49, !dbg !21053
  %cmp52 = icmp ult i64 4, %sub51, !dbg !21053
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !21053

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !21053

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !21053
  %51 = load i64, i64* %seeded, align 8, !dbg !21053
  %sub55 = sub i64 %50, %51, !dbg !21053
  br label %cond.end56, !dbg !21053

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !21053
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !21053
  %call58 = call i32 @getuid() #9, !dbg !21053
  store i32 %call58, i32* %v49, align 4, !dbg !21053
  %52 = load i8*, i8** %buf, align 8, !dbg !21053
  %53 = load i64, i64* %seeded, align 8, !dbg !21053
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !21053, !ctir !10
  %54 = bitcast i32* %v49 to i8*, !dbg !21053
  %55 = load i64, i64* %nbytes50, align 8, !dbg !21053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !21053
  %56 = load i64, i64* %nbytes50, align 8, !dbg !21053
  %57 = load i64, i64* %seeded, align 8, !dbg !21053
  %add60 = add i64 %57, %56, !dbg !21053
  store i64 %add60, i64* %seeded, align 8, !dbg !21053
  br label %if.end61, !dbg !21053

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !21055
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !21055
  %cmp62 = icmp ult i64 %58, %59, !dbg !21055
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !21057

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !21058, metadata !DIExpression()), !dbg !21060
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !21061, metadata !DIExpression()), !dbg !21060
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !21060
  %61 = load i64, i64* %seeded, align 8, !dbg !21060
  %sub66 = sub i64 %60, %61, !dbg !21060
  %cmp67 = icmp ult i64 4, %sub66, !dbg !21060
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !21060

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !21060

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !21060
  %63 = load i64, i64* %seeded, align 8, !dbg !21060
  %sub70 = sub i64 %62, %63, !dbg !21060
  br label %cond.end71, !dbg !21060

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !21060
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !21060
  %call73 = call i32 @getgid() #9, !dbg !21060
  store i32 %call73, i32* %v64, align 4, !dbg !21060
  %64 = load i8*, i8** %buf, align 8, !dbg !21060
  %65 = load i64, i64* %seeded, align 8, !dbg !21060
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !21060, !ctir !10
  %66 = bitcast i32* %v64 to i8*, !dbg !21060
  %67 = load i64, i64* %nbytes65, align 8, !dbg !21060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !21060
  %68 = load i64, i64* %nbytes65, align 8, !dbg !21060
  %69 = load i64, i64* %seeded, align 8, !dbg !21060
  %add75 = add i64 %69, %68, !dbg !21060
  store i64 %add75, i64* %seeded, align 8, !dbg !21060
  br label %if.end76, !dbg !21060

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !21062
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !21063 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !21064, metadata !DIExpression()), !dbg !21065
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !21066
  %tobool = icmp ne i8* %0, null, !dbg !21066
  br i1 %tobool, label %if.then, label %if.end, !dbg !21068

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !21069
  %call = call i32* @__errno_location() #16, !dbg !21070
  %2 = load i32, i32* %call, align 4, !dbg !21070, !ctir !7
  %call1 = call i32* @__errno_location() #16, !dbg !21071
  %3 = load i32, i32* %call1, align 4, !dbg !21071, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !21072
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21071

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.526, i64 0, i64 0)) #9, !dbg !21073
  br label %cond.end, !dbg !21071

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.527, i64 0, i64 0)) #9, !dbg !21074
  br label %cond.end, !dbg !21071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !21071
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !21075
  %call4 = call i8* @quote(i8* %4), !dbg !21076
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !21077
  br label %if.end, !dbg !21077

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !21078
  unreachable, !dbg !21078
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !21079 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21082, metadata !DIExpression()), !dbg !21083
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !21084, metadata !DIExpression()), !dbg !21085
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !21086
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21087
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !21088, !ctir !1755
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !21089, !ctir !1760
  ret void, !dbg !21090
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !21091 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21094, metadata !DIExpression()), !dbg !21095
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !21096, metadata !DIExpression()), !dbg !21097
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !21098
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21099
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !21100, !ctir !1755
  store i8* %0, i8** %handler_arg1, align 8, !dbg !21101, !ctir !831
  ret void, !dbg !21102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !21103 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21106, metadata !DIExpression()), !dbg !21107
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21108, metadata !DIExpression()), !dbg !21109
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21110, metadata !DIExpression()), !dbg !21111
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21112
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21114, !ctir !1755
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21114, !ctir !1720
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !21112
  br i1 %tobool, label %if.then, label %if.else, !dbg !21115

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21116
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !21117
  %4 = load i64, i64* %size.addr, align 8, !dbg !21118
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !21119
  br label %if.end, !dbg !21119

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21120
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !21121, !ctir !1755
  %isaac = bitcast %union.anon.128* %buf1 to %struct.isaac*, !dbg !21122
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !21123
  %7 = load i64, i64* %size.addr, align 8, !dbg !21124
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !21125
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !21126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !21127 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21131, metadata !DIExpression()), !dbg !21132
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21133, metadata !DIExpression()), !dbg !21134
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21135, metadata !DIExpression()), !dbg !21136
  br label %while.body, !dbg !21137

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21138, metadata !DIExpression()), !dbg !21140
  %0 = load i8*, i8** %p.addr, align 8, !dbg !21141
  %1 = load i64, i64* %size.addr, align 8, !dbg !21141
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21141
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !21141, !ctir !1755
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21141, !ctir !1720
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !21141
  store i64 %call, i64* %inbytes, align 8, !dbg !21140
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !21142, metadata !DIExpression()), !dbg !21143
  %call1 = call i32* @__errno_location() #16, !dbg !21144
  %4 = load i32, i32* %call1, align 4, !dbg !21144, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !21143
  %5 = load i64, i64* %inbytes, align 8, !dbg !21145
  %6 = load i8*, i8** %p.addr, align 8, !dbg !21146
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !21146, !ctir !573
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !21146
  %7 = load i64, i64* %inbytes, align 8, !dbg !21147
  %8 = load i64, i64* %size.addr, align 8, !dbg !21148
  %sub = sub i64 %8, %7, !dbg !21148
  store i64 %sub, i64* %size.addr, align 8, !dbg !21148
  %9 = load i64, i64* %size.addr, align 8, !dbg !21149
  %cmp = icmp eq i64 %9, 0, !dbg !21151
  br i1 %cmp, label %if.then, label %if.end, !dbg !21152

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !21153

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21154
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !21154, !ctir !1755
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !21154, !ctir !1720
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #9, !dbg !21154
  %tobool = icmp ne i32 %call3, 0, !dbg !21154
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21154

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !21155
  br label %cond.end, !dbg !21154

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !21154

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !21154
  %call4 = call i32* @__errno_location() #16, !dbg !21156
  store i32 %cond, i32* %call4, align 4, !dbg !21157, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21158
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !21159, !ctir !1755
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !21159, !ctir !1760
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21160
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !21161, !ctir !1755
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !21161, !ctir !831
  call void %14(i8* %16), !dbg !21158
  br label %while.body, !dbg !21137, !llvm.loop !21162

while.end:                                        ; preds = %if.then
  ret void, !dbg !21164
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !21165 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !1792
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !21169, metadata !DIExpression()), !dbg !21170
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21171, metadata !DIExpression()), !dbg !21172
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21173, metadata !DIExpression()), !dbg !21174
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21175, metadata !DIExpression()), !dbg !21176
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21177
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !21178, !ctir !1769
  %1 = load i64, i64* %buffered, align 8, !dbg !21178, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !21176
  br label %while.body, !dbg !21179

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !21180, metadata !DIExpression()), !dbg !21182
  %2 = load i8*, i8** %p.addr, align 8, !dbg !21183
  store i8* %2, i8** %char_p, align 8, !dbg !21182
  %3 = load i64, i64* %size.addr, align 8, !dbg !21184
  %4 = load i64, i64* %inbytes, align 8, !dbg !21186
  %cmp = icmp ule i64 %3, %4, !dbg !21187
  br i1 %cmp, label %if.then, label %if.end, !dbg !21188

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !21189
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21191
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !21192, !ctir !1769
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !21193
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !21191, !ctir !1789
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !21194, !ctir !573
  %7 = load i64, i64* %inbytes, align 8, !dbg !21195
  %idx.neg = sub i64 0, %7, !dbg !21196
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !21196, !ctir !573
  %8 = load i64, i64* %size.addr, align 8, !dbg !21197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !21198
  %9 = load i64, i64* %inbytes, align 8, !dbg !21199
  %10 = load i64, i64* %size.addr, align 8, !dbg !21200
  %sub = sub i64 %9, %10, !dbg !21201
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21202
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !21203, !ctir !1769
  store i64 %sub, i64* %buffered2, align 8, !dbg !21204, !ctir !55
  br label %return, !dbg !21205

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !21206
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21207
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !21208, !ctir !1769
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !21209
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !21207, !ctir !1789
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !21210, !ctir !573
  %14 = load i64, i64* %inbytes, align 8, !dbg !21211
  %idx.neg7 = sub i64 0, %14, !dbg !21212
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !21212, !ctir !573
  %15 = load i64, i64* %inbytes, align 8, !dbg !21213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !21214
  %16 = load i8*, i8** %char_p, align 8, !dbg !21215
  %17 = load i64, i64* %inbytes, align 8, !dbg !21216
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21217, !ctir !10
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !21218
  %18 = load i64, i64* %inbytes, align 8, !dbg !21219
  %19 = load i64, i64* %size.addr, align 8, !dbg !21220
  %sub10 = sub i64 %19, %18, !dbg !21220
  store i64 %sub10, i64* %size.addr, align 8, !dbg !21220
  %20 = load i8*, i8** %p.addr, align 8, !dbg !21221
  %21 = ptrtoint i8* %20 to i64, !dbg !21221
  %rem = urem i64 %21, 8, !dbg !21221
  %cmp11 = icmp eq i64 %rem, 0, !dbg !21221
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !21223

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !21224, metadata !DIExpression()), !dbg !21226
  %22 = load i8*, i8** %p.addr, align 8, !dbg !21227
  %23 = bitcast i8* %22 to i64*, !dbg !21227
  store i64* %23, i64** %wp, align 8, !dbg !21226
  br label %while.cond13, !dbg !21228

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !21229
  %cmp14 = icmp ule i64 2048, %24, !dbg !21230
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !21228

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21231
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !21233, !ctir !1769
  %26 = load i64*, i64** %wp, align 8, !dbg !21234
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !21235
  %27 = load i64*, i64** %wp, align 8, !dbg !21236
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !21236, !ctir !1778
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !21236
  %28 = load i64, i64* %size.addr, align 8, !dbg !21237
  %sub17 = sub i64 %28, 2048, !dbg !21237
  store i64 %sub17, i64* %size.addr, align 8, !dbg !21237
  %29 = load i64, i64* %size.addr, align 8, !dbg !21238
  %cmp18 = icmp eq i64 %29, 0, !dbg !21240
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !21241

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21242
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !21244, !ctir !1769
  store i64 0, i64* %buffered20, align 8, !dbg !21245, !ctir !55
  br label %return, !dbg !21246

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !21228, !llvm.loop !21247

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !21249
  %32 = bitcast i64* %31 to i8*, !dbg !21249
  store i8* %32, i8** %p.addr, align 8, !dbg !21250
  br label %if.end22, !dbg !21251

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21252
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !21253, !ctir !1769
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21254
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !21255, !ctir !1769
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !21256
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !21254, !ctir !1777
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !21257
  store i64 2048, i64* %inbytes, align 8, !dbg !21258
  br label %while.body, !dbg !21179, !llvm.loop !21259

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !21261
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !21262 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1720
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21265, metadata !DIExpression()), !dbg !21266
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !21267, metadata !DIExpression()), !dbg !21268
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21269
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21270, !ctir !1755
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !21270, !ctir !1720
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !21268
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21271
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !21271
  call void @explicit_bzero(i8* %3, i64 4152) #9, !dbg !21272
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21273
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !21273
  call void @free(i8* %5) #9, !dbg !21274
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21275
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !21275
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21275

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21276
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !21277
  br label %cond.end, !dbg !21275

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !21275
  ret i32 %cond, !dbg !21278
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !21279 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !1778
  %b = alloca i64, align 8, !ctir !1778
  %m = alloca i64*, align 8, !ctir !1792
  %r = alloca i64*, align 8, !ctir !1792
  %x = alloca i64, align 8, !ctir !1778
  %y = alloca i64, align 8, !ctir !1778
  %x18 = alloca i64, align 8, !ctir !1778
  %y19 = alloca i64, align 8, !ctir !1778
  %x40 = alloca i64, align 8, !ctir !1778
  %y41 = alloca i64, align 8, !ctir !1778
  %x61 = alloca i64, align 8, !ctir !1778
  %y62 = alloca i64, align 8, !ctir !1778
  %x88 = alloca i64, align 8, !ctir !1778
  %y89 = alloca i64, align 8, !ctir !1778
  %x110 = alloca i64, align 8, !ctir !1778
  %y111 = alloca i64, align 8, !ctir !1778
  %x132 = alloca i64, align 8, !ctir !1778
  %y133 = alloca i64, align 8, !ctir !1778
  %x153 = alloca i64, align 8, !ctir !1778
  %y154 = alloca i64, align 8, !ctir !1778
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21290, metadata !DIExpression()), !dbg !21291
  store i64* %result, i64** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !21292, metadata !DIExpression()), !dbg !21293
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21294, metadata !DIExpression()), !dbg !21295
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21296
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !21297, !ctir !21284
  %1 = load i64, i64* %a1, align 8, !dbg !21297, !ctir !1778
  store i64 %1, i64* %a, align 8, !dbg !21295
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21298, metadata !DIExpression()), !dbg !21299
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21300
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !21301, !ctir !21284
  %3 = load i64, i64* %b2, align 8, !dbg !21301, !ctir !1778
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21302
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !21303, !ctir !21284
  %5 = load i64, i64* %c, align 8, !dbg !21304, !ctir !1778
  %inc = add i64 %5, 1, !dbg !21304
  store i64 %inc, i64* %c, align 8, !dbg !21304, !ctir !1778
  %add = add i64 %3, %inc, !dbg !21305
  store i64 %add, i64* %b, align 8, !dbg !21299
  call void @llvm.dbg.declare(metadata i64** %m, metadata !21306, metadata !DIExpression()), !dbg !21307
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21308
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !21309, !ctir !21284
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !21308, !ctir !1777
  store i64* %arraydecay, i64** %m, align 8, !dbg !21307
  call void @llvm.dbg.declare(metadata i64** %r, metadata !21310, metadata !DIExpression()), !dbg !21311
  %7 = load i64*, i64** %result.addr, align 8, !dbg !21312
  store i64* %7, i64** %r, align 8, !dbg !21311
  br label %do.body, !dbg !21313

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !21314, metadata !DIExpression()), !dbg !21317
  call void @llvm.dbg.declare(metadata i64* %y, metadata !21318, metadata !DIExpression()), !dbg !21317
  %8 = load i64, i64* %a, align 8, !dbg !21317
  %9 = load i64, i64* %a, align 8, !dbg !21317
  %shl = shl i64 %9, 21, !dbg !21317
  %xor = xor i64 %8, %shl, !dbg !21317
  %neg = xor i64 %xor, -1, !dbg !21317
  %xor4 = xor i64 0, %neg, !dbg !21317
  %10 = load i64*, i64** %m, align 8, !dbg !21317
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !21317, !ctir !1792
  %11 = load i64, i64* %arrayidx, align 8, !dbg !21317
  %add5 = add i64 %xor4, %11, !dbg !21317
  store i64 %add5, i64* %a, align 8, !dbg !21317
  %12 = load i64*, i64** %m, align 8, !dbg !21317
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !21317, !ctir !1792
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !21317
  store i64 %13, i64* %x, align 8, !dbg !21317
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21317
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !21317, !ctir !21284
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !21317, !ctir !1777
  %15 = load i64, i64* %x, align 8, !dbg !21317
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !21317
  %16 = load i64, i64* %a, align 8, !dbg !21317
  %add9 = add i64 %call, %16, !dbg !21317
  %17 = load i64, i64* %b, align 8, !dbg !21317
  %add10 = add i64 %add9, %17, !dbg !21317
  store i64 %add10, i64* %y, align 8, !dbg !21317
  %18 = load i64*, i64** %m, align 8, !dbg !21317
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !21317, !ctir !1792
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !21317
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21317
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !21317, !ctir !21284
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !21317, !ctir !1777
  %20 = load i64, i64* %y, align 8, !dbg !21317
  %shr = lshr i64 %20, 8, !dbg !21317
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !21317
  %21 = load i64, i64* %x, align 8, !dbg !21317
  %add15 = add i64 %call14, %21, !dbg !21317
  %call16 = call i64 @just(i64 %add15), !dbg !21317
  store i64 %call16, i64* %b, align 8, !dbg !21317
  %22 = load i64*, i64** %r, align 8, !dbg !21317
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !21317, !ctir !1792
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !21317
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !21319, metadata !DIExpression()), !dbg !21321
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !21322, metadata !DIExpression()), !dbg !21321
  %23 = load i64, i64* %a, align 8, !dbg !21321
  %24 = load i64, i64* %a, align 8, !dbg !21321
  %call20 = call i64 @just(i64 %24), !dbg !21321
  %shr21 = lshr i64 %call20, 5, !dbg !21321
  %xor22 = xor i64 %23, %shr21, !dbg !21321
  %xor23 = xor i64 0, %xor22, !dbg !21321
  %25 = load i64*, i64** %m, align 8, !dbg !21321
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !21321, !ctir !1792
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !21321
  %add25 = add i64 %xor23, %26, !dbg !21321
  store i64 %add25, i64* %a, align 8, !dbg !21321
  %27 = load i64*, i64** %m, align 8, !dbg !21321
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !21321, !ctir !1792
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !21321
  store i64 %28, i64* %x18, align 8, !dbg !21321
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21321
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21321, !ctir !21284
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !21321, !ctir !1777
  %30 = load i64, i64* %x18, align 8, !dbg !21321
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !21321
  %31 = load i64, i64* %a, align 8, !dbg !21321
  %add30 = add i64 %call29, %31, !dbg !21321
  %32 = load i64, i64* %b, align 8, !dbg !21321
  %add31 = add i64 %add30, %32, !dbg !21321
  store i64 %add31, i64* %y19, align 8, !dbg !21321
  %33 = load i64*, i64** %m, align 8, !dbg !21321
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !21321, !ctir !1792
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !21321
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21321
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !21321, !ctir !21284
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !21321, !ctir !1777
  %35 = load i64, i64* %y19, align 8, !dbg !21321
  %shr35 = lshr i64 %35, 8, !dbg !21321
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !21321
  %36 = load i64, i64* %x18, align 8, !dbg !21321
  %add37 = add i64 %call36, %36, !dbg !21321
  %call38 = call i64 @just(i64 %add37), !dbg !21321
  store i64 %call38, i64* %b, align 8, !dbg !21321
  %37 = load i64*, i64** %r, align 8, !dbg !21321
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !21321, !ctir !1792
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !21321
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !21323, metadata !DIExpression()), !dbg !21325
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !21326, metadata !DIExpression()), !dbg !21325
  %38 = load i64, i64* %a, align 8, !dbg !21325
  %39 = load i64, i64* %a, align 8, !dbg !21325
  %shl42 = shl i64 %39, 12, !dbg !21325
  %xor43 = xor i64 %38, %shl42, !dbg !21325
  %xor44 = xor i64 0, %xor43, !dbg !21325
  %40 = load i64*, i64** %m, align 8, !dbg !21325
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !21325, !ctir !1792
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !21325
  %add46 = add i64 %xor44, %41, !dbg !21325
  store i64 %add46, i64* %a, align 8, !dbg !21325
  %42 = load i64*, i64** %m, align 8, !dbg !21325
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !21325, !ctir !1792
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !21325
  store i64 %43, i64* %x40, align 8, !dbg !21325
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21325
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !21325, !ctir !21284
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !21325, !ctir !1777
  %45 = load i64, i64* %x40, align 8, !dbg !21325
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !21325
  %46 = load i64, i64* %a, align 8, !dbg !21325
  %add51 = add i64 %call50, %46, !dbg !21325
  %47 = load i64, i64* %b, align 8, !dbg !21325
  %add52 = add i64 %add51, %47, !dbg !21325
  store i64 %add52, i64* %y41, align 8, !dbg !21325
  %48 = load i64*, i64** %m, align 8, !dbg !21325
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !21325, !ctir !1792
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !21325
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21325
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !21325, !ctir !21284
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !21325, !ctir !1777
  %50 = load i64, i64* %y41, align 8, !dbg !21325
  %shr56 = lshr i64 %50, 8, !dbg !21325
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !21325
  %51 = load i64, i64* %x40, align 8, !dbg !21325
  %add58 = add i64 %call57, %51, !dbg !21325
  %call59 = call i64 @just(i64 %add58), !dbg !21325
  store i64 %call59, i64* %b, align 8, !dbg !21325
  %52 = load i64*, i64** %r, align 8, !dbg !21325
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !21325, !ctir !1792
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !21325
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !21327, metadata !DIExpression()), !dbg !21329
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !21330, metadata !DIExpression()), !dbg !21329
  %53 = load i64, i64* %a, align 8, !dbg !21329
  %54 = load i64, i64* %a, align 8, !dbg !21329
  %call63 = call i64 @just(i64 %54), !dbg !21329
  %shr64 = lshr i64 %call63, 33, !dbg !21329
  %xor65 = xor i64 %53, %shr64, !dbg !21329
  %xor66 = xor i64 0, %xor65, !dbg !21329
  %55 = load i64*, i64** %m, align 8, !dbg !21329
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !21329, !ctir !1792
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !21329
  %add68 = add i64 %xor66, %56, !dbg !21329
  store i64 %add68, i64* %a, align 8, !dbg !21329
  %57 = load i64*, i64** %m, align 8, !dbg !21329
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !21329, !ctir !1792
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !21329
  store i64 %58, i64* %x61, align 8, !dbg !21329
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21329
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !21329, !ctir !21284
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !21329, !ctir !1777
  %60 = load i64, i64* %x61, align 8, !dbg !21329
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !21329
  %61 = load i64, i64* %a, align 8, !dbg !21329
  %add73 = add i64 %call72, %61, !dbg !21329
  %62 = load i64, i64* %b, align 8, !dbg !21329
  %add74 = add i64 %add73, %62, !dbg !21329
  store i64 %add74, i64* %y62, align 8, !dbg !21329
  %63 = load i64*, i64** %m, align 8, !dbg !21329
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !21329, !ctir !1792
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !21329
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21329
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !21329, !ctir !21284
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !21329, !ctir !1777
  %65 = load i64, i64* %y62, align 8, !dbg !21329
  %shr78 = lshr i64 %65, 8, !dbg !21329
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !21329
  %66 = load i64, i64* %x61, align 8, !dbg !21329
  %add80 = add i64 %call79, %66, !dbg !21329
  %call81 = call i64 @just(i64 %add80), !dbg !21329
  store i64 %call81, i64* %b, align 8, !dbg !21329
  %67 = load i64*, i64** %r, align 8, !dbg !21329
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !21329, !ctir !1792
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !21329
  %68 = load i64*, i64** %r, align 8, !dbg !21331
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !21331, !ctir !1778
  store i64* %add.ptr, i64** %r, align 8, !dbg !21331
  br label %do.cond, !dbg !21332

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !21333
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !21333, !ctir !1778
  store i64* %add.ptr83, i64** %m, align 8, !dbg !21333
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21334
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !21335, !ctir !21284
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !21334, !ctir !1777
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !21336, !ctir !1778
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !21337
  br i1 %cmp, label %do.body, label %do.end, !dbg !21332, !llvm.loop !21338

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !21340

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !21341, metadata !DIExpression()), !dbg !21344
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !21345, metadata !DIExpression()), !dbg !21344
  %71 = load i64, i64* %a, align 8, !dbg !21344
  %72 = load i64, i64* %a, align 8, !dbg !21344
  %shl90 = shl i64 %72, 21, !dbg !21344
  %xor91 = xor i64 %71, %shl90, !dbg !21344
  %neg92 = xor i64 %xor91, -1, !dbg !21344
  %xor93 = xor i64 0, %neg92, !dbg !21344
  %73 = load i64*, i64** %m, align 8, !dbg !21344
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !21344, !ctir !1792
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !21344
  %add95 = add i64 %xor93, %74, !dbg !21344
  store i64 %add95, i64* %a, align 8, !dbg !21344
  %75 = load i64*, i64** %m, align 8, !dbg !21344
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !21344, !ctir !1792
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !21344
  store i64 %76, i64* %x88, align 8, !dbg !21344
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21344
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !21344, !ctir !21284
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !21344, !ctir !1777
  %78 = load i64, i64* %x88, align 8, !dbg !21344
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !21344
  %79 = load i64, i64* %a, align 8, !dbg !21344
  %add100 = add i64 %call99, %79, !dbg !21344
  %80 = load i64, i64* %b, align 8, !dbg !21344
  %add101 = add i64 %add100, %80, !dbg !21344
  store i64 %add101, i64* %y89, align 8, !dbg !21344
  %81 = load i64*, i64** %m, align 8, !dbg !21344
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !21344, !ctir !1792
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !21344
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21344
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21344, !ctir !21284
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !21344, !ctir !1777
  %83 = load i64, i64* %y89, align 8, !dbg !21344
  %shr105 = lshr i64 %83, 8, !dbg !21344
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !21344
  %84 = load i64, i64* %x88, align 8, !dbg !21344
  %add107 = add i64 %call106, %84, !dbg !21344
  %call108 = call i64 @just(i64 %add107), !dbg !21344
  store i64 %call108, i64* %b, align 8, !dbg !21344
  %85 = load i64*, i64** %r, align 8, !dbg !21344
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !21344, !ctir !1792
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !21344
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !21346, metadata !DIExpression()), !dbg !21348
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !21349, metadata !DIExpression()), !dbg !21348
  %86 = load i64, i64* %a, align 8, !dbg !21348
  %87 = load i64, i64* %a, align 8, !dbg !21348
  %call112 = call i64 @just(i64 %87), !dbg !21348
  %shr113 = lshr i64 %call112, 5, !dbg !21348
  %xor114 = xor i64 %86, %shr113, !dbg !21348
  %xor115 = xor i64 0, %xor114, !dbg !21348
  %88 = load i64*, i64** %m, align 8, !dbg !21348
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !21348, !ctir !1792
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !21348
  %add117 = add i64 %xor115, %89, !dbg !21348
  store i64 %add117, i64* %a, align 8, !dbg !21348
  %90 = load i64*, i64** %m, align 8, !dbg !21348
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !21348, !ctir !1792
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !21348
  store i64 %91, i64* %x110, align 8, !dbg !21348
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21348
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !21348, !ctir !21284
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !21348, !ctir !1777
  %93 = load i64, i64* %x110, align 8, !dbg !21348
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !21348
  %94 = load i64, i64* %a, align 8, !dbg !21348
  %add122 = add i64 %call121, %94, !dbg !21348
  %95 = load i64, i64* %b, align 8, !dbg !21348
  %add123 = add i64 %add122, %95, !dbg !21348
  store i64 %add123, i64* %y111, align 8, !dbg !21348
  %96 = load i64*, i64** %m, align 8, !dbg !21348
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !21348, !ctir !1792
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !21348
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21348
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21348, !ctir !21284
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !21348, !ctir !1777
  %98 = load i64, i64* %y111, align 8, !dbg !21348
  %shr127 = lshr i64 %98, 8, !dbg !21348
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !21348
  %99 = load i64, i64* %x110, align 8, !dbg !21348
  %add129 = add i64 %call128, %99, !dbg !21348
  %call130 = call i64 @just(i64 %add129), !dbg !21348
  store i64 %call130, i64* %b, align 8, !dbg !21348
  %100 = load i64*, i64** %r, align 8, !dbg !21348
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !21348, !ctir !1792
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !21348
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !21350, metadata !DIExpression()), !dbg !21352
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !21353, metadata !DIExpression()), !dbg !21352
  %101 = load i64, i64* %a, align 8, !dbg !21352
  %102 = load i64, i64* %a, align 8, !dbg !21352
  %shl134 = shl i64 %102, 12, !dbg !21352
  %xor135 = xor i64 %101, %shl134, !dbg !21352
  %xor136 = xor i64 0, %xor135, !dbg !21352
  %103 = load i64*, i64** %m, align 8, !dbg !21352
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !21352, !ctir !1792
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !21352
  %add138 = add i64 %xor136, %104, !dbg !21352
  store i64 %add138, i64* %a, align 8, !dbg !21352
  %105 = load i64*, i64** %m, align 8, !dbg !21352
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !21352, !ctir !1792
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !21352
  store i64 %106, i64* %x132, align 8, !dbg !21352
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21352
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21352, !ctir !21284
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !21352, !ctir !1777
  %108 = load i64, i64* %x132, align 8, !dbg !21352
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !21352
  %109 = load i64, i64* %a, align 8, !dbg !21352
  %add143 = add i64 %call142, %109, !dbg !21352
  %110 = load i64, i64* %b, align 8, !dbg !21352
  %add144 = add i64 %add143, %110, !dbg !21352
  store i64 %add144, i64* %y133, align 8, !dbg !21352
  %111 = load i64*, i64** %m, align 8, !dbg !21352
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !21352, !ctir !1792
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !21352
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21352
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !21352, !ctir !21284
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !21352, !ctir !1777
  %113 = load i64, i64* %y133, align 8, !dbg !21352
  %shr148 = lshr i64 %113, 8, !dbg !21352
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !21352
  %114 = load i64, i64* %x132, align 8, !dbg !21352
  %add150 = add i64 %call149, %114, !dbg !21352
  %call151 = call i64 @just(i64 %add150), !dbg !21352
  store i64 %call151, i64* %b, align 8, !dbg !21352
  %115 = load i64*, i64** %r, align 8, !dbg !21352
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !21352, !ctir !1792
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !21352
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !21354, metadata !DIExpression()), !dbg !21356
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !21357, metadata !DIExpression()), !dbg !21356
  %116 = load i64, i64* %a, align 8, !dbg !21356
  %117 = load i64, i64* %a, align 8, !dbg !21356
  %call155 = call i64 @just(i64 %117), !dbg !21356
  %shr156 = lshr i64 %call155, 33, !dbg !21356
  %xor157 = xor i64 %116, %shr156, !dbg !21356
  %xor158 = xor i64 0, %xor157, !dbg !21356
  %118 = load i64*, i64** %m, align 8, !dbg !21356
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !21356, !ctir !1792
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !21356
  %add160 = add i64 %xor158, %119, !dbg !21356
  store i64 %add160, i64* %a, align 8, !dbg !21356
  %120 = load i64*, i64** %m, align 8, !dbg !21356
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !21356, !ctir !1792
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !21356
  store i64 %121, i64* %x153, align 8, !dbg !21356
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21356
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !21356, !ctir !21284
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !21356, !ctir !1777
  %123 = load i64, i64* %x153, align 8, !dbg !21356
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !21356
  %124 = load i64, i64* %a, align 8, !dbg !21356
  %add165 = add i64 %call164, %124, !dbg !21356
  %125 = load i64, i64* %b, align 8, !dbg !21356
  %add166 = add i64 %add165, %125, !dbg !21356
  store i64 %add166, i64* %y154, align 8, !dbg !21356
  %126 = load i64*, i64** %m, align 8, !dbg !21356
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !21356, !ctir !1792
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !21356
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21356
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21356, !ctir !21284
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !21356, !ctir !1777
  %128 = load i64, i64* %y154, align 8, !dbg !21356
  %shr170 = lshr i64 %128, 8, !dbg !21356
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !21356
  %129 = load i64, i64* %x153, align 8, !dbg !21356
  %add172 = add i64 %call171, %129, !dbg !21356
  %call173 = call i64 @just(i64 %add172), !dbg !21356
  store i64 %call173, i64* %b, align 8, !dbg !21356
  %130 = load i64*, i64** %r, align 8, !dbg !21356
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !21356, !ctir !1792
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !21356
  %131 = load i64*, i64** %r, align 8, !dbg !21358
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !21358, !ctir !1778
  store i64* %add.ptr175, i64** %r, align 8, !dbg !21358
  br label %do.cond176, !dbg !21359

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !21360
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !21360, !ctir !1778
  store i64* %add.ptr177, i64** %m, align 8, !dbg !21360
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21361
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !21362, !ctir !21284
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !21361, !ctir !1777
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !21363, !ctir !1778
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !21364
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !21359, !llvm.loop !21365

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !21367
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21368
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !21369, !ctir !21284
  store i64 %134, i64* %a183, align 8, !dbg !21370, !ctir !1778
  %136 = load i64, i64* %b, align 8, !dbg !21371
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21372
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !21373, !ctir !21284
  store i64 %136, i64* %b184, align 8, !dbg !21374, !ctir !1778
  ret void, !dbg !21375
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !21376 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !831
  %base_p = alloca i8*, align 8, !ctir !183
  %word_p = alloca i8*, align 8, !ctir !831
  %p = alloca i64*, align 8, !ctir !1796
  store i64* %m, i64** %m.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !21379, metadata !DIExpression()), !dbg !21380
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21381, metadata !DIExpression()), !dbg !21382
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !21383, metadata !DIExpression()), !dbg !21386
  %0 = load i64*, i64** %m.addr, align 8, !dbg !21387
  %1 = bitcast i64* %0 to i8*, !dbg !21387
  store i8* %1, i8** %void_m, align 8, !dbg !21386
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !21388, metadata !DIExpression()), !dbg !21389
  %2 = load i8*, i8** %void_m, align 8, !dbg !21390
  store i8* %2, i8** %base_p, align 8, !dbg !21389
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !21391, metadata !DIExpression()), !dbg !21392
  %3 = load i8*, i8** %base_p, align 8, !dbg !21393
  %4 = load i64, i64* %x.addr, align 8, !dbg !21394
  %and = and i64 %4, 2040, !dbg !21395
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !21396, !ctir !184
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !21392
  call void @llvm.dbg.declare(metadata i64** %p, metadata !21397, metadata !DIExpression()), !dbg !21398
  %5 = load i8*, i8** %word_p, align 8, !dbg !21399
  %6 = bitcast i8* %5 to i64*, !dbg !21399
  store i64* %6, i64** %p, align 8, !dbg !21398
  %7 = load i64*, i64** %p, align 8, !dbg !21400
  %8 = load i64, i64* %7, align 8, !dbg !21401, !ctir !1797
  ret i64 %8, !dbg !21402
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !21403 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !1778
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !21406, metadata !DIExpression()), !dbg !21407
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !21408, metadata !DIExpression()), !dbg !21409
  store i64 -1, i64* %desired_bits, align 8, !dbg !21409
  %0 = load i64, i64* %a.addr, align 8, !dbg !21410
  %1 = load i64, i64* %desired_bits, align 8, !dbg !21411
  %and = and i64 %0, %1, !dbg !21412
  ret i64 %and, !dbg !21413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !21414 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !1778
  %b = alloca i64, align 8, !ctir !1778
  %c = alloca i64, align 8, !ctir !1778
  %d = alloca i64, align 8, !ctir !1778
  %e = alloca i64, align 8, !ctir !1778
  %f = alloca i64, align 8, !ctir !1778
  %g = alloca i64, align 8, !ctir !1778
  %h = alloca i64, align 8, !ctir !1778
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21417, metadata !DIExpression()), !dbg !21418
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21419, metadata !DIExpression()), !dbg !21420
  store i64 7240739780546808700, i64* %a, align 8, !dbg !21420
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21421, metadata !DIExpression()), !dbg !21422
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !21422
  call void @llvm.dbg.declare(metadata i64* %c, metadata !21423, metadata !DIExpression()), !dbg !21424
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !21424
  call void @llvm.dbg.declare(metadata i64* %d, metadata !21425, metadata !DIExpression()), !dbg !21426
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !21426
  call void @llvm.dbg.declare(metadata i64* %e, metadata !21427, metadata !DIExpression()), !dbg !21428
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !21428
  call void @llvm.dbg.declare(metadata i64* %f, metadata !21429, metadata !DIExpression()), !dbg !21430
  store i64 5259722845879046933, i64* %f, align 8, !dbg !21430
  call void @llvm.dbg.declare(metadata i64* %g, metadata !21431, metadata !DIExpression()), !dbg !21432
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !21432
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21433, metadata !DIExpression()), !dbg !21434
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !21434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21435, metadata !DIExpression()), !dbg !21437
  store i32 0, i32* %i, align 4, !dbg !21438
  br label %for.cond, !dbg !21438

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21440
  %cmp = icmp slt i32 %0, 256, !dbg !21440
  br i1 %cmp, label %for.body, label %for.end, !dbg !21438

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !21442, !ctir !21284
  %2 = load i32, i32* %i, align 4, !dbg !21442
  %idxprom = sext i32 %2 to i64, !dbg !21442
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !21442, !ctir !1777
  %3 = load i64, i64* %arrayidx, align 8, !dbg !21442
  %4 = load i64, i64* %a, align 8, !dbg !21442
  %add = add i64 %4, %3, !dbg !21442
  store i64 %add, i64* %a, align 8, !dbg !21442
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !21442, !ctir !21284
  %6 = load i32, i32* %i, align 4, !dbg !21442
  %add2 = add nsw i32 %6, 1, !dbg !21442
  %idxprom3 = sext i32 %add2 to i64, !dbg !21442
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !21442, !ctir !1777
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !21442
  %8 = load i64, i64* %b, align 8, !dbg !21442
  %add5 = add i64 %8, %7, !dbg !21442
  store i64 %add5, i64* %b, align 8, !dbg !21442
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !21442, !ctir !21284
  %10 = load i32, i32* %i, align 4, !dbg !21442
  %add7 = add nsw i32 %10, 2, !dbg !21442
  %idxprom8 = sext i32 %add7 to i64, !dbg !21442
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !21442, !ctir !1777
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !21442
  %12 = load i64, i64* %c, align 8, !dbg !21442
  %add10 = add i64 %12, %11, !dbg !21442
  store i64 %add10, i64* %c, align 8, !dbg !21442
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !21442, !ctir !21284
  %14 = load i32, i32* %i, align 4, !dbg !21442
  %add12 = add nsw i32 %14, 3, !dbg !21442
  %idxprom13 = sext i32 %add12 to i64, !dbg !21442
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !21442, !ctir !1777
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !21442
  %16 = load i64, i64* %d, align 8, !dbg !21442
  %add15 = add i64 %16, %15, !dbg !21442
  store i64 %add15, i64* %d, align 8, !dbg !21442
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !21442, !ctir !21284
  %18 = load i32, i32* %i, align 4, !dbg !21442
  %add17 = add nsw i32 %18, 4, !dbg !21442
  %idxprom18 = sext i32 %add17 to i64, !dbg !21442
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !21442, !ctir !1777
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !21442
  %20 = load i64, i64* %e, align 8, !dbg !21442
  %add20 = add i64 %20, %19, !dbg !21442
  store i64 %add20, i64* %e, align 8, !dbg !21442
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !21442, !ctir !21284
  %22 = load i32, i32* %i, align 4, !dbg !21442
  %add22 = add nsw i32 %22, 5, !dbg !21442
  %idxprom23 = sext i32 %add22 to i64, !dbg !21442
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !21442, !ctir !1777
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !21442
  %24 = load i64, i64* %f, align 8, !dbg !21442
  %add25 = add i64 %24, %23, !dbg !21442
  store i64 %add25, i64* %f, align 8, !dbg !21442
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !21442, !ctir !21284
  %26 = load i32, i32* %i, align 4, !dbg !21442
  %add27 = add nsw i32 %26, 6, !dbg !21442
  %idxprom28 = sext i32 %add27 to i64, !dbg !21442
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !21442, !ctir !1777
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !21442
  %28 = load i64, i64* %g, align 8, !dbg !21442
  %add30 = add i64 %28, %27, !dbg !21442
  store i64 %add30, i64* %g, align 8, !dbg !21442
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21442, !ctir !21284
  %30 = load i32, i32* %i, align 4, !dbg !21442
  %add32 = add nsw i32 %30, 7, !dbg !21442
  %idxprom33 = sext i32 %add32 to i64, !dbg !21442
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !21442, !ctir !1777
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !21442
  %32 = load i64, i64* %h, align 8, !dbg !21442
  %add35 = add i64 %32, %31, !dbg !21442
  store i64 %add35, i64* %h, align 8, !dbg !21442
  %33 = load i64, i64* %e, align 8, !dbg !21444
  %34 = load i64, i64* %a, align 8, !dbg !21444
  %sub = sub i64 %34, %33, !dbg !21444
  store i64 %sub, i64* %a, align 8, !dbg !21444
  %35 = load i64, i64* %h, align 8, !dbg !21444
  %call = call i64 @just(i64 %35), !dbg !21444
  %shr = lshr i64 %call, 9, !dbg !21444
  %36 = load i64, i64* %f, align 8, !dbg !21444
  %xor = xor i64 %36, %shr, !dbg !21444
  store i64 %xor, i64* %f, align 8, !dbg !21444
  %37 = load i64, i64* %a, align 8, !dbg !21444
  %38 = load i64, i64* %h, align 8, !dbg !21444
  %add36 = add i64 %38, %37, !dbg !21444
  store i64 %add36, i64* %h, align 8, !dbg !21444
  %39 = load i64, i64* %f, align 8, !dbg !21444
  %40 = load i64, i64* %b, align 8, !dbg !21444
  %sub37 = sub i64 %40, %39, !dbg !21444
  store i64 %sub37, i64* %b, align 8, !dbg !21444
  %41 = load i64, i64* %a, align 8, !dbg !21444
  %shl = shl i64 %41, 9, !dbg !21444
  %42 = load i64, i64* %g, align 8, !dbg !21444
  %xor38 = xor i64 %42, %shl, !dbg !21444
  store i64 %xor38, i64* %g, align 8, !dbg !21444
  %43 = load i64, i64* %b, align 8, !dbg !21444
  %44 = load i64, i64* %a, align 8, !dbg !21444
  %add39 = add i64 %44, %43, !dbg !21444
  store i64 %add39, i64* %a, align 8, !dbg !21444
  %45 = load i64, i64* %g, align 8, !dbg !21444
  %46 = load i64, i64* %c, align 8, !dbg !21444
  %sub40 = sub i64 %46, %45, !dbg !21444
  store i64 %sub40, i64* %c, align 8, !dbg !21444
  %47 = load i64, i64* %b, align 8, !dbg !21444
  %call41 = call i64 @just(i64 %47), !dbg !21444
  %shr42 = lshr i64 %call41, 23, !dbg !21444
  %48 = load i64, i64* %h, align 8, !dbg !21444
  %xor43 = xor i64 %48, %shr42, !dbg !21444
  store i64 %xor43, i64* %h, align 8, !dbg !21444
  %49 = load i64, i64* %c, align 8, !dbg !21444
  %50 = load i64, i64* %b, align 8, !dbg !21444
  %add44 = add i64 %50, %49, !dbg !21444
  store i64 %add44, i64* %b, align 8, !dbg !21444
  %51 = load i64, i64* %h, align 8, !dbg !21444
  %52 = load i64, i64* %d, align 8, !dbg !21444
  %sub45 = sub i64 %52, %51, !dbg !21444
  store i64 %sub45, i64* %d, align 8, !dbg !21444
  %53 = load i64, i64* %c, align 8, !dbg !21444
  %shl46 = shl i64 %53, 15, !dbg !21444
  %54 = load i64, i64* %a, align 8, !dbg !21444
  %xor47 = xor i64 %54, %shl46, !dbg !21444
  store i64 %xor47, i64* %a, align 8, !dbg !21444
  %55 = load i64, i64* %d, align 8, !dbg !21444
  %56 = load i64, i64* %c, align 8, !dbg !21444
  %add48 = add i64 %56, %55, !dbg !21444
  store i64 %add48, i64* %c, align 8, !dbg !21444
  %57 = load i64, i64* %a, align 8, !dbg !21444
  %58 = load i64, i64* %e, align 8, !dbg !21444
  %sub49 = sub i64 %58, %57, !dbg !21444
  store i64 %sub49, i64* %e, align 8, !dbg !21444
  %59 = load i64, i64* %d, align 8, !dbg !21444
  %call50 = call i64 @just(i64 %59), !dbg !21444
  %shr51 = lshr i64 %call50, 14, !dbg !21444
  %60 = load i64, i64* %b, align 8, !dbg !21444
  %xor52 = xor i64 %60, %shr51, !dbg !21444
  store i64 %xor52, i64* %b, align 8, !dbg !21444
  %61 = load i64, i64* %e, align 8, !dbg !21444
  %62 = load i64, i64* %d, align 8, !dbg !21444
  %add53 = add i64 %62, %61, !dbg !21444
  store i64 %add53, i64* %d, align 8, !dbg !21444
  %63 = load i64, i64* %b, align 8, !dbg !21444
  %64 = load i64, i64* %f, align 8, !dbg !21444
  %sub54 = sub i64 %64, %63, !dbg !21444
  store i64 %sub54, i64* %f, align 8, !dbg !21444
  %65 = load i64, i64* %e, align 8, !dbg !21444
  %shl55 = shl i64 %65, 20, !dbg !21444
  %66 = load i64, i64* %c, align 8, !dbg !21444
  %xor56 = xor i64 %66, %shl55, !dbg !21444
  store i64 %xor56, i64* %c, align 8, !dbg !21444
  %67 = load i64, i64* %f, align 8, !dbg !21444
  %68 = load i64, i64* %e, align 8, !dbg !21444
  %add57 = add i64 %68, %67, !dbg !21444
  store i64 %add57, i64* %e, align 8, !dbg !21444
  %69 = load i64, i64* %c, align 8, !dbg !21444
  %70 = load i64, i64* %g, align 8, !dbg !21444
  %sub58 = sub i64 %70, %69, !dbg !21444
  store i64 %sub58, i64* %g, align 8, !dbg !21444
  %71 = load i64, i64* %f, align 8, !dbg !21444
  %call59 = call i64 @just(i64 %71), !dbg !21444
  %shr60 = lshr i64 %call59, 17, !dbg !21444
  %72 = load i64, i64* %d, align 8, !dbg !21444
  %xor61 = xor i64 %72, %shr60, !dbg !21444
  store i64 %xor61, i64* %d, align 8, !dbg !21444
  %73 = load i64, i64* %g, align 8, !dbg !21444
  %74 = load i64, i64* %f, align 8, !dbg !21444
  %add62 = add i64 %74, %73, !dbg !21444
  store i64 %add62, i64* %f, align 8, !dbg !21444
  %75 = load i64, i64* %d, align 8, !dbg !21444
  %76 = load i64, i64* %h, align 8, !dbg !21444
  %sub63 = sub i64 %76, %75, !dbg !21444
  store i64 %sub63, i64* %h, align 8, !dbg !21444
  %77 = load i64, i64* %g, align 8, !dbg !21444
  %shl64 = shl i64 %77, 14, !dbg !21444
  %78 = load i64, i64* %e, align 8, !dbg !21444
  %xor65 = xor i64 %78, %shl64, !dbg !21444
  store i64 %xor65, i64* %e, align 8, !dbg !21444
  %79 = load i64, i64* %h, align 8, !dbg !21444
  %80 = load i64, i64* %g, align 8, !dbg !21444
  %add66 = add i64 %80, %79, !dbg !21444
  store i64 %add66, i64* %g, align 8, !dbg !21444
  %81 = load i64, i64* %a, align 8, !dbg !21442
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21442, !ctir !21284
  %83 = load i32, i32* %i, align 4, !dbg !21442
  %idxprom68 = sext i32 %83 to i64, !dbg !21442
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !21442, !ctir !1777
  store i64 %81, i64* %arrayidx69, align 8, !dbg !21442
  %84 = load i64, i64* %b, align 8, !dbg !21442
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !21442, !ctir !21284
  %86 = load i32, i32* %i, align 4, !dbg !21442
  %add71 = add nsw i32 %86, 1, !dbg !21442
  %idxprom72 = sext i32 %add71 to i64, !dbg !21442
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !21442, !ctir !1777
  store i64 %84, i64* %arrayidx73, align 8, !dbg !21442
  %87 = load i64, i64* %c, align 8, !dbg !21442
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !21442, !ctir !21284
  %89 = load i32, i32* %i, align 4, !dbg !21442
  %add75 = add nsw i32 %89, 2, !dbg !21442
  %idxprom76 = sext i32 %add75 to i64, !dbg !21442
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !21442, !ctir !1777
  store i64 %87, i64* %arrayidx77, align 8, !dbg !21442
  %90 = load i64, i64* %d, align 8, !dbg !21442
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !21442, !ctir !21284
  %92 = load i32, i32* %i, align 4, !dbg !21442
  %add79 = add nsw i32 %92, 3, !dbg !21442
  %idxprom80 = sext i32 %add79 to i64, !dbg !21442
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !21442, !ctir !1777
  store i64 %90, i64* %arrayidx81, align 8, !dbg !21442
  %93 = load i64, i64* %e, align 8, !dbg !21442
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !21442, !ctir !21284
  %95 = load i32, i32* %i, align 4, !dbg !21442
  %add83 = add nsw i32 %95, 4, !dbg !21442
  %idxprom84 = sext i32 %add83 to i64, !dbg !21442
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !21442, !ctir !1777
  store i64 %93, i64* %arrayidx85, align 8, !dbg !21442
  %96 = load i64, i64* %f, align 8, !dbg !21442
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21442, !ctir !21284
  %98 = load i32, i32* %i, align 4, !dbg !21442
  %add87 = add nsw i32 %98, 5, !dbg !21442
  %idxprom88 = sext i32 %add87 to i64, !dbg !21442
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !21442, !ctir !1777
  store i64 %96, i64* %arrayidx89, align 8, !dbg !21442
  %99 = load i64, i64* %g, align 8, !dbg !21442
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !21442, !ctir !21284
  %101 = load i32, i32* %i, align 4, !dbg !21442
  %add91 = add nsw i32 %101, 6, !dbg !21442
  %idxprom92 = sext i32 %add91 to i64, !dbg !21442
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !21442, !ctir !1777
  store i64 %99, i64* %arrayidx93, align 8, !dbg !21442
  %102 = load i64, i64* %h, align 8, !dbg !21442
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !21442, !ctir !21284
  %104 = load i32, i32* %i, align 4, !dbg !21442
  %add95 = add nsw i32 %104, 7, !dbg !21442
  %idxprom96 = sext i32 %add95 to i64, !dbg !21442
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !21442, !ctir !1777
  store i64 %102, i64* %arrayidx97, align 8, !dbg !21442
  br label %for.inc, !dbg !21442

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !21440
  %add98 = add nsw i32 %105, 8, !dbg !21440
  store i32 %add98, i32* %i, align 4, !dbg !21440
  br label %for.cond, !dbg !21440, !llvm.loop !21446

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !21447, metadata !DIExpression()), !dbg !21449
  store i32 0, i32* %i99, align 4, !dbg !21450
  br label %for.cond100, !dbg !21450

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !21452
  %cmp101 = icmp slt i32 %106, 256, !dbg !21452
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !21450

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21454, !ctir !21284
  %108 = load i32, i32* %i99, align 4, !dbg !21454
  %idxprom104 = sext i32 %108 to i64, !dbg !21454
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !21454, !ctir !1777
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !21454
  %110 = load i64, i64* %a, align 8, !dbg !21454
  %add106 = add i64 %110, %109, !dbg !21454
  store i64 %add106, i64* %a, align 8, !dbg !21454
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !21454, !ctir !21284
  %112 = load i32, i32* %i99, align 4, !dbg !21454
  %add108 = add nsw i32 %112, 1, !dbg !21454
  %idxprom109 = sext i32 %add108 to i64, !dbg !21454
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !21454, !ctir !1777
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !21454
  %114 = load i64, i64* %b, align 8, !dbg !21454
  %add111 = add i64 %114, %113, !dbg !21454
  store i64 %add111, i64* %b, align 8, !dbg !21454
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !21454, !ctir !21284
  %116 = load i32, i32* %i99, align 4, !dbg !21454
  %add113 = add nsw i32 %116, 2, !dbg !21454
  %idxprom114 = sext i32 %add113 to i64, !dbg !21454
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !21454, !ctir !1777
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !21454
  %118 = load i64, i64* %c, align 8, !dbg !21454
  %add116 = add i64 %118, %117, !dbg !21454
  store i64 %add116, i64* %c, align 8, !dbg !21454
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !21454, !ctir !21284
  %120 = load i32, i32* %i99, align 4, !dbg !21454
  %add118 = add nsw i32 %120, 3, !dbg !21454
  %idxprom119 = sext i32 %add118 to i64, !dbg !21454
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !21454, !ctir !1777
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !21454
  %122 = load i64, i64* %d, align 8, !dbg !21454
  %add121 = add i64 %122, %121, !dbg !21454
  store i64 %add121, i64* %d, align 8, !dbg !21454
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !21454, !ctir !21284
  %124 = load i32, i32* %i99, align 4, !dbg !21454
  %add123 = add nsw i32 %124, 4, !dbg !21454
  %idxprom124 = sext i32 %add123 to i64, !dbg !21454
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !21454, !ctir !1777
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !21454
  %126 = load i64, i64* %e, align 8, !dbg !21454
  %add126 = add i64 %126, %125, !dbg !21454
  store i64 %add126, i64* %e, align 8, !dbg !21454
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21454, !ctir !21284
  %128 = load i32, i32* %i99, align 4, !dbg !21454
  %add128 = add nsw i32 %128, 5, !dbg !21454
  %idxprom129 = sext i32 %add128 to i64, !dbg !21454
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !21454, !ctir !1777
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !21454
  %130 = load i64, i64* %f, align 8, !dbg !21454
  %add131 = add i64 %130, %129, !dbg !21454
  store i64 %add131, i64* %f, align 8, !dbg !21454
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !21454, !ctir !21284
  %132 = load i32, i32* %i99, align 4, !dbg !21454
  %add133 = add nsw i32 %132, 6, !dbg !21454
  %idxprom134 = sext i32 %add133 to i64, !dbg !21454
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !21454, !ctir !1777
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !21454
  %134 = load i64, i64* %g, align 8, !dbg !21454
  %add136 = add i64 %134, %133, !dbg !21454
  store i64 %add136, i64* %g, align 8, !dbg !21454
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !21454, !ctir !21284
  %136 = load i32, i32* %i99, align 4, !dbg !21454
  %add138 = add nsw i32 %136, 7, !dbg !21454
  %idxprom139 = sext i32 %add138 to i64, !dbg !21454
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !21454, !ctir !1777
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !21454
  %138 = load i64, i64* %h, align 8, !dbg !21454
  %add141 = add i64 %138, %137, !dbg !21454
  store i64 %add141, i64* %h, align 8, !dbg !21454
  %139 = load i64, i64* %e, align 8, !dbg !21456
  %140 = load i64, i64* %a, align 8, !dbg !21456
  %sub142 = sub i64 %140, %139, !dbg !21456
  store i64 %sub142, i64* %a, align 8, !dbg !21456
  %141 = load i64, i64* %h, align 8, !dbg !21456
  %call143 = call i64 @just(i64 %141), !dbg !21456
  %shr144 = lshr i64 %call143, 9, !dbg !21456
  %142 = load i64, i64* %f, align 8, !dbg !21456
  %xor145 = xor i64 %142, %shr144, !dbg !21456
  store i64 %xor145, i64* %f, align 8, !dbg !21456
  %143 = load i64, i64* %a, align 8, !dbg !21456
  %144 = load i64, i64* %h, align 8, !dbg !21456
  %add146 = add i64 %144, %143, !dbg !21456
  store i64 %add146, i64* %h, align 8, !dbg !21456
  %145 = load i64, i64* %f, align 8, !dbg !21456
  %146 = load i64, i64* %b, align 8, !dbg !21456
  %sub147 = sub i64 %146, %145, !dbg !21456
  store i64 %sub147, i64* %b, align 8, !dbg !21456
  %147 = load i64, i64* %a, align 8, !dbg !21456
  %shl148 = shl i64 %147, 9, !dbg !21456
  %148 = load i64, i64* %g, align 8, !dbg !21456
  %xor149 = xor i64 %148, %shl148, !dbg !21456
  store i64 %xor149, i64* %g, align 8, !dbg !21456
  %149 = load i64, i64* %b, align 8, !dbg !21456
  %150 = load i64, i64* %a, align 8, !dbg !21456
  %add150 = add i64 %150, %149, !dbg !21456
  store i64 %add150, i64* %a, align 8, !dbg !21456
  %151 = load i64, i64* %g, align 8, !dbg !21456
  %152 = load i64, i64* %c, align 8, !dbg !21456
  %sub151 = sub i64 %152, %151, !dbg !21456
  store i64 %sub151, i64* %c, align 8, !dbg !21456
  %153 = load i64, i64* %b, align 8, !dbg !21456
  %call152 = call i64 @just(i64 %153), !dbg !21456
  %shr153 = lshr i64 %call152, 23, !dbg !21456
  %154 = load i64, i64* %h, align 8, !dbg !21456
  %xor154 = xor i64 %154, %shr153, !dbg !21456
  store i64 %xor154, i64* %h, align 8, !dbg !21456
  %155 = load i64, i64* %c, align 8, !dbg !21456
  %156 = load i64, i64* %b, align 8, !dbg !21456
  %add155 = add i64 %156, %155, !dbg !21456
  store i64 %add155, i64* %b, align 8, !dbg !21456
  %157 = load i64, i64* %h, align 8, !dbg !21456
  %158 = load i64, i64* %d, align 8, !dbg !21456
  %sub156 = sub i64 %158, %157, !dbg !21456
  store i64 %sub156, i64* %d, align 8, !dbg !21456
  %159 = load i64, i64* %c, align 8, !dbg !21456
  %shl157 = shl i64 %159, 15, !dbg !21456
  %160 = load i64, i64* %a, align 8, !dbg !21456
  %xor158 = xor i64 %160, %shl157, !dbg !21456
  store i64 %xor158, i64* %a, align 8, !dbg !21456
  %161 = load i64, i64* %d, align 8, !dbg !21456
  %162 = load i64, i64* %c, align 8, !dbg !21456
  %add159 = add i64 %162, %161, !dbg !21456
  store i64 %add159, i64* %c, align 8, !dbg !21456
  %163 = load i64, i64* %a, align 8, !dbg !21456
  %164 = load i64, i64* %e, align 8, !dbg !21456
  %sub160 = sub i64 %164, %163, !dbg !21456
  store i64 %sub160, i64* %e, align 8, !dbg !21456
  %165 = load i64, i64* %d, align 8, !dbg !21456
  %call161 = call i64 @just(i64 %165), !dbg !21456
  %shr162 = lshr i64 %call161, 14, !dbg !21456
  %166 = load i64, i64* %b, align 8, !dbg !21456
  %xor163 = xor i64 %166, %shr162, !dbg !21456
  store i64 %xor163, i64* %b, align 8, !dbg !21456
  %167 = load i64, i64* %e, align 8, !dbg !21456
  %168 = load i64, i64* %d, align 8, !dbg !21456
  %add164 = add i64 %168, %167, !dbg !21456
  store i64 %add164, i64* %d, align 8, !dbg !21456
  %169 = load i64, i64* %b, align 8, !dbg !21456
  %170 = load i64, i64* %f, align 8, !dbg !21456
  %sub165 = sub i64 %170, %169, !dbg !21456
  store i64 %sub165, i64* %f, align 8, !dbg !21456
  %171 = load i64, i64* %e, align 8, !dbg !21456
  %shl166 = shl i64 %171, 20, !dbg !21456
  %172 = load i64, i64* %c, align 8, !dbg !21456
  %xor167 = xor i64 %172, %shl166, !dbg !21456
  store i64 %xor167, i64* %c, align 8, !dbg !21456
  %173 = load i64, i64* %f, align 8, !dbg !21456
  %174 = load i64, i64* %e, align 8, !dbg !21456
  %add168 = add i64 %174, %173, !dbg !21456
  store i64 %add168, i64* %e, align 8, !dbg !21456
  %175 = load i64, i64* %c, align 8, !dbg !21456
  %176 = load i64, i64* %g, align 8, !dbg !21456
  %sub169 = sub i64 %176, %175, !dbg !21456
  store i64 %sub169, i64* %g, align 8, !dbg !21456
  %177 = load i64, i64* %f, align 8, !dbg !21456
  %call170 = call i64 @just(i64 %177), !dbg !21456
  %shr171 = lshr i64 %call170, 17, !dbg !21456
  %178 = load i64, i64* %d, align 8, !dbg !21456
  %xor172 = xor i64 %178, %shr171, !dbg !21456
  store i64 %xor172, i64* %d, align 8, !dbg !21456
  %179 = load i64, i64* %g, align 8, !dbg !21456
  %180 = load i64, i64* %f, align 8, !dbg !21456
  %add173 = add i64 %180, %179, !dbg !21456
  store i64 %add173, i64* %f, align 8, !dbg !21456
  %181 = load i64, i64* %d, align 8, !dbg !21456
  %182 = load i64, i64* %h, align 8, !dbg !21456
  %sub174 = sub i64 %182, %181, !dbg !21456
  store i64 %sub174, i64* %h, align 8, !dbg !21456
  %183 = load i64, i64* %g, align 8, !dbg !21456
  %shl175 = shl i64 %183, 14, !dbg !21456
  %184 = load i64, i64* %e, align 8, !dbg !21456
  %xor176 = xor i64 %184, %shl175, !dbg !21456
  store i64 %xor176, i64* %e, align 8, !dbg !21456
  %185 = load i64, i64* %h, align 8, !dbg !21456
  %186 = load i64, i64* %g, align 8, !dbg !21456
  %add177 = add i64 %186, %185, !dbg !21456
  store i64 %add177, i64* %g, align 8, !dbg !21456
  %187 = load i64, i64* %a, align 8, !dbg !21454
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !21454, !ctir !21284
  %189 = load i32, i32* %i99, align 4, !dbg !21454
  %idxprom179 = sext i32 %189 to i64, !dbg !21454
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !21454, !ctir !1777
  store i64 %187, i64* %arrayidx180, align 8, !dbg !21454
  %190 = load i64, i64* %b, align 8, !dbg !21454
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !21454, !ctir !21284
  %192 = load i32, i32* %i99, align 4, !dbg !21454
  %add182 = add nsw i32 %192, 1, !dbg !21454
  %idxprom183 = sext i32 %add182 to i64, !dbg !21454
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !21454, !ctir !1777
  store i64 %190, i64* %arrayidx184, align 8, !dbg !21454
  %193 = load i64, i64* %c, align 8, !dbg !21454
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !21454, !ctir !21284
  %195 = load i32, i32* %i99, align 4, !dbg !21454
  %add186 = add nsw i32 %195, 2, !dbg !21454
  %idxprom187 = sext i32 %add186 to i64, !dbg !21454
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !21454, !ctir !1777
  store i64 %193, i64* %arrayidx188, align 8, !dbg !21454
  %196 = load i64, i64* %d, align 8, !dbg !21454
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !21454, !ctir !21284
  %198 = load i32, i32* %i99, align 4, !dbg !21454
  %add190 = add nsw i32 %198, 3, !dbg !21454
  %idxprom191 = sext i32 %add190 to i64, !dbg !21454
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !21454, !ctir !1777
  store i64 %196, i64* %arrayidx192, align 8, !dbg !21454
  %199 = load i64, i64* %e, align 8, !dbg !21454
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !21454, !ctir !21284
  %201 = load i32, i32* %i99, align 4, !dbg !21454
  %add194 = add nsw i32 %201, 4, !dbg !21454
  %idxprom195 = sext i32 %add194 to i64, !dbg !21454
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !21454, !ctir !1777
  store i64 %199, i64* %arrayidx196, align 8, !dbg !21454
  %202 = load i64, i64* %f, align 8, !dbg !21454
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !21454, !ctir !21284
  %204 = load i32, i32* %i99, align 4, !dbg !21454
  %add198 = add nsw i32 %204, 5, !dbg !21454
  %idxprom199 = sext i32 %add198 to i64, !dbg !21454
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !21454, !ctir !1777
  store i64 %202, i64* %arrayidx200, align 8, !dbg !21454
  %205 = load i64, i64* %g, align 8, !dbg !21454
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !21454, !ctir !21284
  %207 = load i32, i32* %i99, align 4, !dbg !21454
  %add202 = add nsw i32 %207, 6, !dbg !21454
  %idxprom203 = sext i32 %add202 to i64, !dbg !21454
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !21454, !ctir !1777
  store i64 %205, i64* %arrayidx204, align 8, !dbg !21454
  %208 = load i64, i64* %h, align 8, !dbg !21454
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21454
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !21454, !ctir !21284
  %210 = load i32, i32* %i99, align 4, !dbg !21454
  %add206 = add nsw i32 %210, 7, !dbg !21454
  %idxprom207 = sext i32 %add206 to i64, !dbg !21454
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !21454, !ctir !1777
  store i64 %208, i64* %arrayidx208, align 8, !dbg !21454
  br label %for.inc209, !dbg !21454

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !21452
  %add210 = add nsw i32 %211, 8, !dbg !21452
  store i32 %add210, i32* %i99, align 4, !dbg !21452
  br label %for.cond100, !dbg !21452, !llvm.loop !21458

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21459
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !21460, !ctir !21284
  store i64 0, i64* %c212, align 8, !dbg !21461, !ctir !1778
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21462
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !21463, !ctir !21284
  store i64 0, i64* %b213, align 8, !dbg !21464, !ctir !1778
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21465
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !21466, !ctir !21284
  store i64 0, i64* %a214, align 8, !dbg !21467, !ctir !1778
  ret void, !dbg !21468
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !21469 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21471, metadata !DIExpression()), !dbg !21472
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21473
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !21474
  ret i32 %call, !dbg !21475
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #10 !dbg !21476 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21480, metadata !DIExpression()), !dbg !21481
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21482, metadata !DIExpression()), !dbg !21483
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !21484, metadata !DIExpression()), !dbg !21485
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21486
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21487
  %add = add i64 %0, %1, !dbg !21488
  store i64 %add, i64* %sum, align 8, !dbg !21485
  %2 = load i64, i64* %sum, align 8, !dbg !21489
  %3 = load i64, i64* %size1.addr, align 8, !dbg !21490
  %cmp = icmp uge i64 %2, %3, !dbg !21491
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21489

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !21492
  br label %cond.end, !dbg !21489

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !21489
  ret i64 %cond, !dbg !21493
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #10 !dbg !21494 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21495, metadata !DIExpression()), !dbg !21496
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21497, metadata !DIExpression()), !dbg !21498
  store i64 %size3, i64* %size3.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21499, metadata !DIExpression()), !dbg !21500
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21501
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21502
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21503
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21504
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21505
  ret i64 %call1, !dbg !21506
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #10 !dbg !21507 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21510, metadata !DIExpression()), !dbg !21511
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21512, metadata !DIExpression()), !dbg !21513
  store i64 %size3, i64* %size3.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21514, metadata !DIExpression()), !dbg !21515
  store i64 %size4, i64* %size4.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !21516, metadata !DIExpression()), !dbg !21517
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21518
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21519
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21520
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21521
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21522
  %3 = load i64, i64* %size4.addr, align 8, !dbg !21523
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !21524
  ret i64 %call2, !dbg !21525
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #10 !dbg !21526 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21527, metadata !DIExpression()), !dbg !21528
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21529, metadata !DIExpression()), !dbg !21530
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21531
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21532
  %cmp = icmp uge i64 %0, %1, !dbg !21533
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21531

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !21534
  br label %cond.end, !dbg !21531

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !21535
  br label %cond.end, !dbg !21531

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !21531
  ret i64 %cond, !dbg !21536
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !21537 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21575, metadata !DIExpression()), !dbg !21576
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21577, metadata !DIExpression()), !dbg !21578
  store i32 0, i32* %saved_errno, align 4, !dbg !21578
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21579, metadata !DIExpression()), !dbg !21580
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21581, metadata !DIExpression()), !dbg !21582
  store i32 0, i32* %result, align 4, !dbg !21582
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21583
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9, !dbg !21584
  store i32 %call, i32* %fd, align 4, !dbg !21585
  %1 = load i32, i32* %fd, align 4, !dbg !21586
  %cmp = icmp slt i32 %1, 0, !dbg !21588
  br i1 %cmp, label %if.then, label %if.end, !dbg !21589

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21590
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21591
  store i32 %call1, i32* %retval, align 4, !dbg !21592
  br label %return, !dbg !21592

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21593
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #9, !dbg !21593
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21593
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21595

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21596
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #9, !dbg !21597
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #9, !dbg !21598
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21599
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21600

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21601
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21602
  %tobool = icmp ne i32 %call7, 0, !dbg !21602
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21603

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !21604
  %6 = load i32, i32* %call9, align 4, !dbg !21604, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !21605
  br label %if.end10, !dbg !21606

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21607
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21608
  store i32 %call11, i32* %result, align 4, !dbg !21609
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21610
  %cmp12 = icmp ne i32 %8, 0, !dbg !21612
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21613

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21614
  %call14 = call i32* @__errno_location() #16, !dbg !21616
  store i32 %9, i32* %call14, align 4, !dbg !21617, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21618
  br label %if.end15, !dbg !21619

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21620
  store i32 %10, i32* %retval, align 4, !dbg !21621
  br label %return, !dbg !21621

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21622
  ret i32 %11, !dbg !21622
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !21623 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1161
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21626, metadata !DIExpression()), !dbg !21627
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !21628, metadata !DIExpression()), !dbg !21629
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !21630, metadata !DIExpression()), !dbg !21631
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21632, metadata !DIExpression()), !dbg !21633
  store i32 -1, i32* %result, align 4, !dbg !21633
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21634, !ctir !1161
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !21634
  call void @llvm.va_start(i8* %arraydecay1), !dbg !21634
  %0 = load i32, i32* %action.addr, align 4, !dbg !21635
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !21636

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !21637, metadata !DIExpression()), !dbg !21640
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21641, !ctir !1161
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !21641
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !21641
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !21641
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !21641

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !21641
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !21641
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !21641
  %3 = bitcast i8* %2 to i32*, !dbg !21641
  %4 = add i32 %gp_offset, 8, !dbg !21641
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !21641
  br label %vaarg.end, !dbg !21641

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !21641
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !21641
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !21641
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !21641
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !21641
  br label %vaarg.end, !dbg !21641

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !21641
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !21641
  store i32 %6, i32* %target, align 4, !dbg !21640
  %7 = load i32, i32* %fd.addr, align 4, !dbg !21642
  %8 = load i32, i32* %target, align 4, !dbg !21643
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !21644
  store i32 %call, i32* %result, align 4, !dbg !21645
  br label %sw.epilog48, !dbg !21646

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !21647, metadata !DIExpression()), !dbg !21649
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21650, !ctir !1161
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !21650
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !21650
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !21650
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !21650

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !21650
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !21650
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !21650
  %11 = bitcast i8* %10 to i32*, !dbg !21650
  %12 = add i32 %gp_offset7, 8, !dbg !21650
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !21650
  br label %vaarg.end15, !dbg !21650

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !21650
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !21650
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !21650
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !21650
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !21650
  br label %vaarg.end15, !dbg !21650

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !21650
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !21650
  store i32 %14, i32* %target4, align 4, !dbg !21649
  %15 = load i32, i32* %fd.addr, align 4, !dbg !21651
  %16 = load i32, i32* %target4, align 4, !dbg !21652
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !21653
  store i32 %call17, i32* %result, align 4, !dbg !21654
  br label %sw.epilog48, !dbg !21655

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !21656
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !21658

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21659
  %19 = load i32, i32* %action.addr, align 4, !dbg !21661
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !21662
  store i32 %call19, i32* %result, align 4, !dbg !21663
  br label %sw.epilog, !dbg !21664

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21665, metadata !DIExpression()), !dbg !21667
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21668, !ctir !1161
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !21668
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !21668
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !21668
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !21668

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !21668
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !21668
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !21668
  %22 = bitcast i8* %21 to i32*, !dbg !21668
  %23 = add i32 %gp_offset23, 8, !dbg !21668
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !21668
  br label %vaarg.end31, !dbg !21668

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !21668
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !21668
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !21668
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !21668
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !21668
  br label %vaarg.end31, !dbg !21668

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !21668
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !21668
  store i32 %25, i32* %x, align 4, !dbg !21667
  %26 = load i32, i32* %fd.addr, align 4, !dbg !21669
  %27 = load i32, i32* %action.addr, align 4, !dbg !21670
  %28 = load i32, i32* %x, align 4, !dbg !21671
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !21672
  store i32 %call33, i32* %result, align 4, !dbg !21673
  br label %sw.epilog, !dbg !21674

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21675, metadata !DIExpression()), !dbg !21677
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21678, !ctir !1161
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !21678
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !21678
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !21678
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !21678

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !21678
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !21678
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !21678
  %31 = bitcast i8* %30 to i8**, !dbg !21678
  %32 = add i32 %gp_offset37, 8, !dbg !21678
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !21678
  br label %vaarg.end45, !dbg !21678

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !21678
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !21678
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !21678
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !21678
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !21678
  br label %vaarg.end45, !dbg !21678

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !21678
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !21678
  store i8* %34, i8** %p, align 8, !dbg !21677
  %35 = load i32, i32* %fd.addr, align 4, !dbg !21679
  %36 = load i32, i32* %action.addr, align 4, !dbg !21680
  %37 = load i8*, i8** %p, align 8, !dbg !21681
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !21682
  store i32 %call47, i32* %result, align 4, !dbg !21683
  br label %sw.epilog, !dbg !21684

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !21685

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21686, !ctir !1161
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !21686
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !21686
  %38 = load i32, i32* %result, align 4, !dbg !21687
  ret i32 %38, !dbg !21688
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !21689 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21692, metadata !DIExpression()), !dbg !21693
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21694, metadata !DIExpression()), !dbg !21695
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21696
  %1 = load i32, i32* %target.addr, align 4, !dbg !21697
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !21698
  store i32 %call, i32* %result, align 4, !dbg !21699
  %2 = load i32, i32* %result, align 4, !dbg !21700
  ret i32 %2, !dbg !21701
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1154 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21702, metadata !DIExpression()), !dbg !21703
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21704, metadata !DIExpression()), !dbg !21705
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21706, metadata !DIExpression()), !dbg !21707
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21708
  %cmp = icmp sle i32 0, %0, !dbg !21710
  br i1 %cmp, label %if.then, label %if.else9, !dbg !21711

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !21712
  %2 = load i32, i32* %target.addr, align 4, !dbg !21714
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !21715
  store i32 %call, i32* %result, align 4, !dbg !21716
  %3 = load i32, i32* %result, align 4, !dbg !21717
  %cmp1 = icmp sle i32 0, %3, !dbg !21719
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !21720

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !21721
  %4 = load i32, i32* %call2, align 4, !dbg !21721, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !21722
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !21723

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21724
  br label %if.end8, !dbg !21726

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !21727
  %6 = load i32, i32* %target.addr, align 4, !dbg !21729
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !21730
  store i32 %call5, i32* %result, align 4, !dbg !21731
  %7 = load i32, i32* %result, align 4, !dbg !21732
  %cmp6 = icmp sge i32 %7, 0, !dbg !21734
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !21735

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21736
  br label %if.end, !dbg !21737

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !21738

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !21739
  %9 = load i32, i32* %target.addr, align 4, !dbg !21740
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !21741
  store i32 %call10, i32* %result, align 4, !dbg !21742
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !21743
  %cmp12 = icmp sle i32 0, %10, !dbg !21745
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !21746

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21747
  %cmp13 = icmp eq i32 %11, -1, !dbg !21748
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !21749

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !21750, metadata !DIExpression()), !dbg !21752
  %12 = load i32, i32* %result, align 4, !dbg !21753
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !21754
  store i32 %call15, i32* %flags, align 4, !dbg !21752
  %13 = load i32, i32* %flags, align 4, !dbg !21755
  %cmp16 = icmp slt i32 %13, 0, !dbg !21757
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !21758

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !21759
  %15 = load i32, i32* %flags, align 4, !dbg !21760
  %or = or i32 %15, 1, !dbg !21761
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !21762
  %cmp19 = icmp eq i32 %call18, -1, !dbg !21763
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !21764

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21765, metadata !DIExpression()), !dbg !21767
  %call21 = call i32* @__errno_location() #16, !dbg !21768
  %16 = load i32, i32* %call21, align 4, !dbg !21768, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !21767
  %17 = load i32, i32* %result, align 4, !dbg !21769
  %call22 = call i32 @close(i32 %17), !dbg !21770
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21771
  %call23 = call i32* @__errno_location() #16, !dbg !21772
  store i32 %18, i32* %call23, align 4, !dbg !21773, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21774
  br label %if.end24, !dbg !21775

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !21776

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !21777
  ret i32 %19, !dbg !21778
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !21779 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !21781, metadata !DIExpression()), !dbg !21782
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !21783
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !21784

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21785
  br label %return, !dbg !21785

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21787
  br label %return, !dbg !21787

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21788
  br label %return, !dbg !21788

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21789
  br label %return, !dbg !21789

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21790
  br label %return, !dbg !21790

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21791
  ret i1 %1, !dbg !21791
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !21792 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21794, metadata !DIExpression()), !dbg !21795
  %0 = load i32, i32* %c.addr, align 4, !dbg !21796
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21797

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21798
  br label %return, !dbg !21798

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21800
  br label %return, !dbg !21800

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21801
  ret i1 %1, !dbg !21801
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !21802 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21803, metadata !DIExpression()), !dbg !21804
  %0 = load i32, i32* %c.addr, align 4, !dbg !21805
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21806

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21807
  br label %return, !dbg !21807

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21809
  br label %return, !dbg !21809

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21810
  ret i1 %1, !dbg !21810
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !21811 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21812, metadata !DIExpression()), !dbg !21813
  %0 = load i32, i32* %c.addr, align 4, !dbg !21814
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21815

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21816
  br label %return, !dbg !21816

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21818
  br label %return, !dbg !21818

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21819
  ret i1 %1, !dbg !21819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !21820 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21821, metadata !DIExpression()), !dbg !21822
  %0 = load i32, i32* %c.addr, align 4, !dbg !21823
  %cmp = icmp eq i32 %0, 32, !dbg !21824
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !21825

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21826
  %cmp1 = icmp eq i32 %1, 9, !dbg !21827
  br label %lor.end, !dbg !21825

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !21828
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !21829 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21830, metadata !DIExpression()), !dbg !21831
  %0 = load i32, i32* %c.addr, align 4, !dbg !21832
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !21833

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21834
  br label %return, !dbg !21834

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21836
  br label %return, !dbg !21836

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21837
  ret i1 %1, !dbg !21837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !21838 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21839, metadata !DIExpression()), !dbg !21840
  %0 = load i32, i32* %c.addr, align 4, !dbg !21841
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !21842

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21843
  br label %return, !dbg !21843

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21845
  br label %return, !dbg !21845

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21846
  ret i1 %1, !dbg !21846
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !21847 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21848, metadata !DIExpression()), !dbg !21849
  %0 = load i32, i32* %c.addr, align 4, !dbg !21850
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21851

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21852
  br label %return, !dbg !21852

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21854
  br label %return, !dbg !21854

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21855
  ret i1 %1, !dbg !21855
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !21856 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21857, metadata !DIExpression()), !dbg !21858
  %0 = load i32, i32* %c.addr, align 4, !dbg !21859
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21860

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21861
  br label %return, !dbg !21861

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21863
  br label %return, !dbg !21863

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21864
  ret i1 %1, !dbg !21864
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !21865 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21866, metadata !DIExpression()), !dbg !21867
  %0 = load i32, i32* %c.addr, align 4, !dbg !21868
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21869

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21870
  br label %return, !dbg !21870

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21872
  br label %return, !dbg !21872

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21873
  ret i1 %1, !dbg !21873
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !21874 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21875, metadata !DIExpression()), !dbg !21876
  %0 = load i32, i32* %c.addr, align 4, !dbg !21877
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !21878

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21879
  br label %return, !dbg !21879

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21881
  br label %return, !dbg !21881

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21882
  ret i1 %1, !dbg !21882
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !21883 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21884, metadata !DIExpression()), !dbg !21885
  %0 = load i32, i32* %c.addr, align 4, !dbg !21886
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !21887

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21888
  br label %return, !dbg !21888

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21890
  br label %return, !dbg !21890

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21891
  ret i1 %1, !dbg !21891
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !21892 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21893, metadata !DIExpression()), !dbg !21894
  %0 = load i32, i32* %c.addr, align 4, !dbg !21895
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21896

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21897
  br label %return, !dbg !21897

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21899
  br label %return, !dbg !21899

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21900
  ret i1 %1, !dbg !21900
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !21901 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21902, metadata !DIExpression()), !dbg !21903
  %0 = load i32, i32* %c.addr, align 4, !dbg !21904
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !21905

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21906
  br label %return, !dbg !21906

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21908
  br label %return, !dbg !21908

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21909
  ret i1 %1, !dbg !21909
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !21910 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21911, metadata !DIExpression()), !dbg !21912
  %0 = load i32, i32* %c.addr, align 4, !dbg !21913
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21914

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21915
  %sub = sub nsw i32 %1, 65, !dbg !21917
  %add = add nsw i32 %sub, 97, !dbg !21918
  store i32 %add, i32* %retval, align 4, !dbg !21919
  br label %return, !dbg !21919

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21920
  store i32 %2, i32* %retval, align 4, !dbg !21921
  br label %return, !dbg !21921

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21922
  ret i32 %3, !dbg !21922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !21923 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21924, metadata !DIExpression()), !dbg !21925
  %0 = load i32, i32* %c.addr, align 4, !dbg !21926
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21927

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21928
  %sub = sub nsw i32 %1, 97, !dbg !21930
  %add = add nsw i32 %sub, 65, !dbg !21931
  store i32 %add, i32* %retval, align 4, !dbg !21932
  br label %return, !dbg !21932

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21933
  store i32 %2, i32* %retval, align 4, !dbg !21934
  br label %return, !dbg !21934

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21935
  ret i32 %3, !dbg !21935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !21936 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !1811
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21940, metadata !DIExpression()), !dbg !21941
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !21942, metadata !DIExpression()), !dbg !21943
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !21944, metadata !DIExpression()), !dbg !21945
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21946
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !21947
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !21948
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !21945
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21949
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !21949
  br i1 %tobool, label %if.then, label %if.end21, !dbg !21951

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21952, metadata !DIExpression()), !dbg !21954
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21955
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #9, !dbg !21956
  store i32 %call1, i32* %fd, align 4, !dbg !21954
  %4 = load i32, i32* %fd, align 4, !dbg !21957
  %cmp = icmp sle i32 0, %4, !dbg !21959
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !21960

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !21961
  %cmp2 = icmp sle i32 %5, 2, !dbg !21962
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !21963

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21964, metadata !DIExpression()), !dbg !21966
  %6 = load i32, i32* %fd, align 4, !dbg !21967
  %call4 = call i32 @dup_safer(i32 %6), !dbg !21968
  store i32 %call4, i32* %f, align 4, !dbg !21966
  %7 = load i32, i32* %f, align 4, !dbg !21969
  %cmp5 = icmp slt i32 %7, 0, !dbg !21971
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21972

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21973, metadata !DIExpression()), !dbg !21975
  %call7 = call i32* @__errno_location() #16, !dbg !21976
  %8 = load i32, i32* %call7, align 4, !dbg !21976, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !21975
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21977
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !21978
  %10 = load i32, i32* %e, align 4, !dbg !21979
  %call9 = call i32* @__errno_location() #16, !dbg !21980
  store i32 %10, i32* %call9, align 4, !dbg !21981, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !21982
  br label %return, !dbg !21982

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21983
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !21985
  %cmp11 = icmp ne i32 %call10, 0, !dbg !21986
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !21987

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !21988
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !21989
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #9, !dbg !21990
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !21991
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !21991
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !21992

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !21993, metadata !DIExpression()), !dbg !21995
  %call16 = call i32* @__errno_location() #16, !dbg !21996
  %14 = load i32, i32* %call16, align 4, !dbg !21996, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !21995
  %15 = load i32, i32* %f, align 4, !dbg !21997
  %call17 = call i32 @close(i32 %15), !dbg !21998
  %16 = load i32, i32* %e15, align 4, !dbg !21999
  %call18 = call i32* @__errno_location() #16, !dbg !22000
  store i32 %16, i32* %call18, align 4, !dbg !22001, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !22002
  br label %return, !dbg !22002

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !22003

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !22004

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22005
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !22006
  br label %return, !dbg !22006

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !22007
  ret %struct._IO_FILE* %18, !dbg !22007
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!65, !1171, !425, !604, !1184, !621, !1231, !644, !1233, !1236, !1239, !650, !1242, !681, !1244, !700, !744, !1247, !1250, !1253, !787, !1256, !1268, !1280, !1290, !1293, !1296, !1299, !1302, !794, !1305, !1316, !1330, !1345, !1357, !849, !1360, !1363, !890, !1366, !1369, !1372, !1374, !967, !1377, !1395, !1397, !1400, !1007, !1402, !1052, !1071, !1404, !1407, !1094, !1105, !1467, !1470, !1473, !1486, !1499, !1536, !1572, !1608, !1644, !1647, !1658, !1661, !1112, !1664, !1666, !1669, !1673, !1676, !1678, !1681, !1684, !1687, !1690, !1702, !1717, !1793, !1798, !1800, !1802, !1158, !1804, !1806, !1808}
!llvm.ident = !{}
!llvm.module.flags = !{!1846, !1847, !1848, !1849}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "selinux_enabled", scope: !65, file: !66, line: 53, type: !7, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !121, globals: !386, nameTableKind: None)
!66 = !DIFile(filename: "src/install.c", directory: "/home/mbarbar/software/coreutils-8.31")
!67 = !{!68, !76, !83, !89, !95, !100}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/software/coreutils-8.31")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/software/coreutils-8.31")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !102, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!101 = !DIFile(filename: "./lib/savewd.h", directory: "/home/mbarbar/software/coreutils-8.31")
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !103)
!103 = !{!104, !105}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !102, file: !101, line: 66, baseType: !100, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !102, file: !101, line: 74, baseType: !106, size: 32, offset: 32)
!106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !102, file: !101, line: 69, size: 32, elements: !107)
!107 = !{!108, !109, !110}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !106, file: !101, line: 71, baseType: !7, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !106, file: !101, line: 72, baseType: !7, size: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !106, file: !101, line: 73, baseType: !111, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !112, line: 97, baseType: !113)
!112 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!114 = !{!115, !116, !117, !118, !119, !120}
!115 = !DIEnumerator(name: "INITIAL_STATE", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "FD_STATE", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "FD_POST_CHDIR_STATE", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "FORKING_STATE", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "ERROR_STATE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "FINAL_STATE", value: 5, isUnsigned: true)
!121 = !{!122, !9, !53, !127, !129, !131, !0, !180, !183, !185, !188, !191, !194, !197, !200, !203, !206, !7, !142, !209, !37, !210, !213, !216, !219, !231, !234, !237, !240, !243, !246, !249, !60, !140, !252, !255, !258, !261, !264, !267, !270, !139, !273, !276, !279, !282, !285, !288, !291, !304, !305, !308, !311, !314, !317, !320, !175, !55, !323, !334, !57, !128, !130, !342, !344, !347, !350, !353, !29, !356, !111, !359, !360, !363, !373, !376, !184, !379, !380, !383}
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !123, line: 72, baseType: !124)
!123 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{null, !7}
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !112, line: 79, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !112, line: 64, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !141, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !179}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !132, file: !77, line: 100, baseType: !68, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !132, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !132, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !132, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !132, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !112, line: 69, baseType: !140)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !132, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!142 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !132, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !132, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !132, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !132, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !132, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !132, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !132, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !132, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !132, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !132, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !132, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !132, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !132, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !132, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !132, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !132, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !132, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !132, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !132, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !132, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !132, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !132, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !132, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !132, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !132, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !132, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !132, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !132, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !132, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !132, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !132, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !132, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !178)
!177 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !177, line: 67, flags: DIFlagFwdDecl)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !132, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 312, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 39)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1320, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 165)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 3720, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 465)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 3208, elements: !192)
!192 = !{!193}
!193 = !DISubrange(count: 401)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 4032, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 504)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2776, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 347)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 360, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 45)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 432, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 54)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !207)
!207 = !{!208}
!208 = !DISubrange(count: 8)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 80, elements: !211)
!211 = !{!212}
!212 = !DISubrange(count: 10)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 192, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 24)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 168, elements: !217)
!217 = !{!218}
!218 = !DISubrange(count: 21)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 4608, elements: !229)
!220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !222, line: 50, size: 256, elements: !223)
!222 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!223 = !{!224, !225, !226, !228}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !221, file: !222, line: 52, baseType: !183, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !221, file: !222, line: 55, baseType: !7, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !221, file: !222, line: 56, baseType: !227, size: 64, offset: 128)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !221, file: !222, line: 57, baseType: !7, size: 32, offset: 192)
!229 = !{!230}
!230 = !DISubrange(count: 18)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 304, elements: !232)
!232 = !{!233}
!233 = !DISubrange(count: 38)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 584, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 73)
!237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 536, elements: !238)
!238 = !{!239}
!239 = !DISubrange(count: 67)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 112, elements: !241)
!241 = !{!242}
!242 = !DISubrange(count: 14)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 128, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 16)
!246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 488, elements: !247)
!247 = !{!248}
!248 = !DISubrange(count: 61)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 456, elements: !250)
!250 = !{!251}
!251 = !DISubrange(count: 57)
!252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 232, elements: !253)
!253 = !{!254}
!254 = !DISubrange(count: 29)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !256)
!256 = !{!257}
!257 = !DISubrange(count: 12)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 336, elements: !259)
!259 = !{!260}
!260 = !DISubrange(count: 42)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 400, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 50)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 560, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 70)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 136, elements: !268)
!268 = !{!269}
!269 = !DISubrange(count: 17)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !272, line: 25, flags: DIFlagFwdDecl)
!272 = !DIFile(filename: "./lib/modechange.h", directory: "/home/mbarbar/software/coreutils-8.31")
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 576, elements: !274)
!274 = !{!275}
!275 = !DISubrange(count: 72)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 464, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 58)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 688, elements: !280)
!280 = !{!281}
!281 = !DISubrange(count: 86)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 600, elements: !283)
!283 = !{!284}
!284 = !DISubrange(count: 75)
!285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1768, elements: !286)
!286 = !{!287}
!287 = !DISubrange(count: 221)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1776, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 222)
!291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 896, elements: !302)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !295, file: !294, line: 633, size: 128, elements: !299)
!294 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!295 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !294, file: !294, line: 631, type: !296, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !183}
!298 = !{}
!299 = !{!300, !301}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !293, file: !294, line: 633, baseType: !183, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !293, file: !294, line: 633, baseType: !183, size: 64, offset: 64)
!302 = !{!303}
!303 = !DISubrange(count: 7)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 184, elements: !306)
!306 = !{!307}
!307 = !DISubrange(count: 23)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 40)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 4)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 568, elements: !315)
!315 = !{!316}
!316 = !DISubrange(count: 71)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 216, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 27)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 408, elements: !321)
!321 = !{!322}
!322 = !DISubrange(count: 51)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !325, line: 49, size: 384, elements: !326)
!325 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!326 = !{!327, !328, !329, !330, !331, !332, !333}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !324, file: !325, line: 51, baseType: !9, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !324, file: !325, line: 52, baseType: !9, size: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !324, file: !325, line: 54, baseType: !128, size: 32, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !324, file: !325, line: 55, baseType: !130, size: 32, offset: 160)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !324, file: !325, line: 56, baseType: !9, size: 64, offset: 192)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !324, file: !325, line: 57, baseType: !9, size: 64, offset: 256)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !324, file: !325, line: 58, baseType: !9, size: 64, offset: 320)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !336, line: 42, size: 256, elements: !337)
!336 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!337 = !{!338, !339, !340, !341}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !335, file: !336, line: 44, baseType: !9, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !335, file: !336, line: 45, baseType: !9, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !335, file: !336, line: 46, baseType: !130, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !335, file: !336, line: 47, baseType: !209, size: 64, offset: 192)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 264, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 33)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 368, elements: !348)
!348 = !{!349}
!349 = !DISubrange(count: 46)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 176, elements: !351)
!351 = !{!352}
!352 = !DISubrange(count: 22)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 120, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 15)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !357)
!357 = !{!358}
!358 = !DISubrange(count: 4096)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 144, elements: !229)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 288, elements: !361)
!361 = !{!362}
!362 = !DISubrange(count: 36)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 256, elements: !371)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !366)
!365 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!366 = !{!367, !369}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !364, file: !365, line: 11, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !364, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!371 = !{!372}
!372 = !DISubrange(count: 2)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 240, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 30)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 32)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !371)
!380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 72, elements: !381)
!381 = !{!382}
!382 = !DISubrange(count: 9)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 352, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 44)
!386 = !{!387, !389, !391, !393, !395, !63, !397, !399, !401, !403, !405, !407, !409, !411, !413, !418, !420}
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "owner_name", scope: !65, file: !66, line: 74, type: !9, isLocal: true, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "group_name", scope: !65, file: !66, line: 81, type: !9, isLocal: true, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "copy_only_if_needed", scope: !65, file: !66, line: 102, type: !142, isLocal: true, isDefinition: true)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "strip_files", scope: !65, file: !66, line: 105, type: !142, isLocal: true, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "dir_arg", scope: !65, file: !66, line: 108, type: !142, isLocal: true, isDefinition: true)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 121, type: !219, isLocal: true, isDefinition: true)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "strip_program", scope: !65, file: !66, line: 111, type: !183, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "use_default_selinux_context", scope: !65, file: !66, line: 54, type: !142, isLocal: true, isDefinition: true)
!403 = !DIGlobalVariableExpression(var: !404, expr: !DIExpression())
!404 = distinct !DIGlobalVariable(name: "mode", scope: !65, file: !66, line: 90, type: !139, isLocal: true, isDefinition: true)
!405 = !DIGlobalVariableExpression(var: !406, expr: !DIExpression())
!406 = distinct !DIGlobalVariable(name: "dir_mode_bits", scope: !65, file: !66, line: 99, type: !139, isLocal: true, isDefinition: true)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "dir_mode", scope: !65, file: !66, line: 93, type: !139, isLocal: true, isDefinition: true)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "owner_id", scope: !65, file: !66, line: 77, type: !127, isLocal: true, isDefinition: true)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "group_id", scope: !65, file: !66, line: 84, type: !129, isLocal: true, isDefinition: true)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "a_buff", scope: !415, file: !66, line: 149, type: !356, isLocal: true, isDefinition: true)
!415 = distinct !DISubprogram(name: "have_same_content", scope: !66, file: !66, line: 146, type: !416, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!416 = !DISubroutineType(types: !417)
!417 = !{!142, !7, !7}
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "b_buff", scope: !415, file: !66, line: 150, type: !356, isLocal: true, isDefinition: true)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "first_call", scope: !422, file: !66, line: 318, type: !142, isLocal: true, isDefinition: true)
!422 = distinct !DISubprogram(name: "setdefaultfilecon", scope: !66, file: !66, line: 314, type: !296, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !425, file: !426, line: 147, type: !183, isLocal: true, isDefinition: true)
!425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !426, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !427, retainedTypes: !428, globals: !585, nameTableKind: None)
!426 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/software/coreutils-8.31")
!427 = !{!68, !76, !83, !89, !95}
!428 = !{!139, !53, !70, !9, !57, !55, !429, !142, !7, !261, !431, !320, !434, !175, !213, !437, !440, !183, !443, !360, !231, !234, !353, !140, !308, !350, !446, !449, !452, !453, !454, !457, !267, !460, !255, !461, !200, !203, !380, !489, !216, !490, !206, !493, !498, !500, !317, !184, !379, !501, !373, !29, !252, !504, !128, !130, !507, !510, !60, !511, !344, !513, !516, !519, !553, !10, !240, !243, !556, !475, !477, !559, !566, !569, !571, !573, !572, !127, !129, !574}
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !430, line: 63, baseType: !29)
!430 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 296, elements: !432)
!432 = !{!433}
!433 = !DISubrange(count: 37)
!434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 328, elements: !435)
!435 = !{!436}
!436 = !DISubrange(count: 41)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 88, elements: !438)
!438 = !{!439}
!439 = !DISubrange(count: 11)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 728, elements: !441)
!441 = !{!442}
!442 = !DISubrange(count: 91)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 376, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 47)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 392, elements: !447)
!447 = !{!448}
!448 = !DISubrange(count: 49)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 224, elements: !450)
!450 = !{!451}
!451 = !DISubrange(count: 28)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 416, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 52)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 344, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 43)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !464)
!463 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!464 = !{!465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !476, !478, !483, !484, !485}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !462, file: !463, line: 48, baseType: !452, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !462, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !462, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !462, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !462, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !462, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !462, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !462, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !462, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !462, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !462, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !462, file: !463, line: 91, baseType: !479, size: 128, offset: 576)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !480)
!480 = !{!481, !482}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !479, file: !365, line: 11, baseType: !368, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !479, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !462, file: !463, line: 92, baseType: !479, size: 128, offset: 704)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !462, file: !463, line: 93, baseType: !479, size: 128, offset: 832)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !462, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 192, elements: !487)
!487 = !{!488}
!488 = !DISubrange(count: 3)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 376, elements: !444)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 480, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 60)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !426, line: 125, size: 192, elements: !495)
!495 = !{!496, !497, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !494, file: !426, line: 127, baseType: !493, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !494, file: !426, line: 128, baseType: !498, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !112, line: 47, baseType: !453)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !494, file: !426, line: 129, baseType: !500, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !112, line: 59, baseType: !452)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 504, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 63)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 248, elements: !505)
!505 = !{!506}
!506 = !DISubrange(count: 31)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 200, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 25)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 256, elements: !371)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 104, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 13)
!516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 648, elements: !517)
!517 = !{!518}
!518 = !DISubrange(count: 81)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !522)
!522 = !{!523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !521, file: !4, line: 51, baseType: !7, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !521, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !521, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !521, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !521, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !521, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !521, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !521, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !521, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !521, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !521, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !521, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !521, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !521, file: !4, line: 70, baseType: !537, size: 64, offset: 832)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !521, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !521, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !521, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !521, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !521, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !521, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !521, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !521, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !521, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !521, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !521, file: !4, line: 93, baseType: !537, size: 64, offset: 1344)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !521, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !521, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !521, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !521, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 152, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 19)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 448, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 56)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !561, line: 23, size: 192, elements: !562)
!561 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/software/coreutils-8.31")
!562 = !{!563, !564, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !560, file: !561, line: 26, baseType: !429, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !560, file: !561, line: 29, baseType: !429, size: 64, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !560, file: !561, line: 32, baseType: !70, size: 32, offset: 128)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !567)
!567 = !{!568}
!568 = !DISubrange(count: 1024)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !430, line: 77, baseType: !570)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !573)
!573 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !430, line: 52, baseType: !575)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !576, line: 32, baseType: !577)
!576 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !426, line: 623, baseType: !578)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 192, elements: !38)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !426, line: 623, size: 192, elements: !580)
!580 = !{!581, !582, !583, !584}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !579, file: !426, line: 623, baseType: !70, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !579, file: !426, line: 623, baseType: !70, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !579, file: !426, line: 623, baseType: !53, size: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !579, file: !426, line: 623, baseType: !53, size: 64, offset: 128)
!585 = !{!586, !423, !591, !593, !598, !600}
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "mask", scope: !588, file: !426, line: 3051, type: !139, isLocal: true, isDefinition: true)
!588 = distinct !DISubprogram(name: "cached_umask", scope: !426, file: !426, line: 3049, type: !589, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!589 = !DISubroutineType(types: !590)
!590 = !{!139}
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !425, file: !426, line: 148, type: !183, isLocal: true, isDefinition: true)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "zeros", scope: !595, file: !426, line: 351, type: !9, isLocal: true, isDefinition: true)
!595 = distinct !DISubprogram(name: "write_zeros", scope: !426, file: !426, line: 349, type: !596, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!596 = !DISubroutineType(types: !597)
!597 = !{!142, !7, !429}
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "nz", scope: !595, file: !426, line: 352, type: !55, isLocal: true, isDefinition: true)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "fallback", scope: !595, file: !426, line: 359, type: !566, isLocal: true, isDefinition: true)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !604, file: !605, line: 45, type: !175, isLocal: true, isDefinition: true)
!604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !605, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !606, globals: !618, nameTableKind: None)
!605 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!606 = !{!53, !9, !607, !610, !498, !500, !175, !616}
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !608, line: 102, baseType: !609)
!608 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !605, line: 33, size: 192, elements: !612)
!612 = !{!613, !614, !615}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !611, file: !605, line: 35, baseType: !498, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !611, file: !605, line: 36, baseType: !500, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !611, file: !605, line: 40, baseType: !9, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!618 = !{!602}
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !621, file: !622, line: 38, type: !628, isLocal: true, isDefinition: true)
!621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !622, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !623, globals: !641, nameTableKind: None)
!622 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/software/coreutils-8.31")
!623 = !{!7, !624, !9, !627, !55, !628, !629, !183, !636}
!624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !625)
!625 = !{!626}
!626 = !DISubrange(count: 256)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 72, elements: !381)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !622, line: 71, size: 192, elements: !631)
!631 = !{!632, !633, !634, !635}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !630, file: !622, line: 73, baseType: !7, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !630, file: !622, line: 74, baseType: !183, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !630, file: !622, line: 75, baseType: !7, size: 32, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !630, file: !622, line: 76, baseType: !7, size: 32, offset: 160)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !622, line: 131, size: 128, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !637, file: !622, line: 133, baseType: !183, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !637, file: !622, line: 134, baseType: !7, size: 32, offset: 64)
!641 = !{!619}
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "Version", scope: !644, file: !645, line: 2, type: !183, isLocal: false, isDefinition: true)
!644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !645, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !646, globals: !647, nameTableKind: None)
!645 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!646 = !{!183}
!647 = !{!642}
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !650, file: !654, line: 82, type: !183, isLocal: false, isDefinition: true)
!650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !651, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !652, retainedTypes: !660, globals: !678, nameTableKind: None)
!651 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!652 = !{!68, !653}
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !654, line: 172, baseType: !70, size: 32, elements: !655)
!654 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!655 = !{!656, !657, !658, !659}
!656 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!657 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!658 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!659 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!660 = !{!53, !70, !55, !183, !216, !184, !379, !627, !661, !9, !662, !7, !10, !666, !675, !142, !624, !31}
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !112, line: 108, baseType: !570)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !664, line: 127, baseType: !665)
!664 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !664, line: 127, flags: DIFlagFwdDecl)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !668, line: 22, size: 2240, elements: !669)
!668 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!669 = !{!670, !671, !672, !673, !674}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !667, file: !668, line: 25, baseType: !453, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !667, file: !668, line: 26, baseType: !29, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !667, file: !668, line: 31, baseType: !33, size: 16, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !667, file: !668, line: 32, baseType: !573, size: 8, offset: 144)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !667, file: !668, line: 33, baseType: !624, size: 2048, offset: 152)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 40, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 5)
!678 = !{!648}
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "backup_args", scope: !681, file: !697, line: 42, type: !687, isLocal: true, isDefinition: true)
!681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !682, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !683, retainedTypes: !684, globals: !694, nameTableKind: None)
!682 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!683 = !{!68}
!684 = !{!183, !9, !184, !685, !687, !689, !267, !243}
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 256, elements: !207)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 576, elements: !381)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !183)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !690, line: 55, baseType: !691)
!690 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{null}
!694 = !{!695, !679}
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "backup_types", scope: !681, file: !697, line: 53, type: !685, isLocal: true, isDefinition: true)
!697 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "file_name", scope: !700, file: !741, line: 37, type: !183, isLocal: true, isDefinition: true)
!700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !701, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !702, globals: !740, nameTableKind: None)
!701 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!702 = !{!183, !142, !703, !553, !7, !737, !738, !739}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !705, file: !4, line: 51, baseType: !7, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !705, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !705, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !705, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !705, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !705, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !705, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !705, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !705, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !705, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !705, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !705, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !705, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !705, file: !4, line: 70, baseType: !721, size: 64, offset: 832)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !705, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !705, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !705, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !705, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !705, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !705, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !705, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !705, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !705, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !705, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !705, file: !4, line: 93, baseType: !721, size: 64, offset: 1344)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !705, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !705, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !705, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !705, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 56, elements: !302)
!738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 24, elements: !487)
!739 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!740 = !{!698}
!741 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "file_name", scope: !744, file: !784, line: 46, type: !183, isLocal: true, isDefinition: true)
!744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !745, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !746, globals: !781, nameTableKind: None)
!745 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!746 = !{!183, !142, !747, !7, !255, !737, !738, !739}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !749)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !749, file: !4, line: 51, baseType: !7, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !749, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !749, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !749, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !749, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !749, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !749, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !749, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !749, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !749, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !749, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !749, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !749, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !749, file: !4, line: 70, baseType: !765, size: 64, offset: 832)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !749, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !749, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !749, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !749, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !749, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !749, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !749, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !749, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !749, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !749, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !749, file: !4, line: 93, baseType: !765, size: 64, offset: 1344)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !749, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !749, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !749, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !749, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!781 = !{!742, !782}
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !744, file: !784, line: 56, type: !142, isLocal: true, isDefinition: true)
!784 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "exit_failure", scope: !787, file: !791, line: 24, type: !739, isLocal: false, isDefinition: true)
!787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !788, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !789, globals: !790, nameTableKind: None)
!788 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!789 = !{!739}
!790 = !{!785}
!791 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "default_tuning", scope: !794, file: !800, line: 130, type: !816, isLocal: true, isDefinition: true)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !796, globals: !846, nameTableKind: None)
!795 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!796 = !{!57, !53, !55, !797, !809, !803, !213, !344, !834, !844, !573, !184, !816, !845, !798, !815, !827, !839, !831, !821, !142, !7}
!797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !800, line: 52, size: 640, elements: !801)
!800 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!801 = !{!802, !808, !811, !812, !813, !814, !826, !833, !838, !843}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !799, file: !800, line: 57, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !800, line: 46, size: 128, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !804, file: !800, line: 48, baseType: !53, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !800, line: 49, baseType: !803, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !799, file: !800, line: 58, baseType: !809, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !804)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !799, file: !800, line: 59, baseType: !55, size: 64, offset: 128)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !799, file: !800, line: 60, baseType: !55, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !799, file: !800, line: 61, baseType: !55, size: 64, offset: 256)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !799, file: !800, line: 64, baseType: !815, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !177, line: 65, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !177, line: 53, size: 160, elements: !819)
!819 = !{!820, !822, !823, !824, !825}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !818, file: !177, line: 58, baseType: !821, size: 32)
!821 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !818, file: !177, line: 59, baseType: !821, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !818, file: !177, line: 60, baseType: !821, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !818, file: !177, line: 61, baseType: !821, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !818, file: !177, line: 62, baseType: !142, size: 8, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !799, file: !800, line: 71, baseType: !827, size: 64, offset: 384)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !177, line: 48, baseType: !828)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!55, !831, !55}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !799, file: !800, line: 72, baseType: !834, size: 64, offset: 448)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !177, line: 49, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!142, !831, !831}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !799, file: !800, line: 73, baseType: !839, size: 64, offset: 512)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !177, line: 50, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{null, !53}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !799, file: !800, line: 76, baseType: !803, size: 64, offset: 576)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!846 = !{!792}
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "program_name", scope: !849, file: !887, line: 33, type: !183, isLocal: false, isDefinition: true)
!849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !850, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !851, globals: !886, nameTableKind: None)
!850 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!851 = !{!53, !9, !183, !556, !852, !184, !206, !311}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !855)
!855 = !{!856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !854, file: !4, line: 51, baseType: !7, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !854, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !854, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !854, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !854, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !854, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !854, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !854, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !854, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !854, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !854, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !854, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !854, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !854, file: !4, line: 70, baseType: !870, size: 64, offset: 832)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !854, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !854, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !854, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !854, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !854, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !854, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !854, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !854, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !854, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !854, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !854, file: !4, line: 93, baseType: !870, size: 64, offset: 1344)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !854, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !854, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !854, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !854, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!886 = !{!847}
!887 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !890, file: !913, line: 85, type: !908, isLocal: false, isDefinition: true)
!890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !891, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !892, retainedTypes: !907, globals: !950, nameTableKind: None)
!891 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!892 = !{!893}
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !894, line: 32, baseType: !70, size: 32, elements: !895)
!894 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906}
!896 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!897 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!898 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!899 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!900 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!901 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!902 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!903 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!904 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!905 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!906 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!907 = !{!7, !33, !55, !908, !909, !911, !573, !921, !918, !70, !183, !922, !924, !9, !925, !624, !142, !379, !184, !930, !932, !944, !945, !947, !311, !206, !738}
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 704, elements: !438)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 320, elements: !211)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !913, line: 65, size: 448, elements: !914)
!913 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!914 = !{!915, !916, !917, !919, !920}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !912, file: !913, line: 68, baseType: !893, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !912, file: !913, line: 71, baseType: !7, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !912, file: !913, line: 75, baseType: !918, size: 256, offset: 64)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !207)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !912, file: !913, line: 78, baseType: !183, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !912, file: !913, line: 81, baseType: !183, size: 64, offset: 384)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !913, line: 834, size: 128, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !926, file: !913, line: 836, baseType: !55, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !926, file: !913, line: 837, baseType: !9, size: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !933, line: 6, baseType: !934)
!933 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !935, line: 21, baseType: !936)
!935 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !935, line: 13, size: 64, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !936, file: !935, line: 15, baseType: !7, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !936, file: !935, line: 20, baseType: !940, size: 32, offset: 32)
!940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !936, file: !935, line: 16, size: 32, elements: !941)
!941 = !{!942, !943}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !940, file: !935, line: 18, baseType: !70, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !940, file: !935, line: 19, baseType: !311, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 48, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 6)
!950 = !{!888, !951, !953, !955, !957, !959, !961, !963}
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !890, file: !913, line: 101, type: !909, isLocal: false, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !890, file: !913, line: 1052, type: !912, isLocal: false, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !890, file: !913, line: 116, type: !912, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "slot0", scope: !890, file: !913, line: 842, type: !624, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "slotvec", scope: !890, file: !913, line: 845, type: !925, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "nslots", scope: !890, file: !913, line: 843, type: !7, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "slotvec0", scope: !890, file: !913, line: 844, type: !926, isLocal: true, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !967, file: !980, line: 74, type: !990, isLocal: true, isDefinition: true)
!967 = distinct !DICompileUnit(language: DW_LANG_C99, file: !968, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !969, retainedTypes: !977, globals: !1004, nameTableKind: None)
!968 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!969 = !{!970}
!970 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !971, line: 26, baseType: !70, size: 32, elements: !972)
!971 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/software/coreutils-8.31")
!972 = !{!973, !974, !975, !976}
!973 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!974 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!975 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!976 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!977 = !{!53, !9, !55, !978, !7, !986, !990, !992, !183, !1001, !979, !453, !985, !10, !662, !1002, !1003}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !980, line: 46, baseType: !981)
!980 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !980, line: 40, size: 128, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !981, file: !980, line: 42, baseType: !9, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !981, file: !980, line: 44, baseType: !985, size: 64, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !664, line: 34, baseType: !453)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !980, line: 72, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!7, !831, !831}
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 192, elements: !487)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !668, line: 22, size: 2240, elements: !995)
!995 = !{!996, !997, !998, !999, !1000}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !994, file: !668, line: 25, baseType: !453, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !994, file: !668, line: 26, baseType: !29, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !994, file: !668, line: 31, baseType: !33, size: 16, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !994, file: !668, line: 32, baseType: !573, size: 8, offset: 144)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !994, file: !668, line: 33, baseType: !624, size: 2048, offset: 152)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!1004 = !{!965}
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "letters", scope: !1007, file: !1022, line: 184, type: !1013, isLocal: true, isDefinition: true)
!1007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1008, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1009, globals: !1021, nameTableKind: None)
!1008 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1009 = !{!55, !9, !70, !7, !1010, !1013, !1014, !1017, !353, !1020, !379, !227}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1012, line: 33, flags: DIFlagFwdDecl)
!1012 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 504, elements: !502)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!7, !9, !53}
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 280, elements: !1018)
!1018 = !{!1019}
!1019 = !DISubrange(count: 35)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 416, elements: !455)
!1021 = !{!1005}
!1022 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "ht", scope: !1025, file: !1026, line: 163, type: !175, isLocal: true, isDefinition: true)
!1025 = distinct !DISubprogram(name: "utimecmpat", scope: !1026, file: !1026, line: 132, type: !1027, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1052, retainedNodes: !298)
!1026 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!7, !7, !183, !1029, !1029, !7}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1049, !1050, !1051}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1031, file: !463, line: 48, baseType: !452, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1031, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1031, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1031, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1031, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1031, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1031, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1031, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1031, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1031, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1031, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1031, file: !463, line: 91, baseType: !1045, size: 128, offset: 576)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1045, file: !365, line: 11, baseType: !368, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1045, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1031, file: !463, line: 92, baseType: !1045, size: 128, offset: 704)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1031, file: !463, line: 93, baseType: !1045, size: 128, offset: 832)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1031, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!1052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1053, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1054, globals: !1066, nameTableKind: None)
!1053 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1054 = !{!1055, !368, !7, !1057, !142, !452, !500, !1063, !370, !1064}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1056, line: 7, baseType: !368)
!1056 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1026, line: 66, size: 128, elements: !1059)
!1059 = !{!1060, !1061, !1062}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1058, file: !1026, line: 69, baseType: !500, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1058, file: !1026, line: 76, baseType: !7, size: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1058, file: !1026, line: 80, baseType: !142, size: 8, offset: 96)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 256, elements: !371)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1066 = !{!1023, !1067}
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1025, file: !1026, line: 166, type: !1057, isLocal: true, isDefinition: true)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1071, file: !1091, line: 75, type: !7, isLocal: true, isDefinition: true)
!1071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1072, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1073, globals: !1088, nameTableKind: None)
!1072 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1073 = !{!1074, !1079, !7, !370, !1080, !1087, !368, !1086, !142, !1055, !140}
!1074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 256, elements: !371)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1075, file: !365, line: 11, baseType: !368, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1075, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 256, elements: !371)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1082, line: 8, size: 128, elements: !1083)
!1082 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1081, file: !1082, line: 10, baseType: !368, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1081, file: !1082, line: 11, baseType: !1086, size: 64, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1088 = !{!1069, !1089}
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1071, file: !1091, line: 76, type: !7, isLocal: true, isDefinition: true)
!1091 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1094, file: !1098, line: 26, type: !443, isLocal: false, isDefinition: true)
!1094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1095, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1096, globals: !1097, nameTableKind: None)
!1095 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1096 = !{!443}
!1097 = !{!1092}
!1098 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "initialized", scope: !1101, file: !1102, line: 34, type: !142, isLocal: true, isDefinition: true)
!1101 = distinct !DISubprogram(name: "can_write_any_file", scope: !1102, file: !1102, line: 32, type: !1103, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1105, retainedNodes: !298)
!1102 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!142}
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1104, globals: !1107, nameTableKind: None)
!1106 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1107 = !{!1099, !1108}
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "can_write", scope: !1101, file: !1102, line: 35, type: !142, isLocal: true, isDefinition: true)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1112, file: !1151, line: 69, type: !689, isLocal: false, isDefinition: true)
!1112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1113, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1114, globals: !1150, nameTableKind: None)
!1113 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1114 = !{!53, !689, !55, !627, !142, !1115, !184, !183, !317, !252, !216, !1116, !206, !675}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1118, file: !4, line: 51, baseType: !7, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1118, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1118, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1118, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1118, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1118, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1118, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1118, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1118, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1118, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1118, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1118, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1118, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1118, file: !4, line: 70, baseType: !1134, size: 64, offset: 832)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1118, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1118, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1118, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1118, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1118, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1118, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1118, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1118, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1118, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1118, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1118, file: !4, line: 93, baseType: !1134, size: 64, offset: 1344)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1118, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1118, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1118, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1118, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1150 = !{!1110}
!1151 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1154, file: !1155, line: 506, type: !7, isLocal: true, isDefinition: true)
!1154 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1155, file: !1155, line: 487, type: !1156, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !298)
!1155 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!7, !7, !7}
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1160, globals: !1170, nameTableKind: None)
!1159 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1160 = !{!1161, !7, !53}
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !576, line: 14, baseType: !1162)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1159, line: 207, baseType: !1163)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 192, elements: !38)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1159, line: 207, size: 192, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1164, file: !1159, line: 207, baseType: !70, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1164, file: !1159, line: 207, baseType: !70, size: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1164, file: !1159, line: 207, baseType: !53, size: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1164, file: !1159, line: 207, baseType: !53, size: 64, offset: 128)
!1170 = !{!1152}
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1173, nameTableKind: None)
!1172 = !DIFile(filename: "src/prog-fprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1173 = !{!1174, !183, !738}
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !430, line: 52, baseType: !1175)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !576, line: 32, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1172, line: 30, baseType: !1177)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1178, size: 192, elements: !38)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1172, line: 30, size: 192, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1178, file: !1172, line: 30, baseType: !70, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1178, file: !1172, line: 30, baseType: !70, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1178, file: !1172, line: 30, baseType: !53, size: 64, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1178, file: !1172, line: 30, baseType: !53, size: 64, offset: 128)
!1184 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1185, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1186, nameTableKind: None)
!1185 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1186 = !{!1187, !7, !55, !1188, !142, !70, !1194, !1223, !1210, !1199, !1204, !1224, !359, !1227, !1228}
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !112, line: 85, baseType: !29)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !561, line: 23, size: 192, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1189, file: !561, line: 26, baseType: !1187, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1189, file: !561, line: 29, baseType: !1187, size: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1189, file: !561, line: 32, baseType: !70, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1196, line: 35, size: 256, elements: !1197)
!1196 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1197 = !{!1198, !1202, !1203, !1206, !1207, !1208, !1209}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1195, file: !1196, line: 38, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1200, line: 27, baseType: !1201)
!1200 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1195, file: !1196, line: 41, baseType: !1199, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1195, file: !1196, line: 44, baseType: !1204, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1200, line: 26, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1195, file: !1196, line: 47, baseType: !1204, size: 32, offset: 160)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1195, file: !1196, line: 50, baseType: !1204, size: 32, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1195, file: !1196, line: 52, baseType: !1204, size: 32, offset: 224)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1195, file: !1196, line: 59, baseType: !1210, offset: 256)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1211, elements: !1221)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1196, line: 14, size: 448, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1218, !1219}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1211, file: !1196, line: 18, baseType: !1199, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1211, file: !1196, line: 22, baseType: !1199, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1211, file: !1196, line: 25, baseType: !1199, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1211, file: !1196, line: 27, baseType: !1217, size: 128, offset: 192)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 128, elements: !371)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1211, file: !1196, line: 30, baseType: !1204, size: 32, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1211, file: !1196, line: 32, baseType: !1220, size: 96, offset: 352)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 96, elements: !487)
!1221 = !{!1222}
!1222 = !DISubrange(count: 0)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 440, elements: !1225)
!1225 = !{!1226}
!1226 = !DISubrange(count: 55)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 360, elements: !201)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 512, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 64)
!1231 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1232, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1232 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1234, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1235, nameTableKind: None)
!1234 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1235 = !{!7, !738, !373}
!1236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1237, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1238, nameTableKind: None)
!1237 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1238 = !{!7, !317}
!1239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1240, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1241, nameTableKind: None)
!1240 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1241 = !{!53, !55, !661, !9, !7}
!1242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1243, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !683, nameTableKind: None)
!1243 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1245, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1246, nameTableKind: None)
!1245 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1246 = !{!55}
!1247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1248, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1249, nameTableKind: None)
!1248 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1249 = !{!9}
!1250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1251, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1252, nameTableKind: None)
!1251 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1252 = !{!55, !183, !142, !9}
!1253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1254, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1255, nameTableKind: None)
!1254 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1255 = !{!9, !183, !184, !142, !55}
!1256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1257, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1258, nameTableKind: None)
!1257 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1258 = !{!1259}
!1259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1260, line: 45, baseType: !70, size: 32, elements: !1261)
!1260 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267}
!1262 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1263 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1264 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1265 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1266 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1267 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1269, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1270, nameTableKind: None)
!1269 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1270 = !{!139, !1271}
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !576, line: 14, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1269, line: 35, baseType: !1273)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1274, size: 192, elements: !38)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1269, line: 35, size: 192, elements: !1275)
!1275 = !{!1276, !1277, !1278, !1279}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1274, file: !1269, line: 35, baseType: !70, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1274, file: !1269, line: 35, baseType: !70, size: 32, offset: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1274, file: !1269, line: 35, baseType: !53, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1274, file: !1269, line: 35, baseType: !53, size: 64, offset: 128)
!1280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1281, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1282, nameTableKind: None)
!1281 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1282 = !{!53, !9, !1283, !453, !498, !452, !500}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1285, line: 9, size: 192, elements: !1286)
!1285 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1286 = !{!1287, !1288, !1289}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1284, file: !1285, line: 11, baseType: !9, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1284, file: !1285, line: 12, baseType: !498, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1284, file: !1285, line: 13, baseType: !500, size: 64, offset: 128)
!1290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1291, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1292, nameTableKind: None)
!1291 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1292 = !{!9, !140}
!1293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1294, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1295, nameTableKind: None)
!1294 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1295 = !{!53, !9}
!1296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1297, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1298, nameTableKind: None)
!1297 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1298 = !{!53, !183, !55, !10, !184, !9}
!1299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1300, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1301, nameTableKind: None)
!1300 = !DIFile(filename: "./lib/full-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1301 = !{!9, !55, !7, !10}
!1302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1303, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1304, nameTableKind: None)
!1303 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1304 = !{!183, !55, !7, !184}
!1305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1306, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1307, nameTableKind: None)
!1306 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1307 = !{!1308, !55, !9, !498, !500, !1315}
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1285, line: 9, size: 192, elements: !1311)
!1311 = !{!1312, !1313, !1314}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1310, file: !1285, line: 11, baseType: !9, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1310, file: !1285, line: 12, baseType: !498, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1310, file: !1285, line: 13, baseType: !500, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1317, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1318, retainedTypes: !1329, nameTableKind: None)
!1317 = !DIFile(filename: "./lib/mkancesdirs.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1318 = !{!1319}
!1319 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1320, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1321)
!1321 = !{!1322, !1323}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1320, file: !101, line: 66, baseType: !1319, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1320, file: !101, line: 74, baseType: !1324, size: 32, offset: 32)
!1324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1320, file: !101, line: 69, size: 32, elements: !1325)
!1325 = !{!1326, !1327, !1328}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1324, file: !101, line: 71, baseType: !7, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1324, file: !101, line: 72, baseType: !7, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1324, file: !101, line: 73, baseType: !111, size: 32)
!1329 = !{!9, !10, !142, !7}
!1330 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1331, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1332, retainedTypes: !1343, nameTableKind: None)
!1331 = !DIFile(filename: "./lib/mkdir-p.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1332 = !{!1333}
!1333 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1334, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1334, file: !101, line: 66, baseType: !1333, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1334, file: !101, line: 74, baseType: !1338, size: 32, offset: 32)
!1338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1334, file: !101, line: 69, size: 32, elements: !1339)
!1339 = !{!1340, !1341, !1342}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1338, file: !101, line: 71, baseType: !7, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1338, file: !101, line: 72, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1338, file: !101, line: 73, baseType: !111, size: 32)
!1343 = !{!127, !129, !7, !9, !627, !142, !139, !10, !140, !353, !1344, !183, !379, !376, !258, !317}
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !371)
!1345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1346, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1347, nameTableKind: None)
!1346 = !DIFile(filename: "./lib/modechange.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1347 = !{!1348, !55, !183, !184, !70, !139, !10, !140}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !1350, line: 98, size: 128, elements: !1351)
!1350 = !DIFile(filename: "lib/modechange.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1351 = !{!1352, !1353, !1354, !1355, !1356}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1349, file: !1350, line: 100, baseType: !10, size: 8)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1349, file: !1350, line: 101, baseType: !10, size: 8, offset: 8)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "affected", scope: !1349, file: !1350, line: 102, baseType: !139, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1349, file: !1350, line: 103, baseType: !139, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "mentioned", scope: !1349, file: !1350, line: 104, baseType: !139, size: 32, offset: 96)
!1357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1358, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1359, nameTableKind: None)
!1358 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1359 = !{!7, !662}
!1360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1361, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1362, nameTableKind: None)
!1361 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1362 = !{!7}
!1363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1364, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1365, nameTableKind: None)
!1364 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1365 = !{!7, !139}
!1366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1367, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1368, nameTableKind: None)
!1367 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1368 = !{!9, !7, !55, !142, !183, !140}
!1369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1370, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1371, nameTableKind: None)
!1370 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1371 = !{!661, !7}
!1372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1373, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1371, nameTableKind: None)
!1373 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1375, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1376, nameTableKind: None)
!1375 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1376 = !{!183, !55, !142, !9, !7, !738, !453, !452}
!1377 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1378, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1379, retainedTypes: !1390, nameTableKind: None)
!1378 = !DIFile(filename: "./lib/savewd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1379 = !{!1380}
!1380 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1381, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1382)
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1381, file: !101, line: 66, baseType: !1380, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1381, file: !101, line: 74, baseType: !1385, size: 32, offset: 32)
!1385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1381, file: !101, line: 69, size: 32, elements: !1386)
!1386 = !{!1387, !1388, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1385, file: !101, line: 71, baseType: !7, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1385, file: !101, line: 72, baseType: !7, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1385, file: !101, line: 73, baseType: !111, size: 32)
!1390 = !{!1385, !7, !553, !513, !1391, !379, !111, !449, !1392, !359, !1393, !209, !9, !1394}
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 480, elements: !491)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 328, elements: !435)
!1393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 288, elements: !361)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 280, elements: !1018)
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1362, nameTableKind: None)
!1396 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1398, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1399, nameTableKind: None)
!1398 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1399 = !{!370, !368}
!1400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1401, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1401 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1403, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1362, nameTableKind: None)
!1403 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1405, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1406, nameTableKind: None)
!1405 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1406 = !{!9, !738, !7, !376}
!1407 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1408, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1409, nameTableKind: None)
!1408 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1409 = !{!53, !255, !737, !1410, !311, !1413, !243, !1115, !305, !449, !376, !360, !308, !383, !1416, !454, !490, !55, !1419, !1420, !216, !350, !60, !240, !1430, !1433}
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, elements: !1411)
!1411 = !{!1412}
!1412 = !DISubrange(count: -1)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1632, elements: !1414)
!1414 = !{!1415}
!1415 = !DISubrange(count: 204)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 384, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 48)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 640, elements: !211)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !430, line: 52, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !576, line: 32, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1408, line: 231, baseType: !1423)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, size: 192, elements: !38)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1408, line: 189, size: 192, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1424, file: !1408, line: 189, baseType: !70, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1424, file: !1408, line: 189, baseType: !70, size: 32, offset: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1424, file: !1408, line: 189, baseType: !53, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1424, file: !1408, line: 189, baseType: !53, size: 64, offset: 128)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 520, elements: !1431)
!1431 = !{!1432}
!1432 = !DISubrange(count: 65)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1435, file: !4, line: 51, baseType: !7, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1435, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1435, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1435, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1435, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1435, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1435, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1435, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1435, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1435, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1435, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1435, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1435, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1435, file: !4, line: 70, baseType: !1451, size: 64, offset: 832)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1435, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1435, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1435, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1435, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1435, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1435, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1435, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1435, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1435, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1435, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1435, file: !4, line: 93, baseType: !1451, size: 64, offset: 1344)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1435, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1435, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1435, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1435, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1468, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1469, nameTableKind: None)
!1468 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1469 = !{!55, !9, !53}
!1470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1471, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1472, nameTableKind: None)
!1471 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1472 = !{!739, !738, !267}
!1473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1474, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1475, retainedTypes: !1484, nameTableKind: None)
!1474 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1475 = !{!1476}
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !1477, line: 26, baseType: !70, size: 32, elements: !1478)
!1477 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1478 = !{!1479, !1480, !1481, !1482, !1483}
!1479 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!1480 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!1481 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!1482 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!1483 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!1484 = !{!7, !33, !9, !209, !57, !1485, !231, !243, !516, !183, !573, !184, !930, !10}
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !1477, line: 39, baseType: !1476)
!1486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1487, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1488, nameTableKind: None)
!1487 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1488 = !{!9, !55, !183, !184, !7, !1489, !10}
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !430, line: 52, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !576, line: 32, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1487, line: 36, baseType: !1492)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 192, elements: !38)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1487, size: 192, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1493, file: !1487, baseType: !70, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1493, file: !1487, baseType: !70, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1493, file: !1487, baseType: !53, size: 64, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1493, file: !1487, baseType: !53, size: 64, offset: 128)
!1499 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1500, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1501, nameTableKind: None)
!1500 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1501 = !{!142, !9, !55, !661, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1504, file: !4, line: 51, baseType: !7, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1504, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1504, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1504, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1504, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1504, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1504, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1504, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1504, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1504, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1504, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1504, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1504, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1504, file: !4, line: 70, baseType: !1520, size: 64, offset: 832)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1504, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1504, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1504, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1504, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1504, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1504, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1504, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1504, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1504, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1504, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1504, file: !4, line: 93, baseType: !1520, size: 64, offset: 1344)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1504, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1504, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1504, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1504, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1538, nameTableKind: None)
!1537 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1538 = !{!53, !1539, !7}
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1540, file: !4, line: 51, baseType: !7, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1540, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1540, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1540, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1540, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1540, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1540, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1540, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1540, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1540, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1540, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1540, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1540, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1540, file: !4, line: 70, baseType: !1556, size: 64, offset: 832)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1540, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1540, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1540, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1540, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1540, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1540, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1540, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1540, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1540, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1540, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1540, file: !4, line: 93, baseType: !1556, size: 64, offset: 1344)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1540, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1540, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1540, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1540, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1573, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1574, nameTableKind: None)
!1573 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1574 = !{!1575, !9, !7}
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1576, file: !4, line: 51, baseType: !7, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1576, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1576, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1576, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1576, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1576, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1576, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1576, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1576, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1576, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1576, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1576, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1576, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1576, file: !4, line: 70, baseType: !1592, size: 64, offset: 832)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1576, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1576, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1576, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1576, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1576, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1576, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1576, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1576, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1576, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1576, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1576, file: !4, line: 93, baseType: !1592, size: 64, offset: 1344)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1576, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1576, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1576, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1576, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1609, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1610, nameTableKind: None)
!1609 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1610 = !{!53, !1611, !9, !429, !7, !44}
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1612, file: !4, line: 51, baseType: !7, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1612, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1612, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1612, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1612, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1612, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1612, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1612, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1612, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1612, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1612, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1612, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1612, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1612, file: !4, line: 70, baseType: !1628, size: 64, offset: 832)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1612, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1612, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1612, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1612, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1612, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1612, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1612, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1612, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1612, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1612, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1612, file: !4, line: 93, baseType: !1628, size: 64, offset: 1344)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1612, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1612, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1612, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1612, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1645, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1646, nameTableKind: None)
!1645 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1646 = !{!55, !944, !573, !184}
!1647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1648, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1649, nameTableKind: None)
!1648 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1649 = !{!1650, !7, !1654, !1655}
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !1651, line: 41, baseType: !1652)
!1651 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !1651, line: 33, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !1651, line: 37, baseType: !7)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !1651, line: 40, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !1651, line: 32, flags: DIFlagFwdDecl)
!1658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1659, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1660, nameTableKind: None)
!1659 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1660 = !{!53, !139, !1655, !7}
!1661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1662, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1663, nameTableKind: None)
!1662 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1663 = !{!53, !142, !7, !139, !1655}
!1664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1665, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1665 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1666 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1667, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1668, nameTableKind: None)
!1667 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1668 = !{!571, !573, !572}
!1669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1670, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1671, nameTableKind: None)
!1670 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1671 = !{!1672, !7}
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!1673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1674, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1675, nameTableKind: None)
!1674 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1675 = !{!662, !7}
!1676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1677, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1677 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1679, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1680, nameTableKind: None)
!1679 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1680 = !{!142, !183, !379, !947}
!1681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1682, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1683, nameTableKind: None)
!1682 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1683 = !{!183, !55, !184}
!1684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1685, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1686, nameTableKind: None)
!1685 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1686 = !{!53, !183, !37, !947}
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1689, nameTableKind: None)
!1688 = !DIFile(filename: "./lib/dirchownmod.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1689 = !{!127, !129, !139, !7, !140, !128, !130}
!1690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1691, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1692, nameTableKind: None)
!1691 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1692 = !{!139, !1693}
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !576, line: 14, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1691, line: 35, baseType: !1695)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1696, size: 192, elements: !38)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1691, line: 35, size: 192, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1696, file: !1691, line: 35, baseType: !70, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1696, file: !1691, line: 35, baseType: !70, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1696, file: !1691, line: 35, baseType: !53, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1696, file: !1691, line: 35, baseType: !53, size: 64, offset: 128)
!1702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1703, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1704, nameTableKind: None)
!1703 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1704 = !{!1705, !1710, !1714, !55, !1716, !7}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1707, line: 54, size: 192, elements: !1708)
!1707 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1708 = !{!1709, !1713, !1715}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1706, file: !1707, line: 57, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1712, line: 25, flags: DIFlagFwdDecl)
!1712 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !1706, file: !1707, line: 64, baseType: !1714, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1012, line: 30, baseType: !607)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !1706, file: !1707, line: 65, baseType: !1714, size: 64, offset: 128)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 64, elements: !207)
!1717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1718, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1719, nameTableKind: None)
!1718 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1719 = !{!55, !1720, !1754, !738, !356, !1777, !1760, !831, !739, !7, !243, !353, !9, !661, !513, !10, !111, !127, !573, !1789, !1792, !1778}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1722, file: !4, line: 51, baseType: !7, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1722, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1722, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1722, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1722, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1722, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1722, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1722, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1722, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1722, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1722, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1722, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1722, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1722, file: !4, line: 70, baseType: !1738, size: 64, offset: 832)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1722, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1722, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1722, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1722, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1722, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1722, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1722, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1722, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1722, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1722, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1722, file: !4, line: 93, baseType: !1738, size: 64, offset: 1344)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1722, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1722, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1722, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1722, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1756, line: 79, size: 33216, elements: !1757)
!1756 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1757 = !{!1758, !1759, !1763, !1764}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1755, file: !1756, line: 83, baseType: !1720, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1755, file: !1756, line: 90, baseType: !1760, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{null, !831}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1755, file: !1756, line: 91, baseType: !831, size: 64, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1755, file: !1756, line: 117, baseType: !1765, size: 33024, offset: 192)
!1765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1755, file: !1756, line: 96, size: 33024, elements: !1766)
!1766 = !{!1767, !1768}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1765, file: !1756, line: 99, baseType: !356, size: 32768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !1765, file: !1756, line: 116, baseType: !1769, size: 33024)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1756, line: 102, size: 33024, elements: !1770)
!1770 = !{!1771, !1772, !1784}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !1769, file: !1756, line: 105, baseType: !55, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1769, file: !1756, line: 108, baseType: !1773, size: 16576, offset: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1774, line: 56, size: 16576, elements: !1775)
!1774 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1775 = !{!1776, !1781, !1782, !1783}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1773, file: !1774, line: 58, baseType: !1777, size: 16384)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1778, size: 16384, elements: !625)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !1774, line: 44, baseType: !1779)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !608, line: 52, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1201)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1773, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1773, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16448)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1773, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1769, file: !1756, line: 115, baseType: !1785, size: 16384, offset: 16640)
!1785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1769, file: !1756, line: 111, size: 16384, elements: !1786)
!1786 = !{!1787, !1788}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1785, file: !1756, line: 113, baseType: !1777, size: 16384)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !1756, line: 114, baseType: !1789, size: 16384)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 16384, elements: !1790)
!1790 = !{!1791}
!1791 = !DISubrange(count: 2048)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1794, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1795, nameTableKind: None)
!1794 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1795 = !{!1778, !1792, !1777, !7, !831, !183, !184, !1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1778)
!1798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1799, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1799 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1801, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1246, nameTableKind: None)
!1801 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1803, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1362, nameTableKind: None)
!1803 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1805, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1805 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1807, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, nameTableKind: None)
!1807 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1809, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !298, retainedTypes: !1810, nameTableKind: None)
!1809 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1810 = !{!1811, !7}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1813, file: !4, line: 51, baseType: !7, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1813, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1813, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1813, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1813, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1813, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1813, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1813, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1813, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1813, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1813, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1813, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1813, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1813, file: !4, line: 70, baseType: !1829, size: 64, offset: 832)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1813, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1813, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1813, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1813, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1813, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1813, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1813, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1813, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1813, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1813, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1813, file: !4, line: 93, baseType: !1829, size: 64, offset: 1344)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1813, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1813, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1813, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1813, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1845 = !{!"clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)"}
!1846 = !{i32 2, !"ctir", i32 1}
!1847 = !{i32 2, !"Dwarf Version", i32 4}
!1848 = !{i32 2, !"Debug Info Version", i32 3}
!1849 = !{i32 1, !"wchar_size", i32 4}
!1850 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 621, type: !125, scopeLine: 622, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !298)
!1851 = !DILocalVariable(name: "status", arg: 1, scope: !1850, file: !66, line: 621, type: !7)
!1852 = !DILocation(line: 621, column: 12, scope: !1850)
!1853 = !DILocation(line: 623, column: 7, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1850, file: !66, line: 623, column: 7)
!1855 = !DILocation(line: 623, column: 14, scope: !1854)
!1856 = !DILocation(line: 623, column: 7, scope: !1850)
!1857 = !DILocation(line: 624, column: 5, scope: !1854)
!1858 = !DILocation(line: 624, column: 5, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1854, file: !66, line: 624, column: 5)
!1860 = !DILocation(line: 627, column: 15, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1854, file: !66, line: 626, column: 5)
!1862 = !DILocation(line: 633, column: 15, scope: !1861)
!1863 = !DILocation(line: 633, column: 29, scope: !1861)
!1864 = !DILocation(line: 633, column: 43, scope: !1861)
!1865 = !DILocation(line: 633, column: 57, scope: !1861)
!1866 = !DILocation(line: 627, column: 7, scope: !1861)
!1867 = !DILocation(line: 634, column: 7, scope: !1861)
!1868 = !DILocation(line: 646, column: 7, scope: !1861)
!1869 = !DILocation(line: 648, column: 7, scope: !1861)
!1870 = !DILocation(line: 657, column: 7, scope: !1861)
!1871 = !DILocation(line: 665, column: 7, scope: !1861)
!1872 = !DILocation(line: 675, column: 7, scope: !1861)
!1873 = !DILocation(line: 683, column: 7, scope: !1861)
!1874 = !DILocation(line: 684, column: 7, scope: !1861)
!1875 = !DILocation(line: 685, column: 7, scope: !1861)
!1876 = !DILocation(line: 686, column: 7, scope: !1861)
!1877 = !DILocation(line: 688, column: 9, scope: !1850)
!1878 = !DILocation(line: 688, column: 3, scope: !1850)
!1879 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !294, file: !294, line: 585, type: !692, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!1880 = !DILocation(line: 587, column: 3, scope: !1879)
!1881 = !DILocation(line: 590, column: 1, scope: !1879)
!1882 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !294, file: !294, line: 613, type: !692, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!1883 = !DILocation(line: 615, column: 3, scope: !1882)
!1884 = !DILocation(line: 622, column: 3, scope: !1882)
!1885 = !DILocation(line: 628, column: 1, scope: !1882)
!1886 = !DILocalVariable(name: "program", arg: 1, scope: !295, file: !294, line: 631, type: !183)
!1887 = !DILocation(line: 631, column: 34, scope: !295)
!1888 = !DILocalVariable(name: "infomap", scope: !295, file: !294, line: 633, type: !291)
!1889 = !DILocation(line: 633, column: 67, scope: !295)
!1890 = !DILocalVariable(name: "node", scope: !295, file: !294, line: 643, type: !183)
!1891 = !DILocation(line: 643, column: 15, scope: !295)
!1892 = !DILocation(line: 643, column: 22, scope: !295)
!1893 = !DILocalVariable(name: "map_prog", scope: !295, file: !294, line: 644, type: !304)
!1894 = !DILocation(line: 644, column: 25, scope: !295)
!1895 = !DILocation(line: 644, column: 36, scope: !295)
!1896 = !DILocation(line: 646, column: 3, scope: !295)
!1897 = !DILocation(line: 646, column: 10, scope: !295)
!1898 = !DILocation(line: 646, column: 20, scope: !295)
!1899 = !DILocation(line: 646, column: 28, scope: !295)
!1900 = !DILocation(line: 646, column: 33, scope: !295)
!1901 = !DILocation(line: 646, column: 31, scope: !295)
!1902 = !DILocation(line: 0, scope: !295)
!1903 = !DILocation(line: 647, column: 13, scope: !295)
!1904 = distinct !{!1904, !1896, !1903}
!1905 = !DILocation(line: 649, column: 7, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !295, file: !294, line: 649, column: 7)
!1907 = !DILocation(line: 649, column: 17, scope: !1906)
!1908 = !DILocation(line: 649, column: 7, scope: !295)
!1909 = !DILocation(line: 650, column: 12, scope: !1906)
!1910 = !DILocation(line: 650, column: 22, scope: !1906)
!1911 = !DILocation(line: 650, column: 10, scope: !1906)
!1912 = !DILocation(line: 650, column: 5, scope: !1906)
!1913 = !DILocation(line: 652, column: 11, scope: !295)
!1914 = !DILocation(line: 652, column: 3, scope: !295)
!1915 = !DILocalVariable(name: "lc_messages", scope: !295, file: !294, line: 656, type: !183)
!1916 = !DILocation(line: 656, column: 15, scope: !295)
!1917 = !DILocation(line: 656, column: 29, scope: !295)
!1918 = !DILocation(line: 657, column: 7, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !295, file: !294, line: 657, column: 7)
!1920 = !DILocation(line: 657, column: 19, scope: !1919)
!1921 = !DILocation(line: 657, column: 22, scope: !1919)
!1922 = !DILocation(line: 657, column: 7, scope: !295)
!1923 = !DILocation(line: 663, column: 7, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1919, file: !294, line: 658, column: 5)
!1925 = !DILocation(line: 665, column: 5, scope: !1924)
!1926 = !DILocation(line: 666, column: 11, scope: !295)
!1927 = !DILocation(line: 667, column: 24, scope: !295)
!1928 = !DILocation(line: 666, column: 3, scope: !295)
!1929 = !DILocation(line: 668, column: 11, scope: !295)
!1930 = !DILocation(line: 669, column: 11, scope: !295)
!1931 = !DILocation(line: 669, column: 17, scope: !295)
!1932 = !DILocation(line: 669, column: 25, scope: !295)
!1933 = !DILocation(line: 669, column: 22, scope: !295)
!1934 = !DILocation(line: 668, column: 3, scope: !295)
!1935 = !DILocation(line: 670, column: 1, scope: !295)
!1936 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 793, type: !1937, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !298)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!7, !7, !209}
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1939, file: !463, line: 48, baseType: !452, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1939, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1939, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1939, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1939, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1939, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1939, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1939, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1939, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1939, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1939, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1939, file: !463, line: 91, baseType: !364, size: 128, offset: 576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1939, file: !463, line: 92, baseType: !364, size: 128, offset: 704)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1939, file: !463, line: 93, baseType: !364, size: 128, offset: 832)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1939, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!1956 = !DILocalVariable(name: "argc", arg: 1, scope: !1936, file: !66, line: 793, type: !7)
!1957 = !DILocation(line: 793, column: 11, scope: !1936)
!1958 = !DILocalVariable(name: "argv", arg: 2, scope: !1936, file: !66, line: 793, type: !209)
!1959 = !DILocation(line: 793, column: 24, scope: !1936)
!1960 = !DILocalVariable(name: "optc", scope: !1936, file: !66, line: 795, type: !7)
!1961 = !DILocation(line: 795, column: 7, scope: !1936)
!1962 = !DILocalVariable(name: "exit_status", scope: !1936, file: !66, line: 796, type: !7)
!1963 = !DILocation(line: 796, column: 7, scope: !1936)
!1964 = !DILocalVariable(name: "specified_mode", scope: !1936, file: !66, line: 797, type: !183)
!1965 = !DILocation(line: 797, column: 15, scope: !1936)
!1966 = !DILocalVariable(name: "make_backups", scope: !1936, file: !66, line: 798, type: !142)
!1967 = !DILocation(line: 798, column: 8, scope: !1936)
!1968 = !DILocalVariable(name: "backup_suffix", scope: !1936, file: !66, line: 799, type: !183)
!1969 = !DILocation(line: 799, column: 15, scope: !1936)
!1970 = !DILocalVariable(name: "version_control_string", scope: !1936, file: !66, line: 800, type: !9)
!1971 = !DILocation(line: 800, column: 9, scope: !1936)
!1972 = !DILocalVariable(name: "mkdir_and_install", scope: !1936, file: !66, line: 801, type: !142)
!1973 = !DILocation(line: 801, column: 8, scope: !1936)
!1974 = !DILocalVariable(name: "x", scope: !1936, file: !66, line: 802, type: !132)
!1975 = !DILocation(line: 802, column: 21, scope: !1936)
!1976 = !DILocalVariable(name: "target_directory", scope: !1936, file: !66, line: 803, type: !183)
!1977 = !DILocation(line: 803, column: 15, scope: !1936)
!1978 = !DILocalVariable(name: "no_target_directory", scope: !1936, file: !66, line: 804, type: !142)
!1979 = !DILocation(line: 804, column: 8, scope: !1936)
!1980 = !DILocalVariable(name: "n_files", scope: !1936, file: !66, line: 805, type: !7)
!1981 = !DILocation(line: 805, column: 7, scope: !1936)
!1982 = !DILocalVariable(name: "file", scope: !1936, file: !66, line: 806, type: !209)
!1983 = !DILocation(line: 806, column: 10, scope: !1936)
!1984 = !DILocalVariable(name: "strip_program_specified", scope: !1936, file: !66, line: 807, type: !142)
!1985 = !DILocation(line: 807, column: 8, scope: !1936)
!1986 = !DILocalVariable(name: "scontext", scope: !1936, file: !66, line: 808, type: !183)
!1987 = !DILocation(line: 808, column: 15, scope: !1936)
!1988 = !DILocation(line: 810, column: 19, scope: !1936)
!1989 = !DILocation(line: 813, column: 21, scope: !1936)
!1990 = !DILocation(line: 813, column: 3, scope: !1936)
!1991 = !DILocation(line: 814, column: 3, scope: !1936)
!1992 = !DILocation(line: 815, column: 3, scope: !1936)
!1993 = !DILocation(line: 816, column: 3, scope: !1936)
!1994 = !DILocation(line: 818, column: 3, scope: !1936)
!1995 = !DILocation(line: 820, column: 3, scope: !1936)
!1996 = !DILocation(line: 822, column: 14, scope: !1936)
!1997 = !DILocation(line: 823, column: 14, scope: !1936)
!1998 = !DILocation(line: 824, column: 15, scope: !1936)
!1999 = !DILocation(line: 825, column: 11, scope: !1936)
!2000 = !DILocation(line: 826, column: 3, scope: !1936)
!2001 = !DILocation(line: 828, column: 3, scope: !1936)
!2002 = !DILocation(line: 828, column: 31, scope: !1936)
!2003 = !DILocation(line: 828, column: 37, scope: !1936)
!2004 = !DILocation(line: 828, column: 18, scope: !1936)
!2005 = !DILocation(line: 828, column: 16, scope: !1936)
!2006 = !DILocation(line: 829, column: 38, scope: !1936)
!2007 = !DILocation(line: 831, column: 15, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 830, column: 5)
!2009 = !DILocation(line: 831, column: 7, scope: !2008)
!2010 = !DILocation(line: 834, column: 24, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2008, file: !66, line: 832, column: 9)
!2012 = !DILocation(line: 835, column: 15, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2011, file: !66, line: 835, column: 15)
!2014 = !DILocation(line: 835, column: 15, scope: !2011)
!2015 = !DILocation(line: 836, column: 38, scope: !2013)
!2016 = !DILocation(line: 836, column: 36, scope: !2013)
!2017 = !DILocation(line: 836, column: 13, scope: !2013)
!2018 = !DILocation(line: 837, column: 11, scope: !2011)
!2019 = !DILocation(line: 839, column: 11, scope: !2011)
!2020 = !DILocation(line: 841, column: 31, scope: !2011)
!2021 = !DILocation(line: 842, column: 11, scope: !2011)
!2022 = !DILocation(line: 844, column: 23, scope: !2011)
!2023 = !DILocation(line: 847, column: 11, scope: !2011)
!2024 = !DILocation(line: 849, column: 11, scope: !2011)
!2025 = !DILocation(line: 851, column: 36, scope: !2011)
!2026 = !DILocation(line: 851, column: 27, scope: !2011)
!2027 = !DILocation(line: 851, column: 25, scope: !2011)
!2028 = !DILocation(line: 852, column: 35, scope: !2011)
!2029 = !DILocation(line: 853, column: 11, scope: !2011)
!2030 = !DILocation(line: 855, column: 19, scope: !2011)
!2031 = !DILocation(line: 856, column: 11, scope: !2011)
!2032 = !DILocation(line: 858, column: 29, scope: !2011)
!2033 = !DILocation(line: 859, column: 11, scope: !2011)
!2034 = !DILocation(line: 861, column: 13, scope: !2011)
!2035 = !DILocation(line: 861, column: 21, scope: !2011)
!2036 = !DILocation(line: 862, column: 11, scope: !2011)
!2037 = !DILocation(line: 864, column: 24, scope: !2011)
!2038 = !DILocation(line: 864, column: 22, scope: !2011)
!2039 = !DILocation(line: 865, column: 11, scope: !2011)
!2040 = !DILocation(line: 867, column: 28, scope: !2011)
!2041 = !DILocation(line: 867, column: 26, scope: !2011)
!2042 = !DILocation(line: 868, column: 11, scope: !2011)
!2043 = !DILocation(line: 870, column: 24, scope: !2011)
!2044 = !DILocation(line: 870, column: 22, scope: !2011)
!2045 = !DILocation(line: 871, column: 11, scope: !2011)
!2046 = !DILocation(line: 873, column: 13, scope: !2011)
!2047 = !DILocation(line: 873, column: 33, scope: !2011)
!2048 = !DILocation(line: 874, column: 11, scope: !2011)
!2049 = !DILocation(line: 876, column: 24, scope: !2011)
!2050 = !DILocation(line: 877, column: 27, scope: !2011)
!2051 = !DILocation(line: 877, column: 25, scope: !2011)
!2052 = !DILocation(line: 878, column: 11, scope: !2011)
!2053 = !DILocation(line: 880, column: 15, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2011, file: !66, line: 880, column: 15)
!2055 = !DILocation(line: 880, column: 15, scope: !2011)
!2056 = !DILocation(line: 881, column: 13, scope: !2054)
!2057 = !DILocation(line: 883, column: 30, scope: !2011)
!2058 = !DILocation(line: 883, column: 28, scope: !2011)
!2059 = !DILocation(line: 884, column: 11, scope: !2011)
!2060 = !DILocation(line: 886, column: 31, scope: !2011)
!2061 = !DILocation(line: 887, column: 11, scope: !2011)
!2062 = !DILocation(line: 890, column: 17, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2011, file: !66, line: 890, column: 15)
!2064 = !DILocation(line: 890, column: 15, scope: !2011)
!2065 = !DILocation(line: 892, column: 28, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2063, file: !66, line: 891, column: 13)
!2067 = !DILocation(line: 892, column: 15, scope: !2066)
!2068 = !DILocation(line: 894, column: 15, scope: !2066)
!2069 = !DILocation(line: 896, column: 13, scope: !2011)
!2070 = !DILocation(line: 896, column: 39, scope: !2011)
!2071 = !DILocation(line: 897, column: 39, scope: !2011)
!2072 = !DILocation(line: 898, column: 11, scope: !2011)
!2073 = !DILocation(line: 900, column: 15, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2011, file: !66, line: 900, column: 15)
!2075 = !DILocation(line: 900, column: 15, scope: !2011)
!2076 = !DILocation(line: 908, column: 43, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2074, file: !66, line: 901, column: 13)
!2078 = !DILocation(line: 910, column: 19, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2077, file: !66, line: 910, column: 19)
!2080 = !DILocation(line: 910, column: 19, scope: !2077)
!2081 = !DILocation(line: 911, column: 28, scope: !2079)
!2082 = !DILocation(line: 911, column: 26, scope: !2079)
!2083 = !DILocation(line: 911, column: 17, scope: !2079)
!2084 = !DILocation(line: 913, column: 19, scope: !2079)
!2085 = !DILocation(line: 913, column: 40, scope: !2079)
!2086 = !DILocation(line: 914, column: 13, scope: !2077)
!2087 = !DILocation(line: 915, column: 20, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2074, file: !66, line: 915, column: 20)
!2089 = !DILocation(line: 915, column: 20, scope: !2074)
!2090 = !DILocation(line: 918, column: 22, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2088, file: !66, line: 916, column: 13)
!2092 = !DILocation(line: 917, column: 15, scope: !2091)
!2093 = !DILocation(line: 920, column: 13, scope: !2091)
!2094 = !DILocation(line: 921, column: 11, scope: !2011)
!2095 = !DILocation(line: 922, column: 9, scope: !2011)
!2096 = !DILocation(line: 923, column: 9, scope: !2011)
!2097 = !DILocation(line: 925, column: 11, scope: !2011)
!2098 = distinct !{!2098, !2001, !2099}
!2099 = !DILocation(line: 927, column: 5, scope: !1936)
!2100 = !DILocation(line: 930, column: 7, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 930, column: 7)
!2102 = !DILocation(line: 930, column: 15, scope: !2101)
!2103 = !DILocation(line: 930, column: 18, scope: !2101)
!2104 = !DILocation(line: 930, column: 7, scope: !1936)
!2105 = !DILocation(line: 931, column: 5, scope: !2101)
!2106 = !DILocation(line: 933, column: 7, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 933, column: 7)
!2108 = !DILocation(line: 933, column: 15, scope: !2107)
!2109 = !DILocation(line: 933, column: 18, scope: !2107)
!2110 = !DILocation(line: 933, column: 7, scope: !1936)
!2111 = !DILocation(line: 934, column: 5, scope: !2107)
!2112 = !DILocation(line: 937, column: 7, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 937, column: 7)
!2114 = !DILocation(line: 937, column: 7, scope: !1936)
!2115 = !DILocalVariable(name: "st", scope: !2116, file: !66, line: 939, type: !1939)
!2116 = distinct !DILexicalBlock(scope: !2113, file: !66, line: 938, column: 5)
!2117 = !DILocation(line: 939, column: 19, scope: !2116)
!2118 = !DILocalVariable(name: "stat_success", scope: !2116, file: !66, line: 940, type: !142)
!2119 = !DILocation(line: 940, column: 12, scope: !2116)
!2120 = !DILocation(line: 940, column: 33, scope: !2116)
!2121 = !DILocation(line: 940, column: 27, scope: !2116)
!2122 = !DILocation(line: 940, column: 56, scope: !2116)
!2123 = !DILocation(line: 941, column: 13, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2116, file: !66, line: 941, column: 11)
!2125 = !DILocation(line: 941, column: 31, scope: !2124)
!2126 = !DILocation(line: 941, column: 36, scope: !2124)
!2127 = !DILocation(line: 941, column: 11, scope: !2116)
!2128 = !DILocation(line: 942, column: 9, scope: !2124)
!2129 = !DILocation(line: 944, column: 11, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2116, file: !66, line: 944, column: 11)
!2131 = !DILocation(line: 944, column: 24, scope: !2130)
!2132 = !DILocation(line: 944, column: 29, scope: !2130)
!2133 = !DILocation(line: 944, column: 11, scope: !2116)
!2134 = !DILocation(line: 945, column: 9, scope: !2130)
!2135 = !DILocation(line: 947, column: 5, scope: !2116)
!2136 = !DILocation(line: 949, column: 20, scope: !1936)
!2137 = !DILocation(line: 950, column: 36, scope: !1936)
!2138 = !DILocation(line: 951, column: 36, scope: !1936)
!2139 = !DILocation(line: 950, column: 22, scope: !1936)
!2140 = !DILocation(line: 949, column: 5, scope: !1936)
!2141 = !DILocation(line: 949, column: 17, scope: !1936)
!2142 = !DILocation(line: 953, column: 29, scope: !1936)
!2143 = !DILocation(line: 953, column: 3, scope: !1936)
!2144 = !DILocation(line: 955, column: 9, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 955, column: 7)
!2146 = !DILocation(line: 955, column: 35, scope: !2145)
!2147 = !DILocation(line: 955, column: 41, scope: !2145)
!2148 = !DILocation(line: 955, column: 62, scope: !2145)
!2149 = !DILocation(line: 955, column: 65, scope: !2145)
!2150 = !DILocation(line: 955, column: 7, scope: !1936)
!2151 = !DILocation(line: 956, column: 5, scope: !2145)
!2152 = !DILocation(line: 959, column: 7, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 959, column: 7)
!2154 = !DILocation(line: 959, column: 16, scope: !2153)
!2155 = !DILocation(line: 959, column: 45, scope: !2153)
!2156 = !DILocation(line: 959, column: 35, scope: !2153)
!2157 = !DILocation(line: 959, column: 19, scope: !2153)
!2158 = !DILocation(line: 959, column: 56, scope: !2153)
!2159 = !DILocation(line: 959, column: 7, scope: !1936)
!2160 = !DILocation(line: 960, column: 5, scope: !2153)
!2161 = !DILocation(line: 964, column: 13, scope: !1936)
!2162 = !DILocation(line: 964, column: 20, scope: !1936)
!2163 = !DILocation(line: 964, column: 18, scope: !1936)
!2164 = !DILocation(line: 964, column: 11, scope: !1936)
!2165 = !DILocation(line: 965, column: 10, scope: !1936)
!2166 = !DILocation(line: 965, column: 17, scope: !1936)
!2167 = !DILocation(line: 965, column: 15, scope: !1936)
!2168 = !DILocation(line: 965, column: 8, scope: !1936)
!2169 = !DILocation(line: 967, column: 7, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 967, column: 7)
!2171 = !DILocation(line: 967, column: 21, scope: !2170)
!2172 = !DILocation(line: 967, column: 29, scope: !2170)
!2173 = !DILocation(line: 967, column: 32, scope: !2170)
!2174 = !DILocation(line: 967, column: 18, scope: !2170)
!2175 = !DILocation(line: 967, column: 15, scope: !2170)
!2176 = !DILocation(line: 967, column: 7, scope: !1936)
!2177 = !DILocation(line: 969, column: 11, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !66, line: 969, column: 11)
!2179 = distinct !DILexicalBlock(scope: !2170, file: !66, line: 968, column: 5)
!2180 = !DILocation(line: 969, column: 19, scope: !2178)
!2181 = !DILocation(line: 969, column: 11, scope: !2179)
!2182 = !DILocation(line: 970, column: 22, scope: !2178)
!2183 = !DILocation(line: 970, column: 9, scope: !2178)
!2184 = !DILocation(line: 972, column: 22, scope: !2178)
!2185 = !DILocation(line: 973, column: 16, scope: !2178)
!2186 = !DILocation(line: 972, column: 9, scope: !2178)
!2187 = !DILocation(line: 974, column: 7, scope: !2179)
!2188 = !DILocation(line: 977, column: 7, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 977, column: 7)
!2190 = !DILocation(line: 977, column: 7, scope: !1936)
!2191 = !DILocation(line: 979, column: 11, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !66, line: 979, column: 11)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !66, line: 978, column: 5)
!2194 = !DILocation(line: 979, column: 11, scope: !2193)
!2195 = !DILocation(line: 980, column: 9, scope: !2192)
!2196 = !DILocation(line: 983, column: 15, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2193, file: !66, line: 983, column: 11)
!2198 = !DILocation(line: 983, column: 13, scope: !2197)
!2199 = !DILocation(line: 983, column: 11, scope: !2193)
!2200 = !DILocation(line: 985, column: 24, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2197, file: !66, line: 984, column: 9)
!2202 = !DILocation(line: 985, column: 47, scope: !2201)
!2203 = !DILocation(line: 985, column: 11, scope: !2201)
!2204 = !DILocation(line: 986, column: 11, scope: !2201)
!2205 = !DILocation(line: 988, column: 5, scope: !2193)
!2206 = !DILocation(line: 989, column: 15, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2189, file: !66, line: 989, column: 12)
!2208 = !DILocation(line: 989, column: 23, scope: !2207)
!2209 = !DILocation(line: 989, column: 26, scope: !2207)
!2210 = !DILocation(line: 989, column: 12, scope: !2189)
!2211 = !DILocation(line: 991, column: 16, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !66, line: 991, column: 11)
!2213 = distinct !DILexicalBlock(scope: !2207, file: !66, line: 990, column: 5)
!2214 = !DILocation(line: 991, column: 13, scope: !2212)
!2215 = !DILocation(line: 991, column: 24, scope: !2212)
!2216 = !DILocation(line: 991, column: 53, scope: !2212)
!2217 = !DILocation(line: 991, column: 58, scope: !2212)
!2218 = !DILocation(line: 991, column: 66, scope: !2212)
!2219 = !DILocation(line: 991, column: 27, scope: !2212)
!2220 = !DILocation(line: 991, column: 11, scope: !2213)
!2221 = !DILocation(line: 992, column: 28, scope: !2212)
!2222 = !DILocation(line: 992, column: 33, scope: !2212)
!2223 = !DILocation(line: 992, column: 26, scope: !2212)
!2224 = !DILocation(line: 992, column: 9, scope: !2212)
!2225 = !DILocation(line: 993, column: 20, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2212, file: !66, line: 993, column: 16)
!2227 = !DILocation(line: 993, column: 18, scope: !2226)
!2228 = !DILocation(line: 993, column: 16, scope: !2212)
!2229 = !DILocation(line: 994, column: 9, scope: !2226)
!2230 = !DILocation(line: 996, column: 5, scope: !2213)
!2231 = !DILocation(line: 998, column: 7, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 998, column: 7)
!2233 = !DILocation(line: 998, column: 7, scope: !1936)
!2234 = !DILocalVariable(name: "change", scope: !2235, file: !66, line: 1000, type: !270)
!2235 = distinct !DILexicalBlock(scope: !2232, file: !66, line: 999, column: 5)
!2236 = !DILocation(line: 1000, column: 27, scope: !2235)
!2237 = !DILocation(line: 1000, column: 50, scope: !2235)
!2238 = !DILocation(line: 1000, column: 36, scope: !2235)
!2239 = !DILocation(line: 1001, column: 12, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2235, file: !66, line: 1001, column: 11)
!2241 = !DILocation(line: 1001, column: 11, scope: !2235)
!2242 = !DILocation(line: 1002, column: 9, scope: !2240)
!2243 = !DILocation(line: 1003, column: 40, scope: !2235)
!2244 = !DILocation(line: 1003, column: 14, scope: !2235)
!2245 = !DILocation(line: 1003, column: 12, scope: !2235)
!2246 = !DILocation(line: 1004, column: 43, scope: !2235)
!2247 = !DILocation(line: 1004, column: 18, scope: !2235)
!2248 = !DILocation(line: 1004, column: 16, scope: !2235)
!2249 = !DILocation(line: 1005, column: 13, scope: !2235)
!2250 = !DILocation(line: 1005, column: 7, scope: !2235)
!2251 = !DILocation(line: 1006, column: 5, scope: !2235)
!2252 = !DILocation(line: 1008, column: 7, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 1008, column: 7)
!2254 = !DILocation(line: 1008, column: 31, scope: !2253)
!2255 = !DILocation(line: 1008, column: 35, scope: !2253)
!2256 = !DILocation(line: 1008, column: 7, scope: !1936)
!2257 = !DILocation(line: 1009, column: 18, scope: !2253)
!2258 = !DILocation(line: 1009, column: 5, scope: !2253)
!2259 = !DILocation(line: 1012, column: 7, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 1012, column: 7)
!2261 = !DILocation(line: 1012, column: 27, scope: !2260)
!2262 = !DILocation(line: 1012, column: 32, scope: !2260)
!2263 = !DILocation(line: 1012, column: 7, scope: !1936)
!2264 = !DILocation(line: 1014, column: 20, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !66, line: 1013, column: 5)
!2266 = !DILocation(line: 1014, column: 7, scope: !2265)
!2267 = !DILocation(line: 1016, column: 7, scope: !2265)
!2268 = !DILocation(line: 1019, column: 7, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 1019, column: 7)
!2270 = !DILocation(line: 1019, column: 27, scope: !2269)
!2271 = !DILocation(line: 1019, column: 30, scope: !2269)
!2272 = !DILocation(line: 1019, column: 7, scope: !1936)
!2273 = !DILocation(line: 1021, column: 20, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2269, file: !66, line: 1020, column: 5)
!2275 = !DILocation(line: 1021, column: 7, scope: !2274)
!2276 = !DILocation(line: 1023, column: 7, scope: !2274)
!2277 = !DILocation(line: 1026, column: 7, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 1026, column: 7)
!2279 = !DILocation(line: 1026, column: 27, scope: !2278)
!2280 = !DILocation(line: 1026, column: 42, scope: !2278)
!2281 = !DILocation(line: 1026, column: 30, scope: !2278)
!2282 = !DILocation(line: 1026, column: 7, scope: !1936)
!2283 = !DILocation(line: 1027, column: 18, scope: !2278)
!2284 = !DILocation(line: 1027, column: 5, scope: !2278)
!2285 = !DILocation(line: 1030, column: 3, scope: !1936)
!2286 = !DILocation(line: 1032, column: 7, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !1936, file: !66, line: 1032, column: 7)
!2288 = !DILocation(line: 1032, column: 7, scope: !1936)
!2289 = !DILocation(line: 1033, column: 41, scope: !2287)
!2290 = !DILocation(line: 1033, column: 50, scope: !2287)
!2291 = !DILocation(line: 1033, column: 69, scope: !2287)
!2292 = !DILocation(line: 1033, column: 19, scope: !2287)
!2293 = !DILocation(line: 1033, column: 17, scope: !2287)
!2294 = !DILocation(line: 1033, column: 5, scope: !2287)
!2295 = !DILocation(line: 1038, column: 7, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2287, file: !66, line: 1035, column: 5)
!2297 = !DILocation(line: 1040, column: 12, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2296, file: !66, line: 1040, column: 11)
!2299 = !DILocation(line: 1040, column: 11, scope: !2296)
!2300 = !DILocation(line: 1042, column: 18, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !66, line: 1042, column: 15)
!2302 = distinct !DILexicalBlock(scope: !2298, file: !66, line: 1041, column: 9)
!2303 = !DILocation(line: 1042, column: 15, scope: !2302)
!2304 = !DILocation(line: 1043, column: 50, scope: !2301)
!2305 = !DILocation(line: 1043, column: 59, scope: !2301)
!2306 = !DILocation(line: 1043, column: 20, scope: !2301)
!2307 = !DILocation(line: 1044, column: 42, scope: !2301)
!2308 = !DILocation(line: 1044, column: 51, scope: !2301)
!2309 = !DILocation(line: 1044, column: 20, scope: !2301)
!2310 = !DILocation(line: 1045, column: 25, scope: !2301)
!2311 = !DILocation(line: 1045, column: 13, scope: !2301)
!2312 = !DILocation(line: 1046, column: 9, scope: !2302)
!2313 = !DILocalVariable(name: "i", scope: !2314, file: !66, line: 1049, type: !7)
!2314 = distinct !DILexicalBlock(scope: !2298, file: !66, line: 1048, column: 9)
!2315 = !DILocation(line: 1049, column: 15, scope: !2314)
!2316 = !DILocation(line: 1050, column: 11, scope: !2314)
!2317 = !DILocation(line: 1051, column: 18, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2314, file: !66, line: 1051, column: 11)
!2319 = !DILocation(line: 1051, column: 16, scope: !2318)
!2320 = !DILocation(line: 1051, column: 23, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2318, file: !66, line: 1051, column: 11)
!2322 = !DILocation(line: 1051, column: 27, scope: !2321)
!2323 = !DILocation(line: 1051, column: 25, scope: !2321)
!2324 = !DILocation(line: 1051, column: 11, scope: !2318)
!2325 = !DILocation(line: 1052, column: 40, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2321, file: !66, line: 1052, column: 17)
!2327 = !DILocation(line: 1052, column: 45, scope: !2326)
!2328 = !DILocation(line: 1052, column: 49, scope: !2326)
!2329 = !DILocation(line: 1053, column: 40, scope: !2326)
!2330 = !DILocation(line: 1053, column: 42, scope: !2326)
!2331 = !DILocation(line: 1053, column: 47, scope: !2326)
!2332 = !DILocation(line: 1053, column: 50, scope: !2326)
!2333 = !DILocation(line: 0, scope: !2326)
!2334 = !DILocation(line: 1052, column: 19, scope: !2326)
!2335 = !DILocation(line: 1052, column: 17, scope: !2321)
!2336 = !DILocation(line: 1054, column: 27, scope: !2326)
!2337 = !DILocation(line: 1054, column: 15, scope: !2326)
!2338 = !DILocation(line: 1053, column: 67, scope: !2326)
!2339 = !DILocation(line: 1051, column: 37, scope: !2321)
!2340 = !DILocation(line: 1051, column: 11, scope: !2321)
!2341 = distinct !{!2341, !2324, !2342}
!2342 = !DILocation(line: 1054, column: 29, scope: !2318)
!2343 = !DILocation(line: 1058, column: 10, scope: !1936)
!2344 = !DILocation(line: 1058, column: 3, scope: !1936)
!2345 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 263, type: !2346, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{null, !131}
!2348 = !DILocalVariable(name: "x", arg: 1, scope: !2345, file: !66, line: 263, type: !131)
!2349 = !DILocation(line: 263, column: 36, scope: !2345)
!2350 = !DILocation(line: 265, column: 23, scope: !2345)
!2351 = !DILocation(line: 265, column: 3, scope: !2345)
!2352 = !DILocation(line: 266, column: 3, scope: !2345)
!2353 = !DILocation(line: 266, column: 6, scope: !2345)
!2354 = !DILocation(line: 266, column: 22, scope: !2345)
!2355 = !DILocation(line: 267, column: 3, scope: !2345)
!2356 = !DILocation(line: 267, column: 6, scope: !2345)
!2357 = !DILocation(line: 267, column: 19, scope: !2345)
!2358 = !DILocation(line: 268, column: 3, scope: !2345)
!2359 = !DILocation(line: 268, column: 6, scope: !2345)
!2360 = !DILocation(line: 268, column: 18, scope: !2345)
!2361 = !DILocation(line: 269, column: 3, scope: !2345)
!2362 = !DILocation(line: 269, column: 6, scope: !2345)
!2363 = !DILocation(line: 269, column: 33, scope: !2345)
!2364 = !DILocation(line: 270, column: 3, scope: !2345)
!2365 = !DILocation(line: 270, column: 6, scope: !2345)
!2366 = !DILocation(line: 270, column: 36, scope: !2345)
!2367 = !DILocation(line: 271, column: 3, scope: !2345)
!2368 = !DILocation(line: 271, column: 6, scope: !2345)
!2369 = !DILocation(line: 271, column: 16, scope: !2345)
!2370 = !DILocation(line: 272, column: 3, scope: !2345)
!2371 = !DILocation(line: 272, column: 6, scope: !2345)
!2372 = !DILocation(line: 272, column: 18, scope: !2345)
!2373 = !DILocation(line: 273, column: 3, scope: !2345)
!2374 = !DILocation(line: 273, column: 6, scope: !2345)
!2375 = !DILocation(line: 273, column: 16, scope: !2345)
!2376 = !DILocation(line: 274, column: 3, scope: !2345)
!2377 = !DILocation(line: 274, column: 6, scope: !2345)
!2378 = !DILocation(line: 274, column: 19, scope: !2345)
!2379 = !DILocation(line: 275, column: 3, scope: !2345)
!2380 = !DILocation(line: 275, column: 6, scope: !2345)
!2381 = !DILocation(line: 275, column: 22, scope: !2345)
!2382 = !DILocation(line: 276, column: 3, scope: !2345)
!2383 = !DILocation(line: 276, column: 6, scope: !2345)
!2384 = !DILocation(line: 276, column: 25, scope: !2345)
!2385 = !DILocation(line: 277, column: 3, scope: !2345)
!2386 = !DILocation(line: 277, column: 6, scope: !2345)
!2387 = !DILocation(line: 277, column: 21, scope: !2345)
!2388 = !DILocation(line: 278, column: 3, scope: !2345)
!2389 = !DILocation(line: 278, column: 6, scope: !2345)
!2390 = !DILocation(line: 278, column: 20, scope: !2345)
!2391 = !DILocation(line: 279, column: 3, scope: !2345)
!2392 = !DILocation(line: 279, column: 6, scope: !2345)
!2393 = !DILocation(line: 279, column: 26, scope: !2345)
!2394 = !DILocation(line: 280, column: 3, scope: !2345)
!2395 = !DILocation(line: 280, column: 6, scope: !2345)
!2396 = !DILocation(line: 280, column: 32, scope: !2345)
!2397 = !DILocation(line: 281, column: 3, scope: !2345)
!2398 = !DILocation(line: 281, column: 6, scope: !2345)
!2399 = !DILocation(line: 281, column: 24, scope: !2345)
!2400 = !DILocation(line: 282, column: 3, scope: !2345)
!2401 = !DILocation(line: 282, column: 6, scope: !2345)
!2402 = !DILocation(line: 282, column: 25, scope: !2345)
!2403 = !DILocation(line: 283, column: 3, scope: !2345)
!2404 = !DILocation(line: 283, column: 6, scope: !2345)
!2405 = !DILocation(line: 283, column: 23, scope: !2345)
!2406 = !DILocation(line: 284, column: 3, scope: !2345)
!2407 = !DILocation(line: 284, column: 6, scope: !2345)
!2408 = !DILocation(line: 284, column: 29, scope: !2345)
!2409 = !DILocation(line: 285, column: 3, scope: !2345)
!2410 = !DILocation(line: 285, column: 6, scope: !2345)
!2411 = !DILocation(line: 285, column: 16, scope: !2345)
!2412 = !DILocation(line: 286, column: 3, scope: !2345)
!2413 = !DILocation(line: 286, column: 6, scope: !2345)
!2414 = !DILocation(line: 286, column: 18, scope: !2345)
!2415 = !DILocation(line: 287, column: 3, scope: !2345)
!2416 = !DILocation(line: 287, column: 6, scope: !2345)
!2417 = !DILocation(line: 287, column: 20, scope: !2345)
!2418 = !DILocation(line: 288, column: 3, scope: !2345)
!2419 = !DILocation(line: 288, column: 6, scope: !2345)
!2420 = !DILocation(line: 288, column: 18, scope: !2345)
!2421 = !DILocation(line: 293, column: 3, scope: !2345)
!2422 = !DILocation(line: 293, column: 6, scope: !2345)
!2423 = !DILocation(line: 293, column: 15, scope: !2345)
!2424 = !DILocation(line: 294, column: 3, scope: !2345)
!2425 = !DILocation(line: 294, column: 6, scope: !2345)
!2426 = !DILocation(line: 294, column: 11, scope: !2345)
!2427 = !DILocation(line: 295, column: 3, scope: !2345)
!2428 = !DILocation(line: 295, column: 6, scope: !2345)
!2429 = !DILocation(line: 295, column: 16, scope: !2345)
!2430 = !DILocation(line: 297, column: 3, scope: !2345)
!2431 = !DILocation(line: 297, column: 6, scope: !2345)
!2432 = !DILocation(line: 297, column: 33, scope: !2345)
!2433 = !DILocation(line: 298, column: 3, scope: !2345)
!2434 = !DILocation(line: 298, column: 6, scope: !2345)
!2435 = !DILocation(line: 298, column: 13, scope: !2345)
!2436 = !DILocation(line: 299, column: 3, scope: !2345)
!2437 = !DILocation(line: 299, column: 6, scope: !2345)
!2438 = !DILocation(line: 299, column: 31, scope: !2345)
!2439 = !DILocation(line: 300, column: 3, scope: !2345)
!2440 = !DILocation(line: 300, column: 6, scope: !2345)
!2441 = !DILocation(line: 300, column: 32, scope: !2345)
!2442 = !DILocation(line: 301, column: 3, scope: !2345)
!2443 = !DILocation(line: 301, column: 6, scope: !2345)
!2444 = !DILocation(line: 301, column: 27, scope: !2345)
!2445 = !DILocation(line: 302, column: 3, scope: !2345)
!2446 = !DILocation(line: 302, column: 6, scope: !2345)
!2447 = !DILocation(line: 302, column: 21, scope: !2345)
!2448 = !DILocation(line: 303, column: 3, scope: !2345)
!2449 = !DILocation(line: 303, column: 6, scope: !2345)
!2450 = !DILocation(line: 303, column: 14, scope: !2345)
!2451 = !DILocation(line: 304, column: 3, scope: !2345)
!2452 = !DILocation(line: 304, column: 6, scope: !2345)
!2453 = !DILocation(line: 304, column: 16, scope: !2345)
!2454 = !DILocation(line: 305, column: 3, scope: !2345)
!2455 = !DILocation(line: 305, column: 6, scope: !2345)
!2456 = !DILocation(line: 305, column: 15, scope: !2345)
!2457 = !DILocation(line: 306, column: 1, scope: !2345)
!2458 = distinct !DISubprogram(name: "se_const", scope: !294, file: !294, line: 755, type: !2459, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!9, !183}
!2461 = !DILocalVariable(name: "sctx", arg: 1, scope: !2458, file: !294, line: 755, type: !183)
!2462 = !DILocation(line: 755, column: 45, scope: !2458)
!2463 = !DILocation(line: 755, column: 69, scope: !2458)
!2464 = !DILocation(line: 755, column: 53, scope: !2458)
!2465 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 398, type: !2466, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!142, !183}
!2468 = !DILocalVariable(name: "file", arg: 1, scope: !2465, file: !66, line: 398, type: !183)
!2469 = !DILocation(line: 398, column: 39, scope: !2465)
!2470 = !DILocalVariable(name: "b", scope: !2465, file: !66, line: 400, type: !183)
!2471 = !DILocation(line: 400, column: 15, scope: !2465)
!2472 = !DILocation(line: 400, column: 35, scope: !2465)
!2473 = !DILocation(line: 400, column: 19, scope: !2465)
!2474 = !DILocalVariable(name: "blen", scope: !2465, file: !66, line: 401, type: !55)
!2475 = !DILocation(line: 401, column: 10, scope: !2465)
!2476 = !DILocation(line: 401, column: 25, scope: !2465)
!2477 = !DILocation(line: 401, column: 17, scope: !2465)
!2478 = !DILocalVariable(name: "looks_like_a_dir", scope: !2465, file: !66, line: 402, type: !142)
!2479 = !DILocation(line: 402, column: 8, scope: !2465)
!2480 = !DILocation(line: 402, column: 28, scope: !2465)
!2481 = !DILocation(line: 402, column: 33, scope: !2465)
!2482 = !DILocation(line: 402, column: 38, scope: !2465)
!2483 = !DILocation(line: 402, column: 41, scope: !2465)
!2484 = !DILocalVariable(name: "st", scope: !2465, file: !66, line: 403, type: !1939)
!2485 = !DILocation(line: 403, column: 15, scope: !2465)
!2486 = !DILocalVariable(name: "err", scope: !2465, file: !66, line: 404, type: !7)
!2487 = !DILocation(line: 404, column: 7, scope: !2465)
!2488 = !DILocation(line: 404, column: 20, scope: !2465)
!2489 = !DILocation(line: 404, column: 14, scope: !2465)
!2490 = !DILocation(line: 404, column: 31, scope: !2465)
!2491 = !DILocation(line: 404, column: 42, scope: !2465)
!2492 = !DILocalVariable(name: "is_a_dir", scope: !2465, file: !66, line: 405, type: !142)
!2493 = !DILocation(line: 405, column: 8, scope: !2465)
!2494 = !DILocation(line: 405, column: 20, scope: !2465)
!2495 = !DILocation(line: 405, column: 24, scope: !2465)
!2496 = !DILocation(line: 405, column: 27, scope: !2465)
!2497 = !DILocation(line: 0, scope: !2465)
!2498 = !DILocation(line: 406, column: 7, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2465, file: !66, line: 406, column: 7)
!2500 = !DILocation(line: 406, column: 11, scope: !2499)
!2501 = !DILocation(line: 406, column: 14, scope: !2499)
!2502 = !DILocation(line: 406, column: 18, scope: !2499)
!2503 = !DILocation(line: 406, column: 7, scope: !2465)
!2504 = !DILocation(line: 407, column: 5, scope: !2499)
!2505 = !DILocation(line: 408, column: 7, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2465, file: !66, line: 408, column: 7)
!2507 = !DILocation(line: 408, column: 18, scope: !2506)
!2508 = !DILocation(line: 408, column: 16, scope: !2506)
!2509 = !DILocation(line: 408, column: 7, scope: !2465)
!2510 = !DILocation(line: 409, column: 5, scope: !2506)
!2511 = !DILocation(line: 411, column: 10, scope: !2465)
!2512 = !DILocation(line: 411, column: 3, scope: !2465)
!2513 = distinct !DISubprogram(name: "extra_mode", scope: !66, file: !66, line: 166, type: !2514, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!142, !139}
!2516 = !DILocalVariable(name: "input", arg: 1, scope: !2513, file: !66, line: 166, type: !139)
!2517 = !DILocation(line: 166, column: 20, scope: !2513)
!2518 = !DILocalVariable(name: "mask", scope: !2513, file: !66, line: 168, type: !139)
!2519 = !DILocation(line: 168, column: 10, scope: !2513)
!2520 = !DILocation(line: 169, column: 14, scope: !2513)
!2521 = !DILocation(line: 169, column: 24, scope: !2513)
!2522 = !DILocation(line: 169, column: 22, scope: !2513)
!2523 = !DILocation(line: 169, column: 20, scope: !2513)
!2524 = !DILocation(line: 169, column: 11, scope: !2513)
!2525 = !DILocation(line: 169, column: 10, scope: !2513)
!2526 = !DILocation(line: 169, column: 3, scope: !2513)
!2527 = distinct !DISubprogram(name: "get_ids", scope: !66, file: !66, line: 576, type: !692, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2528 = !DILocalVariable(name: "pw", scope: !2527, file: !66, line: 578, type: !323)
!2529 = !DILocation(line: 578, column: 18, scope: !2527)
!2530 = !DILocalVariable(name: "gr", scope: !2527, file: !66, line: 579, type: !334)
!2531 = !DILocation(line: 579, column: 17, scope: !2527)
!2532 = !DILocation(line: 581, column: 7, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2527, file: !66, line: 581, column: 7)
!2534 = !DILocation(line: 581, column: 7, scope: !2527)
!2535 = !DILocation(line: 583, column: 22, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2533, file: !66, line: 582, column: 5)
!2537 = !DILocation(line: 583, column: 12, scope: !2536)
!2538 = !DILocation(line: 583, column: 10, scope: !2536)
!2539 = !DILocation(line: 584, column: 11, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2536, file: !66, line: 584, column: 11)
!2541 = !DILocation(line: 584, column: 14, scope: !2540)
!2542 = !DILocation(line: 584, column: 11, scope: !2536)
!2543 = !DILocalVariable(name: "tmp", scope: !2544, file: !66, line: 586, type: !57)
!2544 = distinct !DILexicalBlock(scope: !2540, file: !66, line: 585, column: 9)
!2545 = !DILocation(line: 586, column: 29, scope: !2544)
!2546 = !DILocation(line: 587, column: 25, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2544, file: !66, line: 587, column: 15)
!2548 = !DILocation(line: 587, column: 15, scope: !2547)
!2549 = !DILocation(line: 587, column: 58, scope: !2547)
!2550 = !DILocation(line: 588, column: 15, scope: !2547)
!2551 = !DILocation(line: 588, column: 30, scope: !2547)
!2552 = !DILocation(line: 588, column: 28, scope: !2547)
!2553 = !DILocation(line: 587, column: 15, scope: !2544)
!2554 = !DILocation(line: 589, column: 13, scope: !2547)
!2555 = !DILocation(line: 591, column: 22, scope: !2544)
!2556 = !DILocation(line: 591, column: 20, scope: !2544)
!2557 = !DILocation(line: 592, column: 9, scope: !2544)
!2558 = !DILocation(line: 594, column: 20, scope: !2540)
!2559 = !DILocation(line: 594, column: 24, scope: !2540)
!2560 = !DILocation(line: 594, column: 18, scope: !2540)
!2561 = !DILocation(line: 595, column: 7, scope: !2536)
!2562 = !DILocation(line: 596, column: 5, scope: !2536)
!2563 = !DILocation(line: 598, column: 14, scope: !2533)
!2564 = !DILocation(line: 600, column: 7, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2527, file: !66, line: 600, column: 7)
!2566 = !DILocation(line: 600, column: 7, scope: !2527)
!2567 = !DILocation(line: 602, column: 22, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2565, file: !66, line: 601, column: 5)
!2569 = !DILocation(line: 602, column: 12, scope: !2568)
!2570 = !DILocation(line: 602, column: 10, scope: !2568)
!2571 = !DILocation(line: 603, column: 11, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !66, line: 603, column: 11)
!2573 = !DILocation(line: 603, column: 14, scope: !2572)
!2574 = !DILocation(line: 603, column: 11, scope: !2568)
!2575 = !DILocalVariable(name: "tmp", scope: !2576, file: !66, line: 605, type: !57)
!2576 = distinct !DILexicalBlock(scope: !2572, file: !66, line: 604, column: 9)
!2577 = !DILocation(line: 605, column: 29, scope: !2576)
!2578 = !DILocation(line: 606, column: 25, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2576, file: !66, line: 606, column: 15)
!2580 = !DILocation(line: 606, column: 15, scope: !2579)
!2581 = !DILocation(line: 606, column: 58, scope: !2579)
!2582 = !DILocation(line: 607, column: 15, scope: !2579)
!2583 = !DILocation(line: 607, column: 30, scope: !2579)
!2584 = !DILocation(line: 607, column: 28, scope: !2579)
!2585 = !DILocation(line: 606, column: 15, scope: !2576)
!2586 = !DILocation(line: 608, column: 13, scope: !2579)
!2587 = !DILocation(line: 610, column: 22, scope: !2576)
!2588 = !DILocation(line: 610, column: 20, scope: !2576)
!2589 = !DILocation(line: 611, column: 9, scope: !2576)
!2590 = !DILocation(line: 613, column: 20, scope: !2572)
!2591 = !DILocation(line: 613, column: 24, scope: !2572)
!2592 = !DILocation(line: 613, column: 18, scope: !2572)
!2593 = !DILocation(line: 614, column: 7, scope: !2568)
!2594 = !DILocation(line: 615, column: 5, scope: !2568)
!2595 = !DILocation(line: 617, column: 14, scope: !2565)
!2596 = !DILocation(line: 618, column: 1, scope: !2527)
!2597 = distinct !DISubprogram(name: "process_dir", scope: !66, file: !66, line: 443, type: !2598, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!7, !9, !2600, !53}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!2601 = !DILocalVariable(name: "dir", arg: 1, scope: !2597, file: !66, line: 443, type: !9)
!2602 = !DILocation(line: 443, column: 20, scope: !2597)
!2603 = !DILocalVariable(name: "wd", arg: 2, scope: !2597, file: !66, line: 443, type: !2600)
!2604 = !DILocation(line: 443, column: 40, scope: !2597)
!2605 = !DILocalVariable(name: "options", arg: 3, scope: !2597, file: !66, line: 443, type: !53)
!2606 = !DILocation(line: 443, column: 50, scope: !2597)
!2607 = !DILocalVariable(name: "x", scope: !2597, file: !66, line: 445, type: !342)
!2608 = !DILocation(line: 445, column: 28, scope: !2597)
!2609 = !DILocation(line: 445, column: 32, scope: !2597)
!2610 = !DILocalVariable(name: "ret", scope: !2597, file: !66, line: 447, type: !7)
!2611 = !DILocation(line: 447, column: 7, scope: !2597)
!2612 = !DILocation(line: 447, column: 32, scope: !2597)
!2613 = !DILocation(line: 447, column: 37, scope: !2597)
!2614 = !DILocation(line: 447, column: 56, scope: !2597)
!2615 = !DILocation(line: 448, column: 32, scope: !2597)
!2616 = !DILocation(line: 449, column: 32, scope: !2597)
!2617 = !DILocation(line: 449, column: 47, scope: !2597)
!2618 = !DILocation(line: 449, column: 57, scope: !2597)
!2619 = !DILocation(line: 447, column: 14, scope: !2597)
!2620 = !DILocation(line: 458, column: 7, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2597, file: !66, line: 458, column: 7)
!2622 = !DILocation(line: 458, column: 11, scope: !2621)
!2623 = !DILocation(line: 458, column: 27, scope: !2621)
!2624 = !DILocation(line: 458, column: 30, scope: !2621)
!2625 = !DILocation(line: 458, column: 33, scope: !2621)
!2626 = !DILocation(line: 458, column: 7, scope: !2597)
!2627 = !DILocation(line: 460, column: 41, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2629, file: !66, line: 460, column: 11)
!2629 = distinct !DILexicalBlock(scope: !2621, file: !66, line: 459, column: 5)
!2630 = !DILocation(line: 460, column: 25, scope: !2628)
!2631 = !DILocation(line: 460, column: 13, scope: !2628)
!2632 = !DILocation(line: 461, column: 11, scope: !2628)
!2633 = !DILocation(line: 461, column: 35, scope: !2628)
!2634 = !DILocation(line: 461, column: 16, scope: !2628)
!2635 = !DILocation(line: 460, column: 11, scope: !2629)
!2636 = !DILocation(line: 462, column: 19, scope: !2628)
!2637 = !DILocation(line: 462, column: 26, scope: !2628)
!2638 = !DILocation(line: 463, column: 16, scope: !2628)
!2639 = !DILocation(line: 462, column: 9, scope: !2628)
!2640 = !DILocation(line: 464, column: 5, scope: !2629)
!2641 = !DILocation(line: 466, column: 10, scope: !2597)
!2642 = !DILocation(line: 466, column: 3, scope: !2597)
!2643 = distinct !DISubprogram(name: "install_file_in_file_parents", scope: !66, file: !66, line: 765, type: !2644, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!142, !183, !9, !342}
!2646 = !DILocalVariable(name: "from", arg: 1, scope: !2643, file: !66, line: 765, type: !183)
!2647 = !DILocation(line: 765, column: 43, scope: !2643)
!2648 = !DILocalVariable(name: "to", arg: 2, scope: !2643, file: !66, line: 765, type: !9)
!2649 = !DILocation(line: 765, column: 55, scope: !2643)
!2650 = !DILocalVariable(name: "x", arg: 3, scope: !2643, file: !66, line: 766, type: !342)
!2651 = !DILocation(line: 766, column: 56, scope: !2643)
!2652 = !DILocation(line: 768, column: 32, scope: !2643)
!2653 = !DILocation(line: 768, column: 38, scope: !2643)
!2654 = !DILocation(line: 768, column: 63, scope: !2643)
!2655 = !DILocation(line: 768, column: 11, scope: !2643)
!2656 = !DILocation(line: 769, column: 11, scope: !2643)
!2657 = !DILocation(line: 769, column: 36, scope: !2643)
!2658 = !DILocation(line: 769, column: 42, scope: !2643)
!2659 = !DILocation(line: 769, column: 46, scope: !2643)
!2660 = !DILocation(line: 769, column: 14, scope: !2643)
!2661 = !DILocation(line: 0, scope: !2643)
!2662 = !DILocation(line: 768, column: 3, scope: !2643)
!2663 = distinct !DISubprogram(name: "install_file_in_file", scope: !66, file: !66, line: 696, type: !2664, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!142, !183, !183, !342}
!2666 = !DILocalVariable(name: "from", arg: 1, scope: !2663, file: !66, line: 696, type: !183)
!2667 = !DILocation(line: 696, column: 35, scope: !2663)
!2668 = !DILocalVariable(name: "to", arg: 2, scope: !2663, file: !66, line: 696, type: !183)
!2669 = !DILocation(line: 696, column: 53, scope: !2663)
!2670 = !DILocalVariable(name: "x", arg: 3, scope: !2663, file: !66, line: 697, type: !342)
!2671 = !DILocation(line: 697, column: 48, scope: !2663)
!2672 = !DILocalVariable(name: "from_sb", scope: !2663, file: !66, line: 699, type: !1939)
!2673 = !DILocation(line: 699, column: 15, scope: !2663)
!2674 = !DILocation(line: 700, column: 7, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2663, file: !66, line: 700, column: 7)
!2676 = !DILocation(line: 700, column: 10, scope: !2675)
!2677 = !DILocation(line: 700, column: 30, scope: !2675)
!2678 = !DILocation(line: 700, column: 39, scope: !2675)
!2679 = !DILocation(line: 700, column: 33, scope: !2675)
!2680 = !DILocation(line: 700, column: 55, scope: !2675)
!2681 = !DILocation(line: 700, column: 7, scope: !2663)
!2682 = !DILocation(line: 702, column: 17, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2675, file: !66, line: 701, column: 5)
!2684 = !DILocation(line: 702, column: 24, scope: !2683)
!2685 = !DILocation(line: 702, column: 45, scope: !2683)
!2686 = !DILocation(line: 702, column: 7, scope: !2683)
!2687 = !DILocation(line: 703, column: 7, scope: !2683)
!2688 = !DILocation(line: 705, column: 20, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2663, file: !66, line: 705, column: 7)
!2690 = !DILocation(line: 705, column: 26, scope: !2689)
!2691 = !DILocation(line: 705, column: 30, scope: !2689)
!2692 = !DILocation(line: 705, column: 9, scope: !2689)
!2693 = !DILocation(line: 705, column: 7, scope: !2663)
!2694 = !DILocation(line: 706, column: 5, scope: !2689)
!2695 = !DILocation(line: 707, column: 7, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2663, file: !66, line: 707, column: 7)
!2697 = !DILocation(line: 707, column: 7, scope: !2663)
!2698 = !DILocation(line: 708, column: 18, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2696, file: !66, line: 708, column: 9)
!2700 = !DILocation(line: 708, column: 11, scope: !2699)
!2701 = !DILocation(line: 708, column: 9, scope: !2696)
!2702 = !DILocation(line: 710, column: 21, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2704, file: !66, line: 710, column: 13)
!2704 = distinct !DILexicalBlock(scope: !2699, file: !66, line: 709, column: 7)
!2705 = !DILocation(line: 710, column: 13, scope: !2703)
!2706 = !DILocation(line: 710, column: 25, scope: !2703)
!2707 = !DILocation(line: 710, column: 13, scope: !2704)
!2708 = !DILocation(line: 711, column: 11, scope: !2703)
!2709 = !DILocation(line: 712, column: 9, scope: !2704)
!2710 = !DILocation(line: 708, column: 20, scope: !2699)
!2711 = !DILocation(line: 714, column: 7, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2663, file: !66, line: 714, column: 7)
!2713 = !DILocation(line: 714, column: 10, scope: !2712)
!2714 = !DILocation(line: 714, column: 30, scope: !2712)
!2715 = !DILocation(line: 714, column: 34, scope: !2712)
!2716 = !DILocation(line: 714, column: 46, scope: !2712)
!2717 = !DILocation(line: 714, column: 51, scope: !2712)
!2718 = !DILocation(line: 715, column: 7, scope: !2712)
!2719 = !DILocation(line: 715, column: 41, scope: !2712)
!2720 = !DILocation(line: 715, column: 12, scope: !2712)
!2721 = !DILocation(line: 714, column: 7, scope: !2663)
!2722 = !DILocation(line: 716, column: 5, scope: !2712)
!2723 = !DILocation(line: 717, column: 29, scope: !2663)
!2724 = !DILocation(line: 717, column: 10, scope: !2663)
!2725 = !DILocation(line: 717, column: 3, scope: !2663)
!2726 = !DILocation(line: 718, column: 1, scope: !2663)
!2727 = distinct !DISubprogram(name: "install_file_in_dir", scope: !66, file: !66, line: 777, type: !2728, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!142, !183, !183, !342, !142}
!2730 = !DILocalVariable(name: "from", arg: 1, scope: !2727, file: !66, line: 777, type: !183)
!2731 = !DILocation(line: 777, column: 34, scope: !2727)
!2732 = !DILocalVariable(name: "to_dir", arg: 2, scope: !2727, file: !66, line: 777, type: !183)
!2733 = !DILocation(line: 777, column: 52, scope: !2727)
!2734 = !DILocalVariable(name: "x", arg: 3, scope: !2727, file: !66, line: 778, type: !342)
!2735 = !DILocation(line: 778, column: 47, scope: !2727)
!2736 = !DILocalVariable(name: "mkdir_and_install", arg: 4, scope: !2727, file: !66, line: 778, type: !142)
!2737 = !DILocation(line: 778, column: 55, scope: !2727)
!2738 = !DILocalVariable(name: "from_base", scope: !2727, file: !66, line: 780, type: !183)
!2739 = !DILocation(line: 780, column: 15, scope: !2727)
!2740 = !DILocation(line: 780, column: 43, scope: !2727)
!2741 = !DILocation(line: 780, column: 27, scope: !2727)
!2742 = !DILocalVariable(name: "to", scope: !2727, file: !66, line: 781, type: !9)
!2743 = !DILocation(line: 781, column: 9, scope: !2727)
!2744 = !DILocation(line: 781, column: 32, scope: !2727)
!2745 = !DILocation(line: 781, column: 40, scope: !2727)
!2746 = !DILocation(line: 781, column: 14, scope: !2727)
!2747 = !DILocalVariable(name: "ret", scope: !2727, file: !66, line: 782, type: !142)
!2748 = !DILocation(line: 782, column: 8, scope: !2727)
!2749 = !DILocation(line: 784, column: 7, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2727, file: !66, line: 784, column: 7)
!2751 = !DILocation(line: 784, column: 7, scope: !2727)
!2752 = !DILocation(line: 785, column: 32, scope: !2750)
!2753 = !DILocation(line: 785, column: 38, scope: !2750)
!2754 = !DILocation(line: 785, column: 63, scope: !2750)
!2755 = !DILocation(line: 785, column: 11, scope: !2750)
!2756 = !DILocation(line: 785, column: 9, scope: !2750)
!2757 = !DILocation(line: 785, column: 5, scope: !2750)
!2758 = !DILocation(line: 787, column: 9, scope: !2727)
!2759 = !DILocation(line: 787, column: 13, scope: !2727)
!2760 = !DILocation(line: 787, column: 38, scope: !2727)
!2761 = !DILocation(line: 787, column: 44, scope: !2727)
!2762 = !DILocation(line: 787, column: 48, scope: !2727)
!2763 = !DILocation(line: 787, column: 16, scope: !2727)
!2764 = !DILocation(line: 0, scope: !2727)
!2765 = !DILocation(line: 787, column: 7, scope: !2727)
!2766 = !DILocation(line: 788, column: 9, scope: !2727)
!2767 = !DILocation(line: 788, column: 3, scope: !2727)
!2768 = !DILocation(line: 789, column: 10, scope: !2727)
!2769 = !DILocation(line: 789, column: 3, scope: !2727)
!2770 = distinct !DISubprogram(name: "mkancesdirs_safe_wd", scope: !66, file: !66, line: 725, type: !2771, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!142, !183, !9, !131, !142}
!2773 = !DILocalVariable(name: "from", arg: 1, scope: !2770, file: !66, line: 725, type: !183)
!2774 = !DILocation(line: 725, column: 34, scope: !2770)
!2775 = !DILocalVariable(name: "to", arg: 2, scope: !2770, file: !66, line: 725, type: !9)
!2776 = !DILocation(line: 725, column: 46, scope: !2770)
!2777 = !DILocalVariable(name: "x", arg: 3, scope: !2770, file: !66, line: 725, type: !131)
!2778 = !DILocation(line: 725, column: 69, scope: !2770)
!2779 = !DILocalVariable(name: "save_always", arg: 4, scope: !2770, file: !66, line: 726, type: !142)
!2780 = !DILocation(line: 726, column: 27, scope: !2770)
!2781 = !DILocalVariable(name: "save_working_directory", scope: !2770, file: !66, line: 728, type: !142)
!2782 = !DILocation(line: 728, column: 8, scope: !2770)
!2783 = !DILocation(line: 729, column: 5, scope: !2770)
!2784 = !DILocation(line: 730, column: 5, scope: !2770)
!2785 = !DILocation(line: 730, column: 11, scope: !2770)
!2786 = !DILocation(line: 730, column: 40, scope: !2770)
!2787 = !DILocation(line: 730, column: 43, scope: !2770)
!2788 = !DILocation(line: 0, scope: !2770)
!2789 = !DILocation(line: 730, column: 8, scope: !2770)
!2790 = !DILocalVariable(name: "status", scope: !2770, file: !66, line: 731, type: !7)
!2791 = !DILocation(line: 731, column: 7, scope: !2770)
!2792 = !DILocalVariable(name: "wd", scope: !2770, file: !66, line: 733, type: !102)
!2793 = !DILocation(line: 733, column: 17, scope: !2770)
!2794 = !DILocation(line: 734, column: 3, scope: !2770)
!2795 = !DILocation(line: 735, column: 9, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2770, file: !66, line: 735, column: 7)
!2797 = !DILocation(line: 735, column: 7, scope: !2770)
!2798 = !DILocation(line: 736, column: 5, scope: !2796)
!2799 = !DILocation(line: 738, column: 20, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2770, file: !66, line: 738, column: 7)
!2801 = !DILocation(line: 738, column: 44, scope: !2800)
!2802 = !DILocation(line: 738, column: 7, scope: !2800)
!2803 = !DILocation(line: 738, column: 47, scope: !2800)
!2804 = !DILocation(line: 738, column: 7, scope: !2770)
!2805 = !DILocation(line: 740, column: 17, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2800, file: !66, line: 739, column: 5)
!2807 = !DILocation(line: 740, column: 24, scope: !2806)
!2808 = !DILocation(line: 740, column: 57, scope: !2806)
!2809 = !DILocation(line: 740, column: 7, scope: !2806)
!2810 = !DILocation(line: 741, column: 14, scope: !2806)
!2811 = !DILocation(line: 742, column: 5, scope: !2806)
!2812 = !DILocation(line: 744, column: 7, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2770, file: !66, line: 744, column: 7)
!2814 = !DILocation(line: 744, column: 7, scope: !2770)
!2815 = !DILocalVariable(name: "restore_result", scope: !2816, file: !66, line: 746, type: !7)
!2816 = distinct !DILexicalBlock(scope: !2813, file: !66, line: 745, column: 5)
!2817 = !DILocation(line: 746, column: 11, scope: !2816)
!2818 = !DILocation(line: 746, column: 49, scope: !2816)
!2819 = !DILocation(line: 746, column: 28, scope: !2816)
!2820 = !DILocalVariable(name: "restore_errno", scope: !2816, file: !66, line: 747, type: !7)
!2821 = !DILocation(line: 747, column: 11, scope: !2816)
!2822 = !DILocation(line: 747, column: 27, scope: !2816)
!2823 = !DILocation(line: 748, column: 7, scope: !2816)
!2824 = !DILocation(line: 749, column: 26, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2816, file: !66, line: 749, column: 11)
!2826 = !DILocation(line: 749, column: 24, scope: !2825)
!2827 = !DILocation(line: 749, column: 11, scope: !2816)
!2828 = !DILocation(line: 750, column: 9, scope: !2825)
!2829 = !DILocation(line: 751, column: 11, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2816, file: !66, line: 751, column: 11)
!2831 = !DILocation(line: 751, column: 26, scope: !2830)
!2832 = !DILocation(line: 751, column: 30, scope: !2830)
!2833 = !DILocation(line: 751, column: 33, scope: !2830)
!2834 = !DILocation(line: 751, column: 40, scope: !2830)
!2835 = !DILocation(line: 751, column: 11, scope: !2816)
!2836 = !DILocation(line: 753, column: 21, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2830, file: !66, line: 752, column: 9)
!2838 = !DILocation(line: 753, column: 36, scope: !2837)
!2839 = !DILocation(line: 754, column: 18, scope: !2837)
!2840 = !DILocation(line: 753, column: 11, scope: !2837)
!2841 = !DILocation(line: 755, column: 11, scope: !2837)
!2842 = !DILocation(line: 757, column: 5, scope: !2816)
!2843 = !DILocation(line: 758, column: 10, scope: !2770)
!2844 = !DILocation(line: 758, column: 17, scope: !2770)
!2845 = !DILocation(line: 758, column: 3, scope: !2770)
!2846 = !DILocation(line: 759, column: 1, scope: !2770)
!2847 = distinct !DISubprogram(name: "make_ancestor", scope: !66, file: !66, line: 427, type: !2848, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!7, !183, !183, !53}
!2850 = !DILocalVariable(name: "dir", arg: 1, scope: !2847, file: !66, line: 427, type: !183)
!2851 = !DILocation(line: 427, column: 28, scope: !2847)
!2852 = !DILocalVariable(name: "component", arg: 2, scope: !2847, file: !66, line: 427, type: !183)
!2853 = !DILocation(line: 427, column: 45, scope: !2847)
!2854 = !DILocalVariable(name: "options", arg: 3, scope: !2847, file: !66, line: 427, type: !53)
!2855 = !DILocation(line: 427, column: 62, scope: !2847)
!2856 = !DILocalVariable(name: "x", scope: !2847, file: !66, line: 429, type: !342)
!2857 = !DILocation(line: 429, column: 28, scope: !2847)
!2858 = !DILocation(line: 429, column: 32, scope: !2847)
!2859 = !DILocation(line: 430, column: 7, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2847, file: !66, line: 430, column: 7)
!2861 = !DILocation(line: 430, column: 10, scope: !2860)
!2862 = !DILocation(line: 430, column: 31, scope: !2860)
!2863 = !DILocation(line: 430, column: 46, scope: !2860)
!2864 = !DILocation(line: 430, column: 34, scope: !2860)
!2865 = !DILocation(line: 430, column: 66, scope: !2860)
!2866 = !DILocation(line: 431, column: 7, scope: !2860)
!2867 = !DILocation(line: 431, column: 31, scope: !2860)
!2868 = !DILocation(line: 431, column: 12, scope: !2860)
!2869 = !DILocation(line: 430, column: 7, scope: !2847)
!2870 = !DILocation(line: 432, column: 15, scope: !2860)
!2871 = !DILocation(line: 432, column: 22, scope: !2860)
!2872 = !DILocation(line: 433, column: 12, scope: !2860)
!2873 = !DILocation(line: 432, column: 5, scope: !2860)
!2874 = !DILocalVariable(name: "r", scope: !2847, file: !66, line: 435, type: !7)
!2875 = !DILocation(line: 435, column: 7, scope: !2847)
!2876 = !DILocation(line: 435, column: 18, scope: !2847)
!2877 = !DILocation(line: 435, column: 11, scope: !2847)
!2878 = !DILocation(line: 436, column: 7, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2847, file: !66, line: 436, column: 7)
!2880 = !DILocation(line: 436, column: 9, scope: !2879)
!2881 = !DILocation(line: 436, column: 7, scope: !2847)
!2882 = !DILocation(line: 437, column: 21, scope: !2879)
!2883 = !DILocation(line: 437, column: 26, scope: !2879)
!2884 = !DILocation(line: 437, column: 5, scope: !2879)
!2885 = !DILocation(line: 438, column: 10, scope: !2847)
!2886 = !DILocation(line: 438, column: 3, scope: !2847)
!2887 = distinct !DISubprogram(name: "defaultcon", scope: !2888, file: !2888, line: 44, type: !2889, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2888 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!7, !183, !139}
!2891 = !DILocalVariable(name: "path", arg: 1, scope: !2887, file: !2888, line: 44, type: !183)
!2892 = !DILocation(line: 44, column: 25, scope: !2887)
!2893 = !DILocalVariable(name: "mode", arg: 2, scope: !2887, file: !2888, line: 44, type: !139)
!2894 = !DILocation(line: 44, column: 38, scope: !2887)
!2895 = !DILocation(line: 45, column: 3, scope: !2887)
!2896 = !DILocation(line: 45, column: 9, scope: !2887)
!2897 = !DILocation(line: 45, column: 20, scope: !2887)
!2898 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !2888, file: !2888, line: 25, type: !2899, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!142, !7}
!2901 = !DILocalVariable(name: "err", arg: 1, scope: !2898, file: !2888, line: 25, type: !7)
!2902 = !DILocation(line: 25, column: 24, scope: !2898)
!2903 = !DILocation(line: 27, column: 10, scope: !2898)
!2904 = !DILocation(line: 27, column: 14, scope: !2898)
!2905 = !DILocation(line: 27, column: 25, scope: !2898)
!2906 = !DILocation(line: 27, column: 28, scope: !2898)
!2907 = !DILocation(line: 27, column: 32, scope: !2898)
!2908 = !DILocation(line: 27, column: 3, scope: !2898)
!2909 = distinct !DISubprogram(name: "announce_mkdir", scope: !66, file: !66, line: 416, type: !2910, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !183, !53}
!2912 = !DILocalVariable(name: "dir", arg: 1, scope: !2909, file: !66, line: 416, type: !183)
!2913 = !DILocation(line: 416, column: 29, scope: !2909)
!2914 = !DILocalVariable(name: "options", arg: 2, scope: !2909, file: !66, line: 416, type: !53)
!2915 = !DILocation(line: 416, column: 40, scope: !2909)
!2916 = !DILocalVariable(name: "x", scope: !2909, file: !66, line: 418, type: !342)
!2917 = !DILocation(line: 418, column: 28, scope: !2909)
!2918 = !DILocation(line: 418, column: 32, scope: !2909)
!2919 = !DILocation(line: 419, column: 7, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2909, file: !66, line: 419, column: 7)
!2921 = !DILocation(line: 419, column: 10, scope: !2920)
!2922 = !DILocation(line: 419, column: 7, scope: !2909)
!2923 = !DILocation(line: 420, column: 19, scope: !2920)
!2924 = !DILocation(line: 420, column: 27, scope: !2920)
!2925 = !DILocation(line: 420, column: 55, scope: !2920)
!2926 = !DILocation(line: 420, column: 5, scope: !2920)
!2927 = !DILocation(line: 421, column: 1, scope: !2909)
!2928 = distinct !DISubprogram(name: "copy_file", scope: !66, file: !66, line: 473, type: !2664, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2929 = !DILocalVariable(name: "from", arg: 1, scope: !2928, file: !66, line: 473, type: !183)
!2930 = !DILocation(line: 473, column: 24, scope: !2928)
!2931 = !DILocalVariable(name: "to", arg: 2, scope: !2928, file: !66, line: 473, type: !183)
!2932 = !DILocation(line: 473, column: 42, scope: !2928)
!2933 = !DILocalVariable(name: "x", arg: 3, scope: !2928, file: !66, line: 473, type: !342)
!2934 = !DILocation(line: 473, column: 71, scope: !2928)
!2935 = !DILocalVariable(name: "copy_into_self", scope: !2928, file: !66, line: 475, type: !142)
!2936 = !DILocation(line: 475, column: 8, scope: !2928)
!2937 = !DILocation(line: 477, column: 7, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2928, file: !66, line: 477, column: 7)
!2939 = !DILocation(line: 477, column: 27, scope: !2938)
!2940 = !DILocation(line: 477, column: 42, scope: !2938)
!2941 = !DILocation(line: 477, column: 48, scope: !2938)
!2942 = !DILocation(line: 477, column: 52, scope: !2938)
!2943 = !DILocation(line: 477, column: 31, scope: !2938)
!2944 = !DILocation(line: 477, column: 7, scope: !2928)
!2945 = !DILocation(line: 478, column: 5, scope: !2938)
!2946 = !DILocation(line: 486, column: 16, scope: !2928)
!2947 = !DILocation(line: 486, column: 22, scope: !2928)
!2948 = !DILocation(line: 486, column: 33, scope: !2928)
!2949 = !DILocation(line: 486, column: 10, scope: !2928)
!2950 = !DILocation(line: 486, column: 3, scope: !2928)
!2951 = !DILocation(line: 487, column: 1, scope: !2928)
!2952 = distinct !DISubprogram(name: "strip", scope: !66, file: !66, line: 547, type: !2466, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2953 = !DILocalVariable(name: "name", arg: 1, scope: !2952, file: !66, line: 547, type: !183)
!2954 = !DILocation(line: 547, column: 20, scope: !2952)
!2955 = !DILocalVariable(name: "status", scope: !2952, file: !66, line: 549, type: !7)
!2956 = !DILocation(line: 549, column: 7, scope: !2952)
!2957 = !DILocalVariable(name: "ok", scope: !2952, file: !66, line: 550, type: !142)
!2958 = !DILocation(line: 550, column: 8, scope: !2952)
!2959 = !DILocalVariable(name: "pid", scope: !2952, file: !66, line: 551, type: !111)
!2960 = !DILocation(line: 551, column: 9, scope: !2952)
!2961 = !DILocation(line: 551, column: 15, scope: !2952)
!2962 = !DILocation(line: 553, column: 11, scope: !2952)
!2963 = !DILocation(line: 553, column: 3, scope: !2952)
!2964 = !DILocation(line: 556, column: 17, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2952, file: !66, line: 554, column: 5)
!2966 = !DILocation(line: 556, column: 24, scope: !2965)
!2967 = !DILocation(line: 556, column: 7, scope: !2965)
!2968 = !DILocation(line: 557, column: 7, scope: !2965)
!2969 = !DILocation(line: 559, column: 15, scope: !2965)
!2970 = !DILocation(line: 559, column: 30, scope: !2965)
!2971 = !DILocation(line: 559, column: 45, scope: !2965)
!2972 = !DILocation(line: 559, column: 7, scope: !2965)
!2973 = !DILocation(line: 560, column: 7, scope: !2965)
!2974 = !DILocation(line: 562, column: 20, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2965, file: !66, line: 562, column: 11)
!2976 = !DILocation(line: 562, column: 11, scope: !2975)
!2977 = !DILocation(line: 562, column: 37, scope: !2975)
!2978 = !DILocation(line: 562, column: 11, scope: !2965)
!2979 = !DILocation(line: 563, column: 19, scope: !2975)
!2980 = !DILocation(line: 563, column: 26, scope: !2975)
!2981 = !DILocation(line: 563, column: 9, scope: !2975)
!2982 = !DILocation(line: 564, column: 18, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2975, file: !66, line: 564, column: 16)
!2984 = !DILocation(line: 564, column: 37, scope: !2983)
!2985 = !DILocation(line: 564, column: 40, scope: !2983)
!2986 = !DILocation(line: 564, column: 16, scope: !2975)
!2987 = !DILocation(line: 565, column: 22, scope: !2983)
!2988 = !DILocation(line: 565, column: 9, scope: !2983)
!2989 = !DILocation(line: 567, column: 12, scope: !2983)
!2990 = !DILocation(line: 568, column: 7, scope: !2965)
!2991 = !DILocation(line: 570, column: 10, scope: !2952)
!2992 = !DILocation(line: 570, column: 3, scope: !2952)
!2993 = distinct !DISubprogram(name: "change_timestamps", scope: !66, file: !66, line: 526, type: !2994, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!142, !2996, !183}
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!2998 = !DILocalVariable(name: "src_sb", arg: 1, scope: !2993, file: !66, line: 526, type: !2996)
!2999 = !DILocation(line: 526, column: 39, scope: !2993)
!3000 = !DILocalVariable(name: "dest", arg: 2, scope: !2993, file: !66, line: 526, type: !183)
!3001 = !DILocation(line: 526, column: 59, scope: !2993)
!3002 = !DILocalVariable(name: "timespec", scope: !2993, file: !66, line: 528, type: !363)
!3003 = !DILocation(line: 528, column: 19, scope: !2993)
!3004 = !DILocation(line: 529, column: 3, scope: !2993)
!3005 = !DILocation(line: 529, column: 33, scope: !2993)
!3006 = !DILocation(line: 529, column: 17, scope: !2993)
!3007 = !DILocation(line: 530, column: 3, scope: !2993)
!3008 = !DILocation(line: 530, column: 33, scope: !2993)
!3009 = !DILocation(line: 530, column: 17, scope: !2993)
!3010 = !DILocation(line: 532, column: 16, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !2993, file: !66, line: 532, column: 7)
!3012 = !DILocation(line: 532, column: 22, scope: !3011)
!3013 = !DILocation(line: 532, column: 7, scope: !3011)
!3014 = !DILocation(line: 532, column: 7, scope: !2993)
!3015 = !DILocation(line: 534, column: 17, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3011, file: !66, line: 533, column: 5)
!3017 = !DILocation(line: 534, column: 24, scope: !3016)
!3018 = !DILocation(line: 534, column: 59, scope: !3016)
!3019 = !DILocation(line: 534, column: 7, scope: !3016)
!3020 = !DILocation(line: 535, column: 7, scope: !3016)
!3021 = !DILocation(line: 537, column: 3, scope: !2993)
!3022 = !DILocation(line: 538, column: 1, scope: !2993)
!3023 = distinct !DISubprogram(name: "change_attributes", scope: !66, file: !66, line: 493, type: !2466, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!3024 = !DILocalVariable(name: "name", arg: 1, scope: !3023, file: !66, line: 493, type: !183)
!3025 = !DILocation(line: 493, column: 32, scope: !3023)
!3026 = !DILocalVariable(name: "ok", scope: !3023, file: !66, line: 495, type: !142)
!3027 = !DILocation(line: 495, column: 8, scope: !3023)
!3028 = !DILocation(line: 508, column: 10, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3023, file: !66, line: 508, column: 7)
!3030 = !DILocation(line: 508, column: 19, scope: !3029)
!3031 = !DILocation(line: 508, column: 33, scope: !3029)
!3032 = !DILocation(line: 508, column: 36, scope: !3029)
!3033 = !DILocation(line: 508, column: 45, scope: !3029)
!3034 = !DILocation(line: 509, column: 7, scope: !3029)
!3035 = !DILocation(line: 509, column: 18, scope: !3029)
!3036 = !DILocation(line: 509, column: 24, scope: !3029)
!3037 = !DILocation(line: 509, column: 34, scope: !3029)
!3038 = !DILocation(line: 509, column: 10, scope: !3029)
!3039 = !DILocation(line: 509, column: 44, scope: !3029)
!3040 = !DILocation(line: 508, column: 7, scope: !3023)
!3041 = !DILocation(line: 510, column: 15, scope: !3029)
!3042 = !DILocation(line: 510, column: 22, scope: !3029)
!3043 = !DILocation(line: 510, column: 58, scope: !3029)
!3044 = !DILocation(line: 510, column: 5, scope: !3029)
!3045 = !DILocation(line: 511, column: 19, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3029, file: !66, line: 511, column: 12)
!3047 = !DILocation(line: 511, column: 25, scope: !3046)
!3048 = !DILocation(line: 511, column: 12, scope: !3046)
!3049 = !DILocation(line: 511, column: 31, scope: !3046)
!3050 = !DILocation(line: 511, column: 12, scope: !3029)
!3051 = !DILocation(line: 512, column: 15, scope: !3046)
!3052 = !DILocation(line: 512, column: 22, scope: !3046)
!3053 = !DILocation(line: 512, column: 60, scope: !3046)
!3054 = !DILocation(line: 512, column: 5, scope: !3046)
!3055 = !DILocation(line: 514, column: 8, scope: !3046)
!3056 = !DILocation(line: 516, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3023, file: !66, line: 516, column: 7)
!3058 = !DILocation(line: 516, column: 7, scope: !3023)
!3059 = !DILocation(line: 517, column: 24, scope: !3057)
!3060 = !DILocation(line: 517, column: 5, scope: !3057)
!3061 = !DILocation(line: 519, column: 10, scope: !3023)
!3062 = !DILocation(line: 519, column: 3, scope: !3023)
!3063 = !DILocalVariable(name: "file", arg: 1, scope: !422, file: !66, line: 314, type: !183)
!3064 = !DILocation(line: 314, column: 32, scope: !422)
!3065 = !DILocalVariable(name: "st", scope: !422, file: !66, line: 316, type: !1939)
!3066 = !DILocation(line: 316, column: 15, scope: !422)
!3067 = !DILocalVariable(name: "scontext", scope: !422, file: !66, line: 317, type: !9)
!3068 = !DILocation(line: 317, column: 9, scope: !422)
!3069 = !DILocation(line: 320, column: 7, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !422, file: !66, line: 320, column: 7)
!3071 = !DILocation(line: 320, column: 23, scope: !3070)
!3072 = !DILocation(line: 320, column: 7, scope: !422)
!3073 = !DILocation(line: 323, column: 7, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3070, file: !66, line: 321, column: 5)
!3075 = !DILocation(line: 325, column: 14, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !422, file: !66, line: 325, column: 7)
!3077 = !DILocation(line: 325, column: 7, scope: !3076)
!3078 = !DILocation(line: 325, column: 25, scope: !3076)
!3079 = !DILocation(line: 325, column: 7, scope: !422)
!3080 = !DILocation(line: 326, column: 5, scope: !3076)
!3081 = !DILocation(line: 328, column: 7, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !422, file: !66, line: 328, column: 7)
!3083 = !DILocation(line: 328, column: 18, scope: !3082)
!3084 = !DILocation(line: 328, column: 21, scope: !3082)
!3085 = !DILocation(line: 328, column: 7, scope: !422)
!3086 = !DILocalVariable(name: "p0", scope: !3087, file: !66, line: 337, type: !183)
!3087 = distinct !DILexicalBlock(scope: !3082, file: !66, line: 329, column: 5)
!3088 = !DILocation(line: 337, column: 19, scope: !3087)
!3089 = !DILocalVariable(name: "p", scope: !3087, file: !66, line: 338, type: !183)
!3090 = !DILocation(line: 338, column: 19, scope: !3087)
!3091 = !DILocation(line: 338, column: 23, scope: !3087)
!3092 = !DILocation(line: 338, column: 28, scope: !3087)
!3093 = !DILocation(line: 339, column: 7, scope: !3087)
!3094 = !DILocation(line: 339, column: 14, scope: !3087)
!3095 = !DILocation(line: 340, column: 9, scope: !3087)
!3096 = distinct !{!3096, !3093, !3097}
!3097 = !DILocation(line: 340, column: 11, scope: !3087)
!3098 = !DILocation(line: 343, column: 12, scope: !3087)
!3099 = !DILocation(line: 343, column: 14, scope: !3087)
!3100 = !DILocation(line: 343, column: 10, scope: !3087)
!3101 = !DILocation(line: 345, column: 12, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3087, file: !66, line: 345, column: 11)
!3103 = !DILocation(line: 345, column: 11, scope: !3102)
!3104 = !DILocation(line: 345, column: 11, scope: !3087)
!3105 = !DILocalVariable(name: "prefix", scope: !3106, file: !66, line: 347, type: !9)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !66, line: 346, column: 9)
!3107 = !DILocation(line: 347, column: 17, scope: !3106)
!3108 = !DILocation(line: 348, column: 11, scope: !3106)
!3109 = !DILocation(line: 350, column: 15, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !66, line: 349, column: 13)
!3111 = !DILocation(line: 351, column: 13, scope: !3110)
!3112 = !DILocation(line: 352, column: 19, scope: !3106)
!3113 = !DILocation(line: 352, column: 18, scope: !3106)
!3114 = !DILocation(line: 352, column: 21, scope: !3106)
!3115 = !DILocation(line: 352, column: 25, scope: !3106)
!3116 = !DILocation(line: 352, column: 24, scope: !3106)
!3117 = !DILocation(line: 0, scope: !3106)
!3118 = distinct !{!3118, !3108, !3119}
!3119 = !DILocation(line: 352, column: 37, scope: !3106)
!3120 = !DILocation(line: 354, column: 28, scope: !3106)
!3121 = !DILocation(line: 354, column: 32, scope: !3106)
!3122 = !DILocation(line: 354, column: 30, scope: !3106)
!3123 = !DILocation(line: 354, column: 35, scope: !3106)
!3124 = !DILocation(line: 354, column: 20, scope: !3106)
!3125 = !DILocation(line: 354, column: 18, scope: !3106)
!3126 = !DILocation(line: 355, column: 15, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3106, file: !66, line: 355, column: 15)
!3128 = !DILocation(line: 355, column: 15, scope: !3106)
!3129 = !DILocation(line: 357, column: 32, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !66, line: 356, column: 13)
!3131 = !DILocation(line: 357, column: 40, scope: !3130)
!3132 = !DILocation(line: 357, column: 44, scope: !3130)
!3133 = !DILocation(line: 357, column: 48, scope: !3130)
!3134 = !DILocation(line: 357, column: 46, scope: !3130)
!3135 = !DILocation(line: 357, column: 23, scope: !3130)
!3136 = !DILocation(line: 357, column: 15, scope: !3130)
!3137 = !DILocation(line: 359, column: 21, scope: !3130)
!3138 = !DILocation(line: 359, column: 15, scope: !3130)
!3139 = !DILocation(line: 360, column: 13, scope: !3130)
!3140 = !DILocation(line: 361, column: 9, scope: !3106)
!3141 = !DILocation(line: 362, column: 5, scope: !3087)
!3142 = !DILocation(line: 363, column: 14, scope: !422)
!3143 = !DILocation(line: 368, column: 22, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !422, file: !66, line: 368, column: 7)
!3145 = !DILocation(line: 368, column: 31, scope: !3144)
!3146 = !DILocation(line: 368, column: 8, scope: !3144)
!3147 = !DILocation(line: 368, column: 51, scope: !3144)
!3148 = !DILocation(line: 369, column: 7, scope: !3144)
!3149 = !DILocation(line: 369, column: 10, scope: !3144)
!3150 = !DILocation(line: 368, column: 7, scope: !422)
!3151 = !DILocation(line: 371, column: 11, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !66, line: 371, column: 11)
!3153 = distinct !DILexicalBlock(scope: !3144, file: !66, line: 370, column: 5)
!3154 = !DILocation(line: 371, column: 20, scope: !3152)
!3155 = !DILocation(line: 371, column: 11, scope: !3153)
!3156 = !DILocation(line: 372, column: 18, scope: !3152)
!3157 = !DILocation(line: 372, column: 9, scope: !3152)
!3158 = !DILocation(line: 373, column: 7, scope: !3153)
!3159 = !DILocation(line: 376, column: 20, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !422, file: !66, line: 376, column: 7)
!3161 = !DILocation(line: 376, column: 26, scope: !3160)
!3162 = !DILocation(line: 376, column: 7, scope: !3160)
!3163 = !DILocation(line: 376, column: 36, scope: !3160)
!3164 = !DILocation(line: 376, column: 40, scope: !3160)
!3165 = !DILocation(line: 376, column: 43, scope: !3160)
!3166 = !DILocation(line: 376, column: 49, scope: !3160)
!3167 = !DILocation(line: 376, column: 7, scope: !422)
!3168 = !DILocation(line: 377, column: 15, scope: !3160)
!3169 = !DILocation(line: 378, column: 12, scope: !3160)
!3170 = !DILocation(line: 379, column: 12, scope: !3160)
!3171 = !DILocation(line: 379, column: 44, scope: !3160)
!3172 = !DILocation(line: 379, column: 32, scope: !3160)
!3173 = !DILocation(line: 377, column: 5, scope: !3160)
!3174 = !DILocation(line: 381, column: 12, scope: !422)
!3175 = !DILocation(line: 381, column: 3, scope: !422)
!3176 = !DILocation(line: 382, column: 3, scope: !422)
!3177 = !DILocation(line: 383, column: 1, scope: !422)
!3178 = distinct !DISubprogram(name: "need_copy", scope: !66, file: !66, line: 174, type: !2664, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!3179 = !DILocalVariable(name: "src_name", arg: 1, scope: !3178, file: !66, line: 174, type: !183)
!3180 = !DILocation(line: 174, column: 24, scope: !3178)
!3181 = !DILocalVariable(name: "dest_name", arg: 2, scope: !3178, file: !66, line: 174, type: !183)
!3182 = !DILocation(line: 174, column: 46, scope: !3178)
!3183 = !DILocalVariable(name: "x", arg: 3, scope: !3178, file: !66, line: 175, type: !342)
!3184 = !DILocation(line: 175, column: 37, scope: !3178)
!3185 = !DILocalVariable(name: "src_sb", scope: !3178, file: !66, line: 177, type: !1939)
!3186 = !DILocation(line: 177, column: 15, scope: !3178)
!3187 = !DILocalVariable(name: "dest_sb", scope: !3178, file: !66, line: 177, type: !1939)
!3188 = !DILocation(line: 177, column: 23, scope: !3178)
!3189 = !DILocalVariable(name: "src_fd", scope: !3178, file: !66, line: 178, type: !7)
!3190 = !DILocation(line: 178, column: 7, scope: !3178)
!3191 = !DILocalVariable(name: "dest_fd", scope: !3178, file: !66, line: 178, type: !7)
!3192 = !DILocation(line: 178, column: 15, scope: !3178)
!3193 = !DILocalVariable(name: "content_match", scope: !3178, file: !66, line: 179, type: !142)
!3194 = !DILocation(line: 179, column: 8, scope: !3178)
!3195 = !DILocation(line: 181, column: 19, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 181, column: 7)
!3197 = !DILocation(line: 181, column: 7, scope: !3196)
!3198 = !DILocation(line: 181, column: 7, scope: !3178)
!3199 = !DILocation(line: 182, column: 5, scope: !3196)
!3200 = !DILocation(line: 185, column: 14, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 185, column: 7)
!3202 = !DILocation(line: 185, column: 7, scope: !3201)
!3203 = !DILocation(line: 185, column: 33, scope: !3201)
!3204 = !DILocation(line: 185, column: 7, scope: !3178)
!3205 = !DILocation(line: 186, column: 5, scope: !3201)
!3206 = !DILocation(line: 188, column: 14, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 188, column: 7)
!3208 = !DILocation(line: 188, column: 7, scope: !3207)
!3209 = !DILocation(line: 188, column: 35, scope: !3207)
!3210 = !DILocation(line: 188, column: 7, scope: !3178)
!3211 = !DILocation(line: 189, column: 5, scope: !3207)
!3212 = !DILocation(line: 191, column: 8, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 191, column: 7)
!3214 = !DILocation(line: 191, column: 33, scope: !3213)
!3215 = !DILocation(line: 191, column: 37, scope: !3213)
!3216 = !DILocation(line: 192, column: 7, scope: !3213)
!3217 = !DILocation(line: 192, column: 29, scope: !3213)
!3218 = !DILocation(line: 192, column: 10, scope: !3213)
!3219 = !DILocation(line: 192, column: 38, scope: !3213)
!3220 = !DILocation(line: 192, column: 61, scope: !3213)
!3221 = !DILocation(line: 192, column: 41, scope: !3213)
!3222 = !DILocation(line: 191, column: 7, scope: !3178)
!3223 = !DILocation(line: 193, column: 5, scope: !3213)
!3224 = !DILocation(line: 195, column: 14, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 195, column: 7)
!3226 = !DILocation(line: 195, column: 33, scope: !3225)
!3227 = !DILocation(line: 195, column: 22, scope: !3225)
!3228 = !DILocation(line: 196, column: 7, scope: !3225)
!3229 = !DILocation(line: 196, column: 19, scope: !3225)
!3230 = !DILocation(line: 196, column: 27, scope: !3225)
!3231 = !DILocation(line: 196, column: 49, scope: !3225)
!3232 = !DILocation(line: 196, column: 46, scope: !3225)
!3233 = !DILocation(line: 195, column: 7, scope: !3178)
!3234 = !DILocation(line: 197, column: 5, scope: !3225)
!3235 = !DILocation(line: 199, column: 7, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 199, column: 7)
!3237 = !DILocation(line: 199, column: 16, scope: !3236)
!3238 = !DILocation(line: 199, column: 7, scope: !3178)
!3239 = !DILocation(line: 201, column: 7, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3236, file: !66, line: 200, column: 5)
!3241 = !DILocation(line: 201, column: 13, scope: !3240)
!3242 = !DILocalVariable(name: "ruid", scope: !3240, file: !66, line: 202, type: !127)
!3243 = !DILocation(line: 202, column: 13, scope: !3240)
!3244 = !DILocation(line: 202, column: 20, scope: !3240)
!3245 = !DILocation(line: 203, column: 12, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3240, file: !66, line: 203, column: 11)
!3247 = !DILocation(line: 203, column: 17, scope: !3246)
!3248 = !DILocation(line: 203, column: 31, scope: !3246)
!3249 = !DILocation(line: 203, column: 34, scope: !3246)
!3250 = !DILocation(line: 203, column: 41, scope: !3246)
!3251 = !DILocation(line: 203, column: 52, scope: !3246)
!3252 = !DILocation(line: 203, column: 62, scope: !3246)
!3253 = !DILocation(line: 203, column: 59, scope: !3246)
!3254 = !DILocation(line: 203, column: 11, scope: !3240)
!3255 = !DILocation(line: 204, column: 9, scope: !3246)
!3256 = !DILocation(line: 205, column: 5, scope: !3240)
!3257 = !DILocation(line: 206, column: 20, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3236, file: !66, line: 206, column: 12)
!3259 = !DILocation(line: 206, column: 30, scope: !3258)
!3260 = !DILocation(line: 206, column: 27, scope: !3258)
!3261 = !DILocation(line: 206, column: 12, scope: !3236)
!3262 = !DILocation(line: 207, column: 5, scope: !3258)
!3263 = !DILocation(line: 209, column: 7, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 209, column: 7)
!3265 = !DILocation(line: 209, column: 16, scope: !3264)
!3266 = !DILocation(line: 209, column: 7, scope: !3178)
!3267 = !DILocation(line: 211, column: 7, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3264, file: !66, line: 210, column: 5)
!3269 = !DILocation(line: 211, column: 13, scope: !3268)
!3270 = !DILocalVariable(name: "rgid", scope: !3268, file: !66, line: 212, type: !129)
!3271 = !DILocation(line: 212, column: 13, scope: !3268)
!3272 = !DILocation(line: 212, column: 20, scope: !3268)
!3273 = !DILocation(line: 213, column: 12, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3268, file: !66, line: 213, column: 11)
!3275 = !DILocation(line: 213, column: 17, scope: !3274)
!3276 = !DILocation(line: 213, column: 31, scope: !3274)
!3277 = !DILocation(line: 213, column: 34, scope: !3274)
!3278 = !DILocation(line: 213, column: 41, scope: !3274)
!3279 = !DILocation(line: 213, column: 52, scope: !3274)
!3280 = !DILocation(line: 213, column: 62, scope: !3274)
!3281 = !DILocation(line: 213, column: 59, scope: !3274)
!3282 = !DILocation(line: 213, column: 11, scope: !3268)
!3283 = !DILocation(line: 214, column: 9, scope: !3274)
!3284 = !DILocation(line: 215, column: 5, scope: !3268)
!3285 = !DILocation(line: 216, column: 20, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3264, file: !66, line: 216, column: 12)
!3287 = !DILocation(line: 216, column: 30, scope: !3286)
!3288 = !DILocation(line: 216, column: 27, scope: !3286)
!3289 = !DILocation(line: 216, column: 12, scope: !3264)
!3290 = !DILocation(line: 217, column: 5, scope: !3286)
!3291 = !DILocation(line: 220, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 220, column: 7)
!3293 = !DILocation(line: 220, column: 23, scope: !3292)
!3294 = !DILocation(line: 220, column: 26, scope: !3292)
!3295 = !DILocation(line: 220, column: 29, scope: !3292)
!3296 = !DILocation(line: 220, column: 7, scope: !3178)
!3297 = !DILocalVariable(name: "file_scontext", scope: !3298, file: !66, line: 222, type: !9)
!3298 = distinct !DILexicalBlock(scope: !3292, file: !66, line: 221, column: 5)
!3299 = !DILocation(line: 222, column: 13, scope: !3298)
!3300 = !DILocalVariable(name: "to_scontext", scope: !3298, file: !66, line: 223, type: !9)
!3301 = !DILocation(line: 223, column: 13, scope: !3298)
!3302 = !DILocalVariable(name: "scontext_match", scope: !3298, file: !66, line: 224, type: !142)
!3303 = !DILocation(line: 224, column: 12, scope: !3298)
!3304 = !DILocation(line: 226, column: 23, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3298, file: !66, line: 226, column: 11)
!3306 = !DILocation(line: 226, column: 11, scope: !3305)
!3307 = !DILocation(line: 226, column: 49, scope: !3305)
!3308 = !DILocation(line: 226, column: 11, scope: !3298)
!3309 = !DILocation(line: 227, column: 9, scope: !3305)
!3310 = !DILocation(line: 229, column: 23, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3298, file: !66, line: 229, column: 11)
!3312 = !DILocation(line: 229, column: 11, scope: !3311)
!3313 = !DILocation(line: 229, column: 48, scope: !3311)
!3314 = !DILocation(line: 229, column: 11, scope: !3298)
!3315 = !DILocation(line: 231, column: 20, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3311, file: !66, line: 230, column: 9)
!3317 = !DILocation(line: 231, column: 11, scope: !3316)
!3318 = !DILocation(line: 232, column: 11, scope: !3316)
!3319 = !DILocation(line: 235, column: 24, scope: !3298)
!3320 = !DILocation(line: 235, column: 22, scope: !3298)
!3321 = !DILocation(line: 237, column: 16, scope: !3298)
!3322 = !DILocation(line: 237, column: 7, scope: !3298)
!3323 = !DILocation(line: 238, column: 16, scope: !3298)
!3324 = !DILocation(line: 238, column: 7, scope: !3298)
!3325 = !DILocation(line: 239, column: 12, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3298, file: !66, line: 239, column: 11)
!3327 = !DILocation(line: 239, column: 11, scope: !3298)
!3328 = !DILocation(line: 240, column: 9, scope: !3326)
!3329 = !DILocation(line: 241, column: 5, scope: !3298)
!3330 = !DILocation(line: 244, column: 18, scope: !3178)
!3331 = !DILocation(line: 244, column: 12, scope: !3178)
!3332 = !DILocation(line: 244, column: 10, scope: !3178)
!3333 = !DILocation(line: 245, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 245, column: 7)
!3335 = !DILocation(line: 245, column: 14, scope: !3334)
!3336 = !DILocation(line: 245, column: 7, scope: !3178)
!3337 = !DILocation(line: 246, column: 5, scope: !3334)
!3338 = !DILocation(line: 248, column: 19, scope: !3178)
!3339 = !DILocation(line: 248, column: 13, scope: !3178)
!3340 = !DILocation(line: 248, column: 11, scope: !3178)
!3341 = !DILocation(line: 249, column: 7, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3178, file: !66, line: 249, column: 7)
!3343 = !DILocation(line: 249, column: 15, scope: !3342)
!3344 = !DILocation(line: 249, column: 7, scope: !3178)
!3345 = !DILocation(line: 251, column: 14, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3342, file: !66, line: 250, column: 5)
!3347 = !DILocation(line: 251, column: 7, scope: !3346)
!3348 = !DILocation(line: 252, column: 7, scope: !3346)
!3349 = !DILocation(line: 255, column: 38, scope: !3178)
!3350 = !DILocation(line: 255, column: 46, scope: !3178)
!3351 = !DILocation(line: 255, column: 19, scope: !3178)
!3352 = !DILocation(line: 255, column: 17, scope: !3178)
!3353 = !DILocation(line: 257, column: 10, scope: !3178)
!3354 = !DILocation(line: 257, column: 3, scope: !3178)
!3355 = !DILocation(line: 258, column: 10, scope: !3178)
!3356 = !DILocation(line: 258, column: 3, scope: !3178)
!3357 = !DILocation(line: 259, column: 11, scope: !3178)
!3358 = !DILocation(line: 259, column: 10, scope: !3178)
!3359 = !DILocation(line: 259, column: 3, scope: !3178)
!3360 = !DILocation(line: 260, column: 1, scope: !3178)
!3361 = !DILocalVariable(name: "a_fd", arg: 1, scope: !415, file: !66, line: 146, type: !7)
!3362 = !DILocation(line: 146, column: 24, scope: !415)
!3363 = !DILocalVariable(name: "b_fd", arg: 2, scope: !415, file: !66, line: 146, type: !7)
!3364 = !DILocation(line: 146, column: 34, scope: !415)
!3365 = !DILocalVariable(name: "size", scope: !415, file: !66, line: 152, type: !55)
!3366 = !DILocation(line: 152, column: 10, scope: !415)
!3367 = !DILocation(line: 153, column: 3, scope: !415)
!3368 = !DILocation(line: 153, column: 33, scope: !415)
!3369 = !DILocation(line: 153, column: 22, scope: !415)
!3370 = !DILocation(line: 153, column: 20, scope: !415)
!3371 = !DILocation(line: 153, column: 12, scope: !415)
!3372 = !DILocation(line: 154, column: 9, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !66, line: 154, column: 9)
!3374 = distinct !DILexicalBlock(scope: !415, file: !66, line: 153, column: 64)
!3375 = !DILocation(line: 154, column: 28, scope: !3373)
!3376 = !DILocation(line: 154, column: 17, scope: !3373)
!3377 = !DILocation(line: 154, column: 14, scope: !3373)
!3378 = !DILocation(line: 154, column: 9, scope: !3374)
!3379 = !DILocation(line: 155, column: 7, scope: !3373)
!3380 = !DILocation(line: 157, column: 33, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3374, file: !66, line: 157, column: 9)
!3382 = !DILocation(line: 157, column: 9, scope: !3381)
!3383 = !DILocation(line: 157, column: 39, scope: !3381)
!3384 = !DILocation(line: 157, column: 9, scope: !3374)
!3385 = !DILocation(line: 158, column: 7, scope: !3381)
!3386 = distinct !{!3386, !3367, !3387}
!3387 = !DILocation(line: 159, column: 3, scope: !415)
!3388 = !DILocation(line: 161, column: 10, scope: !415)
!3389 = !DILocation(line: 161, column: 15, scope: !415)
!3390 = !DILocation(line: 161, column: 3, scope: !415)
!3391 = !DILocation(line: 162, column: 1, scope: !415)
!3392 = distinct !DISubprogram(name: "restorecon", scope: !2888, file: !2888, line: 40, type: !3393, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !298)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!142, !183, !142, !142}
!3395 = !DILocalVariable(name: "path", arg: 1, scope: !3392, file: !2888, line: 40, type: !183)
!3396 = !DILocation(line: 40, column: 25, scope: !3392)
!3397 = !DILocalVariable(name: "recurse", arg: 2, scope: !3392, file: !2888, line: 40, type: !142)
!3398 = !DILocation(line: 40, column: 36, scope: !3392)
!3399 = !DILocalVariable(name: "preserve", arg: 3, scope: !3392, file: !2888, line: 40, type: !142)
!3400 = !DILocation(line: 40, column: 50, scope: !3392)
!3401 = !DILocation(line: 41, column: 3, scope: !3392)
!3402 = !DILocation(line: 41, column: 9, scope: !3392)
!3403 = !DILocation(line: 41, column: 20, scope: !3392)
!3404 = distinct !DISubprogram(name: "prog_fprintf", scope: !1172, file: !1172, line: 28, type: !3405, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1171, retainedNodes: !298)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{null, !3407, !183, null}
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3409)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !3410)
!3410 = !{!3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3409, file: !4, line: 51, baseType: !7, size: 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3409, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3409, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3409, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3409, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3409, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3409, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3409, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3409, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3409, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3409, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3409, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3409, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3409, file: !4, line: 70, baseType: !3425, size: 64, offset: 832)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3409, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3409, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3409, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3409, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3409, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3409, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3409, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3409, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3409, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3409, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3409, file: !4, line: 93, baseType: !3425, size: 64, offset: 1344)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3409, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3409, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3409, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3409, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!3441 = !DILocalVariable(name: "fp", arg: 1, scope: !3404, file: !1172, line: 28, type: !3407)
!3442 = !DILocation(line: 28, column: 21, scope: !3404)
!3443 = !DILocalVariable(name: "fmt", arg: 2, scope: !3404, file: !1172, line: 28, type: !183)
!3444 = !DILocation(line: 28, column: 37, scope: !3404)
!3445 = !DILocalVariable(name: "ap", scope: !3404, file: !1172, line: 30, type: !1174)
!3446 = !DILocation(line: 30, column: 11, scope: !3404)
!3447 = !DILocation(line: 31, column: 3, scope: !3404)
!3448 = !DILocation(line: 32, column: 3, scope: !3404)
!3449 = !DILocation(line: 33, column: 3, scope: !3404)
!3450 = !DILocation(line: 34, column: 13, scope: !3404)
!3451 = !DILocation(line: 34, column: 17, scope: !3404)
!3452 = !DILocation(line: 34, column: 22, scope: !3404)
!3453 = !DILocation(line: 34, column: 3, scope: !3404)
!3454 = !DILocation(line: 35, column: 3, scope: !3404)
!3455 = !DILocation(line: 36, column: 3, scope: !3404)
!3456 = !DILocation(line: 37, column: 1, scope: !3404)
!3457 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !426, file: !426, line: 893, type: !3458, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!142, !183, !183, !139, !142, !3460}
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3462)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !3463)
!3463 = !{!3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !3462, file: !77, line: 100, baseType: !68, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !3462, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !3462, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !3462, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3462, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !3462, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !3462, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !3462, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !3462, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !3462, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !3462, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !3462, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !3462, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !3462, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !3462, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !3462, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !3462, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !3462, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !3462, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !3462, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !3462, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !3462, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !3462, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !3462, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !3462, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !3462, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !3462, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !3462, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !3462, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !3462, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3462, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !3462, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !3462, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !3462, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !3462, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !3462, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !3462, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !3462, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !3462, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!3503 = !DILocalVariable(name: "src_name", arg: 1, scope: !3457, file: !426, line: 893, type: !183)
!3504 = !DILocation(line: 893, column: 39, scope: !3457)
!3505 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3457, file: !426, line: 893, type: !183)
!3506 = !DILocation(line: 893, column: 61, scope: !3457)
!3507 = !DILocalVariable(name: "mode", arg: 3, scope: !3457, file: !426, line: 894, type: !139)
!3508 = !DILocation(line: 894, column: 34, scope: !3457)
!3509 = !DILocalVariable(name: "new_dst", arg: 4, scope: !3457, file: !426, line: 894, type: !142)
!3510 = !DILocation(line: 894, column: 45, scope: !3457)
!3511 = !DILocalVariable(name: "x", arg: 5, scope: !3457, file: !426, line: 894, type: !3460)
!3512 = !DILocation(line: 894, column: 79, scope: !3457)
!3513 = !DILocation(line: 896, column: 7, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3457, file: !426, line: 896, column: 7)
!3515 = !DILocation(line: 896, column: 10, scope: !3514)
!3516 = !DILocation(line: 896, column: 7, scope: !3457)
!3517 = !DILocalVariable(name: "all_errors", scope: !3518, file: !426, line: 899, type: !142)
!3518 = distinct !DILexicalBlock(scope: !3514, file: !426, line: 897, column: 5)
!3519 = !DILocation(line: 899, column: 12, scope: !3518)
!3520 = !DILocation(line: 899, column: 26, scope: !3518)
!3521 = !DILocation(line: 899, column: 29, scope: !3518)
!3522 = !DILocation(line: 899, column: 48, scope: !3518)
!3523 = !DILocation(line: 899, column: 51, scope: !3518)
!3524 = !DILocation(line: 899, column: 54, scope: !3518)
!3525 = !DILocalVariable(name: "some_errors", scope: !3518, file: !426, line: 900, type: !142)
!3526 = !DILocation(line: 900, column: 12, scope: !3518)
!3527 = !DILocation(line: 900, column: 27, scope: !3518)
!3528 = !DILocation(line: 900, column: 38, scope: !3518)
!3529 = !DILocation(line: 900, column: 42, scope: !3518)
!3530 = !DILocation(line: 900, column: 45, scope: !3518)
!3531 = !DILocation(line: 900, column: 41, scope: !3518)
!3532 = !DILocation(line: 0, scope: !3518)
!3533 = !DILocalVariable(name: "con", scope: !3518, file: !426, line: 901, type: !9)
!3534 = !DILocation(line: 901, column: 13, scope: !3518)
!3535 = !DILocation(line: 903, column: 29, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3518, file: !426, line: 903, column: 11)
!3537 = !DILocation(line: 903, column: 16, scope: !3536)
!3538 = !DILocation(line: 903, column: 13, scope: !3536)
!3539 = !DILocation(line: 903, column: 11, scope: !3518)
!3540 = !DILocation(line: 905, column: 31, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !426, line: 905, column: 15)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !426, line: 904, column: 9)
!3543 = !DILocation(line: 905, column: 15, scope: !3541)
!3544 = !DILocation(line: 905, column: 36, scope: !3541)
!3545 = !DILocation(line: 905, column: 15, scope: !3542)
!3546 = !DILocation(line: 907, column: 19, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !426, line: 907, column: 19)
!3548 = distinct !DILexicalBlock(scope: !3541, file: !426, line: 906, column: 13)
!3549 = !DILocation(line: 907, column: 30, scope: !3547)
!3550 = !DILocation(line: 907, column: 34, scope: !3547)
!3551 = !DILocation(line: 907, column: 46, scope: !3547)
!3552 = !DILocation(line: 907, column: 69, scope: !3547)
!3553 = !DILocation(line: 907, column: 50, scope: !3547)
!3554 = !DILocation(line: 907, column: 19, scope: !3548)
!3555 = !DILocation(line: 908, column: 27, scope: !3547)
!3556 = !DILocation(line: 909, column: 24, scope: !3547)
!3557 = !DILocation(line: 910, column: 31, scope: !3547)
!3558 = !DILocation(line: 910, column: 24, scope: !3547)
!3559 = !DILocation(line: 908, column: 17, scope: !3547)
!3560 = !DILocation(line: 911, column: 19, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3548, file: !426, line: 911, column: 19)
!3562 = !DILocation(line: 911, column: 22, scope: !3561)
!3563 = !DILocation(line: 911, column: 19, scope: !3548)
!3564 = !DILocation(line: 913, column: 28, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !426, line: 912, column: 17)
!3566 = !DILocation(line: 913, column: 19, scope: !3565)
!3567 = !DILocation(line: 914, column: 19, scope: !3565)
!3568 = !DILocation(line: 916, column: 13, scope: !3548)
!3569 = !DILocation(line: 917, column: 20, scope: !3542)
!3570 = !DILocation(line: 917, column: 11, scope: !3542)
!3571 = !DILocation(line: 918, column: 9, scope: !3542)
!3572 = !DILocation(line: 921, column: 15, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !426, line: 921, column: 15)
!3574 = distinct !DILexicalBlock(scope: !3536, file: !426, line: 920, column: 9)
!3575 = !DILocation(line: 921, column: 26, scope: !3573)
!3576 = !DILocation(line: 921, column: 30, scope: !3573)
!3577 = !DILocation(line: 921, column: 42, scope: !3573)
!3578 = !DILocation(line: 921, column: 65, scope: !3573)
!3579 = !DILocation(line: 921, column: 46, scope: !3573)
!3580 = !DILocation(line: 921, column: 15, scope: !3574)
!3581 = !DILocation(line: 923, column: 25, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3573, file: !426, line: 922, column: 13)
!3583 = !DILocation(line: 924, column: 22, scope: !3582)
!3584 = !DILocation(line: 925, column: 22, scope: !3582)
!3585 = !DILocation(line: 923, column: 15, scope: !3582)
!3586 = !DILocation(line: 926, column: 13, scope: !3582)
!3587 = !DILocation(line: 927, column: 15, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3574, file: !426, line: 927, column: 15)
!3589 = !DILocation(line: 927, column: 18, scope: !3588)
!3590 = !DILocation(line: 927, column: 15, scope: !3574)
!3591 = !DILocation(line: 928, column: 13, scope: !3588)
!3592 = !DILocation(line: 930, column: 5, scope: !3518)
!3593 = !DILocation(line: 931, column: 12, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3514, file: !426, line: 931, column: 12)
!3595 = !DILocation(line: 931, column: 15, scope: !3594)
!3596 = !DILocation(line: 931, column: 12, scope: !3514)
!3597 = !DILocation(line: 935, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !426, line: 935, column: 11)
!3599 = distinct !DILexicalBlock(scope: !3594, file: !426, line: 932, column: 5)
!3600 = !DILocation(line: 935, column: 19, scope: !3598)
!3601 = !DILocation(line: 935, column: 34, scope: !3598)
!3602 = !DILocation(line: 935, column: 44, scope: !3598)
!3603 = !DILocation(line: 935, column: 22, scope: !3598)
!3604 = !DILocation(line: 935, column: 50, scope: !3598)
!3605 = !DILocation(line: 936, column: 11, scope: !3598)
!3606 = !DILocation(line: 936, column: 35, scope: !3598)
!3607 = !DILocation(line: 936, column: 16, scope: !3598)
!3608 = !DILocation(line: 935, column: 11, scope: !3599)
!3609 = !DILocation(line: 938, column: 21, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3598, file: !426, line: 937, column: 9)
!3611 = !DILocation(line: 939, column: 18, scope: !3610)
!3612 = !DILocation(line: 940, column: 18, scope: !3610)
!3613 = !DILocation(line: 938, column: 11, scope: !3610)
!3614 = !DILocation(line: 941, column: 9, scope: !3610)
!3615 = !DILocation(line: 942, column: 5, scope: !3599)
!3616 = !DILocation(line: 944, column: 3, scope: !3457)
!3617 = !DILocation(line: 945, column: 1, scope: !3457)
!3618 = distinct !DISubprogram(name: "errno_unsupported", scope: !426, file: !426, line: 596, type: !2899, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3619 = !DILocalVariable(name: "err", arg: 1, scope: !3618, file: !426, line: 596, type: !7)
!3620 = !DILocation(line: 596, column: 24, scope: !3618)
!3621 = !DILocation(line: 598, column: 10, scope: !3618)
!3622 = !DILocation(line: 598, column: 14, scope: !3618)
!3623 = !DILocation(line: 598, column: 25, scope: !3618)
!3624 = !DILocation(line: 598, column: 28, scope: !3618)
!3625 = !DILocation(line: 598, column: 32, scope: !3618)
!3626 = !DILocation(line: 598, column: 3, scope: !3618)
!3627 = distinct !DISubprogram(name: "defaultcon", scope: !2888, file: !2888, line: 44, type: !2889, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3628 = !DILocalVariable(name: "path", arg: 1, scope: !3627, file: !2888, line: 44, type: !183)
!3629 = !DILocation(line: 44, column: 25, scope: !3627)
!3630 = !DILocalVariable(name: "mode", arg: 2, scope: !3627, file: !2888, line: 44, type: !139)
!3631 = !DILocation(line: 44, column: 38, scope: !3627)
!3632 = !DILocation(line: 45, column: 3, scope: !3627)
!3633 = !DILocation(line: 45, column: 9, scope: !3627)
!3634 = !DILocation(line: 45, column: 20, scope: !3627)
!3635 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !2888, file: !2888, line: 25, type: !2899, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3636 = !DILocalVariable(name: "err", arg: 1, scope: !3635, file: !2888, line: 25, type: !7)
!3637 = !DILocation(line: 25, column: 24, scope: !3635)
!3638 = !DILocation(line: 27, column: 10, scope: !3635)
!3639 = !DILocation(line: 27, column: 14, scope: !3635)
!3640 = !DILocation(line: 27, column: 25, scope: !3635)
!3641 = !DILocation(line: 27, column: 28, scope: !3635)
!3642 = !DILocation(line: 27, column: 32, scope: !3635)
!3643 = !DILocation(line: 27, column: 3, scope: !3635)
!3644 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !426, file: !426, line: 955, type: !3645, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!142, !183, !142, !142, !3460}
!3647 = !DILocalVariable(name: "dst_name", arg: 1, scope: !3644, file: !426, line: 955, type: !183)
!3648 = !DILocation(line: 955, column: 36, scope: !3644)
!3649 = !DILocalVariable(name: "process_local", arg: 2, scope: !3644, file: !426, line: 955, type: !142)
!3650 = !DILocation(line: 955, column: 51, scope: !3644)
!3651 = !DILocalVariable(name: "recurse", arg: 3, scope: !3644, file: !426, line: 956, type: !142)
!3652 = !DILocation(line: 956, column: 29, scope: !3644)
!3653 = !DILocalVariable(name: "x", arg: 4, scope: !3644, file: !426, line: 956, type: !3460)
!3654 = !DILocation(line: 956, column: 63, scope: !3644)
!3655 = !DILocalVariable(name: "all_errors", scope: !3644, file: !426, line: 958, type: !142)
!3656 = !DILocation(line: 958, column: 8, scope: !3644)
!3657 = !DILocation(line: 958, column: 23, scope: !3644)
!3658 = !DILocation(line: 958, column: 26, scope: !3644)
!3659 = !DILocation(line: 959, column: 22, scope: !3644)
!3660 = !DILocation(line: 959, column: 25, scope: !3644)
!3661 = !DILocation(line: 959, column: 28, scope: !3644)
!3662 = !DILocalVariable(name: "some_errors", scope: !3644, file: !426, line: 960, type: !142)
!3663 = !DILocation(line: 960, column: 8, scope: !3644)
!3664 = !DILocation(line: 960, column: 23, scope: !3644)
!3665 = !DILocation(line: 960, column: 34, scope: !3644)
!3666 = !DILocation(line: 960, column: 38, scope: !3644)
!3667 = !DILocation(line: 960, column: 41, scope: !3644)
!3668 = !DILocation(line: 960, column: 37, scope: !3644)
!3669 = !DILocation(line: 0, scope: !3644)
!3670 = !DILocation(line: 962, column: 21, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3644, file: !426, line: 962, column: 7)
!3672 = !DILocation(line: 962, column: 31, scope: !3671)
!3673 = !DILocation(line: 962, column: 40, scope: !3671)
!3674 = !DILocation(line: 962, column: 9, scope: !3671)
!3675 = !DILocation(line: 962, column: 7, scope: !3644)
!3676 = !DILocation(line: 964, column: 11, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !426, line: 964, column: 11)
!3678 = distinct !DILexicalBlock(scope: !3671, file: !426, line: 963, column: 5)
!3679 = !DILocation(line: 964, column: 22, scope: !3677)
!3680 = !DILocation(line: 964, column: 26, scope: !3677)
!3681 = !DILocation(line: 964, column: 38, scope: !3677)
!3682 = !DILocation(line: 964, column: 61, scope: !3677)
!3683 = !DILocation(line: 964, column: 42, scope: !3677)
!3684 = !DILocation(line: 964, column: 11, scope: !3678)
!3685 = !DILocation(line: 965, column: 19, scope: !3677)
!3686 = !DILocation(line: 965, column: 26, scope: !3677)
!3687 = !DILocation(line: 966, column: 16, scope: !3677)
!3688 = !DILocation(line: 965, column: 9, scope: !3677)
!3689 = !DILocation(line: 967, column: 7, scope: !3678)
!3690 = !DILocation(line: 970, column: 3, scope: !3644)
!3691 = !DILocation(line: 971, column: 1, scope: !3644)
!3692 = distinct !DISubprogram(name: "restorecon", scope: !2888, file: !2888, line: 40, type: !3393, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3693 = !DILocalVariable(name: "path", arg: 1, scope: !3692, file: !2888, line: 40, type: !183)
!3694 = !DILocation(line: 40, column: 25, scope: !3692)
!3695 = !DILocalVariable(name: "recurse", arg: 2, scope: !3692, file: !2888, line: 40, type: !142)
!3696 = !DILocation(line: 40, column: 36, scope: !3692)
!3697 = !DILocalVariable(name: "preserve", arg: 3, scope: !3692, file: !2888, line: 40, type: !142)
!3698 = !DILocation(line: 40, column: 50, scope: !3692)
!3699 = !DILocation(line: 41, column: 3, scope: !3692)
!3700 = !DILocation(line: 41, column: 9, scope: !3692)
!3701 = !DILocation(line: 41, column: 20, scope: !3692)
!3702 = distinct !DISubprogram(name: "dest_info_init", scope: !426, file: !426, line: 1703, type: !3703, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{null, !3705}
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3706 = !DILocalVariable(name: "x", arg: 1, scope: !3702, file: !426, line: 1703, type: !3705)
!3707 = !DILocation(line: 1703, column: 36, scope: !3702)
!3708 = !DILocation(line: 1706, column: 7, scope: !3702)
!3709 = !DILocation(line: 1705, column: 3, scope: !3702)
!3710 = !DILocation(line: 1705, column: 6, scope: !3702)
!3711 = !DILocation(line: 1706, column: 5, scope: !3702)
!3712 = !DILocation(line: 1711, column: 1, scope: !3702)
!3713 = distinct !DISubprogram(name: "src_info_init", scope: !426, file: !426, line: 1716, type: !3703, scopeLine: 1717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3714 = !DILocalVariable(name: "x", arg: 1, scope: !3713, file: !426, line: 1716, type: !3705)
!3715 = !DILocation(line: 1716, column: 35, scope: !3713)
!3716 = !DILocation(line: 1728, column: 7, scope: !3713)
!3717 = !DILocation(line: 1727, column: 3, scope: !3713)
!3718 = !DILocation(line: 1727, column: 6, scope: !3713)
!3719 = !DILocation(line: 1728, column: 5, scope: !3713)
!3720 = !DILocation(line: 1733, column: 1, scope: !3713)
!3721 = distinct !DISubprogram(name: "copy", scope: !426, file: !426, line: 2971, type: !3722, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!142, !183, !183, !142, !3460, !3724, !3724}
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!3725 = !DILocalVariable(name: "src_name", arg: 1, scope: !3721, file: !426, line: 2971, type: !183)
!3726 = !DILocation(line: 2971, column: 19, scope: !3721)
!3727 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3721, file: !426, line: 2971, type: !183)
!3728 = !DILocation(line: 2971, column: 41, scope: !3721)
!3729 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !3721, file: !426, line: 2972, type: !142)
!3730 = !DILocation(line: 2972, column: 12, scope: !3721)
!3731 = !DILocalVariable(name: "options", arg: 4, scope: !3721, file: !426, line: 2972, type: !3460)
!3732 = !DILocation(line: 2972, column: 54, scope: !3721)
!3733 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !3721, file: !426, line: 2973, type: !3724)
!3734 = !DILocation(line: 2973, column: 13, scope: !3721)
!3735 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !3721, file: !426, line: 2973, type: !3724)
!3736 = !DILocation(line: 2973, column: 35, scope: !3721)
!3737 = !DILocation(line: 2975, column: 3, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !426, line: 2975, column: 3)
!3739 = distinct !DILexicalBlock(scope: !3721, file: !426, line: 2975, column: 3)
!3740 = !DILocation(line: 2975, column: 3, scope: !3739)
!3741 = !DILocation(line: 2984, column: 24, scope: !3721)
!3742 = !DILocation(line: 2984, column: 22, scope: !3721)
!3743 = !DILocation(line: 2985, column: 24, scope: !3721)
!3744 = !DILocation(line: 2985, column: 22, scope: !3721)
!3745 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !3721, file: !426, line: 2987, type: !142)
!3746 = !DILocation(line: 2987, column: 8, scope: !3721)
!3747 = !DILocation(line: 2988, column: 25, scope: !3721)
!3748 = !DILocation(line: 2988, column: 35, scope: !3721)
!3749 = !DILocation(line: 2988, column: 45, scope: !3721)
!3750 = !DILocation(line: 2989, column: 25, scope: !3721)
!3751 = !DILocation(line: 2991, column: 25, scope: !3721)
!3752 = !DILocation(line: 2991, column: 41, scope: !3721)
!3753 = !DILocation(line: 2988, column: 10, scope: !3721)
!3754 = !DILocation(line: 2988, column: 3, scope: !3721)
!3755 = distinct !DISubprogram(name: "valid_options", scope: !426, file: !426, line: 2948, type: !3756, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!142, !3460}
!3758 = !DILocalVariable(name: "co", arg: 1, scope: !3755, file: !426, line: 2948, type: !3460)
!3759 = !DILocation(line: 2948, column: 41, scope: !3755)
!3760 = !DILocation(line: 2950, column: 3, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !426, line: 2950, column: 3)
!3762 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2950, column: 3)
!3763 = !DILocation(line: 2950, column: 3, scope: !3762)
!3764 = !DILocation(line: 2951, column: 3, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !426, line: 2951, column: 3)
!3766 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2951, column: 3)
!3767 = !DILocation(line: 2951, column: 3, scope: !3766)
!3768 = !DILocation(line: 2952, column: 3, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !426, line: 2952, column: 3)
!3770 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2952, column: 3)
!3771 = !DILocation(line: 2952, column: 3, scope: !3770)
!3772 = !DILocation(line: 2953, column: 3, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !426, line: 2953, column: 3)
!3774 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2953, column: 3)
!3775 = !DILocation(line: 2953, column: 3, scope: !3774)
!3776 = !DILocation(line: 2954, column: 3, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !426, line: 2954, column: 3)
!3778 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2954, column: 3)
!3779 = !DILocation(line: 2954, column: 3, scope: !3778)
!3780 = !DILocation(line: 2955, column: 3, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !426, line: 2955, column: 3)
!3782 = distinct !DILexicalBlock(scope: !3755, file: !426, line: 2955, column: 3)
!3783 = !DILocation(line: 2955, column: 3, scope: !3782)
!3784 = !DILocation(line: 2958, column: 3, scope: !3755)
!3785 = distinct !DISubprogram(name: "copy_internal", scope: !426, file: !426, line: 1846, type: !3786, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!142, !183, !183, !142, !511, !493, !3460, !142, !3724, !3724, !3724}
!3788 = !DILocalVariable(name: "src_name", arg: 1, scope: !3785, file: !426, line: 1846, type: !183)
!3789 = !DILocation(line: 1846, column: 28, scope: !3785)
!3790 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3785, file: !426, line: 1846, type: !183)
!3791 = !DILocation(line: 1846, column: 50, scope: !3785)
!3792 = !DILocalVariable(name: "new_dst", arg: 3, scope: !3785, file: !426, line: 1847, type: !142)
!3793 = !DILocation(line: 1847, column: 21, scope: !3785)
!3794 = !DILocalVariable(name: "parent", arg: 4, scope: !3785, file: !426, line: 1848, type: !511)
!3795 = !DILocation(line: 1848, column: 35, scope: !3785)
!3796 = !DILocalVariable(name: "ancestors", arg: 5, scope: !3785, file: !426, line: 1849, type: !493)
!3797 = !DILocation(line: 1849, column: 33, scope: !3785)
!3798 = !DILocalVariable(name: "x", arg: 6, scope: !3785, file: !426, line: 1850, type: !3460)
!3799 = !DILocation(line: 1850, column: 41, scope: !3785)
!3800 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !3785, file: !426, line: 1851, type: !142)
!3801 = !DILocation(line: 1851, column: 21, scope: !3785)
!3802 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !3785, file: !426, line: 1852, type: !3724)
!3803 = !DILocation(line: 1852, column: 22, scope: !3785)
!3804 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !3785, file: !426, line: 1853, type: !3724)
!3805 = !DILocation(line: 1853, column: 22, scope: !3785)
!3806 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !3785, file: !426, line: 1854, type: !3724)
!3807 = !DILocation(line: 1854, column: 22, scope: !3785)
!3808 = !DILocalVariable(name: "src_sb", scope: !3785, file: !426, line: 1856, type: !462)
!3809 = !DILocation(line: 1856, column: 15, scope: !3785)
!3810 = !DILocalVariable(name: "dst_sb", scope: !3785, file: !426, line: 1857, type: !462)
!3811 = !DILocation(line: 1857, column: 15, scope: !3785)
!3812 = !DILocalVariable(name: "src_mode", scope: !3785, file: !426, line: 1858, type: !139)
!3813 = !DILocation(line: 1858, column: 10, scope: !3785)
!3814 = !DILocalVariable(name: "dst_mode", scope: !3785, file: !426, line: 1859, type: !139)
!3815 = !DILocation(line: 1859, column: 10, scope: !3785)
!3816 = !DILocalVariable(name: "dst_mode_bits", scope: !3785, file: !426, line: 1860, type: !139)
!3817 = !DILocation(line: 1860, column: 10, scope: !3785)
!3818 = !DILocalVariable(name: "omitted_permissions", scope: !3785, file: !426, line: 1861, type: !139)
!3819 = !DILocation(line: 1861, column: 10, scope: !3785)
!3820 = !DILocalVariable(name: "restore_dst_mode", scope: !3785, file: !426, line: 1862, type: !142)
!3821 = !DILocation(line: 1862, column: 8, scope: !3785)
!3822 = !DILocalVariable(name: "earlier_file", scope: !3785, file: !426, line: 1863, type: !9)
!3823 = !DILocation(line: 1863, column: 9, scope: !3785)
!3824 = !DILocalVariable(name: "dst_backup", scope: !3785, file: !426, line: 1864, type: !9)
!3825 = !DILocation(line: 1864, column: 9, scope: !3785)
!3826 = !DILocalVariable(name: "delayed_ok", scope: !3785, file: !426, line: 1865, type: !142)
!3827 = !DILocation(line: 1865, column: 8, scope: !3785)
!3828 = !DILocalVariable(name: "copied_as_regular", scope: !3785, file: !426, line: 1866, type: !142)
!3829 = !DILocation(line: 1866, column: 8, scope: !3785)
!3830 = !DILocalVariable(name: "dest_is_symlink", scope: !3785, file: !426, line: 1867, type: !142)
!3831 = !DILocation(line: 1867, column: 8, scope: !3785)
!3832 = !DILocalVariable(name: "have_dst_lstat", scope: !3785, file: !426, line: 1868, type: !142)
!3833 = !DILocation(line: 1868, column: 8, scope: !3785)
!3834 = !DILocation(line: 1870, column: 4, scope: !3785)
!3835 = !DILocation(line: 1870, column: 19, scope: !3785)
!3836 = !DILocalVariable(name: "rename_errno", scope: !3785, file: !426, line: 1872, type: !7)
!3837 = !DILocation(line: 1872, column: 7, scope: !3785)
!3838 = !DILocation(line: 1872, column: 22, scope: !3785)
!3839 = !DILocation(line: 1872, column: 25, scope: !3785)
!3840 = !DILocation(line: 1873, column: 7, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 1873, column: 7)
!3842 = !DILocation(line: 1873, column: 10, scope: !3841)
!3843 = !DILocation(line: 1873, column: 7, scope: !3785)
!3844 = !DILocation(line: 1875, column: 11, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !426, line: 1875, column: 11)
!3846 = distinct !DILexicalBlock(scope: !3841, file: !426, line: 1874, column: 5)
!3847 = !DILocation(line: 1875, column: 24, scope: !3845)
!3848 = !DILocation(line: 1875, column: 11, scope: !3846)
!3849 = !DILocation(line: 1876, column: 46, scope: !3845)
!3850 = !DILocation(line: 1876, column: 66, scope: !3845)
!3851 = !DILocation(line: 1876, column: 25, scope: !3845)
!3852 = !DILocation(line: 1878, column: 27, scope: !3845)
!3853 = !DILocation(line: 1876, column: 22, scope: !3845)
!3854 = !DILocation(line: 1876, column: 9, scope: !3845)
!3855 = !DILocation(line: 1879, column: 17, scope: !3846)
!3856 = !DILocation(line: 1879, column: 30, scope: !3846)
!3857 = !DILocation(line: 1879, column: 15, scope: !3846)
!3858 = !DILocation(line: 1880, column: 11, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3846, file: !426, line: 1880, column: 11)
!3860 = !DILocation(line: 1880, column: 11, scope: !3846)
!3861 = !DILocation(line: 1881, column: 29, scope: !3859)
!3862 = !DILocation(line: 1881, column: 10, scope: !3859)
!3863 = !DILocation(line: 1881, column: 27, scope: !3859)
!3864 = !DILocation(line: 1881, column: 9, scope: !3859)
!3865 = !DILocation(line: 1882, column: 5, scope: !3846)
!3866 = !DILocation(line: 1884, column: 7, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 1884, column: 7)
!3868 = !DILocation(line: 1884, column: 20, scope: !3867)
!3869 = !DILocation(line: 1884, column: 7, scope: !3785)
!3870 = !DILocation(line: 1885, column: 10, scope: !3867)
!3871 = !DILocation(line: 1885, column: 13, scope: !3867)
!3872 = !DILocation(line: 1886, column: 9, scope: !3867)
!3873 = !DILocation(line: 1886, column: 22, scope: !3867)
!3874 = !DILocation(line: 1886, column: 32, scope: !3867)
!3875 = !DILocation(line: 1886, column: 35, scope: !3867)
!3876 = !DILocation(line: 1886, column: 38, scope: !3867)
!3877 = !DILocation(line: 1886, column: 50, scope: !3867)
!3878 = !DILocalVariable(name: "name", scope: !3879, file: !426, line: 1888, type: !183)
!3879 = distinct !DILexicalBlock(scope: !3867, file: !426, line: 1887, column: 5)
!3880 = !DILocation(line: 1888, column: 19, scope: !3879)
!3881 = !DILocation(line: 1888, column: 26, scope: !3879)
!3882 = !DILocation(line: 1888, column: 39, scope: !3879)
!3883 = !DILocation(line: 1888, column: 46, scope: !3879)
!3884 = !DILocation(line: 1888, column: 57, scope: !3879)
!3885 = !DILocation(line: 1889, column: 11, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3879, file: !426, line: 1889, column: 11)
!3887 = !DILocation(line: 1889, column: 36, scope: !3886)
!3888 = !DILocation(line: 1889, column: 11, scope: !3879)
!3889 = !DILocation(line: 1891, column: 21, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !426, line: 1890, column: 9)
!3891 = !DILocation(line: 1891, column: 28, scope: !3890)
!3892 = !DILocation(line: 1891, column: 49, scope: !3890)
!3893 = !DILocation(line: 1891, column: 11, scope: !3890)
!3894 = !DILocation(line: 1892, column: 11, scope: !3890)
!3895 = !DILocation(line: 1895, column: 25, scope: !3879)
!3896 = !DILocation(line: 1895, column: 16, scope: !3879)
!3897 = !DILocation(line: 1897, column: 11, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3879, file: !426, line: 1897, column: 11)
!3899 = !DILocation(line: 1897, column: 30, scope: !3898)
!3900 = !DILocation(line: 1897, column: 34, scope: !3898)
!3901 = !DILocation(line: 1897, column: 37, scope: !3898)
!3902 = !DILocation(line: 1897, column: 11, scope: !3879)
!3903 = !DILocation(line: 1899, column: 26, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3898, file: !426, line: 1898, column: 9)
!3905 = !DILocation(line: 1899, column: 29, scope: !3904)
!3906 = !DILocation(line: 1899, column: 24, scope: !3904)
!3907 = !DILocation(line: 1900, column: 20, scope: !3904)
!3908 = !DILocation(line: 1901, column: 20, scope: !3904)
!3909 = !DILocation(line: 1902, column: 18, scope: !3904)
!3910 = !DILocation(line: 1899, column: 11, scope: !3904)
!3911 = !DILocation(line: 1903, column: 11, scope: !3904)
!3912 = !DILocation(line: 1905, column: 5, scope: !3879)
!3913 = !DILocation(line: 1918, column: 7, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 1918, column: 7)
!3915 = !DILocation(line: 1918, column: 24, scope: !3914)
!3916 = !DILocation(line: 1918, column: 27, scope: !3914)
!3917 = !DILocation(line: 1918, column: 30, scope: !3914)
!3918 = !DILocation(line: 1918, column: 7, scope: !3785)
!3919 = !DILocation(line: 1920, column: 14, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !426, line: 1920, column: 12)
!3921 = distinct !DILexicalBlock(scope: !3914, file: !426, line: 1919, column: 5)
!3922 = !DILocation(line: 1921, column: 12, scope: !3920)
!3923 = !DILocation(line: 1921, column: 15, scope: !3920)
!3924 = !DILocation(line: 1921, column: 18, scope: !3920)
!3925 = !DILocation(line: 1921, column: 30, scope: !3920)
!3926 = !DILocation(line: 1922, column: 12, scope: !3920)
!3927 = !DILocation(line: 1922, column: 26, scope: !3920)
!3928 = !DILocation(line: 1922, column: 29, scope: !3920)
!3929 = !DILocation(line: 1922, column: 39, scope: !3920)
!3930 = !DILocation(line: 1922, column: 15, scope: !3920)
!3931 = !DILocation(line: 1920, column: 12, scope: !3921)
!3932 = !DILocation(line: 1924, column: 24, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3920, file: !426, line: 1923, column: 9)
!3934 = !DILocation(line: 1925, column: 18, scope: !3933)
!3935 = !DILocation(line: 1924, column: 11, scope: !3933)
!3936 = !DILocation(line: 1926, column: 11, scope: !3933)
!3937 = !DILocation(line: 1929, column: 20, scope: !3921)
!3938 = !DILocation(line: 1929, column: 23, scope: !3921)
!3939 = !DILocation(line: 1929, column: 33, scope: !3921)
!3940 = !DILocation(line: 1929, column: 7, scope: !3921)
!3941 = !DILocation(line: 1930, column: 5, scope: !3921)
!3942 = !DILocalVariable(name: "dereference", scope: !3785, file: !426, line: 1932, type: !142)
!3943 = !DILocation(line: 1932, column: 8, scope: !3785)
!3944 = !DILocation(line: 1932, column: 42, scope: !3785)
!3945 = !DILocation(line: 1932, column: 45, scope: !3785)
!3946 = !DILocation(line: 1932, column: 22, scope: !3785)
!3947 = !DILocation(line: 1934, column: 8, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 1934, column: 7)
!3949 = !DILocation(line: 1934, column: 7, scope: !3785)
!3950 = !DILocation(line: 1936, column: 14, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !426, line: 1936, column: 11)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !426, line: 1935, column: 5)
!3953 = !DILocation(line: 1936, column: 27, scope: !3951)
!3954 = !DILocation(line: 1936, column: 37, scope: !3951)
!3955 = !DILocation(line: 1936, column: 40, scope: !3951)
!3956 = !DILocation(line: 1936, column: 43, scope: !3951)
!3957 = !DILocation(line: 1936, column: 55, scope: !3951)
!3958 = !DILocation(line: 1936, column: 11, scope: !3952)
!3959 = !DILocalVariable(name: "use_lstat", scope: !3960, file: !426, line: 1944, type: !142)
!3960 = distinct !DILexicalBlock(scope: !3951, file: !426, line: 1937, column: 9)
!3961 = !DILocation(line: 1944, column: 16, scope: !3960)
!3962 = !DILocation(line: 1945, column: 19, scope: !3960)
!3963 = !DILocation(line: 1946, column: 17, scope: !3960)
!3964 = !DILocation(line: 1946, column: 23, scope: !3960)
!3965 = !DILocation(line: 1946, column: 26, scope: !3960)
!3966 = !DILocation(line: 1947, column: 21, scope: !3960)
!3967 = !DILocation(line: 1947, column: 24, scope: !3960)
!3968 = !DILocation(line: 1947, column: 43, scope: !3960)
!3969 = !DILocation(line: 1947, column: 46, scope: !3960)
!3970 = !DILocation(line: 1948, column: 16, scope: !3960)
!3971 = !DILocation(line: 1948, column: 19, scope: !3960)
!3972 = !DILocation(line: 1948, column: 22, scope: !3960)
!3973 = !DILocation(line: 1948, column: 32, scope: !3960)
!3974 = !DILocation(line: 1948, column: 35, scope: !3960)
!3975 = !DILocation(line: 1948, column: 38, scope: !3960)
!3976 = !DILocation(line: 1948, column: 52, scope: !3960)
!3977 = !DILocation(line: 1948, column: 55, scope: !3960)
!3978 = !DILocation(line: 1948, column: 58, scope: !3960)
!3979 = !DILocation(line: 1949, column: 16, scope: !3960)
!3980 = !DILocation(line: 1949, column: 19, scope: !3960)
!3981 = !DILocation(line: 1949, column: 22, scope: !3960)
!3982 = !DILocation(line: 1949, column: 34, scope: !3960)
!3983 = !DILocation(line: 1950, column: 16, scope: !3960)
!3984 = !DILocation(line: 1950, column: 19, scope: !3960)
!3985 = !DILocation(line: 1950, column: 22, scope: !3960)
!3986 = !DILocalVariable(name: "fstatat_flags", scope: !3960, file: !426, line: 1951, type: !7)
!3987 = !DILocation(line: 1951, column: 15, scope: !3960)
!3988 = !DILocation(line: 1951, column: 31, scope: !3960)
!3989 = !DILocation(line: 1952, column: 34, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3960, file: !426, line: 1952, column: 15)
!3991 = !DILocation(line: 1952, column: 53, scope: !3990)
!3992 = !DILocation(line: 1952, column: 15, scope: !3990)
!3993 = !DILocation(line: 1952, column: 68, scope: !3990)
!3994 = !DILocation(line: 1952, column: 15, scope: !3960)
!3995 = !DILocation(line: 1954, column: 32, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3990, file: !426, line: 1953, column: 13)
!3997 = !DILocation(line: 1954, column: 30, scope: !3996)
!3998 = !DILocation(line: 1955, column: 28, scope: !3996)
!3999 = !DILocation(line: 1956, column: 13, scope: !3996)
!4000 = !DILocation(line: 1959, column: 19, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !426, line: 1959, column: 19)
!4002 = distinct !DILexicalBlock(scope: !3990, file: !426, line: 1958, column: 13)
!4003 = !DILocation(line: 1959, column: 25, scope: !4001)
!4004 = !DILocation(line: 1959, column: 34, scope: !4001)
!4005 = !DILocation(line: 1959, column: 37, scope: !4001)
!4006 = !DILocation(line: 1959, column: 40, scope: !4001)
!4007 = !DILocation(line: 1959, column: 19, scope: !4002)
!4008 = !DILocation(line: 1961, column: 24, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4001, file: !426, line: 1961, column: 24)
!4010 = !DILocation(line: 1961, column: 30, scope: !4009)
!4011 = !DILocation(line: 1961, column: 24, scope: !4001)
!4012 = !DILocation(line: 1963, column: 29, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4009, file: !426, line: 1962, column: 17)
!4014 = !DILocation(line: 1963, column: 36, scope: !4013)
!4015 = !DILocation(line: 1963, column: 57, scope: !4013)
!4016 = !DILocation(line: 1963, column: 19, scope: !4013)
!4017 = !DILocation(line: 1964, column: 19, scope: !4013)
!4018 = !DILocation(line: 1967, column: 25, scope: !4009)
!4019 = !DILocation(line: 1969, column: 9, scope: !3960)
!4020 = !DILocation(line: 1971, column: 11, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3952, file: !426, line: 1971, column: 11)
!4022 = !DILocation(line: 1971, column: 24, scope: !4021)
!4023 = !DILocation(line: 1971, column: 11, scope: !3952)
!4024 = !DILocalVariable(name: "return_now", scope: !4025, file: !426, line: 1973, type: !142)
!4025 = distinct !DILexicalBlock(scope: !4021, file: !426, line: 1972, column: 9)
!4026 = !DILocation(line: 1973, column: 16, scope: !4025)
!4027 = !DILocation(line: 1975, column: 15, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 1975, column: 15)
!4029 = !DILocation(line: 1975, column: 18, scope: !4028)
!4030 = !DILocation(line: 1975, column: 30, scope: !4028)
!4031 = !DILocation(line: 1976, column: 15, scope: !4028)
!4032 = !DILocation(line: 1976, column: 34, scope: !4028)
!4033 = !DILocation(line: 1976, column: 53, scope: !4028)
!4034 = !DILocation(line: 1977, column: 34, scope: !4028)
!4035 = !DILocation(line: 1976, column: 20, scope: !4028)
!4036 = !DILocation(line: 1975, column: 15, scope: !4025)
!4037 = !DILocation(line: 1979, column: 28, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4028, file: !426, line: 1978, column: 13)
!4039 = !DILocation(line: 1980, column: 22, scope: !4038)
!4040 = !DILocation(line: 1980, column: 47, scope: !4038)
!4041 = !DILocation(line: 1979, column: 15, scope: !4038)
!4042 = !DILocation(line: 1981, column: 15, scope: !4038)
!4043 = !DILocation(line: 1984, column: 15, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 1984, column: 15)
!4045 = !DILocation(line: 1984, column: 18, scope: !4044)
!4046 = !DILocation(line: 1984, column: 25, scope: !4044)
!4047 = !DILocation(line: 1984, column: 29, scope: !4044)
!4048 = !DILocation(line: 1984, column: 15, scope: !4025)
!4049 = !DILocalVariable(name: "options", scope: !4050, file: !426, line: 1990, type: !7)
!4050 = distinct !DILexicalBlock(scope: !4044, file: !426, line: 1985, column: 13)
!4051 = !DILocation(line: 1990, column: 19, scope: !4050)
!4052 = !DILocation(line: 1990, column: 31, scope: !4050)
!4053 = !DILocation(line: 1990, column: 34, scope: !4050)
!4054 = !DILocation(line: 1991, column: 31, scope: !4050)
!4055 = !DILocation(line: 1991, column: 37, scope: !4050)
!4056 = !DILocation(line: 1991, column: 40, scope: !4050)
!4057 = !DILocation(line: 1992, column: 37, scope: !4050)
!4058 = !DILocation(line: 1992, column: 47, scope: !4050)
!4059 = !DILocation(line: 1992, column: 64, scope: !4050)
!4060 = !DILocation(line: 1992, column: 54, scope: !4050)
!4061 = !DILocation(line: 0, scope: !4050)
!4062 = !DILocation(line: 1991, column: 34, scope: !4050)
!4063 = !DILocation(line: 1990, column: 30, scope: !4050)
!4064 = !DILocation(line: 1996, column: 34, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4050, file: !426, line: 1996, column: 19)
!4066 = !DILocation(line: 1996, column: 62, scope: !4065)
!4067 = !DILocation(line: 1996, column: 24, scope: !4065)
!4068 = !DILocation(line: 1996, column: 21, scope: !4065)
!4069 = !DILocation(line: 1996, column: 19, scope: !4050)
!4070 = !DILocation(line: 2002, column: 23, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !426, line: 2002, column: 23)
!4072 = distinct !DILexicalBlock(scope: !4065, file: !426, line: 1997, column: 17)
!4073 = !DILocation(line: 2002, column: 23, scope: !4072)
!4074 = !DILocation(line: 2003, column: 22, scope: !4071)
!4075 = !DILocation(line: 2003, column: 39, scope: !4071)
!4076 = !DILocation(line: 2003, column: 21, scope: !4071)
!4077 = !DILocation(line: 2010, column: 51, scope: !4072)
!4078 = !DILocation(line: 2010, column: 68, scope: !4072)
!4079 = !DILocation(line: 2011, column: 58, scope: !4072)
!4080 = !DILocation(line: 2010, column: 34, scope: !4072)
!4081 = !DILocation(line: 2010, column: 32, scope: !4072)
!4082 = !DILocation(line: 2012, column: 23, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4072, file: !426, line: 2012, column: 23)
!4084 = !DILocation(line: 2012, column: 23, scope: !4072)
!4085 = !DILocation(line: 2016, column: 47, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !426, line: 2016, column: 27)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !426, line: 2013, column: 21)
!4088 = !DILocation(line: 2016, column: 61, scope: !4086)
!4089 = !DILocation(line: 2017, column: 47, scope: !4086)
!4090 = !DILocation(line: 2017, column: 50, scope: !4086)
!4091 = !DILocation(line: 2017, column: 59, scope: !4086)
!4092 = !DILocation(line: 2016, column: 29, scope: !4086)
!4093 = !DILocation(line: 2016, column: 27, scope: !4087)
!4094 = !DILocation(line: 2019, column: 27, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4086, file: !426, line: 2018, column: 25)
!4096 = !DILocation(line: 2021, column: 21, scope: !4087)
!4097 = !DILocation(line: 2023, column: 19, scope: !4072)
!4098 = !DILocation(line: 2025, column: 13, scope: !4050)
!4099 = !DILocation(line: 2034, column: 15, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2034, column: 15)
!4101 = !DILocation(line: 2034, column: 18, scope: !4100)
!4102 = !DILocation(line: 2034, column: 15, scope: !4025)
!4103 = !DILocation(line: 2036, column: 33, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !426, line: 2036, column: 19)
!4105 = distinct !DILexicalBlock(scope: !4100, file: !426, line: 2035, column: 13)
!4106 = !DILocation(line: 2036, column: 36, scope: !4104)
!4107 = !DILocation(line: 2036, column: 19, scope: !4104)
!4108 = !DILocation(line: 2036, column: 19, scope: !4105)
!4109 = !DILocation(line: 2040, column: 23, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !426, line: 2040, column: 23)
!4111 = distinct !DILexicalBlock(scope: !4104, file: !426, line: 2037, column: 17)
!4112 = !DILocation(line: 2040, column: 23, scope: !4111)
!4113 = !DILocation(line: 2041, column: 22, scope: !4110)
!4114 = !DILocation(line: 2041, column: 39, scope: !4110)
!4115 = !DILocation(line: 2041, column: 21, scope: !4110)
!4116 = !DILocation(line: 2042, column: 19, scope: !4111)
!4117 = !DILocation(line: 2044, column: 13, scope: !4105)
!4118 = !DILocation(line: 2047, column: 21, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !426, line: 2047, column: 19)
!4120 = distinct !DILexicalBlock(scope: !4100, file: !426, line: 2046, column: 13)
!4121 = !DILocation(line: 2048, column: 19, scope: !4119)
!4122 = !DILocation(line: 2048, column: 23, scope: !4119)
!4123 = !DILocation(line: 2048, column: 26, scope: !4119)
!4124 = !DILocation(line: 2048, column: 38, scope: !4119)
!4125 = !DILocation(line: 2049, column: 23, scope: !4119)
!4126 = !DILocation(line: 2049, column: 27, scope: !4119)
!4127 = !DILocation(line: 2049, column: 30, scope: !4119)
!4128 = !DILocation(line: 2049, column: 42, scope: !4119)
!4129 = !DILocation(line: 2050, column: 27, scope: !4119)
!4130 = !DILocation(line: 2050, column: 46, scope: !4119)
!4131 = !DILocation(line: 2050, column: 49, scope: !4119)
!4132 = !DILocation(line: 2050, column: 32, scope: !4119)
!4133 = !DILocation(line: 2047, column: 19, scope: !4120)
!4134 = !DILocation(line: 2051, column: 17, scope: !4119)
!4135 = !DILocation(line: 2054, column: 15, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2054, column: 15)
!4137 = !DILocation(line: 2054, column: 15, scope: !4025)
!4138 = !DILocation(line: 2055, column: 13, scope: !4136)
!4139 = !DILocation(line: 2057, column: 16, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2057, column: 15)
!4141 = !DILocation(line: 2057, column: 15, scope: !4025)
!4142 = !DILocation(line: 2059, column: 19, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !426, line: 2059, column: 19)
!4144 = distinct !DILexicalBlock(scope: !4140, file: !426, line: 2058, column: 13)
!4145 = !DILocation(line: 2059, column: 19, scope: !4144)
!4146 = !DILocation(line: 2061, column: 23, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !426, line: 2061, column: 23)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !426, line: 2060, column: 17)
!4149 = !DILocation(line: 2061, column: 26, scope: !4147)
!4150 = !DILocation(line: 2061, column: 36, scope: !4147)
!4151 = !DILocation(line: 2061, column: 39, scope: !4147)
!4152 = !DILocation(line: 2061, column: 42, scope: !4147)
!4153 = !DILocation(line: 2061, column: 54, scope: !4147)
!4154 = !DILocation(line: 2061, column: 23, scope: !4148)
!4155 = !DILocation(line: 2065, column: 21, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4147, file: !426, line: 2062, column: 21)
!4157 = !DILocation(line: 2069, column: 24, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4147, file: !426, line: 2067, column: 21)
!4159 = !DILocation(line: 2070, column: 30, scope: !4158)
!4160 = !DILocation(line: 2070, column: 55, scope: !4158)
!4161 = !DILocation(line: 2068, column: 23, scope: !4158)
!4162 = !DILocation(line: 2071, column: 23, scope: !4158)
!4163 = !DILocation(line: 2073, column: 17, scope: !4148)
!4164 = !DILocation(line: 2082, column: 19, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4144, file: !426, line: 2082, column: 19)
!4166 = !DILocation(line: 2083, column: 19, scope: !4165)
!4167 = !DILocation(line: 2083, column: 22, scope: !4165)
!4168 = !DILocation(line: 2083, column: 25, scope: !4165)
!4169 = !DILocation(line: 2083, column: 37, scope: !4165)
!4170 = !DILocation(line: 2084, column: 19, scope: !4165)
!4171 = !DILocation(line: 2084, column: 33, scope: !4165)
!4172 = !DILocation(line: 2084, column: 36, scope: !4165)
!4173 = !DILocation(line: 2084, column: 47, scope: !4165)
!4174 = !DILocation(line: 2084, column: 22, scope: !4165)
!4175 = !DILocation(line: 2082, column: 19, scope: !4144)
!4176 = !DILocation(line: 2087, column: 26, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4165, file: !426, line: 2085, column: 17)
!4178 = !DILocation(line: 2088, column: 26, scope: !4177)
!4179 = !DILocation(line: 2088, column: 51, scope: !4177)
!4180 = !DILocation(line: 2086, column: 19, scope: !4177)
!4181 = !DILocation(line: 2089, column: 19, scope: !4177)
!4182 = !DILocation(line: 2091, column: 13, scope: !4144)
!4183 = !DILocation(line: 2093, column: 16, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2093, column: 15)
!4185 = !DILocation(line: 2093, column: 15, scope: !4025)
!4186 = !DILocation(line: 2095, column: 19, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !426, line: 2095, column: 19)
!4188 = distinct !DILexicalBlock(scope: !4184, file: !426, line: 2094, column: 13)
!4189 = !DILocation(line: 2095, column: 19, scope: !4188)
!4190 = !DILocation(line: 2097, column: 23, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !426, line: 2097, column: 23)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !426, line: 2096, column: 17)
!4193 = !DILocation(line: 2097, column: 26, scope: !4191)
!4194 = !DILocation(line: 2097, column: 36, scope: !4191)
!4195 = !DILocation(line: 2097, column: 39, scope: !4191)
!4196 = !DILocation(line: 2097, column: 42, scope: !4191)
!4197 = !DILocation(line: 2097, column: 54, scope: !4191)
!4198 = !DILocation(line: 2097, column: 23, scope: !4192)
!4199 = !DILocation(line: 2101, column: 21, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4191, file: !426, line: 2098, column: 21)
!4201 = !DILocation(line: 2105, column: 26, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4191, file: !426, line: 2103, column: 21)
!4203 = !DILocation(line: 2106, column: 30, scope: !4202)
!4204 = !DILocation(line: 2104, column: 23, scope: !4202)
!4205 = !DILocation(line: 2107, column: 23, scope: !4202)
!4206 = !DILocation(line: 2109, column: 17, scope: !4192)
!4207 = !DILocation(line: 2110, column: 13, scope: !4188)
!4208 = !DILocation(line: 2112, column: 15, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2112, column: 15)
!4210 = !DILocation(line: 2112, column: 18, scope: !4209)
!4211 = !DILocation(line: 2112, column: 15, scope: !4025)
!4212 = !DILocation(line: 2115, column: 19, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !426, line: 2115, column: 19)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !426, line: 2113, column: 13)
!4215 = !DILocation(line: 2115, column: 44, scope: !4213)
!4216 = !DILocation(line: 2115, column: 48, scope: !4213)
!4217 = !DILocation(line: 2116, column: 19, scope: !4213)
!4218 = !DILocation(line: 2116, column: 22, scope: !4213)
!4219 = !DILocation(line: 2116, column: 25, scope: !4213)
!4220 = !DILocation(line: 2116, column: 37, scope: !4213)
!4221 = !DILocation(line: 2115, column: 19, scope: !4214)
!4222 = !DILocation(line: 2119, column: 24, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4213, file: !426, line: 2117, column: 17)
!4224 = !DILocation(line: 2120, column: 26, scope: !4223)
!4225 = !DILocation(line: 2120, column: 50, scope: !4223)
!4226 = !DILocation(line: 2118, column: 19, scope: !4223)
!4227 = !DILocation(line: 2121, column: 19, scope: !4223)
!4228 = !DILocation(line: 2123, column: 13, scope: !4214)
!4229 = !DILocalVariable(name: "srcbase", scope: !4025, file: !426, line: 2125, type: !183)
!4230 = !DILocation(line: 2125, column: 23, scope: !4025)
!4231 = !DILocation(line: 2126, column: 15, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4025, file: !426, line: 2126, column: 15)
!4233 = !DILocation(line: 2126, column: 18, scope: !4232)
!4234 = !DILocation(line: 2126, column: 30, scope: !4232)
!4235 = !DILocation(line: 2129, column: 15, scope: !4232)
!4236 = !DILocation(line: 2129, column: 61, scope: !4232)
!4237 = !DILocation(line: 2129, column: 45, scope: !4232)
!4238 = !DILocation(line: 2129, column: 43, scope: !4232)
!4239 = !DILocation(line: 2129, column: 20, scope: !4232)
!4240 = !DILocation(line: 2135, column: 15, scope: !4232)
!4241 = !DILocation(line: 2135, column: 19, scope: !4232)
!4242 = !DILocation(line: 2135, column: 22, scope: !4232)
!4243 = !DILocation(line: 2135, column: 32, scope: !4232)
!4244 = !DILocation(line: 2135, column: 37, scope: !4232)
!4245 = !DILocation(line: 2126, column: 15, scope: !4025)
!4246 = !DILocation(line: 2141, column: 19, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !426, line: 2141, column: 19)
!4248 = distinct !DILexicalBlock(scope: !4232, file: !426, line: 2136, column: 13)
!4249 = !DILocation(line: 2141, column: 22, scope: !4247)
!4250 = !DILocation(line: 2141, column: 34, scope: !4247)
!4251 = !DILocation(line: 2142, column: 19, scope: !4247)
!4252 = !DILocation(line: 2142, column: 44, scope: !4247)
!4253 = !DILocation(line: 2142, column: 62, scope: !4247)
!4254 = !DILocation(line: 2142, column: 22, scope: !4247)
!4255 = !DILocation(line: 2141, column: 19, scope: !4248)
!4256 = !DILocalVariable(name: "fmt", scope: !4257, file: !426, line: 2144, type: !183)
!4257 = distinct !DILexicalBlock(scope: !4247, file: !426, line: 2143, column: 17)
!4258 = !DILocation(line: 2144, column: 31, scope: !4257)
!4259 = !DILocation(line: 2145, column: 26, scope: !4257)
!4260 = !DILocation(line: 2145, column: 29, scope: !4257)
!4261 = !DILocation(line: 2146, column: 20, scope: !4257)
!4262 = !DILocation(line: 2147, column: 20, scope: !4257)
!4263 = !DILocation(line: 2145, column: 23, scope: !4257)
!4264 = !DILocation(line: 2148, column: 32, scope: !4257)
!4265 = !DILocation(line: 2149, column: 26, scope: !4257)
!4266 = !DILocation(line: 2150, column: 26, scope: !4257)
!4267 = !DILocation(line: 2148, column: 19, scope: !4257)
!4268 = !DILocation(line: 2151, column: 19, scope: !4257)
!4269 = !DILocalVariable(name: "tmp_backup", scope: !4248, file: !426, line: 2154, type: !9)
!4270 = !DILocation(line: 2154, column: 21, scope: !4248)
!4271 = !DILocation(line: 2154, column: 64, scope: !4248)
!4272 = !DILocation(line: 2155, column: 54, scope: !4248)
!4273 = !DILocation(line: 2155, column: 57, scope: !4248)
!4274 = !DILocation(line: 2154, column: 34, scope: !4248)
!4275 = !DILocation(line: 2162, column: 19, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4248, file: !426, line: 2162, column: 19)
!4277 = !DILocation(line: 2162, column: 19, scope: !4248)
!4278 = !DILocation(line: 2164, column: 19, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4276, file: !426, line: 2163, column: 17)
!4280 = !DILocalVariable(name: "__old", scope: !4281, file: !426, line: 2164, type: !183)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !426, line: 2164, column: 19)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !426, line: 2164, column: 19)
!4283 = !DILocation(line: 2164, column: 19, scope: !4281)
!4284 = !DILocalVariable(name: "__len", scope: !4281, file: !426, line: 2164, type: !55)
!4285 = !DILocalVariable(name: "__new", scope: !4281, file: !426, line: 2164, type: !9)
!4286 = !DILocation(line: 2164, column: 19, scope: !4282)
!4287 = !DILocation(line: 2165, column: 25, scope: !4279)
!4288 = !DILocation(line: 2165, column: 19, scope: !4279)
!4289 = !DILocation(line: 2166, column: 17, scope: !4279)
!4290 = !DILocation(line: 2167, column: 24, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4276, file: !426, line: 2167, column: 24)
!4292 = !DILocation(line: 2167, column: 30, scope: !4291)
!4293 = !DILocation(line: 2167, column: 24, scope: !4276)
!4294 = !DILocation(line: 2169, column: 29, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !426, line: 2168, column: 17)
!4296 = !DILocation(line: 2169, column: 36, scope: !4295)
!4297 = !DILocation(line: 2169, column: 59, scope: !4295)
!4298 = !DILocation(line: 2169, column: 19, scope: !4295)
!4299 = !DILocation(line: 2170, column: 19, scope: !4295)
!4300 = !DILocation(line: 2172, column: 23, scope: !4248)
!4301 = !DILocation(line: 2173, column: 13, scope: !4248)
!4302 = !DILocation(line: 2174, column: 22, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4232, file: !426, line: 2174, column: 20)
!4304 = !DILocation(line: 2176, column: 20, scope: !4303)
!4305 = !DILocation(line: 2176, column: 25, scope: !4303)
!4306 = !DILocation(line: 2176, column: 28, scope: !4303)
!4307 = !DILocation(line: 2177, column: 20, scope: !4303)
!4308 = !DILocation(line: 2177, column: 24, scope: !4303)
!4309 = !DILocation(line: 2177, column: 27, scope: !4303)
!4310 = !DILocation(line: 2178, column: 24, scope: !4303)
!4311 = !DILocation(line: 2178, column: 28, scope: !4303)
!4312 = !DILocation(line: 2178, column: 31, scope: !4303)
!4313 = !DILocation(line: 2178, column: 46, scope: !4303)
!4314 = !DILocation(line: 2178, column: 60, scope: !4303)
!4315 = !DILocation(line: 2178, column: 51, scope: !4303)
!4316 = !DILocation(line: 2179, column: 24, scope: !4303)
!4317 = !DILocation(line: 2179, column: 28, scope: !4303)
!4318 = !DILocation(line: 2179, column: 31, scope: !4303)
!4319 = !DILocation(line: 2179, column: 43, scope: !4303)
!4320 = !DILocation(line: 2180, column: 28, scope: !4303)
!4321 = !DILocation(line: 2180, column: 33, scope: !4303)
!4322 = !DILocation(line: 2174, column: 20, scope: !4232)
!4323 = !DILocation(line: 2183, column: 27, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !426, line: 2183, column: 19)
!4325 = distinct !DILexicalBlock(scope: !4303, file: !426, line: 2182, column: 13)
!4326 = !DILocation(line: 2183, column: 19, scope: !4324)
!4327 = !DILocation(line: 2183, column: 37, scope: !4324)
!4328 = !DILocation(line: 2183, column: 42, scope: !4324)
!4329 = !DILocation(line: 2183, column: 45, scope: !4324)
!4330 = !DILocation(line: 2183, column: 51, scope: !4324)
!4331 = !DILocation(line: 2183, column: 19, scope: !4325)
!4332 = !DILocation(line: 2185, column: 29, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4324, file: !426, line: 2184, column: 17)
!4334 = !DILocation(line: 2185, column: 36, scope: !4333)
!4335 = !DILocation(line: 2185, column: 59, scope: !4333)
!4336 = !DILocation(line: 2185, column: 19, scope: !4333)
!4337 = !DILocation(line: 2186, column: 19, scope: !4333)
!4338 = !DILocation(line: 2188, column: 23, scope: !4325)
!4339 = !DILocation(line: 2189, column: 19, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4325, file: !426, line: 2189, column: 19)
!4341 = !DILocation(line: 2189, column: 22, scope: !4340)
!4342 = !DILocation(line: 2189, column: 19, scope: !4325)
!4343 = !DILocation(line: 2190, column: 25, scope: !4340)
!4344 = !DILocation(line: 2190, column: 44, scope: !4340)
!4345 = !DILocation(line: 2190, column: 17, scope: !4340)
!4346 = !DILocation(line: 2191, column: 13, scope: !4325)
!4347 = !DILocation(line: 2192, column: 9, scope: !4025)
!4348 = !DILocation(line: 2193, column: 5, scope: !3952)
!4349 = !DILocation(line: 2197, column: 7, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2197, column: 7)
!4351 = !DILocation(line: 2198, column: 7, scope: !4350)
!4352 = !DILocation(line: 2198, column: 10, scope: !4350)
!4353 = !DILocation(line: 2198, column: 13, scope: !4350)
!4354 = !DILocation(line: 2199, column: 7, scope: !4350)
!4355 = !DILocation(line: 2199, column: 12, scope: !4350)
!4356 = !DILocation(line: 2199, column: 15, scope: !4350)
!4357 = !DILocation(line: 2200, column: 7, scope: !4350)
!4358 = !DILocation(line: 2200, column: 10, scope: !4350)
!4359 = !DILocation(line: 2200, column: 13, scope: !4350)
!4360 = !DILocation(line: 2200, column: 25, scope: !4350)
!4361 = !DILocation(line: 2197, column: 7, scope: !3785)
!4362 = !DILocalVariable(name: "lstat_ok", scope: !4363, file: !426, line: 2202, type: !142)
!4363 = distinct !DILexicalBlock(scope: !4350, file: !426, line: 2201, column: 5)
!4364 = !DILocation(line: 2202, column: 12, scope: !4363)
!4365 = !DILocalVariable(name: "tmp_buf", scope: !4363, file: !426, line: 2203, type: !462)
!4366 = !DILocation(line: 2203, column: 19, scope: !4363)
!4367 = !DILocalVariable(name: "dst_lstat_sb", scope: !4363, file: !426, line: 2204, type: !461)
!4368 = !DILocation(line: 2204, column: 20, scope: !4363)
!4369 = !DILocation(line: 2208, column: 11, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4363, file: !426, line: 2208, column: 11)
!4371 = !DILocation(line: 2208, column: 11, scope: !4363)
!4372 = !DILocation(line: 2209, column: 22, scope: !4370)
!4373 = !DILocation(line: 2209, column: 9, scope: !4370)
!4374 = !DILocation(line: 2212, column: 22, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !426, line: 2212, column: 15)
!4376 = distinct !DILexicalBlock(scope: !4370, file: !426, line: 2211, column: 9)
!4377 = !DILocation(line: 2212, column: 15, scope: !4375)
!4378 = !DILocation(line: 2212, column: 42, scope: !4375)
!4379 = !DILocation(line: 2212, column: 15, scope: !4376)
!4380 = !DILocation(line: 2213, column: 26, scope: !4375)
!4381 = !DILocation(line: 2213, column: 13, scope: !4375)
!4382 = !DILocation(line: 2215, column: 22, scope: !4375)
!4383 = !DILocation(line: 2219, column: 11, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4363, file: !426, line: 2219, column: 11)
!4385 = !DILocation(line: 2220, column: 11, scope: !4384)
!4386 = !DILocation(line: 2220, column: 14, scope: !4384)
!4387 = !DILocation(line: 2221, column: 11, scope: !4384)
!4388 = !DILocation(line: 2221, column: 25, scope: !4384)
!4389 = !DILocation(line: 2221, column: 28, scope: !4384)
!4390 = !DILocation(line: 2221, column: 39, scope: !4384)
!4391 = !DILocation(line: 2221, column: 49, scope: !4384)
!4392 = !DILocation(line: 2221, column: 14, scope: !4384)
!4393 = !DILocation(line: 2219, column: 11, scope: !4363)
!4394 = !DILocation(line: 2224, column: 18, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4384, file: !426, line: 2222, column: 9)
!4396 = !DILocation(line: 2225, column: 18, scope: !4395)
!4397 = !DILocation(line: 2225, column: 43, scope: !4395)
!4398 = !DILocation(line: 2223, column: 11, scope: !4395)
!4399 = !DILocation(line: 2226, column: 11, scope: !4395)
!4400 = !DILocation(line: 2228, column: 5, scope: !4363)
!4401 = !DILocation(line: 2234, column: 7, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2234, column: 7)
!4403 = !DILocation(line: 2234, column: 10, scope: !4402)
!4404 = !DILocation(line: 2234, column: 18, scope: !4402)
!4405 = !DILocation(line: 2234, column: 22, scope: !4402)
!4406 = !DILocation(line: 2234, column: 25, scope: !4402)
!4407 = !DILocation(line: 2234, column: 35, scope: !4402)
!4408 = !DILocation(line: 2234, column: 39, scope: !4402)
!4409 = !DILocation(line: 2234, column: 7, scope: !3785)
!4410 = !DILocation(line: 2235, column: 19, scope: !4402)
!4411 = !DILocation(line: 2235, column: 29, scope: !4402)
!4412 = !DILocation(line: 2235, column: 39, scope: !4402)
!4413 = !DILocation(line: 2235, column: 5, scope: !4402)
!4414 = !DILocation(line: 2267, column: 7, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2267, column: 7)
!4416 = !DILocation(line: 2267, column: 20, scope: !4415)
!4417 = !DILocation(line: 2267, column: 7, scope: !3785)
!4418 = !DILocation(line: 2268, column: 18, scope: !4415)
!4419 = !DILocation(line: 2268, column: 5, scope: !4415)
!4420 = !DILocation(line: 2269, column: 12, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4415, file: !426, line: 2269, column: 12)
!4422 = !DILocation(line: 2269, column: 15, scope: !4421)
!4423 = !DILocation(line: 2269, column: 25, scope: !4421)
!4424 = !DILocation(line: 2269, column: 28, scope: !4421)
!4425 = !DILocation(line: 2269, column: 12, scope: !4415)
!4426 = !DILocation(line: 2271, column: 11, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !426, line: 2271, column: 11)
!4428 = distinct !DILexicalBlock(scope: !4421, file: !426, line: 2270, column: 5)
!4429 = !DILocation(line: 2271, column: 11, scope: !4428)
!4430 = !DILocation(line: 2272, column: 41, scope: !4427)
!4431 = !DILocation(line: 2272, column: 58, scope: !4427)
!4432 = !DILocation(line: 2272, column: 73, scope: !4427)
!4433 = !DILocation(line: 2272, column: 24, scope: !4427)
!4434 = !DILocation(line: 2272, column: 22, scope: !4427)
!4435 = !DILocation(line: 2272, column: 9, scope: !4427)
!4436 = !DILocation(line: 2274, column: 51, scope: !4427)
!4437 = !DILocation(line: 2274, column: 66, scope: !4427)
!4438 = !DILocation(line: 2274, column: 24, scope: !4427)
!4439 = !DILocation(line: 2274, column: 22, scope: !4427)
!4440 = !DILocation(line: 2275, column: 5, scope: !4428)
!4441 = !DILocation(line: 2276, column: 12, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4421, file: !426, line: 2276, column: 12)
!4443 = !DILocation(line: 2276, column: 15, scope: !4442)
!4444 = !DILocation(line: 2276, column: 25, scope: !4442)
!4445 = !DILocation(line: 2276, column: 35, scope: !4442)
!4446 = !DILocation(line: 2276, column: 44, scope: !4442)
!4447 = !DILocation(line: 2276, column: 12, scope: !4421)
!4448 = !DILocation(line: 2278, column: 49, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4442, file: !426, line: 2277, column: 5)
!4450 = !DILocation(line: 2278, column: 64, scope: !4449)
!4451 = !DILocation(line: 2278, column: 22, scope: !4449)
!4452 = !DILocation(line: 2278, column: 20, scope: !4449)
!4453 = !DILocation(line: 2279, column: 5, scope: !4449)
!4454 = !DILocation(line: 2280, column: 12, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4442, file: !426, line: 2280, column: 12)
!4456 = !DILocation(line: 2280, column: 15, scope: !4455)
!4457 = !DILocation(line: 2281, column: 12, scope: !4455)
!4458 = !DILocation(line: 2281, column: 16, scope: !4455)
!4459 = !DILocation(line: 2281, column: 19, scope: !4455)
!4460 = !DILocation(line: 2282, column: 12, scope: !4455)
!4461 = !DILocation(line: 2282, column: 27, scope: !4455)
!4462 = !DILocation(line: 2282, column: 18, scope: !4455)
!4463 = !DILocation(line: 2283, column: 16, scope: !4455)
!4464 = !DILocation(line: 2283, column: 20, scope: !4455)
!4465 = !DILocation(line: 2284, column: 20, scope: !4455)
!4466 = !DILocation(line: 2284, column: 23, scope: !4455)
!4467 = !DILocation(line: 2284, column: 26, scope: !4455)
!4468 = !DILocation(line: 2284, column: 38, scope: !4455)
!4469 = !DILocation(line: 2285, column: 16, scope: !4455)
!4470 = !DILocation(line: 2285, column: 19, scope: !4455)
!4471 = !DILocation(line: 2285, column: 22, scope: !4455)
!4472 = !DILocation(line: 2285, column: 34, scope: !4455)
!4473 = !DILocation(line: 2280, column: 12, scope: !4442)
!4474 = !DILocation(line: 2287, column: 39, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4455, file: !426, line: 2286, column: 5)
!4476 = !DILocation(line: 2287, column: 56, scope: !4475)
!4477 = !DILocation(line: 2287, column: 71, scope: !4475)
!4478 = !DILocation(line: 2287, column: 22, scope: !4475)
!4479 = !DILocation(line: 2287, column: 20, scope: !4475)
!4480 = !DILocation(line: 2288, column: 5, scope: !4475)
!4481 = !DILocation(line: 2293, column: 7, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2293, column: 7)
!4483 = !DILocation(line: 2293, column: 7, scope: !3785)
!4484 = !DILocation(line: 2298, column: 11, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !426, line: 2298, column: 11)
!4486 = distinct !DILexicalBlock(scope: !4482, file: !426, line: 2294, column: 5)
!4487 = !DILocation(line: 2298, column: 11, scope: !4486)
!4488 = !DILocation(line: 2302, column: 26, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !426, line: 2302, column: 15)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !426, line: 2299, column: 9)
!4491 = !DILocation(line: 2302, column: 36, scope: !4489)
!4492 = !DILocation(line: 2302, column: 15, scope: !4489)
!4493 = !DILocation(line: 2302, column: 15, scope: !4490)
!4494 = !DILocation(line: 2304, column: 28, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4489, file: !426, line: 2303, column: 13)
!4496 = !DILocation(line: 2305, column: 22, scope: !4495)
!4497 = !DILocation(line: 2306, column: 22, scope: !4495)
!4498 = !DILocation(line: 2304, column: 15, scope: !4495)
!4499 = !DILocation(line: 2307, column: 16, scope: !4495)
!4500 = !DILocation(line: 2307, column: 31, scope: !4495)
!4501 = !DILocation(line: 2308, column: 15, scope: !4495)
!4502 = !DILocation(line: 2310, column: 31, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4489, file: !426, line: 2310, column: 20)
!4504 = !DILocation(line: 2310, column: 41, scope: !4503)
!4505 = !DILocation(line: 2310, column: 20, scope: !4503)
!4506 = !DILocation(line: 2310, column: 20, scope: !4489)
!4507 = !DILocation(line: 2312, column: 28, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4503, file: !426, line: 2311, column: 13)
!4509 = !DILocation(line: 2314, column: 22, scope: !4508)
!4510 = !DILocation(line: 2312, column: 15, scope: !4508)
!4511 = !DILocation(line: 2319, column: 19, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4508, file: !426, line: 2319, column: 19)
!4513 = !DILocation(line: 2319, column: 22, scope: !4512)
!4514 = !DILocation(line: 2319, column: 32, scope: !4512)
!4515 = !DILocation(line: 2319, column: 35, scope: !4512)
!4516 = !DILocation(line: 2319, column: 19, scope: !4508)
!4517 = !DILocation(line: 2320, column: 18, scope: !4512)
!4518 = !DILocation(line: 2320, column: 35, scope: !4512)
!4519 = !DILocation(line: 2320, column: 17, scope: !4512)
!4520 = !DILocation(line: 2323, column: 15, scope: !4508)
!4521 = !DILocation(line: 2325, column: 20, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4503, file: !426, line: 2325, column: 20)
!4523 = !DILocation(line: 2325, column: 23, scope: !4522)
!4524 = !DILocation(line: 2325, column: 35, scope: !4522)
!4525 = !DILocation(line: 2326, column: 20, scope: !4522)
!4526 = !DILocation(line: 2326, column: 24, scope: !4522)
!4527 = !DILocation(line: 2327, column: 24, scope: !4522)
!4528 = !DILocation(line: 2327, column: 27, scope: !4522)
!4529 = !DILocation(line: 2327, column: 30, scope: !4522)
!4530 = !DILocation(line: 2327, column: 42, scope: !4522)
!4531 = !DILocation(line: 2325, column: 20, scope: !4503)
!4532 = !DILocation(line: 2335, column: 13, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4522, file: !426, line: 2328, column: 13)
!4534 = !DILocation(line: 2338, column: 28, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4522, file: !426, line: 2337, column: 13)
!4536 = !DILocation(line: 2339, column: 22, scope: !4535)
!4537 = !DILocation(line: 2339, column: 47, scope: !4535)
!4538 = !DILocation(line: 2338, column: 15, scope: !4535)
!4539 = !DILocation(line: 2340, column: 15, scope: !4535)
!4540 = !DILocation(line: 2342, column: 9, scope: !4490)
!4541 = !DILocation(line: 2345, column: 35, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !426, line: 2345, column: 15)
!4543 = distinct !DILexicalBlock(scope: !4485, file: !426, line: 2344, column: 9)
!4544 = !DILocation(line: 2345, column: 49, scope: !4542)
!4545 = !DILocation(line: 2345, column: 65, scope: !4542)
!4546 = !DILocation(line: 2345, column: 68, scope: !4542)
!4547 = !DILocation(line: 2346, column: 35, scope: !4542)
!4548 = !DILocation(line: 2345, column: 17, scope: !4542)
!4549 = !DILocation(line: 2345, column: 15, scope: !4543)
!4550 = !DILocation(line: 2347, column: 13, scope: !4542)
!4551 = !DILocation(line: 2349, column: 11, scope: !4543)
!4552 = !DILocation(line: 2351, column: 5, scope: !4486)
!4553 = !DILocation(line: 2353, column: 7, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2353, column: 7)
!4555 = !DILocation(line: 2353, column: 10, scope: !4554)
!4556 = !DILocation(line: 2353, column: 7, scope: !3785)
!4557 = !DILocation(line: 2355, column: 11, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2355, column: 11)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !426, line: 2354, column: 5)
!4560 = !DILocation(line: 2355, column: 24, scope: !4558)
!4561 = !DILocation(line: 2355, column: 11, scope: !4559)
!4562 = !DILocation(line: 2356, column: 32, scope: !4558)
!4563 = !DILocation(line: 2356, column: 42, scope: !4558)
!4564 = !DILocation(line: 2356, column: 24, scope: !4558)
!4565 = !DILocation(line: 2356, column: 52, scope: !4558)
!4566 = !DILocation(line: 2356, column: 63, scope: !4558)
!4567 = !DILocation(line: 2356, column: 22, scope: !4558)
!4568 = !DILocation(line: 2356, column: 9, scope: !4558)
!4569 = !DILocation(line: 2358, column: 11, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2358, column: 11)
!4571 = !DILocation(line: 2358, column: 24, scope: !4570)
!4572 = !DILocation(line: 2358, column: 11, scope: !4559)
!4573 = !DILocation(line: 2360, column: 15, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !426, line: 2360, column: 15)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !426, line: 2359, column: 9)
!4576 = !DILocation(line: 2360, column: 18, scope: !4574)
!4577 = !DILocation(line: 2360, column: 15, scope: !4575)
!4578 = !DILocation(line: 2362, column: 23, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !426, line: 2361, column: 13)
!4580 = !DILocation(line: 2362, column: 15, scope: !4579)
!4581 = !DILocation(line: 2363, column: 29, scope: !4579)
!4582 = !DILocation(line: 2363, column: 39, scope: !4579)
!4583 = !DILocation(line: 2363, column: 49, scope: !4579)
!4584 = !DILocation(line: 2363, column: 15, scope: !4579)
!4585 = !DILocation(line: 2364, column: 13, scope: !4579)
!4586 = !DILocation(line: 2366, column: 15, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4575, file: !426, line: 2366, column: 15)
!4588 = !DILocation(line: 2366, column: 18, scope: !4587)
!4589 = !DILocation(line: 2366, column: 15, scope: !4575)
!4590 = !DILocation(line: 2369, column: 45, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4587, file: !426, line: 2367, column: 13)
!4592 = !DILocation(line: 2369, column: 68, scope: !4591)
!4593 = !DILocation(line: 2369, column: 22, scope: !4591)
!4594 = !DILocation(line: 2370, column: 13, scope: !4591)
!4595 = !DILocation(line: 2372, column: 15, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4575, file: !426, line: 2372, column: 15)
!4597 = !DILocation(line: 2372, column: 15, scope: !4575)
!4598 = !DILocation(line: 2373, column: 14, scope: !4596)
!4599 = !DILocation(line: 2373, column: 31, scope: !4596)
!4600 = !DILocation(line: 2373, column: 13, scope: !4596)
!4601 = !DILocation(line: 2375, column: 15, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4575, file: !426, line: 2375, column: 15)
!4603 = !DILocation(line: 2375, column: 32, scope: !4602)
!4604 = !DILocation(line: 2375, column: 36, scope: !4602)
!4605 = !DILocation(line: 2375, column: 39, scope: !4602)
!4606 = !DILocation(line: 2375, column: 15, scope: !4575)
!4607 = !DILocation(line: 2384, column: 28, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4602, file: !426, line: 2376, column: 13)
!4609 = !DILocation(line: 2384, column: 31, scope: !4608)
!4610 = !DILocation(line: 2384, column: 42, scope: !4608)
!4611 = !DILocation(line: 2384, column: 15, scope: !4608)
!4612 = !DILocation(line: 2385, column: 13, scope: !4608)
!4613 = !DILocation(line: 2387, column: 11, scope: !4575)
!4614 = !DILocation(line: 2395, column: 11, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2395, column: 11)
!4616 = !DILocation(line: 2395, column: 24, scope: !4615)
!4617 = !DILocation(line: 2395, column: 11, scope: !4559)
!4618 = !DILocation(line: 2400, column: 24, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4615, file: !426, line: 2396, column: 9)
!4620 = !DILocation(line: 2401, column: 18, scope: !4619)
!4621 = !DILocation(line: 2402, column: 18, scope: !4619)
!4622 = !DILocation(line: 2400, column: 11, scope: !4619)
!4623 = !DILocation(line: 2408, column: 12, scope: !4619)
!4624 = !DILocation(line: 2408, column: 27, scope: !4619)
!4625 = !DILocation(line: 2412, column: 11, scope: !4619)
!4626 = !DILocation(line: 2430, column: 11, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2430, column: 11)
!4628 = !DILocation(line: 2430, column: 24, scope: !4627)
!4629 = !DILocation(line: 2430, column: 11, scope: !4559)
!4630 = !DILocation(line: 2442, column: 21, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !426, line: 2431, column: 9)
!4632 = !DILocation(line: 2443, column: 18, scope: !4631)
!4633 = !DILocation(line: 2444, column: 18, scope: !4631)
!4634 = !DILocation(line: 2444, column: 43, scope: !4631)
!4635 = !DILocation(line: 2442, column: 11, scope: !4631)
!4636 = !DILocation(line: 2445, column: 34, scope: !4631)
!4637 = !DILocation(line: 2445, column: 49, scope: !4631)
!4638 = !DILocation(line: 2445, column: 11, scope: !4631)
!4639 = !DILocation(line: 2446, column: 11, scope: !4631)
!4640 = !DILocation(line: 2455, column: 12, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2455, column: 11)
!4642 = !DILocation(line: 2455, column: 40, scope: !4641)
!4643 = !DILocation(line: 2455, column: 33, scope: !4641)
!4644 = !DILocation(line: 2455, column: 60, scope: !4641)
!4645 = !DILocation(line: 2455, column: 52, scope: !4641)
!4646 = !DILocation(line: 2455, column: 71, scope: !4641)
!4647 = !DILocation(line: 2456, column: 11, scope: !4641)
!4648 = !DILocation(line: 2456, column: 14, scope: !4641)
!4649 = !DILocation(line: 2456, column: 20, scope: !4641)
!4650 = !DILocation(line: 2455, column: 11, scope: !4559)
!4651 = !DILocation(line: 2458, column: 21, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4641, file: !426, line: 2457, column: 9)
!4653 = !DILocation(line: 2459, column: 14, scope: !4652)
!4654 = !DILocation(line: 2460, column: 18, scope: !4652)
!4655 = !DILocation(line: 2460, column: 43, scope: !4652)
!4656 = !DILocation(line: 2458, column: 11, scope: !4652)
!4657 = !DILocation(line: 2461, column: 34, scope: !4652)
!4658 = !DILocation(line: 2461, column: 49, scope: !4652)
!4659 = !DILocation(line: 2461, column: 11, scope: !4652)
!4660 = !DILocation(line: 2462, column: 11, scope: !4652)
!4661 = !DILocation(line: 2465, column: 11, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4559, file: !426, line: 2465, column: 11)
!4663 = !DILocation(line: 2465, column: 14, scope: !4662)
!4664 = !DILocation(line: 2465, column: 22, scope: !4662)
!4665 = !DILocation(line: 2465, column: 26, scope: !4662)
!4666 = !DILocation(line: 2465, column: 11, scope: !4559)
!4667 = !DILocation(line: 2467, column: 19, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4662, file: !426, line: 2466, column: 9)
!4669 = !DILocation(line: 2467, column: 11, scope: !4668)
!4670 = !DILocation(line: 2468, column: 25, scope: !4668)
!4671 = !DILocation(line: 2468, column: 35, scope: !4668)
!4672 = !DILocation(line: 2468, column: 45, scope: !4668)
!4673 = !DILocation(line: 2468, column: 11, scope: !4668)
!4674 = !DILocation(line: 2469, column: 9, scope: !4668)
!4675 = !DILocation(line: 2470, column: 15, scope: !4559)
!4676 = !DILocation(line: 2471, column: 5, scope: !4559)
!4677 = !DILocation(line: 2477, column: 20, scope: !3785)
!4678 = !DILocation(line: 2477, column: 23, scope: !3785)
!4679 = !DILocation(line: 2477, column: 34, scope: !3785)
!4680 = !DILocation(line: 2477, column: 37, scope: !3785)
!4681 = !DILocation(line: 2477, column: 44, scope: !3785)
!4682 = !DILocation(line: 2477, column: 54, scope: !3785)
!4683 = !DILocation(line: 2477, column: 17, scope: !3785)
!4684 = !DILocation(line: 2479, column: 6, scope: !3785)
!4685 = !DILocation(line: 2480, column: 9, scope: !3785)
!4686 = !DILocation(line: 2480, column: 12, scope: !3785)
!4687 = !DILocation(line: 2481, column: 11, scope: !3785)
!4688 = !DILocation(line: 2480, column: 6, scope: !3785)
!4689 = !DILocation(line: 2478, column: 23, scope: !3785)
!4690 = !DILocation(line: 2484, column: 14, scope: !3785)
!4691 = !DILocation(line: 2490, column: 35, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2490, column: 7)
!4693 = !DILocation(line: 2490, column: 45, scope: !4692)
!4694 = !DILocation(line: 2490, column: 55, scope: !4692)
!4695 = !DILocation(line: 2490, column: 65, scope: !4692)
!4696 = !DILocation(line: 2490, column: 74, scope: !4692)
!4697 = !DILocation(line: 2490, column: 9, scope: !4692)
!4698 = !DILocation(line: 2490, column: 7, scope: !3785)
!4699 = !DILocation(line: 2491, column: 5, scope: !4692)
!4700 = !DILocation(line: 2493, column: 7, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2493, column: 7)
!4702 = !DILocation(line: 2493, column: 7, scope: !3785)
!4703 = !DILocalVariable(name: "dir", scope: !4704, file: !426, line: 2495, type: !493)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !426, line: 2494, column: 5)
!4705 = !DILocation(line: 2495, column: 24, scope: !4704)
!4706 = !DILocation(line: 2502, column: 33, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4704, file: !426, line: 2502, column: 11)
!4708 = !DILocation(line: 2502, column: 11, scope: !4707)
!4709 = !DILocation(line: 2502, column: 11, scope: !4704)
!4710 = !DILocation(line: 2504, column: 24, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !426, line: 2503, column: 9)
!4712 = !DILocation(line: 2505, column: 18, scope: !4711)
!4713 = !DILocation(line: 2504, column: 11, scope: !4711)
!4714 = !DILocation(line: 2506, column: 11, scope: !4711)
!4715 = !DILocation(line: 2511, column: 13, scope: !4704)
!4716 = !DILocation(line: 2511, column: 11, scope: !4704)
!4717 = !DILocation(line: 2512, column: 21, scope: !4704)
!4718 = !DILocation(line: 2512, column: 7, scope: !4704)
!4719 = !DILocation(line: 2512, column: 12, scope: !4704)
!4720 = !DILocation(line: 2512, column: 19, scope: !4704)
!4721 = !DILocation(line: 2513, column: 25, scope: !4704)
!4722 = !DILocation(line: 2513, column: 7, scope: !4704)
!4723 = !DILocation(line: 2513, column: 12, scope: !4704)
!4724 = !DILocation(line: 2513, column: 16, scope: !4704)
!4725 = !DILocation(line: 2514, column: 25, scope: !4704)
!4726 = !DILocation(line: 2514, column: 7, scope: !4704)
!4727 = !DILocation(line: 2514, column: 12, scope: !4704)
!4728 = !DILocation(line: 2514, column: 16, scope: !4704)
!4729 = !DILocation(line: 2516, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4704, file: !426, line: 2516, column: 11)
!4731 = !DILocation(line: 2516, column: 19, scope: !4730)
!4732 = !DILocation(line: 2516, column: 23, scope: !4730)
!4733 = !DILocation(line: 2516, column: 11, scope: !4704)
!4734 = !DILocation(line: 2522, column: 22, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !426, line: 2522, column: 15)
!4736 = distinct !DILexicalBlock(scope: !4730, file: !426, line: 2517, column: 9)
!4737 = !DILocation(line: 2522, column: 32, scope: !4735)
!4738 = !DILocation(line: 2522, column: 49, scope: !4735)
!4739 = !DILocation(line: 2522, column: 48, scope: !4735)
!4740 = !DILocation(line: 2522, column: 46, scope: !4735)
!4741 = !DILocation(line: 2522, column: 15, scope: !4735)
!4742 = !DILocation(line: 2522, column: 70, scope: !4735)
!4743 = !DILocation(line: 2522, column: 15, scope: !4736)
!4744 = !DILocation(line: 2524, column: 25, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4735, file: !426, line: 2523, column: 13)
!4746 = !DILocation(line: 2524, column: 32, scope: !4745)
!4747 = !DILocation(line: 2525, column: 22, scope: !4745)
!4748 = !DILocation(line: 2524, column: 15, scope: !4745)
!4749 = !DILocation(line: 2526, column: 15, scope: !4745)
!4750 = !DILocation(line: 2533, column: 22, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4736, file: !426, line: 2533, column: 15)
!4752 = !DILocation(line: 2533, column: 15, scope: !4751)
!4753 = !DILocation(line: 2533, column: 41, scope: !4751)
!4754 = !DILocation(line: 2533, column: 15, scope: !4736)
!4755 = !DILocation(line: 2535, column: 25, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !426, line: 2534, column: 13)
!4757 = !DILocation(line: 2535, column: 32, scope: !4756)
!4758 = !DILocation(line: 2535, column: 53, scope: !4756)
!4759 = !DILocation(line: 2535, column: 15, scope: !4756)
!4760 = !DILocation(line: 2536, column: 15, scope: !4756)
!4761 = !DILocation(line: 2538, column: 28, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4751, file: !426, line: 2538, column: 20)
!4763 = !DILocation(line: 2538, column: 36, scope: !4762)
!4764 = !DILocation(line: 2538, column: 47, scope: !4762)
!4765 = !DILocation(line: 2538, column: 20, scope: !4751)
!4766 = !DILocation(line: 2542, column: 33, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !426, line: 2539, column: 13)
!4768 = !DILocation(line: 2542, column: 24, scope: !4767)
!4769 = !DILocation(line: 2543, column: 32, scope: !4767)
!4770 = !DILocation(line: 2545, column: 27, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !426, line: 2545, column: 19)
!4772 = !DILocation(line: 2545, column: 37, scope: !4771)
!4773 = !DILocation(line: 2545, column: 46, scope: !4771)
!4774 = !DILocation(line: 2545, column: 19, scope: !4771)
!4775 = !DILocation(line: 2545, column: 57, scope: !4771)
!4776 = !DILocation(line: 2545, column: 19, scope: !4767)
!4777 = !DILocation(line: 2547, column: 29, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4771, file: !426, line: 2546, column: 17)
!4779 = !DILocation(line: 2547, column: 36, scope: !4778)
!4780 = !DILocation(line: 2548, column: 26, scope: !4778)
!4781 = !DILocation(line: 2547, column: 19, scope: !4778)
!4782 = !DILocation(line: 2549, column: 19, scope: !4778)
!4783 = !DILocation(line: 2551, column: 13, scope: !4767)
!4784 = !DILocation(line: 2557, column: 17, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4736, file: !426, line: 2557, column: 15)
!4786 = !DILocation(line: 2557, column: 16, scope: !4785)
!4787 = !DILocation(line: 2557, column: 15, scope: !4736)
!4788 = !DILocation(line: 2559, column: 32, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !426, line: 2558, column: 13)
!4790 = !DILocation(line: 2559, column: 49, scope: !4789)
!4791 = !DILocation(line: 2559, column: 64, scope: !4789)
!4792 = !DILocation(line: 2559, column: 15, scope: !4789)
!4793 = !DILocation(line: 2560, column: 16, scope: !4789)
!4794 = !DILocation(line: 2560, column: 55, scope: !4789)
!4795 = !DILocation(line: 2561, column: 13, scope: !4789)
!4796 = !DILocation(line: 2563, column: 15, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4736, file: !426, line: 2563, column: 15)
!4798 = !DILocation(line: 2563, column: 18, scope: !4797)
!4799 = !DILocation(line: 2563, column: 15, scope: !4736)
!4800 = !DILocation(line: 2565, column: 19, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !426, line: 2565, column: 19)
!4802 = distinct !DILexicalBlock(scope: !4797, file: !426, line: 2564, column: 13)
!4803 = !DILocation(line: 2565, column: 22, scope: !4801)
!4804 = !DILocation(line: 2565, column: 19, scope: !4802)
!4805 = !DILocation(line: 2566, column: 25, scope: !4801)
!4806 = !DILocation(line: 2566, column: 54, scope: !4801)
!4807 = !DILocation(line: 2566, column: 17, scope: !4801)
!4808 = !DILocation(line: 2568, column: 31, scope: !4801)
!4809 = !DILocation(line: 2568, column: 41, scope: !4801)
!4810 = !DILocation(line: 2568, column: 17, scope: !4801)
!4811 = !DILocation(line: 2569, column: 13, scope: !4802)
!4812 = !DILocation(line: 2570, column: 9, scope: !4736)
!4813 = !DILocation(line: 2573, column: 31, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4730, file: !426, line: 2572, column: 9)
!4815 = !DILocation(line: 2578, column: 15, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4814, file: !426, line: 2578, column: 15)
!4817 = !DILocation(line: 2578, column: 18, scope: !4816)
!4818 = !DILocation(line: 2578, column: 39, scope: !4816)
!4819 = !DILocation(line: 2578, column: 42, scope: !4816)
!4820 = !DILocation(line: 2578, column: 45, scope: !4816)
!4821 = !DILocation(line: 2578, column: 15, scope: !4814)
!4822 = !DILocation(line: 2579, column: 42, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4816, file: !426, line: 2579, column: 17)
!4824 = !DILocation(line: 2579, column: 52, scope: !4823)
!4825 = !DILocation(line: 2579, column: 55, scope: !4823)
!4826 = !DILocation(line: 2580, column: 49, scope: !4823)
!4827 = !DILocation(line: 2579, column: 19, scope: !4823)
!4828 = !DILocation(line: 2579, column: 17, scope: !4816)
!4829 = !DILocation(line: 2582, column: 21, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !426, line: 2582, column: 21)
!4831 = distinct !DILexicalBlock(scope: !4823, file: !426, line: 2581, column: 15)
!4832 = !DILocation(line: 2582, column: 24, scope: !4830)
!4833 = !DILocation(line: 2582, column: 21, scope: !4831)
!4834 = !DILocation(line: 2583, column: 19, scope: !4830)
!4835 = !DILocation(line: 2584, column: 15, scope: !4831)
!4836 = !DILocation(line: 2580, column: 50, scope: !4823)
!4837 = !DILocation(line: 2588, column: 11, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4704, file: !426, line: 2588, column: 11)
!4839 = !DILocation(line: 2588, column: 14, scope: !4838)
!4840 = !DILocation(line: 2588, column: 30, scope: !4838)
!4841 = !DILocation(line: 2588, column: 33, scope: !4838)
!4842 = !DILocation(line: 2588, column: 40, scope: !4838)
!4843 = !DILocation(line: 2588, column: 43, scope: !4838)
!4844 = !DILocation(line: 2588, column: 51, scope: !4838)
!4845 = !DILocation(line: 2588, column: 68, scope: !4838)
!4846 = !DILocation(line: 2588, column: 58, scope: !4838)
!4847 = !DILocation(line: 2588, column: 11, scope: !4704)
!4848 = !DILocation(line: 2592, column: 9, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4838, file: !426, line: 2589, column: 9)
!4850 = !DILocation(line: 2599, column: 34, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4838, file: !426, line: 2594, column: 9)
!4852 = !DILocation(line: 2599, column: 44, scope: !4851)
!4853 = !DILocation(line: 2599, column: 54, scope: !4851)
!4854 = !DILocation(line: 2599, column: 72, scope: !4851)
!4855 = !DILocation(line: 2599, column: 77, scope: !4851)
!4856 = !DILocation(line: 2600, column: 34, scope: !4851)
!4857 = !DILocation(line: 2601, column: 34, scope: !4851)
!4858 = !DILocation(line: 2599, column: 24, scope: !4851)
!4859 = !DILocation(line: 2599, column: 22, scope: !4851)
!4860 = !DILocation(line: 2603, column: 5, scope: !4704)
!4861 = !DILocation(line: 2604, column: 12, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4701, file: !426, line: 2604, column: 12)
!4863 = !DILocation(line: 2604, column: 15, scope: !4862)
!4864 = !DILocation(line: 2604, column: 12, scope: !4701)
!4865 = !DILocation(line: 2606, column: 23, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !426, line: 2605, column: 5)
!4867 = !DILocation(line: 2607, column: 12, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4866, file: !426, line: 2607, column: 11)
!4869 = !DILocation(line: 2607, column: 11, scope: !4868)
!4870 = !DILocation(line: 2607, column: 21, scope: !4868)
!4871 = !DILocation(line: 2607, column: 11, scope: !4866)
!4872 = !DILocalVariable(name: "dot_sb", scope: !4873, file: !426, line: 2610, type: !462)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !426, line: 2608, column: 9)
!4874 = !DILocation(line: 2610, column: 23, scope: !4873)
!4875 = !DILocalVariable(name: "dst_parent_sb", scope: !4873, file: !426, line: 2611, type: !462)
!4876 = !DILocation(line: 2611, column: 23, scope: !4873)
!4877 = !DILocalVariable(name: "dst_parent", scope: !4873, file: !426, line: 2612, type: !9)
!4878 = !DILocation(line: 2612, column: 17, scope: !4873)
!4879 = !DILocalVariable(name: "in_current_dir", scope: !4873, file: !426, line: 2613, type: !142)
!4880 = !DILocation(line: 2613, column: 16, scope: !4873)
!4881 = !DILocation(line: 2615, column: 34, scope: !4873)
!4882 = !DILocation(line: 2615, column: 24, scope: !4873)
!4883 = !DILocation(line: 2615, column: 22, scope: !4873)
!4884 = !DILocation(line: 2617, column: 29, scope: !4873)
!4885 = !DILocation(line: 2621, column: 29, scope: !4873)
!4886 = !DILocation(line: 2621, column: 32, scope: !4873)
!4887 = !DILocation(line: 2621, column: 52, scope: !4873)
!4888 = !DILocation(line: 2622, column: 29, scope: !4873)
!4889 = !DILocation(line: 2622, column: 38, scope: !4873)
!4890 = !DILocation(line: 2622, column: 32, scope: !4873)
!4891 = !DILocation(line: 2622, column: 66, scope: !4873)
!4892 = !DILocation(line: 2623, column: 29, scope: !4873)
!4893 = !DILocation(line: 2623, column: 32, scope: !4873)
!4894 = !DILocation(line: 0, scope: !4873)
!4895 = !DILocation(line: 2617, column: 26, scope: !4873)
!4896 = !DILocation(line: 2624, column: 17, scope: !4873)
!4897 = !DILocation(line: 2624, column: 11, scope: !4873)
!4898 = !DILocation(line: 2626, column: 17, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4873, file: !426, line: 2626, column: 15)
!4900 = !DILocation(line: 2626, column: 15, scope: !4873)
!4901 = !DILocation(line: 2629, column: 12, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4899, file: !426, line: 2627, column: 13)
!4903 = !DILocation(line: 2630, column: 22, scope: !4902)
!4904 = !DILocation(line: 2628, column: 15, scope: !4902)
!4905 = !DILocation(line: 2631, column: 15, scope: !4902)
!4906 = !DILocation(line: 2633, column: 9, scope: !4873)
!4907 = !DILocalVariable(name: "err", scope: !4866, file: !426, line: 2635, type: !7)
!4908 = !DILocation(line: 2635, column: 11, scope: !4866)
!4909 = !DILocation(line: 2635, column: 34, scope: !4866)
!4910 = !DILocation(line: 2635, column: 54, scope: !4866)
!4911 = !DILocation(line: 2636, column: 34, scope: !4866)
!4912 = !DILocation(line: 2636, column: 37, scope: !4866)
!4913 = !DILocation(line: 2635, column: 17, scope: !4866)
!4914 = !DILocation(line: 2637, column: 15, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4866, file: !426, line: 2637, column: 11)
!4916 = !DILocation(line: 2637, column: 13, scope: !4915)
!4917 = !DILocation(line: 2637, column: 11, scope: !4866)
!4918 = !DILocation(line: 2639, column: 21, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !426, line: 2638, column: 9)
!4920 = !DILocation(line: 2639, column: 26, scope: !4919)
!4921 = !DILocation(line: 2640, column: 18, scope: !4919)
!4922 = !DILocation(line: 2640, column: 43, scope: !4919)
!4923 = !DILocation(line: 2639, column: 11, scope: !4919)
!4924 = !DILocation(line: 2641, column: 11, scope: !4919)
!4925 = !DILocation(line: 2643, column: 5, scope: !4866)
!4926 = !DILocation(line: 2658, column: 12, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4862, file: !426, line: 2658, column: 12)
!4928 = !DILocation(line: 2658, column: 15, scope: !4927)
!4929 = !DILocation(line: 2658, column: 12, scope: !4862)
!4930 = !DILocalVariable(name: "replace", scope: !4931, file: !426, line: 2662, type: !142)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !426, line: 2661, column: 5)
!4932 = !DILocation(line: 2662, column: 12, scope: !4931)
!4933 = !DILocation(line: 2662, column: 23, scope: !4931)
!4934 = !DILocation(line: 2662, column: 26, scope: !4931)
!4935 = !DILocation(line: 2663, column: 23, scope: !4931)
!4936 = !DILocation(line: 2663, column: 26, scope: !4931)
!4937 = !DILocation(line: 2663, column: 29, scope: !4931)
!4938 = !DILocation(line: 2663, column: 41, scope: !4931)
!4939 = !DILocation(line: 2664, column: 31, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4931, file: !426, line: 2664, column: 11)
!4941 = !DILocation(line: 2664, column: 41, scope: !4940)
!4942 = !DILocation(line: 2664, column: 51, scope: !4940)
!4943 = !DILocation(line: 2664, column: 67, scope: !4940)
!4944 = !DILocation(line: 2664, column: 13, scope: !4940)
!4945 = !DILocation(line: 2664, column: 11, scope: !4931)
!4946 = !DILocation(line: 2665, column: 9, scope: !4940)
!4947 = !DILocation(line: 2666, column: 5, scope: !4931)
!4948 = !DILocation(line: 2667, column: 12, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4927, file: !426, line: 2667, column: 12)
!4950 = !DILocation(line: 2668, column: 12, scope: !4949)
!4951 = !DILocation(line: 2668, column: 16, scope: !4949)
!4952 = !DILocation(line: 2668, column: 19, scope: !4949)
!4953 = !DILocation(line: 2668, column: 35, scope: !4949)
!4954 = !DILocation(line: 2668, column: 39, scope: !4949)
!4955 = !DILocation(line: 2667, column: 12, scope: !4927)
!4956 = !DILocation(line: 2670, column: 25, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4949, file: !426, line: 2669, column: 5)
!4958 = !DILocation(line: 2680, column: 23, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4957, file: !426, line: 2680, column: 11)
!4960 = !DILocation(line: 2680, column: 33, scope: !4959)
!4961 = !DILocation(line: 2680, column: 43, scope: !4959)
!4962 = !DILocation(line: 2680, column: 46, scope: !4959)
!4963 = !DILocation(line: 2680, column: 60, scope: !4959)
!4964 = !DILocation(line: 2681, column: 23, scope: !4959)
!4965 = !DILocation(line: 2680, column: 13, scope: !4959)
!4966 = !DILocation(line: 2680, column: 11, scope: !4957)
!4967 = !DILocation(line: 2682, column: 9, scope: !4959)
!4968 = !DILocation(line: 2683, column: 5, scope: !4957)
!4969 = !DILocation(line: 2684, column: 12, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4949, file: !426, line: 2684, column: 12)
!4971 = !DILocation(line: 2684, column: 12, scope: !4949)
!4972 = !DILocation(line: 2690, column: 18, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !426, line: 2690, column: 11)
!4974 = distinct !DILexicalBlock(scope: !4970, file: !426, line: 2685, column: 5)
!4975 = !DILocation(line: 2690, column: 28, scope: !4973)
!4976 = !DILocation(line: 2690, column: 40, scope: !4973)
!4977 = !DILocation(line: 2690, column: 39, scope: !4973)
!4978 = !DILocation(line: 2690, column: 37, scope: !4973)
!4979 = !DILocation(line: 2690, column: 11, scope: !4973)
!4980 = !DILocation(line: 2690, column: 64, scope: !4973)
!4981 = !DILocation(line: 2690, column: 11, scope: !4974)
!4982 = !DILocation(line: 2691, column: 21, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4973, file: !426, line: 2691, column: 13)
!4984 = !DILocation(line: 2691, column: 31, scope: !4983)
!4985 = !DILocation(line: 2691, column: 40, scope: !4983)
!4986 = !DILocation(line: 2691, column: 54, scope: !4983)
!4987 = !DILocation(line: 2691, column: 53, scope: !4983)
!4988 = !DILocation(line: 2691, column: 51, scope: !4983)
!4989 = !DILocation(line: 2691, column: 13, scope: !4983)
!4990 = !DILocation(line: 2691, column: 75, scope: !4983)
!4991 = !DILocation(line: 2691, column: 13, scope: !4973)
!4992 = !DILocation(line: 2693, column: 23, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4983, file: !426, line: 2692, column: 11)
!4994 = !DILocation(line: 2693, column: 30, scope: !4993)
!4995 = !DILocation(line: 2693, column: 58, scope: !4993)
!4996 = !DILocation(line: 2693, column: 13, scope: !4993)
!4997 = !DILocation(line: 2694, column: 13, scope: !4993)
!4998 = !DILocation(line: 2691, column: 78, scope: !4983)
!4999 = !DILocation(line: 2696, column: 5, scope: !4974)
!5000 = !DILocation(line: 2697, column: 12, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4970, file: !426, line: 2697, column: 12)
!5002 = !DILocation(line: 2697, column: 31, scope: !5001)
!5003 = !DILocation(line: 2697, column: 34, scope: !5001)
!5004 = !DILocation(line: 2697, column: 53, scope: !5001)
!5005 = !DILocation(line: 2697, column: 56, scope: !5001)
!5006 = !DILocation(line: 2697, column: 12, scope: !4970)
!5007 = !DILocation(line: 2699, column: 18, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !426, line: 2699, column: 11)
!5009 = distinct !DILexicalBlock(scope: !5001, file: !426, line: 2698, column: 5)
!5010 = !DILocation(line: 2699, column: 28, scope: !5008)
!5011 = !DILocation(line: 2699, column: 40, scope: !5008)
!5012 = !DILocation(line: 2699, column: 39, scope: !5008)
!5013 = !DILocation(line: 2699, column: 37, scope: !5008)
!5014 = !DILocation(line: 2699, column: 68, scope: !5008)
!5015 = !DILocation(line: 2699, column: 11, scope: !5008)
!5016 = !DILocation(line: 2700, column: 11, scope: !5008)
!5017 = !DILocation(line: 2699, column: 11, scope: !5009)
!5018 = !DILocation(line: 2702, column: 21, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5008, file: !426, line: 2701, column: 9)
!5020 = !DILocation(line: 2702, column: 28, scope: !5019)
!5021 = !DILocation(line: 2703, column: 18, scope: !5019)
!5022 = !DILocation(line: 2702, column: 11, scope: !5019)
!5023 = !DILocation(line: 2704, column: 11, scope: !5019)
!5024 = !DILocation(line: 2706, column: 5, scope: !5009)
!5025 = !DILocation(line: 2707, column: 12, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5001, file: !426, line: 2707, column: 12)
!5027 = !DILocation(line: 2707, column: 12, scope: !5001)
!5028 = !DILocalVariable(name: "src_link_val", scope: !5029, file: !426, line: 2709, type: !9)
!5029 = distinct !DILexicalBlock(scope: !5026, file: !426, line: 2708, column: 5)
!5030 = !DILocation(line: 2709, column: 13, scope: !5029)
!5031 = !DILocation(line: 2709, column: 49, scope: !5029)
!5032 = !DILocation(line: 2709, column: 66, scope: !5029)
!5033 = !DILocation(line: 2709, column: 28, scope: !5029)
!5034 = !DILocation(line: 2710, column: 23, scope: !5029)
!5035 = !DILocation(line: 2711, column: 11, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5029, file: !426, line: 2711, column: 11)
!5037 = !DILocation(line: 2711, column: 24, scope: !5036)
!5038 = !DILocation(line: 2711, column: 11, scope: !5029)
!5039 = !DILocation(line: 2713, column: 21, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !426, line: 2712, column: 9)
!5041 = !DILocation(line: 2713, column: 28, scope: !5040)
!5042 = !DILocation(line: 2714, column: 18, scope: !5040)
!5043 = !DILocation(line: 2713, column: 11, scope: !5040)
!5044 = !DILocation(line: 2715, column: 11, scope: !5040)
!5045 = !DILocalVariable(name: "symlink_err", scope: !5029, file: !426, line: 2718, type: !7)
!5046 = !DILocation(line: 2718, column: 11, scope: !5029)
!5047 = !DILocation(line: 2718, column: 42, scope: !5029)
!5048 = !DILocation(line: 2718, column: 66, scope: !5029)
!5049 = !DILocation(line: 2719, column: 42, scope: !5029)
!5050 = !DILocation(line: 2719, column: 45, scope: !5029)
!5051 = !DILocation(line: 2718, column: 25, scope: !5029)
!5052 = !DILocation(line: 2720, column: 15, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5029, file: !426, line: 2720, column: 11)
!5054 = !DILocation(line: 2720, column: 13, scope: !5053)
!5055 = !DILocation(line: 2720, column: 27, scope: !5053)
!5056 = !DILocation(line: 2720, column: 30, scope: !5053)
!5057 = !DILocation(line: 2720, column: 33, scope: !5053)
!5058 = !DILocation(line: 2720, column: 40, scope: !5053)
!5059 = !DILocation(line: 2720, column: 44, scope: !5053)
!5060 = !DILocation(line: 2720, column: 52, scope: !5053)
!5061 = !DILocation(line: 2720, column: 55, scope: !5053)
!5062 = !DILocation(line: 2721, column: 11, scope: !5053)
!5063 = !DILocation(line: 2721, column: 21, scope: !5053)
!5064 = !DILocation(line: 2721, column: 40, scope: !5053)
!5065 = !DILocation(line: 2721, column: 32, scope: !5053)
!5066 = !DILocation(line: 2721, column: 29, scope: !5053)
!5067 = !DILocation(line: 2720, column: 11, scope: !5029)
!5068 = !DILocalVariable(name: "dest_link_val", scope: !5069, file: !426, line: 2727, type: !9)
!5069 = distinct !DILexicalBlock(scope: !5053, file: !426, line: 2722, column: 9)
!5070 = !DILocation(line: 2727, column: 17, scope: !5069)
!5071 = !DILocation(line: 2728, column: 34, scope: !5069)
!5072 = !DILocation(line: 2728, column: 51, scope: !5069)
!5073 = !DILocation(line: 2728, column: 13, scope: !5069)
!5074 = !DILocation(line: 2729, column: 15, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5069, file: !426, line: 2729, column: 15)
!5076 = !DILocation(line: 2729, column: 15, scope: !5069)
!5077 = !DILocation(line: 2731, column: 19, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !426, line: 2731, column: 19)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !426, line: 2730, column: 13)
!5080 = !DILocation(line: 2731, column: 19, scope: !5079)
!5081 = !DILocation(line: 2732, column: 29, scope: !5078)
!5082 = !DILocation(line: 2732, column: 17, scope: !5078)
!5083 = !DILocation(line: 2733, column: 21, scope: !5079)
!5084 = !DILocation(line: 2733, column: 15, scope: !5079)
!5085 = !DILocation(line: 2734, column: 13, scope: !5079)
!5086 = !DILocation(line: 2735, column: 9, scope: !5069)
!5087 = !DILocation(line: 2736, column: 13, scope: !5029)
!5088 = !DILocation(line: 2736, column: 7, scope: !5029)
!5089 = !DILocation(line: 2737, column: 15, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5029, file: !426, line: 2737, column: 11)
!5091 = !DILocation(line: 2737, column: 13, scope: !5090)
!5092 = !DILocation(line: 2737, column: 11, scope: !5029)
!5093 = !DILocation(line: 2739, column: 21, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !426, line: 2738, column: 9)
!5095 = !DILocation(line: 2739, column: 34, scope: !5094)
!5096 = !DILocation(line: 2740, column: 18, scope: !5094)
!5097 = !DILocation(line: 2739, column: 11, scope: !5094)
!5098 = !DILocation(line: 2741, column: 11, scope: !5094)
!5099 = !DILocation(line: 2744, column: 11, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5029, file: !426, line: 2744, column: 11)
!5101 = !DILocation(line: 2744, column: 14, scope: !5100)
!5102 = !DILocation(line: 2744, column: 11, scope: !5029)
!5103 = !DILocation(line: 2745, column: 9, scope: !5100)
!5104 = !DILocation(line: 2747, column: 11, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5029, file: !426, line: 2747, column: 11)
!5106 = !DILocation(line: 2747, column: 14, scope: !5105)
!5107 = !DILocation(line: 2747, column: 11, scope: !5029)
!5108 = !DILocation(line: 2752, column: 26, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !426, line: 2751, column: 15)
!5110 = distinct !DILexicalBlock(scope: !5105, file: !426, line: 2748, column: 9)
!5111 = !DILocation(line: 2752, column: 43, scope: !5109)
!5112 = !DILocation(line: 2752, column: 58, scope: !5109)
!5113 = !DILocation(line: 2752, column: 18, scope: !5109)
!5114 = !DILocation(line: 2752, column: 66, scope: !5109)
!5115 = !DILocation(line: 2753, column: 15, scope: !5109)
!5116 = !DILocation(line: 2753, column: 38, scope: !5109)
!5117 = !DILocation(line: 2753, column: 20, scope: !5109)
!5118 = !DILocation(line: 2751, column: 15, scope: !5110)
!5119 = !DILocation(line: 2755, column: 25, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5109, file: !426, line: 2754, column: 13)
!5121 = !DILocation(line: 2755, column: 32, scope: !5120)
!5122 = !DILocation(line: 2756, column: 22, scope: !5120)
!5123 = !DILocation(line: 2755, column: 15, scope: !5120)
!5124 = !DILocation(line: 2757, column: 19, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5120, file: !426, line: 2757, column: 19)
!5126 = !DILocation(line: 2757, column: 22, scope: !5125)
!5127 = !DILocation(line: 2757, column: 19, scope: !5120)
!5128 = !DILocation(line: 2758, column: 17, scope: !5125)
!5129 = !DILocation(line: 2759, column: 13, scope: !5120)
!5130 = !DILocation(line: 2767, column: 9, scope: !5110)
!5131 = !DILocation(line: 2768, column: 5, scope: !5029)
!5132 = !DILocation(line: 2771, column: 20, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5026, file: !426, line: 2770, column: 5)
!5134 = !DILocation(line: 2771, column: 51, scope: !5133)
!5135 = !DILocation(line: 2771, column: 7, scope: !5133)
!5136 = !DILocation(line: 2772, column: 7, scope: !5133)
!5137 = !DILocation(line: 2777, column: 8, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2777, column: 7)
!5139 = !DILocation(line: 2777, column: 16, scope: !5138)
!5140 = !DILocation(line: 2777, column: 20, scope: !5138)
!5141 = !DILocation(line: 2777, column: 23, scope: !5138)
!5142 = !DILocation(line: 2777, column: 39, scope: !5138)
!5143 = !DILocation(line: 2777, column: 43, scope: !5138)
!5144 = !DILocation(line: 2778, column: 7, scope: !5138)
!5145 = !DILocation(line: 2778, column: 11, scope: !5138)
!5146 = !DILocation(line: 2778, column: 14, scope: !5138)
!5147 = !DILocation(line: 2778, column: 35, scope: !5138)
!5148 = !DILocation(line: 2778, column: 38, scope: !5138)
!5149 = !DILocation(line: 2778, column: 41, scope: !5138)
!5150 = !DILocation(line: 2777, column: 7, scope: !3785)
!5151 = !DILocation(line: 2780, column: 36, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !426, line: 2780, column: 11)
!5153 = distinct !DILexicalBlock(scope: !5138, file: !426, line: 2779, column: 5)
!5154 = !DILocation(line: 2780, column: 46, scope: !5152)
!5155 = !DILocation(line: 2780, column: 49, scope: !5152)
!5156 = !DILocation(line: 2781, column: 43, scope: !5152)
!5157 = !DILocation(line: 2780, column: 13, scope: !5152)
!5158 = !DILocation(line: 2780, column: 11, scope: !5153)
!5159 = !DILocation(line: 2783, column: 16, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !426, line: 2783, column: 16)
!5161 = distinct !DILexicalBlock(scope: !5152, file: !426, line: 2782, column: 9)
!5162 = !DILocation(line: 2783, column: 19, scope: !5160)
!5163 = !DILocation(line: 2783, column: 16, scope: !5161)
!5164 = !DILocation(line: 2784, column: 14, scope: !5160)
!5165 = !DILocation(line: 2785, column: 9, scope: !5161)
!5166 = !DILocation(line: 2786, column: 5, scope: !5153)
!5167 = !DILocation(line: 2788, column: 7, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2788, column: 7)
!5169 = !DILocation(line: 2788, column: 24, scope: !5168)
!5170 = !DILocation(line: 2788, column: 27, scope: !5168)
!5171 = !DILocation(line: 2788, column: 30, scope: !5168)
!5172 = !DILocation(line: 2788, column: 7, scope: !3785)
!5173 = !DILocalVariable(name: "sb", scope: !5174, file: !426, line: 2792, type: !462)
!5174 = distinct !DILexicalBlock(scope: !5168, file: !426, line: 2789, column: 5)
!5175 = !DILocation(line: 2792, column: 19, scope: !5174)
!5176 = !DILocation(line: 2793, column: 18, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !426, line: 2793, column: 11)
!5178 = !DILocation(line: 2793, column: 11, scope: !5177)
!5179 = !DILocation(line: 2793, column: 33, scope: !5177)
!5180 = !DILocation(line: 2793, column: 11, scope: !5174)
!5181 = !DILocation(line: 2794, column: 22, scope: !5177)
!5182 = !DILocation(line: 2794, column: 25, scope: !5177)
!5183 = !DILocation(line: 2794, column: 36, scope: !5177)
!5184 = !DILocation(line: 2794, column: 9, scope: !5177)
!5185 = !DILocation(line: 2795, column: 5, scope: !5174)
!5186 = !DILocation(line: 2799, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2799, column: 7)
!5188 = !DILocation(line: 2799, column: 10, scope: !5187)
!5189 = !DILocation(line: 2799, column: 20, scope: !5187)
!5190 = !DILocation(line: 2799, column: 25, scope: !5187)
!5191 = !DILocation(line: 2799, column: 7, scope: !3785)
!5192 = !DILocation(line: 2802, column: 12, scope: !5187)
!5193 = !DILocation(line: 2802, column: 5, scope: !5187)
!5194 = !DILocation(line: 2804, column: 7, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2804, column: 7)
!5196 = !DILocation(line: 2804, column: 7, scope: !3785)
!5197 = !DILocation(line: 2805, column: 12, scope: !5195)
!5198 = !DILocation(line: 2805, column: 5, scope: !5195)
!5199 = !DILocation(line: 2819, column: 7, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2819, column: 7)
!5201 = !DILocation(line: 2819, column: 10, scope: !5200)
!5202 = !DILocation(line: 2819, column: 7, scope: !3785)
!5203 = !DILocalVariable(name: "timespec", scope: !5204, file: !426, line: 2821, type: !510)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !426, line: 2820, column: 5)
!5205 = !DILocation(line: 2821, column: 23, scope: !5204)
!5206 = !DILocation(line: 2822, column: 7, scope: !5204)
!5207 = !DILocation(line: 2822, column: 21, scope: !5204)
!5208 = !DILocation(line: 2823, column: 7, scope: !5204)
!5209 = !DILocation(line: 2823, column: 21, scope: !5204)
!5210 = !DILocation(line: 2825, column: 12, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5204, file: !426, line: 2825, column: 11)
!5212 = !DILocation(line: 2826, column: 31, scope: !5211)
!5213 = !DILocation(line: 2826, column: 41, scope: !5211)
!5214 = !DILocation(line: 2826, column: 14, scope: !5211)
!5215 = !DILocation(line: 2827, column: 23, scope: !5211)
!5216 = !DILocation(line: 2827, column: 33, scope: !5211)
!5217 = !DILocation(line: 2827, column: 14, scope: !5211)
!5218 = !DILocation(line: 2828, column: 11, scope: !5211)
!5219 = !DILocation(line: 2825, column: 11, scope: !5204)
!5220 = !DILocation(line: 2830, column: 21, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !426, line: 2829, column: 9)
!5222 = !DILocation(line: 2830, column: 28, scope: !5221)
!5223 = !DILocation(line: 2830, column: 58, scope: !5221)
!5224 = !DILocation(line: 2830, column: 11, scope: !5221)
!5225 = !DILocation(line: 2831, column: 15, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !426, line: 2831, column: 15)
!5227 = !DILocation(line: 2831, column: 18, scope: !5226)
!5228 = !DILocation(line: 2831, column: 15, scope: !5221)
!5229 = !DILocation(line: 2832, column: 13, scope: !5226)
!5230 = !DILocation(line: 2833, column: 9, scope: !5221)
!5231 = !DILocation(line: 2834, column: 5, scope: !5204)
!5232 = !DILocation(line: 2837, column: 8, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2837, column: 7)
!5234 = !DILocation(line: 2837, column: 24, scope: !5233)
!5235 = !DILocation(line: 2837, column: 27, scope: !5233)
!5236 = !DILocation(line: 2837, column: 30, scope: !5233)
!5237 = !DILocation(line: 2838, column: 7, scope: !5233)
!5238 = !DILocation(line: 2838, column: 11, scope: !5233)
!5239 = !DILocation(line: 2838, column: 19, scope: !5233)
!5240 = !DILocation(line: 2838, column: 23, scope: !5233)
!5241 = !DILocation(line: 2837, column: 7, scope: !3785)
!5242 = !DILocation(line: 2840, column: 26, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5233, file: !426, line: 2839, column: 5)
!5244 = !DILocation(line: 2840, column: 29, scope: !5243)
!5245 = !DILocation(line: 2840, column: 52, scope: !5243)
!5246 = !DILocation(line: 2840, column: 15, scope: !5243)
!5247 = !DILocation(line: 2840, column: 7, scope: !5243)
!5248 = !DILocation(line: 2843, column: 11, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5243, file: !426, line: 2841, column: 9)
!5250 = !DILocation(line: 2846, column: 20, scope: !5249)
!5251 = !DILocation(line: 2847, column: 11, scope: !5249)
!5252 = !DILocation(line: 2849, column: 5, scope: !5243)
!5253 = !DILocation(line: 2852, column: 7, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2852, column: 7)
!5255 = !DILocation(line: 2852, column: 10, scope: !5254)
!5256 = !DILocation(line: 2852, column: 25, scope: !5254)
!5257 = !DILocation(line: 2852, column: 41, scope: !5254)
!5258 = !DILocation(line: 2852, column: 55, scope: !5254)
!5259 = !DILocation(line: 2852, column: 69, scope: !5254)
!5260 = !DILocation(line: 2852, column: 30, scope: !5254)
!5261 = !DILocation(line: 2853, column: 7, scope: !5254)
!5262 = !DILocation(line: 2853, column: 10, scope: !5254)
!5263 = !DILocation(line: 2853, column: 13, scope: !5254)
!5264 = !DILocation(line: 2852, column: 7, scope: !3785)
!5265 = !DILocation(line: 2854, column: 5, scope: !5254)
!5266 = !DILocation(line: 2857, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2857, column: 7)
!5268 = !DILocation(line: 2857, column: 7, scope: !3785)
!5269 = !DILocation(line: 2858, column: 12, scope: !5267)
!5270 = !DILocation(line: 2858, column: 5, scope: !5267)
!5271 = !DILocation(line: 2860, column: 15, scope: !3785)
!5272 = !DILocation(line: 2860, column: 3, scope: !3785)
!5273 = !DILocation(line: 2862, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2862, column: 7)
!5275 = !DILocation(line: 2862, column: 10, scope: !5274)
!5276 = !DILocation(line: 2862, column: 24, scope: !5274)
!5277 = !DILocation(line: 2862, column: 27, scope: !5274)
!5278 = !DILocation(line: 2862, column: 30, scope: !5274)
!5279 = !DILocation(line: 2862, column: 7, scope: !3785)
!5280 = !DILocation(line: 2864, column: 21, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !426, line: 2864, column: 11)
!5282 = distinct !DILexicalBlock(scope: !5274, file: !426, line: 2863, column: 5)
!5283 = !DILocation(line: 2864, column: 35, scope: !5281)
!5284 = !DILocation(line: 2864, column: 49, scope: !5281)
!5285 = !DILocation(line: 2864, column: 11, scope: !5281)
!5286 = !DILocation(line: 2864, column: 59, scope: !5281)
!5287 = !DILocation(line: 2865, column: 11, scope: !5281)
!5288 = !DILocation(line: 2865, column: 14, scope: !5281)
!5289 = !DILocation(line: 2865, column: 17, scope: !5281)
!5290 = !DILocation(line: 2864, column: 11, scope: !5282)
!5291 = !DILocation(line: 2866, column: 9, scope: !5281)
!5292 = !DILocation(line: 2867, column: 5, scope: !5282)
!5293 = !DILocation(line: 2868, column: 12, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5274, file: !426, line: 2868, column: 12)
!5295 = !DILocation(line: 2868, column: 15, scope: !5294)
!5296 = !DILocation(line: 2868, column: 12, scope: !5274)
!5297 = !DILocation(line: 2870, column: 20, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !426, line: 2870, column: 11)
!5299 = distinct !DILexicalBlock(scope: !5294, file: !426, line: 2869, column: 5)
!5300 = !DILocation(line: 2870, column: 34, scope: !5298)
!5301 = !DILocation(line: 2870, column: 37, scope: !5298)
!5302 = !DILocation(line: 2870, column: 11, scope: !5298)
!5303 = !DILocation(line: 2870, column: 43, scope: !5298)
!5304 = !DILocation(line: 2870, column: 11, scope: !5299)
!5305 = !DILocation(line: 2871, column: 9, scope: !5298)
!5306 = !DILocation(line: 2872, column: 5, scope: !5299)
!5307 = !DILocation(line: 2873, column: 12, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5294, file: !426, line: 2873, column: 12)
!5309 = !DILocation(line: 2873, column: 15, scope: !5308)
!5310 = !DILocation(line: 2873, column: 41, scope: !5308)
!5311 = !DILocation(line: 2873, column: 44, scope: !5308)
!5312 = !DILocation(line: 2873, column: 12, scope: !5294)
!5313 = !DILocalVariable(name: "default_permissions", scope: !5314, file: !426, line: 2875, type: !7)
!5314 = distinct !DILexicalBlock(scope: !5308, file: !426, line: 2874, column: 5)
!5315 = !DILocation(line: 2875, column: 11, scope: !5314)
!5316 = !DILocation(line: 2875, column: 33, scope: !5314)
!5317 = !DILocation(line: 2875, column: 52, scope: !5314)
!5318 = !DILocation(line: 2875, column: 55, scope: !5314)
!5319 = !DILocation(line: 2877, column: 20, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5314, file: !426, line: 2877, column: 11)
!5321 = !DILocation(line: 2877, column: 34, scope: !5320)
!5322 = !DILocation(line: 2877, column: 57, scope: !5320)
!5323 = !DILocation(line: 2877, column: 56, scope: !5320)
!5324 = !DILocation(line: 2877, column: 54, scope: !5320)
!5325 = !DILocation(line: 2877, column: 11, scope: !5320)
!5326 = !DILocation(line: 2877, column: 74, scope: !5320)
!5327 = !DILocation(line: 2877, column: 11, scope: !5314)
!5328 = !DILocation(line: 2878, column: 9, scope: !5320)
!5329 = !DILocation(line: 2879, column: 5, scope: !5314)
!5330 = !DILocation(line: 2882, column: 11, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !426, line: 2882, column: 11)
!5332 = distinct !DILexicalBlock(scope: !5308, file: !426, line: 2881, column: 5)
!5333 = !DILocation(line: 2882, column: 11, scope: !5332)
!5334 = !DILocation(line: 2884, column: 36, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !426, line: 2883, column: 9)
!5336 = !DILocation(line: 2884, column: 34, scope: !5335)
!5337 = !DILocation(line: 2884, column: 31, scope: !5335)
!5338 = !DILocation(line: 2886, column: 15, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5335, file: !426, line: 2886, column: 15)
!5340 = !DILocation(line: 2886, column: 35, scope: !5339)
!5341 = !DILocation(line: 2886, column: 39, scope: !5339)
!5342 = !DILocation(line: 2886, column: 15, scope: !5335)
!5343 = !DILocation(line: 2894, column: 19, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5345, file: !426, line: 2894, column: 19)
!5345 = distinct !DILexicalBlock(scope: !5339, file: !426, line: 2887, column: 13)
!5346 = !DILocation(line: 2894, column: 27, scope: !5344)
!5347 = !DILocation(line: 2894, column: 37, scope: !5344)
!5348 = !DILocation(line: 2894, column: 30, scope: !5344)
!5349 = !DILocation(line: 2894, column: 56, scope: !5344)
!5350 = !DILocation(line: 2894, column: 19, scope: !5345)
!5351 = !DILocation(line: 2896, column: 29, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5344, file: !426, line: 2895, column: 17)
!5353 = !DILocation(line: 2896, column: 36, scope: !5352)
!5354 = !DILocation(line: 2896, column: 57, scope: !5352)
!5355 = !DILocation(line: 2896, column: 19, scope: !5352)
!5356 = !DILocation(line: 2897, column: 19, scope: !5352)
!5357 = !DILocation(line: 2899, column: 33, scope: !5345)
!5358 = !DILocation(line: 2899, column: 24, scope: !5345)
!5359 = !DILocation(line: 2900, column: 19, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5345, file: !426, line: 2900, column: 19)
!5361 = !DILocation(line: 2900, column: 42, scope: !5360)
!5362 = !DILocation(line: 2900, column: 41, scope: !5360)
!5363 = !DILocation(line: 2900, column: 39, scope: !5360)
!5364 = !DILocation(line: 2900, column: 19, scope: !5345)
!5365 = !DILocation(line: 2901, column: 34, scope: !5360)
!5366 = !DILocation(line: 2901, column: 17, scope: !5360)
!5367 = !DILocation(line: 2902, column: 13, scope: !5345)
!5368 = !DILocation(line: 2903, column: 9, scope: !5335)
!5369 = !DILocation(line: 2905, column: 11, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5332, file: !426, line: 2905, column: 11)
!5371 = !DILocation(line: 2905, column: 11, scope: !5332)
!5372 = !DILocation(line: 2907, column: 23, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !426, line: 2907, column: 15)
!5374 = distinct !DILexicalBlock(scope: !5370, file: !426, line: 2906, column: 9)
!5375 = !DILocation(line: 2907, column: 33, scope: !5373)
!5376 = !DILocation(line: 2907, column: 44, scope: !5373)
!5377 = !DILocation(line: 2907, column: 42, scope: !5373)
!5378 = !DILocation(line: 2907, column: 15, scope: !5373)
!5379 = !DILocation(line: 2907, column: 65, scope: !5373)
!5380 = !DILocation(line: 2907, column: 15, scope: !5374)
!5381 = !DILocation(line: 2909, column: 25, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5373, file: !426, line: 2908, column: 13)
!5383 = !DILocation(line: 2909, column: 32, scope: !5382)
!5384 = !DILocation(line: 2910, column: 22, scope: !5382)
!5385 = !DILocation(line: 2909, column: 15, scope: !5382)
!5386 = !DILocation(line: 2911, column: 19, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5382, file: !426, line: 2911, column: 19)
!5388 = !DILocation(line: 2911, column: 22, scope: !5387)
!5389 = !DILocation(line: 2911, column: 19, scope: !5382)
!5390 = !DILocation(line: 2912, column: 17, scope: !5387)
!5391 = !DILocation(line: 2913, column: 13, scope: !5382)
!5392 = !DILocation(line: 2914, column: 9, scope: !5374)
!5393 = !DILocation(line: 2917, column: 10, scope: !3785)
!5394 = !DILocation(line: 2917, column: 3, scope: !3785)
!5395 = !DILabel(scope: !3785, name: "un_backup", file: !426, line: 2919)
!5396 = !DILocation(line: 2919, column: 1, scope: !3785)
!5397 = !DILocation(line: 2921, column: 7, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2921, column: 7)
!5399 = !DILocation(line: 2921, column: 10, scope: !5398)
!5400 = !DILocation(line: 2921, column: 7, scope: !3785)
!5401 = !DILocation(line: 2922, column: 5, scope: !5398)
!5402 = !DILocation(line: 2930, column: 7, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2930, column: 7)
!5404 = !DILocation(line: 2930, column: 20, scope: !5403)
!5405 = !DILocation(line: 2930, column: 7, scope: !3785)
!5406 = !DILocation(line: 2931, column: 28, scope: !5403)
!5407 = !DILocation(line: 2931, column: 43, scope: !5403)
!5408 = !DILocation(line: 2931, column: 5, scope: !5403)
!5409 = !DILocation(line: 2933, column: 7, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !3785, file: !426, line: 2933, column: 7)
!5411 = !DILocation(line: 2933, column: 7, scope: !3785)
!5412 = !DILocation(line: 2935, column: 19, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !426, line: 2935, column: 11)
!5414 = distinct !DILexicalBlock(scope: !5410, file: !426, line: 2934, column: 5)
!5415 = !DILocation(line: 2935, column: 31, scope: !5413)
!5416 = !DILocation(line: 2935, column: 11, scope: !5413)
!5417 = !DILocation(line: 2935, column: 41, scope: !5413)
!5418 = !DILocation(line: 2935, column: 11, scope: !5414)
!5419 = !DILocation(line: 2936, column: 19, scope: !5413)
!5420 = !DILocation(line: 2936, column: 26, scope: !5413)
!5421 = !DILocation(line: 2936, column: 52, scope: !5413)
!5422 = !DILocation(line: 2936, column: 9, scope: !5413)
!5423 = !DILocation(line: 2939, column: 15, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !426, line: 2939, column: 15)
!5425 = distinct !DILexicalBlock(scope: !5413, file: !426, line: 2938, column: 9)
!5426 = !DILocation(line: 2939, column: 18, scope: !5424)
!5427 = !DILocation(line: 2939, column: 15, scope: !5425)
!5428 = !DILocation(line: 2940, column: 21, scope: !5424)
!5429 = !DILocation(line: 2941, column: 21, scope: !5424)
!5430 = !DILocation(line: 2941, column: 48, scope: !5424)
!5431 = !DILocation(line: 2940, column: 13, scope: !5424)
!5432 = !DILocation(line: 2943, column: 5, scope: !5414)
!5433 = !DILocation(line: 2944, column: 3, scope: !3785)
!5434 = !DILocation(line: 2945, column: 1, scope: !3785)
!5435 = distinct !DISubprogram(name: "should_dereference", scope: !426, file: !426, line: 1804, type: !5436, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!142, !3460, !142}
!5438 = !DILocalVariable(name: "x", arg: 1, scope: !5435, file: !426, line: 1804, type: !3460)
!5439 = !DILocation(line: 1804, column: 46, scope: !5435)
!5440 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !5435, file: !426, line: 1804, type: !142)
!5441 = !DILocation(line: 1804, column: 54, scope: !5435)
!5442 = !DILocation(line: 1806, column: 10, scope: !5435)
!5443 = !DILocation(line: 1806, column: 13, scope: !5435)
!5444 = !DILocation(line: 1806, column: 25, scope: !5435)
!5445 = !DILocation(line: 1807, column: 10, scope: !5435)
!5446 = !DILocation(line: 1807, column: 14, scope: !5435)
!5447 = !DILocation(line: 1807, column: 17, scope: !5435)
!5448 = !DILocation(line: 1807, column: 29, scope: !5435)
!5449 = !DILocation(line: 1808, column: 14, scope: !5435)
!5450 = !DILocation(line: 1808, column: 17, scope: !5435)
!5451 = !DILocation(line: 0, scope: !5435)
!5452 = !DILocation(line: 1806, column: 3, scope: !5435)
!5453 = distinct !DISubprogram(name: "same_file_ok", scope: !426, file: !426, line: 1428, type: !5454, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!142, !183, !511, !183, !511, !3460, !3724}
!5456 = !DILocalVariable(name: "src_name", arg: 1, scope: !5453, file: !426, line: 1428, type: !183)
!5457 = !DILocation(line: 1428, column: 27, scope: !5453)
!5458 = !DILocalVariable(name: "src_sb", arg: 2, scope: !5453, file: !426, line: 1428, type: !511)
!5459 = !DILocation(line: 1428, column: 56, scope: !5453)
!5460 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5453, file: !426, line: 1429, type: !183)
!5461 = !DILocation(line: 1429, column: 27, scope: !5453)
!5462 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !5453, file: !426, line: 1429, type: !511)
!5463 = !DILocation(line: 1429, column: 56, scope: !5453)
!5464 = !DILocalVariable(name: "x", arg: 5, scope: !5453, file: !426, line: 1430, type: !3460)
!5465 = !DILocation(line: 1430, column: 40, scope: !5453)
!5466 = !DILocalVariable(name: "return_now", arg: 6, scope: !5453, file: !426, line: 1430, type: !3724)
!5467 = !DILocation(line: 1430, column: 49, scope: !5453)
!5468 = !DILocalVariable(name: "src_sb_link", scope: !5453, file: !426, line: 1432, type: !511)
!5469 = !DILocation(line: 1432, column: 22, scope: !5453)
!5470 = !DILocalVariable(name: "dst_sb_link", scope: !5453, file: !426, line: 1433, type: !511)
!5471 = !DILocation(line: 1433, column: 22, scope: !5453)
!5472 = !DILocalVariable(name: "tmp_dst_sb", scope: !5453, file: !426, line: 1434, type: !462)
!5473 = !DILocation(line: 1434, column: 15, scope: !5453)
!5474 = !DILocalVariable(name: "tmp_src_sb", scope: !5453, file: !426, line: 1435, type: !462)
!5475 = !DILocation(line: 1435, column: 15, scope: !5453)
!5476 = !DILocalVariable(name: "same_link", scope: !5453, file: !426, line: 1437, type: !142)
!5477 = !DILocation(line: 1437, column: 8, scope: !5453)
!5478 = !DILocalVariable(name: "same", scope: !5453, file: !426, line: 1438, type: !142)
!5479 = !DILocation(line: 1438, column: 8, scope: !5453)
!5480 = !DILocation(line: 1438, column: 15, scope: !5453)
!5481 = !DILocation(line: 0, scope: !5453)
!5482 = !DILocation(line: 1440, column: 4, scope: !5453)
!5483 = !DILocation(line: 1440, column: 15, scope: !5453)
!5484 = !DILocation(line: 1447, column: 7, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1447, column: 7)
!5486 = !DILocation(line: 1447, column: 12, scope: !5485)
!5487 = !DILocation(line: 1447, column: 15, scope: !5485)
!5488 = !DILocation(line: 1447, column: 18, scope: !5485)
!5489 = !DILocation(line: 1447, column: 7, scope: !5453)
!5490 = !DILocation(line: 1449, column: 8, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5485, file: !426, line: 1448, column: 5)
!5492 = !DILocation(line: 1449, column: 19, scope: !5491)
!5493 = !DILocation(line: 1450, column: 7, scope: !5491)
!5494 = !DILocation(line: 1453, column: 7, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1453, column: 7)
!5496 = !DILocation(line: 1453, column: 10, scope: !5495)
!5497 = !DILocation(line: 1453, column: 22, scope: !5495)
!5498 = !DILocation(line: 1453, column: 7, scope: !5453)
!5499 = !DILocation(line: 1455, column: 19, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5495, file: !426, line: 1454, column: 5)
!5501 = !DILocation(line: 1455, column: 17, scope: !5500)
!5502 = !DILocation(line: 1460, column: 11, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !426, line: 1460, column: 11)
!5504 = !DILocation(line: 1460, column: 37, scope: !5503)
!5505 = !DILocation(line: 1460, column: 40, scope: !5503)
!5506 = !DILocation(line: 1460, column: 11, scope: !5500)
!5507 = !DILocalVariable(name: "sn", scope: !5508, file: !426, line: 1462, type: !142)
!5508 = distinct !DILexicalBlock(scope: !5503, file: !426, line: 1461, column: 9)
!5509 = !DILocation(line: 1462, column: 16, scope: !5508)
!5510 = !DILocation(line: 1462, column: 32, scope: !5508)
!5511 = !DILocation(line: 1462, column: 42, scope: !5508)
!5512 = !DILocation(line: 1462, column: 21, scope: !5508)
!5513 = !DILocation(line: 1463, column: 18, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5508, file: !426, line: 1463, column: 16)
!5515 = !DILocation(line: 1463, column: 16, scope: !5508)
!5516 = !DILocation(line: 1466, column: 19, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !426, line: 1466, column: 19)
!5518 = distinct !DILexicalBlock(scope: !5514, file: !426, line: 1464, column: 13)
!5519 = !DILocation(line: 1466, column: 22, scope: !5517)
!5520 = !DILocation(line: 1466, column: 34, scope: !5517)
!5521 = !DILocation(line: 1466, column: 19, scope: !5518)
!5522 = !DILocation(line: 1467, column: 17, scope: !5517)
!5523 = !DILocation(line: 1473, column: 19, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5518, file: !426, line: 1473, column: 19)
!5525 = !DILocation(line: 1473, column: 19, scope: !5518)
!5526 = !DILocation(line: 1475, column: 20, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5524, file: !426, line: 1474, column: 17)
!5528 = !DILocation(line: 1475, column: 31, scope: !5527)
!5529 = !DILocation(line: 1476, column: 28, scope: !5527)
!5530 = !DILocation(line: 1476, column: 31, scope: !5527)
!5531 = !DILocation(line: 1476, column: 26, scope: !5527)
!5532 = !DILocation(line: 1476, column: 19, scope: !5527)
!5533 = !DILocation(line: 1478, column: 13, scope: !5518)
!5534 = !DILocation(line: 1480, column: 20, scope: !5508)
!5535 = !DILocation(line: 1480, column: 18, scope: !5508)
!5536 = !DILocation(line: 1480, column: 11, scope: !5508)
!5537 = !DILocation(line: 1483, column: 21, scope: !5500)
!5538 = !DILocation(line: 1483, column: 19, scope: !5500)
!5539 = !DILocation(line: 1484, column: 21, scope: !5500)
!5540 = !DILocation(line: 1484, column: 19, scope: !5500)
!5541 = !DILocation(line: 1485, column: 5, scope: !5500)
!5542 = !DILocation(line: 1488, column: 12, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !426, line: 1488, column: 11)
!5544 = distinct !DILexicalBlock(scope: !5495, file: !426, line: 1487, column: 5)
!5545 = !DILocation(line: 1488, column: 11, scope: !5544)
!5546 = !DILocation(line: 1489, column: 9, scope: !5543)
!5547 = !DILocation(line: 1491, column: 18, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5544, file: !426, line: 1491, column: 11)
!5549 = !DILocation(line: 1491, column: 11, scope: !5548)
!5550 = !DILocation(line: 1491, column: 41, scope: !5548)
!5551 = !DILocation(line: 1492, column: 11, scope: !5548)
!5552 = !DILocation(line: 1492, column: 21, scope: !5548)
!5553 = !DILocation(line: 1492, column: 14, scope: !5548)
!5554 = !DILocation(line: 1492, column: 44, scope: !5548)
!5555 = !DILocation(line: 1491, column: 11, scope: !5544)
!5556 = !DILocation(line: 1493, column: 9, scope: !5548)
!5557 = !DILocation(line: 1495, column: 19, scope: !5544)
!5558 = !DILocation(line: 1496, column: 19, scope: !5544)
!5559 = !DILocation(line: 1498, column: 19, scope: !5544)
!5560 = !DILocation(line: 0, scope: !5544)
!5561 = !DILocation(line: 1498, column: 17, scope: !5544)
!5562 = !DILocation(line: 1505, column: 11, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5544, file: !426, line: 1505, column: 11)
!5564 = !DILocation(line: 1505, column: 42, scope: !5563)
!5565 = !DILocation(line: 1505, column: 45, scope: !5563)
!5566 = !DILocation(line: 1506, column: 11, scope: !5563)
!5567 = !DILocation(line: 1506, column: 14, scope: !5563)
!5568 = !DILocation(line: 1506, column: 17, scope: !5563)
!5569 = !DILocation(line: 1505, column: 11, scope: !5544)
!5570 = !DILocation(line: 1507, column: 9, scope: !5563)
!5571 = !DILocation(line: 1515, column: 7, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1515, column: 7)
!5573 = !DILocation(line: 1515, column: 10, scope: !5572)
!5574 = !DILocation(line: 1515, column: 22, scope: !5572)
!5575 = !DILocation(line: 1515, column: 7, scope: !5453)
!5576 = !DILocation(line: 1517, column: 12, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !426, line: 1517, column: 11)
!5578 = distinct !DILexicalBlock(scope: !5572, file: !426, line: 1516, column: 5)
!5579 = !DILocation(line: 1517, column: 11, scope: !5578)
!5580 = !DILocation(line: 1535, column: 18, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !426, line: 1535, column: 16)
!5582 = distinct !DILexicalBlock(scope: !5577, file: !426, line: 1518, column: 9)
!5583 = !DILocation(line: 1535, column: 21, scope: !5581)
!5584 = !DILocation(line: 1536, column: 16, scope: !5581)
!5585 = !DILocation(line: 1536, column: 19, scope: !5581)
!5586 = !DILocation(line: 1536, column: 22, scope: !5581)
!5587 = !DILocation(line: 1536, column: 34, scope: !5581)
!5588 = !DILocation(line: 1537, column: 16, scope: !5581)
!5589 = !DILocation(line: 1537, column: 19, scope: !5581)
!5590 = !DILocation(line: 1538, column: 16, scope: !5581)
!5591 = !DILocation(line: 1538, column: 21, scope: !5581)
!5592 = !DILocation(line: 1535, column: 16, scope: !5582)
!5593 = !DILocation(line: 1539, column: 13, scope: !5581)
!5594 = !DILocation(line: 1541, column: 11, scope: !5582)
!5595 = !DILocation(line: 1545, column: 27, scope: !5578)
!5596 = !DILocation(line: 1545, column: 37, scope: !5578)
!5597 = !DILocation(line: 1545, column: 16, scope: !5578)
!5598 = !DILocation(line: 1545, column: 14, scope: !5578)
!5599 = !DILocation(line: 1545, column: 7, scope: !5578)
!5600 = !DILocation(line: 1565, column: 7, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1565, column: 7)
!5602 = !DILocation(line: 1565, column: 10, scope: !5601)
!5603 = !DILocation(line: 1565, column: 20, scope: !5601)
!5604 = !DILocation(line: 1565, column: 23, scope: !5601)
!5605 = !DILocation(line: 1565, column: 26, scope: !5601)
!5606 = !DILocation(line: 1565, column: 7, scope: !5453)
!5607 = !DILocation(line: 1571, column: 11, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !426, line: 1571, column: 11)
!5609 = distinct !DILexicalBlock(scope: !5601, file: !426, line: 1566, column: 5)
!5610 = !DILocation(line: 1571, column: 11, scope: !5609)
!5611 = !DILocation(line: 1572, column: 9, scope: !5608)
!5612 = !DILocation(line: 1576, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !426, line: 1576, column: 11)
!5614 = !DILocation(line: 1577, column: 11, scope: !5613)
!5615 = !DILocation(line: 1577, column: 18, scope: !5613)
!5616 = !DILocation(line: 1577, column: 31, scope: !5613)
!5617 = !DILocation(line: 1577, column: 16, scope: !5613)
!5618 = !DILocation(line: 1578, column: 11, scope: !5613)
!5619 = !DILocation(line: 1578, column: 27, scope: !5613)
!5620 = !DILocation(line: 1578, column: 37, scope: !5613)
!5621 = !DILocation(line: 1578, column: 16, scope: !5613)
!5622 = !DILocation(line: 1576, column: 11, scope: !5609)
!5623 = !DILocation(line: 1579, column: 18, scope: !5613)
!5624 = !DILocation(line: 1579, column: 21, scope: !5613)
!5625 = !DILocation(line: 1579, column: 16, scope: !5613)
!5626 = !DILocation(line: 1579, column: 9, scope: !5613)
!5627 = !DILocation(line: 1580, column: 5, scope: !5609)
!5628 = !DILocation(line: 1584, column: 8, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1584, column: 7)
!5630 = !DILocation(line: 1584, column: 39, scope: !5629)
!5631 = !DILocation(line: 1584, column: 43, scope: !5629)
!5632 = !DILocation(line: 1584, column: 7, scope: !5453)
!5633 = !DILocation(line: 1586, column: 12, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !426, line: 1586, column: 11)
!5635 = distinct !DILexicalBlock(scope: !5629, file: !426, line: 1585, column: 5)
!5636 = !DILocation(line: 1586, column: 11, scope: !5635)
!5637 = !DILocation(line: 1587, column: 9, scope: !5634)
!5638 = !DILocation(line: 1590, column: 11, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !426, line: 1590, column: 11)
!5640 = !DILocation(line: 1590, column: 14, scope: !5639)
!5641 = !DILocation(line: 1590, column: 11, scope: !5635)
!5642 = !DILocation(line: 1592, column: 12, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !426, line: 1591, column: 9)
!5644 = !DILocation(line: 1592, column: 23, scope: !5643)
!5645 = !DILocation(line: 1593, column: 11, scope: !5643)
!5646 = !DILocation(line: 1595, column: 5, scope: !5635)
!5647 = !DILocation(line: 1617, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1617, column: 7)
!5649 = !DILocation(line: 1617, column: 10, scope: !5648)
!5650 = !DILocation(line: 1618, column: 7, scope: !5648)
!5651 = !DILocation(line: 1618, column: 10, scope: !5648)
!5652 = !DILocation(line: 1619, column: 7, scope: !5648)
!5653 = !DILocation(line: 1619, column: 14, scope: !5648)
!5654 = !DILocation(line: 1619, column: 27, scope: !5648)
!5655 = !DILocation(line: 1619, column: 12, scope: !5648)
!5656 = !DILocation(line: 1617, column: 7, scope: !5453)
!5657 = !DILocalVariable(name: "abs_src", scope: !5658, file: !426, line: 1621, type: !9)
!5658 = distinct !DILexicalBlock(scope: !5648, file: !426, line: 1620, column: 5)
!5659 = !DILocation(line: 1621, column: 13, scope: !5658)
!5660 = !DILocation(line: 1621, column: 47, scope: !5658)
!5661 = !DILocation(line: 1621, column: 23, scope: !5658)
!5662 = !DILocation(line: 1622, column: 11, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !426, line: 1622, column: 11)
!5664 = !DILocation(line: 1622, column: 11, scope: !5658)
!5665 = !DILocalVariable(name: "result", scope: !5666, file: !426, line: 1624, type: !142)
!5666 = distinct !DILexicalBlock(scope: !5663, file: !426, line: 1623, column: 9)
!5667 = !DILocation(line: 1624, column: 16, scope: !5666)
!5668 = !DILocation(line: 1624, column: 38, scope: !5666)
!5669 = !DILocation(line: 1624, column: 47, scope: !5666)
!5670 = !DILocation(line: 1624, column: 27, scope: !5666)
!5671 = !DILocation(line: 1624, column: 25, scope: !5666)
!5672 = !DILocation(line: 1625, column: 17, scope: !5666)
!5673 = !DILocation(line: 1625, column: 11, scope: !5666)
!5674 = !DILocation(line: 1626, column: 18, scope: !5666)
!5675 = !DILocation(line: 1626, column: 11, scope: !5666)
!5676 = !DILocation(line: 1628, column: 5, scope: !5658)
!5677 = !DILocation(line: 1631, column: 7, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1631, column: 7)
!5679 = !DILocation(line: 1631, column: 10, scope: !5678)
!5680 = !DILocation(line: 1631, column: 24, scope: !5678)
!5681 = !DILocation(line: 1631, column: 27, scope: !5678)
!5682 = !DILocation(line: 1631, column: 7, scope: !5453)
!5683 = !DILocation(line: 1632, column: 5, scope: !5678)
!5684 = !DILocation(line: 1634, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5453, file: !426, line: 1634, column: 7)
!5686 = !DILocation(line: 1634, column: 10, scope: !5685)
!5687 = !DILocation(line: 1634, column: 22, scope: !5685)
!5688 = !DILocation(line: 1634, column: 7, scope: !5453)
!5689 = !DILocation(line: 1636, column: 14, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !426, line: 1636, column: 12)
!5691 = distinct !DILexicalBlock(scope: !5685, file: !426, line: 1635, column: 5)
!5692 = !DILocation(line: 1636, column: 12, scope: !5691)
!5693 = !DILocation(line: 1637, column: 23, scope: !5690)
!5694 = !DILocation(line: 1637, column: 22, scope: !5690)
!5695 = !DILocation(line: 1637, column: 9, scope: !5690)
!5696 = !DILocation(line: 1638, column: 22, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !426, line: 1638, column: 16)
!5698 = !DILocation(line: 1638, column: 16, scope: !5697)
!5699 = !DILocation(line: 1638, column: 45, scope: !5697)
!5700 = !DILocation(line: 1638, column: 16, scope: !5690)
!5701 = !DILocation(line: 1639, column: 9, scope: !5697)
!5702 = !DILocation(line: 1641, column: 14, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5691, file: !426, line: 1641, column: 12)
!5704 = !DILocation(line: 1641, column: 12, scope: !5691)
!5705 = !DILocation(line: 1642, column: 23, scope: !5703)
!5706 = !DILocation(line: 1642, column: 22, scope: !5703)
!5707 = !DILocation(line: 1642, column: 9, scope: !5703)
!5708 = !DILocation(line: 1643, column: 22, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5703, file: !426, line: 1643, column: 16)
!5710 = !DILocation(line: 1643, column: 16, scope: !5709)
!5711 = !DILocation(line: 1643, column: 45, scope: !5709)
!5712 = !DILocation(line: 1643, column: 16, scope: !5703)
!5713 = !DILocation(line: 1644, column: 9, scope: !5709)
!5714 = !DILocation(line: 1646, column: 14, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5691, file: !426, line: 1646, column: 12)
!5716 = !DILocation(line: 1646, column: 12, scope: !5691)
!5717 = !DILocation(line: 1647, column: 9, scope: !5715)
!5718 = !DILocation(line: 1649, column: 11, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5691, file: !426, line: 1649, column: 11)
!5720 = !DILocation(line: 1649, column: 14, scope: !5719)
!5721 = !DILocation(line: 1649, column: 11, scope: !5691)
!5722 = !DILocation(line: 1655, column: 27, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !426, line: 1650, column: 9)
!5724 = !DILocation(line: 1655, column: 25, scope: !5723)
!5725 = !DILocation(line: 1655, column: 12, scope: !5723)
!5726 = !DILocation(line: 1655, column: 23, scope: !5723)
!5727 = !DILocation(line: 1656, column: 11, scope: !5723)
!5728 = !DILocation(line: 1658, column: 5, scope: !5691)
!5729 = !DILocation(line: 1660, column: 3, scope: !5453)
!5730 = !DILocation(line: 1661, column: 1, scope: !5453)
!5731 = distinct !DISubprogram(name: "create_hard_link", scope: !426, file: !426, line: 1783, type: !5732, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5732 = !DISubroutineType(types: !5733)
!5733 = !{!142, !183, !183, !142, !142, !142}
!5734 = !DILocalVariable(name: "src_name", arg: 1, scope: !5731, file: !426, line: 1783, type: !183)
!5735 = !DILocation(line: 1783, column: 31, scope: !5731)
!5736 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5731, file: !426, line: 1783, type: !183)
!5737 = !DILocation(line: 1783, column: 53, scope: !5731)
!5738 = !DILocalVariable(name: "replace", arg: 3, scope: !5731, file: !426, line: 1784, type: !142)
!5739 = !DILocation(line: 1784, column: 24, scope: !5731)
!5740 = !DILocalVariable(name: "verbose", arg: 4, scope: !5731, file: !426, line: 1784, type: !142)
!5741 = !DILocation(line: 1784, column: 38, scope: !5731)
!5742 = !DILocalVariable(name: "dereference", arg: 5, scope: !5731, file: !426, line: 1784, type: !142)
!5743 = !DILocation(line: 1784, column: 52, scope: !5731)
!5744 = !DILocalVariable(name: "err", scope: !5731, file: !426, line: 1786, type: !7)
!5745 = !DILocation(line: 1786, column: 7, scope: !5731)
!5746 = !DILocation(line: 1786, column: 37, scope: !5731)
!5747 = !DILocation(line: 1786, column: 57, scope: !5731)
!5748 = !DILocation(line: 1787, column: 27, scope: !5731)
!5749 = !DILocation(line: 1788, column: 27, scope: !5731)
!5750 = !DILocation(line: 1786, column: 13, scope: !5731)
!5751 = !DILocation(line: 1789, column: 11, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5731, file: !426, line: 1789, column: 7)
!5753 = !DILocation(line: 1789, column: 9, scope: !5752)
!5754 = !DILocation(line: 1789, column: 7, scope: !5731)
!5755 = !DILocation(line: 1791, column: 17, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !426, line: 1790, column: 5)
!5757 = !DILocation(line: 1791, column: 22, scope: !5756)
!5758 = !DILocation(line: 1792, column: 14, scope: !5756)
!5759 = !DILocation(line: 1792, column: 39, scope: !5756)
!5760 = !DILocation(line: 1791, column: 7, scope: !5756)
!5761 = !DILocation(line: 1793, column: 7, scope: !5756)
!5762 = !DILocation(line: 1795, column: 7, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5731, file: !426, line: 1795, column: 7)
!5764 = !DILocation(line: 1795, column: 11, scope: !5763)
!5765 = !DILocation(line: 1795, column: 15, scope: !5763)
!5766 = !DILocation(line: 1795, column: 18, scope: !5763)
!5767 = !DILocation(line: 1795, column: 7, scope: !5731)
!5768 = !DILocation(line: 1796, column: 13, scope: !5763)
!5769 = !DILocation(line: 1796, column: 32, scope: !5763)
!5770 = !DILocation(line: 1796, column: 5, scope: !5763)
!5771 = !DILocation(line: 1797, column: 3, scope: !5731)
!5772 = !DILocation(line: 1798, column: 1, scope: !5731)
!5773 = distinct !DISubprogram(name: "abandon_move", scope: !426, file: !426, line: 1742, type: !5774, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!142, !3460, !183, !511}
!5776 = !DILocalVariable(name: "x", arg: 1, scope: !5773, file: !426, line: 1742, type: !3460)
!5777 = !DILocation(line: 1742, column: 40, scope: !5773)
!5778 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5773, file: !426, line: 1743, type: !183)
!5779 = !DILocation(line: 1743, column: 27, scope: !5773)
!5780 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !5773, file: !426, line: 1744, type: !511)
!5781 = !DILocation(line: 1744, column: 34, scope: !5773)
!5782 = !DILocation(line: 1746, column: 3, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !426, line: 1746, column: 3)
!5784 = distinct !DILexicalBlock(scope: !5773, file: !426, line: 1746, column: 3)
!5785 = !DILocation(line: 1746, column: 3, scope: !5784)
!5786 = !DILocation(line: 1747, column: 11, scope: !5773)
!5787 = !DILocation(line: 1747, column: 14, scope: !5773)
!5788 = !DILocation(line: 1747, column: 26, scope: !5773)
!5789 = !DILocation(line: 1748, column: 11, scope: !5773)
!5790 = !DILocation(line: 1748, column: 16, scope: !5773)
!5791 = !DILocation(line: 1748, column: 19, scope: !5773)
!5792 = !DILocation(line: 1748, column: 31, scope: !5773)
!5793 = !DILocation(line: 1749, column: 16, scope: !5773)
!5794 = !DILocation(line: 1749, column: 20, scope: !5773)
!5795 = !DILocation(line: 1749, column: 23, scope: !5773)
!5796 = !DILocation(line: 1749, column: 35, scope: !5773)
!5797 = !DILocation(line: 1750, column: 20, scope: !5773)
!5798 = !DILocation(line: 1750, column: 23, scope: !5773)
!5799 = !DILocation(line: 1750, column: 26, scope: !5773)
!5800 = !DILocation(line: 1751, column: 20, scope: !5773)
!5801 = !DILocation(line: 1751, column: 47, scope: !5773)
!5802 = !DILocation(line: 1751, column: 57, scope: !5773)
!5803 = !DILocation(line: 1751, column: 65, scope: !5773)
!5804 = !DILocation(line: 1751, column: 25, scope: !5773)
!5805 = !DILocation(line: 1752, column: 15, scope: !5773)
!5806 = !DILocation(line: 1752, column: 34, scope: !5773)
!5807 = !DILocation(line: 1752, column: 37, scope: !5773)
!5808 = !DILocation(line: 1752, column: 47, scope: !5773)
!5809 = !DILocation(line: 1752, column: 20, scope: !5773)
!5810 = !DILocation(line: 1752, column: 18, scope: !5773)
!5811 = !DILocation(line: 0, scope: !5773)
!5812 = !DILocation(line: 1747, column: 3, scope: !5773)
!5813 = distinct !DISubprogram(name: "overwrite_ok", scope: !426, file: !426, line: 1674, type: !5774, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5814 = !DILocalVariable(name: "x", arg: 1, scope: !5813, file: !426, line: 1674, type: !3460)
!5815 = !DILocation(line: 1674, column: 40, scope: !5813)
!5816 = !DILocalVariable(name: "dst_name", arg: 2, scope: !5813, file: !426, line: 1674, type: !183)
!5817 = !DILocation(line: 1674, column: 55, scope: !5813)
!5818 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !5813, file: !426, line: 1675, type: !511)
!5819 = !DILocation(line: 1675, column: 34, scope: !5813)
!5820 = !DILocation(line: 1677, column: 31, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5813, file: !426, line: 1677, column: 7)
!5822 = !DILocation(line: 1677, column: 41, scope: !5821)
!5823 = !DILocation(line: 1677, column: 49, scope: !5821)
!5824 = !DILocation(line: 1677, column: 9, scope: !5821)
!5825 = !DILocation(line: 1677, column: 7, scope: !5813)
!5826 = !DILocalVariable(name: "perms", scope: !5827, file: !426, line: 1679, type: !255)
!5827 = distinct !DILexicalBlock(scope: !5821, file: !426, line: 1678, column: 5)
!5828 = !DILocation(line: 1679, column: 12, scope: !5827)
!5829 = !DILocation(line: 1680, column: 16, scope: !5827)
!5830 = !DILocation(line: 1680, column: 24, scope: !5827)
!5831 = !DILocation(line: 1680, column: 33, scope: !5827)
!5832 = !DILocation(line: 1680, column: 7, scope: !5827)
!5833 = !DILocation(line: 1681, column: 7, scope: !5827)
!5834 = !DILocation(line: 1681, column: 17, scope: !5827)
!5835 = !DILocation(line: 1682, column: 16, scope: !5827)
!5836 = !DILocation(line: 1683, column: 17, scope: !5827)
!5837 = !DILocation(line: 1683, column: 20, scope: !5827)
!5838 = !DILocation(line: 1683, column: 30, scope: !5827)
!5839 = !DILocation(line: 1683, column: 33, scope: !5827)
!5840 = !DILocation(line: 1683, column: 36, scope: !5827)
!5841 = !DILocation(line: 1684, column: 17, scope: !5827)
!5842 = !DILocation(line: 1684, column: 20, scope: !5827)
!5843 = !DILocation(line: 1684, column: 23, scope: !5827)
!5844 = !DILocation(line: 1683, column: 16, scope: !5827)
!5845 = !DILocation(line: 1685, column: 18, scope: !5827)
!5846 = !DILocation(line: 1686, column: 18, scope: !5827)
!5847 = !DILocation(line: 1687, column: 16, scope: !5827)
!5848 = !DILocation(line: 1687, column: 30, scope: !5827)
!5849 = !DILocation(line: 1688, column: 37, scope: !5827)
!5850 = !DILocation(line: 1688, column: 45, scope: !5827)
!5851 = !DILocation(line: 1688, column: 53, scope: !5827)
!5852 = !DILocation(line: 1688, column: 16, scope: !5827)
!5853 = !DILocation(line: 1689, column: 17, scope: !5827)
!5854 = !DILocation(line: 1682, column: 7, scope: !5827)
!5855 = !DILocation(line: 1690, column: 5, scope: !5827)
!5856 = !DILocation(line: 1693, column: 16, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5821, file: !426, line: 1692, column: 5)
!5858 = !DILocation(line: 1693, column: 24, scope: !5857)
!5859 = !DILocation(line: 1694, column: 16, scope: !5857)
!5860 = !DILocation(line: 1694, column: 30, scope: !5857)
!5861 = !DILocation(line: 1693, column: 7, scope: !5857)
!5862 = !DILocation(line: 1697, column: 10, scope: !5813)
!5863 = !DILocation(line: 1697, column: 3, scope: !5813)
!5864 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !294, file: !294, line: 265, type: !2466, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5865 = !DILocalVariable(name: "file_name", arg: 1, scope: !5864, file: !294, line: 265, type: !183)
!5866 = !DILocation(line: 265, column: 28, scope: !5864)
!5867 = !DILocation(line: 267, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5864, file: !294, line: 267, column: 7)
!5869 = !DILocation(line: 267, column: 20, scope: !5868)
!5870 = !DILocation(line: 267, column: 7, scope: !5864)
!5871 = !DILocalVariable(name: "sep", scope: !5872, file: !294, line: 269, type: !10)
!5872 = distinct !DILexicalBlock(scope: !5868, file: !294, line: 268, column: 5)
!5873 = !DILocation(line: 269, column: 12, scope: !5872)
!5874 = !DILocation(line: 269, column: 18, scope: !5872)
!5875 = !DILocation(line: 269, column: 29, scope: !5872)
!5876 = !DILocation(line: 269, column: 42, scope: !5872)
!5877 = !DILocation(line: 269, column: 50, scope: !5872)
!5878 = !DILocation(line: 270, column: 17, scope: !5872)
!5879 = !DILocation(line: 270, column: 21, scope: !5872)
!5880 = !DILocation(line: 270, column: 24, scope: !5872)
!5881 = !DILocation(line: 270, column: 7, scope: !5872)
!5882 = !DILocation(line: 273, column: 5, scope: !5868)
!5883 = !DILocation(line: 274, column: 1, scope: !5864)
!5884 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !426, file: !426, line: 1814, type: !5885, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!142, !183, !511, !183}
!5887 = !DILocalVariable(name: "srcbase", arg: 1, scope: !5884, file: !426, line: 1814, type: !183)
!5888 = !DILocation(line: 1814, column: 35, scope: !5884)
!5889 = !DILocalVariable(name: "src_st", arg: 2, scope: !5884, file: !426, line: 1814, type: !511)
!5890 = !DILocation(line: 1814, column: 63, scope: !5884)
!5891 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5884, file: !426, line: 1815, type: !183)
!5892 = !DILocation(line: 1815, column: 35, scope: !5884)
!5893 = !DILocalVariable(name: "srcbaselen", scope: !5884, file: !426, line: 1817, type: !55)
!5894 = !DILocation(line: 1817, column: 10, scope: !5884)
!5895 = !DILocation(line: 1817, column: 31, scope: !5884)
!5896 = !DILocation(line: 1817, column: 23, scope: !5884)
!5897 = !DILocalVariable(name: "dstbase", scope: !5884, file: !426, line: 1818, type: !183)
!5898 = !DILocation(line: 1818, column: 15, scope: !5884)
!5899 = !DILocation(line: 1818, column: 41, scope: !5884)
!5900 = !DILocation(line: 1818, column: 25, scope: !5884)
!5901 = !DILocalVariable(name: "dstbaselen", scope: !5884, file: !426, line: 1819, type: !55)
!5902 = !DILocation(line: 1819, column: 10, scope: !5884)
!5903 = !DILocation(line: 1819, column: 31, scope: !5884)
!5904 = !DILocation(line: 1819, column: 23, scope: !5884)
!5905 = !DILocalVariable(name: "suffixlen", scope: !5884, file: !426, line: 1820, type: !55)
!5906 = !DILocation(line: 1820, column: 10, scope: !5884)
!5907 = !DILocation(line: 1820, column: 30, scope: !5884)
!5908 = !DILocation(line: 1820, column: 22, scope: !5884)
!5909 = !DILocation(line: 1821, column: 10, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5884, file: !426, line: 1821, column: 7)
!5911 = !DILocation(line: 1821, column: 24, scope: !5910)
!5912 = !DILocation(line: 1821, column: 37, scope: !5910)
!5913 = !DILocation(line: 1821, column: 35, scope: !5910)
!5914 = !DILocation(line: 1821, column: 21, scope: !5910)
!5915 = !DILocation(line: 1822, column: 10, scope: !5910)
!5916 = !DILocation(line: 1822, column: 21, scope: !5910)
!5917 = !DILocation(line: 1822, column: 30, scope: !5910)
!5918 = !DILocation(line: 1822, column: 39, scope: !5910)
!5919 = !DILocation(line: 1822, column: 13, scope: !5910)
!5920 = !DILocation(line: 1822, column: 51, scope: !5910)
!5921 = !DILocation(line: 1823, column: 10, scope: !5910)
!5922 = !DILocation(line: 1823, column: 13, scope: !5910)
!5923 = !DILocation(line: 1821, column: 7, scope: !5884)
!5924 = !DILocation(line: 1824, column: 5, scope: !5910)
!5925 = !DILocalVariable(name: "dstlen", scope: !5884, file: !426, line: 1825, type: !55)
!5926 = !DILocation(line: 1825, column: 10, scope: !5884)
!5927 = !DILocation(line: 1825, column: 27, scope: !5884)
!5928 = !DILocation(line: 1825, column: 19, scope: !5884)
!5929 = !DILocalVariable(name: "dst_back", scope: !5884, file: !426, line: 1826, type: !9)
!5930 = !DILocation(line: 1826, column: 9, scope: !5884)
!5931 = !DILocation(line: 1826, column: 29, scope: !5884)
!5932 = !DILocation(line: 1826, column: 38, scope: !5884)
!5933 = !DILocation(line: 1826, column: 36, scope: !5884)
!5934 = !DILocation(line: 1826, column: 48, scope: !5884)
!5935 = !DILocation(line: 1826, column: 20, scope: !5884)
!5936 = !DILocation(line: 1827, column: 20, scope: !5884)
!5937 = !DILocation(line: 1827, column: 30, scope: !5884)
!5938 = !DILocation(line: 1827, column: 40, scope: !5884)
!5939 = !DILocation(line: 1827, column: 11, scope: !5884)
!5940 = !DILocation(line: 1827, column: 49, scope: !5884)
!5941 = !DILocation(line: 1827, column: 3, scope: !5884)
!5942 = !DILocalVariable(name: "dst_back_sb", scope: !5884, file: !426, line: 1828, type: !462)
!5943 = !DILocation(line: 1828, column: 15, scope: !5884)
!5944 = !DILocalVariable(name: "dst_back_status", scope: !5884, file: !426, line: 1829, type: !7)
!5945 = !DILocation(line: 1829, column: 7, scope: !5884)
!5946 = !DILocation(line: 1829, column: 31, scope: !5884)
!5947 = !DILocation(line: 1829, column: 25, scope: !5884)
!5948 = !DILocation(line: 1830, column: 9, scope: !5884)
!5949 = !DILocation(line: 1830, column: 3, scope: !5884)
!5950 = !DILocation(line: 1831, column: 10, scope: !5884)
!5951 = !DILocation(line: 1831, column: 26, scope: !5884)
!5952 = !DILocation(line: 1831, column: 31, scope: !5884)
!5953 = !DILocation(line: 1831, column: 34, scope: !5884)
!5954 = !DILocation(line: 0, scope: !5884)
!5955 = !DILocation(line: 1831, column: 3, scope: !5884)
!5956 = !DILocation(line: 1832, column: 1, scope: !5884)
!5957 = distinct !DISubprogram(name: "emit_verbose", scope: !426, file: !426, line: 1759, type: !5958, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5958 = !DISubroutineType(types: !5959)
!5959 = !{null, !183, !183, !183}
!5960 = !DILocalVariable(name: "src", arg: 1, scope: !5957, file: !426, line: 1759, type: !183)
!5961 = !DILocation(line: 1759, column: 27, scope: !5957)
!5962 = !DILocalVariable(name: "dst", arg: 2, scope: !5957, file: !426, line: 1759, type: !183)
!5963 = !DILocation(line: 1759, column: 44, scope: !5957)
!5964 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !5957, file: !426, line: 1759, type: !183)
!5965 = !DILocation(line: 1759, column: 61, scope: !5957)
!5966 = !DILocation(line: 1761, column: 23, scope: !5957)
!5967 = !DILocation(line: 1761, column: 43, scope: !5957)
!5968 = !DILocation(line: 1761, column: 3, scope: !5957)
!5969 = !DILocation(line: 1762, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5957, file: !426, line: 1762, column: 7)
!5971 = !DILocation(line: 1762, column: 7, scope: !5957)
!5972 = !DILocation(line: 1763, column: 13, scope: !5970)
!5973 = !DILocation(line: 1763, column: 33, scope: !5970)
!5974 = !DILocation(line: 1763, column: 5, scope: !5970)
!5975 = !DILocation(line: 1764, column: 3, scope: !5957)
!5976 = !DILocation(line: 1765, column: 1, scope: !5957)
!5977 = distinct !DISubprogram(name: "is_ancestor", scope: !426, file: !426, line: 584, type: !5978, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!142, !511, !5980}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!5982 = !DILocalVariable(name: "sb", arg: 1, scope: !5977, file: !426, line: 584, type: !511)
!5983 = !DILocation(line: 584, column: 33, scope: !5977)
!5984 = !DILocalVariable(name: "ancestors", arg: 2, scope: !5977, file: !426, line: 584, type: !5980)
!5985 = !DILocation(line: 584, column: 60, scope: !5977)
!5986 = !DILocation(line: 586, column: 3, scope: !5977)
!5987 = !DILocation(line: 586, column: 10, scope: !5977)
!5988 = !DILocation(line: 586, column: 20, scope: !5977)
!5989 = !DILocation(line: 588, column: 11, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !426, line: 588, column: 11)
!5991 = distinct !DILexicalBlock(scope: !5977, file: !426, line: 587, column: 5)
!5992 = !DILocation(line: 588, column: 22, scope: !5990)
!5993 = !DILocation(line: 588, column: 29, scope: !5990)
!5994 = !DILocation(line: 588, column: 33, scope: !5990)
!5995 = !DILocation(line: 588, column: 26, scope: !5990)
!5996 = !DILocation(line: 588, column: 40, scope: !5990)
!5997 = !DILocation(line: 588, column: 43, scope: !5990)
!5998 = !DILocation(line: 588, column: 54, scope: !5990)
!5999 = !DILocation(line: 588, column: 61, scope: !5990)
!6000 = !DILocation(line: 588, column: 65, scope: !5990)
!6001 = !DILocation(line: 588, column: 58, scope: !5990)
!6002 = !DILocation(line: 588, column: 11, scope: !5991)
!6003 = !DILocation(line: 589, column: 9, scope: !5990)
!6004 = !DILocation(line: 590, column: 19, scope: !5991)
!6005 = !DILocation(line: 590, column: 30, scope: !5991)
!6006 = !DILocation(line: 590, column: 17, scope: !5991)
!6007 = distinct !{!6007, !5986, !6008}
!6008 = !DILocation(line: 591, column: 5, scope: !5977)
!6009 = !DILocation(line: 592, column: 3, scope: !5977)
!6010 = !DILocation(line: 593, column: 1, scope: !5977)
!6011 = distinct !DISubprogram(name: "copy_dir", scope: !426, file: !426, line: 709, type: !6012, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!142, !183, !183, !142, !511, !493, !3460, !3724, !3724}
!6014 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6011, file: !426, line: 709, type: !183)
!6015 = !DILocation(line: 709, column: 23, scope: !6011)
!6016 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6011, file: !426, line: 709, type: !183)
!6017 = !DILocation(line: 709, column: 48, scope: !6011)
!6018 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6011, file: !426, line: 709, type: !142)
!6019 = !DILocation(line: 709, column: 66, scope: !6011)
!6020 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6011, file: !426, line: 710, type: !511)
!6021 = !DILocation(line: 710, column: 30, scope: !6011)
!6022 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6011, file: !426, line: 710, type: !493)
!6023 = !DILocation(line: 710, column: 55, scope: !6011)
!6024 = !DILocalVariable(name: "x", arg: 6, scope: !6011, file: !426, line: 711, type: !3460)
!6025 = !DILocation(line: 711, column: 36, scope: !6011)
!6026 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6011, file: !426, line: 712, type: !3724)
!6027 = !DILocation(line: 712, column: 17, scope: !6011)
!6028 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6011, file: !426, line: 713, type: !3724)
!6029 = !DILocation(line: 713, column: 17, scope: !6011)
!6030 = !DILocalVariable(name: "name_space", scope: !6011, file: !426, line: 715, type: !9)
!6031 = !DILocation(line: 715, column: 9, scope: !6011)
!6032 = !DILocalVariable(name: "namep", scope: !6011, file: !426, line: 716, type: !9)
!6033 = !DILocation(line: 716, column: 9, scope: !6011)
!6034 = !DILocalVariable(name: "non_command_line_options", scope: !6011, file: !426, line: 717, type: !3462)
!6035 = !DILocation(line: 717, column: 21, scope: !6011)
!6036 = !DILocation(line: 717, column: 49, scope: !6011)
!6037 = !DILocation(line: 717, column: 48, scope: !6011)
!6038 = !DILocalVariable(name: "ok", scope: !6011, file: !426, line: 718, type: !142)
!6039 = !DILocation(line: 718, column: 8, scope: !6011)
!6040 = !DILocation(line: 720, column: 25, scope: !6011)
!6041 = !DILocation(line: 720, column: 16, scope: !6011)
!6042 = !DILocation(line: 720, column: 14, scope: !6011)
!6043 = !DILocation(line: 721, column: 7, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6011, file: !426, line: 721, column: 7)
!6045 = !DILocation(line: 721, column: 18, scope: !6044)
!6046 = !DILocation(line: 721, column: 7, scope: !6011)
!6047 = !DILocation(line: 725, column: 17, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !426, line: 722, column: 5)
!6049 = !DILocation(line: 725, column: 24, scope: !6048)
!6050 = !DILocation(line: 725, column: 47, scope: !6048)
!6051 = !DILocation(line: 725, column: 7, scope: !6048)
!6052 = !DILocation(line: 726, column: 7, scope: !6048)
!6053 = !DILocation(line: 731, column: 7, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6011, file: !426, line: 731, column: 7)
!6055 = !DILocation(line: 731, column: 10, scope: !6054)
!6056 = !DILocation(line: 731, column: 22, scope: !6054)
!6057 = !DILocation(line: 731, column: 7, scope: !6011)
!6058 = !DILocation(line: 732, column: 30, scope: !6054)
!6059 = !DILocation(line: 732, column: 42, scope: !6054)
!6060 = !DILocation(line: 732, column: 5, scope: !6054)
!6061 = !DILocalVariable(name: "new_first_dir_created", scope: !6011, file: !426, line: 734, type: !142)
!6062 = !DILocation(line: 734, column: 8, scope: !6011)
!6063 = !DILocation(line: 735, column: 11, scope: !6011)
!6064 = !DILocation(line: 735, column: 9, scope: !6011)
!6065 = !DILocation(line: 736, column: 3, scope: !6011)
!6066 = !DILocation(line: 736, column: 11, scope: !6011)
!6067 = !DILocation(line: 736, column: 10, scope: !6011)
!6068 = !DILocation(line: 736, column: 17, scope: !6011)
!6069 = !DILocalVariable(name: "local_copy_into_self", scope: !6070, file: !426, line: 738, type: !142)
!6070 = distinct !DILexicalBlock(scope: !6011, file: !426, line: 737, column: 5)
!6071 = !DILocation(line: 738, column: 12, scope: !6070)
!6072 = !DILocalVariable(name: "src_name", scope: !6070, file: !426, line: 739, type: !9)
!6073 = !DILocation(line: 739, column: 13, scope: !6070)
!6074 = !DILocation(line: 739, column: 42, scope: !6070)
!6075 = !DILocation(line: 739, column: 55, scope: !6070)
!6076 = !DILocation(line: 739, column: 24, scope: !6070)
!6077 = !DILocalVariable(name: "dst_name", scope: !6070, file: !426, line: 740, type: !9)
!6078 = !DILocation(line: 740, column: 13, scope: !6070)
!6079 = !DILocation(line: 740, column: 42, scope: !6070)
!6080 = !DILocation(line: 740, column: 55, scope: !6070)
!6081 = !DILocation(line: 740, column: 24, scope: !6070)
!6082 = !DILocalVariable(name: "first_dir_created", scope: !6070, file: !426, line: 741, type: !142)
!6083 = !DILocation(line: 741, column: 12, scope: !6070)
!6084 = !DILocation(line: 741, column: 33, scope: !6070)
!6085 = !DILocation(line: 741, column: 32, scope: !6070)
!6086 = !DILocation(line: 743, column: 28, scope: !6070)
!6087 = !DILocation(line: 743, column: 38, scope: !6070)
!6088 = !DILocation(line: 743, column: 48, scope: !6070)
!6089 = !DILocation(line: 743, column: 57, scope: !6070)
!6090 = !DILocation(line: 744, column: 28, scope: !6070)
!6091 = !DILocation(line: 743, column: 13, scope: !6070)
!6092 = !DILocation(line: 743, column: 10, scope: !6070)
!6093 = !DILocation(line: 747, column: 26, scope: !6070)
!6094 = !DILocation(line: 747, column: 8, scope: !6070)
!6095 = !DILocation(line: 747, column: 23, scope: !6070)
!6096 = !DILocation(line: 749, column: 13, scope: !6070)
!6097 = !DILocation(line: 749, column: 7, scope: !6070)
!6098 = !DILocation(line: 750, column: 13, scope: !6070)
!6099 = !DILocation(line: 750, column: 7, scope: !6070)
!6100 = !DILocation(line: 755, column: 11, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6070, file: !426, line: 755, column: 11)
!6102 = !DILocation(line: 755, column: 11, scope: !6070)
!6103 = !DILocation(line: 756, column: 9, scope: !6101)
!6104 = !DILocation(line: 758, column: 32, scope: !6070)
!6105 = !DILocation(line: 758, column: 29, scope: !6070)
!6106 = !DILocation(line: 759, column: 24, scope: !6070)
!6107 = !DILocation(line: 759, column: 16, scope: !6070)
!6108 = !DILocation(line: 759, column: 31, scope: !6070)
!6109 = !DILocation(line: 759, column: 13, scope: !6070)
!6110 = distinct !{!6110, !6065, !6111}
!6111 = !DILocation(line: 760, column: 5, scope: !6011)
!6112 = !DILocation(line: 761, column: 9, scope: !6011)
!6113 = !DILocation(line: 761, column: 3, scope: !6011)
!6114 = !DILocation(line: 762, column: 45, scope: !6011)
!6115 = !DILocation(line: 762, column: 4, scope: !6011)
!6116 = !DILocation(line: 762, column: 43, scope: !6011)
!6117 = !DILocation(line: 764, column: 10, scope: !6011)
!6118 = !DILocation(line: 764, column: 3, scope: !6011)
!6119 = !DILocation(line: 765, column: 1, scope: !6011)
!6120 = distinct !DISubprogram(name: "copy_reg", scope: !426, file: !426, line: 1016, type: !6121, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{!142, !183, !183, !3460, !139, !139, !3724, !511}
!6123 = !DILocalVariable(name: "src_name", arg: 1, scope: !6120, file: !426, line: 1016, type: !183)
!6124 = !DILocation(line: 1016, column: 23, scope: !6120)
!6125 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6120, file: !426, line: 1016, type: !183)
!6126 = !DILocation(line: 1016, column: 45, scope: !6120)
!6127 = !DILocalVariable(name: "x", arg: 3, scope: !6120, file: !426, line: 1017, type: !3460)
!6128 = !DILocation(line: 1017, column: 36, scope: !6120)
!6129 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6120, file: !426, line: 1018, type: !139)
!6130 = !DILocation(line: 1018, column: 18, scope: !6120)
!6131 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6120, file: !426, line: 1018, type: !139)
!6132 = !DILocation(line: 1018, column: 35, scope: !6120)
!6133 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6120, file: !426, line: 1018, type: !3724)
!6134 = !DILocation(line: 1018, column: 62, scope: !6120)
!6135 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6120, file: !426, line: 1019, type: !511)
!6136 = !DILocation(line: 1019, column: 30, scope: !6120)
!6137 = !DILocalVariable(name: "buf", scope: !6120, file: !426, line: 1021, type: !9)
!6138 = !DILocation(line: 1021, column: 9, scope: !6120)
!6139 = !DILocalVariable(name: "buf_alloc", scope: !6120, file: !426, line: 1022, type: !9)
!6140 = !DILocation(line: 1022, column: 9, scope: !6120)
!6141 = !DILocalVariable(name: "name_alloc", scope: !6120, file: !426, line: 1023, type: !9)
!6142 = !DILocation(line: 1023, column: 9, scope: !6120)
!6143 = !DILocalVariable(name: "dest_desc", scope: !6120, file: !426, line: 1024, type: !7)
!6144 = !DILocation(line: 1024, column: 7, scope: !6120)
!6145 = !DILocalVariable(name: "dest_errno", scope: !6120, file: !426, line: 1025, type: !7)
!6146 = !DILocation(line: 1025, column: 7, scope: !6120)
!6147 = !DILocalVariable(name: "source_desc", scope: !6120, file: !426, line: 1026, type: !7)
!6148 = !DILocation(line: 1026, column: 7, scope: !6120)
!6149 = !DILocalVariable(name: "src_mode", scope: !6120, file: !426, line: 1027, type: !139)
!6150 = !DILocation(line: 1027, column: 10, scope: !6120)
!6151 = !DILocation(line: 1027, column: 21, scope: !6120)
!6152 = !DILocation(line: 1027, column: 29, scope: !6120)
!6153 = !DILocalVariable(name: "sb", scope: !6120, file: !426, line: 1028, type: !462)
!6154 = !DILocation(line: 1028, column: 15, scope: !6120)
!6155 = !DILocalVariable(name: "src_open_sb", scope: !6120, file: !426, line: 1029, type: !462)
!6156 = !DILocation(line: 1029, column: 15, scope: !6120)
!6157 = !DILocalVariable(name: "return_val", scope: !6120, file: !426, line: 1030, type: !142)
!6158 = !DILocation(line: 1030, column: 8, scope: !6120)
!6159 = !DILocalVariable(name: "data_copy_required", scope: !6120, file: !426, line: 1031, type: !142)
!6160 = !DILocation(line: 1031, column: 8, scope: !6120)
!6161 = !DILocation(line: 1031, column: 29, scope: !6120)
!6162 = !DILocation(line: 1031, column: 32, scope: !6120)
!6163 = !DILocation(line: 1033, column: 23, scope: !6120)
!6164 = !DILocation(line: 1035, column: 27, scope: !6120)
!6165 = !DILocation(line: 1035, column: 30, scope: !6120)
!6166 = !DILocation(line: 1035, column: 42, scope: !6120)
!6167 = !DILocation(line: 1035, column: 24, scope: !6120)
!6168 = !DILocation(line: 1033, column: 17, scope: !6120)
!6169 = !DILocation(line: 1033, column: 15, scope: !6120)
!6170 = !DILocation(line: 1036, column: 7, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1036, column: 7)
!6172 = !DILocation(line: 1036, column: 19, scope: !6171)
!6173 = !DILocation(line: 1036, column: 7, scope: !6120)
!6174 = !DILocation(line: 1038, column: 17, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6171, file: !426, line: 1037, column: 5)
!6176 = !DILocation(line: 1038, column: 24, scope: !6175)
!6177 = !DILocation(line: 1038, column: 57, scope: !6175)
!6178 = !DILocation(line: 1038, column: 7, scope: !6175)
!6179 = !DILocation(line: 1039, column: 7, scope: !6175)
!6180 = !DILocation(line: 1042, column: 14, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1042, column: 7)
!6182 = !DILocation(line: 1042, column: 7, scope: !6181)
!6183 = !DILocation(line: 1042, column: 41, scope: !6181)
!6184 = !DILocation(line: 1042, column: 7, scope: !6120)
!6185 = !DILocation(line: 1044, column: 17, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6181, file: !426, line: 1043, column: 5)
!6187 = !DILocation(line: 1044, column: 24, scope: !6186)
!6188 = !DILocation(line: 1044, column: 46, scope: !6186)
!6189 = !DILocation(line: 1044, column: 7, scope: !6186)
!6190 = !DILocation(line: 1045, column: 18, scope: !6186)
!6191 = !DILocation(line: 1046, column: 7, scope: !6186)
!6192 = !DILocation(line: 1051, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1051, column: 7)
!6194 = !DILocation(line: 1051, column: 7, scope: !6120)
!6195 = !DILocation(line: 1054, column: 14, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !426, line: 1052, column: 5)
!6197 = !DILocation(line: 1055, column: 14, scope: !6196)
!6198 = !DILocation(line: 1053, column: 7, scope: !6196)
!6199 = !DILocation(line: 1056, column: 18, scope: !6196)
!6200 = !DILocation(line: 1057, column: 7, scope: !6196)
!6201 = !DILocation(line: 1062, column: 10, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1062, column: 7)
!6203 = !DILocation(line: 1062, column: 9, scope: !6202)
!6204 = !DILocation(line: 1062, column: 7, scope: !6120)
!6205 = !DILocalVariable(name: "open_flags", scope: !6206, file: !426, line: 1064, type: !7)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !426, line: 1063, column: 5)
!6207 = !DILocation(line: 1064, column: 11, scope: !6206)
!6208 = !DILocation(line: 1065, column: 32, scope: !6206)
!6209 = !DILocation(line: 1065, column: 35, scope: !6206)
!6210 = !DILocation(line: 1065, column: 29, scope: !6206)
!6211 = !DILocation(line: 1066, column: 25, scope: !6206)
!6212 = !DILocation(line: 1066, column: 35, scope: !6206)
!6213 = !DILocation(line: 1066, column: 19, scope: !6206)
!6214 = !DILocation(line: 1066, column: 17, scope: !6206)
!6215 = !DILocation(line: 1067, column: 20, scope: !6206)
!6216 = !DILocation(line: 1067, column: 18, scope: !6206)
!6217 = !DILocation(line: 1076, column: 12, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6206, file: !426, line: 1076, column: 11)
!6219 = !DILocation(line: 1076, column: 15, scope: !6218)
!6220 = !DILocation(line: 1076, column: 36, scope: !6218)
!6221 = !DILocation(line: 1076, column: 39, scope: !6218)
!6222 = !DILocation(line: 1076, column: 42, scope: !6218)
!6223 = !DILocation(line: 1077, column: 11, scope: !6218)
!6224 = !DILocation(line: 1077, column: 19, scope: !6218)
!6225 = !DILocation(line: 1077, column: 16, scope: !6218)
!6226 = !DILocation(line: 1076, column: 11, scope: !6206)
!6227 = !DILocation(line: 1079, column: 40, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !426, line: 1079, column: 15)
!6229 = distinct !DILexicalBlock(scope: !6218, file: !426, line: 1078, column: 9)
!6230 = !DILocation(line: 1079, column: 50, scope: !6228)
!6231 = !DILocation(line: 1079, column: 53, scope: !6228)
!6232 = !DILocation(line: 1080, column: 47, scope: !6228)
!6233 = !DILocation(line: 1079, column: 17, scope: !6228)
!6234 = !DILocation(line: 1079, column: 15, scope: !6229)
!6235 = !DILocation(line: 1082, column: 19, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !426, line: 1082, column: 19)
!6237 = distinct !DILexicalBlock(scope: !6228, file: !426, line: 1081, column: 13)
!6238 = !DILocation(line: 1082, column: 22, scope: !6236)
!6239 = !DILocation(line: 1082, column: 19, scope: !6237)
!6240 = !DILocation(line: 1084, column: 30, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6236, file: !426, line: 1083, column: 17)
!6242 = !DILocation(line: 1085, column: 19, scope: !6241)
!6243 = !DILocation(line: 1087, column: 13, scope: !6237)
!6244 = !DILocation(line: 1088, column: 9, scope: !6229)
!6245 = !DILocation(line: 1090, column: 11, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6206, file: !426, line: 1090, column: 11)
!6247 = !DILocation(line: 1090, column: 21, scope: !6246)
!6248 = !DILocation(line: 1090, column: 25, scope: !6246)
!6249 = !DILocation(line: 1090, column: 28, scope: !6246)
!6250 = !DILocation(line: 1090, column: 31, scope: !6246)
!6251 = !DILocation(line: 1090, column: 11, scope: !6206)
!6252 = !DILocation(line: 1092, column: 23, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !426, line: 1092, column: 15)
!6254 = distinct !DILexicalBlock(scope: !6246, file: !426, line: 1091, column: 9)
!6255 = !DILocation(line: 1092, column: 15, scope: !6253)
!6256 = !DILocation(line: 1092, column: 33, scope: !6253)
!6257 = !DILocation(line: 1092, column: 15, scope: !6254)
!6258 = !DILocation(line: 1094, column: 25, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6253, file: !426, line: 1093, column: 13)
!6260 = !DILocation(line: 1094, column: 32, scope: !6259)
!6261 = !DILocation(line: 1094, column: 55, scope: !6259)
!6262 = !DILocation(line: 1094, column: 15, scope: !6259)
!6263 = !DILocation(line: 1095, column: 26, scope: !6259)
!6264 = !DILocation(line: 1096, column: 15, scope: !6259)
!6265 = !DILocation(line: 1098, column: 15, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6254, file: !426, line: 1098, column: 15)
!6267 = !DILocation(line: 1098, column: 18, scope: !6266)
!6268 = !DILocation(line: 1098, column: 15, scope: !6254)
!6269 = !DILocation(line: 1099, column: 21, scope: !6266)
!6270 = !DILocation(line: 1099, column: 40, scope: !6266)
!6271 = !DILocation(line: 1099, column: 13, scope: !6266)
!6272 = !DILocation(line: 1102, column: 12, scope: !6254)
!6273 = !DILocation(line: 1102, column: 20, scope: !6254)
!6274 = !DILocation(line: 1106, column: 15, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6254, file: !426, line: 1106, column: 15)
!6276 = !DILocation(line: 1106, column: 18, scope: !6275)
!6277 = !DILocation(line: 1106, column: 15, scope: !6254)
!6278 = !DILocation(line: 1108, column: 47, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !426, line: 1108, column: 19)
!6280 = distinct !DILexicalBlock(scope: !6275, file: !426, line: 1107, column: 13)
!6281 = !DILocation(line: 1108, column: 57, scope: !6279)
!6282 = !DILocation(line: 1108, column: 67, scope: !6279)
!6283 = !DILocation(line: 1109, column: 48, scope: !6279)
!6284 = !DILocation(line: 1109, column: 47, scope: !6279)
!6285 = !DILocation(line: 1109, column: 57, scope: !6279)
!6286 = !DILocation(line: 1108, column: 21, scope: !6279)
!6287 = !DILocation(line: 1108, column: 19, scope: !6280)
!6288 = !DILocation(line: 1111, column: 30, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6279, file: !426, line: 1110, column: 17)
!6290 = !DILocation(line: 1112, column: 19, scope: !6289)
!6291 = !DILocation(line: 1114, column: 13, scope: !6280)
!6292 = !DILocation(line: 1115, column: 9, scope: !6254)
!6293 = !DILocation(line: 1116, column: 5, scope: !6206)
!6294 = !DILocation(line: 1118, column: 8, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1118, column: 7)
!6296 = !DILocation(line: 1118, column: 7, scope: !6295)
!6297 = !DILocation(line: 1118, column: 7, scope: !6120)
!6298 = !DILocation(line: 1119, column: 5, scope: !6295)
!6299 = !DILabel(scope: !6300, name: "open_with_O_CREAT", file: !426, line: 1120)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !426, line: 1119, column: 5)
!6301 = !DILocation(line: 1120, column: 5, scope: !6300)
!6302 = !DILocalVariable(name: "open_flags", scope: !6300, file: !426, line: 1122, type: !7)
!6303 = !DILocation(line: 1122, column: 11, scope: !6300)
!6304 = !DILocation(line: 1123, column: 25, scope: !6300)
!6305 = !DILocation(line: 1123, column: 35, scope: !6300)
!6306 = !DILocation(line: 1123, column: 46, scope: !6300)
!6307 = !DILocation(line: 1124, column: 25, scope: !6300)
!6308 = !DILocation(line: 1124, column: 37, scope: !6300)
!6309 = !DILocation(line: 1124, column: 36, scope: !6300)
!6310 = !DILocation(line: 1124, column: 34, scope: !6300)
!6311 = !DILocation(line: 1123, column: 19, scope: !6300)
!6312 = !DILocation(line: 1123, column: 17, scope: !6300)
!6313 = !DILocation(line: 1125, column: 20, scope: !6300)
!6314 = !DILocation(line: 1125, column: 18, scope: !6300)
!6315 = !DILocation(line: 1137, column: 11, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6300, file: !426, line: 1137, column: 11)
!6317 = !DILocation(line: 1137, column: 21, scope: !6316)
!6318 = !DILocation(line: 1137, column: 25, scope: !6316)
!6319 = !DILocation(line: 1137, column: 28, scope: !6316)
!6320 = !DILocation(line: 1137, column: 39, scope: !6316)
!6321 = !DILocation(line: 1137, column: 49, scope: !6316)
!6322 = !DILocation(line: 1137, column: 54, scope: !6316)
!6323 = !DILocation(line: 1137, column: 57, scope: !6316)
!6324 = !DILocation(line: 1137, column: 11, scope: !6300)
!6325 = !DILocalVariable(name: "dangling_link_sb", scope: !6326, file: !426, line: 1139, type: !462)
!6326 = distinct !DILexicalBlock(scope: !6316, file: !426, line: 1138, column: 9)
!6327 = !DILocation(line: 1139, column: 23, scope: !6326)
!6328 = !DILocation(line: 1140, column: 22, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6326, file: !426, line: 1140, column: 15)
!6330 = !DILocation(line: 1140, column: 15, scope: !6329)
!6331 = !DILocation(line: 1140, column: 51, scope: !6329)
!6332 = !DILocation(line: 1141, column: 15, scope: !6329)
!6333 = !DILocation(line: 1141, column: 18, scope: !6329)
!6334 = !DILocation(line: 1140, column: 15, scope: !6326)
!6335 = !DILocation(line: 1143, column: 19, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !426, line: 1143, column: 19)
!6337 = distinct !DILexicalBlock(scope: !6329, file: !426, line: 1142, column: 13)
!6338 = !DILocation(line: 1143, column: 22, scope: !6336)
!6339 = !DILocation(line: 1143, column: 19, scope: !6337)
!6340 = !DILocation(line: 1145, column: 37, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6336, file: !426, line: 1144, column: 17)
!6342 = !DILocation(line: 1145, column: 47, scope: !6341)
!6343 = !DILocation(line: 1146, column: 37, scope: !6341)
!6344 = !DILocation(line: 1146, column: 49, scope: !6341)
!6345 = !DILocation(line: 1146, column: 48, scope: !6341)
!6346 = !DILocation(line: 1146, column: 46, scope: !6341)
!6347 = !DILocation(line: 1145, column: 31, scope: !6341)
!6348 = !DILocation(line: 1145, column: 29, scope: !6341)
!6349 = !DILocation(line: 1147, column: 32, scope: !6341)
!6350 = !DILocation(line: 1147, column: 30, scope: !6341)
!6351 = !DILocation(line: 1148, column: 17, scope: !6341)
!6352 = !DILocation(line: 1151, column: 32, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6336, file: !426, line: 1150, column: 17)
!6354 = !DILocation(line: 1152, column: 26, scope: !6353)
!6355 = !DILocation(line: 1151, column: 19, scope: !6353)
!6356 = !DILocation(line: 1153, column: 30, scope: !6353)
!6357 = !DILocation(line: 1154, column: 19, scope: !6353)
!6358 = !DILocation(line: 1156, column: 13, scope: !6337)
!6359 = !DILocation(line: 1157, column: 9, scope: !6326)
!6360 = !DILocation(line: 1161, column: 11, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6300, file: !426, line: 1161, column: 11)
!6362 = !DILocation(line: 1161, column: 21, scope: !6361)
!6363 = !DILocation(line: 1161, column: 25, scope: !6361)
!6364 = !DILocation(line: 1161, column: 28, scope: !6361)
!6365 = !DILocation(line: 1161, column: 39, scope: !6361)
!6366 = !DILocation(line: 1162, column: 11, scope: !6361)
!6367 = !DILocation(line: 1162, column: 15, scope: !6361)
!6368 = !DILocation(line: 1162, column: 14, scope: !6361)
!6369 = !DILocation(line: 1162, column: 24, scope: !6361)
!6370 = !DILocation(line: 1162, column: 27, scope: !6361)
!6371 = !DILocation(line: 1162, column: 44, scope: !6361)
!6372 = !DILocation(line: 1162, column: 36, scope: !6361)
!6373 = !DILocation(line: 1162, column: 54, scope: !6361)
!6374 = !DILocation(line: 1162, column: 59, scope: !6361)
!6375 = !DILocation(line: 1161, column: 11, scope: !6300)
!6376 = !DILocation(line: 1163, column: 20, scope: !6361)
!6377 = !DILocation(line: 1163, column: 9, scope: !6361)
!6378 = !DILocation(line: 1164, column: 5, scope: !6300)
!6379 = !DILocation(line: 1167, column: 27, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6295, file: !426, line: 1166, column: 5)
!6381 = !DILocation(line: 1170, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1170, column: 7)
!6383 = !DILocation(line: 1170, column: 17, scope: !6382)
!6384 = !DILocation(line: 1170, column: 7, scope: !6120)
!6385 = !DILocation(line: 1182, column: 11, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !426, line: 1182, column: 11)
!6387 = distinct !DILexicalBlock(scope: !6382, file: !426, line: 1171, column: 5)
!6388 = !DILocation(line: 1182, column: 22, scope: !6386)
!6389 = !DILocation(line: 1182, column: 32, scope: !6386)
!6390 = !DILocation(line: 1182, column: 38, scope: !6386)
!6391 = !DILocation(line: 1182, column: 37, scope: !6386)
!6392 = !DILocation(line: 1182, column: 46, scope: !6386)
!6393 = !DILocation(line: 1182, column: 51, scope: !6386)
!6394 = !DILocation(line: 1182, column: 54, scope: !6386)
!6395 = !DILocation(line: 1182, column: 11, scope: !6387)
!6396 = !DILocation(line: 1184, column: 12, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6386, file: !426, line: 1183, column: 9)
!6398 = !DILocation(line: 1184, column: 20, scope: !6397)
!6399 = !DILocation(line: 1185, column: 11, scope: !6397)
!6400 = !DILocation(line: 1189, column: 17, scope: !6387)
!6401 = !DILocation(line: 1189, column: 29, scope: !6387)
!6402 = !DILocation(line: 1190, column: 14, scope: !6387)
!6403 = !DILocation(line: 1189, column: 7, scope: !6387)
!6404 = !DILocation(line: 1191, column: 18, scope: !6387)
!6405 = !DILocation(line: 1192, column: 7, scope: !6387)
!6406 = !DILocation(line: 1195, column: 14, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1195, column: 7)
!6408 = !DILocation(line: 1195, column: 7, scope: !6407)
!6409 = !DILocation(line: 1195, column: 30, scope: !6407)
!6410 = !DILocation(line: 1195, column: 7, scope: !6120)
!6411 = !DILocation(line: 1197, column: 17, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !426, line: 1196, column: 5)
!6413 = !DILocation(line: 1197, column: 24, scope: !6412)
!6414 = !DILocation(line: 1197, column: 46, scope: !6412)
!6415 = !DILocation(line: 1197, column: 7, scope: !6412)
!6416 = !DILocation(line: 1198, column: 18, scope: !6412)
!6417 = !DILocation(line: 1199, column: 7, scope: !6412)
!6418 = !DILocation(line: 1203, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1203, column: 7)
!6420 = !DILocation(line: 1203, column: 26, scope: !6419)
!6421 = !DILocation(line: 1203, column: 29, scope: !6419)
!6422 = !DILocation(line: 1203, column: 32, scope: !6419)
!6423 = !DILocation(line: 1203, column: 7, scope: !6120)
!6424 = !DILocalVariable(name: "clone_ok", scope: !6425, file: !426, line: 1205, type: !142)
!6425 = distinct !DILexicalBlock(scope: !6419, file: !426, line: 1204, column: 5)
!6426 = !DILocation(line: 1205, column: 12, scope: !6425)
!6427 = !DILocation(line: 1205, column: 35, scope: !6425)
!6428 = !DILocation(line: 1205, column: 46, scope: !6425)
!6429 = !DILocation(line: 1205, column: 23, scope: !6425)
!6430 = !DILocation(line: 1205, column: 59, scope: !6425)
!6431 = !DILocation(line: 1206, column: 11, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6425, file: !426, line: 1206, column: 11)
!6433 = !DILocation(line: 1206, column: 20, scope: !6432)
!6434 = !DILocation(line: 1206, column: 23, scope: !6432)
!6435 = !DILocation(line: 1206, column: 26, scope: !6432)
!6436 = !DILocation(line: 1206, column: 39, scope: !6432)
!6437 = !DILocation(line: 1206, column: 11, scope: !6425)
!6438 = !DILocation(line: 1208, column: 16, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !426, line: 1208, column: 15)
!6440 = distinct !DILexicalBlock(scope: !6432, file: !426, line: 1207, column: 9)
!6441 = !DILocation(line: 1208, column: 15, scope: !6440)
!6442 = !DILocation(line: 1210, column: 25, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6439, file: !426, line: 1209, column: 13)
!6444 = !DILocation(line: 1210, column: 32, scope: !6443)
!6445 = !DILocation(line: 1211, column: 22, scope: !6443)
!6446 = !DILocation(line: 1211, column: 47, scope: !6443)
!6447 = !DILocation(line: 1210, column: 15, scope: !6443)
!6448 = !DILocation(line: 1212, column: 26, scope: !6443)
!6449 = !DILocation(line: 1213, column: 15, scope: !6443)
!6450 = !DILocation(line: 1215, column: 30, scope: !6440)
!6451 = !DILocation(line: 1216, column: 9, scope: !6440)
!6452 = !DILocation(line: 1217, column: 5, scope: !6425)
!6453 = !DILocation(line: 1219, column: 7, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1219, column: 7)
!6455 = !DILocation(line: 1219, column: 7, scope: !6120)
!6456 = !DILocalVariable(name: "buf_alignment", scope: !6457, file: !426, line: 1222, type: !55)
!6457 = distinct !DILexicalBlock(scope: !6454, file: !426, line: 1220, column: 5)
!6458 = !DILocation(line: 1222, column: 14, scope: !6457)
!6459 = !DILocation(line: 1222, column: 30, scope: !6457)
!6460 = !DILocalVariable(name: "buf_size", scope: !6457, file: !426, line: 1223, type: !55)
!6461 = !DILocation(line: 1223, column: 14, scope: !6457)
!6462 = !DILocation(line: 1223, column: 25, scope: !6457)
!6463 = !DILocalVariable(name: "hole_size", scope: !6457, file: !426, line: 1224, type: !55)
!6464 = !DILocation(line: 1224, column: 14, scope: !6457)
!6465 = !DILocation(line: 1224, column: 26, scope: !6457)
!6466 = !DILocation(line: 1226, column: 17, scope: !6457)
!6467 = !DILocation(line: 1226, column: 7, scope: !6457)
!6468 = !DILocalVariable(name: "make_holes", scope: !6457, file: !426, line: 1229, type: !142)
!6469 = !DILocation(line: 1229, column: 12, scope: !6457)
!6470 = !DILocalVariable(name: "sparse_src", scope: !6457, file: !426, line: 1230, type: !142)
!6471 = !DILocation(line: 1230, column: 12, scope: !6457)
!6472 = !DILocation(line: 1230, column: 25, scope: !6457)
!6473 = !DILocation(line: 1232, column: 11, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6457, file: !426, line: 1232, column: 11)
!6475 = !DILocation(line: 1232, column: 11, scope: !6457)
!6476 = !DILocation(line: 1236, column: 15, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !426, line: 1236, column: 15)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !426, line: 1233, column: 9)
!6479 = !DILocation(line: 1236, column: 18, scope: !6477)
!6480 = !DILocation(line: 1236, column: 30, scope: !6477)
!6481 = !DILocation(line: 1236, column: 15, scope: !6478)
!6482 = !DILocation(line: 1237, column: 24, scope: !6477)
!6483 = !DILocation(line: 1237, column: 13, scope: !6477)
!6484 = !DILocation(line: 1243, column: 15, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6478, file: !426, line: 1243, column: 15)
!6486 = !DILocation(line: 1243, column: 18, scope: !6485)
!6487 = !DILocation(line: 1243, column: 30, scope: !6485)
!6488 = !DILocation(line: 1243, column: 45, scope: !6485)
!6489 = !DILocation(line: 1243, column: 48, scope: !6485)
!6490 = !DILocation(line: 1243, column: 15, scope: !6478)
!6491 = !DILocation(line: 1244, column: 24, scope: !6485)
!6492 = !DILocation(line: 1244, column: 13, scope: !6485)
!6493 = !DILocation(line: 1245, column: 9, scope: !6478)
!6494 = !DILocation(line: 1249, column: 13, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6457, file: !426, line: 1249, column: 11)
!6496 = !DILocation(line: 1249, column: 11, scope: !6457)
!6497 = !DILocalVariable(name: "blcm_max", scope: !6498, file: !426, line: 1253, type: !55)
!6498 = distinct !DILexicalBlock(scope: !6495, file: !426, line: 1250, column: 9)
!6499 = !DILocation(line: 1253, column: 18, scope: !6498)
!6500 = !DILocation(line: 1253, column: 57, scope: !6498)
!6501 = !DILocation(line: 1253, column: 55, scope: !6498)
!6502 = !DILocalVariable(name: "blcm", scope: !6498, file: !426, line: 1254, type: !55)
!6503 = !DILocation(line: 1254, column: 18, scope: !6498)
!6504 = !DILocation(line: 1254, column: 37, scope: !6498)
!6505 = !DILocation(line: 1254, column: 63, scope: !6498)
!6506 = !DILocation(line: 1255, column: 37, scope: !6498)
!6507 = !DILocation(line: 1254, column: 25, scope: !6498)
!6508 = !DILocation(line: 1259, column: 15, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6498, file: !426, line: 1259, column: 15)
!6510 = !DILocation(line: 1259, column: 45, scope: !6509)
!6511 = !DILocation(line: 1259, column: 60, scope: !6509)
!6512 = !DILocation(line: 1259, column: 70, scope: !6509)
!6513 = !DILocation(line: 1259, column: 68, scope: !6509)
!6514 = !DILocation(line: 1259, column: 15, scope: !6498)
!6515 = !DILocation(line: 1260, column: 36, scope: !6509)
!6516 = !DILocation(line: 1260, column: 44, scope: !6509)
!6517 = !DILocation(line: 1260, column: 22, scope: !6509)
!6518 = !DILocation(line: 1260, column: 13, scope: !6509)
!6519 = !DILocation(line: 1265, column: 23, scope: !6498)
!6520 = !DILocation(line: 1265, column: 28, scope: !6498)
!6521 = !DILocation(line: 1265, column: 20, scope: !6498)
!6522 = !DILocation(line: 1266, column: 23, scope: !6498)
!6523 = !DILocation(line: 1266, column: 34, scope: !6498)
!6524 = !DILocation(line: 1266, column: 32, scope: !6498)
!6525 = !DILocation(line: 1266, column: 20, scope: !6498)
!6526 = !DILocation(line: 1267, column: 15, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6498, file: !426, line: 1267, column: 15)
!6528 = !DILocation(line: 1267, column: 24, scope: !6527)
!6529 = !DILocation(line: 1267, column: 29, scope: !6527)
!6530 = !DILocation(line: 1267, column: 32, scope: !6527)
!6531 = !DILocation(line: 1267, column: 43, scope: !6527)
!6532 = !DILocation(line: 1267, column: 41, scope: !6527)
!6533 = !DILocation(line: 1267, column: 15, scope: !6498)
!6534 = !DILocation(line: 1268, column: 24, scope: !6527)
!6535 = !DILocation(line: 1268, column: 22, scope: !6527)
!6536 = !DILocation(line: 1268, column: 13, scope: !6527)
!6537 = !DILocation(line: 1269, column: 9, scope: !6498)
!6538 = !DILocation(line: 1271, column: 28, scope: !6457)
!6539 = !DILocation(line: 1271, column: 39, scope: !6457)
!6540 = !DILocation(line: 1271, column: 37, scope: !6457)
!6541 = !DILocation(line: 1271, column: 19, scope: !6457)
!6542 = !DILocation(line: 1271, column: 17, scope: !6457)
!6543 = !DILocation(line: 1272, column: 24, scope: !6457)
!6544 = !DILocation(line: 1272, column: 35, scope: !6457)
!6545 = !DILocation(line: 1272, column: 13, scope: !6457)
!6546 = !DILocation(line: 1272, column: 11, scope: !6457)
!6547 = !DILocation(line: 1274, column: 11, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6457, file: !426, line: 1274, column: 11)
!6549 = !DILocation(line: 1274, column: 11, scope: !6457)
!6550 = !DILocalVariable(name: "normal_copy_required", scope: !6551, file: !426, line: 1276, type: !142)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !426, line: 1275, column: 9)
!6552 = !DILocation(line: 1276, column: 16, scope: !6551)
!6553 = !DILocation(line: 1282, column: 28, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6551, file: !426, line: 1282, column: 15)
!6555 = !DILocation(line: 1282, column: 41, scope: !6554)
!6556 = !DILocation(line: 1282, column: 52, scope: !6554)
!6557 = !DILocation(line: 1282, column: 57, scope: !6554)
!6558 = !DILocation(line: 1282, column: 67, scope: !6554)
!6559 = !DILocation(line: 1283, column: 40, scope: !6554)
!6560 = !DILocation(line: 1284, column: 28, scope: !6554)
!6561 = !DILocation(line: 1284, column: 41, scope: !6554)
!6562 = !DILocation(line: 1284, column: 44, scope: !6554)
!6563 = !DILocation(line: 1285, column: 28, scope: !6554)
!6564 = !DILocation(line: 1285, column: 38, scope: !6554)
!6565 = !DILocation(line: 1282, column: 15, scope: !6554)
!6566 = !DILocation(line: 1282, column: 15, scope: !6551)
!6567 = !DILocation(line: 1286, column: 13, scope: !6554)
!6568 = !DILocation(line: 1288, column: 17, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6551, file: !426, line: 1288, column: 15)
!6570 = !DILocation(line: 1288, column: 15, scope: !6551)
!6571 = !DILocation(line: 1290, column: 26, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6569, file: !426, line: 1289, column: 13)
!6573 = !DILocation(line: 1291, column: 15, scope: !6572)
!6574 = !DILocation(line: 1293, column: 9, scope: !6551)
!6575 = !DILocalVariable(name: "n_read", scope: !6457, file: !426, line: 1295, type: !429)
!6576 = !DILocation(line: 1295, column: 13, scope: !6457)
!6577 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !6457, file: !426, line: 1296, type: !142)
!6578 = !DILocation(line: 1296, column: 12, scope: !6457)
!6579 = !DILocation(line: 1297, column: 26, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6457, file: !426, line: 1297, column: 11)
!6581 = !DILocation(line: 1297, column: 39, scope: !6580)
!6582 = !DILocation(line: 1297, column: 50, scope: !6580)
!6583 = !DILocation(line: 1297, column: 55, scope: !6580)
!6584 = !DILocation(line: 1298, column: 26, scope: !6580)
!6585 = !DILocation(line: 1298, column: 39, scope: !6580)
!6586 = !DILocation(line: 1299, column: 26, scope: !6580)
!6587 = !DILocation(line: 1299, column: 29, scope: !6580)
!6588 = !DILocation(line: 1299, column: 41, scope: !6580)
!6589 = !DILocation(line: 1299, column: 59, scope: !6580)
!6590 = !DILocation(line: 1299, column: 69, scope: !6580)
!6591 = !DILocation(line: 1297, column: 13, scope: !6580)
!6592 = !DILocation(line: 1297, column: 11, scope: !6457)
!6593 = !DILocation(line: 1303, column: 22, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6580, file: !426, line: 1302, column: 9)
!6595 = !DILocation(line: 1304, column: 11, scope: !6594)
!6596 = !DILocation(line: 1306, column: 16, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6580, file: !426, line: 1306, column: 16)
!6598 = !DILocation(line: 1306, column: 34, scope: !6597)
!6599 = !DILocation(line: 1306, column: 48, scope: !6597)
!6600 = !DILocation(line: 1306, column: 59, scope: !6597)
!6601 = !DILocation(line: 1306, column: 37, scope: !6597)
!6602 = !DILocation(line: 1306, column: 67, scope: !6597)
!6603 = !DILocation(line: 1306, column: 16, scope: !6580)
!6604 = !DILocation(line: 1308, column: 21, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6597, file: !426, line: 1307, column: 9)
!6606 = !DILocation(line: 1308, column: 28, scope: !6605)
!6607 = !DILocation(line: 1308, column: 54, scope: !6605)
!6608 = !DILocation(line: 1308, column: 11, scope: !6605)
!6609 = !DILocation(line: 1309, column: 22, scope: !6605)
!6610 = !DILocation(line: 1310, column: 11, scope: !6605)
!6611 = !DILocation(line: 1312, column: 5, scope: !6457)
!6612 = !DILabel(scope: !6120, name: "preserve_metadata", file: !426, line: 1314)
!6613 = !DILocation(line: 1314, column: 1, scope: !6120)
!6614 = !DILocation(line: 1315, column: 7, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1315, column: 7)
!6616 = !DILocation(line: 1315, column: 10, scope: !6615)
!6617 = !DILocation(line: 1315, column: 7, scope: !6120)
!6618 = !DILocalVariable(name: "timespec", scope: !6619, file: !426, line: 1317, type: !510)
!6619 = distinct !DILexicalBlock(scope: !6615, file: !426, line: 1316, column: 5)
!6620 = !DILocation(line: 1317, column: 23, scope: !6619)
!6621 = !DILocation(line: 1318, column: 7, scope: !6619)
!6622 = !DILocation(line: 1318, column: 37, scope: !6619)
!6623 = !DILocation(line: 1318, column: 21, scope: !6619)
!6624 = !DILocation(line: 1319, column: 7, scope: !6619)
!6625 = !DILocation(line: 1319, column: 37, scope: !6619)
!6626 = !DILocation(line: 1319, column: 21, scope: !6619)
!6627 = !DILocation(line: 1321, column: 22, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6619, file: !426, line: 1321, column: 11)
!6629 = !DILocation(line: 1321, column: 33, scope: !6628)
!6630 = !DILocation(line: 1321, column: 43, scope: !6628)
!6631 = !DILocation(line: 1321, column: 11, scope: !6628)
!6632 = !DILocation(line: 1321, column: 53, scope: !6628)
!6633 = !DILocation(line: 1321, column: 11, scope: !6619)
!6634 = !DILocation(line: 1323, column: 21, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6628, file: !426, line: 1322, column: 9)
!6636 = !DILocation(line: 1323, column: 28, scope: !6635)
!6637 = !DILocation(line: 1323, column: 58, scope: !6635)
!6638 = !DILocation(line: 1323, column: 11, scope: !6635)
!6639 = !DILocation(line: 1324, column: 15, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !426, line: 1324, column: 15)
!6641 = !DILocation(line: 1324, column: 18, scope: !6640)
!6642 = !DILocation(line: 1324, column: 15, scope: !6635)
!6643 = !DILocation(line: 1326, column: 26, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6640, file: !426, line: 1325, column: 13)
!6645 = !DILocation(line: 1327, column: 15, scope: !6644)
!6646 = !DILocation(line: 1329, column: 9, scope: !6635)
!6647 = !DILocation(line: 1330, column: 5, scope: !6619)
!6648 = !DILocation(line: 1334, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1334, column: 7)
!6650 = !DILocation(line: 1334, column: 10, scope: !6649)
!6651 = !DILocation(line: 1334, column: 29, scope: !6649)
!6652 = !DILocation(line: 1334, column: 34, scope: !6649)
!6653 = !DILocation(line: 1334, column: 7, scope: !6120)
!6654 = !DILocation(line: 1336, column: 26, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6649, file: !426, line: 1335, column: 5)
!6656 = !DILocation(line: 1336, column: 29, scope: !6655)
!6657 = !DILocation(line: 1336, column: 39, scope: !6655)
!6658 = !DILocation(line: 1336, column: 50, scope: !6655)
!6659 = !DILocation(line: 1336, column: 59, scope: !6655)
!6660 = !DILocation(line: 1336, column: 58, scope: !6655)
!6661 = !DILocation(line: 1336, column: 15, scope: !6655)
!6662 = !DILocation(line: 1336, column: 7, scope: !6655)
!6663 = !DILocation(line: 1339, column: 22, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6655, file: !426, line: 1337, column: 9)
!6665 = !DILocation(line: 1340, column: 11, scope: !6664)
!6666 = !DILocation(line: 1343, column: 20, scope: !6664)
!6667 = !DILocation(line: 1344, column: 11, scope: !6664)
!6668 = !DILocation(line: 1346, column: 5, scope: !6655)
!6669 = !DILocation(line: 1351, column: 7, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1351, column: 7)
!6671 = !DILocation(line: 1351, column: 10, scope: !6670)
!6672 = !DILocation(line: 1351, column: 7, scope: !6120)
!6673 = !DILocalVariable(name: "access_changed", scope: !6674, file: !426, line: 1353, type: !142)
!6674 = distinct !DILexicalBlock(scope: !6670, file: !426, line: 1352, column: 5)
!6675 = !DILocation(line: 1353, column: 12, scope: !6674)
!6676 = !DILocation(line: 1355, column: 16, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6674, file: !426, line: 1355, column: 11)
!6678 = !DILocation(line: 1355, column: 24, scope: !6677)
!6679 = !DILocation(line: 1355, column: 35, scope: !6677)
!6680 = !DILocation(line: 1355, column: 38, scope: !6677)
!6681 = !DILocation(line: 1355, column: 49, scope: !6677)
!6682 = !DILocation(line: 1355, column: 11, scope: !6674)
!6683 = !DILocation(line: 1357, column: 46, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6677, file: !426, line: 1356, column: 9)
!6685 = !DILocation(line: 1357, column: 57, scope: !6684)
!6686 = !DILocation(line: 1357, column: 28, scope: !6684)
!6687 = !DILocation(line: 1358, column: 65, scope: !6684)
!6688 = !DILocation(line: 1357, column: 26, scope: !6684)
!6689 = !DILocation(line: 1359, column: 9, scope: !6684)
!6690 = !DILocation(line: 1361, column: 23, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6674, file: !426, line: 1361, column: 11)
!6692 = !DILocation(line: 1361, column: 33, scope: !6691)
!6693 = !DILocation(line: 1361, column: 46, scope: !6691)
!6694 = !DILocation(line: 1361, column: 56, scope: !6691)
!6695 = !DILocation(line: 1361, column: 67, scope: !6691)
!6696 = !DILocation(line: 1361, column: 12, scope: !6691)
!6697 = !DILocation(line: 1362, column: 11, scope: !6691)
!6698 = !DILocation(line: 1362, column: 14, scope: !6691)
!6699 = !DILocation(line: 1362, column: 17, scope: !6691)
!6700 = !DILocation(line: 1361, column: 11, scope: !6674)
!6701 = !DILocation(line: 1363, column: 20, scope: !6691)
!6702 = !DILocation(line: 1363, column: 9, scope: !6691)
!6703 = !DILocation(line: 1365, column: 11, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6674, file: !426, line: 1365, column: 11)
!6705 = !DILocation(line: 1365, column: 11, scope: !6674)
!6706 = !DILocation(line: 1366, column: 27, scope: !6704)
!6707 = !DILocation(line: 1366, column: 38, scope: !6704)
!6708 = !DILocation(line: 1366, column: 48, scope: !6704)
!6709 = !DILocation(line: 1366, column: 60, scope: !6704)
!6710 = !DILocation(line: 1366, column: 59, scope: !6704)
!6711 = !DILocation(line: 1366, column: 57, scope: !6704)
!6712 = !DILocation(line: 1366, column: 9, scope: !6704)
!6713 = !DILocation(line: 1367, column: 5, scope: !6674)
!6714 = !DILocation(line: 1369, column: 15, scope: !6120)
!6715 = !DILocation(line: 1369, column: 25, scope: !6120)
!6716 = !DILocation(line: 1369, column: 36, scope: !6120)
!6717 = !DILocation(line: 1369, column: 3, scope: !6120)
!6718 = !DILocation(line: 1371, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1371, column: 7)
!6720 = !DILocation(line: 1371, column: 10, scope: !6719)
!6721 = !DILocation(line: 1371, column: 24, scope: !6719)
!6722 = !DILocation(line: 1371, column: 27, scope: !6719)
!6723 = !DILocation(line: 1371, column: 30, scope: !6719)
!6724 = !DILocation(line: 1371, column: 7, scope: !6120)
!6725 = !DILocation(line: 1373, column: 21, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !426, line: 1373, column: 11)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !426, line: 1372, column: 5)
!6728 = !DILocation(line: 1373, column: 31, scope: !6726)
!6729 = !DILocation(line: 1373, column: 44, scope: !6726)
!6730 = !DILocation(line: 1373, column: 54, scope: !6726)
!6731 = !DILocation(line: 1373, column: 65, scope: !6726)
!6732 = !DILocation(line: 1373, column: 11, scope: !6726)
!6733 = !DILocation(line: 1373, column: 75, scope: !6726)
!6734 = !DILocation(line: 1374, column: 11, scope: !6726)
!6735 = !DILocation(line: 1374, column: 14, scope: !6726)
!6736 = !DILocation(line: 1374, column: 17, scope: !6726)
!6737 = !DILocation(line: 1373, column: 11, scope: !6727)
!6738 = !DILocation(line: 1375, column: 20, scope: !6726)
!6739 = !DILocation(line: 1375, column: 9, scope: !6726)
!6740 = !DILocation(line: 1376, column: 5, scope: !6727)
!6741 = !DILocation(line: 1377, column: 12, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6719, file: !426, line: 1377, column: 12)
!6743 = !DILocation(line: 1377, column: 15, scope: !6742)
!6744 = !DILocation(line: 1377, column: 12, scope: !6719)
!6745 = !DILocation(line: 1379, column: 20, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !426, line: 1379, column: 11)
!6747 = distinct !DILexicalBlock(scope: !6742, file: !426, line: 1378, column: 5)
!6748 = !DILocation(line: 1379, column: 30, scope: !6746)
!6749 = !DILocation(line: 1379, column: 41, scope: !6746)
!6750 = !DILocation(line: 1379, column: 44, scope: !6746)
!6751 = !DILocation(line: 1379, column: 11, scope: !6746)
!6752 = !DILocation(line: 1379, column: 50, scope: !6746)
!6753 = !DILocation(line: 1379, column: 11, scope: !6747)
!6754 = !DILocation(line: 1380, column: 20, scope: !6746)
!6755 = !DILocation(line: 1380, column: 9, scope: !6746)
!6756 = !DILocation(line: 1381, column: 5, scope: !6747)
!6757 = !DILocation(line: 1382, column: 12, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6742, file: !426, line: 1382, column: 12)
!6759 = !DILocation(line: 1382, column: 15, scope: !6758)
!6760 = !DILocation(line: 1382, column: 41, scope: !6758)
!6761 = !DILocation(line: 1382, column: 45, scope: !6758)
!6762 = !DILocation(line: 1382, column: 44, scope: !6758)
!6763 = !DILocation(line: 1382, column: 12, scope: !6742)
!6764 = !DILocation(line: 1384, column: 20, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !426, line: 1384, column: 11)
!6766 = distinct !DILexicalBlock(scope: !6758, file: !426, line: 1383, column: 5)
!6767 = !DILocation(line: 1384, column: 30, scope: !6765)
!6768 = !DILocation(line: 1384, column: 56, scope: !6765)
!6769 = !DILocation(line: 1384, column: 55, scope: !6765)
!6770 = !DILocation(line: 1384, column: 53, scope: !6765)
!6771 = !DILocation(line: 1384, column: 11, scope: !6765)
!6772 = !DILocation(line: 1384, column: 73, scope: !6765)
!6773 = !DILocation(line: 1384, column: 11, scope: !6766)
!6774 = !DILocation(line: 1385, column: 20, scope: !6765)
!6775 = !DILocation(line: 1385, column: 9, scope: !6765)
!6776 = !DILocation(line: 1386, column: 5, scope: !6766)
!6777 = !DILocation(line: 1387, column: 12, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6758, file: !426, line: 1387, column: 12)
!6779 = !DILocation(line: 1387, column: 12, scope: !6758)
!6780 = !DILocation(line: 1389, column: 32, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6778, file: !426, line: 1388, column: 5)
!6782 = !DILocation(line: 1389, column: 30, scope: !6781)
!6783 = !DILocation(line: 1389, column: 27, scope: !6781)
!6784 = !DILocation(line: 1390, column: 11, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !426, line: 1390, column: 11)
!6786 = !DILocation(line: 1391, column: 11, scope: !6785)
!6787 = !DILocation(line: 1391, column: 32, scope: !6785)
!6788 = !DILocation(line: 1391, column: 43, scope: !6785)
!6789 = !DILocation(line: 1391, column: 53, scope: !6785)
!6790 = !DILocation(line: 1391, column: 14, scope: !6785)
!6791 = !DILocation(line: 1391, column: 63, scope: !6785)
!6792 = !DILocation(line: 1390, column: 11, scope: !6781)
!6793 = !DILocation(line: 1393, column: 21, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6785, file: !426, line: 1392, column: 9)
!6795 = !DILocation(line: 1393, column: 28, scope: !6794)
!6796 = !DILocation(line: 1394, column: 18, scope: !6794)
!6797 = !DILocation(line: 1393, column: 11, scope: !6794)
!6798 = !DILocation(line: 1395, column: 15, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !426, line: 1395, column: 15)
!6800 = !DILocation(line: 1395, column: 18, scope: !6799)
!6801 = !DILocation(line: 1395, column: 15, scope: !6794)
!6802 = !DILocation(line: 1396, column: 24, scope: !6799)
!6803 = !DILocation(line: 1396, column: 13, scope: !6799)
!6804 = !DILocation(line: 1397, column: 9, scope: !6794)
!6805 = !DILocation(line: 1398, column: 5, scope: !6781)
!6806 = !DILabel(scope: !6120, name: "close_src_and_dst_desc", file: !426, line: 1400)
!6807 = !DILocation(line: 1400, column: 1, scope: !6120)
!6808 = !DILocation(line: 1401, column: 14, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1401, column: 7)
!6810 = !DILocation(line: 1401, column: 7, scope: !6809)
!6811 = !DILocation(line: 1401, column: 25, scope: !6809)
!6812 = !DILocation(line: 1401, column: 7, scope: !6120)
!6813 = !DILocation(line: 1403, column: 17, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6809, file: !426, line: 1402, column: 5)
!6815 = !DILocation(line: 1403, column: 24, scope: !6814)
!6816 = !DILocation(line: 1403, column: 49, scope: !6814)
!6817 = !DILocation(line: 1403, column: 7, scope: !6814)
!6818 = !DILocation(line: 1404, column: 18, scope: !6814)
!6819 = !DILocation(line: 1405, column: 5, scope: !6814)
!6820 = !DILocation(line: 1401, column: 27, scope: !6809)
!6821 = !DILabel(scope: !6120, name: "close_src_desc", file: !426, line: 1406)
!6822 = !DILocation(line: 1406, column: 1, scope: !6120)
!6823 = !DILocation(line: 1407, column: 14, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6120, file: !426, line: 1407, column: 7)
!6825 = !DILocation(line: 1407, column: 7, scope: !6824)
!6826 = !DILocation(line: 1407, column: 27, scope: !6824)
!6827 = !DILocation(line: 1407, column: 7, scope: !6120)
!6828 = !DILocation(line: 1409, column: 17, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !426, line: 1408, column: 5)
!6830 = !DILocation(line: 1409, column: 24, scope: !6829)
!6831 = !DILocation(line: 1409, column: 49, scope: !6829)
!6832 = !DILocation(line: 1409, column: 7, scope: !6829)
!6833 = !DILocation(line: 1410, column: 18, scope: !6829)
!6834 = !DILocation(line: 1411, column: 5, scope: !6829)
!6835 = !DILocation(line: 1413, column: 9, scope: !6120)
!6836 = !DILocation(line: 1413, column: 3, scope: !6120)
!6837 = !DILocation(line: 1414, column: 9, scope: !6120)
!6838 = !DILocation(line: 1414, column: 3, scope: !6120)
!6839 = !DILocation(line: 1415, column: 10, scope: !6120)
!6840 = !DILocation(line: 1415, column: 3, scope: !6120)
!6841 = !DILocation(line: 1416, column: 1, scope: !6120)
!6842 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !426, file: !426, line: 1769, type: !692, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6843 = !DILocation(line: 1771, column: 7, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6842, file: !426, line: 1771, column: 7)
!6845 = !DILocation(line: 1771, column: 29, scope: !6844)
!6846 = !DILocation(line: 1771, column: 7, scope: !6842)
!6847 = !DILocation(line: 1772, column: 5, scope: !6844)
!6848 = !DILocation(line: 1774, column: 1, scope: !6842)
!6849 = distinct !DISubprogram(name: "chown_failure_ok", scope: !426, file: !426, line: 3023, type: !3756, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6850 = !DILocalVariable(name: "x", arg: 1, scope: !6849, file: !426, line: 3023, type: !3460)
!6851 = !DILocation(line: 3023, column: 44, scope: !6849)
!6852 = !DILocation(line: 3029, column: 12, scope: !6849)
!6853 = !DILocation(line: 3029, column: 18, scope: !6849)
!6854 = !DILocation(line: 3029, column: 27, scope: !6849)
!6855 = !DILocation(line: 3029, column: 30, scope: !6849)
!6856 = !DILocation(line: 3029, column: 36, scope: !6849)
!6857 = !DILocation(line: 3029, column: 47, scope: !6849)
!6858 = !DILocation(line: 3029, column: 51, scope: !6849)
!6859 = !DILocation(line: 3029, column: 54, scope: !6849)
!6860 = !DILocation(line: 3029, column: 50, scope: !6849)
!6861 = !DILocation(line: 0, scope: !6849)
!6862 = !DILocation(line: 3029, column: 3, scope: !6849)
!6863 = distinct !DISubprogram(name: "utimens_symlink", scope: !426, file: !426, line: 153, type: !6864, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!7, !183, !6866}
!6866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6867, size: 64)
!6867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!6868 = !DILocalVariable(name: "file", arg: 1, scope: !6863, file: !426, line: 153, type: !183)
!6869 = !DILocation(line: 153, column: 30, scope: !6863)
!6870 = !DILocalVariable(name: "timespec", arg: 2, scope: !6863, file: !426, line: 153, type: !6866)
!6871 = !DILocation(line: 153, column: 59, scope: !6863)
!6872 = !DILocalVariable(name: "err", scope: !6863, file: !426, line: 155, type: !7)
!6873 = !DILocation(line: 155, column: 7, scope: !6863)
!6874 = !DILocation(line: 155, column: 23, scope: !6863)
!6875 = !DILocation(line: 155, column: 29, scope: !6863)
!6876 = !DILocation(line: 155, column: 13, scope: !6863)
!6877 = !DILocation(line: 159, column: 7, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6863, file: !426, line: 159, column: 7)
!6879 = !DILocation(line: 159, column: 11, scope: !6878)
!6880 = !DILocation(line: 159, column: 14, scope: !6878)
!6881 = !DILocation(line: 159, column: 20, scope: !6878)
!6882 = !DILocation(line: 159, column: 7, scope: !6863)
!6883 = !DILocation(line: 160, column: 9, scope: !6878)
!6884 = !DILocation(line: 160, column: 5, scope: !6878)
!6885 = !DILocation(line: 161, column: 10, scope: !6863)
!6886 = !DILocation(line: 161, column: 3, scope: !6863)
!6887 = distinct !DISubprogram(name: "set_owner", scope: !426, file: !426, line: 780, type: !6888, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!7, !3460, !183, !7, !511, !142, !511}
!6890 = !DILocalVariable(name: "x", arg: 1, scope: !6887, file: !426, line: 780, type: !3460)
!6891 = !DILocation(line: 780, column: 37, scope: !6887)
!6892 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6887, file: !426, line: 780, type: !183)
!6893 = !DILocation(line: 780, column: 52, scope: !6887)
!6894 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !6887, file: !426, line: 780, type: !7)
!6895 = !DILocation(line: 780, column: 66, scope: !6887)
!6896 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6887, file: !426, line: 781, type: !511)
!6897 = !DILocation(line: 781, column: 31, scope: !6887)
!6898 = !DILocalVariable(name: "new_dst", arg: 5, scope: !6887, file: !426, line: 781, type: !142)
!6899 = !DILocation(line: 781, column: 44, scope: !6887)
!6900 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !6887, file: !426, line: 782, type: !511)
!6901 = !DILocation(line: 782, column: 31, scope: !6887)
!6902 = !DILocalVariable(name: "uid", scope: !6887, file: !426, line: 784, type: !127)
!6903 = !DILocation(line: 784, column: 9, scope: !6887)
!6904 = !DILocation(line: 784, column: 15, scope: !6887)
!6905 = !DILocation(line: 784, column: 23, scope: !6887)
!6906 = !DILocalVariable(name: "gid", scope: !6887, file: !426, line: 785, type: !129)
!6907 = !DILocation(line: 785, column: 9, scope: !6887)
!6908 = !DILocation(line: 785, column: 15, scope: !6887)
!6909 = !DILocation(line: 785, column: 23, scope: !6887)
!6910 = !DILocation(line: 793, column: 8, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6887, file: !426, line: 793, column: 7)
!6912 = !DILocation(line: 793, column: 16, scope: !6911)
!6913 = !DILocation(line: 793, column: 20, scope: !6911)
!6914 = !DILocation(line: 793, column: 23, scope: !6911)
!6915 = !DILocation(line: 793, column: 37, scope: !6911)
!6916 = !DILocation(line: 793, column: 40, scope: !6911)
!6917 = !DILocation(line: 793, column: 43, scope: !6911)
!6918 = !DILocation(line: 793, column: 53, scope: !6911)
!6919 = !DILocation(line: 793, column: 56, scope: !6911)
!6920 = !DILocation(line: 793, column: 59, scope: !6911)
!6921 = !DILocation(line: 793, column: 7, scope: !6887)
!6922 = !DILocalVariable(name: "old_mode", scope: !6923, file: !426, line: 795, type: !139)
!6923 = distinct !DILexicalBlock(scope: !6911, file: !426, line: 794, column: 5)
!6924 = !DILocation(line: 795, column: 14, scope: !6923)
!6925 = !DILocation(line: 795, column: 25, scope: !6923)
!6926 = !DILocation(line: 795, column: 33, scope: !6923)
!6927 = !DILocalVariable(name: "new_mode", scope: !6923, file: !426, line: 796, type: !139)
!6928 = !DILocation(line: 796, column: 14, scope: !6923)
!6929 = !DILocation(line: 797, column: 10, scope: !6923)
!6930 = !DILocation(line: 797, column: 13, scope: !6923)
!6931 = !DILocation(line: 797, column: 27, scope: !6923)
!6932 = !DILocation(line: 797, column: 30, scope: !6923)
!6933 = !DILocation(line: 797, column: 33, scope: !6923)
!6934 = !DILocation(line: 797, column: 45, scope: !6923)
!6935 = !DILocation(line: 797, column: 53, scope: !6923)
!6936 = !DILocation(line: 797, column: 63, scope: !6923)
!6937 = !DILocation(line: 797, column: 66, scope: !6923)
!6938 = !DILocalVariable(name: "restrictive_temp_mode", scope: !6923, file: !426, line: 798, type: !139)
!6939 = !DILocation(line: 798, column: 14, scope: !6923)
!6940 = !DILocation(line: 798, column: 38, scope: !6923)
!6941 = !DILocation(line: 798, column: 49, scope: !6923)
!6942 = !DILocation(line: 798, column: 47, scope: !6923)
!6943 = !DILocation(line: 798, column: 58, scope: !6923)
!6944 = !DILocation(line: 803, column: 24, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6923, file: !426, line: 800, column: 11)
!6946 = !DILocation(line: 803, column: 34, scope: !6945)
!6947 = !DILocation(line: 803, column: 45, scope: !6945)
!6948 = !DILocation(line: 803, column: 14, scope: !6945)
!6949 = !DILocation(line: 803, column: 68, scope: !6945)
!6950 = !DILocation(line: 800, column: 11, scope: !6923)
!6951 = !DILocation(line: 805, column: 35, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !426, line: 805, column: 15)
!6953 = distinct !DILexicalBlock(scope: !6945, file: !426, line: 804, column: 9)
!6954 = !DILocation(line: 805, column: 17, scope: !6952)
!6955 = !DILocation(line: 805, column: 15, scope: !6953)
!6956 = !DILocation(line: 806, column: 23, scope: !6952)
!6957 = !DILocation(line: 806, column: 30, scope: !6952)
!6958 = !DILocation(line: 807, column: 20, scope: !6952)
!6959 = !DILocation(line: 806, column: 13, scope: !6952)
!6960 = !DILocation(line: 808, column: 19, scope: !6953)
!6961 = !DILocation(line: 808, column: 22, scope: !6953)
!6962 = !DILocation(line: 808, column: 18, scope: !6953)
!6963 = !DILocation(line: 808, column: 11, scope: !6953)
!6964 = !DILocation(line: 810, column: 5, scope: !6923)
!6965 = !DILocation(line: 812, column: 22, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6887, file: !426, line: 812, column: 7)
!6967 = !DILocation(line: 812, column: 32, scope: !6966)
!6968 = !DILocation(line: 812, column: 7, scope: !6887)
!6969 = !DILocation(line: 814, column: 19, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !426, line: 814, column: 11)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !426, line: 813, column: 5)
!6972 = !DILocation(line: 814, column: 30, scope: !6970)
!6973 = !DILocation(line: 814, column: 35, scope: !6970)
!6974 = !DILocation(line: 814, column: 11, scope: !6970)
!6975 = !DILocation(line: 814, column: 40, scope: !6970)
!6976 = !DILocation(line: 814, column: 11, scope: !6971)
!6977 = !DILocation(line: 815, column: 9, scope: !6970)
!6978 = !DILocation(line: 816, column: 11, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6971, file: !426, line: 816, column: 11)
!6980 = !DILocation(line: 816, column: 17, scope: !6979)
!6981 = !DILocation(line: 816, column: 26, scope: !6979)
!6982 = !DILocation(line: 816, column: 29, scope: !6979)
!6983 = !DILocation(line: 816, column: 35, scope: !6979)
!6984 = !DILocation(line: 816, column: 11, scope: !6971)
!6985 = !DILocalVariable(name: "saved_errno", scope: !6986, file: !426, line: 820, type: !7)
!6986 = distinct !DILexicalBlock(scope: !6979, file: !426, line: 817, column: 9)
!6987 = !DILocation(line: 820, column: 15, scope: !6986)
!6988 = !DILocation(line: 820, column: 29, scope: !6986)
!6989 = !DILocalVariable(name: "__x", scope: !6990, file: !426, line: 821, type: !7)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !426, line: 821, column: 11)
!6991 = !DILocation(line: 821, column: 11, scope: !6990)
!6992 = !DILocation(line: 822, column: 19, scope: !6986)
!6993 = !DILocation(line: 822, column: 11, scope: !6986)
!6994 = !DILocation(line: 822, column: 17, scope: !6986)
!6995 = !DILocation(line: 823, column: 9, scope: !6986)
!6996 = !DILocation(line: 824, column: 5, scope: !6971)
!6997 = !DILocation(line: 827, column: 19, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !426, line: 827, column: 11)
!6999 = distinct !DILexicalBlock(scope: !6966, file: !426, line: 826, column: 5)
!7000 = !DILocation(line: 827, column: 29, scope: !6998)
!7001 = !DILocation(line: 827, column: 34, scope: !6998)
!7002 = !DILocation(line: 827, column: 11, scope: !6998)
!7003 = !DILocation(line: 827, column: 39, scope: !6998)
!7004 = !DILocation(line: 827, column: 11, scope: !6999)
!7005 = !DILocation(line: 828, column: 9, scope: !6998)
!7006 = !DILocation(line: 829, column: 11, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6999, file: !426, line: 829, column: 11)
!7008 = !DILocation(line: 829, column: 17, scope: !7007)
!7009 = !DILocation(line: 829, column: 26, scope: !7007)
!7010 = !DILocation(line: 829, column: 29, scope: !7007)
!7011 = !DILocation(line: 829, column: 35, scope: !7007)
!7012 = !DILocation(line: 829, column: 11, scope: !6999)
!7013 = !DILocalVariable(name: "saved_errno", scope: !7014, file: !426, line: 833, type: !7)
!7014 = distinct !DILexicalBlock(scope: !7007, file: !426, line: 830, column: 9)
!7015 = !DILocation(line: 833, column: 15, scope: !7014)
!7016 = !DILocation(line: 833, column: 29, scope: !7014)
!7017 = !DILocalVariable(name: "__x", scope: !7018, file: !426, line: 834, type: !7)
!7018 = distinct !DILexicalBlock(scope: !7014, file: !426, line: 834, column: 11)
!7019 = !DILocation(line: 834, column: 11, scope: !7018)
!7020 = !DILocation(line: 835, column: 19, scope: !7014)
!7021 = !DILocation(line: 835, column: 11, scope: !7014)
!7022 = !DILocation(line: 835, column: 17, scope: !7014)
!7023 = !DILocation(line: 836, column: 9, scope: !7014)
!7024 = !DILocation(line: 839, column: 27, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6887, file: !426, line: 839, column: 7)
!7026 = !DILocation(line: 839, column: 9, scope: !7025)
!7027 = !DILocation(line: 839, column: 7, scope: !6887)
!7028 = !DILocation(line: 841, column: 17, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7025, file: !426, line: 840, column: 5)
!7030 = !DILocation(line: 841, column: 24, scope: !7029)
!7031 = !DILocation(line: 842, column: 14, scope: !7029)
!7032 = !DILocation(line: 841, column: 7, scope: !7029)
!7033 = !DILocation(line: 843, column: 11, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !426, line: 843, column: 11)
!7035 = !DILocation(line: 843, column: 14, scope: !7034)
!7036 = !DILocation(line: 843, column: 11, scope: !7029)
!7037 = !DILocation(line: 844, column: 9, scope: !7034)
!7038 = !DILocation(line: 845, column: 5, scope: !7029)
!7039 = !DILocation(line: 847, column: 3, scope: !6887)
!7040 = !DILocation(line: 848, column: 1, scope: !6887)
!7041 = distinct !DISubprogram(name: "copy_attr", scope: !426, file: !426, line: 659, type: !7042, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!142, !183, !7, !183, !7, !3460}
!7044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !7045, line: 25, size: 192, elements: !7046)
!7045 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!7046 = !{!7047, !7052, !7056}
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7044, file: !7045, line: 27, baseType: !7048, size: 64)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 64)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{null, !7051, !183, null}
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !7044, file: !7045, line: 30, baseType: !7053, size: 64, offset: 64)
!7053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7054, size: 64)
!7054 = !DISubroutineType(types: !7055)
!7055 = !{!183, !7051, !183}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !7044, file: !7045, line: 33, baseType: !7057, size: 64, offset: 128)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 64)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{null, !7051, !183}
!7060 = !DILocalVariable(name: "src_path", arg: 1, scope: !7041, file: !426, line: 659, type: !183)
!7061 = !DILocation(line: 659, column: 24, scope: !7041)
!7062 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7041, file: !426, line: 659, type: !7)
!7063 = !DILocation(line: 659, column: 38, scope: !7041)
!7064 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7041, file: !426, line: 660, type: !183)
!7065 = !DILocation(line: 660, column: 24, scope: !7041)
!7066 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7041, file: !426, line: 660, type: !7)
!7067 = !DILocation(line: 660, column: 38, scope: !7041)
!7068 = !DILocalVariable(name: "x", arg: 5, scope: !7041, file: !426, line: 660, type: !3460)
!7069 = !DILocation(line: 660, column: 71, scope: !7041)
!7070 = !DILocalVariable(name: "ret", scope: !7041, file: !426, line: 662, type: !7)
!7071 = !DILocation(line: 662, column: 7, scope: !7041)
!7072 = !DILocalVariable(name: "all_errors", scope: !7041, file: !426, line: 663, type: !142)
!7073 = !DILocation(line: 663, column: 8, scope: !7041)
!7074 = !DILocation(line: 663, column: 23, scope: !7041)
!7075 = !DILocation(line: 663, column: 26, scope: !7041)
!7076 = !DILocation(line: 663, column: 45, scope: !7041)
!7077 = !DILocation(line: 663, column: 48, scope: !7041)
!7078 = !DILocation(line: 663, column: 51, scope: !7041)
!7079 = !DILocalVariable(name: "some_errors", scope: !7041, file: !426, line: 664, type: !142)
!7080 = !DILocation(line: 664, column: 8, scope: !7041)
!7081 = !DILocation(line: 664, column: 24, scope: !7041)
!7082 = !DILocation(line: 664, column: 35, scope: !7041)
!7083 = !DILocation(line: 664, column: 39, scope: !7041)
!7084 = !DILocation(line: 664, column: 42, scope: !7041)
!7085 = !DILocation(line: 664, column: 38, scope: !7041)
!7086 = !DILocation(line: 0, scope: !7041)
!7087 = !DILocalVariable(name: "selinux_done", scope: !7041, file: !426, line: 665, type: !142)
!7088 = !DILocation(line: 665, column: 8, scope: !7041)
!7089 = !DILocation(line: 665, column: 24, scope: !7041)
!7090 = !DILocation(line: 665, column: 27, scope: !7041)
!7091 = !DILocation(line: 665, column: 53, scope: !7041)
!7092 = !DILocation(line: 665, column: 56, scope: !7041)
!7093 = !DILocation(line: 665, column: 59, scope: !7041)
!7094 = !DILocalVariable(name: "ctx", scope: !7041, file: !426, line: 666, type: !7044)
!7095 = !DILocation(line: 666, column: 24, scope: !7041)
!7096 = !DILocation(line: 667, column: 3, scope: !7041)
!7097 = !DILocation(line: 668, column: 14, scope: !7041)
!7098 = !DILocation(line: 672, column: 12, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7041, file: !426, line: 672, column: 7)
!7100 = !DILocation(line: 672, column: 9, scope: !7099)
!7101 = !DILocation(line: 672, column: 19, scope: !7099)
!7102 = !DILocation(line: 672, column: 27, scope: !7099)
!7103 = !DILocation(line: 672, column: 24, scope: !7099)
!7104 = !DILocation(line: 672, column: 7, scope: !7041)
!7105 = !DILocation(line: 673, column: 25, scope: !7099)
!7106 = !DILocation(line: 673, column: 35, scope: !7099)
!7107 = !DILocation(line: 673, column: 43, scope: !7099)
!7108 = !DILocation(line: 673, column: 53, scope: !7099)
!7109 = !DILocation(line: 674, column: 25, scope: !7099)
!7110 = !DILocation(line: 675, column: 26, scope: !7099)
!7111 = !DILocation(line: 675, column: 37, scope: !7099)
!7112 = !DILocation(line: 675, column: 40, scope: !7099)
!7113 = !DILocation(line: 673, column: 11, scope: !7099)
!7114 = !DILocation(line: 673, column: 9, scope: !7099)
!7115 = !DILocation(line: 673, column: 5, scope: !7099)
!7116 = !DILocation(line: 677, column: 27, scope: !7099)
!7117 = !DILocation(line: 677, column: 37, scope: !7099)
!7118 = !DILocation(line: 678, column: 27, scope: !7099)
!7119 = !DILocation(line: 679, column: 28, scope: !7099)
!7120 = !DILocation(line: 679, column: 39, scope: !7099)
!7121 = !DILocation(line: 679, column: 42, scope: !7099)
!7122 = !DILocation(line: 677, column: 11, scope: !7099)
!7123 = !DILocation(line: 677, column: 9, scope: !7099)
!7124 = !DILocation(line: 681, column: 10, scope: !7041)
!7125 = !DILocation(line: 681, column: 14, scope: !7041)
!7126 = !DILocation(line: 681, column: 3, scope: !7041)
!7127 = distinct !DISubprogram(name: "set_author", scope: !426, file: !426, line: 856, type: !7128, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{null, !183, !7, !511}
!7130 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7127, file: !426, line: 856, type: !183)
!7131 = !DILocation(line: 856, column: 25, scope: !7127)
!7132 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7127, file: !426, line: 856, type: !7)
!7133 = !DILocation(line: 856, column: 39, scope: !7127)
!7134 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7127, file: !426, line: 856, type: !511)
!7135 = !DILocation(line: 856, column: 69, scope: !7127)
!7136 = !DILocation(line: 877, column: 10, scope: !7127)
!7137 = !DILocation(line: 878, column: 10, scope: !7127)
!7138 = !DILocation(line: 879, column: 10, scope: !7127)
!7139 = !DILocation(line: 881, column: 1, scope: !7127)
!7140 = !DILocation(line: 3052, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !588, file: !426, line: 3052, column: 7)
!7142 = !DILocation(line: 3052, column: 12, scope: !7141)
!7143 = !DILocation(line: 3052, column: 7, scope: !588)
!7144 = !DILocation(line: 3054, column: 14, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !426, line: 3053, column: 5)
!7146 = !DILocation(line: 3054, column: 12, scope: !7145)
!7147 = !DILocation(line: 3055, column: 14, scope: !7145)
!7148 = !DILocation(line: 3055, column: 7, scope: !7145)
!7149 = !DILocation(line: 3056, column: 5, scope: !7145)
!7150 = !DILocation(line: 3057, column: 10, scope: !588)
!7151 = !DILocation(line: 3057, column: 3, scope: !588)
!7152 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !426, file: !426, line: 619, type: !7049, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7153 = !DILocalVariable(name: "ctx", arg: 1, scope: !7152, file: !426, line: 619, type: !7051)
!7154 = !DILocation(line: 619, column: 43, scope: !7152)
!7155 = !DILocalVariable(name: "fmt", arg: 2, scope: !7152, file: !426, line: 620, type: !183)
!7156 = !DILocation(line: 620, column: 30, scope: !7152)
!7157 = !DILocalVariable(name: "err", scope: !7152, file: !426, line: 622, type: !7)
!7158 = !DILocation(line: 622, column: 7, scope: !7152)
!7159 = !DILocation(line: 622, column: 13, scope: !7152)
!7160 = !DILocalVariable(name: "ap", scope: !7152, file: !426, line: 623, type: !574)
!7161 = !DILocation(line: 623, column: 11, scope: !7152)
!7162 = !DILocation(line: 626, column: 3, scope: !7152)
!7163 = !DILocation(line: 627, column: 14, scope: !7152)
!7164 = !DILocation(line: 627, column: 19, scope: !7152)
!7165 = !DILocation(line: 627, column: 24, scope: !7152)
!7166 = !DILocation(line: 627, column: 3, scope: !7152)
!7167 = !DILocation(line: 628, column: 3, scope: !7152)
!7168 = !DILocation(line: 629, column: 1, scope: !7152)
!7169 = distinct !DISubprogram(name: "copy_attr_error", scope: !426, file: !426, line: 603, type: !7049, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7170 = !DILocalVariable(name: "ctx", arg: 1, scope: !7169, file: !426, line: 603, type: !7051)
!7171 = !DILocation(line: 603, column: 40, scope: !7169)
!7172 = !DILocalVariable(name: "fmt", arg: 2, scope: !7169, file: !426, line: 604, type: !183)
!7173 = !DILocation(line: 604, column: 30, scope: !7169)
!7174 = !DILocation(line: 606, column: 27, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7169, file: !426, line: 606, column: 7)
!7176 = !DILocation(line: 606, column: 8, scope: !7175)
!7177 = !DILocation(line: 606, column: 7, scope: !7169)
!7178 = !DILocalVariable(name: "err", scope: !7179, file: !426, line: 608, type: !7)
!7179 = distinct !DILexicalBlock(scope: !7175, file: !426, line: 607, column: 5)
!7180 = !DILocation(line: 608, column: 11, scope: !7179)
!7181 = !DILocation(line: 608, column: 17, scope: !7179)
!7182 = !DILocalVariable(name: "ap", scope: !7179, file: !426, line: 609, type: !574)
!7183 = !DILocation(line: 609, column: 15, scope: !7179)
!7184 = !DILocation(line: 612, column: 7, scope: !7179)
!7185 = !DILocation(line: 613, column: 18, scope: !7179)
!7186 = !DILocation(line: 613, column: 23, scope: !7179)
!7187 = !DILocation(line: 613, column: 28, scope: !7179)
!7188 = !DILocation(line: 613, column: 7, scope: !7179)
!7189 = !DILocation(line: 614, column: 7, scope: !7179)
!7190 = !DILocation(line: 615, column: 5, scope: !7179)
!7191 = !DILocation(line: 616, column: 1, scope: !7169)
!7192 = distinct !DISubprogram(name: "copy_attr_quote", scope: !426, file: !426, line: 632, type: !7054, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7193 = !DILocalVariable(name: "ctx", arg: 1, scope: !7192, file: !426, line: 632, type: !7051)
!7194 = !DILocation(line: 632, column: 40, scope: !7192)
!7195 = !DILocalVariable(name: "str", arg: 2, scope: !7192, file: !426, line: 632, type: !183)
!7196 = !DILocation(line: 632, column: 68, scope: !7192)
!7197 = !DILocation(line: 634, column: 10, scope: !7192)
!7198 = !DILocation(line: 634, column: 3, scope: !7192)
!7199 = distinct !DISubprogram(name: "copy_attr_free", scope: !426, file: !426, line: 638, type: !7058, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7200 = !DILocalVariable(name: "ctx", arg: 1, scope: !7199, file: !426, line: 638, type: !7051)
!7201 = !DILocation(line: 638, column: 39, scope: !7199)
!7202 = !DILocalVariable(name: "str", arg: 2, scope: !7199, file: !426, line: 639, type: !183)
!7203 = !DILocation(line: 639, column: 29, scope: !7199)
!7204 = !DILocation(line: 641, column: 1, scope: !7199)
!7205 = distinct !DISubprogram(name: "check_selinux_attr", scope: !426, file: !426, line: 649, type: !7206, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!7, !183, !7051}
!7208 = !DILocalVariable(name: "name", arg: 1, scope: !7205, file: !426, line: 649, type: !183)
!7209 = !DILocation(line: 649, column: 33, scope: !7205)
!7210 = !DILocalVariable(name: "ctx", arg: 2, scope: !7205, file: !426, line: 649, type: !7051)
!7211 = !DILocation(line: 649, column: 61, scope: !7205)
!7212 = !DILocation(line: 651, column: 10, scope: !7205)
!7213 = !DILocation(line: 652, column: 10, scope: !7205)
!7214 = !DILocation(line: 652, column: 42, scope: !7205)
!7215 = !DILocation(line: 652, column: 48, scope: !7205)
!7216 = !DILocation(line: 652, column: 13, scope: !7205)
!7217 = !DILocation(line: 0, scope: !7205)
!7218 = !DILocation(line: 651, column: 3, scope: !7205)
!7219 = distinct !DISubprogram(name: "owner_failure_ok", scope: !426, file: !426, line: 3037, type: !3756, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7220 = !DILocalVariable(name: "x", arg: 1, scope: !7219, file: !426, line: 3037, type: !3460)
!7221 = !DILocation(line: 3037, column: 44, scope: !7219)
!7222 = !DILocation(line: 3039, column: 12, scope: !7219)
!7223 = !DILocation(line: 3039, column: 18, scope: !7219)
!7224 = !DILocation(line: 3039, column: 27, scope: !7219)
!7225 = !DILocation(line: 3039, column: 30, scope: !7219)
!7226 = !DILocation(line: 3039, column: 36, scope: !7219)
!7227 = !DILocation(line: 3039, column: 47, scope: !7219)
!7228 = !DILocation(line: 3039, column: 51, scope: !7219)
!7229 = !DILocation(line: 3039, column: 54, scope: !7219)
!7230 = !DILocation(line: 3039, column: 50, scope: !7219)
!7231 = !DILocation(line: 0, scope: !7219)
!7232 = !DILocation(line: 3039, column: 3, scope: !7219)
!7233 = distinct !DISubprogram(name: "clone_file", scope: !426, file: !426, line: 334, type: !1156, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7234 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7233, file: !426, line: 334, type: !7)
!7235 = !DILocation(line: 334, column: 17, scope: !7233)
!7236 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7233, file: !426, line: 334, type: !7)
!7237 = !DILocation(line: 334, column: 30, scope: !7233)
!7238 = !DILocation(line: 337, column: 17, scope: !7233)
!7239 = !DILocation(line: 337, column: 35, scope: !7233)
!7240 = !DILocation(line: 337, column: 10, scope: !7233)
!7241 = !DILocation(line: 337, column: 3, scope: !7233)
!7242 = distinct !DISubprogram(name: "io_blksize", scope: !7243, file: !7243, line: 75, type: !7244, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7243 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!7244 = !DISubroutineType(types: !7245)
!7245 = !{!55, !462}
!7246 = !DILocalVariable(name: "sb", arg: 1, scope: !7242, file: !7243, line: 75, type: !462)
!7247 = !DILocation(line: 75, column: 25, scope: !7242)
!7248 = !DILocation(line: 77, column: 10, scope: !7242)
!7249 = !DILocation(line: 77, column: 3, scope: !7242)
!7250 = distinct !DISubprogram(name: "is_probably_sparse", scope: !426, file: !426, line: 995, type: !7251, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{!142, !511}
!7253 = !DILocalVariable(name: "sb", arg: 1, scope: !7250, file: !426, line: 995, type: !511)
!7254 = !DILocation(line: 995, column: 40, scope: !7250)
!7255 = !DILocation(line: 998, column: 14, scope: !7250)
!7256 = !DILocation(line: 999, column: 11, scope: !7250)
!7257 = !DILocation(line: 999, column: 14, scope: !7250)
!7258 = !DILocation(line: 999, column: 33, scope: !7250)
!7259 = !DILocation(line: 999, column: 37, scope: !7250)
!7260 = !DILocation(line: 999, column: 45, scope: !7250)
!7261 = !DILocation(line: 999, column: 31, scope: !7250)
!7262 = !DILocation(line: 0, scope: !7250)
!7263 = !DILocation(line: 997, column: 3, scope: !7250)
!7264 = distinct !DISubprogram(name: "ptr_align", scope: !294, file: !294, line: 498, type: !7265, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!53, !831, !55}
!7267 = !DILocalVariable(name: "ptr", arg: 1, scope: !7264, file: !294, line: 498, type: !831)
!7268 = !DILocation(line: 498, column: 24, scope: !7264)
!7269 = !DILocalVariable(name: "alignment", arg: 2, scope: !7264, file: !294, line: 498, type: !55)
!7270 = !DILocation(line: 498, column: 36, scope: !7264)
!7271 = !DILocalVariable(name: "p0", scope: !7264, file: !294, line: 500, type: !183)
!7272 = !DILocation(line: 500, column: 15, scope: !7264)
!7273 = !DILocation(line: 500, column: 20, scope: !7264)
!7274 = !DILocalVariable(name: "p1", scope: !7264, file: !294, line: 501, type: !183)
!7275 = !DILocation(line: 501, column: 15, scope: !7264)
!7276 = !DILocation(line: 501, column: 20, scope: !7264)
!7277 = !DILocation(line: 501, column: 25, scope: !7264)
!7278 = !DILocation(line: 501, column: 23, scope: !7264)
!7279 = !DILocation(line: 501, column: 35, scope: !7264)
!7280 = !DILocation(line: 502, column: 20, scope: !7264)
!7281 = !DILocation(line: 502, column: 34, scope: !7264)
!7282 = !DILocation(line: 502, column: 25, scope: !7264)
!7283 = !DILocation(line: 502, column: 39, scope: !7264)
!7284 = !DILocation(line: 502, column: 37, scope: !7264)
!7285 = !DILocation(line: 502, column: 23, scope: !7264)
!7286 = !DILocation(line: 502, column: 3, scope: !7264)
!7287 = distinct !DISubprogram(name: "extent_copy", scope: !426, file: !426, line: 387, type: !7288, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7288 = !DISubroutineType(types: !7289)
!7289 = !{!142, !7, !7, !9, !55, !55, !429, !89, !183, !183, !3724}
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !561, line: 36, size: 384, elements: !7291)
!7291 = !{!7292, !7293, !7294, !7295, !7296, !7297, !7298}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7290, file: !561, line: 39, baseType: !7, size: 32)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !7290, file: !561, line: 42, baseType: !429, size: 64, offset: 64)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !7290, file: !561, line: 45, baseType: !70, size: 32, offset: 128)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !7290, file: !561, line: 48, baseType: !55, size: 64, offset: 192)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !7290, file: !561, line: 52, baseType: !142, size: 8, offset: 256)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !7290, file: !561, line: 55, baseType: !142, size: 8, offset: 264)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !7290, file: !561, line: 58, baseType: !559, size: 64, offset: 320)
!7299 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7287, file: !426, line: 387, type: !7)
!7300 = !DILocation(line: 387, column: 18, scope: !7287)
!7301 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7287, file: !426, line: 387, type: !7)
!7302 = !DILocation(line: 387, column: 30, scope: !7287)
!7303 = !DILocalVariable(name: "buf", arg: 3, scope: !7287, file: !426, line: 387, type: !9)
!7304 = !DILocation(line: 387, column: 45, scope: !7287)
!7305 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7287, file: !426, line: 387, type: !55)
!7306 = !DILocation(line: 387, column: 57, scope: !7287)
!7307 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7287, file: !426, line: 388, type: !55)
!7308 = !DILocation(line: 388, column: 21, scope: !7287)
!7309 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7287, file: !426, line: 388, type: !429)
!7310 = !DILocation(line: 388, column: 38, scope: !7287)
!7311 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7287, file: !426, line: 389, type: !89)
!7312 = !DILocation(line: 389, column: 31, scope: !7287)
!7313 = !DILocalVariable(name: "src_name", arg: 8, scope: !7287, file: !426, line: 390, type: !183)
!7314 = !DILocation(line: 390, column: 26, scope: !7287)
!7315 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7287, file: !426, line: 390, type: !183)
!7316 = !DILocation(line: 390, column: 48, scope: !7287)
!7317 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7287, file: !426, line: 391, type: !3724)
!7318 = !DILocation(line: 391, column: 20, scope: !7287)
!7319 = !DILocalVariable(name: "scan", scope: !7287, file: !426, line: 393, type: !7290)
!7320 = !DILocation(line: 393, column: 22, scope: !7287)
!7321 = !DILocalVariable(name: "last_ext_start", scope: !7287, file: !426, line: 394, type: !429)
!7322 = !DILocation(line: 394, column: 9, scope: !7287)
!7323 = !DILocalVariable(name: "last_ext_len", scope: !7287, file: !426, line: 395, type: !429)
!7324 = !DILocation(line: 395, column: 9, scope: !7287)
!7325 = !DILocalVariable(name: "dest_pos", scope: !7287, file: !426, line: 399, type: !429)
!7326 = !DILocation(line: 399, column: 9, scope: !7287)
!7327 = !DILocation(line: 401, column: 21, scope: !7287)
!7328 = !DILocation(line: 401, column: 3, scope: !7287)
!7329 = !DILocation(line: 403, column: 4, scope: !7287)
!7330 = !DILocation(line: 403, column: 24, scope: !7287)
!7331 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7287, file: !426, line: 404, type: !142)
!7332 = !DILocation(line: 404, column: 8, scope: !7287)
!7333 = !DILocation(line: 405, column: 3, scope: !7287)
!7334 = !DILocalVariable(name: "ok", scope: !7335, file: !426, line: 407, type: !142)
!7335 = distinct !DILexicalBlock(scope: !7287, file: !426, line: 406, column: 5)
!7336 = !DILocation(line: 407, column: 12, scope: !7335)
!7337 = !DILocation(line: 407, column: 17, scope: !7335)
!7338 = !DILocation(line: 408, column: 13, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7335, file: !426, line: 408, column: 11)
!7340 = !DILocation(line: 408, column: 11, scope: !7335)
!7341 = !DILocation(line: 410, column: 20, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !426, line: 410, column: 15)
!7343 = distinct !DILexicalBlock(scope: !7339, file: !426, line: 409, column: 9)
!7344 = !DILocation(line: 410, column: 15, scope: !7343)
!7345 = !DILocation(line: 411, column: 13, scope: !7342)
!7346 = !DILocation(line: 413, column: 20, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7343, file: !426, line: 413, column: 15)
!7348 = !DILocation(line: 413, column: 15, scope: !7343)
!7349 = !DILocation(line: 415, column: 16, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7347, file: !426, line: 414, column: 13)
!7351 = !DILocation(line: 415, column: 36, scope: !7350)
!7352 = !DILocation(line: 416, column: 15, scope: !7350)
!7353 = !DILocation(line: 419, column: 21, scope: !7343)
!7354 = !DILocation(line: 419, column: 28, scope: !7343)
!7355 = !DILocation(line: 420, column: 18, scope: !7343)
!7356 = !DILocation(line: 419, column: 11, scope: !7343)
!7357 = !DILocation(line: 421, column: 11, scope: !7343)
!7358 = !DILocalVariable(name: "empty_extent", scope: !7335, file: !426, line: 424, type: !142)
!7359 = !DILocation(line: 424, column: 12, scope: !7335)
!7360 = !DILocalVariable(name: "i", scope: !7361, file: !426, line: 425, type: !70)
!7361 = distinct !DILexicalBlock(scope: !7335, file: !426, line: 425, column: 7)
!7362 = !DILocation(line: 425, column: 25, scope: !7361)
!7363 = !DILocation(line: 425, column: 12, scope: !7361)
!7364 = !DILocation(line: 425, column: 32, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7361, file: !426, line: 425, column: 7)
!7366 = !DILocation(line: 425, column: 41, scope: !7365)
!7367 = !DILocation(line: 425, column: 34, scope: !7365)
!7368 = !DILocation(line: 425, column: 50, scope: !7365)
!7369 = !DILocation(line: 425, column: 53, scope: !7365)
!7370 = !DILocation(line: 425, column: 7, scope: !7361)
!7371 = !DILocalVariable(name: "ext_start", scope: !7372, file: !426, line: 427, type: !429)
!7372 = distinct !DILexicalBlock(scope: !7365, file: !426, line: 426, column: 9)
!7373 = !DILocation(line: 427, column: 17, scope: !7372)
!7374 = !DILocalVariable(name: "ext_len", scope: !7372, file: !426, line: 428, type: !429)
!7375 = !DILocation(line: 428, column: 17, scope: !7372)
!7376 = !DILocalVariable(name: "ext_hole_size", scope: !7372, file: !426, line: 429, type: !429)
!7377 = !DILocation(line: 429, column: 17, scope: !7372)
!7378 = !DILocation(line: 431, column: 15, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7372, file: !426, line: 431, column: 15)
!7380 = !DILocation(line: 431, column: 24, scope: !7379)
!7381 = !DILocation(line: 431, column: 17, scope: !7379)
!7382 = !DILocation(line: 431, column: 15, scope: !7372)
!7383 = !DILocation(line: 433, column: 32, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !426, line: 432, column: 13)
!7385 = !DILocation(line: 433, column: 41, scope: !7384)
!7386 = !DILocation(line: 433, column: 27, scope: !7384)
!7387 = !DILocation(line: 433, column: 44, scope: !7384)
!7388 = !DILocation(line: 433, column: 25, scope: !7384)
!7389 = !DILocation(line: 434, column: 30, scope: !7384)
!7390 = !DILocation(line: 434, column: 39, scope: !7384)
!7391 = !DILocation(line: 434, column: 25, scope: !7384)
!7392 = !DILocation(line: 434, column: 42, scope: !7384)
!7393 = !DILocation(line: 434, column: 23, scope: !7384)
!7394 = !DILocation(line: 435, column: 13, scope: !7384)
!7395 = !DILocation(line: 438, column: 16, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7379, file: !426, line: 437, column: 13)
!7397 = !DILocation(line: 439, column: 27, scope: !7396)
!7398 = !DILocation(line: 439, column: 49, scope: !7396)
!7399 = !DILocation(line: 439, column: 58, scope: !7396)
!7400 = !DILocation(line: 439, column: 44, scope: !7396)
!7401 = !DILocation(line: 439, column: 61, scope: !7396)
!7402 = !DILocation(line: 439, column: 42, scope: !7396)
!7403 = !DILocation(line: 439, column: 25, scope: !7396)
!7404 = !DILocation(line: 440, column: 23, scope: !7396)
!7405 = !DILocation(line: 450, column: 15, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7372, file: !426, line: 450, column: 15)
!7407 = !DILocation(line: 450, column: 32, scope: !7406)
!7408 = !DILocation(line: 450, column: 44, scope: !7406)
!7409 = !DILocation(line: 450, column: 42, scope: !7406)
!7410 = !DILocation(line: 450, column: 30, scope: !7406)
!7411 = !DILocation(line: 450, column: 15, scope: !7372)
!7412 = !DILocation(line: 452, column: 19, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !426, line: 452, column: 19)
!7414 = distinct !DILexicalBlock(scope: !7406, file: !426, line: 451, column: 13)
!7415 = !DILocation(line: 452, column: 36, scope: !7413)
!7416 = !DILocation(line: 452, column: 34, scope: !7413)
!7417 = !DILocation(line: 452, column: 19, scope: !7414)
!7418 = !DILocation(line: 453, column: 29, scope: !7413)
!7419 = !DILocation(line: 453, column: 27, scope: !7413)
!7420 = !DILocation(line: 453, column: 17, scope: !7413)
!7421 = !DILocation(line: 454, column: 25, scope: !7414)
!7422 = !DILocation(line: 454, column: 42, scope: !7414)
!7423 = !DILocation(line: 454, column: 40, scope: !7414)
!7424 = !DILocation(line: 454, column: 23, scope: !7414)
!7425 = !DILocation(line: 455, column: 13, scope: !7414)
!7426 = !DILocation(line: 457, column: 27, scope: !7372)
!7427 = !DILocation(line: 457, column: 39, scope: !7372)
!7428 = !DILocation(line: 457, column: 37, scope: !7372)
!7429 = !DILocation(line: 457, column: 56, scope: !7372)
!7430 = !DILocation(line: 457, column: 54, scope: !7372)
!7431 = !DILocation(line: 457, column: 25, scope: !7372)
!7432 = !DILocation(line: 459, column: 29, scope: !7372)
!7433 = !DILocation(line: 461, column: 15, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7372, file: !426, line: 461, column: 15)
!7435 = !DILocation(line: 461, column: 15, scope: !7372)
!7436 = !DILocation(line: 463, column: 26, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !426, line: 463, column: 19)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !426, line: 462, column: 13)
!7439 = !DILocation(line: 463, column: 34, scope: !7437)
!7440 = !DILocation(line: 463, column: 19, scope: !7437)
!7441 = !DILocation(line: 463, column: 55, scope: !7437)
!7442 = !DILocation(line: 463, column: 19, scope: !7438)
!7443 = !DILocation(line: 465, column: 29, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7437, file: !426, line: 464, column: 17)
!7445 = !DILocation(line: 465, column: 36, scope: !7444)
!7446 = !DILocation(line: 465, column: 58, scope: !7444)
!7447 = !DILocation(line: 465, column: 19, scope: !7444)
!7448 = !DILabel(scope: !7444, name: "fail", file: !426, line: 466)
!7449 = !DILocation(line: 466, column: 17, scope: !7444)
!7450 = !DILocation(line: 467, column: 19, scope: !7444)
!7451 = !DILocation(line: 468, column: 19, scope: !7444)
!7452 = !DILocation(line: 471, column: 20, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7438, file: !426, line: 471, column: 19)
!7454 = !DILocation(line: 471, column: 33, scope: !7453)
!7455 = !DILocation(line: 471, column: 36, scope: !7453)
!7456 = !DILocation(line: 471, column: 48, scope: !7453)
!7457 = !DILocation(line: 472, column: 19, scope: !7453)
!7458 = !DILocation(line: 472, column: 24, scope: !7453)
!7459 = !DILocation(line: 472, column: 37, scope: !7453)
!7460 = !DILocation(line: 472, column: 40, scope: !7453)
!7461 = !DILocation(line: 472, column: 52, scope: !7453)
!7462 = !DILocation(line: 471, column: 19, scope: !7438)
!7463 = !DILocation(line: 474, column: 38, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !426, line: 474, column: 23)
!7465 = distinct !DILexicalBlock(scope: !7453, file: !426, line: 473, column: 17)
!7466 = !DILocation(line: 474, column: 47, scope: !7464)
!7467 = !DILocation(line: 475, column: 38, scope: !7464)
!7468 = !DILocation(line: 475, column: 50, scope: !7464)
!7469 = !DILocation(line: 476, column: 38, scope: !7464)
!7470 = !DILocation(line: 474, column: 25, scope: !7464)
!7471 = !DILocation(line: 474, column: 23, scope: !7465)
!7472 = !DILocation(line: 477, column: 21, scope: !7464)
!7473 = !DILocation(line: 478, column: 37, scope: !7465)
!7474 = !DILocation(line: 479, column: 17, scope: !7465)
!7475 = !DILocalVariable(name: "nzeros", scope: !7476, file: !426, line: 485, type: !429)
!7476 = distinct !DILexicalBlock(scope: !7453, file: !426, line: 481, column: 17)
!7477 = !DILocation(line: 485, column: 25, scope: !7476)
!7478 = !DILocation(line: 485, column: 34, scope: !7476)
!7479 = !DILocation(line: 486, column: 23, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !426, line: 486, column: 23)
!7481 = !DILocation(line: 486, column: 23, scope: !7476)
!7482 = !DILocation(line: 487, column: 30, scope: !7480)
!7483 = !DILocation(line: 487, column: 28, scope: !7480)
!7484 = !DILocation(line: 487, column: 21, scope: !7480)
!7485 = !DILocation(line: 489, column: 38, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7476, file: !426, line: 489, column: 23)
!7487 = !DILocation(line: 489, column: 47, scope: !7486)
!7488 = !DILocation(line: 489, column: 25, scope: !7486)
!7489 = !DILocation(line: 489, column: 23, scope: !7476)
!7490 = !DILocation(line: 491, column: 33, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7486, file: !426, line: 490, column: 21)
!7492 = !DILocation(line: 491, column: 40, scope: !7491)
!7493 = !DILocation(line: 492, column: 30, scope: !7491)
!7494 = !DILocation(line: 491, column: 23, scope: !7491)
!7495 = !DILocation(line: 493, column: 23, scope: !7491)
!7496 = !DILocation(line: 496, column: 30, scope: !7476)
!7497 = !DILocation(line: 496, column: 28, scope: !7476)
!7498 = !DILocation(line: 498, column: 13, scope: !7438)
!7499 = !DILocation(line: 500, column: 28, scope: !7372)
!7500 = !DILocation(line: 500, column: 26, scope: !7372)
!7501 = !DILocalVariable(name: "n_read", scope: !7502, file: !426, line: 517, type: !429)
!7502 = distinct !DILexicalBlock(scope: !7503, file: !426, line: 516, column: 13)
!7503 = distinct !DILexicalBlock(scope: !7372, file: !426, line: 508, column: 15)
!7504 = !DILocation(line: 517, column: 21, scope: !7502)
!7505 = !DILocation(line: 518, column: 28, scope: !7502)
!7506 = !DILocation(line: 519, column: 30, scope: !7502)
!7507 = !DILocation(line: 519, column: 28, scope: !7502)
!7508 = !DILocalVariable(name: "read_hole", scope: !7502, file: !426, line: 520, type: !142)
!7509 = !DILocation(line: 520, column: 20, scope: !7502)
!7510 = !DILocation(line: 522, column: 35, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7502, file: !426, line: 522, column: 20)
!7512 = !DILocation(line: 522, column: 43, scope: !7511)
!7513 = !DILocation(line: 522, column: 52, scope: !7511)
!7514 = !DILocation(line: 522, column: 57, scope: !7511)
!7515 = !DILocation(line: 523, column: 35, scope: !7511)
!7516 = !DILocation(line: 523, column: 47, scope: !7511)
!7517 = !DILocation(line: 523, column: 66, scope: !7511)
!7518 = !DILocation(line: 524, column: 41, scope: !7511)
!7519 = !DILocation(line: 524, column: 51, scope: !7511)
!7520 = !DILocation(line: 524, column: 61, scope: !7511)
!7521 = !DILocation(line: 522, column: 22, scope: !7511)
!7522 = !DILocation(line: 522, column: 20, scope: !7502)
!7523 = !DILocation(line: 526, column: 17, scope: !7511)
!7524 = !DILocation(line: 528, column: 26, scope: !7502)
!7525 = !DILocation(line: 528, column: 38, scope: !7502)
!7526 = !DILocation(line: 528, column: 36, scope: !7502)
!7527 = !DILocation(line: 528, column: 24, scope: !7502)
!7528 = !DILocation(line: 529, column: 19, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7502, file: !426, line: 529, column: 19)
!7530 = !DILocation(line: 529, column: 19, scope: !7502)
!7531 = !DILocation(line: 530, column: 37, scope: !7529)
!7532 = !DILocation(line: 530, column: 35, scope: !7529)
!7533 = !DILocation(line: 530, column: 17, scope: !7529)
!7534 = !DILocation(line: 538, column: 15, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7372, file: !426, line: 538, column: 15)
!7536 = !DILocation(line: 538, column: 27, scope: !7535)
!7537 = !DILocation(line: 538, column: 24, scope: !7535)
!7538 = !DILocation(line: 538, column: 15, scope: !7372)
!7539 = !DILocation(line: 540, column: 20, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !426, line: 539, column: 13)
!7541 = !DILocation(line: 540, column: 37, scope: !7540)
!7542 = !DILocation(line: 541, column: 15, scope: !7540)
!7543 = !DILocation(line: 543, column: 9, scope: !7372)
!7544 = !DILocation(line: 425, column: 68, scope: !7365)
!7545 = !DILocation(line: 425, column: 7, scope: !7365)
!7546 = distinct !{!7546, !7370, !7547}
!7547 = !DILocation(line: 543, column: 9, scope: !7361)
!7548 = !DILocation(line: 546, column: 7, scope: !7335)
!7549 = !DILocation(line: 548, column: 5, scope: !7335)
!7550 = !DILocation(line: 549, column: 17, scope: !7287)
!7551 = !DILocation(line: 549, column: 10, scope: !7287)
!7552 = distinct !{!7552, !7333, !7553}
!7553 = !DILocation(line: 549, column: 33, scope: !7287)
!7554 = !DILocation(line: 559, column: 8, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7287, file: !426, line: 559, column: 7)
!7556 = !DILocation(line: 559, column: 19, scope: !7555)
!7557 = !DILocation(line: 559, column: 17, scope: !7555)
!7558 = !DILocation(line: 559, column: 34, scope: !7555)
!7559 = !DILocation(line: 559, column: 37, scope: !7555)
!7560 = !DILocation(line: 560, column: 7, scope: !7555)
!7561 = !DILocation(line: 560, column: 11, scope: !7555)
!7562 = !DILocation(line: 560, column: 23, scope: !7555)
!7563 = !DILocation(line: 559, column: 7, scope: !7287)
!7564 = !DILocation(line: 561, column: 24, scope: !7555)
!7565 = !DILocation(line: 561, column: 33, scope: !7555)
!7566 = !DILocation(line: 561, column: 13, scope: !7555)
!7567 = !DILocation(line: 562, column: 28, scope: !7555)
!7568 = !DILocation(line: 562, column: 37, scope: !7555)
!7569 = !DILocation(line: 562, column: 54, scope: !7555)
!7570 = !DILocation(line: 562, column: 52, scope: !7555)
!7571 = !DILocation(line: 562, column: 15, scope: !7555)
!7572 = !DILocation(line: 564, column: 17, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7555, file: !426, line: 563, column: 5)
!7574 = !DILocation(line: 564, column: 24, scope: !7573)
!7575 = !DILocation(line: 564, column: 50, scope: !7573)
!7576 = !DILocation(line: 564, column: 7, scope: !7573)
!7577 = !DILocation(line: 565, column: 7, scope: !7573)
!7578 = !DILocation(line: 568, column: 7, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7287, file: !426, line: 568, column: 7)
!7580 = !DILocation(line: 568, column: 19, scope: !7579)
!7581 = !DILocation(line: 568, column: 36, scope: !7579)
!7582 = !DILocation(line: 568, column: 39, scope: !7579)
!7583 = !DILocation(line: 568, column: 50, scope: !7579)
!7584 = !DILocation(line: 568, column: 48, scope: !7579)
!7585 = !DILocation(line: 569, column: 7, scope: !7579)
!7586 = !DILocation(line: 569, column: 22, scope: !7579)
!7587 = !DILocation(line: 569, column: 31, scope: !7579)
!7588 = !DILocation(line: 569, column: 41, scope: !7579)
!7589 = !DILocation(line: 569, column: 58, scope: !7579)
!7590 = !DILocation(line: 569, column: 56, scope: !7579)
!7591 = !DILocation(line: 569, column: 10, scope: !7579)
!7592 = !DILocation(line: 569, column: 68, scope: !7579)
!7593 = !DILocation(line: 568, column: 7, scope: !7287)
!7594 = !DILocation(line: 571, column: 17, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7579, file: !426, line: 570, column: 5)
!7596 = !DILocation(line: 571, column: 24, scope: !7595)
!7597 = !DILocation(line: 571, column: 52, scope: !7595)
!7598 = !DILocation(line: 571, column: 7, scope: !7595)
!7599 = !DILocation(line: 572, column: 7, scope: !7595)
!7600 = !DILocation(line: 575, column: 3, scope: !7287)
!7601 = !DILocation(line: 576, column: 1, scope: !7287)
!7602 = distinct !DISubprogram(name: "sparse_copy", scope: !426, file: !426, line: 224, type: !7603, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!142, !7, !7, !9, !55, !55, !142, !183, !183, !607, !7605, !3724}
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!7606 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7602, file: !426, line: 224, type: !7)
!7607 = !DILocation(line: 224, column: 18, scope: !7602)
!7608 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7602, file: !426, line: 224, type: !7)
!7609 = !DILocation(line: 224, column: 30, scope: !7602)
!7610 = !DILocalVariable(name: "buf", arg: 3, scope: !7602, file: !426, line: 224, type: !9)
!7611 = !DILocation(line: 224, column: 45, scope: !7602)
!7612 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7602, file: !426, line: 224, type: !55)
!7613 = !DILocation(line: 224, column: 57, scope: !7602)
!7614 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7602, file: !426, line: 225, type: !55)
!7615 = !DILocation(line: 225, column: 21, scope: !7602)
!7616 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !7602, file: !426, line: 225, type: !142)
!7617 = !DILocation(line: 225, column: 37, scope: !7602)
!7618 = !DILocalVariable(name: "src_name", arg: 7, scope: !7602, file: !426, line: 226, type: !183)
!7619 = !DILocation(line: 226, column: 26, scope: !7602)
!7620 = !DILocalVariable(name: "dst_name", arg: 8, scope: !7602, file: !426, line: 226, type: !183)
!7621 = !DILocation(line: 226, column: 48, scope: !7602)
!7622 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !7602, file: !426, line: 227, type: !607)
!7623 = !DILocation(line: 227, column: 24, scope: !7602)
!7624 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !7602, file: !426, line: 227, type: !7605)
!7625 = !DILocation(line: 227, column: 43, scope: !7602)
!7626 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !7602, file: !426, line: 228, type: !3724)
!7627 = !DILocation(line: 228, column: 20, scope: !7602)
!7628 = !DILocation(line: 230, column: 4, scope: !7602)
!7629 = !DILocation(line: 230, column: 25, scope: !7602)
!7630 = !DILocation(line: 231, column: 4, scope: !7602)
!7631 = !DILocation(line: 231, column: 17, scope: !7602)
!7632 = !DILocalVariable(name: "make_hole", scope: !7602, file: !426, line: 232, type: !142)
!7633 = !DILocation(line: 232, column: 8, scope: !7602)
!7634 = !DILocalVariable(name: "psize", scope: !7602, file: !426, line: 233, type: !429)
!7635 = !DILocation(line: 233, column: 9, scope: !7602)
!7636 = !DILocation(line: 235, column: 3, scope: !7602)
!7637 = !DILocation(line: 235, column: 10, scope: !7602)
!7638 = !DILocalVariable(name: "n_read", scope: !7639, file: !426, line: 237, type: !569)
!7639 = distinct !DILexicalBlock(scope: !7602, file: !426, line: 236, column: 5)
!7640 = !DILocation(line: 237, column: 15, scope: !7639)
!7641 = !DILocation(line: 237, column: 30, scope: !7639)
!7642 = !DILocation(line: 237, column: 38, scope: !7639)
!7643 = !DILocation(line: 237, column: 43, scope: !7639)
!7644 = !DILocation(line: 237, column: 24, scope: !7639)
!7645 = !DILocation(line: 238, column: 11, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7639, file: !426, line: 238, column: 11)
!7647 = !DILocation(line: 238, column: 18, scope: !7646)
!7648 = !DILocation(line: 238, column: 11, scope: !7639)
!7649 = !DILocation(line: 240, column: 15, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !426, line: 240, column: 15)
!7651 = distinct !DILexicalBlock(scope: !7646, file: !426, line: 239, column: 9)
!7652 = !DILocation(line: 240, column: 21, scope: !7650)
!7653 = !DILocation(line: 240, column: 15, scope: !7651)
!7654 = !DILocation(line: 241, column: 13, scope: !7650)
!7655 = distinct !{!7655, !7636, !7656}
!7656 = !DILocation(line: 321, column: 5, scope: !7602)
!7657 = !DILocation(line: 242, column: 21, scope: !7651)
!7658 = !DILocation(line: 242, column: 28, scope: !7651)
!7659 = !DILocation(line: 242, column: 51, scope: !7651)
!7660 = !DILocation(line: 242, column: 11, scope: !7651)
!7661 = !DILocation(line: 243, column: 11, scope: !7651)
!7662 = !DILocation(line: 245, column: 11, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7639, file: !426, line: 245, column: 11)
!7664 = !DILocation(line: 245, column: 18, scope: !7663)
!7665 = !DILocation(line: 245, column: 11, scope: !7639)
!7666 = !DILocation(line: 246, column: 9, scope: !7663)
!7667 = !DILocation(line: 247, column: 21, scope: !7639)
!7668 = !DILocation(line: 247, column: 18, scope: !7639)
!7669 = !DILocation(line: 248, column: 24, scope: !7639)
!7670 = !DILocation(line: 248, column: 8, scope: !7639)
!7671 = !DILocation(line: 248, column: 21, scope: !7639)
!7672 = !DILocalVariable(name: "csize", scope: !7639, file: !426, line: 251, type: !55)
!7673 = !DILocation(line: 251, column: 14, scope: !7639)
!7674 = !DILocation(line: 251, column: 22, scope: !7639)
!7675 = !DILocation(line: 251, column: 34, scope: !7639)
!7676 = !DILocation(line: 251, column: 46, scope: !7639)
!7677 = !DILocalVariable(name: "cbuf", scope: !7639, file: !426, line: 252, type: !9)
!7678 = !DILocation(line: 252, column: 13, scope: !7639)
!7679 = !DILocation(line: 252, column: 20, scope: !7639)
!7680 = !DILocalVariable(name: "pbuf", scope: !7639, file: !426, line: 253, type: !9)
!7681 = !DILocation(line: 253, column: 13, scope: !7639)
!7682 = !DILocation(line: 253, column: 20, scope: !7639)
!7683 = !DILocation(line: 255, column: 7, scope: !7639)
!7684 = !DILocation(line: 255, column: 14, scope: !7639)
!7685 = !DILocalVariable(name: "prev_hole", scope: !7686, file: !426, line: 257, type: !142)
!7686 = distinct !DILexicalBlock(scope: !7639, file: !426, line: 256, column: 9)
!7687 = !DILocation(line: 257, column: 16, scope: !7686)
!7688 = !DILocation(line: 257, column: 28, scope: !7686)
!7689 = !DILocation(line: 258, column: 19, scope: !7686)
!7690 = !DILocation(line: 258, column: 17, scope: !7686)
!7691 = !DILocation(line: 260, column: 15, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7686, file: !426, line: 260, column: 15)
!7693 = !DILocation(line: 260, column: 25, scope: !7692)
!7694 = !DILocation(line: 260, column: 28, scope: !7692)
!7695 = !DILocation(line: 260, column: 15, scope: !7686)
!7696 = !DILocation(line: 261, column: 33, scope: !7692)
!7697 = !DILocation(line: 261, column: 39, scope: !7692)
!7698 = !DILocation(line: 261, column: 25, scope: !7692)
!7699 = !DILocation(line: 261, column: 23, scope: !7692)
!7700 = !DILocation(line: 261, column: 13, scope: !7692)
!7701 = !DILocalVariable(name: "transition", scope: !7686, file: !426, line: 263, type: !142)
!7702 = !DILocation(line: 263, column: 16, scope: !7686)
!7703 = !DILocation(line: 263, column: 30, scope: !7686)
!7704 = !DILocation(line: 263, column: 43, scope: !7686)
!7705 = !DILocation(line: 263, column: 40, scope: !7686)
!7706 = !DILocation(line: 263, column: 54, scope: !7686)
!7707 = !DILocation(line: 263, column: 57, scope: !7686)
!7708 = !DILocation(line: 0, scope: !7686)
!7709 = !DILocalVariable(name: "last_chunk", scope: !7686, file: !426, line: 264, type: !142)
!7710 = !DILocation(line: 264, column: 16, scope: !7686)
!7711 = !DILocation(line: 264, column: 30, scope: !7686)
!7712 = !DILocation(line: 264, column: 40, scope: !7686)
!7713 = !DILocation(line: 264, column: 37, scope: !7686)
!7714 = !DILocation(line: 264, column: 46, scope: !7686)
!7715 = !DILocation(line: 264, column: 51, scope: !7686)
!7716 = !DILocation(line: 264, column: 62, scope: !7686)
!7717 = !DILocation(line: 264, column: 67, scope: !7686)
!7718 = !DILocation(line: 264, column: 65, scope: !7686)
!7719 = !DILocation(line: 266, column: 15, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7686, file: !426, line: 266, column: 15)
!7721 = !DILocation(line: 266, column: 26, scope: !7720)
!7722 = !DILocation(line: 266, column: 29, scope: !7720)
!7723 = !DILocation(line: 266, column: 15, scope: !7686)
!7724 = !DILocation(line: 268, column: 21, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !426, line: 268, column: 19)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !426, line: 267, column: 13)
!7727 = !DILocation(line: 268, column: 19, scope: !7726)
!7728 = !DILocation(line: 269, column: 26, scope: !7725)
!7729 = !DILocation(line: 269, column: 23, scope: !7725)
!7730 = !DILocation(line: 269, column: 17, scope: !7725)
!7731 = !DILocation(line: 271, column: 21, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7726, file: !426, line: 271, column: 19)
!7733 = !DILocation(line: 271, column: 19, scope: !7726)
!7734 = !DILocation(line: 273, column: 35, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !426, line: 273, column: 23)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !426, line: 272, column: 17)
!7737 = !DILocation(line: 273, column: 44, scope: !7735)
!7738 = !DILocation(line: 273, column: 50, scope: !7735)
!7739 = !DILocation(line: 273, column: 23, scope: !7735)
!7740 = !DILocation(line: 273, column: 60, scope: !7735)
!7741 = !DILocation(line: 273, column: 57, scope: !7735)
!7742 = !DILocation(line: 273, column: 23, scope: !7736)
!7743 = !DILocation(line: 275, column: 33, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7735, file: !426, line: 274, column: 21)
!7745 = !DILocation(line: 275, column: 40, scope: !7744)
!7746 = !DILocation(line: 276, column: 30, scope: !7744)
!7747 = !DILocation(line: 275, column: 23, scope: !7744)
!7748 = !DILocation(line: 277, column: 23, scope: !7744)
!7749 = !DILocation(line: 279, column: 17, scope: !7736)
!7750 = !DILocation(line: 282, column: 38, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !426, line: 282, column: 23)
!7752 = distinct !DILexicalBlock(scope: !7732, file: !426, line: 281, column: 17)
!7753 = !DILocation(line: 282, column: 47, scope: !7751)
!7754 = !DILocation(line: 282, column: 57, scope: !7751)
!7755 = !DILocation(line: 282, column: 70, scope: !7751)
!7756 = !DILocation(line: 282, column: 25, scope: !7751)
!7757 = !DILocation(line: 282, column: 23, scope: !7752)
!7758 = !DILocation(line: 283, column: 21, scope: !7751)
!7759 = !DILocation(line: 286, column: 22, scope: !7726)
!7760 = !DILocation(line: 286, column: 20, scope: !7726)
!7761 = !DILocation(line: 287, column: 23, scope: !7726)
!7762 = !DILocation(line: 287, column: 21, scope: !7726)
!7763 = !DILocation(line: 289, column: 19, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7726, file: !426, line: 289, column: 19)
!7765 = !DILocation(line: 289, column: 19, scope: !7726)
!7766 = !DILocation(line: 291, column: 25, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !426, line: 291, column: 23)
!7768 = distinct !DILexicalBlock(scope: !7764, file: !426, line: 290, column: 17)
!7769 = !DILocation(line: 291, column: 23, scope: !7768)
!7770 = !DILocation(line: 292, column: 28, scope: !7767)
!7771 = !DILocation(line: 292, column: 21, scope: !7767)
!7772 = !DILocation(line: 294, column: 23, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7768, file: !426, line: 294, column: 23)
!7774 = !DILocation(line: 294, column: 23, scope: !7768)
!7775 = !DILocation(line: 295, column: 27, scope: !7773)
!7776 = !DILocation(line: 295, column: 21, scope: !7773)
!7777 = !DILocation(line: 297, column: 27, scope: !7773)
!7778 = !DILocation(line: 298, column: 17, scope: !7768)
!7779 = !DILocation(line: 299, column: 13, scope: !7726)
!7780 = !DILocation(line: 302, column: 19, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !426, line: 302, column: 19)
!7782 = distinct !DILexicalBlock(scope: !7720, file: !426, line: 301, column: 13)
!7783 = !DILocation(line: 302, column: 40, scope: !7781)
!7784 = !DILocation(line: 302, column: 38, scope: !7781)
!7785 = !DILocation(line: 302, column: 25, scope: !7781)
!7786 = !DILocation(line: 302, column: 19, scope: !7782)
!7787 = !DILocation(line: 303, column: 26, scope: !7781)
!7788 = !DILocation(line: 303, column: 23, scope: !7781)
!7789 = !DILocation(line: 303, column: 17, scope: !7781)
!7790 = !DILocation(line: 306, column: 32, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7781, file: !426, line: 305, column: 17)
!7792 = !DILocation(line: 306, column: 58, scope: !7791)
!7793 = !DILocation(line: 306, column: 19, scope: !7791)
!7794 = !DILocation(line: 307, column: 19, scope: !7791)
!7795 = !DILocation(line: 311, column: 21, scope: !7686)
!7796 = !DILocation(line: 311, column: 18, scope: !7686)
!7797 = !DILocation(line: 312, column: 19, scope: !7686)
!7798 = !DILocation(line: 312, column: 16, scope: !7686)
!7799 = distinct !{!7799, !7683, !7800}
!7800 = !DILocation(line: 313, column: 9, scope: !7639)
!7801 = !DILocation(line: 315, column: 31, scope: !7639)
!7802 = !DILocation(line: 315, column: 8, scope: !7639)
!7803 = !DILocation(line: 315, column: 29, scope: !7639)
!7804 = !DILocation(line: 325, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7602, file: !426, line: 325, column: 7)
!7806 = !DILocation(line: 325, column: 17, scope: !7805)
!7807 = !DILocation(line: 325, column: 35, scope: !7805)
!7808 = !DILocation(line: 325, column: 44, scope: !7805)
!7809 = !DILocation(line: 325, column: 54, scope: !7805)
!7810 = !DILocation(line: 325, column: 67, scope: !7805)
!7811 = !DILocation(line: 325, column: 22, scope: !7805)
!7812 = !DILocation(line: 325, column: 7, scope: !7602)
!7813 = !DILocation(line: 326, column: 5, scope: !7805)
!7814 = !DILocation(line: 328, column: 5, scope: !7805)
!7815 = !DILocation(line: 329, column: 1, scope: !7602)
!7816 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !426, file: !426, line: 977, type: !7817, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7817 = !DISubroutineType(types: !7818)
!7818 = !{!7, !7, !183, !139}
!7819 = !DILocalVariable(name: "desc", arg: 1, scope: !7816, file: !426, line: 977, type: !7)
!7820 = !DILocation(line: 977, column: 23, scope: !7816)
!7821 = !DILocalVariable(name: "name", arg: 2, scope: !7816, file: !426, line: 977, type: !183)
!7822 = !DILocation(line: 977, column: 41, scope: !7816)
!7823 = !DILocalVariable(name: "mode", arg: 3, scope: !7816, file: !426, line: 977, type: !139)
!7824 = !DILocation(line: 977, column: 54, scope: !7816)
!7825 = !DILocation(line: 980, column: 12, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7816, file: !426, line: 980, column: 7)
!7827 = !DILocation(line: 980, column: 9, scope: !7826)
!7828 = !DILocation(line: 980, column: 7, scope: !7816)
!7829 = !DILocation(line: 981, column: 20, scope: !7826)
!7830 = !DILocation(line: 981, column: 26, scope: !7826)
!7831 = !DILocation(line: 981, column: 12, scope: !7826)
!7832 = !DILocation(line: 981, column: 5, scope: !7826)
!7833 = !DILocation(line: 983, column: 18, scope: !7816)
!7834 = !DILocation(line: 983, column: 24, scope: !7816)
!7835 = !DILocation(line: 983, column: 10, scope: !7816)
!7836 = !DILocation(line: 983, column: 3, scope: !7816)
!7837 = !DILocation(line: 984, column: 1, scope: !7816)
!7838 = distinct !DISubprogram(name: "is_nul", scope: !294, file: !294, line: 509, type: !7839, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!142, !831, !55}
!7841 = !DILocalVariable(name: "buf", arg: 1, scope: !7838, file: !294, line: 509, type: !831)
!7842 = !DILocation(line: 509, column: 21, scope: !7838)
!7843 = !DILocalVariable(name: "length", arg: 2, scope: !7838, file: !294, line: 509, type: !55)
!7844 = !DILocation(line: 509, column: 33, scope: !7838)
!7845 = !DILocalVariable(name: "p", scope: !7838, file: !294, line: 511, type: !571)
!7846 = !DILocation(line: 511, column: 24, scope: !7838)
!7847 = !DILocation(line: 511, column: 28, scope: !7838)
!7848 = !DILocalVariable(name: "word", scope: !7838, file: !294, line: 521, type: !573)
!7849 = !DILocation(line: 521, column: 17, scope: !7838)
!7850 = !DILocation(line: 524, column: 9, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7838, file: !294, line: 524, column: 7)
!7852 = !DILocation(line: 524, column: 7, scope: !7838)
!7853 = !DILocation(line: 525, column: 7, scope: !7851)
!7854 = !DILocation(line: 528, column: 3, scope: !7838)
!7855 = !DILocation(line: 528, column: 10, scope: !7838)
!7856 = !DILocation(line: 530, column: 12, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !294, line: 530, column: 11)
!7858 = distinct !DILexicalBlock(scope: !7838, file: !294, line: 529, column: 5)
!7859 = !DILocation(line: 530, column: 11, scope: !7857)
!7860 = !DILocation(line: 530, column: 11, scope: !7858)
!7861 = !DILocation(line: 531, column: 9, scope: !7857)
!7862 = !DILocation(line: 532, column: 8, scope: !7858)
!7863 = !DILocation(line: 533, column: 13, scope: !7858)
!7864 = !DILocation(line: 534, column: 13, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7858, file: !294, line: 534, column: 11)
!7866 = !DILocation(line: 534, column: 11, scope: !7858)
!7867 = !DILocation(line: 535, column: 9, scope: !7865)
!7868 = distinct !{!7868, !7854, !7869}
!7869 = !DILocation(line: 536, column: 4, scope: !7838)
!7870 = !DILocation(line: 539, column: 3, scope: !7838)
!7871 = !DILocation(line: 541, column: 22, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !294, line: 540, column: 5)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !294, line: 539, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7838, file: !294, line: 539, column: 3)
!7875 = !DILocation(line: 541, column: 7, scope: !7872)
!7876 = !DILocation(line: 542, column: 11, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7872, file: !294, line: 542, column: 11)
!7878 = !DILocation(line: 542, column: 11, scope: !7872)
!7879 = !DILocation(line: 543, column: 9, scope: !7877)
!7880 = !DILocation(line: 544, column: 9, scope: !7872)
!7881 = !DILocation(line: 545, column: 14, scope: !7872)
!7882 = !DILocation(line: 546, column: 13, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7872, file: !294, line: 546, column: 11)
!7884 = !DILocation(line: 546, column: 11, scope: !7872)
!7885 = !DILocation(line: 547, column: 9, scope: !7883)
!7886 = !DILocation(line: 548, column: 11, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7872, file: !294, line: 548, column: 11)
!7888 = !DILocation(line: 548, column: 34, scope: !7887)
!7889 = !DILocation(line: 548, column: 11, scope: !7872)
!7890 = !DILocation(line: 549, column: 9, scope: !7887)
!7891 = !DILocation(line: 539, column: 3, scope: !7873)
!7892 = distinct !{!7892, !7893, !7894}
!7893 = !DILocation(line: 539, column: 3, scope: !7874)
!7894 = !DILocation(line: 550, column: 4, scope: !7874)
!7895 = !DILocation(line: 553, column: 19, scope: !7838)
!7896 = !DILocation(line: 553, column: 24, scope: !7838)
!7897 = !DILocation(line: 553, column: 27, scope: !7838)
!7898 = !DILocation(line: 553, column: 11, scope: !7838)
!7899 = !DILocation(line: 553, column: 35, scope: !7838)
!7900 = !DILocation(line: 553, column: 4, scope: !7838)
!7901 = !DILocation(line: 554, column: 1, scope: !7838)
!7902 = distinct !DISubprogram(name: "create_hole", scope: !426, file: !426, line: 188, type: !7903, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!142, !7, !183, !142, !429}
!7905 = !DILocalVariable(name: "fd", arg: 1, scope: !7902, file: !426, line: 188, type: !7)
!7906 = !DILocation(line: 188, column: 18, scope: !7902)
!7907 = !DILocalVariable(name: "name", arg: 2, scope: !7902, file: !426, line: 188, type: !183)
!7908 = !DILocation(line: 188, column: 34, scope: !7902)
!7909 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !7902, file: !426, line: 188, type: !142)
!7910 = !DILocation(line: 188, column: 45, scope: !7902)
!7911 = !DILocalVariable(name: "size", arg: 4, scope: !7902, file: !426, line: 188, type: !429)
!7912 = !DILocation(line: 188, column: 64, scope: !7902)
!7913 = !DILocalVariable(name: "file_end", scope: !7902, file: !426, line: 190, type: !429)
!7914 = !DILocation(line: 190, column: 9, scope: !7902)
!7915 = !DILocation(line: 190, column: 27, scope: !7902)
!7916 = !DILocation(line: 190, column: 31, scope: !7902)
!7917 = !DILocation(line: 190, column: 20, scope: !7902)
!7918 = !DILocation(line: 192, column: 7, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7902, file: !426, line: 192, column: 7)
!7920 = !DILocation(line: 192, column: 16, scope: !7919)
!7921 = !DILocation(line: 192, column: 7, scope: !7902)
!7922 = !DILocation(line: 194, column: 17, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7919, file: !426, line: 193, column: 5)
!7924 = !DILocation(line: 194, column: 24, scope: !7923)
!7925 = !DILocation(line: 194, column: 46, scope: !7923)
!7926 = !DILocation(line: 194, column: 7, scope: !7923)
!7927 = !DILocation(line: 195, column: 7, scope: !7923)
!7928 = !DILocation(line: 202, column: 7, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7902, file: !426, line: 202, column: 7)
!7930 = !DILocation(line: 202, column: 19, scope: !7929)
!7931 = !DILocation(line: 202, column: 34, scope: !7929)
!7932 = !DILocation(line: 202, column: 38, scope: !7929)
!7933 = !DILocation(line: 202, column: 49, scope: !7929)
!7934 = !DILocation(line: 202, column: 47, scope: !7929)
!7935 = !DILocation(line: 202, column: 55, scope: !7929)
!7936 = !DILocation(line: 202, column: 22, scope: !7929)
!7937 = !DILocation(line: 202, column: 61, scope: !7929)
!7938 = !DILocation(line: 202, column: 7, scope: !7902)
!7939 = !DILocation(line: 204, column: 17, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7929, file: !426, line: 203, column: 5)
!7941 = !DILocation(line: 204, column: 24, scope: !7940)
!7942 = !DILocation(line: 204, column: 52, scope: !7940)
!7943 = !DILocation(line: 204, column: 7, scope: !7940)
!7944 = !DILocation(line: 205, column: 7, scope: !7940)
!7945 = !DILocation(line: 208, column: 3, scope: !7902)
!7946 = !DILocation(line: 209, column: 1, scope: !7902)
!7947 = distinct !DISubprogram(name: "punch_hole", scope: !426, file: !426, line: 169, type: !7948, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!7, !7, !429, !429}
!7950 = !DILocalVariable(name: "fd", arg: 1, scope: !7947, file: !426, line: 169, type: !7)
!7951 = !DILocation(line: 169, column: 17, scope: !7947)
!7952 = !DILocalVariable(name: "offset", arg: 2, scope: !7947, file: !426, line: 169, type: !429)
!7953 = !DILocation(line: 169, column: 27, scope: !7947)
!7954 = !DILocalVariable(name: "length", arg: 3, scope: !7947, file: !426, line: 169, type: !429)
!7955 = !DILocation(line: 169, column: 41, scope: !7947)
!7956 = !DILocalVariable(name: "ret", scope: !7947, file: !426, line: 171, type: !7)
!7957 = !DILocation(line: 171, column: 7, scope: !7947)
!7958 = !DILocation(line: 175, column: 20, scope: !7947)
!7959 = !DILocation(line: 176, column: 20, scope: !7947)
!7960 = !DILocation(line: 176, column: 28, scope: !7947)
!7961 = !DILocation(line: 175, column: 9, scope: !7947)
!7962 = !DILocation(line: 175, column: 7, scope: !7947)
!7963 = !DILocation(line: 177, column: 7, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7947, file: !426, line: 177, column: 7)
!7965 = !DILocation(line: 177, column: 11, scope: !7964)
!7966 = !DILocation(line: 177, column: 15, scope: !7964)
!7967 = !DILocation(line: 177, column: 31, scope: !7964)
!7968 = !DILocation(line: 177, column: 19, scope: !7964)
!7969 = !DILocation(line: 177, column: 38, scope: !7964)
!7970 = !DILocation(line: 177, column: 41, scope: !7964)
!7971 = !DILocation(line: 177, column: 47, scope: !7964)
!7972 = !DILocation(line: 177, column: 7, scope: !7947)
!7973 = !DILocation(line: 178, column: 9, scope: !7964)
!7974 = !DILocation(line: 178, column: 5, scope: !7964)
!7975 = !DILocation(line: 181, column: 10, scope: !7947)
!7976 = !DILocation(line: 181, column: 3, scope: !7947)
!7977 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !294, file: !294, line: 762, type: !2899, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7978 = !DILocalVariable(name: "err", arg: 1, scope: !7977, file: !294, line: 762, type: !7)
!7979 = !DILocation(line: 762, column: 17, scope: !7977)
!7980 = !DILocation(line: 764, column: 10, scope: !7977)
!7981 = !DILocation(line: 764, column: 14, scope: !7977)
!7982 = !DILocation(line: 764, column: 28, scope: !7977)
!7983 = !DILocation(line: 764, column: 3, scope: !7977)
!7984 = distinct !DISubprogram(name: "extent_scan_free", scope: !561, file: !561, line: 66, type: !7985, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{null, !7987}
!7987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 64)
!7988 = !DILocalVariable(name: "scan", arg: 1, scope: !7984, file: !561, line: 66, type: !7987)
!7989 = !DILocation(line: 66, column: 39, scope: !7984)
!7990 = !DILocation(line: 68, column: 9, scope: !7984)
!7991 = !DILocation(line: 68, column: 15, scope: !7984)
!7992 = !DILocation(line: 68, column: 3, scope: !7984)
!7993 = !DILocation(line: 69, column: 3, scope: !7984)
!7994 = !DILocation(line: 69, column: 9, scope: !7984)
!7995 = !DILocation(line: 69, column: 18, scope: !7984)
!7996 = !DILocation(line: 70, column: 3, scope: !7984)
!7997 = !DILocation(line: 70, column: 9, scope: !7984)
!7998 = !DILocation(line: 70, column: 18, scope: !7984)
!7999 = !DILocation(line: 71, column: 1, scope: !7984)
!8000 = !DILocalVariable(name: "fd", arg: 1, scope: !595, file: !426, line: 349, type: !7)
!8001 = !DILocation(line: 349, column: 18, scope: !595)
!8002 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !595, file: !426, line: 349, type: !429)
!8003 = !DILocation(line: 349, column: 28, scope: !595)
!8004 = !DILocation(line: 357, column: 7, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !595, file: !426, line: 357, column: 7)
!8006 = !DILocation(line: 357, column: 13, scope: !8005)
!8007 = !DILocation(line: 357, column: 7, scope: !595)
!8008 = !DILocation(line: 360, column: 23, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8005, file: !426, line: 358, column: 5)
!8010 = !DILocation(line: 360, column: 15, scope: !8009)
!8011 = !DILocation(line: 360, column: 13, scope: !8009)
!8012 = !DILocation(line: 361, column: 11, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8009, file: !426, line: 361, column: 11)
!8014 = !DILocation(line: 361, column: 17, scope: !8013)
!8015 = !DILocation(line: 361, column: 11, scope: !8009)
!8016 = !DILocation(line: 363, column: 17, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8013, file: !426, line: 362, column: 9)
!8018 = !DILocation(line: 364, column: 14, scope: !8017)
!8019 = !DILocation(line: 365, column: 9, scope: !8017)
!8020 = !DILocation(line: 366, column: 5, scope: !8009)
!8021 = !DILocation(line: 368, column: 3, scope: !595)
!8022 = !DILocation(line: 368, column: 10, scope: !595)
!8023 = !DILocalVariable(name: "n", scope: !8024, file: !426, line: 370, type: !55)
!8024 = distinct !DILexicalBlock(scope: !595, file: !426, line: 369, column: 5)
!8025 = !DILocation(line: 370, column: 14, scope: !8024)
!8026 = !DILocation(line: 370, column: 18, scope: !8024)
!8027 = !DILocation(line: 371, column: 24, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !426, line: 371, column: 11)
!8029 = !DILocation(line: 371, column: 28, scope: !8028)
!8030 = !DILocation(line: 371, column: 35, scope: !8028)
!8031 = !DILocation(line: 371, column: 12, scope: !8028)
!8032 = !DILocation(line: 371, column: 42, scope: !8028)
!8033 = !DILocation(line: 371, column: 39, scope: !8028)
!8034 = !DILocation(line: 371, column: 11, scope: !8024)
!8035 = !DILocation(line: 372, column: 9, scope: !8028)
!8036 = !DILocation(line: 373, column: 18, scope: !8024)
!8037 = !DILocation(line: 373, column: 15, scope: !8024)
!8038 = distinct !{!8038, !8021, !8039}
!8039 = !DILocation(line: 374, column: 5, scope: !595)
!8040 = !DILocation(line: 376, column: 3, scope: !595)
!8041 = !DILocation(line: 377, column: 1, scope: !595)
!8042 = distinct !DISubprogram(name: "writable_destination", scope: !426, file: !426, line: 1666, type: !8043, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !425, retainedNodes: !298)
!8043 = !DISubroutineType(types: !8044)
!8044 = !{!142, !183, !139}
!8045 = !DILocalVariable(name: "file", arg: 1, scope: !8042, file: !426, line: 1666, type: !183)
!8046 = !DILocation(line: 1666, column: 35, scope: !8042)
!8047 = !DILocalVariable(name: "mode", arg: 2, scope: !8042, file: !426, line: 1666, type: !139)
!8048 = !DILocation(line: 1666, column: 48, scope: !8042)
!8049 = !DILocation(line: 1668, column: 11, scope: !8042)
!8050 = !DILocation(line: 1669, column: 11, scope: !8042)
!8051 = !DILocation(line: 1669, column: 14, scope: !8042)
!8052 = !DILocation(line: 1670, column: 11, scope: !8042)
!8053 = !DILocation(line: 1670, column: 26, scope: !8042)
!8054 = !DILocation(line: 1670, column: 14, scope: !8042)
!8055 = !DILocation(line: 1670, column: 38, scope: !8042)
!8056 = !DILocation(line: 1668, column: 3, scope: !8042)
!8057 = distinct !DISubprogram(name: "cp_options_default", scope: !426, file: !426, line: 2997, type: !3703, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !425, retainedNodes: !298)
!8058 = !DILocalVariable(name: "x", arg: 1, scope: !8057, file: !426, line: 2997, type: !3705)
!8059 = !DILocation(line: 2997, column: 40, scope: !8057)
!8060 = !DILocation(line: 2999, column: 11, scope: !8057)
!8061 = !DILocation(line: 2999, column: 3, scope: !8057)
!8062 = !DILocation(line: 3013, column: 48, scope: !8057)
!8063 = !DILocation(line: 3013, column: 59, scope: !8057)
!8064 = !DILocation(line: 3013, column: 25, scope: !8057)
!8065 = !DILocation(line: 3013, column: 28, scope: !8057)
!8066 = !DILocation(line: 3013, column: 45, scope: !8057)
!8067 = !DILocation(line: 3013, column: 3, scope: !8057)
!8068 = !DILocation(line: 3013, column: 6, scope: !8057)
!8069 = !DILocation(line: 3013, column: 23, scope: !8057)
!8070 = !DILocation(line: 3015, column: 3, scope: !8057)
!8071 = !DILocation(line: 3015, column: 6, scope: !8057)
!8072 = !DILocation(line: 3015, column: 19, scope: !8057)
!8073 = !DILocation(line: 3016, column: 1, scope: !8057)
!8074 = distinct !DISubprogram(name: "forget_created", scope: !605, file: !605, line: 82, type: !8075, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{null, !498, !500}
!8077 = !DILocalVariable(name: "ino", arg: 1, scope: !8074, file: !605, line: 82, type: !498)
!8078 = !DILocation(line: 82, column: 23, scope: !8074)
!8079 = !DILocalVariable(name: "dev", arg: 2, scope: !8074, file: !605, line: 82, type: !500)
!8080 = !DILocation(line: 82, column: 34, scope: !8074)
!8081 = !DILocalVariable(name: "probe", scope: !8074, file: !605, line: 84, type: !611)
!8082 = !DILocation(line: 84, column: 22, scope: !8074)
!8083 = !DILocalVariable(name: "ent", scope: !8074, file: !605, line: 85, type: !610)
!8084 = !DILocation(line: 85, column: 23, scope: !8074)
!8085 = !DILocation(line: 87, column: 18, scope: !8074)
!8086 = !DILocation(line: 87, column: 9, scope: !8074)
!8087 = !DILocation(line: 87, column: 16, scope: !8074)
!8088 = !DILocation(line: 88, column: 18, scope: !8074)
!8089 = !DILocation(line: 88, column: 9, scope: !8074)
!8090 = !DILocation(line: 88, column: 16, scope: !8074)
!8091 = !DILocation(line: 89, column: 9, scope: !8074)
!8092 = !DILocation(line: 89, column: 14, scope: !8074)
!8093 = !DILocation(line: 91, column: 22, scope: !8074)
!8094 = !DILocation(line: 91, column: 35, scope: !8074)
!8095 = !DILocation(line: 91, column: 9, scope: !8074)
!8096 = !DILocation(line: 91, column: 7, scope: !8074)
!8097 = !DILocation(line: 92, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8074, file: !605, line: 92, column: 7)
!8099 = !DILocation(line: 92, column: 7, scope: !8074)
!8100 = !DILocation(line: 93, column: 23, scope: !8098)
!8101 = !DILocation(line: 93, column: 5, scope: !8098)
!8102 = !DILocation(line: 94, column: 1, scope: !8074)
!8103 = distinct !DISubprogram(name: "src_to_dest_free", scope: !605, file: !605, line: 72, type: !841, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8104 = !DILocalVariable(name: "x", arg: 1, scope: !8103, file: !605, line: 72, type: !53)
!8105 = !DILocation(line: 72, column: 25, scope: !8103)
!8106 = !DILocalVariable(name: "a", scope: !8103, file: !605, line: 74, type: !610)
!8107 = !DILocation(line: 74, column: 23, scope: !8103)
!8108 = !DILocation(line: 74, column: 27, scope: !8103)
!8109 = !DILocation(line: 75, column: 9, scope: !8103)
!8110 = !DILocation(line: 75, column: 12, scope: !8103)
!8111 = !DILocation(line: 75, column: 3, scope: !8103)
!8112 = !DILocation(line: 76, column: 9, scope: !8103)
!8113 = !DILocation(line: 76, column: 3, scope: !8103)
!8114 = !DILocation(line: 77, column: 1, scope: !8103)
!8115 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !605, file: !605, line: 100, type: !8116, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8116 = !DISubroutineType(types: !8117)
!8117 = !{!9, !498, !500}
!8118 = !DILocalVariable(name: "ino", arg: 1, scope: !8115, file: !605, line: 100, type: !498)
!8119 = !DILocation(line: 100, column: 27, scope: !8115)
!8120 = !DILocalVariable(name: "dev", arg: 2, scope: !8115, file: !605, line: 100, type: !500)
!8121 = !DILocation(line: 100, column: 38, scope: !8115)
!8122 = !DILocalVariable(name: "ent", scope: !8115, file: !605, line: 102, type: !611)
!8123 = !DILocation(line: 102, column: 22, scope: !8115)
!8124 = !DILocalVariable(name: "e", scope: !8115, file: !605, line: 103, type: !616)
!8125 = !DILocation(line: 103, column: 29, scope: !8115)
!8126 = !DILocation(line: 104, column: 16, scope: !8115)
!8127 = !DILocation(line: 104, column: 7, scope: !8115)
!8128 = !DILocation(line: 104, column: 14, scope: !8115)
!8129 = !DILocation(line: 105, column: 16, scope: !8115)
!8130 = !DILocation(line: 105, column: 7, scope: !8115)
!8131 = !DILocation(line: 105, column: 14, scope: !8115)
!8132 = !DILocation(line: 106, column: 20, scope: !8115)
!8133 = !DILocation(line: 106, column: 33, scope: !8115)
!8134 = !DILocation(line: 106, column: 7, scope: !8115)
!8135 = !DILocation(line: 106, column: 5, scope: !8115)
!8136 = !DILocation(line: 107, column: 10, scope: !8115)
!8137 = !DILocation(line: 107, column: 14, scope: !8115)
!8138 = !DILocation(line: 107, column: 17, scope: !8115)
!8139 = !DILocation(line: 107, column: 3, scope: !8115)
!8140 = distinct !DISubprogram(name: "remember_copied", scope: !605, file: !605, line: 115, type: !8141, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8141 = !DISubroutineType(types: !8142)
!8142 = !{!9, !183, !498, !500}
!8143 = !DILocalVariable(name: "name", arg: 1, scope: !8140, file: !605, line: 115, type: !183)
!8144 = !DILocation(line: 115, column: 30, scope: !8140)
!8145 = !DILocalVariable(name: "ino", arg: 2, scope: !8140, file: !605, line: 115, type: !498)
!8146 = !DILocation(line: 115, column: 42, scope: !8140)
!8147 = !DILocalVariable(name: "dev", arg: 3, scope: !8140, file: !605, line: 115, type: !500)
!8148 = !DILocation(line: 115, column: 53, scope: !8140)
!8149 = !DILocalVariable(name: "ent", scope: !8140, file: !605, line: 117, type: !610)
!8150 = !DILocation(line: 117, column: 23, scope: !8140)
!8151 = !DILocalVariable(name: "ent_from_table", scope: !8140, file: !605, line: 118, type: !610)
!8152 = !DILocation(line: 118, column: 23, scope: !8140)
!8153 = !DILocation(line: 120, column: 9, scope: !8140)
!8154 = !DILocation(line: 120, column: 7, scope: !8140)
!8155 = !DILocation(line: 121, column: 24, scope: !8140)
!8156 = !DILocation(line: 121, column: 15, scope: !8140)
!8157 = !DILocation(line: 121, column: 3, scope: !8140)
!8158 = !DILocation(line: 121, column: 8, scope: !8140)
!8159 = !DILocation(line: 121, column: 13, scope: !8140)
!8160 = !DILocation(line: 122, column: 17, scope: !8140)
!8161 = !DILocation(line: 122, column: 3, scope: !8140)
!8162 = !DILocation(line: 122, column: 8, scope: !8140)
!8163 = !DILocation(line: 122, column: 15, scope: !8140)
!8164 = !DILocation(line: 123, column: 17, scope: !8140)
!8165 = !DILocation(line: 123, column: 3, scope: !8140)
!8166 = !DILocation(line: 123, column: 8, scope: !8140)
!8167 = !DILocation(line: 123, column: 15, scope: !8140)
!8168 = !DILocation(line: 125, column: 33, scope: !8140)
!8169 = !DILocation(line: 125, column: 46, scope: !8140)
!8170 = !DILocation(line: 125, column: 20, scope: !8140)
!8171 = !DILocation(line: 125, column: 18, scope: !8140)
!8172 = !DILocation(line: 126, column: 7, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8140, file: !605, line: 126, column: 7)
!8174 = !DILocation(line: 126, column: 22, scope: !8173)
!8175 = !DILocation(line: 126, column: 7, scope: !8140)
!8176 = !DILocation(line: 129, column: 7, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !605, line: 127, column: 5)
!8178 = !DILocation(line: 135, column: 7, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8140, file: !605, line: 135, column: 7)
!8180 = !DILocation(line: 135, column: 25, scope: !8179)
!8181 = !DILocation(line: 135, column: 22, scope: !8179)
!8182 = !DILocation(line: 135, column: 7, scope: !8140)
!8183 = !DILocation(line: 137, column: 25, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8179, file: !605, line: 136, column: 5)
!8185 = !DILocation(line: 137, column: 7, scope: !8184)
!8186 = !DILocation(line: 138, column: 23, scope: !8184)
!8187 = !DILocation(line: 138, column: 39, scope: !8184)
!8188 = !DILocation(line: 138, column: 7, scope: !8184)
!8189 = !DILocation(line: 142, column: 3, scope: !8140)
!8190 = !DILocation(line: 143, column: 1, scope: !8140)
!8191 = distinct !DISubprogram(name: "hash_init", scope: !605, file: !605, line: 147, type: !692, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8192 = !DILocation(line: 149, column: 17, scope: !8191)
!8193 = !DILocation(line: 149, column: 15, scope: !8191)
!8194 = !DILocation(line: 153, column: 7, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !605, line: 153, column: 7)
!8196 = !DILocation(line: 153, column: 19, scope: !8195)
!8197 = !DILocation(line: 153, column: 7, scope: !8191)
!8198 = !DILocation(line: 154, column: 5, scope: !8195)
!8199 = !DILocation(line: 155, column: 1, scope: !8191)
!8200 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !605, file: !605, line: 51, type: !829, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8201 = !DILocalVariable(name: "x", arg: 1, scope: !8200, file: !605, line: 51, type: !831)
!8202 = !DILocation(line: 51, column: 31, scope: !8200)
!8203 = !DILocalVariable(name: "table_size", arg: 2, scope: !8200, file: !605, line: 51, type: !55)
!8204 = !DILocation(line: 51, column: 41, scope: !8200)
!8205 = !DILocalVariable(name: "p", scope: !8200, file: !605, line: 53, type: !616)
!8206 = !DILocation(line: 53, column: 29, scope: !8200)
!8207 = !DILocation(line: 53, column: 33, scope: !8200)
!8208 = !DILocation(line: 58, column: 22, scope: !8200)
!8209 = !DILocation(line: 58, column: 25, scope: !8200)
!8210 = !DILocation(line: 58, column: 34, scope: !8200)
!8211 = !DILocation(line: 58, column: 32, scope: !8200)
!8212 = !DILocation(line: 58, column: 3, scope: !8200)
!8213 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !605, file: !605, line: 64, type: !836, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8214 = !DILocalVariable(name: "x", arg: 1, scope: !8213, file: !605, line: 64, type: !831)
!8215 = !DILocation(line: 64, column: 34, scope: !8213)
!8216 = !DILocalVariable(name: "y", arg: 2, scope: !8213, file: !605, line: 64, type: !831)
!8217 = !DILocation(line: 64, column: 49, scope: !8213)
!8218 = !DILocalVariable(name: "a", scope: !8213, file: !605, line: 66, type: !616)
!8219 = !DILocation(line: 66, column: 29, scope: !8213)
!8220 = !DILocation(line: 66, column: 33, scope: !8213)
!8221 = !DILocalVariable(name: "b", scope: !8213, file: !605, line: 67, type: !616)
!8222 = !DILocation(line: 67, column: 29, scope: !8213)
!8223 = !DILocation(line: 67, column: 33, scope: !8213)
!8224 = !DILocation(line: 68, column: 10, scope: !8213)
!8225 = !DILocation(line: 0, scope: !8213)
!8226 = !DILocation(line: 68, column: 3, scope: !8213)
!8227 = distinct !DISubprogram(name: "forget_all", scope: !605, file: !605, line: 161, type: !692, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !604, retainedNodes: !298)
!8228 = !DILocation(line: 163, column: 14, scope: !8227)
!8229 = !DILocation(line: 163, column: 3, scope: !8227)
!8230 = !DILocation(line: 164, column: 1, scope: !8227)
!8231 = distinct !DISubprogram(name: "extent_scan_init", scope: !1185, file: !1185, line: 69, type: !8232, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1184, retainedNodes: !298)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{null, !7, !8234}
!8234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8235, size: 64)
!8235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !561, line: 36, size: 384, elements: !8236)
!8236 = !{!8237, !8238, !8239, !8240, !8241, !8242, !8243}
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8235, file: !561, line: 39, baseType: !7, size: 32)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !8235, file: !561, line: 42, baseType: !1187, size: 64, offset: 64)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !8235, file: !561, line: 45, baseType: !70, size: 32, offset: 128)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !8235, file: !561, line: 48, baseType: !55, size: 64, offset: 192)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !8235, file: !561, line: 52, baseType: !142, size: 8, offset: 256)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !8235, file: !561, line: 55, baseType: !142, size: 8, offset: 264)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !8235, file: !561, line: 58, baseType: !1188, size: 64, offset: 320)
!8244 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8231, file: !1185, line: 69, type: !7)
!8245 = !DILocation(line: 69, column: 23, scope: !8231)
!8246 = !DILocalVariable(name: "scan", arg: 2, scope: !8231, file: !1185, line: 69, type: !8234)
!8247 = !DILocation(line: 69, column: 51, scope: !8231)
!8248 = !DILocation(line: 71, column: 14, scope: !8231)
!8249 = !DILocation(line: 71, column: 3, scope: !8231)
!8250 = !DILocation(line: 71, column: 9, scope: !8231)
!8251 = !DILocation(line: 71, column: 12, scope: !8231)
!8252 = !DILocation(line: 72, column: 3, scope: !8231)
!8253 = !DILocation(line: 72, column: 9, scope: !8231)
!8254 = !DILocation(line: 72, column: 18, scope: !8231)
!8255 = !DILocation(line: 73, column: 3, scope: !8231)
!8256 = !DILocation(line: 73, column: 9, scope: !8231)
!8257 = !DILocation(line: 73, column: 18, scope: !8231)
!8258 = !DILocation(line: 74, column: 3, scope: !8231)
!8259 = !DILocation(line: 74, column: 9, scope: !8231)
!8260 = !DILocation(line: 74, column: 20, scope: !8231)
!8261 = !DILocation(line: 75, column: 3, scope: !8231)
!8262 = !DILocation(line: 75, column: 9, scope: !8231)
!8263 = !DILocation(line: 75, column: 29, scope: !8231)
!8264 = !DILocation(line: 76, column: 3, scope: !8231)
!8265 = !DILocation(line: 76, column: 9, scope: !8231)
!8266 = !DILocation(line: 76, column: 26, scope: !8231)
!8267 = !DILocation(line: 77, column: 20, scope: !8231)
!8268 = !DILocation(line: 77, column: 3, scope: !8231)
!8269 = !DILocation(line: 77, column: 9, scope: !8231)
!8270 = !DILocation(line: 77, column: 18, scope: !8231)
!8271 = !DILocation(line: 78, column: 1, scope: !8231)
!8272 = distinct !DISubprogram(name: "extent_need_sync", scope: !1185, file: !1185, line: 33, type: !1103, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1184, retainedNodes: !298)
!8273 = !DILocation(line: 39, column: 3, scope: !8272)
!8274 = distinct !DISubprogram(name: "extent_scan_read", scope: !1185, file: !1185, line: 87, type: !8275, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1184, retainedNodes: !298)
!8275 = !DISubroutineType(types: !8276)
!8276 = !{!142, !8234}
!8277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8274, file: !1185, line: 94, size: 32768, elements: !8278)
!8278 = !{!8279, !8280}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8277, file: !1185, line: 94, baseType: !1195, size: 256)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8277, file: !1185, line: 94, baseType: !356, size: 32768)
!8281 = !DILocalVariable(name: "scan", arg: 1, scope: !8274, file: !1185, line: 87, type: !8234)
!8282 = !DILocation(line: 87, column: 39, scope: !8274)
!8283 = !DILocalVariable(name: "si", scope: !8274, file: !1185, line: 89, type: !70)
!8284 = !DILocation(line: 89, column: 16, scope: !8274)
!8285 = !DILocalVariable(name: "last_ei", scope: !8274, file: !1185, line: 90, type: !1188)
!8286 = !DILocation(line: 90, column: 23, scope: !8274)
!8287 = !DILocation(line: 90, column: 33, scope: !8274)
!8288 = !DILocation(line: 90, column: 39, scope: !8274)
!8289 = !DILocation(line: 92, column: 3, scope: !8274)
!8290 = !DILocalVariable(name: "fiemap_buf", scope: !8291, file: !1185, line: 94, type: !8277)
!8291 = distinct !DILexicalBlock(scope: !8274, file: !1185, line: 93, column: 5)
!8292 = !DILocation(line: 94, column: 48, scope: !8291)
!8293 = !DILocalVariable(name: "fiemap", scope: !8291, file: !1185, line: 95, type: !1194)
!8294 = !DILocation(line: 95, column: 22, scope: !8291)
!8295 = !DILocation(line: 95, column: 43, scope: !8291)
!8296 = !DILocalVariable(name: "fm_extents", scope: !8291, file: !1185, line: 96, type: !1223)
!8297 = !DILocation(line: 96, column: 29, scope: !8291)
!8298 = !DILocation(line: 96, column: 43, scope: !8291)
!8299 = !DILocation(line: 96, column: 51, scope: !8291)
!8300 = !DILocation(line: 103, column: 7, scope: !8291)
!8301 = !DILocation(line: 105, column: 26, scope: !8291)
!8302 = !DILocation(line: 105, column: 32, scope: !8291)
!8303 = !DILocation(line: 105, column: 7, scope: !8291)
!8304 = !DILocation(line: 105, column: 15, scope: !8291)
!8305 = !DILocation(line: 105, column: 24, scope: !8291)
!8306 = !DILocation(line: 106, column: 26, scope: !8291)
!8307 = !DILocation(line: 106, column: 32, scope: !8291)
!8308 = !DILocation(line: 106, column: 7, scope: !8291)
!8309 = !DILocation(line: 106, column: 15, scope: !8291)
!8310 = !DILocation(line: 106, column: 24, scope: !8291)
!8311 = !DILocation(line: 107, column: 7, scope: !8291)
!8312 = !DILocation(line: 107, column: 15, scope: !8291)
!8313 = !DILocation(line: 107, column: 31, scope: !8291)
!8314 = !DILocation(line: 108, column: 47, scope: !8291)
!8315 = !DILocation(line: 108, column: 53, scope: !8291)
!8316 = !DILocation(line: 108, column: 45, scope: !8291)
!8317 = !DILocation(line: 108, column: 7, scope: !8291)
!8318 = !DILocation(line: 108, column: 15, scope: !8291)
!8319 = !DILocation(line: 108, column: 25, scope: !8291)
!8320 = !DILocation(line: 112, column: 18, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 112, column: 11)
!8322 = !DILocation(line: 112, column: 24, scope: !8321)
!8323 = !DILocation(line: 112, column: 43, scope: !8321)
!8324 = !DILocation(line: 112, column: 11, scope: !8321)
!8325 = !DILocation(line: 112, column: 51, scope: !8321)
!8326 = !DILocation(line: 112, column: 11, scope: !8291)
!8327 = !DILocation(line: 114, column: 15, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !1185, line: 114, column: 15)
!8329 = distinct !DILexicalBlock(scope: !8321, file: !1185, line: 113, column: 9)
!8330 = !DILocation(line: 114, column: 21, scope: !8328)
!8331 = !DILocation(line: 114, column: 32, scope: !8328)
!8332 = !DILocation(line: 114, column: 15, scope: !8329)
!8333 = !DILocation(line: 115, column: 13, scope: !8328)
!8334 = !DILocation(line: 115, column: 19, scope: !8328)
!8335 = !DILocation(line: 115, column: 39, scope: !8328)
!8336 = !DILocation(line: 116, column: 11, scope: !8329)
!8337 = !DILocation(line: 120, column: 11, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 120, column: 11)
!8339 = !DILocation(line: 120, column: 19, scope: !8338)
!8340 = !DILocation(line: 120, column: 37, scope: !8338)
!8341 = !DILocation(line: 120, column: 11, scope: !8291)
!8342 = !DILocation(line: 122, column: 11, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8338, file: !1185, line: 121, column: 9)
!8344 = !DILocation(line: 122, column: 17, scope: !8343)
!8345 = !DILocation(line: 122, column: 34, scope: !8343)
!8346 = !DILocation(line: 123, column: 18, scope: !8343)
!8347 = !DILocation(line: 123, column: 24, scope: !8343)
!8348 = !DILocation(line: 123, column: 35, scope: !8343)
!8349 = !DILocation(line: 123, column: 11, scope: !8343)
!8350 = !DILocation(line: 126, column: 7, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !1185, line: 126, column: 7)
!8352 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 126, column: 7)
!8353 = !DILocation(line: 126, column: 7, scope: !8352)
!8354 = !DILocation(line: 127, column: 25, scope: !8291)
!8355 = !DILocation(line: 127, column: 33, scope: !8291)
!8356 = !DILocation(line: 127, column: 7, scope: !8291)
!8357 = !DILocation(line: 127, column: 13, scope: !8291)
!8358 = !DILocation(line: 127, column: 22, scope: !8291)
!8359 = !DILocalVariable(name: "prev_idx", scope: !8360, file: !1185, line: 131, type: !55)
!8360 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 128, column: 7)
!8361 = !DILocation(line: 131, column: 16, scope: !8360)
!8362 = !DILocation(line: 131, column: 27, scope: !8360)
!8363 = !DILocation(line: 131, column: 37, scope: !8360)
!8364 = !DILocation(line: 131, column: 43, scope: !8360)
!8365 = !DILocation(line: 131, column: 35, scope: !8360)
!8366 = !DILocation(line: 132, column: 37, scope: !8360)
!8367 = !DILocation(line: 132, column: 43, scope: !8360)
!8368 = !DILocation(line: 132, column: 53, scope: !8360)
!8369 = !DILocation(line: 132, column: 59, scope: !8360)
!8370 = !DILocation(line: 132, column: 26, scope: !8360)
!8371 = !DILocation(line: 132, column: 9, scope: !8360)
!8372 = !DILocation(line: 132, column: 15, scope: !8360)
!8373 = !DILocation(line: 132, column: 24, scope: !8360)
!8374 = !DILocation(line: 134, column: 19, scope: !8360)
!8375 = !DILocation(line: 134, column: 25, scope: !8360)
!8376 = !DILocation(line: 134, column: 36, scope: !8360)
!8377 = !DILocation(line: 134, column: 34, scope: !8360)
!8378 = !DILocation(line: 134, column: 17, scope: !8360)
!8379 = !DILocalVariable(name: "i", scope: !8291, file: !1185, line: 137, type: !70)
!8380 = !DILocation(line: 137, column: 20, scope: !8291)
!8381 = !DILocation(line: 138, column: 14, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 138, column: 7)
!8383 = !DILocation(line: 138, column: 12, scope: !8382)
!8384 = !DILocation(line: 138, column: 19, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8382, file: !1185, line: 138, column: 7)
!8386 = !DILocation(line: 138, column: 23, scope: !8385)
!8387 = !DILocation(line: 138, column: 31, scope: !8385)
!8388 = !DILocation(line: 138, column: 21, scope: !8385)
!8389 = !DILocation(line: 138, column: 7, scope: !8382)
!8390 = !DILocation(line: 140, column: 11, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !1185, line: 140, column: 11)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !1185, line: 140, column: 11)
!8393 = distinct !DILexicalBlock(scope: !8385, file: !1185, line: 139, column: 9)
!8394 = !DILocation(line: 140, column: 11, scope: !8392)
!8395 = !DILocation(line: 145, column: 15, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8393, file: !1185, line: 145, column: 15)
!8397 = !DILocation(line: 145, column: 18, scope: !8396)
!8398 = !DILocation(line: 145, column: 21, scope: !8396)
!8399 = !DILocation(line: 145, column: 30, scope: !8396)
!8400 = !DILocation(line: 146, column: 19, scope: !8396)
!8401 = !DILocation(line: 146, column: 30, scope: !8396)
!8402 = !DILocation(line: 146, column: 33, scope: !8396)
!8403 = !DILocation(line: 146, column: 42, scope: !8396)
!8404 = !DILocation(line: 146, column: 15, scope: !8396)
!8405 = !DILocation(line: 147, column: 15, scope: !8396)
!8406 = !DILocation(line: 147, column: 19, scope: !8396)
!8407 = !DILocation(line: 147, column: 28, scope: !8396)
!8408 = !DILocation(line: 147, column: 42, scope: !8396)
!8409 = !DILocation(line: 147, column: 51, scope: !8396)
!8410 = !DILocation(line: 147, column: 40, scope: !8396)
!8411 = !DILocation(line: 148, column: 22, scope: !8396)
!8412 = !DILocation(line: 148, column: 33, scope: !8396)
!8413 = !DILocation(line: 148, column: 36, scope: !8396)
!8414 = !DILocation(line: 148, column: 19, scope: !8396)
!8415 = !DILocation(line: 145, column: 15, scope: !8393)
!8416 = !DILocation(line: 151, column: 38, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8396, file: !1185, line: 149, column: 13)
!8418 = !DILocation(line: 151, column: 49, scope: !8417)
!8419 = !DILocation(line: 151, column: 52, scope: !8417)
!8420 = !DILocation(line: 151, column: 15, scope: !8417)
!8421 = !DILocation(line: 151, column: 24, scope: !8417)
!8422 = !DILocation(line: 151, column: 35, scope: !8417)
!8423 = !DILocation(line: 153, column: 36, scope: !8417)
!8424 = !DILocation(line: 153, column: 47, scope: !8417)
!8425 = !DILocation(line: 153, column: 50, scope: !8417)
!8426 = !DILocation(line: 153, column: 15, scope: !8417)
!8427 = !DILocation(line: 153, column: 24, scope: !8417)
!8428 = !DILocation(line: 153, column: 34, scope: !8417)
!8429 = !DILocation(line: 154, column: 13, scope: !8417)
!8430 = !DILocation(line: 155, column: 21, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8396, file: !1185, line: 155, column: 20)
!8432 = !DILocation(line: 155, column: 24, scope: !8431)
!8433 = !DILocation(line: 155, column: 29, scope: !8431)
!8434 = !DILocation(line: 155, column: 32, scope: !8431)
!8435 = !DILocation(line: 155, column: 38, scope: !8431)
!8436 = !DILocation(line: 155, column: 51, scope: !8431)
!8437 = !DILocation(line: 155, column: 62, scope: !8431)
!8438 = !DILocation(line: 155, column: 65, scope: !8431)
!8439 = !DILocation(line: 155, column: 49, scope: !8431)
!8440 = !DILocation(line: 156, column: 20, scope: !8431)
!8441 = !DILocation(line: 156, column: 24, scope: !8431)
!8442 = !DILocation(line: 156, column: 27, scope: !8431)
!8443 = !DILocation(line: 156, column: 31, scope: !8431)
!8444 = !DILocation(line: 156, column: 40, scope: !8431)
!8445 = !DILocation(line: 156, column: 54, scope: !8431)
!8446 = !DILocation(line: 156, column: 63, scope: !8431)
!8447 = !DILocation(line: 156, column: 52, scope: !8431)
!8448 = !DILocation(line: 157, column: 33, scope: !8431)
!8449 = !DILocation(line: 157, column: 44, scope: !8431)
!8450 = !DILocation(line: 157, column: 47, scope: !8431)
!8451 = !DILocation(line: 157, column: 31, scope: !8431)
!8452 = !DILocation(line: 155, column: 20, scope: !8396)
!8453 = !DILocalVariable(name: "new_logical", scope: !8454, file: !1185, line: 163, type: !1199)
!8454 = distinct !DILexicalBlock(scope: !8431, file: !1185, line: 158, column: 13)
!8455 = !DILocation(line: 163, column: 24, scope: !8454)
!8456 = !DILocalVariable(name: "length_adjust", scope: !8454, file: !1185, line: 164, type: !1199)
!8457 = !DILocation(line: 164, column: 24, scope: !8454)
!8458 = !DILocation(line: 165, column: 19, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8454, file: !1185, line: 165, column: 19)
!8460 = !DILocation(line: 165, column: 22, scope: !8459)
!8461 = !DILocation(line: 165, column: 19, scope: !8454)
!8462 = !DILocation(line: 166, column: 31, scope: !8459)
!8463 = !DILocation(line: 166, column: 37, scope: !8459)
!8464 = !DILocation(line: 166, column: 29, scope: !8459)
!8465 = !DILocation(line: 166, column: 17, scope: !8459)
!8466 = !DILocation(line: 171, column: 33, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8459, file: !1185, line: 168, column: 17)
!8468 = !DILocation(line: 171, column: 42, scope: !8467)
!8469 = !DILocation(line: 171, column: 56, scope: !8467)
!8470 = !DILocation(line: 171, column: 65, scope: !8467)
!8471 = !DILocation(line: 171, column: 54, scope: !8467)
!8472 = !DILocation(line: 171, column: 31, scope: !8467)
!8473 = !DILocation(line: 173, column: 31, scope: !8454)
!8474 = !DILocation(line: 173, column: 45, scope: !8454)
!8475 = !DILocation(line: 173, column: 56, scope: !8454)
!8476 = !DILocation(line: 173, column: 59, scope: !8454)
!8477 = !DILocation(line: 173, column: 43, scope: !8454)
!8478 = !DILocation(line: 173, column: 29, scope: !8454)
!8479 = !DILocation(line: 175, column: 19, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8454, file: !1185, line: 175, column: 19)
!8481 = !DILocation(line: 175, column: 35, scope: !8480)
!8482 = !DILocation(line: 175, column: 46, scope: !8480)
!8483 = !DILocation(line: 175, column: 49, scope: !8480)
!8484 = !DILocation(line: 175, column: 33, scope: !8480)
!8485 = !DILocation(line: 175, column: 19, scope: !8454)
!8486 = !DILocation(line: 177, column: 23, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !1185, line: 177, column: 23)
!8488 = distinct !DILexicalBlock(scope: !8480, file: !1185, line: 176, column: 17)
!8489 = !DILocation(line: 177, column: 29, scope: !8487)
!8490 = !DILocation(line: 177, column: 40, scope: !8487)
!8491 = !DILocation(line: 177, column: 23, scope: !8488)
!8492 = !DILocation(line: 178, column: 21, scope: !8487)
!8493 = !DILocation(line: 178, column: 27, scope: !8487)
!8494 = !DILocation(line: 178, column: 47, scope: !8487)
!8495 = !DILocation(line: 179, column: 19, scope: !8488)
!8496 = !DILocation(line: 181, column: 42, scope: !8454)
!8497 = !DILocation(line: 181, column: 15, scope: !8454)
!8498 = !DILocation(line: 181, column: 26, scope: !8454)
!8499 = !DILocation(line: 181, column: 29, scope: !8454)
!8500 = !DILocation(line: 181, column: 40, scope: !8454)
!8501 = !DILocation(line: 182, column: 42, scope: !8454)
!8502 = !DILocation(line: 182, column: 15, scope: !8454)
!8503 = !DILocation(line: 182, column: 26, scope: !8454)
!8504 = !DILocation(line: 182, column: 29, scope: !8454)
!8505 = !DILocation(line: 182, column: 39, scope: !8454)
!8506 = !DILocation(line: 184, column: 16, scope: !8454)
!8507 = !DILocation(line: 185, column: 15, scope: !8454)
!8508 = !DILocation(line: 189, column: 25, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8431, file: !1185, line: 188, column: 13)
!8510 = !DILocation(line: 189, column: 31, scope: !8509)
!8511 = !DILocation(line: 189, column: 42, scope: !8509)
!8512 = !DILocation(line: 189, column: 40, scope: !8509)
!8513 = !DILocation(line: 189, column: 23, scope: !8509)
!8514 = !DILocation(line: 190, column: 38, scope: !8509)
!8515 = !DILocation(line: 190, column: 49, scope: !8509)
!8516 = !DILocation(line: 190, column: 52, scope: !8509)
!8517 = !DILocation(line: 190, column: 15, scope: !8509)
!8518 = !DILocation(line: 190, column: 24, scope: !8509)
!8519 = !DILocation(line: 190, column: 36, scope: !8509)
!8520 = !DILocation(line: 191, column: 37, scope: !8509)
!8521 = !DILocation(line: 191, column: 48, scope: !8509)
!8522 = !DILocation(line: 191, column: 51, scope: !8509)
!8523 = !DILocation(line: 191, column: 15, scope: !8509)
!8524 = !DILocation(line: 191, column: 24, scope: !8509)
!8525 = !DILocation(line: 191, column: 35, scope: !8509)
!8526 = !DILocation(line: 192, column: 36, scope: !8509)
!8527 = !DILocation(line: 192, column: 47, scope: !8509)
!8528 = !DILocation(line: 192, column: 50, scope: !8509)
!8529 = !DILocation(line: 192, column: 15, scope: !8509)
!8530 = !DILocation(line: 192, column: 24, scope: !8509)
!8531 = !DILocation(line: 192, column: 34, scope: !8509)
!8532 = !DILocation(line: 193, column: 17, scope: !8509)
!8533 = !DILocation(line: 195, column: 9, scope: !8393)
!8534 = !DILocation(line: 138, column: 51, scope: !8385)
!8535 = !DILocation(line: 138, column: 7, scope: !8385)
!8536 = distinct !{!8536, !8389, !8537}
!8537 = !DILocation(line: 195, column: 9, scope: !8382)
!8538 = !DILocation(line: 197, column: 11, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 197, column: 11)
!8540 = !DILocation(line: 197, column: 20, scope: !8539)
!8541 = !DILocation(line: 197, column: 30, scope: !8539)
!8542 = !DILocation(line: 197, column: 11, scope: !8291)
!8543 = !DILocation(line: 198, column: 9, scope: !8539)
!8544 = !DILocation(line: 198, column: 15, scope: !8539)
!8545 = !DILocation(line: 198, column: 32, scope: !8539)
!8546 = !DILocation(line: 202, column: 11, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 202, column: 11)
!8548 = !DILocation(line: 202, column: 14, scope: !8547)
!8549 = !DILocation(line: 202, column: 22, scope: !8547)
!8550 = !DILocation(line: 202, column: 26, scope: !8547)
!8551 = !DILocation(line: 202, column: 32, scope: !8547)
!8552 = !DILocation(line: 202, column: 11, scope: !8291)
!8553 = !DILocation(line: 203, column: 19, scope: !8547)
!8554 = !DILocation(line: 203, column: 25, scope: !8547)
!8555 = !DILocation(line: 203, column: 36, scope: !8547)
!8556 = !DILocation(line: 203, column: 34, scope: !8547)
!8557 = !DILocation(line: 203, column: 41, scope: !8547)
!8558 = !DILocation(line: 203, column: 17, scope: !8547)
!8559 = !DILocation(line: 203, column: 9, scope: !8547)
!8560 = !DILocation(line: 206, column: 24, scope: !8291)
!8561 = !DILocation(line: 206, column: 7, scope: !8291)
!8562 = !DILocation(line: 206, column: 13, scope: !8291)
!8563 = !DILocation(line: 206, column: 22, scope: !8291)
!8564 = !DILocation(line: 208, column: 11, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 208, column: 11)
!8566 = !DILocation(line: 208, column: 17, scope: !8565)
!8567 = !DILocation(line: 208, column: 11, scope: !8291)
!8568 = !DILocation(line: 209, column: 9, scope: !8565)
!8569 = !DILocation(line: 211, column: 28, scope: !8565)
!8570 = !DILocation(line: 211, column: 37, scope: !8565)
!8571 = !DILocation(line: 211, column: 51, scope: !8565)
!8572 = !DILocation(line: 211, column: 60, scope: !8565)
!8573 = !DILocation(line: 211, column: 49, scope: !8565)
!8574 = !DILocation(line: 211, column: 9, scope: !8565)
!8575 = !DILocation(line: 211, column: 15, scope: !8565)
!8576 = !DILocation(line: 211, column: 26, scope: !8565)
!8577 = !DILocation(line: 213, column: 11, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8291, file: !1185, line: 213, column: 11)
!8579 = !DILocation(line: 213, column: 14, scope: !8578)
!8580 = !DILocation(line: 213, column: 11, scope: !8291)
!8581 = !DILocation(line: 214, column: 9, scope: !8578)
!8582 = distinct !{!8582, !8289, !8583}
!8583 = !DILocation(line: 215, column: 5, scope: !8274)
!8584 = !DILocation(line: 217, column: 3, scope: !8274)
!8585 = !DILocation(line: 218, column: 1, scope: !8274)
!8586 = distinct !DISubprogram(name: "force_linkat", scope: !622, file: !622, line: 95, type: !8587, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !621, retainedNodes: !298)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!7, !7, !183, !7, !183, !7, !142, !7}
!8589 = !DILocalVariable(name: "srcdir", arg: 1, scope: !8586, file: !622, line: 95, type: !7)
!8590 = !DILocation(line: 95, column: 19, scope: !8586)
!8591 = !DILocalVariable(name: "srcname", arg: 2, scope: !8586, file: !622, line: 95, type: !183)
!8592 = !DILocation(line: 95, column: 39, scope: !8586)
!8593 = !DILocalVariable(name: "dstdir", arg: 3, scope: !8586, file: !622, line: 96, type: !7)
!8594 = !DILocation(line: 96, column: 19, scope: !8586)
!8595 = !DILocalVariable(name: "dstname", arg: 4, scope: !8586, file: !622, line: 96, type: !183)
!8596 = !DILocation(line: 96, column: 39, scope: !8586)
!8597 = !DILocalVariable(name: "flags", arg: 5, scope: !8586, file: !622, line: 96, type: !7)
!8598 = !DILocation(line: 96, column: 52, scope: !8586)
!8599 = !DILocalVariable(name: "force", arg: 6, scope: !8586, file: !622, line: 96, type: !142)
!8600 = !DILocation(line: 96, column: 64, scope: !8586)
!8601 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !8586, file: !622, line: 97, type: !7)
!8602 = !DILocation(line: 97, column: 19, scope: !8586)
!8603 = !DILocation(line: 99, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8586, file: !622, line: 99, column: 7)
!8605 = !DILocation(line: 99, column: 20, scope: !8604)
!8606 = !DILocation(line: 99, column: 7, scope: !8586)
!8607 = !DILocation(line: 100, column: 29, scope: !8604)
!8608 = !DILocation(line: 100, column: 37, scope: !8604)
!8609 = !DILocation(line: 100, column: 46, scope: !8604)
!8610 = !DILocation(line: 100, column: 54, scope: !8604)
!8611 = !DILocation(line: 100, column: 63, scope: !8604)
!8612 = !DILocation(line: 100, column: 21, scope: !8604)
!8613 = !DILocation(line: 100, column: 70, scope: !8604)
!8614 = !DILocation(line: 101, column: 27, scope: !8604)
!8615 = !DILocation(line: 100, column: 18, scope: !8604)
!8616 = !DILocation(line: 100, column: 5, scope: !8604)
!8617 = !DILocation(line: 102, column: 8, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8586, file: !622, line: 102, column: 7)
!8619 = !DILocation(line: 102, column: 14, scope: !8618)
!8620 = !DILocation(line: 102, column: 17, scope: !8618)
!8621 = !DILocation(line: 102, column: 30, scope: !8618)
!8622 = !DILocation(line: 102, column: 7, scope: !8586)
!8623 = !DILocation(line: 103, column: 12, scope: !8618)
!8624 = !DILocation(line: 103, column: 5, scope: !8618)
!8625 = !DILocalVariable(name: "buf", scope: !8586, file: !622, line: 105, type: !624)
!8626 = !DILocation(line: 105, column: 8, scope: !8586)
!8627 = !DILocalVariable(name: "dsttmp", scope: !8586, file: !622, line: 106, type: !9)
!8628 = !DILocation(line: 106, column: 9, scope: !8586)
!8629 = !DILocation(line: 106, column: 36, scope: !8586)
!8630 = !DILocation(line: 106, column: 45, scope: !8586)
!8631 = !DILocation(line: 106, column: 18, scope: !8586)
!8632 = !DILocation(line: 107, column: 9, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8586, file: !622, line: 107, column: 7)
!8634 = !DILocation(line: 107, column: 7, scope: !8586)
!8635 = !DILocation(line: 108, column: 12, scope: !8633)
!8636 = !DILocation(line: 108, column: 5, scope: !8633)
!8637 = !DILocalVariable(name: "arg", scope: !8586, file: !622, line: 109, type: !630)
!8638 = !DILocation(line: 109, column: 19, scope: !8586)
!8639 = !DILocation(line: 109, column: 25, scope: !8586)
!8640 = !DILocation(line: 109, column: 27, scope: !8586)
!8641 = !DILocation(line: 109, column: 35, scope: !8586)
!8642 = !DILocation(line: 109, column: 44, scope: !8586)
!8643 = !DILocation(line: 109, column: 52, scope: !8586)
!8644 = !DILocalVariable(name: "err", scope: !8586, file: !622, line: 110, type: !7)
!8645 = !DILocation(line: 110, column: 7, scope: !8586)
!8646 = !DILocation(line: 112, column: 25, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8586, file: !622, line: 112, column: 7)
!8648 = !DILocation(line: 112, column: 36, scope: !8647)
!8649 = !DILocation(line: 112, column: 7, scope: !8647)
!8650 = !DILocation(line: 112, column: 66, scope: !8647)
!8651 = !DILocation(line: 112, column: 7, scope: !8586)
!8652 = !DILocation(line: 113, column: 11, scope: !8647)
!8653 = !DILocation(line: 113, column: 9, scope: !8647)
!8654 = !DILocation(line: 113, column: 5, scope: !8647)
!8655 = !DILocation(line: 116, column: 23, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8647, file: !622, line: 115, column: 5)
!8657 = !DILocation(line: 116, column: 31, scope: !8656)
!8658 = !DILocation(line: 116, column: 39, scope: !8656)
!8659 = !DILocation(line: 116, column: 47, scope: !8656)
!8660 = !DILocation(line: 116, column: 13, scope: !8656)
!8661 = !DILocation(line: 116, column: 56, scope: !8656)
!8662 = !DILocation(line: 116, column: 68, scope: !8656)
!8663 = !DILocation(line: 116, column: 11, scope: !8656)
!8664 = !DILocation(line: 120, column: 17, scope: !8656)
!8665 = !DILocation(line: 120, column: 25, scope: !8656)
!8666 = !DILocation(line: 120, column: 7, scope: !8656)
!8667 = !DILocation(line: 123, column: 7, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8586, file: !622, line: 123, column: 7)
!8669 = !DILocation(line: 123, column: 17, scope: !8668)
!8670 = !DILocation(line: 123, column: 14, scope: !8668)
!8671 = !DILocation(line: 123, column: 7, scope: !8586)
!8672 = !DILocation(line: 124, column: 11, scope: !8668)
!8673 = !DILocation(line: 124, column: 5, scope: !8668)
!8674 = !DILocation(line: 125, column: 10, scope: !8586)
!8675 = !DILocation(line: 125, column: 3, scope: !8586)
!8676 = !DILocation(line: 126, column: 1, scope: !8586)
!8677 = distinct !DISubprogram(name: "samedir_template", scope: !622, file: !622, line: 51, type: !8678, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !298)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{!9, !183, !9}
!8680 = !DILocalVariable(name: "dstname", arg: 1, scope: !8677, file: !622, line: 51, type: !183)
!8681 = !DILocation(line: 51, column: 31, scope: !8677)
!8682 = !DILocalVariable(name: "buf", arg: 2, scope: !8677, file: !622, line: 51, type: !9)
!8683 = !DILocation(line: 51, column: 45, scope: !8677)
!8684 = !DILocalVariable(name: "dstdirlen", scope: !8677, file: !622, line: 53, type: !627)
!8685 = !DILocation(line: 53, column: 13, scope: !8677)
!8686 = !DILocation(line: 53, column: 41, scope: !8677)
!8687 = !DILocation(line: 53, column: 25, scope: !8677)
!8688 = !DILocation(line: 53, column: 52, scope: !8677)
!8689 = !DILocation(line: 53, column: 50, scope: !8677)
!8690 = !DILocalVariable(name: "dsttmpsize", scope: !8677, file: !622, line: 54, type: !55)
!8691 = !DILocation(line: 54, column: 10, scope: !8677)
!8692 = !DILocation(line: 54, column: 23, scope: !8677)
!8693 = !DILocation(line: 54, column: 33, scope: !8677)
!8694 = !DILocalVariable(name: "dsttmp", scope: !8677, file: !622, line: 55, type: !9)
!8695 = !DILocation(line: 55, column: 9, scope: !8677)
!8696 = !DILocation(line: 56, column: 7, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8677, file: !622, line: 56, column: 7)
!8698 = !DILocation(line: 56, column: 18, scope: !8697)
!8699 = !DILocation(line: 56, column: 7, scope: !8677)
!8700 = !DILocation(line: 57, column: 14, scope: !8697)
!8701 = !DILocation(line: 57, column: 12, scope: !8697)
!8702 = !DILocation(line: 57, column: 5, scope: !8697)
!8703 = !DILocation(line: 60, column: 24, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8697, file: !622, line: 59, column: 5)
!8705 = !DILocation(line: 60, column: 16, scope: !8704)
!8706 = !DILocation(line: 60, column: 14, scope: !8704)
!8707 = !DILocation(line: 61, column: 12, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8704, file: !622, line: 61, column: 11)
!8709 = !DILocation(line: 61, column: 11, scope: !8704)
!8710 = !DILocation(line: 62, column: 16, scope: !8708)
!8711 = !DILocation(line: 62, column: 9, scope: !8708)
!8712 = !DILocation(line: 64, column: 20, scope: !8677)
!8713 = !DILocation(line: 64, column: 28, scope: !8677)
!8714 = !DILocation(line: 64, column: 37, scope: !8677)
!8715 = !DILocation(line: 64, column: 11, scope: !8677)
!8716 = !DILocation(line: 64, column: 3, scope: !8677)
!8717 = !DILocation(line: 65, column: 10, scope: !8677)
!8718 = !DILocation(line: 65, column: 3, scope: !8677)
!8719 = !DILocation(line: 66, column: 1, scope: !8677)
!8720 = distinct !DISubprogram(name: "try_link", scope: !622, file: !622, line: 80, type: !1015, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !298)
!8721 = !DILocalVariable(name: "dest", arg: 1, scope: !8720, file: !622, line: 80, type: !9)
!8722 = !DILocation(line: 80, column: 17, scope: !8720)
!8723 = !DILocalVariable(name: "arg", arg: 2, scope: !8720, file: !622, line: 80, type: !53)
!8724 = !DILocation(line: 80, column: 29, scope: !8720)
!8725 = !DILocalVariable(name: "a", scope: !8720, file: !622, line: 82, type: !629)
!8726 = !DILocation(line: 82, column: 20, scope: !8720)
!8727 = !DILocation(line: 82, column: 24, scope: !8720)
!8728 = !DILocation(line: 83, column: 18, scope: !8720)
!8729 = !DILocation(line: 83, column: 21, scope: !8720)
!8730 = !DILocation(line: 83, column: 29, scope: !8720)
!8731 = !DILocation(line: 83, column: 32, scope: !8720)
!8732 = !DILocation(line: 83, column: 41, scope: !8720)
!8733 = !DILocation(line: 83, column: 44, scope: !8720)
!8734 = !DILocation(line: 83, column: 52, scope: !8720)
!8735 = !DILocation(line: 83, column: 58, scope: !8720)
!8736 = !DILocation(line: 83, column: 61, scope: !8720)
!8737 = !DILocation(line: 83, column: 10, scope: !8720)
!8738 = !DILocation(line: 83, column: 3, scope: !8720)
!8739 = distinct !DISubprogram(name: "force_symlinkat", scope: !622, file: !622, line: 152, type: !8740, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !621, retainedNodes: !298)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!7, !183, !7, !183, !142, !7}
!8742 = !DILocalVariable(name: "srcname", arg: 1, scope: !8739, file: !622, line: 152, type: !183)
!8743 = !DILocation(line: 152, column: 30, scope: !8739)
!8744 = !DILocalVariable(name: "dstdir", arg: 2, scope: !8739, file: !622, line: 152, type: !7)
!8745 = !DILocation(line: 152, column: 43, scope: !8739)
!8746 = !DILocalVariable(name: "dstname", arg: 3, scope: !8739, file: !622, line: 152, type: !183)
!8747 = !DILocation(line: 152, column: 63, scope: !8739)
!8748 = !DILocalVariable(name: "force", arg: 4, scope: !8739, file: !622, line: 153, type: !142)
!8749 = !DILocation(line: 153, column: 23, scope: !8739)
!8750 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !8739, file: !622, line: 153, type: !7)
!8751 = !DILocation(line: 153, column: 34, scope: !8739)
!8752 = !DILocation(line: 155, column: 7, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8739, file: !622, line: 155, column: 7)
!8754 = !DILocation(line: 155, column: 23, scope: !8753)
!8755 = !DILocation(line: 155, column: 7, scope: !8739)
!8756 = !DILocation(line: 156, column: 34, scope: !8753)
!8757 = !DILocation(line: 156, column: 43, scope: !8753)
!8758 = !DILocation(line: 156, column: 51, scope: !8753)
!8759 = !DILocation(line: 156, column: 23, scope: !8753)
!8760 = !DILocation(line: 156, column: 60, scope: !8753)
!8761 = !DILocation(line: 156, column: 71, scope: !8753)
!8762 = !DILocation(line: 156, column: 21, scope: !8753)
!8763 = !DILocation(line: 156, column: 5, scope: !8753)
!8764 = !DILocation(line: 157, column: 8, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8739, file: !622, line: 157, column: 7)
!8766 = !DILocation(line: 157, column: 14, scope: !8765)
!8767 = !DILocation(line: 157, column: 17, scope: !8765)
!8768 = !DILocation(line: 157, column: 33, scope: !8765)
!8769 = !DILocation(line: 157, column: 7, scope: !8739)
!8770 = !DILocation(line: 158, column: 12, scope: !8765)
!8771 = !DILocation(line: 158, column: 5, scope: !8765)
!8772 = !DILocalVariable(name: "buf", scope: !8739, file: !622, line: 160, type: !624)
!8773 = !DILocation(line: 160, column: 8, scope: !8739)
!8774 = !DILocalVariable(name: "dsttmp", scope: !8739, file: !622, line: 161, type: !9)
!8775 = !DILocation(line: 161, column: 9, scope: !8739)
!8776 = !DILocation(line: 161, column: 36, scope: !8739)
!8777 = !DILocation(line: 161, column: 45, scope: !8739)
!8778 = !DILocation(line: 161, column: 18, scope: !8739)
!8779 = !DILocation(line: 162, column: 8, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8739, file: !622, line: 162, column: 7)
!8781 = !DILocation(line: 162, column: 7, scope: !8739)
!8782 = !DILocation(line: 163, column: 12, scope: !8780)
!8783 = !DILocation(line: 163, column: 5, scope: !8780)
!8784 = !DILocalVariable(name: "arg", scope: !8739, file: !622, line: 164, type: !637)
!8785 = !DILocation(line: 164, column: 22, scope: !8739)
!8786 = !DILocation(line: 164, column: 28, scope: !8739)
!8787 = !DILocation(line: 164, column: 30, scope: !8739)
!8788 = !DILocation(line: 164, column: 39, scope: !8739)
!8789 = !DILocalVariable(name: "err", scope: !8739, file: !622, line: 165, type: !7)
!8790 = !DILocation(line: 165, column: 7, scope: !8739)
!8791 = !DILocation(line: 167, column: 25, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8739, file: !622, line: 167, column: 7)
!8793 = !DILocation(line: 167, column: 36, scope: !8792)
!8794 = !DILocation(line: 167, column: 7, scope: !8792)
!8795 = !DILocation(line: 167, column: 69, scope: !8792)
!8796 = !DILocation(line: 167, column: 7, scope: !8739)
!8797 = !DILocation(line: 168, column: 11, scope: !8792)
!8798 = !DILocation(line: 168, column: 9, scope: !8792)
!8799 = !DILocation(line: 168, column: 5, scope: !8792)
!8800 = !DILocation(line: 169, column: 22, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8792, file: !622, line: 169, column: 12)
!8802 = !DILocation(line: 169, column: 30, scope: !8801)
!8803 = !DILocation(line: 169, column: 38, scope: !8801)
!8804 = !DILocation(line: 169, column: 46, scope: !8801)
!8805 = !DILocation(line: 169, column: 12, scope: !8801)
!8806 = !DILocation(line: 169, column: 55, scope: !8801)
!8807 = !DILocation(line: 169, column: 12, scope: !8792)
!8808 = !DILocation(line: 171, column: 13, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8801, file: !622, line: 170, column: 5)
!8810 = !DILocation(line: 171, column: 11, scope: !8809)
!8811 = !DILocation(line: 172, column: 17, scope: !8809)
!8812 = !DILocation(line: 172, column: 25, scope: !8809)
!8813 = !DILocation(line: 172, column: 7, scope: !8809)
!8814 = !DILocation(line: 173, column: 5, scope: !8809)
!8815 = !DILocation(line: 178, column: 11, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8801, file: !622, line: 175, column: 5)
!8817 = !DILocation(line: 181, column: 7, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8739, file: !622, line: 181, column: 7)
!8819 = !DILocation(line: 181, column: 17, scope: !8818)
!8820 = !DILocation(line: 181, column: 14, scope: !8818)
!8821 = !DILocation(line: 181, column: 7, scope: !8739)
!8822 = !DILocation(line: 182, column: 11, scope: !8818)
!8823 = !DILocation(line: 182, column: 5, scope: !8818)
!8824 = !DILocation(line: 183, column: 10, scope: !8739)
!8825 = !DILocation(line: 183, column: 3, scope: !8739)
!8826 = !DILocation(line: 184, column: 1, scope: !8739)
!8827 = distinct !DISubprogram(name: "try_symlink", scope: !622, file: !622, line: 138, type: !1015, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !621, retainedNodes: !298)
!8828 = !DILocalVariable(name: "dest", arg: 1, scope: !8827, file: !622, line: 138, type: !9)
!8829 = !DILocation(line: 138, column: 20, scope: !8827)
!8830 = !DILocalVariable(name: "arg", arg: 2, scope: !8827, file: !622, line: 138, type: !53)
!8831 = !DILocation(line: 138, column: 32, scope: !8827)
!8832 = !DILocalVariable(name: "a", scope: !8827, file: !622, line: 140, type: !636)
!8833 = !DILocation(line: 140, column: 23, scope: !8827)
!8834 = !DILocation(line: 140, column: 27, scope: !8827)
!8835 = !DILocation(line: 141, column: 21, scope: !8827)
!8836 = !DILocation(line: 141, column: 24, scope: !8827)
!8837 = !DILocation(line: 141, column: 33, scope: !8827)
!8838 = !DILocation(line: 141, column: 36, scope: !8827)
!8839 = !DILocation(line: 141, column: 44, scope: !8827)
!8840 = !DILocation(line: 141, column: 10, scope: !8827)
!8841 = !DILocation(line: 141, column: 3, scope: !8827)
!8842 = distinct !DISubprogram(name: "copy_acl", scope: !8843, file: !8843, line: 43, type: !8844, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1233, retainedNodes: !298)
!8843 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!7, !183, !7, !183, !7, !139}
!8846 = !DILocalVariable(name: "src_name", arg: 1, scope: !8842, file: !8843, line: 43, type: !183)
!8847 = !DILocation(line: 43, column: 23, scope: !8842)
!8848 = !DILocalVariable(name: "source_desc", arg: 2, scope: !8842, file: !8843, line: 43, type: !7)
!8849 = !DILocation(line: 43, column: 37, scope: !8842)
!8850 = !DILocalVariable(name: "dst_name", arg: 3, scope: !8842, file: !8843, line: 43, type: !183)
!8851 = !DILocation(line: 43, column: 62, scope: !8842)
!8852 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !8842, file: !8843, line: 44, type: !7)
!8853 = !DILocation(line: 44, column: 15, scope: !8842)
!8854 = !DILocalVariable(name: "mode", arg: 5, scope: !8842, file: !8843, line: 44, type: !139)
!8855 = !DILocation(line: 44, column: 33, scope: !8842)
!8856 = !DILocalVariable(name: "ret", scope: !8842, file: !8843, line: 46, type: !7)
!8857 = !DILocation(line: 46, column: 7, scope: !8842)
!8858 = !DILocation(line: 46, column: 24, scope: !8842)
!8859 = !DILocation(line: 46, column: 34, scope: !8842)
!8860 = !DILocation(line: 46, column: 47, scope: !8842)
!8861 = !DILocation(line: 46, column: 57, scope: !8842)
!8862 = !DILocation(line: 46, column: 68, scope: !8842)
!8863 = !DILocation(line: 46, column: 13, scope: !8842)
!8864 = !DILocation(line: 47, column: 11, scope: !8842)
!8865 = !DILocation(line: 47, column: 3, scope: !8842)
!8866 = !DILocation(line: 50, column: 17, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8842, file: !8843, line: 48, column: 5)
!8868 = !DILocation(line: 50, column: 37, scope: !8867)
!8869 = !DILocation(line: 50, column: 30, scope: !8867)
!8870 = !DILocation(line: 50, column: 7, scope: !8867)
!8871 = !DILocation(line: 51, column: 7, scope: !8867)
!8872 = !DILocation(line: 54, column: 17, scope: !8867)
!8873 = !DILocation(line: 54, column: 24, scope: !8867)
!8874 = !DILocation(line: 54, column: 67, scope: !8867)
!8875 = !DILocation(line: 54, column: 60, scope: !8867)
!8876 = !DILocation(line: 54, column: 7, scope: !8867)
!8877 = !DILocation(line: 55, column: 7, scope: !8867)
!8878 = !DILocation(line: 58, column: 7, scope: !8867)
!8879 = !DILocation(line: 60, column: 10, scope: !8842)
!8880 = !DILocation(line: 60, column: 3, scope: !8842)
!8881 = distinct !DISubprogram(name: "set_acl", scope: !8882, file: !8882, line: 42, type: !8883, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1236, retainedNodes: !298)
!8882 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!8883 = !DISubroutineType(types: !8884)
!8884 = !{!7, !183, !7, !139}
!8885 = !DILocalVariable(name: "name", arg: 1, scope: !8881, file: !8882, line: 42, type: !183)
!8886 = !DILocation(line: 42, column: 22, scope: !8881)
!8887 = !DILocalVariable(name: "desc", arg: 2, scope: !8881, file: !8882, line: 42, type: !7)
!8888 = !DILocation(line: 42, column: 32, scope: !8881)
!8889 = !DILocalVariable(name: "mode", arg: 3, scope: !8881, file: !8882, line: 42, type: !139)
!8890 = !DILocation(line: 42, column: 45, scope: !8881)
!8891 = !DILocalVariable(name: "ret", scope: !8881, file: !8882, line: 44, type: !7)
!8892 = !DILocation(line: 44, column: 7, scope: !8881)
!8893 = !DILocation(line: 44, column: 23, scope: !8881)
!8894 = !DILocation(line: 44, column: 29, scope: !8881)
!8895 = !DILocation(line: 44, column: 35, scope: !8881)
!8896 = !DILocation(line: 44, column: 13, scope: !8881)
!8897 = !DILocation(line: 45, column: 7, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8881, file: !8882, line: 45, column: 7)
!8899 = !DILocation(line: 45, column: 11, scope: !8898)
!8900 = !DILocation(line: 45, column: 7, scope: !8881)
!8901 = !DILocation(line: 46, column: 15, scope: !8898)
!8902 = !DILocation(line: 46, column: 22, scope: !8898)
!8903 = !DILocation(line: 46, column: 62, scope: !8898)
!8904 = !DILocation(line: 46, column: 55, scope: !8898)
!8905 = !DILocation(line: 46, column: 5, scope: !8898)
!8906 = !DILocation(line: 47, column: 10, scope: !8881)
!8907 = !DILocation(line: 47, column: 3, scope: !8881)
!8908 = distinct !DISubprogram(name: "areadlink_with_size", scope: !8909, file: !8909, line: 52, type: !8910, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1239, retainedNodes: !298)
!8909 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!9, !183, !55}
!8912 = !DILocalVariable(name: "file", arg: 1, scope: !8908, file: !8909, line: 52, type: !183)
!8913 = !DILocation(line: 52, column: 34, scope: !8908)
!8914 = !DILocalVariable(name: "size", arg: 2, scope: !8908, file: !8909, line: 52, type: !55)
!8915 = !DILocation(line: 52, column: 47, scope: !8908)
!8916 = !DILocalVariable(name: "symlink_max", scope: !8908, file: !8909, line: 57, type: !55)
!8917 = !DILocation(line: 57, column: 10, scope: !8908)
!8918 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !8908, file: !8909, line: 58, type: !55)
!8919 = !DILocation(line: 58, column: 10, scope: !8908)
!8920 = !DILocalVariable(name: "initial_limit", scope: !8908, file: !8909, line: 59, type: !55)
!8921 = !DILocation(line: 59, column: 10, scope: !8908)
!8922 = !DILocation(line: 59, column: 27, scope: !8908)
!8923 = !DILocation(line: 59, column: 41, scope: !8908)
!8924 = !DILocation(line: 59, column: 39, scope: !8908)
!8925 = !DILocation(line: 60, column: 29, scope: !8908)
!8926 = !DILocation(line: 60, column: 41, scope: !8908)
!8927 = !DILocation(line: 61, column: 29, scope: !8908)
!8928 = !DILocalVariable(name: "buf_size", scope: !8908, file: !8909, line: 64, type: !55)
!8929 = !DILocation(line: 64, column: 10, scope: !8908)
!8930 = !DILocation(line: 64, column: 21, scope: !8908)
!8931 = !DILocation(line: 64, column: 28, scope: !8908)
!8932 = !DILocation(line: 64, column: 26, scope: !8908)
!8933 = !DILocation(line: 64, column: 44, scope: !8908)
!8934 = !DILocation(line: 64, column: 49, scope: !8908)
!8935 = !DILocation(line: 64, column: 55, scope: !8908)
!8936 = !DILocation(line: 66, column: 3, scope: !8908)
!8937 = !DILocalVariable(name: "r", scope: !8938, file: !8909, line: 68, type: !661)
!8938 = distinct !DILexicalBlock(scope: !8908, file: !8909, line: 67, column: 5)
!8939 = !DILocation(line: 68, column: 15, scope: !8938)
!8940 = !DILocalVariable(name: "link_length", scope: !8938, file: !8909, line: 69, type: !55)
!8941 = !DILocation(line: 69, column: 14, scope: !8938)
!8942 = !DILocalVariable(name: "buffer", scope: !8938, file: !8909, line: 70, type: !9)
!8943 = !DILocation(line: 70, column: 13, scope: !8938)
!8944 = !DILocation(line: 70, column: 30, scope: !8938)
!8945 = !DILocation(line: 70, column: 22, scope: !8938)
!8946 = !DILocation(line: 72, column: 11, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8938, file: !8909, line: 72, column: 11)
!8948 = !DILocation(line: 72, column: 18, scope: !8947)
!8949 = !DILocation(line: 72, column: 11, scope: !8938)
!8950 = !DILocation(line: 73, column: 9, scope: !8947)
!8951 = !DILocation(line: 74, column: 21, scope: !8938)
!8952 = !DILocation(line: 74, column: 27, scope: !8938)
!8953 = !DILocation(line: 74, column: 35, scope: !8938)
!8954 = !DILocation(line: 74, column: 11, scope: !8938)
!8955 = !DILocation(line: 74, column: 9, scope: !8938)
!8956 = !DILocation(line: 75, column: 21, scope: !8938)
!8957 = !DILocation(line: 75, column: 19, scope: !8938)
!8958 = !DILocation(line: 79, column: 11, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8938, file: !8909, line: 79, column: 11)
!8960 = !DILocation(line: 79, column: 13, scope: !8959)
!8961 = !DILocation(line: 79, column: 17, scope: !8959)
!8962 = !DILocation(line: 79, column: 20, scope: !8959)
!8963 = !DILocation(line: 79, column: 26, scope: !8959)
!8964 = !DILocation(line: 79, column: 11, scope: !8938)
!8965 = !DILocalVariable(name: "saved_errno", scope: !8966, file: !8909, line: 81, type: !7)
!8966 = distinct !DILexicalBlock(scope: !8959, file: !8909, line: 80, column: 9)
!8967 = !DILocation(line: 81, column: 15, scope: !8966)
!8968 = !DILocation(line: 81, column: 29, scope: !8966)
!8969 = !DILocation(line: 82, column: 17, scope: !8966)
!8970 = !DILocation(line: 82, column: 11, scope: !8966)
!8971 = !DILocation(line: 83, column: 19, scope: !8966)
!8972 = !DILocation(line: 83, column: 11, scope: !8966)
!8973 = !DILocation(line: 83, column: 17, scope: !8966)
!8974 = !DILocation(line: 84, column: 11, scope: !8966)
!8975 = !DILocation(line: 87, column: 11, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8938, file: !8909, line: 87, column: 11)
!8977 = !DILocation(line: 87, column: 25, scope: !8976)
!8978 = !DILocation(line: 87, column: 23, scope: !8976)
!8979 = !DILocation(line: 87, column: 11, scope: !8938)
!8980 = !DILocation(line: 89, column: 11, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8976, file: !8909, line: 88, column: 9)
!8982 = !DILocation(line: 89, column: 18, scope: !8981)
!8983 = !DILocation(line: 89, column: 31, scope: !8981)
!8984 = !DILocation(line: 90, column: 18, scope: !8981)
!8985 = !DILocation(line: 90, column: 11, scope: !8981)
!8986 = !DILocation(line: 93, column: 13, scope: !8938)
!8987 = !DILocation(line: 93, column: 7, scope: !8938)
!8988 = !DILocation(line: 94, column: 11, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8938, file: !8909, line: 94, column: 11)
!8990 = !DILocation(line: 94, column: 20, scope: !8989)
!8991 = !DILocation(line: 94, column: 11, scope: !8938)
!8992 = !DILocation(line: 95, column: 18, scope: !8989)
!8993 = !DILocation(line: 95, column: 9, scope: !8989)
!8994 = !DILocation(line: 96, column: 16, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8989, file: !8909, line: 96, column: 16)
!8996 = !DILocation(line: 96, column: 25, scope: !8995)
!8997 = !DILocation(line: 96, column: 16, scope: !8989)
!8998 = !DILocation(line: 97, column: 18, scope: !8995)
!8999 = !DILocation(line: 97, column: 9, scope: !8995)
!9000 = !DILocation(line: 100, column: 11, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8995, file: !8909, line: 99, column: 9)
!9002 = !DILocation(line: 100, column: 17, scope: !9001)
!9003 = !DILocation(line: 101, column: 11, scope: !9001)
!9004 = distinct !{!9004, !8936, !9005}
!9005 = !DILocation(line: 103, column: 5, scope: !8908)
!9006 = !DILocation(line: 104, column: 1, scope: !8908)
!9007 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !654, file: !654, line: 88, type: !296, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !650, retainedNodes: !298)
!9008 = !DILocalVariable(name: "s", arg: 1, scope: !9007, file: !654, line: 88, type: !183)
!9009 = !DILocation(line: 88, column: 39, scope: !9007)
!9010 = !DILocation(line: 90, column: 8, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9007, file: !654, line: 90, column: 7)
!9012 = !DILocation(line: 90, column: 7, scope: !9007)
!9013 = !DILocation(line: 91, column: 9, scope: !9011)
!9014 = !DILocation(line: 91, column: 7, scope: !9011)
!9015 = !DILocation(line: 91, column: 5, scope: !9011)
!9016 = !DILocation(line: 92, column: 26, scope: !9007)
!9017 = !DILocation(line: 92, column: 28, scope: !9007)
!9018 = !DILocation(line: 92, column: 32, scope: !9007)
!9019 = !DILocation(line: 92, column: 31, scope: !9007)
!9020 = !DILocation(line: 92, column: 34, scope: !9007)
!9021 = !DILocation(line: 92, column: 37, scope: !9007)
!9022 = !DILocation(line: 92, column: 58, scope: !9007)
!9023 = !DILocation(line: 92, column: 42, scope: !9007)
!9024 = !DILocation(line: 92, column: 39, scope: !9007)
!9025 = !DILocation(line: 92, column: 63, scope: !9007)
!9026 = !DILocation(line: 92, column: 24, scope: !9007)
!9027 = !DILocation(line: 93, column: 1, scope: !9007)
!9028 = distinct !DISubprogram(name: "backupfile_internal", scope: !654, file: !654, line: 314, type: !9029, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !650, retainedNodes: !298)
!9029 = !DISubroutineType(types: !9030)
!9030 = !{!9, !7, !183, !68, !142}
!9031 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9028, file: !654, line: 314, type: !7)
!9032 = !DILocation(line: 314, column: 26, scope: !9028)
!9033 = !DILocalVariable(name: "file", arg: 2, scope: !9028, file: !654, line: 314, type: !183)
!9034 = !DILocation(line: 314, column: 46, scope: !9028)
!9035 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9028, file: !654, line: 315, type: !68)
!9036 = !DILocation(line: 315, column: 39, scope: !9028)
!9037 = !DILocalVariable(name: "rename", arg: 4, scope: !9028, file: !654, line: 315, type: !142)
!9038 = !DILocation(line: 315, column: 57, scope: !9028)
!9039 = !DILocalVariable(name: "base_offset", scope: !9028, file: !654, line: 317, type: !627)
!9040 = !DILocation(line: 317, column: 13, scope: !9028)
!9041 = !DILocation(line: 317, column: 43, scope: !9028)
!9042 = !DILocation(line: 317, column: 27, scope: !9028)
!9043 = !DILocation(line: 317, column: 51, scope: !9028)
!9044 = !DILocation(line: 317, column: 49, scope: !9028)
!9045 = !DILocalVariable(name: "filelen", scope: !9028, file: !654, line: 318, type: !55)
!9046 = !DILocation(line: 318, column: 10, scope: !9028)
!9047 = !DILocation(line: 318, column: 20, scope: !9028)
!9048 = !DILocation(line: 318, column: 42, scope: !9028)
!9049 = !DILocation(line: 318, column: 49, scope: !9028)
!9050 = !DILocation(line: 318, column: 47, scope: !9028)
!9051 = !DILocation(line: 318, column: 34, scope: !9028)
!9052 = !DILocation(line: 318, column: 32, scope: !9028)
!9053 = !DILocation(line: 320, column: 9, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9028, file: !654, line: 320, column: 7)
!9055 = !DILocation(line: 320, column: 7, scope: !9028)
!9056 = !DILocation(line: 321, column: 5, scope: !9054)
!9057 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9028, file: !654, line: 325, type: !55)
!9058 = !DILocation(line: 325, column: 10, scope: !9028)
!9059 = !DILocation(line: 325, column: 46, scope: !9028)
!9060 = !DILocation(line: 325, column: 38, scope: !9028)
!9061 = !DILocation(line: 325, column: 68, scope: !9028)
!9062 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9028, file: !654, line: 326, type: !55)
!9063 = !DILocation(line: 326, column: 10, scope: !9028)
!9064 = !DILocation(line: 326, column: 37, scope: !9028)
!9065 = !DILocation(line: 328, column: 7, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9028, file: !654, line: 328, column: 7)
!9067 = !DILocation(line: 328, column: 32, scope: !9066)
!9068 = !DILocation(line: 328, column: 7, scope: !9028)
!9069 = !DILocation(line: 329, column: 30, scope: !9066)
!9070 = !DILocation(line: 329, column: 5, scope: !9066)
!9071 = !DILocalVariable(name: "ssize", scope: !9028, file: !654, line: 331, type: !661)
!9072 = !DILocation(line: 331, column: 11, scope: !9028)
!9073 = !DILocation(line: 331, column: 19, scope: !9028)
!9074 = !DILocation(line: 331, column: 29, scope: !9028)
!9075 = !DILocation(line: 331, column: 27, scope: !9028)
!9076 = !DILocation(line: 331, column: 54, scope: !9028)
!9077 = !DILocalVariable(name: "s", scope: !9028, file: !654, line: 332, type: !9)
!9078 = !DILocation(line: 332, column: 9, scope: !9028)
!9079 = !DILocation(line: 332, column: 21, scope: !9028)
!9080 = !DILocation(line: 332, column: 13, scope: !9028)
!9081 = !DILocation(line: 333, column: 8, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9028, file: !654, line: 333, column: 7)
!9083 = !DILocation(line: 333, column: 7, scope: !9028)
!9084 = !DILocation(line: 334, column: 12, scope: !9082)
!9085 = !DILocation(line: 334, column: 5, scope: !9082)
!9086 = !DILocalVariable(name: "dirp", scope: !9028, file: !654, line: 336, type: !662)
!9087 = !DILocation(line: 336, column: 8, scope: !9028)
!9088 = !DILocalVariable(name: "sdir", scope: !9028, file: !654, line: 337, type: !7)
!9089 = !DILocation(line: 337, column: 7, scope: !9028)
!9090 = !DILocalVariable(name: "base_max", scope: !9028, file: !654, line: 338, type: !55)
!9091 = !DILocation(line: 338, column: 10, scope: !9028)
!9092 = !DILocation(line: 339, column: 3, scope: !9028)
!9093 = !DILocation(line: 341, column: 15, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9028, file: !654, line: 340, column: 5)
!9095 = !DILocation(line: 341, column: 18, scope: !9094)
!9096 = !DILocation(line: 341, column: 24, scope: !9094)
!9097 = !DILocation(line: 341, column: 32, scope: !9094)
!9098 = !DILocation(line: 341, column: 7, scope: !9094)
!9099 = !DILocation(line: 343, column: 11, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !654, line: 343, column: 11)
!9101 = !DILocation(line: 343, column: 23, scope: !9100)
!9102 = !DILocation(line: 343, column: 11, scope: !9094)
!9103 = !DILocation(line: 344, column: 17, scope: !9100)
!9104 = !DILocation(line: 344, column: 21, scope: !9100)
!9105 = !DILocation(line: 344, column: 19, scope: !9100)
!9106 = !DILocation(line: 344, column: 30, scope: !9100)
!9107 = !DILocation(line: 344, column: 52, scope: !9100)
!9108 = !DILocation(line: 344, column: 9, scope: !9100)
!9109 = !DILocation(line: 346, column: 34, scope: !9100)
!9110 = !DILocation(line: 346, column: 46, scope: !9100)
!9111 = !DILocation(line: 346, column: 53, scope: !9100)
!9112 = !DILocation(line: 346, column: 62, scope: !9100)
!9113 = !DILocation(line: 346, column: 17, scope: !9100)
!9114 = !DILocation(line: 346, column: 9, scope: !9100)
!9115 = !DILocation(line: 350, column: 13, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9100, file: !654, line: 348, column: 11)
!9117 = !DILocation(line: 353, column: 17, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9116, file: !654, line: 353, column: 17)
!9119 = !DILocation(line: 353, column: 29, scope: !9118)
!9120 = !DILocation(line: 353, column: 17, scope: !9116)
!9121 = !DILocation(line: 355, column: 29, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9118, file: !654, line: 354, column: 15)
!9123 = !DILocation(line: 356, column: 25, scope: !9122)
!9124 = !DILocation(line: 356, column: 29, scope: !9122)
!9125 = !DILocation(line: 356, column: 27, scope: !9122)
!9126 = !DILocation(line: 356, column: 38, scope: !9122)
!9127 = !DILocation(line: 357, column: 25, scope: !9122)
!9128 = !DILocation(line: 356, column: 17, scope: !9122)
!9129 = !DILocation(line: 358, column: 15, scope: !9122)
!9130 = !DILocation(line: 359, column: 13, scope: !9116)
!9131 = !DILocation(line: 361, column: 30, scope: !9116)
!9132 = !DILocation(line: 361, column: 33, scope: !9116)
!9133 = !DILocation(line: 361, column: 47, scope: !9116)
!9134 = !DILocation(line: 361, column: 13, scope: !9116)
!9135 = !DILocation(line: 362, column: 13, scope: !9116)
!9136 = !DILocation(line: 365, column: 19, scope: !9116)
!9137 = !DILocation(line: 365, column: 13, scope: !9116)
!9138 = !DILocation(line: 366, column: 13, scope: !9116)
!9139 = !DILocation(line: 366, column: 19, scope: !9116)
!9140 = !DILocation(line: 367, column: 13, scope: !9116)
!9141 = !DILocation(line: 370, column: 13, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9094, file: !654, line: 370, column: 11)
!9143 = !DILocation(line: 370, column: 11, scope: !9094)
!9144 = !DILocation(line: 371, column: 9, scope: !9142)
!9145 = !DILocation(line: 373, column: 11, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9094, file: !654, line: 373, column: 11)
!9147 = !DILocation(line: 373, column: 16, scope: !9146)
!9148 = !DILocation(line: 373, column: 11, scope: !9094)
!9149 = !DILocation(line: 375, column: 16, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9146, file: !654, line: 374, column: 9)
!9151 = !DILocation(line: 376, column: 23, scope: !9150)
!9152 = !DILocation(line: 377, column: 9, scope: !9150)
!9153 = !DILocalVariable(name: "flags", scope: !9094, file: !654, line: 378, type: !70)
!9154 = !DILocation(line: 378, column: 16, scope: !9094)
!9155 = !DILocation(line: 378, column: 24, scope: !9094)
!9156 = !DILocation(line: 378, column: 36, scope: !9094)
!9157 = !DILocation(line: 379, column: 32, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9094, file: !654, line: 379, column: 11)
!9159 = !DILocation(line: 379, column: 38, scope: !9158)
!9160 = !DILocation(line: 379, column: 44, scope: !9158)
!9161 = !DILocation(line: 379, column: 48, scope: !9158)
!9162 = !DILocation(line: 379, column: 46, scope: !9158)
!9163 = !DILocation(line: 379, column: 61, scope: !9158)
!9164 = !DILocation(line: 379, column: 11, scope: !9158)
!9165 = !DILocation(line: 379, column: 68, scope: !9158)
!9166 = !DILocation(line: 379, column: 11, scope: !9094)
!9167 = !DILocation(line: 380, column: 9, scope: !9158)
!9168 = !DILocalVariable(name: "e", scope: !9094, file: !654, line: 381, type: !7)
!9169 = !DILocation(line: 381, column: 11, scope: !9094)
!9170 = !DILocation(line: 381, column: 15, scope: !9094)
!9171 = !DILocation(line: 382, column: 11, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9094, file: !654, line: 382, column: 11)
!9173 = !DILocation(line: 382, column: 13, scope: !9172)
!9174 = !DILocation(line: 382, column: 11, scope: !9094)
!9175 = !DILocation(line: 384, column: 15, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !654, line: 384, column: 15)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !654, line: 383, column: 9)
!9178 = !DILocation(line: 384, column: 15, scope: !9177)
!9179 = !DILocation(line: 385, column: 23, scope: !9176)
!9180 = !DILocation(line: 385, column: 13, scope: !9176)
!9181 = !DILocation(line: 386, column: 17, scope: !9177)
!9182 = !DILocation(line: 386, column: 11, scope: !9177)
!9183 = !DILocation(line: 387, column: 19, scope: !9177)
!9184 = !DILocation(line: 387, column: 11, scope: !9177)
!9185 = !DILocation(line: 387, column: 17, scope: !9177)
!9186 = !DILocation(line: 388, column: 11, scope: !9177)
!9187 = distinct !{!9187, !9092, !9188}
!9188 = !DILocation(line: 390, column: 5, scope: !9028)
!9189 = !DILocation(line: 392, column: 7, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9028, file: !654, line: 392, column: 7)
!9191 = !DILocation(line: 392, column: 7, scope: !9028)
!9192 = !DILocation(line: 393, column: 15, scope: !9190)
!9193 = !DILocation(line: 393, column: 5, scope: !9190)
!9194 = !DILocation(line: 394, column: 10, scope: !9028)
!9195 = !DILocation(line: 394, column: 3, scope: !9028)
!9196 = !DILocation(line: 395, column: 1, scope: !9028)
!9197 = distinct !DISubprogram(name: "numbered_backup", scope: !654, file: !654, line: 207, type: !9198, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !650, retainedNodes: !298)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{!653, !7, !209, !55, !55, !627, !9200, !227}
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!9201 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9197, file: !654, line: 207, type: !7)
!9202 = !DILocation(line: 207, column: 22, scope: !9197)
!9203 = !DILocalVariable(name: "buffer", arg: 2, scope: !9197, file: !654, line: 207, type: !209)
!9204 = !DILocation(line: 207, column: 37, scope: !9197)
!9205 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9197, file: !654, line: 207, type: !55)
!9206 = !DILocation(line: 207, column: 52, scope: !9197)
!9207 = !DILocalVariable(name: "filelen", arg: 4, scope: !9197, file: !654, line: 207, type: !55)
!9208 = !DILocation(line: 207, column: 72, scope: !9197)
!9209 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9197, file: !654, line: 208, type: !627)
!9210 = !DILocation(line: 208, column: 28, scope: !9197)
!9211 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9197, file: !654, line: 208, type: !9200)
!9212 = !DILocation(line: 208, column: 47, scope: !9197)
!9213 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9197, file: !654, line: 208, type: !227)
!9214 = !DILocation(line: 208, column: 59, scope: !9197)
!9215 = !DILocalVariable(name: "result", scope: !9197, file: !654, line: 210, type: !653)
!9216 = !DILocation(line: 210, column: 31, scope: !9197)
!9217 = !DILocalVariable(name: "dirp", scope: !9197, file: !654, line: 211, type: !662)
!9218 = !DILocation(line: 211, column: 8, scope: !9197)
!9219 = !DILocation(line: 211, column: 16, scope: !9197)
!9220 = !DILocation(line: 211, column: 15, scope: !9197)
!9221 = !DILocalVariable(name: "dp", scope: !9197, file: !654, line: 212, type: !666)
!9222 = !DILocation(line: 212, column: 18, scope: !9197)
!9223 = !DILocalVariable(name: "buf", scope: !9197, file: !654, line: 213, type: !9)
!9224 = !DILocation(line: 213, column: 9, scope: !9197)
!9225 = !DILocation(line: 213, column: 16, scope: !9197)
!9226 = !DILocation(line: 213, column: 15, scope: !9197)
!9227 = !DILocalVariable(name: "versionlenmax", scope: !9197, file: !654, line: 214, type: !55)
!9228 = !DILocation(line: 214, column: 10, scope: !9197)
!9229 = !DILocalVariable(name: "base", scope: !9197, file: !654, line: 215, type: !9)
!9230 = !DILocation(line: 215, column: 9, scope: !9197)
!9231 = !DILocation(line: 215, column: 16, scope: !9197)
!9232 = !DILocation(line: 215, column: 22, scope: !9197)
!9233 = !DILocation(line: 215, column: 20, scope: !9197)
!9234 = !DILocalVariable(name: "baselen", scope: !9197, file: !654, line: 216, type: !55)
!9235 = !DILocation(line: 216, column: 10, scope: !9197)
!9236 = !DILocation(line: 216, column: 30, scope: !9197)
!9237 = !DILocation(line: 216, column: 20, scope: !9197)
!9238 = !DILocation(line: 218, column: 7, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9197, file: !654, line: 218, column: 7)
!9240 = !DILocation(line: 218, column: 7, scope: !9197)
!9241 = !DILocation(line: 219, column: 16, scope: !9239)
!9242 = !DILocation(line: 219, column: 5, scope: !9239)
!9243 = !DILocalVariable(name: "tmp", scope: !9244, file: !654, line: 224, type: !379)
!9244 = distinct !DILexicalBlock(scope: !9239, file: !654, line: 221, column: 5)
!9245 = !DILocation(line: 224, column: 12, scope: !9244)
!9246 = !DILocation(line: 225, column: 7, scope: !9244)
!9247 = !DILocation(line: 225, column: 20, scope: !9244)
!9248 = !DILocation(line: 226, column: 15, scope: !9244)
!9249 = !DILocation(line: 226, column: 7, scope: !9244)
!9250 = !DILocation(line: 227, column: 25, scope: !9244)
!9251 = !DILocation(line: 227, column: 33, scope: !9244)
!9252 = !DILocation(line: 227, column: 41, scope: !9244)
!9253 = !DILocation(line: 227, column: 14, scope: !9244)
!9254 = !DILocation(line: 227, column: 12, scope: !9244)
!9255 = !DILocation(line: 228, column: 12, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9244, file: !654, line: 228, column: 11)
!9257 = !DILocation(line: 228, column: 17, scope: !9256)
!9258 = !DILocation(line: 228, column: 20, scope: !9256)
!9259 = !DILocation(line: 228, column: 26, scope: !9256)
!9260 = !DILocation(line: 228, column: 11, scope: !9244)
!9261 = !DILocation(line: 229, column: 16, scope: !9256)
!9262 = !DILocation(line: 229, column: 9, scope: !9256)
!9263 = !DILocation(line: 230, column: 15, scope: !9244)
!9264 = !DILocation(line: 230, column: 7, scope: !9244)
!9265 = !DILocation(line: 231, column: 15, scope: !9244)
!9266 = !DILocation(line: 231, column: 22, scope: !9244)
!9267 = !DILocation(line: 231, column: 20, scope: !9244)
!9268 = !DILocation(line: 231, column: 7, scope: !9244)
!9269 = !DILocation(line: 232, column: 12, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9244, file: !654, line: 232, column: 11)
!9271 = !DILocation(line: 232, column: 11, scope: !9244)
!9272 = !DILocation(line: 233, column: 16, scope: !9270)
!9273 = !DILocation(line: 233, column: 9, scope: !9270)
!9274 = !DILocation(line: 234, column: 16, scope: !9244)
!9275 = !DILocation(line: 234, column: 8, scope: !9244)
!9276 = !DILocation(line: 234, column: 14, scope: !9244)
!9277 = !DILocation(line: 237, column: 3, scope: !9197)
!9278 = !DILocation(line: 237, column: 25, scope: !9197)
!9279 = !DILocation(line: 237, column: 16, scope: !9197)
!9280 = !DILocation(line: 237, column: 14, scope: !9197)
!9281 = !DILocation(line: 237, column: 32, scope: !9197)
!9282 = !DILocalVariable(name: "p", scope: !9283, file: !654, line: 239, type: !183)
!9283 = distinct !DILexicalBlock(scope: !9197, file: !654, line: 238, column: 5)
!9284 = !DILocation(line: 239, column: 19, scope: !9283)
!9285 = !DILocalVariable(name: "q", scope: !9283, file: !654, line: 240, type: !9)
!9286 = !DILocation(line: 240, column: 13, scope: !9283)
!9287 = !DILocalVariable(name: "all_9s", scope: !9283, file: !654, line: 241, type: !142)
!9288 = !DILocation(line: 241, column: 12, scope: !9283)
!9289 = !DILocalVariable(name: "versionlen", scope: !9283, file: !654, line: 242, type: !55)
!9290 = !DILocation(line: 242, column: 14, scope: !9283)
!9291 = !DILocation(line: 244, column: 11, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 244, column: 11)
!9293 = !DILocation(line: 244, column: 34, scope: !9292)
!9294 = !DILocation(line: 244, column: 42, scope: !9292)
!9295 = !DILocation(line: 244, column: 32, scope: !9292)
!9296 = !DILocation(line: 244, column: 11, scope: !9283)
!9297 = !DILocation(line: 245, column: 9, scope: !9292)
!9298 = distinct !{!9298, !9277, !9299}
!9299 = !DILocation(line: 301, column: 5, scope: !9197)
!9300 = !DILocation(line: 247, column: 19, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 247, column: 11)
!9302 = !DILocation(line: 247, column: 25, scope: !9301)
!9303 = !DILocation(line: 247, column: 23, scope: !9301)
!9304 = !DILocation(line: 247, column: 38, scope: !9301)
!9305 = !DILocation(line: 247, column: 42, scope: !9301)
!9306 = !DILocation(line: 247, column: 50, scope: !9301)
!9307 = !DILocation(line: 247, column: 58, scope: !9301)
!9308 = !DILocation(line: 247, column: 11, scope: !9301)
!9309 = !DILocation(line: 247, column: 63, scope: !9301)
!9310 = !DILocation(line: 247, column: 11, scope: !9283)
!9311 = !DILocation(line: 248, column: 9, scope: !9301)
!9312 = !DILocation(line: 250, column: 11, scope: !9283)
!9313 = !DILocation(line: 250, column: 15, scope: !9283)
!9314 = !DILocation(line: 250, column: 24, scope: !9283)
!9315 = !DILocation(line: 250, column: 22, scope: !9283)
!9316 = !DILocation(line: 250, column: 32, scope: !9283)
!9317 = !DILocation(line: 250, column: 9, scope: !9283)
!9318 = !DILocation(line: 256, column: 22, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 256, column: 11)
!9320 = !DILocation(line: 256, column: 21, scope: !9319)
!9321 = !DILocation(line: 256, column: 18, scope: !9319)
!9322 = !DILocation(line: 256, column: 24, scope: !9319)
!9323 = !DILocation(line: 256, column: 28, scope: !9319)
!9324 = !DILocation(line: 256, column: 27, scope: !9319)
!9325 = !DILocation(line: 256, column: 30, scope: !9319)
!9326 = !DILocation(line: 256, column: 11, scope: !9283)
!9327 = !DILocation(line: 257, column: 9, scope: !9319)
!9328 = !DILocation(line: 258, column: 18, scope: !9283)
!9329 = !DILocation(line: 258, column: 17, scope: !9283)
!9330 = !DILocation(line: 258, column: 20, scope: !9283)
!9331 = !DILocation(line: 258, column: 14, scope: !9283)
!9332 = !DILocation(line: 259, column: 23, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 259, column: 7)
!9334 = !DILocation(line: 259, column: 12, scope: !9333)
!9335 = !DILocation(line: 259, column: 28, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !654, line: 259, column: 7)
!9337 = !DILocation(line: 259, column: 7, scope: !9333)
!9338 = !DILocation(line: 260, column: 20, scope: !9336)
!9339 = !DILocation(line: 260, column: 22, scope: !9336)
!9340 = !DILocation(line: 260, column: 34, scope: !9336)
!9341 = !DILocation(line: 260, column: 16, scope: !9336)
!9342 = !DILocation(line: 260, column: 9, scope: !9336)
!9343 = !DILocation(line: 259, column: 63, scope: !9336)
!9344 = !DILocation(line: 259, column: 7, scope: !9336)
!9345 = distinct !{!9345, !9337, !9346}
!9346 = !DILocation(line: 260, column: 40, scope: !9333)
!9347 = !DILocation(line: 262, column: 14, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 262, column: 11)
!9349 = !DILocation(line: 262, column: 16, scope: !9348)
!9350 = !DILocation(line: 262, column: 28, scope: !9348)
!9351 = !DILocation(line: 262, column: 35, scope: !9348)
!9352 = !DILocation(line: 262, column: 39, scope: !9348)
!9353 = !DILocation(line: 262, column: 41, scope: !9348)
!9354 = !DILocation(line: 262, column: 52, scope: !9348)
!9355 = !DILocation(line: 263, column: 14, scope: !9348)
!9356 = !DILocation(line: 263, column: 18, scope: !9348)
!9357 = !DILocation(line: 263, column: 34, scope: !9348)
!9358 = !DILocation(line: 263, column: 32, scope: !9348)
!9359 = !DILocation(line: 264, column: 18, scope: !9348)
!9360 = !DILocation(line: 264, column: 22, scope: !9348)
!9361 = !DILocation(line: 264, column: 39, scope: !9348)
!9362 = !DILocation(line: 264, column: 36, scope: !9348)
!9363 = !DILocation(line: 265, column: 22, scope: !9348)
!9364 = !DILocation(line: 265, column: 33, scope: !9348)
!9365 = !DILocation(line: 265, column: 39, scope: !9348)
!9366 = !DILocation(line: 265, column: 37, scope: !9348)
!9367 = !DILocation(line: 265, column: 47, scope: !9348)
!9368 = !DILocation(line: 265, column: 52, scope: !9348)
!9369 = !DILocation(line: 265, column: 55, scope: !9348)
!9370 = !DILocation(line: 265, column: 25, scope: !9348)
!9371 = !DILocation(line: 265, column: 67, scope: !9348)
!9372 = !DILocation(line: 262, column: 11, scope: !9283)
!9373 = !DILocation(line: 266, column: 9, scope: !9348)
!9374 = !DILocation(line: 272, column: 23, scope: !9283)
!9375 = !DILocation(line: 272, column: 32, scope: !9283)
!9376 = !DILocation(line: 272, column: 30, scope: !9283)
!9377 = !DILocation(line: 272, column: 21, scope: !9283)
!9378 = !DILocation(line: 273, column: 17, scope: !9283)
!9379 = !DILocation(line: 273, column: 14, scope: !9283)
!9380 = !DILocalVariable(name: "new_buffer_size", scope: !9283, file: !654, line: 274, type: !55)
!9381 = !DILocation(line: 274, column: 14, scope: !9283)
!9382 = !DILocation(line: 274, column: 32, scope: !9283)
!9383 = !DILocation(line: 274, column: 40, scope: !9283)
!9384 = !DILocation(line: 274, column: 46, scope: !9283)
!9385 = !DILocation(line: 274, column: 44, scope: !9283)
!9386 = !DILocation(line: 274, column: 60, scope: !9283)
!9387 = !DILocation(line: 275, column: 11, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9283, file: !654, line: 275, column: 11)
!9389 = !DILocation(line: 275, column: 25, scope: !9388)
!9390 = !DILocation(line: 275, column: 23, scope: !9388)
!9391 = !DILocation(line: 275, column: 11, scope: !9283)
!9392 = !DILocation(line: 277, column: 17, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !654, line: 277, column: 15)
!9394 = distinct !DILexicalBlock(scope: !9388, file: !654, line: 276, column: 9)
!9395 = !DILocation(line: 277, column: 15, scope: !9394)
!9396 = !DILocation(line: 278, column: 29, scope: !9393)
!9397 = !DILocation(line: 278, column: 13, scope: !9393)
!9398 = !DILocalVariable(name: "new_buf", scope: !9394, file: !654, line: 279, type: !9)
!9399 = !DILocation(line: 279, column: 17, scope: !9394)
!9400 = !DILocation(line: 279, column: 36, scope: !9394)
!9401 = !DILocation(line: 279, column: 41, scope: !9394)
!9402 = !DILocation(line: 279, column: 27, scope: !9394)
!9403 = !DILocation(line: 280, column: 16, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9394, file: !654, line: 280, column: 15)
!9405 = !DILocation(line: 280, column: 15, scope: !9394)
!9406 = !DILocation(line: 282, column: 25, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9404, file: !654, line: 281, column: 13)
!9408 = !DILocation(line: 282, column: 16, scope: !9407)
!9409 = !DILocation(line: 282, column: 23, scope: !9407)
!9410 = !DILocation(line: 283, column: 15, scope: !9407)
!9411 = !DILocation(line: 285, column: 17, scope: !9394)
!9412 = !DILocation(line: 285, column: 15, scope: !9394)
!9413 = !DILocation(line: 286, column: 25, scope: !9394)
!9414 = !DILocation(line: 286, column: 23, scope: !9394)
!9415 = !DILocation(line: 287, column: 9, scope: !9394)
!9416 = !DILocation(line: 288, column: 11, scope: !9283)
!9417 = !DILocation(line: 288, column: 17, scope: !9283)
!9418 = !DILocation(line: 288, column: 15, scope: !9283)
!9419 = !DILocation(line: 288, column: 9, scope: !9283)
!9420 = !DILocation(line: 289, column: 9, scope: !9283)
!9421 = !DILocation(line: 289, column: 12, scope: !9283)
!9422 = !DILocation(line: 290, column: 9, scope: !9283)
!9423 = !DILocation(line: 290, column: 12, scope: !9283)
!9424 = !DILocation(line: 291, column: 8, scope: !9283)
!9425 = !DILocation(line: 291, column: 10, scope: !9283)
!9426 = !DILocation(line: 292, column: 12, scope: !9283)
!9427 = !DILocation(line: 292, column: 9, scope: !9283)
!9428 = !DILocation(line: 293, column: 15, scope: !9283)
!9429 = !DILocation(line: 293, column: 18, scope: !9283)
!9430 = !DILocation(line: 293, column: 21, scope: !9283)
!9431 = !DILocation(line: 293, column: 32, scope: !9283)
!9432 = !DILocation(line: 293, column: 7, scope: !9283)
!9433 = !DILocation(line: 297, column: 12, scope: !9283)
!9434 = !DILocation(line: 297, column: 9, scope: !9283)
!9435 = !DILocation(line: 298, column: 7, scope: !9283)
!9436 = !DILocation(line: 298, column: 15, scope: !9283)
!9437 = !DILocation(line: 298, column: 14, scope: !9283)
!9438 = !DILocation(line: 298, column: 19, scope: !9283)
!9439 = !DILocation(line: 299, column: 10, scope: !9283)
!9440 = !DILocation(line: 299, column: 12, scope: !9283)
!9441 = distinct !{!9441, !9435, !9442}
!9442 = !DILocation(line: 299, column: 14, scope: !9283)
!9443 = !DILocation(line: 300, column: 10, scope: !9283)
!9444 = !DILocation(line: 300, column: 7, scope: !9283)
!9445 = !DILocation(line: 303, column: 13, scope: !9197)
!9446 = !DILocation(line: 303, column: 4, scope: !9197)
!9447 = !DILocation(line: 303, column: 11, scope: !9197)
!9448 = !DILocation(line: 304, column: 10, scope: !9197)
!9449 = !DILocation(line: 304, column: 3, scope: !9197)
!9450 = !DILocation(line: 305, column: 1, scope: !9197)
!9451 = distinct !DISubprogram(name: "check_extension", scope: !654, file: !654, line: 105, type: !9452, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !650, retainedNodes: !298)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !9, !55, !10, !7, !9454}
!9454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!9455 = !DILocalVariable(name: "file", arg: 1, scope: !9451, file: !654, line: 105, type: !9)
!9456 = !DILocation(line: 105, column: 24, scope: !9451)
!9457 = !DILocalVariable(name: "filelen", arg: 2, scope: !9451, file: !654, line: 105, type: !55)
!9458 = !DILocation(line: 105, column: 37, scope: !9451)
!9459 = !DILocalVariable(name: "e", arg: 3, scope: !9451, file: !654, line: 105, type: !10)
!9460 = !DILocation(line: 105, column: 51, scope: !9451)
!9461 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !9451, file: !654, line: 106, type: !7)
!9462 = !DILocation(line: 106, column: 22, scope: !9451)
!9463 = !DILocalVariable(name: "base_max", arg: 5, scope: !9451, file: !654, line: 106, type: !9454)
!9464 = !DILocation(line: 106, column: 38, scope: !9451)
!9465 = !DILocalVariable(name: "base", scope: !9451, file: !654, line: 108, type: !9)
!9466 = !DILocation(line: 108, column: 9, scope: !9451)
!9467 = !DILocation(line: 108, column: 32, scope: !9451)
!9468 = !DILocation(line: 108, column: 16, scope: !9451)
!9469 = !DILocalVariable(name: "baselen", scope: !9451, file: !654, line: 109, type: !55)
!9470 = !DILocation(line: 109, column: 10, scope: !9451)
!9471 = !DILocation(line: 109, column: 30, scope: !9451)
!9472 = !DILocation(line: 109, column: 20, scope: !9451)
!9473 = !DILocalVariable(name: "baselen_max", scope: !9451, file: !654, line: 110, type: !55)
!9474 = !DILocation(line: 110, column: 10, scope: !9451)
!9475 = !DILocation(line: 112, column: 49, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9451, file: !654, line: 112, column: 7)
!9477 = !DILocation(line: 112, column: 47, scope: !9476)
!9478 = !DILocation(line: 112, column: 7, scope: !9451)
!9479 = !DILocation(line: 115, column: 12, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9481, file: !654, line: 115, column: 11)
!9481 = distinct !DILexicalBlock(scope: !9476, file: !654, line: 113, column: 5)
!9482 = !DILocation(line: 115, column: 11, scope: !9480)
!9483 = !DILocation(line: 115, column: 21, scope: !9480)
!9484 = !DILocation(line: 115, column: 11, scope: !9481)
!9485 = !DILocalVariable(name: "name_max", scope: !9486, file: !654, line: 117, type: !31)
!9486 = distinct !DILexicalBlock(scope: !9480, file: !654, line: 116, column: 9)
!9487 = !DILocation(line: 117, column: 16, scope: !9486)
!9488 = !DILocation(line: 118, column: 15, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9486, file: !654, line: 118, column: 15)
!9490 = !DILocation(line: 118, column: 22, scope: !9489)
!9491 = !DILocation(line: 118, column: 15, scope: !9486)
!9492 = !DILocalVariable(name: "tmp", scope: !9493, file: !654, line: 123, type: !379)
!9493 = distinct !DILexicalBlock(scope: !9489, file: !654, line: 119, column: 13)
!9494 = !DILocation(line: 123, column: 20, scope: !9493)
!9495 = !DILocation(line: 124, column: 15, scope: !9493)
!9496 = !DILocation(line: 124, column: 28, scope: !9493)
!9497 = !DILocation(line: 125, column: 23, scope: !9493)
!9498 = !DILocation(line: 125, column: 15, scope: !9493)
!9499 = !DILocation(line: 126, column: 15, scope: !9493)
!9500 = !DILocation(line: 126, column: 21, scope: !9493)
!9501 = !DILocation(line: 127, column: 36, scope: !9493)
!9502 = !DILocation(line: 127, column: 26, scope: !9493)
!9503 = !DILocation(line: 127, column: 24, scope: !9493)
!9504 = !DILocation(line: 128, column: 28, scope: !9493)
!9505 = !DILocation(line: 128, column: 27, scope: !9493)
!9506 = !DILocation(line: 128, column: 24, scope: !9493)
!9507 = !DILocation(line: 129, column: 23, scope: !9493)
!9508 = !DILocation(line: 129, column: 15, scope: !9493)
!9509 = !DILocation(line: 130, column: 13, scope: !9493)
!9510 = !DILocation(line: 133, column: 15, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9489, file: !654, line: 132, column: 13)
!9512 = !DILocation(line: 133, column: 21, scope: !9511)
!9513 = !DILocation(line: 134, column: 37, scope: !9511)
!9514 = !DILocation(line: 134, column: 26, scope: !9511)
!9515 = !DILocation(line: 134, column: 24, scope: !9511)
!9516 = !DILocation(line: 135, column: 28, scope: !9511)
!9517 = !DILocation(line: 135, column: 27, scope: !9511)
!9518 = !DILocation(line: 135, column: 24, scope: !9511)
!9519 = !DILocation(line: 138, column: 29, scope: !9486)
!9520 = !DILocation(line: 138, column: 26, scope: !9486)
!9521 = !DILocation(line: 138, column: 38, scope: !9486)
!9522 = !DILocation(line: 138, column: 41, scope: !9486)
!9523 = !DILocation(line: 138, column: 50, scope: !9486)
!9524 = !DILocation(line: 138, column: 24, scope: !9486)
!9525 = !DILocation(line: 138, column: 64, scope: !9486)
!9526 = !DILocation(line: 139, column: 26, scope: !9486)
!9527 = !DILocation(line: 139, column: 35, scope: !9486)
!9528 = !DILocation(line: 138, column: 12, scope: !9486)
!9529 = !DILocation(line: 138, column: 21, scope: !9486)
!9530 = !DILocation(line: 140, column: 9, scope: !9486)
!9531 = !DILocation(line: 142, column: 22, scope: !9481)
!9532 = !DILocation(line: 142, column: 21, scope: !9481)
!9533 = !DILocation(line: 142, column: 19, scope: !9481)
!9534 = !DILocation(line: 143, column: 5, scope: !9481)
!9535 = !DILocation(line: 160, column: 7, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9451, file: !654, line: 160, column: 7)
!9537 = !DILocation(line: 160, column: 21, scope: !9536)
!9538 = !DILocation(line: 160, column: 19, scope: !9536)
!9539 = !DILocation(line: 160, column: 7, scope: !9451)
!9540 = !DILocation(line: 162, column: 17, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !654, line: 161, column: 5)
!9542 = !DILocation(line: 162, column: 24, scope: !9541)
!9543 = !DILocation(line: 162, column: 22, scope: !9541)
!9544 = !DILocation(line: 162, column: 34, scope: !9541)
!9545 = !DILocation(line: 162, column: 32, scope: !9541)
!9546 = !DILocation(line: 162, column: 15, scope: !9541)
!9547 = !DILocation(line: 163, column: 11, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9541, file: !654, line: 163, column: 11)
!9549 = !DILocation(line: 163, column: 26, scope: !9548)
!9550 = !DILocation(line: 163, column: 23, scope: !9548)
!9551 = !DILocation(line: 163, column: 11, scope: !9541)
!9552 = !DILocation(line: 164, column: 19, scope: !9548)
!9553 = !DILocation(line: 164, column: 31, scope: !9548)
!9554 = !DILocation(line: 164, column: 17, scope: !9548)
!9555 = !DILocation(line: 164, column: 9, scope: !9548)
!9556 = !DILocation(line: 165, column: 23, scope: !9541)
!9557 = !DILocation(line: 165, column: 7, scope: !9541)
!9558 = !DILocation(line: 165, column: 12, scope: !9541)
!9559 = !DILocation(line: 165, column: 21, scope: !9541)
!9560 = !DILocation(line: 166, column: 7, scope: !9541)
!9561 = !DILocation(line: 166, column: 12, scope: !9541)
!9562 = !DILocation(line: 166, column: 20, scope: !9541)
!9563 = !DILocation(line: 166, column: 25, scope: !9541)
!9564 = !DILocation(line: 167, column: 5, scope: !9541)
!9565 = !DILocation(line: 168, column: 1, scope: !9451)
!9566 = distinct !DISubprogram(name: "backup_file_rename", scope: !9567, file: !9567, line: 28, type: !9568, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1242, retainedNodes: !298)
!9567 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!9, !7, !183, !68}
!9570 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9566, file: !9567, line: 28, type: !7)
!9571 = !DILocation(line: 28, column: 25, scope: !9566)
!9572 = !DILocalVariable(name: "file", arg: 2, scope: !9566, file: !9567, line: 28, type: !183)
!9573 = !DILocation(line: 28, column: 45, scope: !9566)
!9574 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9566, file: !9567, line: 28, type: !68)
!9575 = !DILocation(line: 28, column: 68, scope: !9566)
!9576 = !DILocation(line: 30, column: 31, scope: !9566)
!9577 = !DILocation(line: 30, column: 39, scope: !9566)
!9578 = !DILocation(line: 30, column: 45, scope: !9566)
!9579 = !DILocation(line: 30, column: 10, scope: !9566)
!9580 = !DILocation(line: 30, column: 3, scope: !9566)
!9581 = distinct !DISubprogram(name: "find_backup_file_name", scope: !697, file: !697, line: 33, type: !9568, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !298)
!9582 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9581, file: !697, line: 33, type: !7)
!9583 = !DILocation(line: 33, column: 28, scope: !9581)
!9584 = !DILocalVariable(name: "file", arg: 2, scope: !9581, file: !697, line: 33, type: !183)
!9585 = !DILocation(line: 33, column: 48, scope: !9581)
!9586 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9581, file: !697, line: 34, type: !68)
!9587 = !DILocation(line: 34, column: 41, scope: !9581)
!9588 = !DILocalVariable(name: "result", scope: !9581, file: !697, line: 36, type: !9)
!9589 = !DILocation(line: 36, column: 9, scope: !9581)
!9590 = !DILocation(line: 36, column: 39, scope: !9581)
!9591 = !DILocation(line: 36, column: 47, scope: !9581)
!9592 = !DILocation(line: 36, column: 53, scope: !9581)
!9593 = !DILocation(line: 36, column: 18, scope: !9581)
!9594 = !DILocation(line: 37, column: 8, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9581, file: !697, line: 37, column: 7)
!9596 = !DILocation(line: 37, column: 7, scope: !9581)
!9597 = !DILocation(line: 38, column: 5, scope: !9595)
!9598 = !DILocation(line: 39, column: 10, scope: !9581)
!9599 = !DILocation(line: 39, column: 3, scope: !9581)
!9600 = distinct !DISubprogram(name: "get_version", scope: !697, file: !697, line: 71, type: !9601, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !298)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{!68, !183, !183}
!9603 = !DILocalVariable(name: "context", arg: 1, scope: !9600, file: !697, line: 71, type: !183)
!9604 = !DILocation(line: 71, column: 26, scope: !9600)
!9605 = !DILocalVariable(name: "version", arg: 2, scope: !9600, file: !697, line: 71, type: !183)
!9606 = !DILocation(line: 71, column: 47, scope: !9600)
!9607 = !DILocation(line: 73, column: 7, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9600, file: !697, line: 73, column: 7)
!9609 = !DILocation(line: 73, column: 15, scope: !9608)
!9610 = !DILocation(line: 73, column: 20, scope: !9608)
!9611 = !DILocation(line: 73, column: 24, scope: !9608)
!9612 = !DILocation(line: 73, column: 23, scope: !9608)
!9613 = !DILocation(line: 73, column: 32, scope: !9608)
!9614 = !DILocation(line: 73, column: 7, scope: !9600)
!9615 = !DILocation(line: 74, column: 5, scope: !9608)
!9616 = !DILocation(line: 76, column: 12, scope: !9608)
!9617 = !DILocation(line: 76, column: 5, scope: !9608)
!9618 = !DILocation(line: 77, column: 1, scope: !9600)
!9619 = distinct !DISubprogram(name: "xget_version", scope: !697, file: !697, line: 87, type: !9601, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !298)
!9620 = !DILocalVariable(name: "context", arg: 1, scope: !9619, file: !697, line: 87, type: !183)
!9621 = !DILocation(line: 87, column: 27, scope: !9619)
!9622 = !DILocalVariable(name: "version", arg: 2, scope: !9619, file: !697, line: 87, type: !183)
!9623 = !DILocation(line: 87, column: 48, scope: !9619)
!9624 = !DILocation(line: 89, column: 7, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9619, file: !697, line: 89, column: 7)
!9626 = !DILocation(line: 89, column: 15, scope: !9625)
!9627 = !DILocation(line: 89, column: 19, scope: !9625)
!9628 = !DILocation(line: 89, column: 18, scope: !9625)
!9629 = !DILocation(line: 89, column: 7, scope: !9619)
!9630 = !DILocation(line: 90, column: 25, scope: !9625)
!9631 = !DILocation(line: 90, column: 34, scope: !9625)
!9632 = !DILocation(line: 90, column: 12, scope: !9625)
!9633 = !DILocation(line: 90, column: 5, scope: !9625)
!9634 = !DILocation(line: 92, column: 45, scope: !9625)
!9635 = !DILocation(line: 92, column: 12, scope: !9625)
!9636 = !DILocation(line: 92, column: 5, scope: !9625)
!9637 = !DILocation(line: 93, column: 1, scope: !9619)
!9638 = distinct !DISubprogram(name: "buffer_lcm", scope: !9639, file: !9639, line: 28, type: !9640, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !298)
!9639 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9640 = !DISubroutineType(types: !9641)
!9641 = !{!55, !55, !55, !55}
!9642 = !DILocalVariable(name: "a", arg: 1, scope: !9638, file: !9639, line: 28, type: !55)
!9643 = !DILocation(line: 28, column: 20, scope: !9638)
!9644 = !DILocalVariable(name: "b", arg: 2, scope: !9638, file: !9639, line: 28, type: !55)
!9645 = !DILocation(line: 28, column: 30, scope: !9638)
!9646 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !9638, file: !9639, line: 28, type: !55)
!9647 = !DILocation(line: 28, column: 40, scope: !9638)
!9648 = !DILocalVariable(name: "size", scope: !9638, file: !9639, line: 30, type: !55)
!9649 = !DILocation(line: 30, column: 10, scope: !9638)
!9650 = !DILocation(line: 33, column: 8, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9638, file: !9639, line: 33, column: 7)
!9652 = !DILocation(line: 33, column: 7, scope: !9638)
!9653 = !DILocation(line: 34, column: 12, scope: !9651)
!9654 = !DILocation(line: 34, column: 16, scope: !9651)
!9655 = !DILocation(line: 34, column: 10, scope: !9651)
!9656 = !DILocation(line: 34, column: 5, scope: !9651)
!9657 = !DILocation(line: 37, column: 11, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !9639, line: 37, column: 11)
!9659 = distinct !DILexicalBlock(scope: !9651, file: !9639, line: 36, column: 5)
!9660 = !DILocation(line: 37, column: 11, scope: !9659)
!9661 = !DILocalVariable(name: "lcm", scope: !9662, file: !9639, line: 42, type: !55)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !9639, line: 38, column: 9)
!9663 = !DILocation(line: 42, column: 18, scope: !9662)
!9664 = !DILocalVariable(name: "m", scope: !9662, file: !9639, line: 42, type: !55)
!9665 = !DILocation(line: 42, column: 23, scope: !9662)
!9666 = !DILocalVariable(name: "n", scope: !9662, file: !9639, line: 42, type: !55)
!9667 = !DILocation(line: 42, column: 26, scope: !9662)
!9668 = !DILocalVariable(name: "q", scope: !9662, file: !9639, line: 42, type: !55)
!9669 = !DILocation(line: 42, column: 29, scope: !9662)
!9670 = !DILocalVariable(name: "r", scope: !9662, file: !9639, line: 42, type: !55)
!9671 = !DILocation(line: 42, column: 32, scope: !9662)
!9672 = !DILocation(line: 45, column: 20, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9662, file: !9639, line: 45, column: 11)
!9674 = !DILocation(line: 45, column: 18, scope: !9673)
!9675 = !DILocation(line: 45, column: 27, scope: !9673)
!9676 = !DILocation(line: 45, column: 25, scope: !9673)
!9677 = !DILocation(line: 45, column: 16, scope: !9673)
!9678 = !DILocation(line: 45, column: 36, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9673, file: !9639, line: 45, column: 11)
!9680 = !DILocation(line: 45, column: 40, scope: !9679)
!9681 = !DILocation(line: 45, column: 38, scope: !9679)
!9682 = !DILocation(line: 45, column: 34, scope: !9679)
!9683 = !DILocation(line: 45, column: 43, scope: !9679)
!9684 = !DILocation(line: 45, column: 11, scope: !9673)
!9685 = !DILocation(line: 46, column: 13, scope: !9679)
!9686 = !DILocation(line: 45, column: 54, scope: !9679)
!9687 = !DILocation(line: 45, column: 52, scope: !9679)
!9688 = !DILocation(line: 45, column: 61, scope: !9679)
!9689 = !DILocation(line: 45, column: 59, scope: !9679)
!9690 = !DILocation(line: 45, column: 11, scope: !9679)
!9691 = distinct !{!9691, !9684, !9692}
!9692 = !DILocation(line: 46, column: 13, scope: !9673)
!9693 = !DILocation(line: 49, column: 15, scope: !9662)
!9694 = !DILocation(line: 49, column: 19, scope: !9662)
!9695 = !DILocation(line: 49, column: 17, scope: !9662)
!9696 = !DILocation(line: 49, column: 13, scope: !9662)
!9697 = !DILocation(line: 50, column: 17, scope: !9662)
!9698 = !DILocation(line: 50, column: 21, scope: !9662)
!9699 = !DILocation(line: 50, column: 19, scope: !9662)
!9700 = !DILocation(line: 50, column: 15, scope: !9662)
!9701 = !DILocation(line: 51, column: 15, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9662, file: !9639, line: 51, column: 15)
!9703 = !DILocation(line: 51, column: 22, scope: !9702)
!9704 = !DILocation(line: 51, column: 19, scope: !9702)
!9705 = !DILocation(line: 51, column: 30, scope: !9702)
!9706 = !DILocation(line: 51, column: 33, scope: !9702)
!9707 = !DILocation(line: 51, column: 39, scope: !9702)
!9708 = !DILocation(line: 51, column: 37, scope: !9702)
!9709 = !DILocation(line: 51, column: 44, scope: !9702)
!9710 = !DILocation(line: 51, column: 41, scope: !9702)
!9711 = !DILocation(line: 51, column: 15, scope: !9662)
!9712 = !DILocation(line: 52, column: 20, scope: !9702)
!9713 = !DILocation(line: 52, column: 13, scope: !9702)
!9714 = !DILocation(line: 53, column: 9, scope: !9662)
!9715 = !DILocation(line: 55, column: 14, scope: !9659)
!9716 = !DILocation(line: 55, column: 12, scope: !9659)
!9717 = !DILocation(line: 58, column: 10, scope: !9638)
!9718 = !DILocation(line: 58, column: 18, scope: !9638)
!9719 = !DILocation(line: 58, column: 15, scope: !9638)
!9720 = !DILocation(line: 58, column: 28, scope: !9638)
!9721 = !DILocation(line: 58, column: 35, scope: !9638)
!9722 = !DILocation(line: 58, column: 3, scope: !9638)
!9723 = !DILocation(line: 59, column: 1, scope: !9638)
!9724 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !741, file: !741, line: 43, type: !296, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !700, retainedNodes: !298)
!9725 = !DILocalVariable(name: "file", arg: 1, scope: !9724, file: !741, line: 43, type: !183)
!9726 = !DILocation(line: 43, column: 40, scope: !9724)
!9727 = !DILocation(line: 45, column: 15, scope: !9724)
!9728 = !DILocation(line: 45, column: 13, scope: !9724)
!9729 = !DILocation(line: 46, column: 1, scope: !9724)
!9730 = distinct !DISubprogram(name: "close_stdin", scope: !741, file: !741, line: 79, type: !692, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !700, retainedNodes: !298)
!9731 = !DILocalVariable(name: "fail", scope: !9730, file: !741, line: 81, type: !142)
!9732 = !DILocation(line: 81, column: 8, scope: !9730)
!9733 = !DILocation(line: 87, column: 19, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9730, file: !741, line: 87, column: 7)
!9735 = !DILocation(line: 87, column: 7, scope: !9734)
!9736 = !DILocation(line: 87, column: 26, scope: !9734)
!9737 = !DILocation(line: 87, column: 7, scope: !9730)
!9738 = !DILocation(line: 91, column: 19, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !741, line: 91, column: 11)
!9740 = distinct !DILexicalBlock(scope: !9734, file: !741, line: 88, column: 5)
!9741 = !DILocation(line: 91, column: 11, scope: !9739)
!9742 = !DILocation(line: 91, column: 39, scope: !9739)
!9743 = !DILocation(line: 91, column: 44, scope: !9739)
!9744 = !DILocation(line: 91, column: 55, scope: !9739)
!9745 = !DILocation(line: 91, column: 47, scope: !9739)
!9746 = !DILocation(line: 91, column: 62, scope: !9739)
!9747 = !DILocation(line: 91, column: 11, scope: !9740)
!9748 = !DILocation(line: 92, column: 14, scope: !9739)
!9749 = !DILocation(line: 92, column: 9, scope: !9739)
!9750 = !DILocation(line: 93, column: 5, scope: !9740)
!9751 = !DILocation(line: 94, column: 21, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9730, file: !741, line: 94, column: 7)
!9753 = !DILocation(line: 94, column: 7, scope: !9752)
!9754 = !DILocation(line: 94, column: 28, scope: !9752)
!9755 = !DILocation(line: 94, column: 7, scope: !9730)
!9756 = !DILocation(line: 95, column: 10, scope: !9752)
!9757 = !DILocation(line: 95, column: 5, scope: !9752)
!9758 = !DILocation(line: 96, column: 7, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9730, file: !741, line: 96, column: 7)
!9760 = !DILocation(line: 96, column: 7, scope: !9730)
!9761 = !DILocalVariable(name: "close_error", scope: !9762, file: !741, line: 100, type: !183)
!9762 = distinct !DILexicalBlock(scope: !9759, file: !741, line: 97, column: 5)
!9763 = !DILocation(line: 100, column: 19, scope: !9762)
!9764 = !DILocation(line: 100, column: 33, scope: !9762)
!9765 = !DILocation(line: 101, column: 11, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9762, file: !741, line: 101, column: 11)
!9767 = !DILocation(line: 101, column: 11, scope: !9762)
!9768 = !DILocation(line: 102, column: 19, scope: !9766)
!9769 = !DILocation(line: 102, column: 52, scope: !9766)
!9770 = !DILocation(line: 102, column: 36, scope: !9766)
!9771 = !DILocation(line: 103, column: 16, scope: !9766)
!9772 = !DILocation(line: 102, column: 9, scope: !9766)
!9773 = !DILocation(line: 105, column: 19, scope: !9766)
!9774 = !DILocation(line: 105, column: 32, scope: !9766)
!9775 = !DILocation(line: 105, column: 9, scope: !9766)
!9776 = !DILocation(line: 106, column: 5, scope: !9762)
!9777 = !DILocation(line: 108, column: 3, scope: !9730)
!9778 = !DILocation(line: 110, column: 7, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9730, file: !741, line: 110, column: 7)
!9780 = !DILocation(line: 110, column: 7, scope: !9730)
!9781 = !DILocation(line: 111, column: 12, scope: !9779)
!9782 = !DILocation(line: 111, column: 5, scope: !9779)
!9783 = !DILocation(line: 112, column: 1, scope: !9730)
!9784 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !784, file: !784, line: 51, type: !296, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !744, retainedNodes: !298)
!9785 = !DILocalVariable(name: "file", arg: 1, scope: !9784, file: !784, line: 51, type: !183)
!9786 = !DILocation(line: 51, column: 41, scope: !9784)
!9787 = !DILocation(line: 53, column: 15, scope: !9784)
!9788 = !DILocation(line: 53, column: 13, scope: !9784)
!9789 = !DILocation(line: 54, column: 1, scope: !9784)
!9790 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !784, file: !784, line: 88, type: !9791, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !744, retainedNodes: !298)
!9791 = !DISubroutineType(types: !9792)
!9792 = !{null, !142}
!9793 = !DILocalVariable(name: "ignore", arg: 1, scope: !9790, file: !784, line: 88, type: !142)
!9794 = !DILocation(line: 88, column: 37, scope: !9790)
!9795 = !DILocation(line: 90, column: 18, scope: !9790)
!9796 = !DILocation(line: 90, column: 16, scope: !9790)
!9797 = !DILocation(line: 91, column: 1, scope: !9790)
!9798 = distinct !DISubprogram(name: "close_stdout", scope: !784, file: !784, line: 117, type: !692, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !744, retainedNodes: !298)
!9799 = !DILocation(line: 119, column: 21, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9798, file: !784, line: 119, column: 7)
!9801 = !DILocation(line: 119, column: 7, scope: !9800)
!9802 = !DILocation(line: 119, column: 29, scope: !9800)
!9803 = !DILocation(line: 120, column: 7, scope: !9800)
!9804 = !DILocation(line: 120, column: 12, scope: !9800)
!9805 = !DILocation(line: 120, column: 25, scope: !9800)
!9806 = !DILocation(line: 120, column: 28, scope: !9800)
!9807 = !DILocation(line: 120, column: 34, scope: !9800)
!9808 = !DILocation(line: 119, column: 7, scope: !9798)
!9809 = !DILocalVariable(name: "write_error", scope: !9810, file: !784, line: 122, type: !183)
!9810 = distinct !DILexicalBlock(scope: !9800, file: !784, line: 121, column: 5)
!9811 = !DILocation(line: 122, column: 19, scope: !9810)
!9812 = !DILocation(line: 122, column: 33, scope: !9810)
!9813 = !DILocation(line: 123, column: 11, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9810, file: !784, line: 123, column: 11)
!9815 = !DILocation(line: 123, column: 11, scope: !9810)
!9816 = !DILocation(line: 124, column: 19, scope: !9814)
!9817 = !DILocation(line: 124, column: 52, scope: !9814)
!9818 = !DILocation(line: 124, column: 36, scope: !9814)
!9819 = !DILocation(line: 125, column: 16, scope: !9814)
!9820 = !DILocation(line: 124, column: 9, scope: !9814)
!9821 = !DILocation(line: 127, column: 19, scope: !9814)
!9822 = !DILocation(line: 127, column: 32, scope: !9814)
!9823 = !DILocation(line: 127, column: 9, scope: !9814)
!9824 = !DILocation(line: 129, column: 14, scope: !9810)
!9825 = !DILocation(line: 129, column: 7, scope: !9810)
!9826 = !DILocation(line: 134, column: 42, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9798, file: !784, line: 134, column: 7)
!9828 = !DILocation(line: 134, column: 28, scope: !9827)
!9829 = !DILocation(line: 134, column: 50, scope: !9827)
!9830 = !DILocation(line: 134, column: 7, scope: !9798)
!9831 = !DILocation(line: 135, column: 12, scope: !9827)
!9832 = !DILocation(line: 135, column: 5, scope: !9827)
!9833 = !DILocation(line: 136, column: 1, scope: !9798)
!9834 = distinct !DISubprogram(name: "dir_name", scope: !9835, file: !9835, line: 32, type: !2459, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1247, retainedNodes: !298)
!9835 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9836 = !DILocalVariable(name: "file", arg: 1, scope: !9834, file: !9835, line: 32, type: !183)
!9837 = !DILocation(line: 32, column: 23, scope: !9834)
!9838 = !DILocalVariable(name: "result", scope: !9834, file: !9835, line: 34, type: !9)
!9839 = !DILocation(line: 34, column: 9, scope: !9834)
!9840 = !DILocation(line: 34, column: 29, scope: !9834)
!9841 = !DILocation(line: 34, column: 18, scope: !9834)
!9842 = !DILocation(line: 35, column: 8, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9834, file: !9835, line: 35, column: 7)
!9844 = !DILocation(line: 35, column: 7, scope: !9834)
!9845 = !DILocation(line: 36, column: 5, scope: !9843)
!9846 = !DILocation(line: 37, column: 10, scope: !9834)
!9847 = !DILocation(line: 37, column: 3, scope: !9834)
!9848 = distinct !DISubprogram(name: "dir_len", scope: !9849, file: !9849, line: 32, type: !9850, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1250, retainedNodes: !298)
!9849 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9850 = !DISubroutineType(types: !9851)
!9851 = !{!55, !183}
!9852 = !DILocalVariable(name: "file", arg: 1, scope: !9848, file: !9849, line: 32, type: !183)
!9853 = !DILocation(line: 32, column: 22, scope: !9848)
!9854 = !DILocalVariable(name: "prefix_length", scope: !9848, file: !9849, line: 34, type: !55)
!9855 = !DILocation(line: 34, column: 10, scope: !9848)
!9856 = !DILocalVariable(name: "length", scope: !9848, file: !9849, line: 35, type: !55)
!9857 = !DILocation(line: 35, column: 10, scope: !9848)
!9858 = !DILocation(line: 38, column: 21, scope: !9848)
!9859 = !DILocation(line: 38, column: 35, scope: !9848)
!9860 = !DILocation(line: 41, column: 24, scope: !9848)
!9861 = !DILocation(line: 38, column: 20, scope: !9848)
!9862 = !DILocation(line: 38, column: 17, scope: !9848)
!9863 = !DILocation(line: 48, column: 33, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9848, file: !9849, line: 48, column: 3)
!9865 = !DILocation(line: 48, column: 17, scope: !9864)
!9866 = !DILocation(line: 48, column: 41, scope: !9864)
!9867 = !DILocation(line: 48, column: 39, scope: !9864)
!9868 = !DILocation(line: 48, column: 15, scope: !9864)
!9869 = !DILocation(line: 48, column: 8, scope: !9864)
!9870 = !DILocation(line: 49, column: 8, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9864, file: !9849, line: 48, column: 3)
!9872 = !DILocation(line: 49, column: 24, scope: !9871)
!9873 = !DILocation(line: 49, column: 22, scope: !9871)
!9874 = !DILocation(line: 48, column: 3, scope: !9864)
!9875 = !DILocation(line: 50, column: 11, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9871, file: !9849, line: 50, column: 9)
!9877 = !DILocation(line: 50, column: 9, scope: !9871)
!9878 = !DILocation(line: 51, column: 7, scope: !9876)
!9879 = !DILocation(line: 49, column: 38, scope: !9871)
!9880 = !DILocation(line: 48, column: 3, scope: !9871)
!9881 = distinct !{!9881, !9874, !9882}
!9882 = !DILocation(line: 51, column: 7, scope: !9864)
!9883 = !DILocation(line: 52, column: 10, scope: !9848)
!9884 = !DILocation(line: 52, column: 3, scope: !9848)
!9885 = distinct !DISubprogram(name: "mdir_name", scope: !9849, file: !9849, line: 71, type: !2459, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1250, retainedNodes: !298)
!9886 = !DILocalVariable(name: "file", arg: 1, scope: !9885, file: !9849, line: 71, type: !183)
!9887 = !DILocation(line: 71, column: 24, scope: !9885)
!9888 = !DILocalVariable(name: "length", scope: !9885, file: !9849, line: 73, type: !55)
!9889 = !DILocation(line: 73, column: 10, scope: !9885)
!9890 = !DILocation(line: 73, column: 28, scope: !9885)
!9891 = !DILocation(line: 73, column: 19, scope: !9885)
!9892 = !DILocalVariable(name: "append_dot", scope: !9885, file: !9849, line: 74, type: !142)
!9893 = !DILocation(line: 74, column: 8, scope: !9885)
!9894 = !DILocation(line: 74, column: 22, scope: !9885)
!9895 = !DILocation(line: 74, column: 29, scope: !9885)
!9896 = !DILocation(line: 75, column: 22, scope: !9885)
!9897 = !DILocalVariable(name: "dir", scope: !9885, file: !9849, line: 78, type: !9)
!9898 = !DILocation(line: 78, column: 9, scope: !9885)
!9899 = !DILocation(line: 78, column: 23, scope: !9885)
!9900 = !DILocation(line: 78, column: 32, scope: !9885)
!9901 = !DILocation(line: 78, column: 30, scope: !9885)
!9902 = !DILocation(line: 78, column: 43, scope: !9885)
!9903 = !DILocation(line: 78, column: 15, scope: !9885)
!9904 = !DILocation(line: 79, column: 8, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9885, file: !9849, line: 79, column: 7)
!9906 = !DILocation(line: 79, column: 7, scope: !9885)
!9907 = !DILocation(line: 80, column: 5, scope: !9905)
!9908 = !DILocation(line: 81, column: 11, scope: !9885)
!9909 = !DILocation(line: 81, column: 16, scope: !9885)
!9910 = !DILocation(line: 81, column: 22, scope: !9885)
!9911 = !DILocation(line: 81, column: 3, scope: !9885)
!9912 = !DILocation(line: 82, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9885, file: !9849, line: 82, column: 7)
!9914 = !DILocation(line: 82, column: 7, scope: !9885)
!9915 = !DILocation(line: 83, column: 5, scope: !9913)
!9916 = !DILocation(line: 83, column: 15, scope: !9913)
!9917 = !DILocation(line: 83, column: 19, scope: !9913)
!9918 = !DILocation(line: 84, column: 3, scope: !9885)
!9919 = !DILocation(line: 84, column: 7, scope: !9885)
!9920 = !DILocation(line: 84, column: 15, scope: !9885)
!9921 = !DILocation(line: 85, column: 10, scope: !9885)
!9922 = !DILocation(line: 85, column: 3, scope: !9885)
!9923 = !DILocation(line: 86, column: 1, scope: !9885)
!9924 = distinct !DISubprogram(name: "last_component", scope: !9925, file: !9925, line: 30, type: !2459, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1253, retainedNodes: !298)
!9925 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9926 = !DILocalVariable(name: "name", arg: 1, scope: !9924, file: !9925, line: 30, type: !183)
!9927 = !DILocation(line: 30, column: 29, scope: !9924)
!9928 = !DILocalVariable(name: "base", scope: !9924, file: !9925, line: 32, type: !183)
!9929 = !DILocation(line: 32, column: 15, scope: !9924)
!9930 = !DILocation(line: 32, column: 22, scope: !9924)
!9931 = !DILocation(line: 32, column: 27, scope: !9924)
!9932 = !DILocalVariable(name: "p", scope: !9924, file: !9925, line: 33, type: !183)
!9933 = !DILocation(line: 33, column: 15, scope: !9924)
!9934 = !DILocalVariable(name: "saw_slash", scope: !9924, file: !9925, line: 34, type: !142)
!9935 = !DILocation(line: 34, column: 8, scope: !9924)
!9936 = !DILocation(line: 36, column: 3, scope: !9924)
!9937 = !DILocation(line: 36, column: 10, scope: !9924)
!9938 = !DILocation(line: 37, column: 9, scope: !9924)
!9939 = distinct !{!9939, !9936, !9938}
!9940 = !DILocation(line: 39, column: 12, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9924, file: !9925, line: 39, column: 3)
!9942 = !DILocation(line: 39, column: 10, scope: !9941)
!9943 = !DILocation(line: 39, column: 8, scope: !9941)
!9944 = !DILocation(line: 39, column: 19, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9941, file: !9925, line: 39, column: 3)
!9946 = !DILocation(line: 39, column: 18, scope: !9945)
!9947 = !DILocation(line: 39, column: 3, scope: !9941)
!9948 = !DILocation(line: 41, column: 11, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !9925, line: 41, column: 11)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !9925, line: 40, column: 5)
!9951 = !DILocation(line: 41, column: 11, scope: !9950)
!9952 = !DILocation(line: 42, column: 19, scope: !9949)
!9953 = !DILocation(line: 42, column: 9, scope: !9949)
!9954 = !DILocation(line: 43, column: 16, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9949, file: !9925, line: 43, column: 16)
!9956 = !DILocation(line: 43, column: 16, scope: !9949)
!9957 = !DILocation(line: 45, column: 18, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9955, file: !9925, line: 44, column: 9)
!9959 = !DILocation(line: 45, column: 16, scope: !9958)
!9960 = !DILocation(line: 46, column: 21, scope: !9958)
!9961 = !DILocation(line: 47, column: 9, scope: !9958)
!9962 = !DILocation(line: 48, column: 5, scope: !9950)
!9963 = !DILocation(line: 39, column: 23, scope: !9945)
!9964 = !DILocation(line: 39, column: 3, scope: !9945)
!9965 = distinct !{!9965, !9947, !9966}
!9966 = !DILocation(line: 48, column: 5, scope: !9941)
!9967 = !DILocation(line: 50, column: 19, scope: !9924)
!9968 = !DILocation(line: 50, column: 3, scope: !9924)
!9969 = distinct !DISubprogram(name: "base_len", scope: !9925, file: !9925, line: 58, type: !9850, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1253, retainedNodes: !298)
!9970 = !DILocalVariable(name: "name", arg: 1, scope: !9969, file: !9925, line: 58, type: !183)
!9971 = !DILocation(line: 58, column: 23, scope: !9969)
!9972 = !DILocalVariable(name: "len", scope: !9969, file: !9925, line: 60, type: !55)
!9973 = !DILocation(line: 60, column: 10, scope: !9969)
!9974 = !DILocalVariable(name: "prefix_len", scope: !9969, file: !9925, line: 61, type: !55)
!9975 = !DILocation(line: 61, column: 10, scope: !9969)
!9976 = !DILocation(line: 63, column: 22, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9969, file: !9925, line: 63, column: 3)
!9978 = !DILocation(line: 63, column: 14, scope: !9977)
!9979 = !DILocation(line: 63, column: 12, scope: !9977)
!9980 = !DILocation(line: 63, column: 8, scope: !9977)
!9981 = !DILocation(line: 63, column: 34, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9977, file: !9925, line: 63, column: 3)
!9983 = !DILocation(line: 63, column: 32, scope: !9982)
!9984 = !DILocation(line: 63, column: 38, scope: !9982)
!9985 = !DILocation(line: 63, column: 41, scope: !9982)
!9986 = !DILocation(line: 0, scope: !9982)
!9987 = !DILocation(line: 63, column: 3, scope: !9977)
!9988 = !DILocation(line: 64, column: 5, scope: !9982)
!9989 = !DILocation(line: 63, column: 70, scope: !9982)
!9990 = !DILocation(line: 63, column: 3, scope: !9982)
!9991 = distinct !{!9991, !9987, !9992}
!9992 = !DILocation(line: 64, column: 5, scope: !9977)
!9993 = !DILocation(line: 74, column: 10, scope: !9969)
!9994 = !DILocation(line: 74, column: 3, scope: !9969)
!9995 = distinct !DISubprogram(name: "fdadvise", scope: !9996, file: !9996, line: 31, type: !9997, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1256, retainedNodes: !298)
!9996 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9997 = !DISubroutineType(types: !9998)
!9998 = !{null, !7, !429, !429, !9999}
!9999 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1260, line: 52, baseType: !1259)
!10000 = !DILocalVariable(name: "fd", arg: 1, scope: !9995, file: !9996, line: 31, type: !7)
!10001 = !DILocation(line: 31, column: 15, scope: !9995)
!10002 = !DILocalVariable(name: "offset", arg: 2, scope: !9995, file: !9996, line: 31, type: !429)
!10003 = !DILocation(line: 31, column: 25, scope: !9995)
!10004 = !DILocalVariable(name: "len", arg: 3, scope: !9995, file: !9996, line: 31, type: !429)
!10005 = !DILocation(line: 31, column: 39, scope: !9995)
!10006 = !DILocalVariable(name: "advice", arg: 4, scope: !9995, file: !9996, line: 31, type: !9999)
!10007 = !DILocation(line: 31, column: 54, scope: !9995)
!10008 = !DILocalVariable(name: "__x", scope: !10009, file: !9996, line: 34, type: !7)
!10009 = distinct !DILexicalBlock(scope: !9995, file: !9996, line: 34, column: 3)
!10010 = !DILocation(line: 34, column: 3, scope: !10009)
!10011 = !DILocation(line: 36, column: 1, scope: !9995)
!10012 = distinct !DISubprogram(name: "fadvise", scope: !9996, file: !9996, line: 39, type: !10013, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1256, retainedNodes: !298)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{null, !10015, !9999}
!10015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10016, size: 64)
!10016 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !10017)
!10017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !10018)
!10018 = !{!10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027, !10028, !10029, !10030, !10031, !10032, !10034, !10035, !10036, !10037, !10038, !10039, !10040, !10041, !10042, !10043, !10044, !10045, !10046, !10047, !10048}
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10017, file: !4, line: 51, baseType: !7, size: 32)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10017, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10017, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10017, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10017, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10017, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10017, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10017, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10017, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10017, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10017, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10017, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10017, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10017, file: !4, line: 70, baseType: !10033, size: 64, offset: 832)
!10033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10017, size: 64)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10017, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10017, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10017, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10017, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10017, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10017, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10017, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!10041 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10017, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!10042 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !10017, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!10043 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !10017, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !10017, file: !4, line: 93, baseType: !10033, size: 64, offset: 1344)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !10017, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10017, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10017, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10017, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!10049 = !DILocalVariable(name: "fp", arg: 1, scope: !10012, file: !9996, line: 39, type: !10015)
!10050 = !DILocation(line: 39, column: 16, scope: !10012)
!10051 = !DILocalVariable(name: "advice", arg: 2, scope: !10012, file: !9996, line: 39, type: !9999)
!10052 = !DILocation(line: 39, column: 30, scope: !10012)
!10053 = !DILocation(line: 41, column: 7, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10012, file: !9996, line: 41, column: 7)
!10055 = !DILocation(line: 41, column: 7, scope: !10012)
!10056 = !DILocation(line: 42, column: 23, scope: !10054)
!10057 = !DILocation(line: 42, column: 15, scope: !10054)
!10058 = !DILocation(line: 42, column: 34, scope: !10054)
!10059 = !DILocation(line: 42, column: 5, scope: !10054)
!10060 = !DILocation(line: 43, column: 1, scope: !10012)
!10061 = distinct !DISubprogram(name: "open_safer", scope: !10062, file: !10062, line: 29, type: !10063, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1268, retainedNodes: !298)
!10062 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!7, !183, !7, null}
!10065 = !DILocalVariable(name: "file", arg: 1, scope: !10061, file: !10062, line: 29, type: !183)
!10066 = !DILocation(line: 29, column: 25, scope: !10061)
!10067 = !DILocalVariable(name: "flags", arg: 2, scope: !10061, file: !10062, line: 29, type: !7)
!10068 = !DILocation(line: 29, column: 35, scope: !10061)
!10069 = !DILocalVariable(name: "mode", scope: !10061, file: !10062, line: 31, type: !139)
!10070 = !DILocation(line: 31, column: 10, scope: !10061)
!10071 = !DILocation(line: 33, column: 7, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10061, file: !10062, line: 33, column: 7)
!10073 = !DILocation(line: 33, column: 13, scope: !10072)
!10074 = !DILocation(line: 33, column: 7, scope: !10061)
!10075 = !DILocalVariable(name: "ap", scope: !10076, file: !10062, line: 35, type: !1271)
!10076 = distinct !DILexicalBlock(scope: !10072, file: !10062, line: 34, column: 5)
!10077 = !DILocation(line: 35, column: 15, scope: !10076)
!10078 = !DILocation(line: 36, column: 7, scope: !10076)
!10079 = !DILocation(line: 40, column: 14, scope: !10076)
!10080 = !DILocation(line: 40, column: 12, scope: !10076)
!10081 = !DILocation(line: 42, column: 7, scope: !10076)
!10082 = !DILocation(line: 43, column: 5, scope: !10076)
!10083 = !DILocation(line: 45, column: 26, scope: !10061)
!10084 = !DILocation(line: 45, column: 32, scope: !10061)
!10085 = !DILocation(line: 45, column: 39, scope: !10061)
!10086 = !DILocation(line: 45, column: 20, scope: !10061)
!10087 = !DILocation(line: 45, column: 10, scope: !10061)
!10088 = !DILocation(line: 45, column: 3, scope: !10061)
!10089 = distinct !DISubprogram(name: "record_file", scope: !10090, file: !10090, line: 29, type: !10091, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1280, retainedNodes: !298)
!10090 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10091 = !DISubroutineType(types: !10092)
!10092 = !{null, !175, !183, !10093}
!10093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10094, size: 64)
!10094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10095)
!10095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !10096)
!10096 = !{!10097, !10098, !10099, !10100, !10101, !10102, !10103, !10104, !10105, !10106, !10107, !10108, !10113, !10114, !10115}
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10095, file: !463, line: 48, baseType: !452, size: 64)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10095, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10095, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!10100 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10095, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!10101 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10095, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10095, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10095, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10095, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10095, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10095, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10095, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10095, file: !463, line: 91, baseType: !10109, size: 128, offset: 576)
!10109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !10110)
!10110 = !{!10111, !10112}
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10109, file: !365, line: 11, baseType: !368, size: 64)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10109, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10095, file: !463, line: 92, baseType: !10109, size: 128, offset: 704)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10095, file: !463, line: 93, baseType: !10109, size: 128, offset: 832)
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10095, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!10116 = !DILocalVariable(name: "ht", arg: 1, scope: !10089, file: !10090, line: 29, type: !175)
!10117 = !DILocation(line: 29, column: 26, scope: !10089)
!10118 = !DILocalVariable(name: "file", arg: 2, scope: !10089, file: !10090, line: 29, type: !183)
!10119 = !DILocation(line: 29, column: 42, scope: !10089)
!10120 = !DILocalVariable(name: "stats", arg: 3, scope: !10089, file: !10090, line: 29, type: !10093)
!10121 = !DILocation(line: 29, column: 67, scope: !10089)
!10122 = !DILocalVariable(name: "ent", scope: !10089, file: !10090, line: 31, type: !1283)
!10123 = !DILocation(line: 31, column: 20, scope: !10089)
!10124 = !DILocation(line: 33, column: 7, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10089, file: !10090, line: 33, column: 7)
!10126 = !DILocation(line: 33, column: 10, scope: !10125)
!10127 = !DILocation(line: 33, column: 7, scope: !10089)
!10128 = !DILocation(line: 34, column: 5, scope: !10125)
!10129 = !DILocation(line: 36, column: 9, scope: !10089)
!10130 = !DILocation(line: 36, column: 7, scope: !10089)
!10131 = !DILocation(line: 37, column: 24, scope: !10089)
!10132 = !DILocation(line: 37, column: 15, scope: !10089)
!10133 = !DILocation(line: 37, column: 3, scope: !10089)
!10134 = !DILocation(line: 37, column: 8, scope: !10089)
!10135 = !DILocation(line: 37, column: 13, scope: !10089)
!10136 = !DILocation(line: 38, column: 17, scope: !10089)
!10137 = !DILocation(line: 38, column: 24, scope: !10089)
!10138 = !DILocation(line: 38, column: 3, scope: !10089)
!10139 = !DILocation(line: 38, column: 8, scope: !10089)
!10140 = !DILocation(line: 38, column: 15, scope: !10089)
!10141 = !DILocation(line: 39, column: 17, scope: !10089)
!10142 = !DILocation(line: 39, column: 24, scope: !10089)
!10143 = !DILocation(line: 39, column: 3, scope: !10089)
!10144 = !DILocation(line: 39, column: 8, scope: !10089)
!10145 = !DILocation(line: 39, column: 15, scope: !10089)
!10146 = !DILocalVariable(name: "ent_from_table", scope: !10147, file: !10090, line: 42, type: !1283)
!10147 = distinct !DILexicalBlock(scope: !10089, file: !10090, line: 41, column: 3)
!10148 = !DILocation(line: 42, column: 22, scope: !10147)
!10149 = !DILocation(line: 42, column: 52, scope: !10147)
!10150 = !DILocation(line: 42, column: 56, scope: !10147)
!10151 = !DILocation(line: 42, column: 39, scope: !10147)
!10152 = !DILocation(line: 43, column: 9, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10147, file: !10090, line: 43, column: 9)
!10154 = !DILocation(line: 43, column: 24, scope: !10153)
!10155 = !DILocation(line: 43, column: 9, scope: !10147)
!10156 = !DILocation(line: 46, column: 9, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10153, file: !10090, line: 44, column: 7)
!10158 = !DILocation(line: 49, column: 9, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10147, file: !10090, line: 49, column: 9)
!10160 = !DILocation(line: 49, column: 27, scope: !10159)
!10161 = !DILocation(line: 49, column: 24, scope: !10159)
!10162 = !DILocation(line: 49, column: 9, scope: !10147)
!10163 = !DILocation(line: 53, column: 22, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10159, file: !10090, line: 50, column: 7)
!10165 = !DILocation(line: 53, column: 9, scope: !10164)
!10166 = !DILocation(line: 54, column: 7, scope: !10164)
!10167 = !DILocation(line: 56, column: 1, scope: !10089)
!10168 = distinct !DISubprogram(name: "seen_file", scope: !10090, file: !10090, line: 61, type: !10169, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1280, retainedNodes: !298)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!142, !10171, !183, !10093}
!10171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10172, size: 64)
!10172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!10173 = !DILocalVariable(name: "ht", arg: 1, scope: !10168, file: !10090, line: 61, type: !10171)
!10174 = !DILocation(line: 61, column: 30, scope: !10168)
!10175 = !DILocalVariable(name: "file", arg: 2, scope: !10168, file: !10090, line: 61, type: !183)
!10176 = !DILocation(line: 61, column: 46, scope: !10168)
!10177 = !DILocalVariable(name: "stats", arg: 3, scope: !10168, file: !10090, line: 62, type: !10093)
!10178 = !DILocation(line: 62, column: 31, scope: !10168)
!10179 = !DILocalVariable(name: "new_ent", scope: !10168, file: !10090, line: 64, type: !1284)
!10180 = !DILocation(line: 64, column: 19, scope: !10168)
!10181 = !DILocation(line: 66, column: 7, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10168, file: !10090, line: 66, column: 7)
!10183 = !DILocation(line: 66, column: 10, scope: !10182)
!10184 = !DILocation(line: 66, column: 7, scope: !10168)
!10185 = !DILocation(line: 67, column: 5, scope: !10182)
!10186 = !DILocation(line: 69, column: 27, scope: !10168)
!10187 = !DILocation(line: 69, column: 11, scope: !10168)
!10188 = !DILocation(line: 69, column: 16, scope: !10168)
!10189 = !DILocation(line: 70, column: 20, scope: !10168)
!10190 = !DILocation(line: 70, column: 27, scope: !10168)
!10191 = !DILocation(line: 70, column: 11, scope: !10168)
!10192 = !DILocation(line: 70, column: 18, scope: !10168)
!10193 = !DILocation(line: 71, column: 20, scope: !10168)
!10194 = !DILocation(line: 71, column: 27, scope: !10168)
!10195 = !DILocation(line: 71, column: 11, scope: !10168)
!10196 = !DILocation(line: 71, column: 18, scope: !10168)
!10197 = !DILocation(line: 73, column: 25, scope: !10168)
!10198 = !DILocation(line: 73, column: 29, scope: !10168)
!10199 = !DILocation(line: 73, column: 12, scope: !10168)
!10200 = !DILocation(line: 73, column: 11, scope: !10168)
!10201 = !DILocation(line: 73, column: 10, scope: !10168)
!10202 = !DILocation(line: 73, column: 3, scope: !10168)
!10203 = !DILocation(line: 74, column: 1, scope: !10168)
!10204 = distinct !DISubprogram(name: "strmode", scope: !10205, file: !10205, line: 96, type: !10206, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1290, retainedNodes: !298)
!10205 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10206 = !DISubroutineType(types: !10207)
!10207 = !{null, !139, !9}
!10208 = !DILocalVariable(name: "mode", arg: 1, scope: !10204, file: !10205, line: 96, type: !139)
!10209 = !DILocation(line: 96, column: 17, scope: !10204)
!10210 = !DILocalVariable(name: "str", arg: 2, scope: !10204, file: !10205, line: 96, type: !9)
!10211 = !DILocation(line: 96, column: 29, scope: !10204)
!10212 = !DILocation(line: 98, column: 22, scope: !10204)
!10213 = !DILocation(line: 98, column: 12, scope: !10204)
!10214 = !DILocation(line: 98, column: 3, scope: !10204)
!10215 = !DILocation(line: 98, column: 10, scope: !10204)
!10216 = !DILocation(line: 99, column: 12, scope: !10204)
!10217 = !DILocation(line: 99, column: 17, scope: !10204)
!10218 = !DILocation(line: 99, column: 3, scope: !10204)
!10219 = !DILocation(line: 99, column: 10, scope: !10204)
!10220 = !DILocation(line: 100, column: 12, scope: !10204)
!10221 = !DILocation(line: 100, column: 17, scope: !10204)
!10222 = !DILocation(line: 100, column: 3, scope: !10204)
!10223 = !DILocation(line: 100, column: 10, scope: !10204)
!10224 = !DILocation(line: 101, column: 13, scope: !10204)
!10225 = !DILocation(line: 101, column: 18, scope: !10204)
!10226 = !DILocation(line: 102, column: 16, scope: !10204)
!10227 = !DILocation(line: 102, column: 21, scope: !10204)
!10228 = !DILocation(line: 103, column: 16, scope: !10204)
!10229 = !DILocation(line: 103, column: 21, scope: !10204)
!10230 = !DILocation(line: 101, column: 12, scope: !10204)
!10231 = !DILocation(line: 101, column: 3, scope: !10204)
!10232 = !DILocation(line: 101, column: 10, scope: !10204)
!10233 = !DILocation(line: 104, column: 12, scope: !10204)
!10234 = !DILocation(line: 104, column: 17, scope: !10204)
!10235 = !DILocation(line: 104, column: 3, scope: !10204)
!10236 = !DILocation(line: 104, column: 10, scope: !10204)
!10237 = !DILocation(line: 105, column: 12, scope: !10204)
!10238 = !DILocation(line: 105, column: 17, scope: !10204)
!10239 = !DILocation(line: 105, column: 3, scope: !10204)
!10240 = !DILocation(line: 105, column: 10, scope: !10204)
!10241 = !DILocation(line: 106, column: 13, scope: !10204)
!10242 = !DILocation(line: 106, column: 18, scope: !10204)
!10243 = !DILocation(line: 107, column: 16, scope: !10204)
!10244 = !DILocation(line: 107, column: 21, scope: !10204)
!10245 = !DILocation(line: 108, column: 16, scope: !10204)
!10246 = !DILocation(line: 108, column: 21, scope: !10204)
!10247 = !DILocation(line: 106, column: 12, scope: !10204)
!10248 = !DILocation(line: 106, column: 3, scope: !10204)
!10249 = !DILocation(line: 106, column: 10, scope: !10204)
!10250 = !DILocation(line: 109, column: 12, scope: !10204)
!10251 = !DILocation(line: 109, column: 17, scope: !10204)
!10252 = !DILocation(line: 109, column: 3, scope: !10204)
!10253 = !DILocation(line: 109, column: 10, scope: !10204)
!10254 = !DILocation(line: 110, column: 12, scope: !10204)
!10255 = !DILocation(line: 110, column: 17, scope: !10204)
!10256 = !DILocation(line: 110, column: 3, scope: !10204)
!10257 = !DILocation(line: 110, column: 10, scope: !10204)
!10258 = !DILocation(line: 111, column: 13, scope: !10204)
!10259 = !DILocation(line: 111, column: 18, scope: !10204)
!10260 = !DILocation(line: 112, column: 16, scope: !10204)
!10261 = !DILocation(line: 112, column: 21, scope: !10204)
!10262 = !DILocation(line: 113, column: 16, scope: !10204)
!10263 = !DILocation(line: 113, column: 21, scope: !10204)
!10264 = !DILocation(line: 111, column: 12, scope: !10204)
!10265 = !DILocation(line: 111, column: 3, scope: !10204)
!10266 = !DILocation(line: 111, column: 10, scope: !10204)
!10267 = !DILocation(line: 114, column: 3, scope: !10204)
!10268 = !DILocation(line: 114, column: 11, scope: !10204)
!10269 = !DILocation(line: 115, column: 3, scope: !10204)
!10270 = !DILocation(line: 115, column: 11, scope: !10204)
!10271 = !DILocation(line: 116, column: 1, scope: !10204)
!10272 = distinct !DISubprogram(name: "ftypelet", scope: !10205, file: !10205, line: 54, type: !10273, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1290, retainedNodes: !298)
!10273 = !DISubroutineType(types: !10274)
!10274 = !{!10, !139}
!10275 = !DILocalVariable(name: "bits", arg: 1, scope: !10272, file: !10205, line: 54, type: !139)
!10276 = !DILocation(line: 54, column: 18, scope: !10272)
!10277 = !DILocation(line: 57, column: 7, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 57, column: 7)
!10279 = !DILocation(line: 57, column: 7, scope: !10272)
!10280 = !DILocation(line: 58, column: 5, scope: !10278)
!10281 = !DILocation(line: 59, column: 7, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 59, column: 7)
!10283 = !DILocation(line: 59, column: 7, scope: !10272)
!10284 = !DILocation(line: 60, column: 5, scope: !10282)
!10285 = !DILocation(line: 63, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 63, column: 7)
!10287 = !DILocation(line: 63, column: 7, scope: !10272)
!10288 = !DILocation(line: 64, column: 5, scope: !10286)
!10289 = !DILocation(line: 65, column: 7, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 65, column: 7)
!10291 = !DILocation(line: 65, column: 7, scope: !10272)
!10292 = !DILocation(line: 66, column: 5, scope: !10290)
!10293 = !DILocation(line: 67, column: 7, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 67, column: 7)
!10295 = !DILocation(line: 67, column: 7, scope: !10272)
!10296 = !DILocation(line: 68, column: 5, scope: !10294)
!10297 = !DILocation(line: 69, column: 7, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 69, column: 7)
!10299 = !DILocation(line: 69, column: 7, scope: !10272)
!10300 = !DILocation(line: 70, column: 5, scope: !10298)
!10301 = !DILocation(line: 73, column: 7, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10272, file: !10205, line: 73, column: 7)
!10303 = !DILocation(line: 73, column: 7, scope: !10272)
!10304 = !DILocation(line: 74, column: 5, scope: !10302)
!10305 = !DILocation(line: 90, column: 3, scope: !10272)
!10306 = !DILocation(line: 91, column: 1, scope: !10272)
!10307 = distinct !DISubprogram(name: "filemodestring", scope: !10205, file: !10205, line: 166, type: !10308, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1290, retainedNodes: !298)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{null, !10310, !9}
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10311, size: 64)
!10311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10312)
!10312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !10313)
!10313 = !{!10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10330, !10331, !10332}
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10312, file: !463, line: 48, baseType: !452, size: 64)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10312, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10312, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10312, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10312, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10312, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10312, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10312, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10312, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10312, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10312, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10312, file: !463, line: 91, baseType: !10326, size: 128, offset: 576)
!10326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !10327)
!10327 = !{!10328, !10329}
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10326, file: !365, line: 11, baseType: !368, size: 64)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10326, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10312, file: !463, line: 92, baseType: !10326, size: 128, offset: 704)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10312, file: !463, line: 93, baseType: !10326, size: 128, offset: 832)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10312, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!10333 = !DILocalVariable(name: "statp", arg: 1, scope: !10307, file: !10205, line: 166, type: !10310)
!10334 = !DILocation(line: 166, column: 36, scope: !10307)
!10335 = !DILocalVariable(name: "str", arg: 2, scope: !10307, file: !10205, line: 166, type: !9)
!10336 = !DILocation(line: 166, column: 49, scope: !10307)
!10337 = !DILocation(line: 168, column: 12, scope: !10307)
!10338 = !DILocation(line: 168, column: 19, scope: !10307)
!10339 = !DILocation(line: 168, column: 28, scope: !10307)
!10340 = !DILocation(line: 168, column: 3, scope: !10307)
!10341 = !DILocation(line: 170, column: 7, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10307, file: !10205, line: 170, column: 7)
!10343 = !DILocation(line: 170, column: 7, scope: !10307)
!10344 = !DILocation(line: 171, column: 5, scope: !10342)
!10345 = !DILocation(line: 171, column: 12, scope: !10342)
!10346 = !DILocation(line: 174, column: 12, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !10205, line: 174, column: 12)
!10348 = distinct !DILexicalBlock(scope: !10342, file: !10205, line: 172, column: 12)
!10349 = !DILocation(line: 174, column: 12, scope: !10348)
!10350 = !DILocation(line: 175, column: 5, scope: !10347)
!10351 = !DILocation(line: 175, column: 12, scope: !10347)
!10352 = !DILocation(line: 176, column: 12, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !10205, line: 176, column: 12)
!10354 = !DILocation(line: 176, column: 12, scope: !10347)
!10355 = !DILocation(line: 177, column: 5, scope: !10353)
!10356 = !DILocation(line: 177, column: 12, scope: !10353)
!10357 = !DILocation(line: 180, column: 1, scope: !10307)
!10358 = distinct !DISubprogram(name: "file_name_concat", scope: !10359, file: !10359, line: 35, type: !10360, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1293, retainedNodes: !298)
!10359 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10360 = !DISubroutineType(types: !10361)
!10361 = !{!9, !183, !183, !209}
!10362 = !DILocalVariable(name: "dir", arg: 1, scope: !10358, file: !10359, line: 35, type: !183)
!10363 = !DILocation(line: 35, column: 31, scope: !10358)
!10364 = !DILocalVariable(name: "base", arg: 2, scope: !10358, file: !10359, line: 35, type: !183)
!10365 = !DILocation(line: 35, column: 48, scope: !10358)
!10366 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10358, file: !10359, line: 35, type: !209)
!10367 = !DILocation(line: 35, column: 61, scope: !10358)
!10368 = !DILocalVariable(name: "p", scope: !10358, file: !10359, line: 37, type: !9)
!10369 = !DILocation(line: 37, column: 9, scope: !10358)
!10370 = !DILocation(line: 37, column: 32, scope: !10358)
!10371 = !DILocation(line: 37, column: 37, scope: !10358)
!10372 = !DILocation(line: 37, column: 43, scope: !10358)
!10373 = !DILocation(line: 37, column: 13, scope: !10358)
!10374 = !DILocation(line: 38, column: 7, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10358, file: !10359, line: 38, column: 7)
!10376 = !DILocation(line: 38, column: 9, scope: !10375)
!10377 = !DILocation(line: 38, column: 7, scope: !10358)
!10378 = !DILocation(line: 39, column: 5, scope: !10375)
!10379 = !DILocation(line: 40, column: 10, scope: !10358)
!10380 = !DILocation(line: 40, column: 3, scope: !10358)
!10381 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10382, file: !10382, line: 47, type: !10360, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1296, retainedNodes: !298)
!10382 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10383 = !DILocalVariable(name: "dir", arg: 1, scope: !10381, file: !10382, line: 47, type: !183)
!10384 = !DILocation(line: 47, column: 32, scope: !10381)
!10385 = !DILocalVariable(name: "base", arg: 2, scope: !10381, file: !10382, line: 47, type: !183)
!10386 = !DILocation(line: 47, column: 49, scope: !10381)
!10387 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10381, file: !10382, line: 47, type: !209)
!10388 = !DILocation(line: 47, column: 62, scope: !10381)
!10389 = !DILocalVariable(name: "dirbase", scope: !10381, file: !10382, line: 49, type: !183)
!10390 = !DILocation(line: 49, column: 15, scope: !10381)
!10391 = !DILocation(line: 49, column: 41, scope: !10381)
!10392 = !DILocation(line: 49, column: 25, scope: !10381)
!10393 = !DILocalVariable(name: "dirbaselen", scope: !10381, file: !10382, line: 50, type: !55)
!10394 = !DILocation(line: 50, column: 10, scope: !10381)
!10395 = !DILocation(line: 50, column: 33, scope: !10381)
!10396 = !DILocation(line: 50, column: 23, scope: !10381)
!10397 = !DILocalVariable(name: "dirlen", scope: !10381, file: !10382, line: 51, type: !55)
!10398 = !DILocation(line: 51, column: 10, scope: !10381)
!10399 = !DILocation(line: 51, column: 19, scope: !10381)
!10400 = !DILocation(line: 51, column: 29, scope: !10381)
!10401 = !DILocation(line: 51, column: 27, scope: !10381)
!10402 = !DILocation(line: 51, column: 35, scope: !10381)
!10403 = !DILocation(line: 51, column: 33, scope: !10381)
!10404 = !DILocalVariable(name: "baselen", scope: !10381, file: !10382, line: 52, type: !55)
!10405 = !DILocation(line: 52, column: 10, scope: !10381)
!10406 = !DILocation(line: 52, column: 28, scope: !10381)
!10407 = !DILocation(line: 52, column: 20, scope: !10381)
!10408 = !DILocalVariable(name: "sep", scope: !10381, file: !10382, line: 53, type: !10)
!10409 = !DILocation(line: 53, column: 8, scope: !10381)
!10410 = !DILocation(line: 54, column: 7, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10381, file: !10382, line: 54, column: 7)
!10412 = !DILocation(line: 54, column: 7, scope: !10381)
!10413 = !DILocation(line: 57, column: 13, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !10382, line: 57, column: 11)
!10415 = distinct !DILexicalBlock(scope: !10411, file: !10382, line: 55, column: 5)
!10416 = !DILocation(line: 57, column: 39, scope: !10414)
!10417 = !DILocation(line: 57, column: 44, scope: !10414)
!10418 = !DILocation(line: 57, column: 11, scope: !10415)
!10419 = !DILocation(line: 58, column: 13, scope: !10414)
!10420 = !DILocation(line: 58, column: 9, scope: !10414)
!10421 = !DILocation(line: 59, column: 5, scope: !10415)
!10422 = !DILocation(line: 60, column: 12, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10411, file: !10382, line: 60, column: 12)
!10424 = !DILocation(line: 60, column: 12, scope: !10411)
!10425 = !DILocation(line: 67, column: 11, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !10382, line: 61, column: 5)
!10427 = !DILocation(line: 68, column: 5, scope: !10426)
!10428 = !DILocalVariable(name: "p_concat", scope: !10381, file: !10382, line: 70, type: !9)
!10429 = !DILocation(line: 70, column: 9, scope: !10381)
!10430 = !DILocation(line: 70, column: 28, scope: !10381)
!10431 = !DILocation(line: 70, column: 38, scope: !10381)
!10432 = !DILocation(line: 70, column: 42, scope: !10381)
!10433 = !DILocation(line: 70, column: 37, scope: !10381)
!10434 = !DILocation(line: 70, column: 35, scope: !10381)
!10435 = !DILocation(line: 70, column: 54, scope: !10381)
!10436 = !DILocation(line: 70, column: 52, scope: !10381)
!10437 = !DILocation(line: 70, column: 62, scope: !10381)
!10438 = !DILocation(line: 70, column: 20, scope: !10381)
!10439 = !DILocalVariable(name: "p", scope: !10381, file: !10382, line: 71, type: !9)
!10440 = !DILocation(line: 71, column: 9, scope: !10381)
!10441 = !DILocation(line: 73, column: 7, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10381, file: !10382, line: 73, column: 7)
!10443 = !DILocation(line: 73, column: 16, scope: !10442)
!10444 = !DILocation(line: 73, column: 7, scope: !10381)
!10445 = !DILocation(line: 74, column: 5, scope: !10442)
!10446 = !DILocation(line: 76, column: 16, scope: !10381)
!10447 = !DILocation(line: 76, column: 26, scope: !10381)
!10448 = !DILocation(line: 76, column: 31, scope: !10381)
!10449 = !DILocation(line: 76, column: 7, scope: !10381)
!10450 = !DILocation(line: 76, column: 5, scope: !10381)
!10451 = !DILocation(line: 77, column: 8, scope: !10381)
!10452 = !DILocation(line: 77, column: 4, scope: !10381)
!10453 = !DILocation(line: 77, column: 6, scope: !10381)
!10454 = !DILocation(line: 78, column: 8, scope: !10381)
!10455 = !DILocation(line: 78, column: 12, scope: !10381)
!10456 = !DILocation(line: 78, column: 5, scope: !10381)
!10457 = !DILocation(line: 80, column: 7, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10381, file: !10382, line: 80, column: 7)
!10459 = !DILocation(line: 80, column: 7, scope: !10381)
!10460 = !DILocation(line: 81, column: 23, scope: !10458)
!10461 = !DILocation(line: 81, column: 6, scope: !10458)
!10462 = !DILocation(line: 81, column: 21, scope: !10458)
!10463 = !DILocation(line: 81, column: 5, scope: !10458)
!10464 = !DILocation(line: 83, column: 16, scope: !10381)
!10465 = !DILocation(line: 83, column: 19, scope: !10381)
!10466 = !DILocation(line: 83, column: 25, scope: !10381)
!10467 = !DILocation(line: 83, column: 7, scope: !10381)
!10468 = !DILocation(line: 83, column: 5, scope: !10381)
!10469 = !DILocation(line: 84, column: 4, scope: !10381)
!10470 = !DILocation(line: 84, column: 6, scope: !10381)
!10471 = !DILocation(line: 86, column: 10, scope: !10381)
!10472 = !DILocation(line: 86, column: 3, scope: !10381)
!10473 = !DILocation(line: 87, column: 1, scope: !10381)
!10474 = distinct !DISubprogram(name: "full_read", scope: !1303, file: !1303, line: 58, type: !10475, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1299, retainedNodes: !298)
!10475 = !DISubroutineType(types: !10476)
!10476 = !{!55, !7, !53, !55}
!10477 = !DILocalVariable(name: "fd", arg: 1, scope: !10474, file: !1303, line: 58, type: !7)
!10478 = !DILocation(line: 58, column: 14, scope: !10474)
!10479 = !DILocalVariable(name: "buf", arg: 2, scope: !10474, file: !1303, line: 58, type: !53)
!10480 = !DILocation(line: 58, column: 30, scope: !10474)
!10481 = !DILocalVariable(name: "count", arg: 3, scope: !10474, file: !1303, line: 58, type: !55)
!10482 = !DILocation(line: 58, column: 42, scope: !10474)
!10483 = !DILocalVariable(name: "total", scope: !10474, file: !1303, line: 60, type: !55)
!10484 = !DILocation(line: 60, column: 10, scope: !10474)
!10485 = !DILocalVariable(name: "ptr", scope: !10474, file: !1303, line: 61, type: !9)
!10486 = !DILocation(line: 61, column: 15, scope: !10474)
!10487 = !DILocation(line: 61, column: 36, scope: !10474)
!10488 = !DILocation(line: 63, column: 3, scope: !10474)
!10489 = !DILocation(line: 63, column: 10, scope: !10474)
!10490 = !DILocation(line: 63, column: 16, scope: !10474)
!10491 = !DILocalVariable(name: "n_rw", scope: !10492, file: !1303, line: 65, type: !55)
!10492 = distinct !DILexicalBlock(scope: !10474, file: !1303, line: 64, column: 5)
!10493 = !DILocation(line: 65, column: 14, scope: !10492)
!10494 = !DILocation(line: 65, column: 30, scope: !10492)
!10495 = !DILocation(line: 65, column: 34, scope: !10492)
!10496 = !DILocation(line: 65, column: 39, scope: !10492)
!10497 = !DILocation(line: 65, column: 21, scope: !10492)
!10498 = !DILocation(line: 66, column: 11, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10492, file: !1303, line: 66, column: 11)
!10500 = !DILocation(line: 66, column: 16, scope: !10499)
!10501 = !DILocation(line: 66, column: 11, scope: !10492)
!10502 = !DILocation(line: 67, column: 9, scope: !10499)
!10503 = !DILocation(line: 68, column: 11, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10492, file: !1303, line: 68, column: 11)
!10505 = !DILocation(line: 68, column: 16, scope: !10504)
!10506 = !DILocation(line: 68, column: 11, scope: !10492)
!10507 = !DILocation(line: 70, column: 11, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10504, file: !1303, line: 69, column: 9)
!10509 = !DILocation(line: 70, column: 17, scope: !10508)
!10510 = !DILocation(line: 71, column: 11, scope: !10508)
!10511 = !DILocation(line: 73, column: 16, scope: !10492)
!10512 = !DILocation(line: 73, column: 13, scope: !10492)
!10513 = !DILocation(line: 74, column: 14, scope: !10492)
!10514 = !DILocation(line: 74, column: 11, scope: !10492)
!10515 = !DILocation(line: 75, column: 16, scope: !10492)
!10516 = !DILocation(line: 75, column: 13, scope: !10492)
!10517 = distinct !{!10517, !10488, !10518}
!10518 = !DILocation(line: 76, column: 5, scope: !10474)
!10519 = !DILocation(line: 78, column: 10, scope: !10474)
!10520 = !DILocation(line: 78, column: 3, scope: !10474)
!10521 = distinct !DISubprogram(name: "full_write", scope: !10522, file: !10522, line: 58, type: !10523, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1302, retainedNodes: !298)
!10522 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10523 = !DISubroutineType(types: !10524)
!10524 = !{!55, !7, !831, !55}
!10525 = !DILocalVariable(name: "fd", arg: 1, scope: !10521, file: !10522, line: 58, type: !7)
!10526 = !DILocation(line: 58, column: 14, scope: !10521)
!10527 = !DILocalVariable(name: "buf", arg: 2, scope: !10521, file: !10522, line: 58, type: !831)
!10528 = !DILocation(line: 58, column: 30, scope: !10521)
!10529 = !DILocalVariable(name: "count", arg: 3, scope: !10521, file: !10522, line: 58, type: !55)
!10530 = !DILocation(line: 58, column: 42, scope: !10521)
!10531 = !DILocalVariable(name: "total", scope: !10521, file: !10522, line: 60, type: !55)
!10532 = !DILocation(line: 60, column: 10, scope: !10521)
!10533 = !DILocalVariable(name: "ptr", scope: !10521, file: !10522, line: 61, type: !183)
!10534 = !DILocation(line: 61, column: 15, scope: !10521)
!10535 = !DILocation(line: 61, column: 36, scope: !10521)
!10536 = !DILocation(line: 63, column: 3, scope: !10521)
!10537 = !DILocation(line: 63, column: 10, scope: !10521)
!10538 = !DILocation(line: 63, column: 16, scope: !10521)
!10539 = !DILocalVariable(name: "n_rw", scope: !10540, file: !10522, line: 65, type: !55)
!10540 = distinct !DILexicalBlock(scope: !10521, file: !10522, line: 64, column: 5)
!10541 = !DILocation(line: 65, column: 14, scope: !10540)
!10542 = !DILocation(line: 65, column: 30, scope: !10540)
!10543 = !DILocation(line: 65, column: 34, scope: !10540)
!10544 = !DILocation(line: 65, column: 39, scope: !10540)
!10545 = !DILocation(line: 65, column: 21, scope: !10540)
!10546 = !DILocation(line: 66, column: 11, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10540, file: !10522, line: 66, column: 11)
!10548 = !DILocation(line: 66, column: 16, scope: !10547)
!10549 = !DILocation(line: 66, column: 11, scope: !10540)
!10550 = !DILocation(line: 67, column: 9, scope: !10547)
!10551 = !DILocation(line: 68, column: 11, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10540, file: !10522, line: 68, column: 11)
!10553 = !DILocation(line: 68, column: 16, scope: !10552)
!10554 = !DILocation(line: 68, column: 11, scope: !10540)
!10555 = !DILocation(line: 70, column: 11, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10552, file: !10522, line: 69, column: 9)
!10557 = !DILocation(line: 70, column: 17, scope: !10556)
!10558 = !DILocation(line: 71, column: 11, scope: !10556)
!10559 = !DILocation(line: 73, column: 16, scope: !10540)
!10560 = !DILocation(line: 73, column: 13, scope: !10540)
!10561 = !DILocation(line: 74, column: 14, scope: !10540)
!10562 = !DILocation(line: 74, column: 11, scope: !10540)
!10563 = !DILocation(line: 75, column: 16, scope: !10540)
!10564 = !DILocation(line: 75, column: 13, scope: !10540)
!10565 = distinct !{!10565, !10536, !10566}
!10566 = !DILocation(line: 76, column: 5, scope: !10521)
!10567 = !DILocation(line: 78, column: 10, scope: !10521)
!10568 = !DILocation(line: 78, column: 3, scope: !10521)
!10569 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !800, file: !800, line: 150, type: !10570, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{!55, !10572}
!10572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!10573 = !DILocalVariable(name: "table", arg: 1, scope: !10569, file: !800, line: 150, type: !10572)
!10574 = !DILocation(line: 150, column: 39, scope: !10569)
!10575 = !DILocation(line: 152, column: 10, scope: !10569)
!10576 = !DILocation(line: 152, column: 17, scope: !10569)
!10577 = !DILocation(line: 152, column: 3, scope: !10569)
!10578 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !800, file: !800, line: 158, type: !10570, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10579 = !DILocalVariable(name: "table", arg: 1, scope: !10578, file: !800, line: 158, type: !10572)
!10580 = !DILocation(line: 158, column: 44, scope: !10578)
!10581 = !DILocation(line: 160, column: 10, scope: !10578)
!10582 = !DILocation(line: 160, column: 17, scope: !10578)
!10583 = !DILocation(line: 160, column: 3, scope: !10578)
!10584 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !800, file: !800, line: 166, type: !10570, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10585 = !DILocalVariable(name: "table", arg: 1, scope: !10584, file: !800, line: 166, type: !10572)
!10586 = !DILocation(line: 166, column: 39, scope: !10584)
!10587 = !DILocation(line: 168, column: 10, scope: !10584)
!10588 = !DILocation(line: 168, column: 17, scope: !10584)
!10589 = !DILocation(line: 168, column: 3, scope: !10584)
!10590 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !800, file: !800, line: 174, type: !10570, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10591 = !DILocalVariable(name: "table", arg: 1, scope: !10590, file: !800, line: 174, type: !10572)
!10592 = !DILocation(line: 174, column: 47, scope: !10590)
!10593 = !DILocalVariable(name: "bucket", scope: !10590, file: !800, line: 176, type: !809)
!10594 = !DILocation(line: 176, column: 28, scope: !10590)
!10595 = !DILocalVariable(name: "max_bucket_length", scope: !10590, file: !800, line: 177, type: !55)
!10596 = !DILocation(line: 177, column: 10, scope: !10590)
!10597 = !DILocation(line: 179, column: 17, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10590, file: !800, line: 179, column: 3)
!10599 = !DILocation(line: 179, column: 24, scope: !10598)
!10600 = !DILocation(line: 179, column: 15, scope: !10598)
!10601 = !DILocation(line: 179, column: 8, scope: !10598)
!10602 = !DILocation(line: 179, column: 32, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10598, file: !800, line: 179, column: 3)
!10604 = !DILocation(line: 179, column: 41, scope: !10603)
!10605 = !DILocation(line: 179, column: 48, scope: !10603)
!10606 = !DILocation(line: 179, column: 39, scope: !10603)
!10607 = !DILocation(line: 179, column: 3, scope: !10598)
!10608 = !DILocation(line: 181, column: 11, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !800, line: 181, column: 11)
!10610 = distinct !DILexicalBlock(scope: !10603, file: !800, line: 180, column: 5)
!10611 = !DILocation(line: 181, column: 19, scope: !10609)
!10612 = !DILocation(line: 181, column: 11, scope: !10610)
!10613 = !DILocalVariable(name: "cursor", scope: !10614, file: !800, line: 183, type: !809)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !800, line: 182, column: 9)
!10615 = !DILocation(line: 183, column: 36, scope: !10614)
!10616 = !DILocation(line: 183, column: 45, scope: !10614)
!10617 = !DILocalVariable(name: "bucket_length", scope: !10614, file: !800, line: 184, type: !55)
!10618 = !DILocation(line: 184, column: 18, scope: !10614)
!10619 = !DILocation(line: 186, column: 11, scope: !10614)
!10620 = !DILocation(line: 186, column: 27, scope: !10614)
!10621 = !DILocation(line: 186, column: 35, scope: !10614)
!10622 = !DILocation(line: 186, column: 25, scope: !10614)
!10623 = !DILocation(line: 186, column: 41, scope: !10614)
!10624 = !DILocation(line: 187, column: 26, scope: !10614)
!10625 = distinct !{!10625, !10619, !10624}
!10626 = !DILocation(line: 189, column: 15, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10614, file: !800, line: 189, column: 15)
!10628 = !DILocation(line: 189, column: 31, scope: !10627)
!10629 = !DILocation(line: 189, column: 29, scope: !10627)
!10630 = !DILocation(line: 189, column: 15, scope: !10614)
!10631 = !DILocation(line: 190, column: 33, scope: !10627)
!10632 = !DILocation(line: 190, column: 31, scope: !10627)
!10633 = !DILocation(line: 190, column: 13, scope: !10627)
!10634 = !DILocation(line: 191, column: 9, scope: !10614)
!10635 = !DILocation(line: 192, column: 5, scope: !10610)
!10636 = !DILocation(line: 179, column: 68, scope: !10603)
!10637 = !DILocation(line: 179, column: 3, scope: !10603)
!10638 = distinct !{!10638, !10607, !10639}
!10639 = !DILocation(line: 192, column: 5, scope: !10598)
!10640 = !DILocation(line: 194, column: 10, scope: !10590)
!10641 = !DILocation(line: 194, column: 3, scope: !10590)
!10642 = distinct !DISubprogram(name: "hash_table_ok", scope: !800, file: !800, line: 201, type: !10643, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{!142, !10572}
!10645 = !DILocalVariable(name: "table", arg: 1, scope: !10642, file: !800, line: 201, type: !10572)
!10646 = !DILocation(line: 201, column: 34, scope: !10642)
!10647 = !DILocalVariable(name: "bucket", scope: !10642, file: !800, line: 203, type: !809)
!10648 = !DILocation(line: 203, column: 28, scope: !10642)
!10649 = !DILocalVariable(name: "n_buckets_used", scope: !10642, file: !800, line: 204, type: !55)
!10650 = !DILocation(line: 204, column: 10, scope: !10642)
!10651 = !DILocalVariable(name: "n_entries", scope: !10642, file: !800, line: 205, type: !55)
!10652 = !DILocation(line: 205, column: 10, scope: !10642)
!10653 = !DILocation(line: 207, column: 17, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10642, file: !800, line: 207, column: 3)
!10655 = !DILocation(line: 207, column: 24, scope: !10654)
!10656 = !DILocation(line: 207, column: 15, scope: !10654)
!10657 = !DILocation(line: 207, column: 8, scope: !10654)
!10658 = !DILocation(line: 207, column: 32, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10654, file: !800, line: 207, column: 3)
!10660 = !DILocation(line: 207, column: 41, scope: !10659)
!10661 = !DILocation(line: 207, column: 48, scope: !10659)
!10662 = !DILocation(line: 207, column: 39, scope: !10659)
!10663 = !DILocation(line: 207, column: 3, scope: !10654)
!10664 = !DILocation(line: 209, column: 11, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !800, line: 209, column: 11)
!10666 = distinct !DILexicalBlock(scope: !10659, file: !800, line: 208, column: 5)
!10667 = !DILocation(line: 209, column: 19, scope: !10665)
!10668 = !DILocation(line: 209, column: 11, scope: !10666)
!10669 = !DILocalVariable(name: "cursor", scope: !10670, file: !800, line: 211, type: !809)
!10670 = distinct !DILexicalBlock(scope: !10665, file: !800, line: 210, column: 9)
!10671 = !DILocation(line: 211, column: 36, scope: !10670)
!10672 = !DILocation(line: 211, column: 45, scope: !10670)
!10673 = !DILocation(line: 214, column: 25, scope: !10670)
!10674 = !DILocation(line: 215, column: 20, scope: !10670)
!10675 = !DILocation(line: 218, column: 11, scope: !10670)
!10676 = !DILocation(line: 218, column: 27, scope: !10670)
!10677 = !DILocation(line: 218, column: 35, scope: !10670)
!10678 = !DILocation(line: 218, column: 25, scope: !10670)
!10679 = !DILocation(line: 218, column: 41, scope: !10670)
!10680 = !DILocation(line: 219, column: 22, scope: !10670)
!10681 = distinct !{!10681, !10675, !10680}
!10682 = !DILocation(line: 220, column: 9, scope: !10670)
!10683 = !DILocation(line: 221, column: 5, scope: !10666)
!10684 = !DILocation(line: 207, column: 68, scope: !10659)
!10685 = !DILocation(line: 207, column: 3, scope: !10659)
!10686 = distinct !{!10686, !10663, !10687}
!10687 = !DILocation(line: 221, column: 5, scope: !10654)
!10688 = !DILocation(line: 223, column: 7, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10642, file: !800, line: 223, column: 7)
!10690 = !DILocation(line: 223, column: 25, scope: !10689)
!10691 = !DILocation(line: 223, column: 32, scope: !10689)
!10692 = !DILocation(line: 223, column: 22, scope: !10689)
!10693 = !DILocation(line: 223, column: 47, scope: !10689)
!10694 = !DILocation(line: 223, column: 50, scope: !10689)
!10695 = !DILocation(line: 223, column: 63, scope: !10689)
!10696 = !DILocation(line: 223, column: 70, scope: !10689)
!10697 = !DILocation(line: 223, column: 60, scope: !10689)
!10698 = !DILocation(line: 223, column: 7, scope: !10642)
!10699 = !DILocation(line: 224, column: 5, scope: !10689)
!10700 = !DILocation(line: 226, column: 3, scope: !10642)
!10701 = !DILocation(line: 227, column: 1, scope: !10642)
!10702 = distinct !DISubprogram(name: "hash_print_statistics", scope: !800, file: !800, line: 230, type: !10703, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{null, !10572, !10705}
!10705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10706, size: 64)
!10706 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !10707)
!10707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !10708)
!10708 = !{!10709, !10710, !10711, !10712, !10713, !10714, !10715, !10716, !10717, !10718, !10719, !10720, !10721, !10722, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731, !10732, !10733, !10734, !10735, !10736, !10737, !10738}
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10707, file: !4, line: 51, baseType: !7, size: 32)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10707, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10707, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10707, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!10713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10707, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10707, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10707, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10707, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10707, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10707, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10707, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10707, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!10721 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10707, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10707, file: !4, line: 70, baseType: !10723, size: 64, offset: 832)
!10723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10707, size: 64)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10707, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10707, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10707, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10707, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10707, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10707, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10707, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10707, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !10707, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !10707, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !10707, file: !4, line: 93, baseType: !10723, size: 64, offset: 1344)
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !10707, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10707, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10707, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10707, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!10739 = !DILocalVariable(name: "table", arg: 1, scope: !10702, file: !800, line: 230, type: !10572)
!10740 = !DILocation(line: 230, column: 42, scope: !10702)
!10741 = !DILocalVariable(name: "stream", arg: 2, scope: !10702, file: !800, line: 230, type: !10705)
!10742 = !DILocation(line: 230, column: 55, scope: !10702)
!10743 = !DILocalVariable(name: "n_entries", scope: !10702, file: !800, line: 232, type: !55)
!10744 = !DILocation(line: 232, column: 10, scope: !10702)
!10745 = !DILocation(line: 232, column: 42, scope: !10702)
!10746 = !DILocation(line: 232, column: 22, scope: !10702)
!10747 = !DILocalVariable(name: "n_buckets", scope: !10702, file: !800, line: 233, type: !55)
!10748 = !DILocation(line: 233, column: 10, scope: !10702)
!10749 = !DILocation(line: 233, column: 42, scope: !10702)
!10750 = !DILocation(line: 233, column: 22, scope: !10702)
!10751 = !DILocalVariable(name: "n_buckets_used", scope: !10702, file: !800, line: 234, type: !55)
!10752 = !DILocation(line: 234, column: 10, scope: !10702)
!10753 = !DILocation(line: 234, column: 52, scope: !10702)
!10754 = !DILocation(line: 234, column: 27, scope: !10702)
!10755 = !DILocalVariable(name: "max_bucket_length", scope: !10702, file: !800, line: 235, type: !55)
!10756 = !DILocation(line: 235, column: 10, scope: !10702)
!10757 = !DILocation(line: 235, column: 58, scope: !10702)
!10758 = !DILocation(line: 235, column: 30, scope: !10702)
!10759 = !DILocation(line: 237, column: 12, scope: !10702)
!10760 = !DILocation(line: 237, column: 68, scope: !10702)
!10761 = !DILocation(line: 237, column: 3, scope: !10702)
!10762 = !DILocation(line: 238, column: 12, scope: !10702)
!10763 = !DILocation(line: 238, column: 68, scope: !10702)
!10764 = !DILocation(line: 238, column: 3, scope: !10702)
!10765 = !DILocation(line: 239, column: 12, scope: !10702)
!10766 = !DILocation(line: 240, column: 32, scope: !10702)
!10767 = !DILocation(line: 241, column: 21, scope: !10702)
!10768 = !DILocation(line: 241, column: 19, scope: !10702)
!10769 = !DILocation(line: 241, column: 39, scope: !10702)
!10770 = !DILocation(line: 241, column: 37, scope: !10702)
!10771 = !DILocation(line: 239, column: 3, scope: !10702)
!10772 = !DILocation(line: 242, column: 12, scope: !10702)
!10773 = !DILocation(line: 243, column: 32, scope: !10702)
!10774 = !DILocation(line: 242, column: 3, scope: !10702)
!10775 = !DILocation(line: 244, column: 1, scope: !10702)
!10776 = distinct !DISubprogram(name: "hash_lookup", scope: !800, file: !800, line: 261, type: !10777, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10777 = !DISubroutineType(types: !10778)
!10778 = !{!53, !10572, !831}
!10779 = !DILocalVariable(name: "table", arg: 1, scope: !10776, file: !800, line: 261, type: !10572)
!10780 = !DILocation(line: 261, column: 32, scope: !10776)
!10781 = !DILocalVariable(name: "entry", arg: 2, scope: !10776, file: !800, line: 261, type: !831)
!10782 = !DILocation(line: 261, column: 51, scope: !10776)
!10783 = !DILocalVariable(name: "bucket", scope: !10776, file: !800, line: 263, type: !809)
!10784 = !DILocation(line: 263, column: 28, scope: !10776)
!10785 = !DILocation(line: 263, column: 50, scope: !10776)
!10786 = !DILocation(line: 263, column: 57, scope: !10776)
!10787 = !DILocation(line: 263, column: 37, scope: !10776)
!10788 = !DILocalVariable(name: "cursor", scope: !10776, file: !800, line: 264, type: !809)
!10789 = !DILocation(line: 264, column: 28, scope: !10776)
!10790 = !DILocation(line: 266, column: 7, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10776, file: !800, line: 266, column: 7)
!10792 = !DILocation(line: 266, column: 15, scope: !10791)
!10793 = !DILocation(line: 266, column: 20, scope: !10791)
!10794 = !DILocation(line: 266, column: 7, scope: !10776)
!10795 = !DILocation(line: 267, column: 5, scope: !10791)
!10796 = !DILocation(line: 269, column: 17, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10776, file: !800, line: 269, column: 3)
!10798 = !DILocation(line: 269, column: 15, scope: !10797)
!10799 = !DILocation(line: 269, column: 8, scope: !10797)
!10800 = !DILocation(line: 269, column: 25, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !800, line: 269, column: 3)
!10802 = !DILocation(line: 269, column: 3, scope: !10797)
!10803 = !DILocation(line: 270, column: 9, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10801, file: !800, line: 270, column: 9)
!10805 = !DILocation(line: 270, column: 18, scope: !10804)
!10806 = !DILocation(line: 270, column: 26, scope: !10804)
!10807 = !DILocation(line: 270, column: 15, scope: !10804)
!10808 = !DILocation(line: 270, column: 31, scope: !10804)
!10809 = !DILocation(line: 270, column: 34, scope: !10804)
!10810 = !DILocation(line: 270, column: 41, scope: !10804)
!10811 = !DILocation(line: 270, column: 53, scope: !10804)
!10812 = !DILocation(line: 270, column: 60, scope: !10804)
!10813 = !DILocation(line: 270, column: 68, scope: !10804)
!10814 = !DILocation(line: 270, column: 9, scope: !10801)
!10815 = !DILocation(line: 271, column: 14, scope: !10804)
!10816 = !DILocation(line: 271, column: 22, scope: !10804)
!10817 = !DILocation(line: 271, column: 7, scope: !10804)
!10818 = !DILocation(line: 270, column: 72, scope: !10804)
!10819 = !DILocation(line: 269, column: 42, scope: !10801)
!10820 = !DILocation(line: 269, column: 50, scope: !10801)
!10821 = !DILocation(line: 269, column: 40, scope: !10801)
!10822 = !DILocation(line: 269, column: 3, scope: !10801)
!10823 = distinct !{!10823, !10802, !10824}
!10824 = !DILocation(line: 271, column: 22, scope: !10797)
!10825 = !DILocation(line: 273, column: 3, scope: !10776)
!10826 = !DILocation(line: 274, column: 1, scope: !10776)
!10827 = distinct !DISubprogram(name: "safe_hasher", scope: !800, file: !800, line: 249, type: !10828, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!803, !10572, !831}
!10830 = !DILocalVariable(name: "table", arg: 1, scope: !10827, file: !800, line: 249, type: !10572)
!10831 = !DILocation(line: 249, column: 32, scope: !10827)
!10832 = !DILocalVariable(name: "key", arg: 2, scope: !10827, file: !800, line: 249, type: !831)
!10833 = !DILocation(line: 249, column: 51, scope: !10827)
!10834 = !DILocalVariable(name: "n", scope: !10827, file: !800, line: 251, type: !55)
!10835 = !DILocation(line: 251, column: 10, scope: !10827)
!10836 = !DILocation(line: 251, column: 14, scope: !10827)
!10837 = !DILocation(line: 251, column: 21, scope: !10827)
!10838 = !DILocation(line: 251, column: 29, scope: !10827)
!10839 = !DILocation(line: 251, column: 34, scope: !10827)
!10840 = !DILocation(line: 251, column: 41, scope: !10827)
!10841 = !DILocation(line: 252, column: 10, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10827, file: !800, line: 252, column: 7)
!10843 = !DILocation(line: 252, column: 14, scope: !10842)
!10844 = !DILocation(line: 252, column: 21, scope: !10842)
!10845 = !DILocation(line: 252, column: 12, scope: !10842)
!10846 = !DILocation(line: 252, column: 7, scope: !10827)
!10847 = !DILocation(line: 253, column: 5, scope: !10842)
!10848 = !DILocation(line: 254, column: 10, scope: !10827)
!10849 = !DILocation(line: 254, column: 17, scope: !10827)
!10850 = !DILocation(line: 254, column: 26, scope: !10827)
!10851 = !DILocation(line: 254, column: 24, scope: !10827)
!10852 = !DILocation(line: 254, column: 3, scope: !10827)
!10853 = distinct !DISubprogram(name: "hash_get_first", scope: !800, file: !800, line: 288, type: !10854, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10854 = !DISubroutineType(types: !10855)
!10855 = !{!53, !10572}
!10856 = !DILocalVariable(name: "table", arg: 1, scope: !10853, file: !800, line: 288, type: !10572)
!10857 = !DILocation(line: 288, column: 35, scope: !10853)
!10858 = !DILocalVariable(name: "bucket", scope: !10853, file: !800, line: 290, type: !809)
!10859 = !DILocation(line: 290, column: 28, scope: !10853)
!10860 = !DILocation(line: 292, column: 7, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10853, file: !800, line: 292, column: 7)
!10862 = !DILocation(line: 292, column: 14, scope: !10861)
!10863 = !DILocation(line: 292, column: 24, scope: !10861)
!10864 = !DILocation(line: 292, column: 7, scope: !10853)
!10865 = !DILocation(line: 293, column: 5, scope: !10861)
!10866 = !DILocation(line: 295, column: 17, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10853, file: !800, line: 295, column: 3)
!10868 = !DILocation(line: 295, column: 24, scope: !10867)
!10869 = !DILocation(line: 295, column: 15, scope: !10867)
!10870 = !DILocation(line: 295, column: 8, scope: !10867)
!10871 = !DILocation(line: 296, column: 12, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !800, line: 296, column: 9)
!10873 = distinct !DILexicalBlock(scope: !10867, file: !800, line: 295, column: 3)
!10874 = !DILocation(line: 296, column: 21, scope: !10872)
!10875 = !DILocation(line: 296, column: 28, scope: !10872)
!10876 = !DILocation(line: 296, column: 19, scope: !10872)
!10877 = !DILocation(line: 296, column: 9, scope: !10873)
!10878 = !DILocation(line: 297, column: 7, scope: !10872)
!10879 = !DILocation(line: 298, column: 14, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10872, file: !800, line: 298, column: 14)
!10881 = !DILocation(line: 298, column: 22, scope: !10880)
!10882 = !DILocation(line: 298, column: 14, scope: !10872)
!10883 = !DILocation(line: 299, column: 14, scope: !10880)
!10884 = !DILocation(line: 299, column: 22, scope: !10880)
!10885 = !DILocation(line: 299, column: 7, scope: !10880)
!10886 = !DILocation(line: 296, column: 40, scope: !10872)
!10887 = !DILocation(line: 295, column: 40, scope: !10873)
!10888 = !DILocation(line: 295, column: 3, scope: !10873)
!10889 = distinct !{!10889, !10890, !10891}
!10890 = !DILocation(line: 295, column: 3, scope: !10867)
!10891 = !DILocation(line: 299, column: 22, scope: !10867)
!10892 = !DILocation(line: 300, column: 1, scope: !10853)
!10893 = distinct !DISubprogram(name: "hash_get_next", scope: !800, file: !800, line: 307, type: !10777, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10894 = !DILocalVariable(name: "table", arg: 1, scope: !10893, file: !800, line: 307, type: !10572)
!10895 = !DILocation(line: 307, column: 34, scope: !10893)
!10896 = !DILocalVariable(name: "entry", arg: 2, scope: !10893, file: !800, line: 307, type: !831)
!10897 = !DILocation(line: 307, column: 53, scope: !10893)
!10898 = !DILocalVariable(name: "bucket", scope: !10893, file: !800, line: 309, type: !809)
!10899 = !DILocation(line: 309, column: 28, scope: !10893)
!10900 = !DILocation(line: 309, column: 50, scope: !10893)
!10901 = !DILocation(line: 309, column: 57, scope: !10893)
!10902 = !DILocation(line: 309, column: 37, scope: !10893)
!10903 = !DILocalVariable(name: "cursor", scope: !10893, file: !800, line: 310, type: !809)
!10904 = !DILocation(line: 310, column: 28, scope: !10893)
!10905 = !DILocation(line: 313, column: 12, scope: !10893)
!10906 = !DILocation(line: 313, column: 10, scope: !10893)
!10907 = !DILocation(line: 314, column: 3, scope: !10893)
!10908 = !DILocation(line: 316, column: 11, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !800, line: 316, column: 11)
!10910 = distinct !DILexicalBlock(scope: !10893, file: !800, line: 315, column: 5)
!10911 = !DILocation(line: 316, column: 19, scope: !10909)
!10912 = !DILocation(line: 316, column: 27, scope: !10909)
!10913 = !DILocation(line: 316, column: 24, scope: !10909)
!10914 = !DILocation(line: 316, column: 33, scope: !10909)
!10915 = !DILocation(line: 316, column: 36, scope: !10909)
!10916 = !DILocation(line: 316, column: 44, scope: !10909)
!10917 = !DILocation(line: 316, column: 11, scope: !10910)
!10918 = !DILocation(line: 317, column: 16, scope: !10909)
!10919 = !DILocation(line: 317, column: 24, scope: !10909)
!10920 = !DILocation(line: 317, column: 30, scope: !10909)
!10921 = !DILocation(line: 317, column: 9, scope: !10909)
!10922 = !DILocation(line: 318, column: 16, scope: !10910)
!10923 = !DILocation(line: 318, column: 24, scope: !10910)
!10924 = !DILocation(line: 318, column: 14, scope: !10910)
!10925 = !DILocation(line: 319, column: 5, scope: !10910)
!10926 = !DILocation(line: 320, column: 10, scope: !10893)
!10927 = !DILocation(line: 320, column: 17, scope: !10893)
!10928 = distinct !{!10928, !10907, !10929}
!10929 = !DILocation(line: 320, column: 24, scope: !10893)
!10930 = !DILocation(line: 323, column: 3, scope: !10893)
!10931 = !DILocation(line: 323, column: 10, scope: !10893)
!10932 = !DILocation(line: 323, column: 21, scope: !10893)
!10933 = !DILocation(line: 323, column: 28, scope: !10893)
!10934 = !DILocation(line: 323, column: 19, scope: !10893)
!10935 = !DILocation(line: 324, column: 9, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10893, file: !800, line: 324, column: 9)
!10937 = !DILocation(line: 324, column: 17, scope: !10936)
!10938 = !DILocation(line: 324, column: 9, scope: !10893)
!10939 = !DILocation(line: 325, column: 14, scope: !10936)
!10940 = !DILocation(line: 325, column: 22, scope: !10936)
!10941 = !DILocation(line: 325, column: 7, scope: !10936)
!10942 = distinct !{!10942, !10930, !10943}
!10943 = !DILocation(line: 325, column: 22, scope: !10893)
!10944 = !DILocation(line: 328, column: 3, scope: !10893)
!10945 = !DILocation(line: 329, column: 1, scope: !10893)
!10946 = distinct !DISubprogram(name: "hash_get_entries", scope: !800, file: !800, line: 336, type: !10947, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!55, !10572, !844, !55}
!10949 = !DILocalVariable(name: "table", arg: 1, scope: !10946, file: !800, line: 336, type: !10572)
!10950 = !DILocation(line: 336, column: 37, scope: !10946)
!10951 = !DILocalVariable(name: "buffer", arg: 2, scope: !10946, file: !800, line: 336, type: !844)
!10952 = !DILocation(line: 336, column: 51, scope: !10946)
!10953 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !10946, file: !800, line: 337, type: !55)
!10954 = !DILocation(line: 337, column: 26, scope: !10946)
!10955 = !DILocalVariable(name: "counter", scope: !10946, file: !800, line: 339, type: !55)
!10956 = !DILocation(line: 339, column: 10, scope: !10946)
!10957 = !DILocalVariable(name: "bucket", scope: !10946, file: !800, line: 340, type: !809)
!10958 = !DILocation(line: 340, column: 28, scope: !10946)
!10959 = !DILocalVariable(name: "cursor", scope: !10946, file: !800, line: 341, type: !809)
!10960 = !DILocation(line: 341, column: 28, scope: !10946)
!10961 = !DILocation(line: 343, column: 17, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10946, file: !800, line: 343, column: 3)
!10963 = !DILocation(line: 343, column: 24, scope: !10962)
!10964 = !DILocation(line: 343, column: 15, scope: !10962)
!10965 = !DILocation(line: 343, column: 8, scope: !10962)
!10966 = !DILocation(line: 343, column: 32, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10962, file: !800, line: 343, column: 3)
!10968 = !DILocation(line: 343, column: 41, scope: !10967)
!10969 = !DILocation(line: 343, column: 48, scope: !10967)
!10970 = !DILocation(line: 343, column: 39, scope: !10967)
!10971 = !DILocation(line: 343, column: 3, scope: !10962)
!10972 = !DILocation(line: 345, column: 11, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !800, line: 345, column: 11)
!10974 = distinct !DILexicalBlock(scope: !10967, file: !800, line: 344, column: 5)
!10975 = !DILocation(line: 345, column: 19, scope: !10973)
!10976 = !DILocation(line: 345, column: 11, scope: !10974)
!10977 = !DILocation(line: 347, column: 25, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !800, line: 347, column: 11)
!10979 = distinct !DILexicalBlock(scope: !10973, file: !800, line: 346, column: 9)
!10980 = !DILocation(line: 347, column: 23, scope: !10978)
!10981 = !DILocation(line: 347, column: 16, scope: !10978)
!10982 = !DILocation(line: 347, column: 33, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10978, file: !800, line: 347, column: 11)
!10984 = !DILocation(line: 347, column: 11, scope: !10978)
!10985 = !DILocation(line: 349, column: 19, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !800, line: 349, column: 19)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !800, line: 348, column: 13)
!10988 = !DILocation(line: 349, column: 30, scope: !10986)
!10989 = !DILocation(line: 349, column: 27, scope: !10986)
!10990 = !DILocation(line: 349, column: 19, scope: !10987)
!10991 = !DILocation(line: 350, column: 24, scope: !10986)
!10992 = !DILocation(line: 350, column: 17, scope: !10986)
!10993 = !DILocation(line: 351, column: 35, scope: !10987)
!10994 = !DILocation(line: 351, column: 43, scope: !10987)
!10995 = !DILocation(line: 351, column: 15, scope: !10987)
!10996 = !DILocation(line: 351, column: 29, scope: !10987)
!10997 = !DILocation(line: 351, column: 33, scope: !10987)
!10998 = !DILocation(line: 352, column: 13, scope: !10987)
!10999 = !DILocation(line: 347, column: 50, scope: !10983)
!11000 = !DILocation(line: 347, column: 58, scope: !10983)
!11001 = !DILocation(line: 347, column: 48, scope: !10983)
!11002 = !DILocation(line: 347, column: 11, scope: !10983)
!11003 = distinct !{!11003, !10984, !11004}
!11004 = !DILocation(line: 352, column: 13, scope: !10978)
!11005 = !DILocation(line: 353, column: 9, scope: !10979)
!11006 = !DILocation(line: 354, column: 5, scope: !10974)
!11007 = !DILocation(line: 343, column: 68, scope: !10967)
!11008 = !DILocation(line: 343, column: 3, scope: !10967)
!11009 = distinct !{!11009, !10971, !11010}
!11010 = !DILocation(line: 354, column: 5, scope: !10962)
!11011 = !DILocation(line: 356, column: 10, scope: !10946)
!11012 = !DILocation(line: 356, column: 3, scope: !10946)
!11013 = !DILocation(line: 357, column: 1, scope: !10946)
!11014 = distinct !DISubprogram(name: "hash_do_for_each", scope: !800, file: !800, line: 368, type: !11015, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{!55, !10572, !11017, !53}
!11017 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !177, line: 51, baseType: !11018)
!11018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11019, size: 64)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!142, !53, !53}
!11021 = !DILocalVariable(name: "table", arg: 1, scope: !11014, file: !800, line: 368, type: !10572)
!11022 = !DILocation(line: 368, column: 37, scope: !11014)
!11023 = !DILocalVariable(name: "processor", arg: 2, scope: !11014, file: !800, line: 368, type: !11017)
!11024 = !DILocation(line: 368, column: 59, scope: !11014)
!11025 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11014, file: !800, line: 369, type: !53)
!11026 = !DILocation(line: 369, column: 25, scope: !11014)
!11027 = !DILocalVariable(name: "counter", scope: !11014, file: !800, line: 371, type: !55)
!11028 = !DILocation(line: 371, column: 10, scope: !11014)
!11029 = !DILocalVariable(name: "bucket", scope: !11014, file: !800, line: 372, type: !809)
!11030 = !DILocation(line: 372, column: 28, scope: !11014)
!11031 = !DILocalVariable(name: "cursor", scope: !11014, file: !800, line: 373, type: !809)
!11032 = !DILocation(line: 373, column: 28, scope: !11014)
!11033 = !DILocation(line: 375, column: 17, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11014, file: !800, line: 375, column: 3)
!11035 = !DILocation(line: 375, column: 24, scope: !11034)
!11036 = !DILocation(line: 375, column: 15, scope: !11034)
!11037 = !DILocation(line: 375, column: 8, scope: !11034)
!11038 = !DILocation(line: 375, column: 32, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11034, file: !800, line: 375, column: 3)
!11040 = !DILocation(line: 375, column: 41, scope: !11039)
!11041 = !DILocation(line: 375, column: 48, scope: !11039)
!11042 = !DILocation(line: 375, column: 39, scope: !11039)
!11043 = !DILocation(line: 375, column: 3, scope: !11034)
!11044 = !DILocation(line: 377, column: 11, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !800, line: 377, column: 11)
!11046 = distinct !DILexicalBlock(scope: !11039, file: !800, line: 376, column: 5)
!11047 = !DILocation(line: 377, column: 19, scope: !11045)
!11048 = !DILocation(line: 377, column: 11, scope: !11046)
!11049 = !DILocation(line: 379, column: 25, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !800, line: 379, column: 11)
!11051 = distinct !DILexicalBlock(scope: !11045, file: !800, line: 378, column: 9)
!11052 = !DILocation(line: 379, column: 23, scope: !11050)
!11053 = !DILocation(line: 379, column: 16, scope: !11050)
!11054 = !DILocation(line: 379, column: 33, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11050, file: !800, line: 379, column: 11)
!11056 = !DILocation(line: 379, column: 11, scope: !11050)
!11057 = !DILocation(line: 381, column: 21, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !800, line: 381, column: 19)
!11059 = distinct !DILexicalBlock(scope: !11055, file: !800, line: 380, column: 13)
!11060 = !DILocation(line: 381, column: 32, scope: !11058)
!11061 = !DILocation(line: 381, column: 40, scope: !11058)
!11062 = !DILocation(line: 381, column: 46, scope: !11058)
!11063 = !DILocation(line: 381, column: 19, scope: !11059)
!11064 = !DILocation(line: 382, column: 24, scope: !11058)
!11065 = !DILocation(line: 382, column: 17, scope: !11058)
!11066 = !DILocation(line: 383, column: 22, scope: !11059)
!11067 = !DILocation(line: 384, column: 13, scope: !11059)
!11068 = !DILocation(line: 379, column: 50, scope: !11055)
!11069 = !DILocation(line: 379, column: 58, scope: !11055)
!11070 = !DILocation(line: 379, column: 48, scope: !11055)
!11071 = !DILocation(line: 379, column: 11, scope: !11055)
!11072 = distinct !{!11072, !11056, !11073}
!11073 = !DILocation(line: 384, column: 13, scope: !11050)
!11074 = !DILocation(line: 385, column: 9, scope: !11051)
!11075 = !DILocation(line: 386, column: 5, scope: !11046)
!11076 = !DILocation(line: 375, column: 68, scope: !11039)
!11077 = !DILocation(line: 375, column: 3, scope: !11039)
!11078 = distinct !{!11078, !11043, !11079}
!11079 = !DILocation(line: 386, column: 5, scope: !11034)
!11080 = !DILocation(line: 388, column: 10, scope: !11014)
!11081 = !DILocation(line: 388, column: 3, scope: !11014)
!11082 = !DILocation(line: 389, column: 1, scope: !11014)
!11083 = distinct !DISubprogram(name: "hash_string", scope: !800, file: !800, line: 428, type: !11084, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!55, !183, !55}
!11086 = !DILocalVariable(name: "string", arg: 1, scope: !11083, file: !800, line: 428, type: !183)
!11087 = !DILocation(line: 428, column: 26, scope: !11083)
!11088 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11083, file: !800, line: 428, type: !55)
!11089 = !DILocation(line: 428, column: 41, scope: !11083)
!11090 = !DILocalVariable(name: "value", scope: !11083, file: !800, line: 430, type: !55)
!11091 = !DILocation(line: 430, column: 10, scope: !11083)
!11092 = !DILocalVariable(name: "ch", scope: !11083, file: !800, line: 431, type: !573)
!11093 = !DILocation(line: 431, column: 17, scope: !11083)
!11094 = !DILocation(line: 433, column: 3, scope: !11083)
!11095 = !DILocation(line: 433, column: 17, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !800, line: 433, column: 3)
!11097 = distinct !DILexicalBlock(scope: !11083, file: !800, line: 433, column: 3)
!11098 = !DILocation(line: 433, column: 16, scope: !11096)
!11099 = !DILocation(line: 433, column: 14, scope: !11096)
!11100 = !DILocation(line: 433, column: 3, scope: !11097)
!11101 = !DILocation(line: 434, column: 14, scope: !11096)
!11102 = !DILocation(line: 434, column: 20, scope: !11096)
!11103 = !DILocation(line: 434, column: 27, scope: !11096)
!11104 = !DILocation(line: 434, column: 25, scope: !11096)
!11105 = !DILocation(line: 434, column: 33, scope: !11096)
!11106 = !DILocation(line: 434, column: 31, scope: !11096)
!11107 = !DILocation(line: 434, column: 11, scope: !11096)
!11108 = !DILocation(line: 434, column: 5, scope: !11096)
!11109 = !DILocation(line: 433, column: 32, scope: !11096)
!11110 = !DILocation(line: 433, column: 3, scope: !11096)
!11111 = distinct !{!11111, !11100, !11112}
!11112 = !DILocation(line: 434, column: 33, scope: !11097)
!11113 = !DILocation(line: 435, column: 10, scope: !11083)
!11114 = !DILocation(line: 435, column: 3, scope: !11083)
!11115 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !800, file: !800, line: 479, type: !11116, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{null, !11118}
!11118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!11119 = !DILocalVariable(name: "tuning", arg: 1, scope: !11115, file: !800, line: 479, type: !11118)
!11120 = !DILocation(line: 479, column: 33, scope: !11115)
!11121 = !DILocation(line: 481, column: 4, scope: !11115)
!11122 = !DILocation(line: 481, column: 13, scope: !11115)
!11123 = !DILocation(line: 482, column: 1, scope: !11115)
!11124 = distinct !DISubprogram(name: "hash_initialize", scope: !800, file: !800, line: 594, type: !11125, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11125 = !DISubroutineType(types: !11126)
!11126 = !{!845, !55, !815, !827, !834, !839}
!11127 = !DILocalVariable(name: "candidate", arg: 1, scope: !11124, file: !800, line: 594, type: !55)
!11128 = !DILocation(line: 594, column: 25, scope: !11124)
!11129 = !DILocalVariable(name: "tuning", arg: 2, scope: !11124, file: !800, line: 594, type: !815)
!11130 = !DILocation(line: 594, column: 55, scope: !11124)
!11131 = !DILocalVariable(name: "hasher", arg: 3, scope: !11124, file: !800, line: 595, type: !827)
!11132 = !DILocation(line: 595, column: 30, scope: !11124)
!11133 = !DILocalVariable(name: "comparator", arg: 4, scope: !11124, file: !800, line: 595, type: !834)
!11134 = !DILocation(line: 595, column: 54, scope: !11124)
!11135 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11124, file: !800, line: 596, type: !839)
!11136 = !DILocation(line: 596, column: 34, scope: !11124)
!11137 = !DILocalVariable(name: "table", scope: !11124, file: !800, line: 598, type: !845)
!11138 = !DILocation(line: 598, column: 15, scope: !11124)
!11139 = !DILocation(line: 600, column: 7, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 600, column: 7)
!11141 = !DILocation(line: 600, column: 14, scope: !11140)
!11142 = !DILocation(line: 600, column: 7, scope: !11124)
!11143 = !DILocation(line: 601, column: 12, scope: !11140)
!11144 = !DILocation(line: 601, column: 5, scope: !11140)
!11145 = !DILocation(line: 602, column: 7, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 602, column: 7)
!11147 = !DILocation(line: 602, column: 18, scope: !11146)
!11148 = !DILocation(line: 602, column: 7, scope: !11124)
!11149 = !DILocation(line: 603, column: 16, scope: !11146)
!11150 = !DILocation(line: 603, column: 5, scope: !11146)
!11151 = !DILocation(line: 605, column: 11, scope: !11124)
!11152 = !DILocation(line: 605, column: 9, scope: !11124)
!11153 = !DILocation(line: 606, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 606, column: 7)
!11155 = !DILocation(line: 606, column: 13, scope: !11154)
!11156 = !DILocation(line: 606, column: 7, scope: !11124)
!11157 = !DILocation(line: 607, column: 5, scope: !11154)
!11158 = !DILocation(line: 609, column: 8, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 609, column: 7)
!11160 = !DILocation(line: 609, column: 7, scope: !11124)
!11161 = !DILocation(line: 610, column: 12, scope: !11159)
!11162 = !DILocation(line: 610, column: 5, scope: !11159)
!11163 = !DILocation(line: 611, column: 19, scope: !11124)
!11164 = !DILocation(line: 611, column: 3, scope: !11124)
!11165 = !DILocation(line: 611, column: 10, scope: !11124)
!11166 = !DILocation(line: 611, column: 17, scope: !11124)
!11167 = !DILocation(line: 612, column: 22, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 612, column: 7)
!11169 = !DILocation(line: 612, column: 8, scope: !11168)
!11170 = !DILocation(line: 612, column: 7, scope: !11124)
!11171 = !DILocation(line: 619, column: 7, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11168, file: !800, line: 613, column: 5)
!11173 = !DILocation(line: 622, column: 43, scope: !11124)
!11174 = !DILocation(line: 622, column: 54, scope: !11124)
!11175 = !DILocation(line: 622, column: 22, scope: !11124)
!11176 = !DILocation(line: 622, column: 3, scope: !11124)
!11177 = !DILocation(line: 622, column: 10, scope: !11124)
!11178 = !DILocation(line: 622, column: 20, scope: !11124)
!11179 = !DILocation(line: 623, column: 8, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 623, column: 7)
!11181 = !DILocation(line: 623, column: 15, scope: !11180)
!11182 = !DILocation(line: 623, column: 7, scope: !11124)
!11183 = !DILocation(line: 624, column: 5, scope: !11180)
!11184 = !DILocation(line: 626, column: 27, scope: !11124)
!11185 = !DILocation(line: 626, column: 34, scope: !11124)
!11186 = !DILocation(line: 626, column: 19, scope: !11124)
!11187 = !DILocation(line: 626, column: 3, scope: !11124)
!11188 = !DILocation(line: 626, column: 10, scope: !11124)
!11189 = !DILocation(line: 626, column: 17, scope: !11124)
!11190 = !DILocation(line: 627, column: 7, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11124, file: !800, line: 627, column: 7)
!11192 = !DILocation(line: 627, column: 14, scope: !11191)
!11193 = !DILocation(line: 627, column: 21, scope: !11191)
!11194 = !DILocation(line: 627, column: 7, scope: !11124)
!11195 = !DILocation(line: 628, column: 5, scope: !11191)
!11196 = !DILocation(line: 629, column: 25, scope: !11124)
!11197 = !DILocation(line: 629, column: 32, scope: !11124)
!11198 = !DILocation(line: 629, column: 41, scope: !11124)
!11199 = !DILocation(line: 629, column: 48, scope: !11124)
!11200 = !DILocation(line: 629, column: 39, scope: !11124)
!11201 = !DILocation(line: 629, column: 3, scope: !11124)
!11202 = !DILocation(line: 629, column: 10, scope: !11124)
!11203 = !DILocation(line: 629, column: 23, scope: !11124)
!11204 = !DILocation(line: 630, column: 3, scope: !11124)
!11205 = !DILocation(line: 630, column: 10, scope: !11124)
!11206 = !DILocation(line: 630, column: 25, scope: !11124)
!11207 = !DILocation(line: 631, column: 3, scope: !11124)
!11208 = !DILocation(line: 631, column: 10, scope: !11124)
!11209 = !DILocation(line: 631, column: 20, scope: !11124)
!11210 = !DILocation(line: 633, column: 19, scope: !11124)
!11211 = !DILocation(line: 633, column: 3, scope: !11124)
!11212 = !DILocation(line: 633, column: 10, scope: !11124)
!11213 = !DILocation(line: 633, column: 17, scope: !11124)
!11214 = !DILocation(line: 634, column: 23, scope: !11124)
!11215 = !DILocation(line: 634, column: 3, scope: !11124)
!11216 = !DILocation(line: 634, column: 10, scope: !11124)
!11217 = !DILocation(line: 634, column: 21, scope: !11124)
!11218 = !DILocation(line: 635, column: 23, scope: !11124)
!11219 = !DILocation(line: 635, column: 3, scope: !11124)
!11220 = !DILocation(line: 635, column: 10, scope: !11124)
!11221 = !DILocation(line: 635, column: 21, scope: !11124)
!11222 = !DILocation(line: 637, column: 3, scope: !11124)
!11223 = !DILocation(line: 637, column: 10, scope: !11124)
!11224 = !DILocation(line: 637, column: 26, scope: !11124)
!11225 = !DILocation(line: 641, column: 10, scope: !11124)
!11226 = !DILocation(line: 641, column: 3, scope: !11124)
!11227 = !DILabel(scope: !11124, name: "fail", file: !800, line: 643)
!11228 = !DILocation(line: 643, column: 2, scope: !11124)
!11229 = !DILocation(line: 644, column: 9, scope: !11124)
!11230 = !DILocation(line: 644, column: 3, scope: !11124)
!11231 = !DILocation(line: 645, column: 3, scope: !11124)
!11232 = !DILocation(line: 646, column: 1, scope: !11124)
!11233 = distinct !DISubprogram(name: "raw_hasher", scope: !800, file: !800, line: 486, type: !829, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11234 = !DILocalVariable(name: "data", arg: 1, scope: !11233, file: !800, line: 486, type: !831)
!11235 = !DILocation(line: 486, column: 25, scope: !11233)
!11236 = !DILocalVariable(name: "n", arg: 2, scope: !11233, file: !800, line: 486, type: !55)
!11237 = !DILocation(line: 486, column: 38, scope: !11233)
!11238 = !DILocalVariable(name: "val", scope: !11233, file: !800, line: 493, type: !55)
!11239 = !DILocation(line: 493, column: 10, scope: !11233)
!11240 = !DILocation(line: 493, column: 34, scope: !11233)
!11241 = !DILocation(line: 493, column: 25, scope: !11233)
!11242 = !DILocation(line: 493, column: 16, scope: !11233)
!11243 = !DILocation(line: 494, column: 10, scope: !11233)
!11244 = !DILocation(line: 494, column: 16, scope: !11233)
!11245 = !DILocation(line: 494, column: 14, scope: !11233)
!11246 = !DILocation(line: 494, column: 3, scope: !11233)
!11247 = distinct !DISubprogram(name: "raw_comparator", scope: !800, file: !800, line: 499, type: !836, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11248 = !DILocalVariable(name: "a", arg: 1, scope: !11247, file: !800, line: 499, type: !831)
!11249 = !DILocation(line: 499, column: 29, scope: !11247)
!11250 = !DILocalVariable(name: "b", arg: 2, scope: !11247, file: !800, line: 499, type: !831)
!11251 = !DILocation(line: 499, column: 44, scope: !11247)
!11252 = !DILocation(line: 501, column: 10, scope: !11247)
!11253 = !DILocation(line: 501, column: 15, scope: !11247)
!11254 = !DILocation(line: 501, column: 12, scope: !11247)
!11255 = !DILocation(line: 501, column: 3, scope: !11247)
!11256 = distinct !DISubprogram(name: "check_tuning", scope: !800, file: !800, line: 512, type: !11257, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!142, !845}
!11259 = !DILocalVariable(name: "table", arg: 1, scope: !11256, file: !800, line: 512, type: !845)
!11260 = !DILocation(line: 512, column: 27, scope: !11256)
!11261 = !DILocalVariable(name: "tuning", scope: !11256, file: !800, line: 514, type: !815)
!11262 = !DILocation(line: 514, column: 22, scope: !11256)
!11263 = !DILocation(line: 514, column: 31, scope: !11256)
!11264 = !DILocation(line: 514, column: 38, scope: !11256)
!11265 = !DILocalVariable(name: "epsilon", scope: !11256, file: !800, line: 515, type: !821)
!11266 = !DILocation(line: 515, column: 9, scope: !11256)
!11267 = !DILocation(line: 516, column: 7, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11256, file: !800, line: 516, column: 7)
!11269 = !DILocation(line: 516, column: 14, scope: !11268)
!11270 = !DILocation(line: 516, column: 7, scope: !11256)
!11271 = !DILocation(line: 517, column: 5, scope: !11268)
!11272 = !DILocation(line: 524, column: 11, scope: !11256)
!11273 = !DILocation(line: 526, column: 7, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11256, file: !800, line: 526, column: 7)
!11275 = !DILocation(line: 526, column: 17, scope: !11274)
!11276 = !DILocation(line: 526, column: 25, scope: !11274)
!11277 = !DILocation(line: 526, column: 15, scope: !11274)
!11278 = !DILocation(line: 527, column: 7, scope: !11274)
!11279 = !DILocation(line: 527, column: 10, scope: !11274)
!11280 = !DILocation(line: 527, column: 18, scope: !11274)
!11281 = !DILocation(line: 527, column: 41, scope: !11274)
!11282 = !DILocation(line: 527, column: 39, scope: !11274)
!11283 = !DILocation(line: 527, column: 35, scope: !11274)
!11284 = !DILocation(line: 528, column: 7, scope: !11274)
!11285 = !DILocation(line: 528, column: 14, scope: !11274)
!11286 = !DILocation(line: 528, column: 12, scope: !11274)
!11287 = !DILocation(line: 528, column: 24, scope: !11274)
!11288 = !DILocation(line: 528, column: 32, scope: !11274)
!11289 = !DILocation(line: 528, column: 22, scope: !11274)
!11290 = !DILocation(line: 529, column: 7, scope: !11274)
!11291 = !DILocation(line: 529, column: 15, scope: !11274)
!11292 = !DILocation(line: 529, column: 23, scope: !11274)
!11293 = !DILocation(line: 529, column: 12, scope: !11274)
!11294 = !DILocation(line: 530, column: 7, scope: !11274)
!11295 = !DILocation(line: 530, column: 10, scope: !11274)
!11296 = !DILocation(line: 530, column: 18, scope: !11274)
!11297 = !DILocation(line: 530, column: 37, scope: !11274)
!11298 = !DILocation(line: 530, column: 35, scope: !11274)
!11299 = !DILocation(line: 530, column: 47, scope: !11274)
!11300 = !DILocation(line: 530, column: 55, scope: !11274)
!11301 = !DILocation(line: 530, column: 45, scope: !11274)
!11302 = !DILocation(line: 531, column: 7, scope: !11274)
!11303 = !DILocation(line: 531, column: 10, scope: !11274)
!11304 = !DILocation(line: 531, column: 18, scope: !11274)
!11305 = !DILocation(line: 531, column: 32, scope: !11274)
!11306 = !DILocation(line: 532, column: 7, scope: !11274)
!11307 = !DILocation(line: 532, column: 10, scope: !11274)
!11308 = !DILocation(line: 532, column: 18, scope: !11274)
!11309 = !DILocation(line: 532, column: 37, scope: !11274)
!11310 = !DILocation(line: 532, column: 35, scope: !11274)
!11311 = !DILocation(line: 532, column: 47, scope: !11274)
!11312 = !DILocation(line: 532, column: 55, scope: !11274)
!11313 = !DILocation(line: 532, column: 45, scope: !11274)
!11314 = !DILocation(line: 526, column: 7, scope: !11256)
!11315 = !DILocation(line: 533, column: 5, scope: !11274)
!11316 = !DILocation(line: 535, column: 3, scope: !11256)
!11317 = !DILocation(line: 535, column: 10, scope: !11256)
!11318 = !DILocation(line: 535, column: 17, scope: !11256)
!11319 = !DILocation(line: 536, column: 3, scope: !11256)
!11320 = !DILocation(line: 537, column: 1, scope: !11256)
!11321 = distinct !DISubprogram(name: "compute_bucket_size", scope: !800, file: !800, line: 544, type: !11322, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{!55, !55, !815}
!11324 = !DILocalVariable(name: "candidate", arg: 1, scope: !11321, file: !800, line: 544, type: !55)
!11325 = !DILocation(line: 544, column: 29, scope: !11321)
!11326 = !DILocalVariable(name: "tuning", arg: 2, scope: !11321, file: !800, line: 544, type: !815)
!11327 = !DILocation(line: 544, column: 59, scope: !11321)
!11328 = !DILocation(line: 546, column: 8, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11321, file: !800, line: 546, column: 7)
!11330 = !DILocation(line: 546, column: 16, scope: !11329)
!11331 = !DILocation(line: 546, column: 7, scope: !11321)
!11332 = !DILocalVariable(name: "new_candidate", scope: !11333, file: !800, line: 548, type: !821)
!11333 = distinct !DILexicalBlock(scope: !11329, file: !800, line: 547, column: 5)
!11334 = !DILocation(line: 548, column: 13, scope: !11333)
!11335 = !DILocation(line: 548, column: 29, scope: !11333)
!11336 = !DILocation(line: 548, column: 41, scope: !11333)
!11337 = !DILocation(line: 548, column: 49, scope: !11333)
!11338 = !DILocation(line: 548, column: 39, scope: !11333)
!11339 = !DILocation(line: 549, column: 23, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11333, file: !800, line: 549, column: 11)
!11341 = !DILocation(line: 549, column: 20, scope: !11340)
!11342 = !DILocation(line: 549, column: 11, scope: !11333)
!11343 = !DILocation(line: 550, column: 9, scope: !11340)
!11344 = !DILocation(line: 551, column: 19, scope: !11333)
!11345 = !DILocation(line: 551, column: 17, scope: !11333)
!11346 = !DILocation(line: 552, column: 5, scope: !11333)
!11347 = !DILocation(line: 553, column: 27, scope: !11321)
!11348 = !DILocation(line: 553, column: 15, scope: !11321)
!11349 = !DILocation(line: 553, column: 13, scope: !11321)
!11350 = !DILocation(line: 554, column: 7, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11321, file: !800, line: 554, column: 7)
!11352 = !DILocation(line: 554, column: 7, scope: !11321)
!11353 = !DILocation(line: 555, column: 5, scope: !11351)
!11354 = !DILocation(line: 556, column: 10, scope: !11321)
!11355 = !DILocation(line: 556, column: 3, scope: !11321)
!11356 = !DILocation(line: 557, column: 1, scope: !11321)
!11357 = distinct !DISubprogram(name: "next_prime", scope: !800, file: !800, line: 463, type: !11358, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{!55, !55}
!11360 = !DILocalVariable(name: "candidate", arg: 1, scope: !11357, file: !800, line: 463, type: !55)
!11361 = !DILocation(line: 463, column: 20, scope: !11357)
!11362 = !DILocation(line: 466, column: 7, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11357, file: !800, line: 466, column: 7)
!11364 = !DILocation(line: 466, column: 17, scope: !11363)
!11365 = !DILocation(line: 466, column: 7, scope: !11357)
!11366 = !DILocation(line: 467, column: 15, scope: !11363)
!11367 = !DILocation(line: 467, column: 5, scope: !11363)
!11368 = !DILocation(line: 470, column: 13, scope: !11357)
!11369 = !DILocation(line: 472, column: 3, scope: !11357)
!11370 = !DILocation(line: 472, column: 22, scope: !11357)
!11371 = !DILocation(line: 472, column: 19, scope: !11357)
!11372 = !DILocation(line: 472, column: 32, scope: !11357)
!11373 = !DILocation(line: 472, column: 46, scope: !11357)
!11374 = !DILocation(line: 472, column: 36, scope: !11357)
!11375 = !DILocation(line: 472, column: 35, scope: !11357)
!11376 = !DILocation(line: 0, scope: !11357)
!11377 = !DILocation(line: 473, column: 15, scope: !11357)
!11378 = distinct !{!11378, !11369, !11379}
!11379 = !DILocation(line: 473, column: 18, scope: !11357)
!11380 = !DILocation(line: 475, column: 10, scope: !11357)
!11381 = !DILocation(line: 475, column: 3, scope: !11357)
!11382 = distinct !DISubprogram(name: "is_prime", scope: !800, file: !800, line: 444, type: !11383, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11383 = !DISubroutineType(types: !11384)
!11384 = !{!142, !55}
!11385 = !DILocalVariable(name: "candidate", arg: 1, scope: !11382, file: !800, line: 444, type: !55)
!11386 = !DILocation(line: 444, column: 18, scope: !11382)
!11387 = !DILocalVariable(name: "divisor", scope: !11382, file: !800, line: 446, type: !55)
!11388 = !DILocation(line: 446, column: 10, scope: !11382)
!11389 = !DILocalVariable(name: "square", scope: !11382, file: !800, line: 447, type: !55)
!11390 = !DILocation(line: 447, column: 10, scope: !11382)
!11391 = !DILocation(line: 447, column: 19, scope: !11382)
!11392 = !DILocation(line: 447, column: 29, scope: !11382)
!11393 = !DILocation(line: 447, column: 27, scope: !11382)
!11394 = !DILocation(line: 449, column: 3, scope: !11382)
!11395 = !DILocation(line: 449, column: 10, scope: !11382)
!11396 = !DILocation(line: 449, column: 19, scope: !11382)
!11397 = !DILocation(line: 449, column: 17, scope: !11382)
!11398 = !DILocation(line: 449, column: 29, scope: !11382)
!11399 = !DILocation(line: 449, column: 33, scope: !11382)
!11400 = !DILocation(line: 449, column: 45, scope: !11382)
!11401 = !DILocation(line: 449, column: 43, scope: !11382)
!11402 = !DILocation(line: 0, scope: !11382)
!11403 = !DILocation(line: 451, column: 14, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11382, file: !800, line: 450, column: 5)
!11405 = !DILocation(line: 452, column: 21, scope: !11404)
!11406 = !DILocation(line: 452, column: 19, scope: !11404)
!11407 = !DILocation(line: 452, column: 14, scope: !11404)
!11408 = !DILocation(line: 453, column: 14, scope: !11404)
!11409 = distinct !{!11409, !11394, !11410}
!11410 = !DILocation(line: 454, column: 5, scope: !11382)
!11411 = !DILocation(line: 456, column: 11, scope: !11382)
!11412 = !DILocation(line: 456, column: 23, scope: !11382)
!11413 = !DILocation(line: 456, column: 21, scope: !11382)
!11414 = !DILocation(line: 456, column: 10, scope: !11382)
!11415 = !DILocation(line: 456, column: 3, scope: !11382)
!11416 = distinct !DISubprogram(name: "hash_clear", scope: !800, file: !800, line: 653, type: !11417, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{null, !845}
!11419 = !DILocalVariable(name: "table", arg: 1, scope: !11416, file: !800, line: 653, type: !845)
!11420 = !DILocation(line: 653, column: 25, scope: !11416)
!11421 = !DILocalVariable(name: "bucket", scope: !11416, file: !800, line: 655, type: !803)
!11422 = !DILocation(line: 655, column: 22, scope: !11416)
!11423 = !DILocation(line: 657, column: 17, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11416, file: !800, line: 657, column: 3)
!11425 = !DILocation(line: 657, column: 24, scope: !11424)
!11426 = !DILocation(line: 657, column: 15, scope: !11424)
!11427 = !DILocation(line: 657, column: 8, scope: !11424)
!11428 = !DILocation(line: 657, column: 32, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11424, file: !800, line: 657, column: 3)
!11430 = !DILocation(line: 657, column: 41, scope: !11429)
!11431 = !DILocation(line: 657, column: 48, scope: !11429)
!11432 = !DILocation(line: 657, column: 39, scope: !11429)
!11433 = !DILocation(line: 657, column: 3, scope: !11424)
!11434 = !DILocation(line: 659, column: 11, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !800, line: 659, column: 11)
!11436 = distinct !DILexicalBlock(scope: !11429, file: !800, line: 658, column: 5)
!11437 = !DILocation(line: 659, column: 19, scope: !11435)
!11438 = !DILocation(line: 659, column: 11, scope: !11436)
!11439 = !DILocalVariable(name: "cursor", scope: !11440, file: !800, line: 661, type: !803)
!11440 = distinct !DILexicalBlock(scope: !11435, file: !800, line: 660, column: 9)
!11441 = !DILocation(line: 661, column: 30, scope: !11440)
!11442 = !DILocalVariable(name: "next", scope: !11440, file: !800, line: 662, type: !803)
!11443 = !DILocation(line: 662, column: 30, scope: !11440)
!11444 = !DILocation(line: 665, column: 25, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11440, file: !800, line: 665, column: 11)
!11446 = !DILocation(line: 665, column: 33, scope: !11445)
!11447 = !DILocation(line: 665, column: 23, scope: !11445)
!11448 = !DILocation(line: 665, column: 16, scope: !11445)
!11449 = !DILocation(line: 665, column: 39, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11445, file: !800, line: 665, column: 11)
!11451 = !DILocation(line: 665, column: 11, scope: !11445)
!11452 = !DILocation(line: 667, column: 19, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !800, line: 667, column: 19)
!11454 = distinct !DILexicalBlock(scope: !11450, file: !800, line: 666, column: 13)
!11455 = !DILocation(line: 667, column: 26, scope: !11453)
!11456 = !DILocation(line: 667, column: 19, scope: !11454)
!11457 = !DILocation(line: 668, column: 17, scope: !11453)
!11458 = !DILocation(line: 668, column: 24, scope: !11453)
!11459 = !DILocation(line: 668, column: 36, scope: !11453)
!11460 = !DILocation(line: 668, column: 44, scope: !11453)
!11461 = !DILocation(line: 669, column: 15, scope: !11454)
!11462 = !DILocation(line: 669, column: 23, scope: !11454)
!11463 = !DILocation(line: 669, column: 28, scope: !11454)
!11464 = !DILocation(line: 671, column: 22, scope: !11454)
!11465 = !DILocation(line: 671, column: 30, scope: !11454)
!11466 = !DILocation(line: 671, column: 20, scope: !11454)
!11467 = !DILocation(line: 674, column: 30, scope: !11454)
!11468 = !DILocation(line: 674, column: 37, scope: !11454)
!11469 = !DILocation(line: 674, column: 15, scope: !11454)
!11470 = !DILocation(line: 674, column: 23, scope: !11454)
!11471 = !DILocation(line: 674, column: 28, scope: !11454)
!11472 = !DILocation(line: 675, column: 40, scope: !11454)
!11473 = !DILocation(line: 675, column: 15, scope: !11454)
!11474 = !DILocation(line: 675, column: 22, scope: !11454)
!11475 = !DILocation(line: 675, column: 38, scope: !11454)
!11476 = !DILocation(line: 676, column: 13, scope: !11454)
!11477 = !DILocation(line: 665, column: 56, scope: !11450)
!11478 = !DILocation(line: 665, column: 54, scope: !11450)
!11479 = !DILocation(line: 665, column: 11, scope: !11450)
!11480 = distinct !{!11480, !11451, !11481}
!11481 = !DILocation(line: 676, column: 13, scope: !11445)
!11482 = !DILocation(line: 679, column: 15, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11440, file: !800, line: 679, column: 15)
!11484 = !DILocation(line: 679, column: 22, scope: !11483)
!11485 = !DILocation(line: 679, column: 15, scope: !11440)
!11486 = !DILocation(line: 680, column: 13, scope: !11483)
!11487 = !DILocation(line: 680, column: 20, scope: !11483)
!11488 = !DILocation(line: 680, column: 32, scope: !11483)
!11489 = !DILocation(line: 680, column: 40, scope: !11483)
!11490 = !DILocation(line: 681, column: 11, scope: !11440)
!11491 = !DILocation(line: 681, column: 19, scope: !11440)
!11492 = !DILocation(line: 681, column: 24, scope: !11440)
!11493 = !DILocation(line: 682, column: 11, scope: !11440)
!11494 = !DILocation(line: 682, column: 19, scope: !11440)
!11495 = !DILocation(line: 682, column: 24, scope: !11440)
!11496 = !DILocation(line: 683, column: 9, scope: !11440)
!11497 = !DILocation(line: 684, column: 5, scope: !11436)
!11498 = !DILocation(line: 657, column: 68, scope: !11429)
!11499 = !DILocation(line: 657, column: 3, scope: !11429)
!11500 = distinct !{!11500, !11433, !11501}
!11501 = !DILocation(line: 684, column: 5, scope: !11424)
!11502 = !DILocation(line: 686, column: 3, scope: !11416)
!11503 = !DILocation(line: 686, column: 10, scope: !11416)
!11504 = !DILocation(line: 686, column: 25, scope: !11416)
!11505 = !DILocation(line: 687, column: 3, scope: !11416)
!11506 = !DILocation(line: 687, column: 10, scope: !11416)
!11507 = !DILocation(line: 687, column: 20, scope: !11416)
!11508 = !DILocation(line: 688, column: 1, scope: !11416)
!11509 = distinct !DISubprogram(name: "hash_free", scope: !800, file: !800, line: 696, type: !11417, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11510 = !DILocalVariable(name: "table", arg: 1, scope: !11509, file: !800, line: 696, type: !845)
!11511 = !DILocation(line: 696, column: 24, scope: !11509)
!11512 = !DILocalVariable(name: "bucket", scope: !11509, file: !800, line: 698, type: !803)
!11513 = !DILocation(line: 698, column: 22, scope: !11509)
!11514 = !DILocalVariable(name: "cursor", scope: !11509, file: !800, line: 699, type: !803)
!11515 = !DILocation(line: 699, column: 22, scope: !11509)
!11516 = !DILocalVariable(name: "next", scope: !11509, file: !800, line: 700, type: !803)
!11517 = !DILocation(line: 700, column: 22, scope: !11509)
!11518 = !DILocation(line: 703, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11509, file: !800, line: 703, column: 7)
!11520 = !DILocation(line: 703, column: 14, scope: !11519)
!11521 = !DILocation(line: 703, column: 25, scope: !11519)
!11522 = !DILocation(line: 703, column: 28, scope: !11519)
!11523 = !DILocation(line: 703, column: 35, scope: !11519)
!11524 = !DILocation(line: 703, column: 7, scope: !11509)
!11525 = !DILocation(line: 705, column: 21, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !800, line: 705, column: 7)
!11527 = distinct !DILexicalBlock(scope: !11519, file: !800, line: 704, column: 5)
!11528 = !DILocation(line: 705, column: 28, scope: !11526)
!11529 = !DILocation(line: 705, column: 19, scope: !11526)
!11530 = !DILocation(line: 705, column: 12, scope: !11526)
!11531 = !DILocation(line: 705, column: 36, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11526, file: !800, line: 705, column: 7)
!11533 = !DILocation(line: 705, column: 45, scope: !11532)
!11534 = !DILocation(line: 705, column: 52, scope: !11532)
!11535 = !DILocation(line: 705, column: 43, scope: !11532)
!11536 = !DILocation(line: 705, column: 7, scope: !11526)
!11537 = !DILocation(line: 707, column: 15, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !800, line: 707, column: 15)
!11539 = distinct !DILexicalBlock(scope: !11532, file: !800, line: 706, column: 9)
!11540 = !DILocation(line: 707, column: 23, scope: !11538)
!11541 = !DILocation(line: 707, column: 15, scope: !11539)
!11542 = !DILocation(line: 709, column: 29, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !800, line: 709, column: 15)
!11544 = distinct !DILexicalBlock(scope: !11538, file: !800, line: 708, column: 13)
!11545 = !DILocation(line: 709, column: 27, scope: !11543)
!11546 = !DILocation(line: 709, column: 20, scope: !11543)
!11547 = !DILocation(line: 709, column: 37, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !800, line: 709, column: 15)
!11549 = !DILocation(line: 709, column: 15, scope: !11543)
!11550 = !DILocation(line: 710, column: 17, scope: !11548)
!11551 = !DILocation(line: 710, column: 24, scope: !11548)
!11552 = !DILocation(line: 710, column: 36, scope: !11548)
!11553 = !DILocation(line: 710, column: 44, scope: !11548)
!11554 = !DILocation(line: 709, column: 54, scope: !11548)
!11555 = !DILocation(line: 709, column: 62, scope: !11548)
!11556 = !DILocation(line: 709, column: 52, scope: !11548)
!11557 = !DILocation(line: 709, column: 15, scope: !11548)
!11558 = distinct !{!11558, !11549, !11559}
!11559 = !DILocation(line: 710, column: 48, scope: !11543)
!11560 = !DILocation(line: 711, column: 13, scope: !11544)
!11561 = !DILocation(line: 712, column: 9, scope: !11539)
!11562 = !DILocation(line: 705, column: 72, scope: !11532)
!11563 = !DILocation(line: 705, column: 7, scope: !11532)
!11564 = distinct !{!11564, !11536, !11565}
!11565 = !DILocation(line: 712, column: 9, scope: !11526)
!11566 = !DILocation(line: 713, column: 5, scope: !11527)
!11567 = !DILocation(line: 722, column: 17, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11509, file: !800, line: 722, column: 3)
!11569 = !DILocation(line: 722, column: 24, scope: !11568)
!11570 = !DILocation(line: 722, column: 15, scope: !11568)
!11571 = !DILocation(line: 722, column: 8, scope: !11568)
!11572 = !DILocation(line: 722, column: 32, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11568, file: !800, line: 722, column: 3)
!11574 = !DILocation(line: 722, column: 41, scope: !11573)
!11575 = !DILocation(line: 722, column: 48, scope: !11573)
!11576 = !DILocation(line: 722, column: 39, scope: !11573)
!11577 = !DILocation(line: 722, column: 3, scope: !11568)
!11578 = !DILocation(line: 724, column: 21, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !800, line: 724, column: 7)
!11580 = distinct !DILexicalBlock(scope: !11573, file: !800, line: 723, column: 5)
!11581 = !DILocation(line: 724, column: 29, scope: !11579)
!11582 = !DILocation(line: 724, column: 19, scope: !11579)
!11583 = !DILocation(line: 724, column: 12, scope: !11579)
!11584 = !DILocation(line: 724, column: 35, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11579, file: !800, line: 724, column: 7)
!11586 = !DILocation(line: 724, column: 7, scope: !11579)
!11587 = !DILocation(line: 726, column: 18, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11585, file: !800, line: 725, column: 9)
!11589 = !DILocation(line: 726, column: 26, scope: !11588)
!11590 = !DILocation(line: 726, column: 16, scope: !11588)
!11591 = !DILocation(line: 727, column: 17, scope: !11588)
!11592 = !DILocation(line: 727, column: 11, scope: !11588)
!11593 = !DILocation(line: 728, column: 9, scope: !11588)
!11594 = !DILocation(line: 724, column: 52, scope: !11585)
!11595 = !DILocation(line: 724, column: 50, scope: !11585)
!11596 = !DILocation(line: 724, column: 7, scope: !11585)
!11597 = distinct !{!11597, !11586, !11598}
!11598 = !DILocation(line: 728, column: 9, scope: !11579)
!11599 = !DILocation(line: 729, column: 5, scope: !11580)
!11600 = !DILocation(line: 722, column: 68, scope: !11573)
!11601 = !DILocation(line: 722, column: 3, scope: !11573)
!11602 = distinct !{!11602, !11577, !11603}
!11603 = !DILocation(line: 729, column: 5, scope: !11568)
!11604 = !DILocation(line: 732, column: 17, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11509, file: !800, line: 732, column: 3)
!11606 = !DILocation(line: 732, column: 24, scope: !11605)
!11607 = !DILocation(line: 732, column: 15, scope: !11605)
!11608 = !DILocation(line: 732, column: 8, scope: !11605)
!11609 = !DILocation(line: 732, column: 41, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11605, file: !800, line: 732, column: 3)
!11611 = !DILocation(line: 732, column: 3, scope: !11605)
!11612 = !DILocation(line: 734, column: 14, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11610, file: !800, line: 733, column: 5)
!11614 = !DILocation(line: 734, column: 22, scope: !11613)
!11615 = !DILocation(line: 734, column: 12, scope: !11613)
!11616 = !DILocation(line: 735, column: 13, scope: !11613)
!11617 = !DILocation(line: 735, column: 7, scope: !11613)
!11618 = !DILocation(line: 736, column: 5, scope: !11613)
!11619 = !DILocation(line: 732, column: 58, scope: !11610)
!11620 = !DILocation(line: 732, column: 56, scope: !11610)
!11621 = !DILocation(line: 732, column: 3, scope: !11610)
!11622 = distinct !{!11622, !11611, !11623}
!11623 = !DILocation(line: 736, column: 5, scope: !11605)
!11624 = !DILocation(line: 741, column: 9, scope: !11509)
!11625 = !DILocation(line: 741, column: 16, scope: !11509)
!11626 = !DILocation(line: 741, column: 3, scope: !11509)
!11627 = !DILocation(line: 742, column: 9, scope: !11509)
!11628 = !DILocation(line: 742, column: 3, scope: !11509)
!11629 = !DILocation(line: 743, column: 1, scope: !11509)
!11630 = distinct !DISubprogram(name: "hash_rehash", scope: !800, file: !800, line: 943, type: !11631, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!142, !845, !55}
!11633 = !DILocalVariable(name: "table", arg: 1, scope: !11630, file: !800, line: 943, type: !845)
!11634 = !DILocation(line: 943, column: 26, scope: !11630)
!11635 = !DILocalVariable(name: "candidate", arg: 2, scope: !11630, file: !800, line: 943, type: !55)
!11636 = !DILocation(line: 943, column: 40, scope: !11630)
!11637 = !DILocalVariable(name: "storage", scope: !11630, file: !800, line: 945, type: !798)
!11638 = !DILocation(line: 945, column: 14, scope: !11630)
!11639 = !DILocalVariable(name: "new_table", scope: !11630, file: !800, line: 946, type: !845)
!11640 = !DILocation(line: 946, column: 15, scope: !11630)
!11641 = !DILocalVariable(name: "new_size", scope: !11630, file: !800, line: 947, type: !55)
!11642 = !DILocation(line: 947, column: 10, scope: !11630)
!11643 = !DILocation(line: 947, column: 42, scope: !11630)
!11644 = !DILocation(line: 947, column: 53, scope: !11630)
!11645 = !DILocation(line: 947, column: 60, scope: !11630)
!11646 = !DILocation(line: 947, column: 21, scope: !11630)
!11647 = !DILocation(line: 949, column: 8, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11630, file: !800, line: 949, column: 7)
!11649 = !DILocation(line: 949, column: 7, scope: !11630)
!11650 = !DILocation(line: 950, column: 5, scope: !11648)
!11651 = !DILocation(line: 951, column: 7, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11630, file: !800, line: 951, column: 7)
!11653 = !DILocation(line: 951, column: 19, scope: !11652)
!11654 = !DILocation(line: 951, column: 26, scope: !11652)
!11655 = !DILocation(line: 951, column: 16, scope: !11652)
!11656 = !DILocation(line: 951, column: 7, scope: !11630)
!11657 = !DILocation(line: 952, column: 5, scope: !11652)
!11658 = !DILocation(line: 953, column: 13, scope: !11630)
!11659 = !DILocation(line: 954, column: 31, scope: !11630)
!11660 = !DILocation(line: 954, column: 23, scope: !11630)
!11661 = !DILocation(line: 954, column: 3, scope: !11630)
!11662 = !DILocation(line: 954, column: 14, scope: !11630)
!11663 = !DILocation(line: 954, column: 21, scope: !11630)
!11664 = !DILocation(line: 955, column: 7, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11630, file: !800, line: 955, column: 7)
!11666 = !DILocation(line: 955, column: 18, scope: !11665)
!11667 = !DILocation(line: 955, column: 25, scope: !11665)
!11668 = !DILocation(line: 955, column: 7, scope: !11630)
!11669 = !DILocation(line: 956, column: 5, scope: !11665)
!11670 = !DILocation(line: 957, column: 26, scope: !11630)
!11671 = !DILocation(line: 957, column: 3, scope: !11630)
!11672 = !DILocation(line: 957, column: 14, scope: !11630)
!11673 = !DILocation(line: 957, column: 24, scope: !11630)
!11674 = !DILocation(line: 958, column: 29, scope: !11630)
!11675 = !DILocation(line: 958, column: 40, scope: !11630)
!11676 = !DILocation(line: 958, column: 49, scope: !11630)
!11677 = !DILocation(line: 958, column: 47, scope: !11630)
!11678 = !DILocation(line: 958, column: 3, scope: !11630)
!11679 = !DILocation(line: 958, column: 14, scope: !11630)
!11680 = !DILocation(line: 958, column: 27, scope: !11630)
!11681 = !DILocation(line: 959, column: 3, scope: !11630)
!11682 = !DILocation(line: 959, column: 14, scope: !11630)
!11683 = !DILocation(line: 959, column: 29, scope: !11630)
!11684 = !DILocation(line: 960, column: 3, scope: !11630)
!11685 = !DILocation(line: 960, column: 14, scope: !11630)
!11686 = !DILocation(line: 960, column: 24, scope: !11630)
!11687 = !DILocation(line: 961, column: 23, scope: !11630)
!11688 = !DILocation(line: 961, column: 30, scope: !11630)
!11689 = !DILocation(line: 961, column: 3, scope: !11630)
!11690 = !DILocation(line: 961, column: 14, scope: !11630)
!11691 = !DILocation(line: 961, column: 21, scope: !11630)
!11692 = !DILocation(line: 962, column: 23, scope: !11630)
!11693 = !DILocation(line: 962, column: 30, scope: !11630)
!11694 = !DILocation(line: 962, column: 3, scope: !11630)
!11695 = !DILocation(line: 962, column: 14, scope: !11630)
!11696 = !DILocation(line: 962, column: 21, scope: !11630)
!11697 = !DILocation(line: 963, column: 27, scope: !11630)
!11698 = !DILocation(line: 963, column: 34, scope: !11630)
!11699 = !DILocation(line: 963, column: 3, scope: !11630)
!11700 = !DILocation(line: 963, column: 14, scope: !11630)
!11701 = !DILocation(line: 963, column: 25, scope: !11630)
!11702 = !DILocation(line: 964, column: 27, scope: !11630)
!11703 = !DILocation(line: 964, column: 34, scope: !11630)
!11704 = !DILocation(line: 964, column: 3, scope: !11630)
!11705 = !DILocation(line: 964, column: 14, scope: !11630)
!11706 = !DILocation(line: 964, column: 25, scope: !11630)
!11707 = !DILocation(line: 984, column: 32, scope: !11630)
!11708 = !DILocation(line: 984, column: 39, scope: !11630)
!11709 = !DILocation(line: 984, column: 3, scope: !11630)
!11710 = !DILocation(line: 984, column: 14, scope: !11630)
!11711 = !DILocation(line: 984, column: 30, scope: !11630)
!11712 = !DILocation(line: 986, column: 25, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11630, file: !800, line: 986, column: 7)
!11714 = !DILocation(line: 986, column: 36, scope: !11713)
!11715 = !DILocation(line: 986, column: 7, scope: !11713)
!11716 = !DILocation(line: 986, column: 7, scope: !11630)
!11717 = !DILocation(line: 989, column: 13, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11713, file: !800, line: 987, column: 5)
!11719 = !DILocation(line: 989, column: 20, scope: !11718)
!11720 = !DILocation(line: 989, column: 7, scope: !11718)
!11721 = !DILocation(line: 990, column: 23, scope: !11718)
!11722 = !DILocation(line: 990, column: 34, scope: !11718)
!11723 = !DILocation(line: 990, column: 7, scope: !11718)
!11724 = !DILocation(line: 990, column: 14, scope: !11718)
!11725 = !DILocation(line: 990, column: 21, scope: !11718)
!11726 = !DILocation(line: 991, column: 29, scope: !11718)
!11727 = !DILocation(line: 991, column: 40, scope: !11718)
!11728 = !DILocation(line: 991, column: 7, scope: !11718)
!11729 = !DILocation(line: 991, column: 14, scope: !11718)
!11730 = !DILocation(line: 991, column: 27, scope: !11718)
!11731 = !DILocation(line: 992, column: 26, scope: !11718)
!11732 = !DILocation(line: 992, column: 37, scope: !11718)
!11733 = !DILocation(line: 992, column: 7, scope: !11718)
!11734 = !DILocation(line: 992, column: 14, scope: !11718)
!11735 = !DILocation(line: 992, column: 24, scope: !11718)
!11736 = !DILocation(line: 993, column: 31, scope: !11718)
!11737 = !DILocation(line: 993, column: 42, scope: !11718)
!11738 = !DILocation(line: 993, column: 7, scope: !11718)
!11739 = !DILocation(line: 993, column: 14, scope: !11718)
!11740 = !DILocation(line: 993, column: 29, scope: !11718)
!11741 = !DILocation(line: 994, column: 32, scope: !11718)
!11742 = !DILocation(line: 994, column: 43, scope: !11718)
!11743 = !DILocation(line: 994, column: 7, scope: !11718)
!11744 = !DILocation(line: 994, column: 14, scope: !11718)
!11745 = !DILocation(line: 994, column: 30, scope: !11718)
!11746 = !DILocation(line: 996, column: 7, scope: !11718)
!11747 = !DILocation(line: 1012, column: 28, scope: !11630)
!11748 = !DILocation(line: 1012, column: 39, scope: !11630)
!11749 = !DILocation(line: 1012, column: 3, scope: !11630)
!11750 = !DILocation(line: 1012, column: 10, scope: !11630)
!11751 = !DILocation(line: 1012, column: 26, scope: !11630)
!11752 = !DILocation(line: 1013, column: 28, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11630, file: !800, line: 1013, column: 7)
!11754 = !DILocation(line: 1013, column: 35, scope: !11753)
!11755 = !DILocation(line: 1013, column: 10, scope: !11753)
!11756 = !DILocation(line: 1014, column: 10, scope: !11753)
!11757 = !DILocation(line: 1014, column: 31, scope: !11753)
!11758 = !DILocation(line: 1014, column: 38, scope: !11753)
!11759 = !DILocation(line: 1014, column: 13, scope: !11753)
!11760 = !DILocation(line: 1013, column: 7, scope: !11630)
!11761 = !DILocation(line: 1015, column: 5, scope: !11753)
!11762 = !DILocation(line: 1017, column: 9, scope: !11630)
!11763 = !DILocation(line: 1017, column: 20, scope: !11630)
!11764 = !DILocation(line: 1017, column: 3, scope: !11630)
!11765 = !DILocation(line: 1018, column: 3, scope: !11630)
!11766 = !DILocation(line: 1019, column: 1, scope: !11630)
!11767 = distinct !DISubprogram(name: "transfer_entries", scope: !800, file: !800, line: 860, type: !11768, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!142, !845, !845, !142}
!11770 = !DILocalVariable(name: "dst", arg: 1, scope: !11767, file: !800, line: 860, type: !845)
!11771 = !DILocation(line: 860, column: 31, scope: !11767)
!11772 = !DILocalVariable(name: "src", arg: 2, scope: !11767, file: !800, line: 860, type: !845)
!11773 = !DILocation(line: 860, column: 48, scope: !11767)
!11774 = !DILocalVariable(name: "safe", arg: 3, scope: !11767, file: !800, line: 860, type: !142)
!11775 = !DILocation(line: 860, column: 58, scope: !11767)
!11776 = !DILocalVariable(name: "bucket", scope: !11767, file: !800, line: 862, type: !803)
!11777 = !DILocation(line: 862, column: 22, scope: !11767)
!11778 = !DILocalVariable(name: "cursor", scope: !11767, file: !800, line: 863, type: !803)
!11779 = !DILocation(line: 863, column: 22, scope: !11767)
!11780 = !DILocalVariable(name: "next", scope: !11767, file: !800, line: 864, type: !803)
!11781 = !DILocation(line: 864, column: 22, scope: !11767)
!11782 = !DILocation(line: 865, column: 17, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11767, file: !800, line: 865, column: 3)
!11784 = !DILocation(line: 865, column: 22, scope: !11783)
!11785 = !DILocation(line: 865, column: 15, scope: !11783)
!11786 = !DILocation(line: 865, column: 8, scope: !11783)
!11787 = !DILocation(line: 865, column: 30, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11783, file: !800, line: 865, column: 3)
!11789 = !DILocation(line: 865, column: 39, scope: !11788)
!11790 = !DILocation(line: 865, column: 44, scope: !11788)
!11791 = !DILocation(line: 865, column: 37, scope: !11788)
!11792 = !DILocation(line: 865, column: 3, scope: !11783)
!11793 = !DILocation(line: 866, column: 9, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11788, file: !800, line: 866, column: 9)
!11795 = !DILocation(line: 866, column: 17, scope: !11794)
!11796 = !DILocation(line: 866, column: 9, scope: !11788)
!11797 = !DILocalVariable(name: "data", scope: !11798, file: !800, line: 868, type: !53)
!11798 = distinct !DILexicalBlock(scope: !11794, file: !800, line: 867, column: 7)
!11799 = !DILocation(line: 868, column: 15, scope: !11798)
!11800 = !DILocalVariable(name: "new_bucket", scope: !11798, file: !800, line: 869, type: !803)
!11801 = !DILocation(line: 869, column: 28, scope: !11798)
!11802 = !DILocation(line: 877, column: 23, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11798, file: !800, line: 877, column: 9)
!11804 = !DILocation(line: 877, column: 31, scope: !11803)
!11805 = !DILocation(line: 877, column: 21, scope: !11803)
!11806 = !DILocation(line: 877, column: 14, scope: !11803)
!11807 = !DILocation(line: 877, column: 37, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11803, file: !800, line: 877, column: 9)
!11809 = !DILocation(line: 877, column: 9, scope: !11803)
!11810 = !DILocation(line: 879, column: 20, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !800, line: 878, column: 11)
!11812 = !DILocation(line: 879, column: 28, scope: !11811)
!11813 = !DILocation(line: 879, column: 18, scope: !11811)
!11814 = !DILocation(line: 880, column: 39, scope: !11811)
!11815 = !DILocation(line: 880, column: 44, scope: !11811)
!11816 = !DILocation(line: 880, column: 26, scope: !11811)
!11817 = !DILocation(line: 880, column: 24, scope: !11811)
!11818 = !DILocation(line: 882, column: 20, scope: !11811)
!11819 = !DILocation(line: 882, column: 28, scope: !11811)
!11820 = !DILocation(line: 882, column: 18, scope: !11811)
!11821 = !DILocation(line: 884, column: 17, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11811, file: !800, line: 884, column: 17)
!11823 = !DILocation(line: 884, column: 29, scope: !11822)
!11824 = !DILocation(line: 884, column: 17, scope: !11811)
!11825 = !DILocation(line: 888, column: 32, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11822, file: !800, line: 885, column: 15)
!11827 = !DILocation(line: 888, column: 44, scope: !11826)
!11828 = !DILocation(line: 888, column: 17, scope: !11826)
!11829 = !DILocation(line: 888, column: 25, scope: !11826)
!11830 = !DILocation(line: 888, column: 30, scope: !11826)
!11831 = !DILocation(line: 889, column: 36, scope: !11826)
!11832 = !DILocation(line: 889, column: 17, scope: !11826)
!11833 = !DILocation(line: 889, column: 29, scope: !11826)
!11834 = !DILocation(line: 889, column: 34, scope: !11826)
!11835 = !DILocation(line: 890, column: 15, scope: !11826)
!11836 = !DILocation(line: 895, column: 36, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11822, file: !800, line: 892, column: 15)
!11838 = !DILocation(line: 895, column: 17, scope: !11837)
!11839 = !DILocation(line: 895, column: 29, scope: !11837)
!11840 = !DILocation(line: 895, column: 34, scope: !11837)
!11841 = !DILocation(line: 896, column: 17, scope: !11837)
!11842 = !DILocation(line: 896, column: 22, scope: !11837)
!11843 = !DILocation(line: 896, column: 36, scope: !11837)
!11844 = !DILocation(line: 897, column: 29, scope: !11837)
!11845 = !DILocation(line: 897, column: 34, scope: !11837)
!11846 = !DILocation(line: 897, column: 17, scope: !11837)
!11847 = !DILocation(line: 899, column: 11, scope: !11811)
!11848 = !DILocation(line: 877, column: 54, scope: !11808)
!11849 = !DILocation(line: 877, column: 52, scope: !11808)
!11850 = !DILocation(line: 877, column: 9, scope: !11808)
!11851 = distinct !{!11851, !11809, !11852}
!11852 = !DILocation(line: 899, column: 11, scope: !11803)
!11853 = !DILocation(line: 903, column: 16, scope: !11798)
!11854 = !DILocation(line: 903, column: 24, scope: !11798)
!11855 = !DILocation(line: 903, column: 14, scope: !11798)
!11856 = !DILocation(line: 904, column: 9, scope: !11798)
!11857 = !DILocation(line: 904, column: 17, scope: !11798)
!11858 = !DILocation(line: 904, column: 22, scope: !11798)
!11859 = !DILocation(line: 905, column: 13, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11798, file: !800, line: 905, column: 13)
!11861 = !DILocation(line: 905, column: 13, scope: !11798)
!11862 = !DILocation(line: 906, column: 11, scope: !11860)
!11863 = !DILocation(line: 907, column: 35, scope: !11798)
!11864 = !DILocation(line: 907, column: 40, scope: !11798)
!11865 = !DILocation(line: 907, column: 22, scope: !11798)
!11866 = !DILocation(line: 907, column: 20, scope: !11798)
!11867 = !DILocation(line: 909, column: 13, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11798, file: !800, line: 909, column: 13)
!11869 = !DILocation(line: 909, column: 25, scope: !11868)
!11870 = !DILocation(line: 909, column: 13, scope: !11798)
!11871 = !DILocalVariable(name: "new_entry", scope: !11872, file: !800, line: 913, type: !803)
!11872 = distinct !DILexicalBlock(scope: !11868, file: !800, line: 910, column: 11)
!11873 = !DILocation(line: 913, column: 32, scope: !11872)
!11874 = !DILocation(line: 913, column: 60, scope: !11872)
!11875 = !DILocation(line: 913, column: 44, scope: !11872)
!11876 = !DILocation(line: 915, column: 17, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11872, file: !800, line: 915, column: 17)
!11878 = !DILocation(line: 915, column: 27, scope: !11877)
!11879 = !DILocation(line: 915, column: 17, scope: !11872)
!11880 = !DILocation(line: 916, column: 15, scope: !11877)
!11881 = !DILocation(line: 918, column: 31, scope: !11872)
!11882 = !DILocation(line: 918, column: 13, scope: !11872)
!11883 = !DILocation(line: 918, column: 24, scope: !11872)
!11884 = !DILocation(line: 918, column: 29, scope: !11872)
!11885 = !DILocation(line: 919, column: 31, scope: !11872)
!11886 = !DILocation(line: 919, column: 43, scope: !11872)
!11887 = !DILocation(line: 919, column: 13, scope: !11872)
!11888 = !DILocation(line: 919, column: 24, scope: !11872)
!11889 = !DILocation(line: 919, column: 29, scope: !11872)
!11890 = !DILocation(line: 920, column: 32, scope: !11872)
!11891 = !DILocation(line: 920, column: 13, scope: !11872)
!11892 = !DILocation(line: 920, column: 25, scope: !11872)
!11893 = !DILocation(line: 920, column: 30, scope: !11872)
!11894 = !DILocation(line: 921, column: 11, scope: !11872)
!11895 = !DILocation(line: 925, column: 32, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11868, file: !800, line: 923, column: 11)
!11897 = !DILocation(line: 925, column: 13, scope: !11896)
!11898 = !DILocation(line: 925, column: 25, scope: !11896)
!11899 = !DILocation(line: 925, column: 30, scope: !11896)
!11900 = !DILocation(line: 926, column: 13, scope: !11896)
!11901 = !DILocation(line: 926, column: 18, scope: !11896)
!11902 = !DILocation(line: 926, column: 32, scope: !11896)
!11903 = !DILocation(line: 928, column: 9, scope: !11798)
!11904 = !DILocation(line: 928, column: 17, scope: !11798)
!11905 = !DILocation(line: 928, column: 22, scope: !11798)
!11906 = !DILocation(line: 929, column: 9, scope: !11798)
!11907 = !DILocation(line: 929, column: 14, scope: !11798)
!11908 = !DILocation(line: 929, column: 28, scope: !11798)
!11909 = !DILocation(line: 930, column: 7, scope: !11798)
!11910 = !DILocation(line: 865, column: 64, scope: !11788)
!11911 = !DILocation(line: 865, column: 3, scope: !11788)
!11912 = distinct !{!11912, !11792, !11913}
!11913 = !DILocation(line: 930, column: 7, scope: !11783)
!11914 = !DILocation(line: 931, column: 3, scope: !11767)
!11915 = !DILocation(line: 932, column: 1, scope: !11767)
!11916 = distinct !DISubprogram(name: "free_entry", scope: !800, file: !800, line: 776, type: !11917, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{null, !845, !803}
!11919 = !DILocalVariable(name: "table", arg: 1, scope: !11916, file: !800, line: 776, type: !845)
!11920 = !DILocation(line: 776, column: 25, scope: !11916)
!11921 = !DILocalVariable(name: "entry", arg: 2, scope: !11916, file: !800, line: 776, type: !803)
!11922 = !DILocation(line: 776, column: 51, scope: !11916)
!11923 = !DILocation(line: 778, column: 3, scope: !11916)
!11924 = !DILocation(line: 778, column: 10, scope: !11916)
!11925 = !DILocation(line: 778, column: 15, scope: !11916)
!11926 = !DILocation(line: 779, column: 17, scope: !11916)
!11927 = !DILocation(line: 779, column: 24, scope: !11916)
!11928 = !DILocation(line: 779, column: 3, scope: !11916)
!11929 = !DILocation(line: 779, column: 10, scope: !11916)
!11930 = !DILocation(line: 779, column: 15, scope: !11916)
!11931 = !DILocation(line: 780, column: 28, scope: !11916)
!11932 = !DILocation(line: 780, column: 3, scope: !11916)
!11933 = !DILocation(line: 780, column: 10, scope: !11916)
!11934 = !DILocation(line: 780, column: 26, scope: !11916)
!11935 = !DILocation(line: 781, column: 1, scope: !11916)
!11936 = distinct !DISubprogram(name: "allocate_entry", scope: !800, file: !800, line: 751, type: !11937, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!803, !845}
!11939 = !DILocalVariable(name: "table", arg: 1, scope: !11936, file: !800, line: 751, type: !845)
!11940 = !DILocation(line: 751, column: 29, scope: !11936)
!11941 = !DILocalVariable(name: "new", scope: !11936, file: !800, line: 753, type: !803)
!11942 = !DILocation(line: 753, column: 22, scope: !11936)
!11943 = !DILocation(line: 755, column: 7, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11936, file: !800, line: 755, column: 7)
!11945 = !DILocation(line: 755, column: 14, scope: !11944)
!11946 = !DILocation(line: 755, column: 7, scope: !11936)
!11947 = !DILocation(line: 757, column: 13, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !800, line: 756, column: 5)
!11949 = !DILocation(line: 757, column: 20, scope: !11948)
!11950 = !DILocation(line: 757, column: 11, scope: !11948)
!11951 = !DILocation(line: 758, column: 32, scope: !11948)
!11952 = !DILocation(line: 758, column: 37, scope: !11948)
!11953 = !DILocation(line: 758, column: 7, scope: !11948)
!11954 = !DILocation(line: 758, column: 14, scope: !11948)
!11955 = !DILocation(line: 758, column: 30, scope: !11948)
!11956 = !DILocation(line: 759, column: 5, scope: !11948)
!11957 = !DILocation(line: 765, column: 13, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11944, file: !800, line: 761, column: 5)
!11959 = !DILocation(line: 765, column: 11, scope: !11958)
!11960 = !DILocation(line: 769, column: 10, scope: !11936)
!11961 = !DILocation(line: 769, column: 3, scope: !11936)
!11962 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !800, file: !800, line: 1038, type: !11963, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!7, !845, !831, !11965}
!11965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!11966 = !DILocalVariable(name: "table", arg: 1, scope: !11962, file: !800, line: 1038, type: !845)
!11967 = !DILocation(line: 1038, column: 36, scope: !11962)
!11968 = !DILocalVariable(name: "entry", arg: 2, scope: !11962, file: !800, line: 1038, type: !831)
!11969 = !DILocation(line: 1038, column: 55, scope: !11962)
!11970 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !11962, file: !800, line: 1039, type: !11965)
!11971 = !DILocation(line: 1039, column: 37, scope: !11962)
!11972 = !DILocalVariable(name: "data", scope: !11962, file: !800, line: 1041, type: !53)
!11973 = !DILocation(line: 1041, column: 9, scope: !11962)
!11974 = !DILocalVariable(name: "bucket", scope: !11962, file: !800, line: 1042, type: !803)
!11975 = !DILocation(line: 1042, column: 22, scope: !11962)
!11976 = !DILocation(line: 1047, column: 9, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11962, file: !800, line: 1047, column: 7)
!11978 = !DILocation(line: 1047, column: 7, scope: !11962)
!11979 = !DILocation(line: 1048, column: 5, scope: !11977)
!11980 = !DILocation(line: 1051, column: 32, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11962, file: !800, line: 1051, column: 7)
!11982 = !DILocation(line: 1051, column: 39, scope: !11981)
!11983 = !DILocation(line: 1051, column: 15, scope: !11981)
!11984 = !DILocation(line: 1051, column: 13, scope: !11981)
!11985 = !DILocation(line: 1051, column: 63, scope: !11981)
!11986 = !DILocation(line: 1051, column: 7, scope: !11962)
!11987 = !DILocation(line: 1053, column: 11, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11989, file: !800, line: 1053, column: 11)
!11989 = distinct !DILexicalBlock(scope: !11981, file: !800, line: 1052, column: 5)
!11990 = !DILocation(line: 1053, column: 11, scope: !11989)
!11991 = !DILocation(line: 1054, column: 24, scope: !11988)
!11992 = !DILocation(line: 1054, column: 10, scope: !11988)
!11993 = !DILocation(line: 1054, column: 22, scope: !11988)
!11994 = !DILocation(line: 1054, column: 9, scope: !11988)
!11995 = !DILocation(line: 1055, column: 7, scope: !11989)
!11996 = !DILocation(line: 1063, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11962, file: !800, line: 1063, column: 7)
!11998 = !DILocation(line: 1063, column: 14, scope: !11997)
!11999 = !DILocation(line: 1064, column: 9, scope: !11997)
!12000 = !DILocation(line: 1064, column: 16, scope: !11997)
!12001 = !DILocation(line: 1064, column: 24, scope: !11997)
!12002 = !DILocation(line: 1064, column: 43, scope: !11997)
!12003 = !DILocation(line: 1064, column: 50, scope: !11997)
!12004 = !DILocation(line: 1064, column: 41, scope: !11997)
!12005 = !DILocation(line: 1064, column: 7, scope: !11997)
!12006 = !DILocation(line: 1063, column: 7, scope: !11962)
!12007 = !DILocation(line: 1068, column: 21, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11997, file: !800, line: 1065, column: 5)
!12009 = !DILocation(line: 1068, column: 7, scope: !12008)
!12010 = !DILocation(line: 1069, column: 11, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12008, file: !800, line: 1069, column: 11)
!12012 = !DILocation(line: 1069, column: 18, scope: !12011)
!12013 = !DILocation(line: 1070, column: 13, scope: !12011)
!12014 = !DILocation(line: 1070, column: 20, scope: !12011)
!12015 = !DILocation(line: 1070, column: 28, scope: !12011)
!12016 = !DILocation(line: 1070, column: 47, scope: !12011)
!12017 = !DILocation(line: 1070, column: 54, scope: !12011)
!12018 = !DILocation(line: 1070, column: 45, scope: !12011)
!12019 = !DILocation(line: 1070, column: 11, scope: !12011)
!12020 = !DILocation(line: 1069, column: 11, scope: !12008)
!12021 = !DILocalVariable(name: "tuning", scope: !12022, file: !800, line: 1072, type: !815)
!12022 = distinct !DILexicalBlock(scope: !12011, file: !800, line: 1071, column: 9)
!12023 = !DILocation(line: 1072, column: 30, scope: !12022)
!12024 = !DILocation(line: 1072, column: 39, scope: !12022)
!12025 = !DILocation(line: 1072, column: 46, scope: !12022)
!12026 = !DILocalVariable(name: "candidate", scope: !12022, file: !800, line: 1073, type: !821)
!12027 = !DILocation(line: 1073, column: 17, scope: !12022)
!12028 = !DILocation(line: 1074, column: 14, scope: !12022)
!12029 = !DILocation(line: 1074, column: 22, scope: !12022)
!12030 = !DILocation(line: 1075, column: 17, scope: !12022)
!12031 = !DILocation(line: 1075, column: 24, scope: !12022)
!12032 = !DILocation(line: 1075, column: 36, scope: !12022)
!12033 = !DILocation(line: 1075, column: 44, scope: !12022)
!12034 = !DILocation(line: 1075, column: 34, scope: !12022)
!12035 = !DILocation(line: 1076, column: 17, scope: !12022)
!12036 = !DILocation(line: 1076, column: 24, scope: !12022)
!12037 = !DILocation(line: 1076, column: 36, scope: !12022)
!12038 = !DILocation(line: 1076, column: 44, scope: !12022)
!12039 = !DILocation(line: 1076, column: 34, scope: !12022)
!12040 = !DILocation(line: 1077, column: 19, scope: !12022)
!12041 = !DILocation(line: 1077, column: 27, scope: !12022)
!12042 = !DILocation(line: 1077, column: 17, scope: !12022)
!12043 = !DILocation(line: 1079, column: 27, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12022, file: !800, line: 1079, column: 15)
!12045 = !DILocation(line: 1079, column: 24, scope: !12044)
!12046 = !DILocation(line: 1079, column: 15, scope: !12022)
!12047 = !DILocation(line: 1080, column: 13, scope: !12044)
!12048 = !DILocation(line: 1083, column: 29, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12022, file: !800, line: 1083, column: 15)
!12050 = !DILocation(line: 1083, column: 36, scope: !12049)
!12051 = !DILocation(line: 1083, column: 16, scope: !12049)
!12052 = !DILocation(line: 1083, column: 15, scope: !12022)
!12053 = !DILocation(line: 1084, column: 13, scope: !12049)
!12054 = !DILocation(line: 1087, column: 32, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12022, file: !800, line: 1087, column: 15)
!12056 = !DILocation(line: 1087, column: 39, scope: !12055)
!12057 = !DILocation(line: 1087, column: 15, scope: !12055)
!12058 = !DILocation(line: 1087, column: 62, scope: !12055)
!12059 = !DILocation(line: 1087, column: 15, scope: !12022)
!12060 = !DILocation(line: 1088, column: 13, scope: !12055)
!12061 = !DILocation(line: 1089, column: 9, scope: !12022)
!12062 = !DILocation(line: 1090, column: 5, scope: !12008)
!12063 = !DILocation(line: 1094, column: 7, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !11962, file: !800, line: 1094, column: 7)
!12065 = !DILocation(line: 1094, column: 15, scope: !12064)
!12066 = !DILocation(line: 1094, column: 7, scope: !11962)
!12067 = !DILocalVariable(name: "new_entry", scope: !12068, file: !800, line: 1096, type: !803)
!12068 = distinct !DILexicalBlock(scope: !12064, file: !800, line: 1095, column: 5)
!12069 = !DILocation(line: 1096, column: 26, scope: !12068)
!12070 = !DILocation(line: 1096, column: 54, scope: !12068)
!12071 = !DILocation(line: 1096, column: 38, scope: !12068)
!12072 = !DILocation(line: 1098, column: 11, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12068, file: !800, line: 1098, column: 11)
!12074 = !DILocation(line: 1098, column: 21, scope: !12073)
!12075 = !DILocation(line: 1098, column: 11, scope: !12068)
!12076 = !DILocation(line: 1099, column: 9, scope: !12073)
!12077 = !DILocation(line: 1103, column: 34, scope: !12068)
!12078 = !DILocation(line: 1103, column: 7, scope: !12068)
!12079 = !DILocation(line: 1103, column: 18, scope: !12068)
!12080 = !DILocation(line: 1103, column: 23, scope: !12068)
!12081 = !DILocation(line: 1104, column: 25, scope: !12068)
!12082 = !DILocation(line: 1104, column: 33, scope: !12068)
!12083 = !DILocation(line: 1104, column: 7, scope: !12068)
!12084 = !DILocation(line: 1104, column: 18, scope: !12068)
!12085 = !DILocation(line: 1104, column: 23, scope: !12068)
!12086 = !DILocation(line: 1105, column: 22, scope: !12068)
!12087 = !DILocation(line: 1105, column: 7, scope: !12068)
!12088 = !DILocation(line: 1105, column: 15, scope: !12068)
!12089 = !DILocation(line: 1105, column: 20, scope: !12068)
!12090 = !DILocation(line: 1106, column: 7, scope: !12068)
!12091 = !DILocation(line: 1106, column: 14, scope: !12068)
!12092 = !DILocation(line: 1106, column: 23, scope: !12068)
!12093 = !DILocation(line: 1107, column: 7, scope: !12068)
!12094 = !DILocation(line: 1112, column: 27, scope: !11962)
!12095 = !DILocation(line: 1112, column: 3, scope: !11962)
!12096 = !DILocation(line: 1112, column: 11, scope: !11962)
!12097 = !DILocation(line: 1112, column: 16, scope: !11962)
!12098 = !DILocation(line: 1113, column: 3, scope: !11962)
!12099 = !DILocation(line: 1113, column: 10, scope: !11962)
!12100 = !DILocation(line: 1113, column: 19, scope: !11962)
!12101 = !DILocation(line: 1114, column: 3, scope: !11962)
!12102 = !DILocation(line: 1114, column: 10, scope: !11962)
!12103 = !DILocation(line: 1114, column: 24, scope: !11962)
!12104 = !DILocation(line: 1116, column: 3, scope: !11962)
!12105 = !DILocation(line: 1117, column: 1, scope: !11962)
!12106 = distinct !DISubprogram(name: "hash_find_entry", scope: !800, file: !800, line: 790, type: !12107, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !794, retainedNodes: !298)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{!53, !845, !831, !12109, !142}
!12109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!12110 = !DILocalVariable(name: "table", arg: 1, scope: !12106, file: !800, line: 790, type: !845)
!12111 = !DILocation(line: 790, column: 30, scope: !12106)
!12112 = !DILocalVariable(name: "entry", arg: 2, scope: !12106, file: !800, line: 790, type: !831)
!12113 = !DILocation(line: 790, column: 49, scope: !12106)
!12114 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12106, file: !800, line: 791, type: !12109)
!12115 = !DILocation(line: 791, column: 38, scope: !12106)
!12116 = !DILocalVariable(name: "delete", arg: 4, scope: !12106, file: !800, line: 791, type: !142)
!12117 = !DILocation(line: 791, column: 56, scope: !12106)
!12118 = !DILocalVariable(name: "bucket", scope: !12106, file: !800, line: 793, type: !803)
!12119 = !DILocation(line: 793, column: 22, scope: !12106)
!12120 = !DILocation(line: 793, column: 44, scope: !12106)
!12121 = !DILocation(line: 793, column: 51, scope: !12106)
!12122 = !DILocation(line: 793, column: 31, scope: !12106)
!12123 = !DILocalVariable(name: "cursor", scope: !12106, file: !800, line: 794, type: !803)
!12124 = !DILocation(line: 794, column: 22, scope: !12106)
!12125 = !DILocation(line: 796, column: 18, scope: !12106)
!12126 = !DILocation(line: 796, column: 4, scope: !12106)
!12127 = !DILocation(line: 796, column: 16, scope: !12106)
!12128 = !DILocation(line: 799, column: 7, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12106, file: !800, line: 799, column: 7)
!12130 = !DILocation(line: 799, column: 15, scope: !12129)
!12131 = !DILocation(line: 799, column: 20, scope: !12129)
!12132 = !DILocation(line: 799, column: 7, scope: !12106)
!12133 = !DILocation(line: 800, column: 5, scope: !12129)
!12134 = !DILocation(line: 803, column: 7, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12106, file: !800, line: 803, column: 7)
!12136 = !DILocation(line: 803, column: 16, scope: !12135)
!12137 = !DILocation(line: 803, column: 24, scope: !12135)
!12138 = !DILocation(line: 803, column: 13, scope: !12135)
!12139 = !DILocation(line: 803, column: 29, scope: !12135)
!12140 = !DILocation(line: 803, column: 32, scope: !12135)
!12141 = !DILocation(line: 803, column: 39, scope: !12135)
!12142 = !DILocation(line: 803, column: 51, scope: !12135)
!12143 = !DILocation(line: 803, column: 58, scope: !12135)
!12144 = !DILocation(line: 803, column: 66, scope: !12135)
!12145 = !DILocation(line: 803, column: 7, scope: !12106)
!12146 = !DILocalVariable(name: "data", scope: !12147, file: !800, line: 805, type: !53)
!12147 = distinct !DILexicalBlock(scope: !12135, file: !800, line: 804, column: 5)
!12148 = !DILocation(line: 805, column: 13, scope: !12147)
!12149 = !DILocation(line: 805, column: 20, scope: !12147)
!12150 = !DILocation(line: 805, column: 28, scope: !12147)
!12151 = !DILocation(line: 807, column: 11, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12147, file: !800, line: 807, column: 11)
!12153 = !DILocation(line: 807, column: 11, scope: !12147)
!12154 = !DILocation(line: 809, column: 15, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !800, line: 809, column: 15)
!12156 = distinct !DILexicalBlock(scope: !12152, file: !800, line: 808, column: 9)
!12157 = !DILocation(line: 809, column: 23, scope: !12155)
!12158 = !DILocation(line: 809, column: 15, scope: !12156)
!12159 = !DILocalVariable(name: "next", scope: !12160, file: !800, line: 811, type: !803)
!12160 = distinct !DILexicalBlock(scope: !12155, file: !800, line: 810, column: 13)
!12161 = !DILocation(line: 811, column: 34, scope: !12160)
!12162 = !DILocation(line: 811, column: 41, scope: !12160)
!12163 = !DILocation(line: 811, column: 49, scope: !12160)
!12164 = !DILocation(line: 815, column: 16, scope: !12160)
!12165 = !DILocation(line: 815, column: 26, scope: !12160)
!12166 = !DILocation(line: 815, column: 25, scope: !12160)
!12167 = !DILocation(line: 816, column: 27, scope: !12160)
!12168 = !DILocation(line: 816, column: 34, scope: !12160)
!12169 = !DILocation(line: 816, column: 15, scope: !12160)
!12170 = !DILocation(line: 817, column: 13, scope: !12160)
!12171 = !DILocation(line: 820, column: 15, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12155, file: !800, line: 819, column: 13)
!12173 = !DILocation(line: 820, column: 23, scope: !12172)
!12174 = !DILocation(line: 820, column: 28, scope: !12172)
!12175 = !DILocation(line: 822, column: 9, scope: !12156)
!12176 = !DILocation(line: 824, column: 14, scope: !12147)
!12177 = !DILocation(line: 824, column: 7, scope: !12147)
!12178 = !DILocation(line: 828, column: 17, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12106, file: !800, line: 828, column: 3)
!12180 = !DILocation(line: 828, column: 15, scope: !12179)
!12181 = !DILocation(line: 828, column: 8, scope: !12179)
!12182 = !DILocation(line: 828, column: 25, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !800, line: 828, column: 3)
!12184 = !DILocation(line: 828, column: 33, scope: !12183)
!12185 = !DILocation(line: 828, column: 3, scope: !12179)
!12186 = !DILocation(line: 830, column: 11, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12188, file: !800, line: 830, column: 11)
!12188 = distinct !DILexicalBlock(scope: !12183, file: !800, line: 829, column: 5)
!12189 = !DILocation(line: 830, column: 20, scope: !12187)
!12190 = !DILocation(line: 830, column: 28, scope: !12187)
!12191 = !DILocation(line: 830, column: 34, scope: !12187)
!12192 = !DILocation(line: 830, column: 17, scope: !12187)
!12193 = !DILocation(line: 831, column: 11, scope: !12187)
!12194 = !DILocation(line: 831, column: 14, scope: !12187)
!12195 = !DILocation(line: 831, column: 21, scope: !12187)
!12196 = !DILocation(line: 831, column: 33, scope: !12187)
!12197 = !DILocation(line: 831, column: 40, scope: !12187)
!12198 = !DILocation(line: 831, column: 48, scope: !12187)
!12199 = !DILocation(line: 831, column: 54, scope: !12187)
!12200 = !DILocation(line: 830, column: 11, scope: !12188)
!12201 = !DILocalVariable(name: "data", scope: !12202, file: !800, line: 833, type: !53)
!12202 = distinct !DILexicalBlock(scope: !12187, file: !800, line: 832, column: 9)
!12203 = !DILocation(line: 833, column: 17, scope: !12202)
!12204 = !DILocation(line: 833, column: 24, scope: !12202)
!12205 = !DILocation(line: 833, column: 32, scope: !12202)
!12206 = !DILocation(line: 833, column: 38, scope: !12202)
!12207 = !DILocation(line: 835, column: 15, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12202, file: !800, line: 835, column: 15)
!12209 = !DILocation(line: 835, column: 15, scope: !12202)
!12210 = !DILocalVariable(name: "next", scope: !12211, file: !800, line: 837, type: !803)
!12211 = distinct !DILexicalBlock(scope: !12208, file: !800, line: 836, column: 13)
!12212 = !DILocation(line: 837, column: 34, scope: !12211)
!12213 = !DILocation(line: 837, column: 41, scope: !12211)
!12214 = !DILocation(line: 837, column: 49, scope: !12211)
!12215 = !DILocation(line: 841, column: 30, scope: !12211)
!12216 = !DILocation(line: 841, column: 36, scope: !12211)
!12217 = !DILocation(line: 841, column: 15, scope: !12211)
!12218 = !DILocation(line: 841, column: 23, scope: !12211)
!12219 = !DILocation(line: 841, column: 28, scope: !12211)
!12220 = !DILocation(line: 842, column: 27, scope: !12211)
!12221 = !DILocation(line: 842, column: 34, scope: !12211)
!12222 = !DILocation(line: 842, column: 15, scope: !12211)
!12223 = !DILocation(line: 843, column: 13, scope: !12211)
!12224 = !DILocation(line: 845, column: 18, scope: !12202)
!12225 = !DILocation(line: 845, column: 11, scope: !12202)
!12226 = !DILocation(line: 847, column: 5, scope: !12188)
!12227 = !DILocation(line: 828, column: 48, scope: !12183)
!12228 = !DILocation(line: 828, column: 56, scope: !12183)
!12229 = !DILocation(line: 828, column: 46, scope: !12183)
!12230 = !DILocation(line: 828, column: 3, scope: !12183)
!12231 = distinct !{!12231, !12185, !12232}
!12232 = !DILocation(line: 847, column: 5, scope: !12179)
!12233 = !DILocation(line: 850, column: 3, scope: !12106)
!12234 = !DILocation(line: 851, column: 1, scope: !12106)
!12235 = distinct !DISubprogram(name: "hash_insert", scope: !800, file: !800, line: 1126, type: !12236, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!12236 = !DISubroutineType(types: !12237)
!12237 = !{!53, !845, !831}
!12238 = !DILocalVariable(name: "table", arg: 1, scope: !12235, file: !800, line: 1126, type: !845)
!12239 = !DILocation(line: 1126, column: 26, scope: !12235)
!12240 = !DILocalVariable(name: "entry", arg: 2, scope: !12235, file: !800, line: 1126, type: !831)
!12241 = !DILocation(line: 1126, column: 45, scope: !12235)
!12242 = !DILocalVariable(name: "matched_ent", scope: !12235, file: !800, line: 1128, type: !831)
!12243 = !DILocation(line: 1128, column: 15, scope: !12235)
!12244 = !DILocalVariable(name: "err", scope: !12235, file: !800, line: 1129, type: !7)
!12245 = !DILocation(line: 1129, column: 7, scope: !12235)
!12246 = !DILocation(line: 1129, column: 36, scope: !12235)
!12247 = !DILocation(line: 1129, column: 43, scope: !12235)
!12248 = !DILocation(line: 1129, column: 13, scope: !12235)
!12249 = !DILocation(line: 1130, column: 11, scope: !12235)
!12250 = !DILocation(line: 1130, column: 15, scope: !12235)
!12251 = !DILocation(line: 1132, column: 23, scope: !12235)
!12252 = !DILocation(line: 1132, column: 27, scope: !12235)
!12253 = !DILocation(line: 1132, column: 34, scope: !12235)
!12254 = !DILocation(line: 1132, column: 48, scope: !12235)
!12255 = !DILocation(line: 1130, column: 3, scope: !12235)
!12256 = distinct !DISubprogram(name: "hash_delete", scope: !800, file: !800, line: 1140, type: !12236, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !794, retainedNodes: !298)
!12257 = !DILocalVariable(name: "table", arg: 1, scope: !12256, file: !800, line: 1140, type: !845)
!12258 = !DILocation(line: 1140, column: 26, scope: !12256)
!12259 = !DILocalVariable(name: "entry", arg: 2, scope: !12256, file: !800, line: 1140, type: !831)
!12260 = !DILocation(line: 1140, column: 45, scope: !12256)
!12261 = !DILocalVariable(name: "data", scope: !12256, file: !800, line: 1142, type: !53)
!12262 = !DILocation(line: 1142, column: 9, scope: !12256)
!12263 = !DILocalVariable(name: "bucket", scope: !12256, file: !800, line: 1143, type: !803)
!12264 = !DILocation(line: 1143, column: 22, scope: !12256)
!12265 = !DILocation(line: 1145, column: 27, scope: !12256)
!12266 = !DILocation(line: 1145, column: 34, scope: !12256)
!12267 = !DILocation(line: 1145, column: 10, scope: !12256)
!12268 = !DILocation(line: 1145, column: 8, scope: !12256)
!12269 = !DILocation(line: 1146, column: 8, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12256, file: !800, line: 1146, column: 7)
!12271 = !DILocation(line: 1146, column: 7, scope: !12256)
!12272 = !DILocation(line: 1147, column: 5, scope: !12270)
!12273 = !DILocation(line: 1149, column: 3, scope: !12256)
!12274 = !DILocation(line: 1149, column: 10, scope: !12256)
!12275 = !DILocation(line: 1149, column: 19, scope: !12256)
!12276 = !DILocation(line: 1150, column: 8, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12256, file: !800, line: 1150, column: 7)
!12278 = !DILocation(line: 1150, column: 16, scope: !12277)
!12279 = !DILocation(line: 1150, column: 7, scope: !12256)
!12280 = !DILocation(line: 1152, column: 7, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12277, file: !800, line: 1151, column: 5)
!12282 = !DILocation(line: 1152, column: 14, scope: !12281)
!12283 = !DILocation(line: 1152, column: 28, scope: !12281)
!12284 = !DILocation(line: 1157, column: 11, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12281, file: !800, line: 1157, column: 11)
!12286 = !DILocation(line: 1157, column: 18, scope: !12285)
!12287 = !DILocation(line: 1158, column: 13, scope: !12285)
!12288 = !DILocation(line: 1158, column: 20, scope: !12285)
!12289 = !DILocation(line: 1158, column: 28, scope: !12285)
!12290 = !DILocation(line: 1158, column: 47, scope: !12285)
!12291 = !DILocation(line: 1158, column: 54, scope: !12285)
!12292 = !DILocation(line: 1158, column: 45, scope: !12285)
!12293 = !DILocation(line: 1158, column: 11, scope: !12285)
!12294 = !DILocation(line: 1157, column: 11, scope: !12281)
!12295 = !DILocation(line: 1162, column: 25, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12285, file: !800, line: 1159, column: 9)
!12297 = !DILocation(line: 1162, column: 11, scope: !12296)
!12298 = !DILocation(line: 1163, column: 15, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12296, file: !800, line: 1163, column: 15)
!12300 = !DILocation(line: 1163, column: 22, scope: !12299)
!12301 = !DILocation(line: 1164, column: 17, scope: !12299)
!12302 = !DILocation(line: 1164, column: 24, scope: !12299)
!12303 = !DILocation(line: 1164, column: 32, scope: !12299)
!12304 = !DILocation(line: 1164, column: 51, scope: !12299)
!12305 = !DILocation(line: 1164, column: 58, scope: !12299)
!12306 = !DILocation(line: 1164, column: 49, scope: !12299)
!12307 = !DILocation(line: 1164, column: 15, scope: !12299)
!12308 = !DILocation(line: 1163, column: 15, scope: !12296)
!12309 = !DILocalVariable(name: "tuning", scope: !12310, file: !800, line: 1166, type: !815)
!12310 = distinct !DILexicalBlock(scope: !12299, file: !800, line: 1165, column: 13)
!12311 = !DILocation(line: 1166, column: 34, scope: !12310)
!12312 = !DILocation(line: 1166, column: 43, scope: !12310)
!12313 = !DILocation(line: 1166, column: 50, scope: !12310)
!12314 = !DILocalVariable(name: "candidate", scope: !12310, file: !800, line: 1167, type: !55)
!12315 = !DILocation(line: 1167, column: 22, scope: !12310)
!12316 = !DILocation(line: 1168, column: 18, scope: !12310)
!12317 = !DILocation(line: 1168, column: 26, scope: !12310)
!12318 = !DILocation(line: 1169, column: 20, scope: !12310)
!12319 = !DILocation(line: 1169, column: 27, scope: !12310)
!12320 = !DILocation(line: 1169, column: 39, scope: !12310)
!12321 = !DILocation(line: 1169, column: 47, scope: !12310)
!12322 = !DILocation(line: 1169, column: 37, scope: !12310)
!12323 = !DILocation(line: 1170, column: 21, scope: !12310)
!12324 = !DILocation(line: 1170, column: 28, scope: !12310)
!12325 = !DILocation(line: 1170, column: 40, scope: !12310)
!12326 = !DILocation(line: 1170, column: 48, scope: !12310)
!12327 = !DILocation(line: 1170, column: 38, scope: !12310)
!12328 = !DILocation(line: 1171, column: 23, scope: !12310)
!12329 = !DILocation(line: 1171, column: 31, scope: !12310)
!12330 = !DILocation(line: 1171, column: 21, scope: !12310)
!12331 = !DILocation(line: 1168, column: 17, scope: !12310)
!12332 = !DILocation(line: 1173, column: 33, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12310, file: !800, line: 1173, column: 19)
!12334 = !DILocation(line: 1173, column: 40, scope: !12333)
!12335 = !DILocation(line: 1173, column: 20, scope: !12333)
!12336 = !DILocation(line: 1173, column: 19, scope: !12310)
!12337 = !DILocalVariable(name: "cursor", scope: !12338, file: !800, line: 1181, type: !803)
!12338 = distinct !DILexicalBlock(scope: !12333, file: !800, line: 1174, column: 17)
!12339 = !DILocation(line: 1181, column: 38, scope: !12338)
!12340 = !DILocation(line: 1181, column: 47, scope: !12338)
!12341 = !DILocation(line: 1181, column: 54, scope: !12338)
!12342 = !DILocalVariable(name: "next", scope: !12338, file: !800, line: 1182, type: !803)
!12343 = !DILocation(line: 1182, column: 38, scope: !12338)
!12344 = !DILocation(line: 1183, column: 19, scope: !12338)
!12345 = !DILocation(line: 1183, column: 26, scope: !12338)
!12346 = !DILocation(line: 1185, column: 30, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12338, file: !800, line: 1184, column: 21)
!12348 = !DILocation(line: 1185, column: 38, scope: !12347)
!12349 = !DILocation(line: 1185, column: 28, scope: !12347)
!12350 = !DILocation(line: 1186, column: 29, scope: !12347)
!12351 = !DILocation(line: 1186, column: 23, scope: !12347)
!12352 = !DILocation(line: 1187, column: 32, scope: !12347)
!12353 = !DILocation(line: 1187, column: 30, scope: !12347)
!12354 = distinct !{!12354, !12344, !12355}
!12355 = !DILocation(line: 1188, column: 21, scope: !12338)
!12356 = !DILocation(line: 1189, column: 19, scope: !12338)
!12357 = !DILocation(line: 1189, column: 26, scope: !12338)
!12358 = !DILocation(line: 1189, column: 42, scope: !12338)
!12359 = !DILocation(line: 1191, column: 17, scope: !12338)
!12360 = !DILocation(line: 1192, column: 13, scope: !12310)
!12361 = !DILocation(line: 1193, column: 9, scope: !12296)
!12362 = !DILocation(line: 1194, column: 5, scope: !12281)
!12363 = !DILocation(line: 1196, column: 10, scope: !12256)
!12364 = !DILocation(line: 1196, column: 3, scope: !12256)
!12365 = !DILocation(line: 1197, column: 1, scope: !12256)
!12366 = distinct !DISubprogram(name: "triple_hash", scope: !12367, file: !12367, line: 34, type: !829, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !298)
!12367 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12368 = !DILocalVariable(name: "x", arg: 1, scope: !12366, file: !12367, line: 34, type: !831)
!12369 = !DILocation(line: 34, column: 26, scope: !12366)
!12370 = !DILocalVariable(name: "table_size", arg: 2, scope: !12366, file: !12367, line: 34, type: !55)
!12371 = !DILocation(line: 34, column: 36, scope: !12366)
!12372 = !DILocalVariable(name: "p", scope: !12366, file: !12367, line: 36, type: !1308)
!12373 = !DILocation(line: 36, column: 26, scope: !12366)
!12374 = !DILocation(line: 36, column: 30, scope: !12366)
!12375 = !DILocalVariable(name: "tmp", scope: !12366, file: !12367, line: 37, type: !55)
!12376 = !DILocation(line: 37, column: 10, scope: !12366)
!12377 = !DILocation(line: 37, column: 26, scope: !12366)
!12378 = !DILocation(line: 37, column: 29, scope: !12366)
!12379 = !DILocation(line: 37, column: 35, scope: !12366)
!12380 = !DILocation(line: 37, column: 16, scope: !12366)
!12381 = !DILocation(line: 40, column: 11, scope: !12366)
!12382 = !DILocation(line: 40, column: 17, scope: !12366)
!12383 = !DILocation(line: 40, column: 20, scope: !12366)
!12384 = !DILocation(line: 40, column: 15, scope: !12366)
!12385 = !DILocation(line: 40, column: 30, scope: !12366)
!12386 = !DILocation(line: 40, column: 28, scope: !12366)
!12387 = !DILocation(line: 40, column: 3, scope: !12366)
!12388 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12367, file: !12367, line: 45, type: !829, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !298)
!12389 = !DILocalVariable(name: "x", arg: 1, scope: !12388, file: !12367, line: 45, type: !831)
!12390 = !DILocation(line: 45, column: 34, scope: !12388)
!12391 = !DILocalVariable(name: "table_size", arg: 2, scope: !12388, file: !12367, line: 45, type: !55)
!12392 = !DILocation(line: 45, column: 44, scope: !12388)
!12393 = !DILocalVariable(name: "p", scope: !12388, file: !12367, line: 47, type: !1308)
!12394 = !DILocation(line: 47, column: 26, scope: !12388)
!12395 = !DILocation(line: 47, column: 30, scope: !12388)
!12396 = !DILocation(line: 50, column: 10, scope: !12388)
!12397 = !DILocation(line: 50, column: 13, scope: !12388)
!12398 = !DILocation(line: 50, column: 22, scope: !12388)
!12399 = !DILocation(line: 50, column: 20, scope: !12388)
!12400 = !DILocation(line: 50, column: 3, scope: !12388)
!12401 = distinct !DISubprogram(name: "triple_compare", scope: !12367, file: !12367, line: 55, type: !836, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !298)
!12402 = !DILocalVariable(name: "x", arg: 1, scope: !12401, file: !12367, line: 55, type: !831)
!12403 = !DILocation(line: 55, column: 29, scope: !12401)
!12404 = !DILocalVariable(name: "y", arg: 2, scope: !12401, file: !12367, line: 55, type: !831)
!12405 = !DILocation(line: 55, column: 44, scope: !12401)
!12406 = !DILocalVariable(name: "a", scope: !12401, file: !12367, line: 57, type: !1308)
!12407 = !DILocation(line: 57, column: 26, scope: !12401)
!12408 = !DILocation(line: 57, column: 30, scope: !12401)
!12409 = !DILocalVariable(name: "b", scope: !12401, file: !12367, line: 58, type: !1308)
!12410 = !DILocation(line: 58, column: 26, scope: !12401)
!12411 = !DILocation(line: 58, column: 30, scope: !12401)
!12412 = !DILocation(line: 59, column: 11, scope: !12401)
!12413 = !DILocation(line: 59, column: 31, scope: !12401)
!12414 = !DILocation(line: 59, column: 45, scope: !12401)
!12415 = !DILocation(line: 59, column: 48, scope: !12401)
!12416 = !DILocation(line: 59, column: 54, scope: !12401)
!12417 = !DILocation(line: 59, column: 57, scope: !12401)
!12418 = !DILocation(line: 59, column: 34, scope: !12401)
!12419 = !DILocation(line: 0, scope: !12401)
!12420 = !DILocation(line: 59, column: 10, scope: !12401)
!12421 = !DILocation(line: 59, column: 3, scope: !12401)
!12422 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12367, file: !12367, line: 63, type: !836, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !298)
!12423 = !DILocalVariable(name: "x", arg: 1, scope: !12422, file: !12367, line: 63, type: !831)
!12424 = !DILocation(line: 63, column: 37, scope: !12422)
!12425 = !DILocalVariable(name: "y", arg: 2, scope: !12422, file: !12367, line: 63, type: !831)
!12426 = !DILocation(line: 63, column: 52, scope: !12422)
!12427 = !DILocalVariable(name: "a", scope: !12422, file: !12367, line: 65, type: !1308)
!12428 = !DILocation(line: 65, column: 26, scope: !12422)
!12429 = !DILocation(line: 65, column: 30, scope: !12422)
!12430 = !DILocalVariable(name: "b", scope: !12422, file: !12367, line: 66, type: !1308)
!12431 = !DILocation(line: 66, column: 26, scope: !12422)
!12432 = !DILocation(line: 66, column: 30, scope: !12422)
!12433 = !DILocation(line: 67, column: 11, scope: !12422)
!12434 = !DILocation(line: 67, column: 31, scope: !12422)
!12435 = !DILocation(line: 67, column: 34, scope: !12422)
!12436 = !DILocation(line: 0, scope: !12422)
!12437 = !DILocation(line: 67, column: 10, scope: !12422)
!12438 = !DILocation(line: 67, column: 3, scope: !12422)
!12439 = distinct !DISubprogram(name: "triple_free", scope: !12367, file: !12367, line: 72, type: !841, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1305, retainedNodes: !298)
!12440 = !DILocalVariable(name: "x", arg: 1, scope: !12439, file: !12367, line: 72, type: !53)
!12441 = !DILocation(line: 72, column: 20, scope: !12439)
!12442 = !DILocalVariable(name: "a", scope: !12439, file: !12367, line: 74, type: !1315)
!12443 = !DILocation(line: 74, column: 20, scope: !12439)
!12444 = !DILocation(line: 74, column: 24, scope: !12439)
!12445 = !DILocation(line: 75, column: 9, scope: !12439)
!12446 = !DILocation(line: 75, column: 12, scope: !12439)
!12447 = !DILocation(line: 75, column: 3, scope: !12439)
!12448 = !DILocation(line: 76, column: 9, scope: !12439)
!12449 = !DILocation(line: 76, column: 3, scope: !12439)
!12450 = !DILocation(line: 77, column: 1, scope: !12439)
!12451 = distinct !DISubprogram(name: "mkancesdirs", scope: !12452, file: !12452, line: 65, type: !12453, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1316, retainedNodes: !298)
!12452 = !DIFile(filename: "lib/mkancesdirs.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!627, !9, !12455, !12456, !53}
!12455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!12456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!12457 = !DILocalVariable(name: "file", arg: 1, scope: !12451, file: !12452, line: 65, type: !9)
!12458 = !DILocation(line: 65, column: 20, scope: !12451)
!12459 = !DILocalVariable(name: "wd", arg: 2, scope: !12451, file: !12452, line: 65, type: !12455)
!12460 = !DILocation(line: 65, column: 41, scope: !12451)
!12461 = !DILocalVariable(name: "make_dir", arg: 3, scope: !12451, file: !12452, line: 66, type: !12456)
!12462 = !DILocation(line: 66, column: 20, scope: !12451)
!12463 = !DILocalVariable(name: "make_dir_arg", arg: 4, scope: !12451, file: !12452, line: 67, type: !53)
!12464 = !DILocation(line: 67, column: 20, scope: !12451)
!12465 = !DILocalVariable(name: "sep", scope: !12451, file: !12452, line: 72, type: !9)
!12466 = !DILocation(line: 72, column: 9, scope: !12451)
!12467 = !DILocalVariable(name: "component", scope: !12451, file: !12452, line: 76, type: !9)
!12468 = !DILocation(line: 76, column: 9, scope: !12451)
!12469 = !DILocation(line: 76, column: 21, scope: !12451)
!12470 = !DILocalVariable(name: "p", scope: !12451, file: !12452, line: 78, type: !9)
!12471 = !DILocation(line: 78, column: 9, scope: !12451)
!12472 = !DILocation(line: 78, column: 13, scope: !12451)
!12473 = !DILocation(line: 78, column: 18, scope: !12451)
!12474 = !DILocalVariable(name: "c", scope: !12451, file: !12452, line: 79, type: !10)
!12475 = !DILocation(line: 79, column: 8, scope: !12451)
!12476 = !DILocalVariable(name: "made_dir", scope: !12451, file: !12452, line: 80, type: !142)
!12477 = !DILocation(line: 80, column: 8, scope: !12451)
!12478 = !DILocation(line: 88, column: 3, scope: !12451)
!12479 = !DILocation(line: 88, column: 17, scope: !12451)
!12480 = !DILocation(line: 88, column: 15, scope: !12451)
!12481 = !DILocation(line: 88, column: 13, scope: !12451)
!12482 = !DILocation(line: 89, column: 9, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12451, file: !12452, line: 89, column: 9)
!12484 = !DILocation(line: 89, column: 9, scope: !12451)
!12485 = !DILocation(line: 91, column: 15, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !12452, line: 91, column: 13)
!12487 = distinct !DILexicalBlock(scope: !12483, file: !12452, line: 90, column: 7)
!12488 = !DILocation(line: 91, column: 13, scope: !12487)
!12489 = !DILocation(line: 92, column: 17, scope: !12486)
!12490 = !DILocation(line: 92, column: 15, scope: !12486)
!12491 = !DILocation(line: 92, column: 11, scope: !12486)
!12492 = !DILocation(line: 93, column: 7, scope: !12487)
!12493 = !DILocation(line: 94, column: 14, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12483, file: !12452, line: 94, column: 14)
!12495 = !DILocation(line: 94, column: 26, scope: !12494)
!12496 = !DILocation(line: 94, column: 30, scope: !12494)
!12497 = !DILocation(line: 94, column: 29, scope: !12494)
!12498 = !DILocation(line: 94, column: 32, scope: !12494)
!12499 = !DILocation(line: 94, column: 35, scope: !12494)
!12500 = !DILocation(line: 94, column: 14, scope: !12483)
!12501 = !DILocation(line: 98, column: 16, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !12452, line: 98, column: 13)
!12503 = distinct !DILexicalBlock(scope: !12494, file: !12452, line: 95, column: 7)
!12504 = !DILocation(line: 98, column: 22, scope: !12502)
!12505 = !DILocation(line: 98, column: 20, scope: !12502)
!12506 = !DILocation(line: 98, column: 32, scope: !12502)
!12507 = !DILocation(line: 98, column: 37, scope: !12502)
!12508 = !DILocation(line: 98, column: 40, scope: !12502)
!12509 = !DILocation(line: 98, column: 53, scope: !12502)
!12510 = !DILocation(line: 98, column: 13, scope: !12503)
!12511 = !DILocalVariable(name: "make_dir_errno", scope: !12512, file: !12452, line: 100, type: !7)
!12512 = distinct !DILexicalBlock(scope: !12502, file: !12452, line: 99, column: 11)
!12513 = !DILocation(line: 100, column: 17, scope: !12512)
!12514 = !DILocalVariable(name: "savewd_chdir_options", scope: !12512, file: !12452, line: 101, type: !7)
!12515 = !DILocation(line: 101, column: 17, scope: !12512)
!12516 = !DILocalVariable(name: "chdir_result", scope: !12512, file: !12452, line: 102, type: !7)
!12517 = !DILocation(line: 102, column: 17, scope: !12512)
!12518 = !DILocation(line: 106, column: 14, scope: !12512)
!12519 = !DILocation(line: 106, column: 18, scope: !12512)
!12520 = !DILocation(line: 110, column: 17, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12512, file: !12452, line: 110, column: 17)
!12522 = !DILocation(line: 110, column: 23, scope: !12521)
!12523 = !DILocation(line: 110, column: 21, scope: !12521)
!12524 = !DILocation(line: 110, column: 33, scope: !12521)
!12525 = !DILocation(line: 111, column: 17, scope: !12521)
!12526 = !DILocation(line: 111, column: 20, scope: !12521)
!12527 = !DILocation(line: 111, column: 33, scope: !12521)
!12528 = !DILocation(line: 111, column: 40, scope: !12521)
!12529 = !DILocation(line: 111, column: 43, scope: !12521)
!12530 = !DILocation(line: 111, column: 56, scope: !12521)
!12531 = !DILocation(line: 110, column: 17, scope: !12512)
!12532 = !DILocation(line: 112, column: 24, scope: !12521)
!12533 = !DILocation(line: 112, column: 15, scope: !12521)
!12534 = !DILocation(line: 113, column: 22, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12521, file: !12452, line: 113, column: 22)
!12536 = !DILocation(line: 113, column: 32, scope: !12535)
!12537 = !DILocation(line: 113, column: 38, scope: !12535)
!12538 = !DILocation(line: 113, column: 49, scope: !12535)
!12539 = !DILocation(line: 113, column: 63, scope: !12535)
!12540 = !DILocation(line: 113, column: 22, scope: !12521)
!12541 = !DILocation(line: 114, column: 32, scope: !12535)
!12542 = !DILocation(line: 114, column: 30, scope: !12535)
!12543 = !DILocation(line: 114, column: 15, scope: !12535)
!12544 = !DILocation(line: 116, column: 24, scope: !12535)
!12545 = !DILocation(line: 118, column: 17, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12512, file: !12452, line: 118, column: 17)
!12547 = !DILocation(line: 118, column: 17, scope: !12512)
!12548 = !DILocation(line: 119, column: 36, scope: !12546)
!12549 = !DILocation(line: 119, column: 15, scope: !12546)
!12550 = !DILocation(line: 122, column: 29, scope: !12512)
!12551 = !DILocation(line: 122, column: 33, scope: !12512)
!12552 = !DILocation(line: 122, column: 44, scope: !12512)
!12553 = !DILocation(line: 122, column: 15, scope: !12512)
!12554 = !DILocation(line: 121, column: 26, scope: !12512)
!12555 = !DILocation(line: 126, column: 17, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12512, file: !12452, line: 126, column: 17)
!12557 = !DILocation(line: 126, column: 30, scope: !12556)
!12558 = !DILocation(line: 126, column: 17, scope: !12512)
!12559 = !DILocation(line: 127, column: 16, scope: !12556)
!12560 = !DILocation(line: 127, column: 20, scope: !12556)
!12561 = !DILocation(line: 127, column: 15, scope: !12556)
!12562 = !DILocation(line: 129, column: 17, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12512, file: !12452, line: 129, column: 17)
!12564 = !DILocation(line: 129, column: 30, scope: !12563)
!12565 = !DILocation(line: 129, column: 17, scope: !12512)
!12566 = !DILocation(line: 131, column: 21, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12452, line: 131, column: 21)
!12568 = distinct !DILexicalBlock(scope: !12563, file: !12452, line: 130, column: 15)
!12569 = !DILocation(line: 131, column: 36, scope: !12567)
!12570 = !DILocation(line: 131, column: 41, scope: !12567)
!12571 = !DILocation(line: 131, column: 44, scope: !12567)
!12572 = !DILocation(line: 131, column: 50, scope: !12567)
!12573 = !DILocation(line: 131, column: 21, scope: !12568)
!12574 = !DILocation(line: 132, column: 27, scope: !12567)
!12575 = !DILocation(line: 132, column: 19, scope: !12567)
!12576 = !DILocation(line: 132, column: 25, scope: !12567)
!12577 = !DILocation(line: 133, column: 24, scope: !12568)
!12578 = !DILocation(line: 133, column: 17, scope: !12568)
!12579 = !DILocation(line: 135, column: 11, scope: !12512)
!12580 = !DILocation(line: 137, column: 21, scope: !12503)
!12581 = !DILocation(line: 137, column: 19, scope: !12503)
!12582 = !DILocation(line: 138, column: 7, scope: !12503)
!12583 = distinct !{!12583, !12478, !12584}
!12584 = !DILocation(line: 138, column: 7, scope: !12451)
!12585 = !DILocation(line: 140, column: 10, scope: !12451)
!12586 = !DILocation(line: 140, column: 22, scope: !12451)
!12587 = !DILocation(line: 140, column: 20, scope: !12451)
!12588 = !DILocation(line: 140, column: 3, scope: !12451)
!12589 = !DILocation(line: 141, column: 1, scope: !12451)
!12590 = distinct !DISubprogram(name: "make_dir_parents", scope: !12591, file: !12591, line: 85, type: !12592, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1330, retainedNodes: !298)
!12591 = !DIFile(filename: "lib/mkdir-p.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12592 = !DISubroutineType(types: !12593)
!12593 = !{!142, !9, !12594, !12456, !53, !139, !12595, !139, !127, !129, !142}
!12594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!12595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!12596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !12597)
!12597 = !{!12598, !12599, !12600, !12601, !12602, !12603, !12604, !12605, !12606, !12607, !12608, !12609, !12614, !12615, !12616}
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12596, file: !463, line: 48, baseType: !452, size: 64)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12596, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12596, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12596, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12596, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12596, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !12596, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12596, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12596, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12596, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12596, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12596, file: !463, line: 91, baseType: !12610, size: 128, offset: 576)
!12610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !12611)
!12611 = !{!12612, !12613}
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12610, file: !365, line: 11, baseType: !368, size: 64)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12610, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12596, file: !463, line: 92, baseType: !12610, size: 128, offset: 704)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12596, file: !463, line: 93, baseType: !12610, size: 128, offset: 832)
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !12596, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!12617 = !DILocalVariable(name: "dir", arg: 1, scope: !12590, file: !12591, line: 85, type: !9)
!12618 = !DILocation(line: 85, column: 25, scope: !12590)
!12619 = !DILocalVariable(name: "wd", arg: 2, scope: !12590, file: !12591, line: 86, type: !12594)
!12620 = !DILocation(line: 86, column: 34, scope: !12590)
!12621 = !DILocalVariable(name: "make_ancestor", arg: 3, scope: !12590, file: !12591, line: 87, type: !12456)
!12622 = !DILocation(line: 87, column: 25, scope: !12590)
!12623 = !DILocalVariable(name: "options", arg: 4, scope: !12590, file: !12591, line: 88, type: !53)
!12624 = !DILocation(line: 88, column: 25, scope: !12590)
!12625 = !DILocalVariable(name: "mode", arg: 5, scope: !12590, file: !12591, line: 89, type: !139)
!12626 = !DILocation(line: 89, column: 26, scope: !12590)
!12627 = !DILocalVariable(name: "announce", arg: 6, scope: !12590, file: !12591, line: 90, type: !12595)
!12628 = !DILocation(line: 90, column: 26, scope: !12590)
!12629 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !12590, file: !12591, line: 91, type: !139)
!12630 = !DILocation(line: 91, column: 26, scope: !12590)
!12631 = !DILocalVariable(name: "owner", arg: 8, scope: !12590, file: !12591, line: 92, type: !127)
!12632 = !DILocation(line: 92, column: 25, scope: !12590)
!12633 = !DILocalVariable(name: "group", arg: 9, scope: !12590, file: !12591, line: 93, type: !129)
!12634 = !DILocation(line: 93, column: 25, scope: !12590)
!12635 = !DILocalVariable(name: "preserve_existing", arg: 10, scope: !12590, file: !12591, line: 94, type: !142)
!12636 = !DILocation(line: 94, column: 24, scope: !12590)
!12637 = !DILocalVariable(name: "mkdir_errno", scope: !12590, file: !12591, line: 96, type: !7)
!12638 = !DILocation(line: 96, column: 7, scope: !12590)
!12639 = !DILocation(line: 96, column: 22, scope: !12590)
!12640 = !DILocation(line: 96, column: 70, scope: !12590)
!12641 = !DILocation(line: 96, column: 56, scope: !12590)
!12642 = !DILocation(line: 98, column: 7, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12590, file: !12591, line: 98, column: 7)
!12644 = !DILocation(line: 98, column: 19, scope: !12643)
!12645 = !DILocation(line: 98, column: 7, scope: !12590)
!12646 = !DILocalVariable(name: "prefix_len", scope: !12647, file: !12591, line: 100, type: !627)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !12591, line: 99, column: 5)
!12648 = !DILocation(line: 100, column: 17, scope: !12647)
!12649 = !DILocalVariable(name: "savewd_chdir_options", scope: !12647, file: !12591, line: 101, type: !7)
!12650 = !DILocation(line: 101, column: 11, scope: !12647)
!12651 = !DILocation(line: 103, column: 11, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12647, file: !12591, line: 103, column: 11)
!12653 = !DILocation(line: 103, column: 11, scope: !12647)
!12654 = !DILocation(line: 105, column: 37, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12652, file: !12591, line: 104, column: 9)
!12656 = !DILocation(line: 105, column: 42, scope: !12655)
!12657 = !DILocation(line: 105, column: 46, scope: !12655)
!12658 = !DILocation(line: 105, column: 61, scope: !12655)
!12659 = !DILocation(line: 105, column: 24, scope: !12655)
!12660 = !DILocation(line: 105, column: 22, scope: !12655)
!12661 = !DILocation(line: 106, column: 15, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12655, file: !12591, line: 106, column: 15)
!12663 = !DILocation(line: 106, column: 26, scope: !12662)
!12664 = !DILocation(line: 106, column: 15, scope: !12655)
!12665 = !DILocation(line: 108, column: 19, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !12591, line: 108, column: 19)
!12667 = distinct !DILexicalBlock(scope: !12662, file: !12591, line: 107, column: 13)
!12668 = !DILocation(line: 108, column: 30, scope: !12666)
!12669 = !DILocation(line: 108, column: 19, scope: !12667)
!12670 = !DILocation(line: 109, column: 17, scope: !12666)
!12671 = !DILocation(line: 110, column: 29, scope: !12667)
!12672 = !DILocation(line: 110, column: 27, scope: !12667)
!12673 = !DILocation(line: 111, column: 13, scope: !12667)
!12674 = !DILocation(line: 112, column: 9, scope: !12655)
!12675 = !DILocation(line: 114, column: 16, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12647, file: !12591, line: 114, column: 11)
!12677 = !DILocation(line: 114, column: 13, scope: !12676)
!12678 = !DILocation(line: 114, column: 11, scope: !12647)
!12679 = !DILocalVariable(name: "keep_owner", scope: !12680, file: !12591, line: 121, type: !142)
!12680 = distinct !DILexicalBlock(scope: !12676, file: !12591, line: 115, column: 9)
!12681 = !DILocation(line: 121, column: 16, scope: !12680)
!12682 = !DILocation(line: 121, column: 29, scope: !12680)
!12683 = !DILocation(line: 121, column: 35, scope: !12680)
!12684 = !DILocation(line: 121, column: 49, scope: !12680)
!12685 = !DILocation(line: 121, column: 52, scope: !12680)
!12686 = !DILocation(line: 121, column: 58, scope: !12680)
!12687 = !DILocation(line: 0, scope: !12680)
!12688 = !DILocalVariable(name: "keep_special_mode_bits", scope: !12680, file: !12591, line: 122, type: !142)
!12689 = !DILocation(line: 122, column: 16, scope: !12680)
!12690 = !DILocation(line: 123, column: 15, scope: !12680)
!12691 = !DILocation(line: 123, column: 25, scope: !12680)
!12692 = !DILocation(line: 123, column: 51, scope: !12680)
!12693 = !DILocation(line: 123, column: 56, scope: !12680)
!12694 = !DILocation(line: 123, column: 48, scope: !12680)
!12695 = !DILocation(line: 123, column: 68, scope: !12680)
!12696 = !DILocalVariable(name: "mkdir_mode", scope: !12680, file: !12591, line: 124, type: !139)
!12697 = !DILocation(line: 124, column: 18, scope: !12680)
!12698 = !DILocation(line: 124, column: 31, scope: !12680)
!12699 = !DILocation(line: 125, column: 17, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12680, file: !12591, line: 125, column: 15)
!12701 = !DILocation(line: 125, column: 15, scope: !12680)
!12702 = !DILocation(line: 126, column: 24, scope: !12700)
!12703 = !DILocation(line: 126, column: 13, scope: !12700)
!12704 = !DILocation(line: 127, column: 22, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12700, file: !12591, line: 127, column: 20)
!12706 = !DILocation(line: 127, column: 20, scope: !12700)
!12707 = !DILocation(line: 128, column: 24, scope: !12705)
!12708 = !DILocation(line: 128, column: 13, scope: !12705)
!12709 = !DILocation(line: 130, column: 22, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12680, file: !12591, line: 130, column: 15)
!12711 = !DILocation(line: 130, column: 28, scope: !12710)
!12712 = !DILocation(line: 130, column: 26, scope: !12710)
!12713 = !DILocation(line: 130, column: 40, scope: !12710)
!12714 = !DILocation(line: 130, column: 15, scope: !12710)
!12715 = !DILocation(line: 130, column: 52, scope: !12710)
!12716 = !DILocation(line: 130, column: 15, scope: !12680)
!12717 = !DILocalVariable(name: "umask_must_be_ok", scope: !12718, file: !12591, line: 134, type: !142)
!12718 = distinct !DILexicalBlock(scope: !12710, file: !12591, line: 131, column: 13)
!12719 = !DILocation(line: 134, column: 20, scope: !12718)
!12720 = !DILocation(line: 134, column: 40, scope: !12718)
!12721 = !DILocation(line: 134, column: 47, scope: !12718)
!12722 = !DILocation(line: 134, column: 45, scope: !12718)
!12723 = !DILocation(line: 134, column: 57, scope: !12718)
!12724 = !DILocation(line: 134, column: 70, scope: !12718)
!12725 = !DILocation(line: 136, column: 15, scope: !12718)
!12726 = !DILocation(line: 136, column: 25, scope: !12718)
!12727 = !DILocation(line: 136, column: 30, scope: !12718)
!12728 = !DILocation(line: 137, column: 36, scope: !12718)
!12729 = !DILocation(line: 137, column: 49, scope: !12718)
!12730 = !DILocation(line: 137, column: 47, scope: !12718)
!12731 = !DILocation(line: 138, column: 38, scope: !12718)
!12732 = !DILocation(line: 138, column: 36, scope: !12718)
!12733 = !DILocation(line: 137, column: 35, scope: !12718)
!12734 = !DILocation(line: 137, column: 33, scope: !12718)
!12735 = !DILocation(line: 139, column: 36, scope: !12718)
!12736 = !DILocation(line: 140, column: 13, scope: !12718)
!12737 = !DILocation(line: 143, column: 29, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12710, file: !12591, line: 142, column: 13)
!12739 = !DILocation(line: 143, column: 27, scope: !12738)
!12740 = !DILocation(line: 144, column: 26, scope: !12738)
!12741 = !DILocation(line: 147, column: 15, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12680, file: !12591, line: 147, column: 15)
!12743 = !DILocation(line: 147, column: 15, scope: !12680)
!12744 = !DILocation(line: 149, column: 19, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !12591, line: 149, column: 19)
!12746 = distinct !DILexicalBlock(scope: !12742, file: !12591, line: 148, column: 13)
!12747 = !DILocation(line: 149, column: 31, scope: !12745)
!12748 = !DILocation(line: 149, column: 19, scope: !12746)
!12749 = !DILocation(line: 150, column: 17, scope: !12745)
!12750 = !DILocation(line: 151, column: 19, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12746, file: !12591, line: 151, column: 19)
!12752 = !DILocation(line: 151, column: 31, scope: !12751)
!12753 = !DILocation(line: 151, column: 41, scope: !12751)
!12754 = !DILocation(line: 151, column: 44, scope: !12751)
!12755 = !DILocation(line: 151, column: 19, scope: !12746)
!12756 = !DILocalVariable(name: "st", scope: !12757, file: !12591, line: 153, type: !12596)
!12757 = distinct !DILexicalBlock(scope: !12751, file: !12591, line: 152, column: 17)
!12758 = !DILocation(line: 153, column: 31, scope: !12757)
!12759 = !DILocation(line: 154, column: 29, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12757, file: !12591, line: 154, column: 23)
!12761 = !DILocation(line: 154, column: 35, scope: !12760)
!12762 = !DILocation(line: 154, column: 33, scope: !12760)
!12763 = !DILocation(line: 154, column: 23, scope: !12760)
!12764 = !DILocation(line: 154, column: 52, scope: !12760)
!12765 = !DILocation(line: 154, column: 23, scope: !12757)
!12766 = !DILocation(line: 156, column: 27, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !12591, line: 156, column: 27)
!12768 = distinct !DILexicalBlock(scope: !12760, file: !12591, line: 155, column: 21)
!12769 = !DILocation(line: 156, column: 27, scope: !12768)
!12770 = !DILocation(line: 157, column: 25, scope: !12767)
!12771 = !DILocation(line: 158, column: 21, scope: !12768)
!12772 = !DILocation(line: 159, column: 28, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12760, file: !12591, line: 159, column: 28)
!12774 = !DILocation(line: 159, column: 40, scope: !12773)
!12775 = !DILocation(line: 160, column: 28, scope: !12773)
!12776 = !DILocation(line: 160, column: 31, scope: !12773)
!12777 = !DILocation(line: 160, column: 37, scope: !12773)
!12778 = !DILocation(line: 160, column: 47, scope: !12773)
!12779 = !DILocation(line: 160, column: 50, scope: !12773)
!12780 = !DILocation(line: 160, column: 56, scope: !12773)
!12781 = !DILocation(line: 159, column: 28, scope: !12760)
!12782 = !DILocation(line: 162, column: 33, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12773, file: !12591, line: 161, column: 21)
!12784 = !DILocation(line: 162, column: 40, scope: !12783)
!12785 = !DILocation(line: 162, column: 68, scope: !12783)
!12786 = !DILocation(line: 162, column: 61, scope: !12783)
!12787 = !DILocation(line: 162, column: 23, scope: !12783)
!12788 = !DILocation(line: 163, column: 23, scope: !12783)
!12789 = !DILocation(line: 165, column: 17, scope: !12757)
!12790 = !DILocation(line: 166, column: 13, scope: !12746)
!12791 = !DILocalVariable(name: "open_result", scope: !12792, file: !12591, line: 169, type: !1344)
!12792 = distinct !DILexicalBlock(scope: !12742, file: !12591, line: 168, column: 13)
!12793 = !DILocation(line: 169, column: 19, scope: !12792)
!12794 = !DILocalVariable(name: "chdir_result", scope: !12792, file: !12591, line: 170, type: !7)
!12795 = !DILocation(line: 170, column: 19, scope: !12792)
!12796 = !DILocation(line: 171, column: 31, scope: !12792)
!12797 = !DILocation(line: 171, column: 35, scope: !12792)
!12798 = !DILocation(line: 171, column: 41, scope: !12792)
!12799 = !DILocation(line: 171, column: 39, scope: !12792)
!12800 = !DILocation(line: 172, column: 31, scope: !12792)
!12801 = !DILocation(line: 172, column: 53, scope: !12792)
!12802 = !DILocation(line: 171, column: 17, scope: !12792)
!12803 = !DILocation(line: 173, column: 19, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12792, file: !12591, line: 173, column: 19)
!12805 = !DILocation(line: 173, column: 32, scope: !12804)
!12806 = !DILocation(line: 173, column: 19, scope: !12792)
!12807 = !DILocation(line: 174, column: 17, scope: !12804)
!12808 = !DILocalVariable(name: "chdir_ok", scope: !12809, file: !12591, line: 177, type: !142)
!12809 = distinct !DILexicalBlock(scope: !12804, file: !12591, line: 176, column: 17)
!12810 = !DILocation(line: 177, column: 24, scope: !12809)
!12811 = !DILocation(line: 177, column: 36, scope: !12809)
!12812 = !DILocation(line: 177, column: 49, scope: !12809)
!12813 = !DILocalVariable(name: "subdir", scope: !12809, file: !12591, line: 178, type: !183)
!12814 = !DILocation(line: 178, column: 31, scope: !12809)
!12815 = !DILocation(line: 178, column: 41, scope: !12809)
!12816 = !DILocation(line: 178, column: 58, scope: !12809)
!12817 = !DILocation(line: 178, column: 64, scope: !12809)
!12818 = !DILocation(line: 178, column: 62, scope: !12809)
!12819 = !DILocation(line: 179, column: 36, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12809, file: !12591, line: 179, column: 23)
!12821 = !DILocation(line: 179, column: 52, scope: !12820)
!12822 = !DILocation(line: 179, column: 60, scope: !12820)
!12823 = !DILocation(line: 180, column: 36, scope: !12820)
!12824 = !DILocation(line: 180, column: 43, scope: !12820)
!12825 = !DILocation(line: 180, column: 50, scope: !12820)
!12826 = !DILocation(line: 180, column: 56, scope: !12820)
!12827 = !DILocation(line: 179, column: 23, scope: !12820)
!12828 = !DILocation(line: 181, column: 23, scope: !12820)
!12829 = !DILocation(line: 179, column: 23, scope: !12809)
!12830 = !DILocation(line: 182, column: 21, scope: !12820)
!12831 = !DILocation(line: 184, column: 23, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12809, file: !12591, line: 184, column: 23)
!12833 = !DILocation(line: 184, column: 35, scope: !12832)
!12834 = !DILocation(line: 185, column: 23, scope: !12832)
!12835 = !DILocation(line: 185, column: 27, scope: !12832)
!12836 = !DILocation(line: 185, column: 39, scope: !12832)
!12837 = !DILocation(line: 185, column: 49, scope: !12832)
!12838 = !DILocation(line: 185, column: 52, scope: !12832)
!12839 = !DILocation(line: 186, column: 27, scope: !12832)
!12840 = !DILocation(line: 186, column: 30, scope: !12832)
!12841 = !DILocation(line: 186, column: 36, scope: !12832)
!12842 = !DILocation(line: 184, column: 23, scope: !12809)
!12843 = !DILocation(line: 188, column: 33, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12832, file: !12591, line: 187, column: 21)
!12845 = !DILocation(line: 189, column: 30, scope: !12844)
!12846 = !DILocation(line: 192, column: 37, scope: !12844)
!12847 = !DILocation(line: 192, column: 30, scope: !12844)
!12848 = !DILocation(line: 188, column: 23, scope: !12844)
!12849 = !DILocation(line: 193, column: 23, scope: !12844)
!12850 = !DILocation(line: 197, column: 9, scope: !12680)
!12851 = !DILocation(line: 198, column: 5, scope: !12647)
!12852 = !DILocation(line: 200, column: 13, scope: !12590)
!12853 = !DILocation(line: 200, column: 26, scope: !12590)
!12854 = !DILocation(line: 200, column: 66, scope: !12590)
!12855 = !DILocation(line: 200, column: 59, scope: !12590)
!12856 = !DILocation(line: 200, column: 3, scope: !12590)
!12857 = !DILocation(line: 201, column: 3, scope: !12590)
!12858 = !DILocation(line: 202, column: 1, scope: !12590)
!12859 = distinct !DISubprogram(name: "mode_compile", scope: !1350, file: !1350, line: 134, type: !12860, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1345, retainedNodes: !298)
!12860 = !DISubroutineType(types: !12861)
!12861 = !{!1348, !183}
!12862 = !DILocalVariable(name: "mode_string", arg: 1, scope: !12859, file: !1350, line: 134, type: !183)
!12863 = !DILocation(line: 134, column: 27, scope: !12859)
!12864 = !DILocalVariable(name: "mc", scope: !12859, file: !1350, line: 137, type: !1348)
!12865 = !DILocation(line: 137, column: 23, scope: !12859)
!12866 = !DILocalVariable(name: "used", scope: !12859, file: !1350, line: 138, type: !55)
!12867 = !DILocation(line: 138, column: 10, scope: !12859)
!12868 = !DILocalVariable(name: "p", scope: !12859, file: !1350, line: 139, type: !183)
!12869 = !DILocation(line: 139, column: 15, scope: !12859)
!12870 = !DILocation(line: 141, column: 15, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12859, file: !1350, line: 141, column: 7)
!12872 = !DILocation(line: 141, column: 14, scope: !12871)
!12873 = !DILocation(line: 141, column: 11, scope: !12871)
!12874 = !DILocation(line: 141, column: 27, scope: !12871)
!12875 = !DILocation(line: 141, column: 31, scope: !12871)
!12876 = !DILocation(line: 141, column: 30, scope: !12871)
!12877 = !DILocation(line: 141, column: 43, scope: !12871)
!12878 = !DILocation(line: 141, column: 7, scope: !12859)
!12879 = !DILocalVariable(name: "octal_mode", scope: !12880, file: !1350, line: 143, type: !70)
!12880 = distinct !DILexicalBlock(scope: !12871, file: !1350, line: 142, column: 5)
!12881 = !DILocation(line: 143, column: 20, scope: !12880)
!12882 = !DILocalVariable(name: "mode", scope: !12880, file: !1350, line: 144, type: !139)
!12883 = !DILocation(line: 144, column: 14, scope: !12880)
!12884 = !DILocalVariable(name: "mentioned", scope: !12880, file: !1350, line: 145, type: !139)
!12885 = !DILocation(line: 145, column: 14, scope: !12880)
!12886 = !DILocation(line: 147, column: 11, scope: !12880)
!12887 = !DILocation(line: 147, column: 9, scope: !12880)
!12888 = !DILocation(line: 148, column: 7, scope: !12880)
!12889 = !DILocation(line: 150, column: 28, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12880, file: !1350, line: 149, column: 9)
!12891 = !DILocation(line: 150, column: 26, scope: !12890)
!12892 = !DILocation(line: 150, column: 43, scope: !12890)
!12893 = !DILocation(line: 150, column: 41, scope: !12890)
!12894 = !DILocation(line: 150, column: 39, scope: !12890)
!12895 = !DILocation(line: 150, column: 46, scope: !12890)
!12896 = !DILocation(line: 150, column: 22, scope: !12890)
!12897 = !DILocation(line: 151, column: 22, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12890, file: !1350, line: 151, column: 15)
!12899 = !DILocation(line: 151, column: 20, scope: !12898)
!12900 = !DILocation(line: 151, column: 15, scope: !12890)
!12901 = !DILocation(line: 152, column: 13, scope: !12898)
!12902 = !DILocation(line: 153, column: 9, scope: !12890)
!12903 = !DILocation(line: 154, column: 22, scope: !12880)
!12904 = !DILocation(line: 154, column: 21, scope: !12880)
!12905 = !DILocation(line: 154, column: 18, scope: !12880)
!12906 = !DILocation(line: 154, column: 24, scope: !12880)
!12907 = !DILocation(line: 154, column: 28, scope: !12880)
!12908 = !DILocation(line: 154, column: 27, scope: !12880)
!12909 = !DILocation(line: 154, column: 30, scope: !12880)
!12910 = !DILocation(line: 0, scope: !12880)
!12911 = distinct !{!12911, !12888, !12912}
!12912 = !DILocation(line: 154, column: 35, scope: !12880)
!12913 = !DILocation(line: 156, column: 12, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12880, file: !1350, line: 156, column: 11)
!12915 = !DILocation(line: 156, column: 11, scope: !12914)
!12916 = !DILocation(line: 156, column: 11, scope: !12880)
!12917 = !DILocation(line: 157, column: 9, scope: !12914)
!12918 = !DILocation(line: 159, column: 29, scope: !12880)
!12919 = !DILocation(line: 159, column: 14, scope: !12880)
!12920 = !DILocation(line: 159, column: 12, scope: !12880)
!12921 = !DILocation(line: 160, column: 20, scope: !12880)
!12922 = !DILocation(line: 160, column: 24, scope: !12880)
!12923 = !DILocation(line: 160, column: 22, scope: !12880)
!12924 = !DILocation(line: 160, column: 36, scope: !12880)
!12925 = !DILocation(line: 161, column: 23, scope: !12880)
!12926 = !DILocation(line: 161, column: 28, scope: !12880)
!12927 = !DILocation(line: 161, column: 51, scope: !12880)
!12928 = !DILocation(line: 161, column: 61, scope: !12880)
!12929 = !DILocation(line: 160, column: 17, scope: !12880)
!12930 = !DILocation(line: 163, column: 35, scope: !12880)
!12931 = !DILocation(line: 163, column: 41, scope: !12880)
!12932 = !DILocation(line: 163, column: 14, scope: !12880)
!12933 = !DILocation(line: 163, column: 7, scope: !12880)
!12934 = !DILocalVariable(name: "needed", scope: !12935, file: !1350, line: 168, type: !55)
!12935 = distinct !DILexicalBlock(scope: !12859, file: !1350, line: 167, column: 3)
!12936 = !DILocation(line: 168, column: 12, scope: !12935)
!12937 = !DILocation(line: 169, column: 14, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12935, file: !1350, line: 169, column: 5)
!12939 = !DILocation(line: 169, column: 12, scope: !12938)
!12940 = !DILocation(line: 169, column: 10, scope: !12938)
!12941 = !DILocation(line: 169, column: 28, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !1350, line: 169, column: 5)
!12943 = !DILocation(line: 169, column: 27, scope: !12942)
!12944 = !DILocation(line: 169, column: 5, scope: !12938)
!12945 = !DILocation(line: 170, column: 19, scope: !12942)
!12946 = !DILocation(line: 170, column: 18, scope: !12942)
!12947 = !DILocation(line: 170, column: 21, scope: !12942)
!12948 = !DILocation(line: 170, column: 28, scope: !12942)
!12949 = !DILocation(line: 170, column: 32, scope: !12942)
!12950 = !DILocation(line: 170, column: 31, scope: !12942)
!12951 = !DILocation(line: 170, column: 34, scope: !12942)
!12952 = !DILocation(line: 170, column: 41, scope: !12942)
!12953 = !DILocation(line: 170, column: 45, scope: !12942)
!12954 = !DILocation(line: 170, column: 44, scope: !12942)
!12955 = !DILocation(line: 170, column: 47, scope: !12942)
!12956 = !DILocation(line: 170, column: 17, scope: !12942)
!12957 = !DILocation(line: 170, column: 14, scope: !12942)
!12958 = !DILocation(line: 170, column: 7, scope: !12942)
!12959 = !DILocation(line: 169, column: 32, scope: !12942)
!12960 = !DILocation(line: 169, column: 5, scope: !12942)
!12961 = distinct !{!12961, !12944, !12962}
!12962 = !DILocation(line: 170, column: 53, scope: !12938)
!12963 = !DILocation(line: 171, column: 20, scope: !12935)
!12964 = !DILocation(line: 171, column: 10, scope: !12935)
!12965 = !DILocation(line: 171, column: 8, scope: !12935)
!12966 = !DILocation(line: 176, column: 12, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12859, file: !1350, line: 176, column: 3)
!12968 = !DILocation(line: 176, column: 10, scope: !12967)
!12969 = !DILocation(line: 176, column: 8, scope: !12967)
!12970 = !DILocalVariable(name: "affected", scope: !12971, file: !1350, line: 179, type: !139)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !1350, line: 177, column: 5)
!12972 = distinct !DILexicalBlock(scope: !12967, file: !1350, line: 176, column: 3)
!12973 = !DILocation(line: 179, column: 14, scope: !12971)
!12974 = !DILocation(line: 182, column: 7, scope: !12971)
!12975 = !DILocation(line: 183, column: 18, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !1350, line: 182, column: 7)
!12977 = distinct !DILexicalBlock(scope: !12971, file: !1350, line: 182, column: 7)
!12978 = !DILocation(line: 183, column: 17, scope: !12976)
!12979 = !DILocation(line: 183, column: 9, scope: !12976)
!12980 = !DILocation(line: 186, column: 13, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12976, file: !1350, line: 184, column: 11)
!12982 = !DILocation(line: 188, column: 22, scope: !12981)
!12983 = !DILocation(line: 189, column: 13, scope: !12981)
!12984 = !DILocation(line: 191, column: 22, scope: !12981)
!12985 = !DILocation(line: 192, column: 13, scope: !12981)
!12986 = !DILocation(line: 194, column: 22, scope: !12981)
!12987 = !DILocation(line: 195, column: 13, scope: !12981)
!12988 = !DILocation(line: 197, column: 22, scope: !12981)
!12989 = !DILocation(line: 198, column: 13, scope: !12981)
!12990 = !DILocation(line: 200, column: 13, scope: !12981)
!12991 = !DILocation(line: 201, column: 11, scope: !12981)
!12992 = !DILocation(line: 182, column: 16, scope: !12976)
!12993 = !DILocation(line: 182, column: 7, scope: !12976)
!12994 = distinct !{!12994, !12995, !12996}
!12995 = !DILocation(line: 182, column: 7, scope: !12977)
!12996 = !DILocation(line: 201, column: 11, scope: !12977)
!12997 = !DILabel(scope: !12971, name: "no_more_affected", file: !1350, line: 202)
!12998 = !DILocation(line: 202, column: 5, scope: !12971)
!12999 = !DILocation(line: 204, column: 7, scope: !12971)
!13000 = !DILocalVariable(name: "op", scope: !13001, file: !1350, line: 206, type: !10)
!13001 = distinct !DILexicalBlock(scope: !12971, file: !1350, line: 205, column: 9)
!13002 = !DILocation(line: 206, column: 16, scope: !13001)
!13003 = !DILocation(line: 206, column: 23, scope: !13001)
!13004 = !DILocation(line: 206, column: 21, scope: !13001)
!13005 = !DILocalVariable(name: "value", scope: !13001, file: !1350, line: 207, type: !139)
!13006 = !DILocation(line: 207, column: 18, scope: !13001)
!13007 = !DILocalVariable(name: "mentioned", scope: !13001, file: !1350, line: 208, type: !139)
!13008 = !DILocation(line: 208, column: 18, scope: !13001)
!13009 = !DILocalVariable(name: "flag", scope: !13001, file: !1350, line: 209, type: !10)
!13010 = !DILocation(line: 209, column: 16, scope: !13001)
!13011 = !DILocalVariable(name: "change", scope: !13001, file: !1350, line: 210, type: !1348)
!13012 = !DILocation(line: 210, column: 31, scope: !13001)
!13013 = !DILocation(line: 212, column: 20, scope: !13001)
!13014 = !DILocation(line: 212, column: 19, scope: !13001)
!13015 = !DILocation(line: 212, column: 11, scope: !13001)
!13016 = !DILocalVariable(name: "octal_mode", scope: !13017, file: !1350, line: 217, type: !70)
!13017 = distinct !DILexicalBlock(scope: !13018, file: !1350, line: 216, column: 15)
!13018 = distinct !DILexicalBlock(scope: !13001, file: !1350, line: 213, column: 13)
!13019 = !DILocation(line: 217, column: 30, scope: !13017)
!13020 = !DILocation(line: 219, column: 17, scope: !13017)
!13021 = !DILocation(line: 221, column: 38, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13017, file: !1350, line: 220, column: 19)
!13023 = !DILocation(line: 221, column: 36, scope: !13022)
!13024 = !DILocation(line: 221, column: 53, scope: !13022)
!13025 = !DILocation(line: 221, column: 51, scope: !13022)
!13026 = !DILocation(line: 221, column: 49, scope: !13022)
!13027 = !DILocation(line: 221, column: 56, scope: !13022)
!13028 = !DILocation(line: 221, column: 32, scope: !13022)
!13029 = !DILocation(line: 222, column: 32, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13022, file: !1350, line: 222, column: 25)
!13031 = !DILocation(line: 222, column: 30, scope: !13030)
!13032 = !DILocation(line: 222, column: 25, scope: !13022)
!13033 = !DILocation(line: 223, column: 23, scope: !13030)
!13034 = !DILocation(line: 224, column: 19, scope: !13022)
!13035 = !DILocation(line: 225, column: 32, scope: !13017)
!13036 = !DILocation(line: 225, column: 31, scope: !13017)
!13037 = !DILocation(line: 225, column: 28, scope: !13017)
!13038 = !DILocation(line: 225, column: 34, scope: !13017)
!13039 = !DILocation(line: 225, column: 38, scope: !13017)
!13040 = !DILocation(line: 225, column: 37, scope: !13017)
!13041 = !DILocation(line: 225, column: 40, scope: !13017)
!13042 = !DILocation(line: 0, scope: !13017)
!13043 = distinct !{!13043, !13020, !13044}
!13044 = !DILocation(line: 225, column: 45, scope: !13017)
!13045 = !DILocation(line: 227, column: 21, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13017, file: !1350, line: 227, column: 21)
!13047 = !DILocation(line: 227, column: 30, scope: !13046)
!13048 = !DILocation(line: 227, column: 35, scope: !13046)
!13049 = !DILocation(line: 227, column: 34, scope: !13046)
!13050 = !DILocation(line: 227, column: 37, scope: !13046)
!13051 = !DILocation(line: 227, column: 41, scope: !13046)
!13052 = !DILocation(line: 227, column: 40, scope: !13046)
!13053 = !DILocation(line: 227, column: 43, scope: !13046)
!13054 = !DILocation(line: 227, column: 21, scope: !13017)
!13055 = !DILocation(line: 228, column: 19, scope: !13046)
!13056 = !DILocation(line: 229, column: 38, scope: !13017)
!13057 = !DILocation(line: 229, column: 26, scope: !13017)
!13058 = !DILocation(line: 230, column: 40, scope: !13017)
!13059 = !DILocation(line: 230, column: 25, scope: !13017)
!13060 = !DILocation(line: 230, column: 23, scope: !13017)
!13061 = !DILocation(line: 231, column: 22, scope: !13017)
!13062 = !DILocation(line: 232, column: 17, scope: !13017)
!13063 = !DILocation(line: 238, column: 21, scope: !13018)
!13064 = !DILocation(line: 239, column: 16, scope: !13018)
!13065 = !DILocation(line: 240, column: 15, scope: !13018)
!13066 = !DILocation(line: 244, column: 21, scope: !13018)
!13067 = !DILocation(line: 245, column: 16, scope: !13018)
!13068 = !DILocation(line: 246, column: 15, scope: !13018)
!13069 = !DILocation(line: 250, column: 21, scope: !13018)
!13070 = !DILocation(line: 251, column: 16, scope: !13018)
!13071 = !DILocation(line: 252, column: 15, scope: !13018)
!13072 = !DILocation(line: 255, column: 21, scope: !13018)
!13073 = !DILocation(line: 256, column: 20, scope: !13018)
!13074 = !DILocation(line: 258, column: 15, scope: !13018)
!13075 = !DILocation(line: 259, column: 26, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13077, file: !1350, line: 258, column: 15)
!13077 = distinct !DILexicalBlock(scope: !13018, file: !1350, line: 258, column: 15)
!13078 = !DILocation(line: 259, column: 25, scope: !13076)
!13079 = !DILocation(line: 259, column: 17, scope: !13076)
!13080 = !DILocation(line: 262, column: 27, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13076, file: !1350, line: 260, column: 19)
!13082 = !DILocation(line: 263, column: 21, scope: !13081)
!13083 = !DILocation(line: 265, column: 27, scope: !13081)
!13084 = !DILocation(line: 266, column: 21, scope: !13081)
!13085 = !DILocation(line: 268, column: 27, scope: !13081)
!13086 = !DILocation(line: 269, column: 21, scope: !13081)
!13087 = !DILocation(line: 271, column: 26, scope: !13081)
!13088 = !DILocation(line: 272, column: 21, scope: !13081)
!13089 = !DILocation(line: 275, column: 27, scope: !13081)
!13090 = !DILocation(line: 276, column: 21, scope: !13081)
!13091 = !DILocation(line: 279, column: 27, scope: !13081)
!13092 = !DILocation(line: 280, column: 21, scope: !13081)
!13093 = !DILocation(line: 282, column: 21, scope: !13081)
!13094 = !DILocation(line: 283, column: 19, scope: !13081)
!13095 = !DILocation(line: 258, column: 24, scope: !13076)
!13096 = !DILocation(line: 258, column: 15, scope: !13076)
!13097 = distinct !{!13097, !13098, !13099}
!13098 = !DILocation(line: 258, column: 15, scope: !13077)
!13099 = !DILocation(line: 283, column: 19, scope: !13077)
!13100 = !DILabel(scope: !13018, name: "no_more_values", file: !1350, line: 284)
!13101 = !DILocation(line: 284, column: 13, scope: !13018)
!13102 = !DILocation(line: 285, column: 13, scope: !13018)
!13103 = !DILocation(line: 287, column: 21, scope: !13001)
!13104 = !DILocation(line: 287, column: 28, scope: !13001)
!13105 = !DILocation(line: 287, column: 18, scope: !13001)
!13106 = !DILocation(line: 288, column: 24, scope: !13001)
!13107 = !DILocation(line: 288, column: 11, scope: !13001)
!13108 = !DILocation(line: 288, column: 19, scope: !13001)
!13109 = !DILocation(line: 288, column: 22, scope: !13001)
!13110 = !DILocation(line: 289, column: 26, scope: !13001)
!13111 = !DILocation(line: 289, column: 11, scope: !13001)
!13112 = !DILocation(line: 289, column: 19, scope: !13001)
!13113 = !DILocation(line: 289, column: 24, scope: !13001)
!13114 = !DILocation(line: 290, column: 30, scope: !13001)
!13115 = !DILocation(line: 290, column: 11, scope: !13001)
!13116 = !DILocation(line: 290, column: 19, scope: !13001)
!13117 = !DILocation(line: 290, column: 28, scope: !13001)
!13118 = !DILocation(line: 291, column: 27, scope: !13001)
!13119 = !DILocation(line: 291, column: 11, scope: !13001)
!13120 = !DILocation(line: 291, column: 19, scope: !13001)
!13121 = !DILocation(line: 291, column: 25, scope: !13001)
!13122 = !DILocation(line: 293, column: 14, scope: !13001)
!13123 = !DILocation(line: 293, column: 26, scope: !13001)
!13124 = !DILocation(line: 293, column: 38, scope: !13001)
!13125 = !DILocation(line: 293, column: 49, scope: !13001)
!13126 = !DILocation(line: 293, column: 60, scope: !13001)
!13127 = !DILocation(line: 293, column: 58, scope: !13001)
!13128 = !DILocation(line: 293, column: 68, scope: !13001)
!13129 = !DILocation(line: 292, column: 11, scope: !13001)
!13130 = !DILocation(line: 292, column: 19, scope: !13001)
!13131 = !DILocation(line: 292, column: 29, scope: !13001)
!13132 = !DILocation(line: 294, column: 9, scope: !13001)
!13133 = !DILocation(line: 295, column: 15, scope: !12971)
!13134 = !DILocation(line: 295, column: 14, scope: !12971)
!13135 = !DILocation(line: 295, column: 17, scope: !12971)
!13136 = !DILocation(line: 295, column: 24, scope: !12971)
!13137 = !DILocation(line: 295, column: 28, scope: !12971)
!13138 = !DILocation(line: 295, column: 27, scope: !12971)
!13139 = !DILocation(line: 295, column: 30, scope: !12971)
!13140 = !DILocation(line: 295, column: 37, scope: !12971)
!13141 = !DILocation(line: 295, column: 41, scope: !12971)
!13142 = !DILocation(line: 295, column: 40, scope: !12971)
!13143 = !DILocation(line: 295, column: 43, scope: !12971)
!13144 = distinct !{!13144, !12999, !13145}
!13145 = !DILocation(line: 295, column: 49, scope: !12971)
!13146 = !DILocation(line: 297, column: 12, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !12971, file: !1350, line: 297, column: 11)
!13148 = !DILocation(line: 297, column: 11, scope: !13147)
!13149 = !DILocation(line: 297, column: 14, scope: !13147)
!13150 = !DILocation(line: 297, column: 11, scope: !12971)
!13151 = !DILocation(line: 298, column: 9, scope: !13147)
!13152 = !DILocation(line: 299, column: 5, scope: !12971)
!13153 = !DILocation(line: 176, column: 28, scope: !12972)
!13154 = !DILocation(line: 176, column: 3, scope: !12972)
!13155 = distinct !{!13155, !13156, !13157}
!13156 = !DILocation(line: 176, column: 3, scope: !12967)
!13157 = !DILocation(line: 299, column: 5, scope: !12967)
!13158 = !DILocation(line: 301, column: 8, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !12859, file: !1350, line: 301, column: 7)
!13160 = !DILocation(line: 301, column: 7, scope: !13159)
!13161 = !DILocation(line: 301, column: 10, scope: !13159)
!13162 = !DILocation(line: 301, column: 7, scope: !12859)
!13163 = !DILocation(line: 303, column: 7, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13159, file: !1350, line: 302, column: 5)
!13165 = !DILocation(line: 303, column: 10, scope: !13164)
!13166 = !DILocation(line: 303, column: 16, scope: !13164)
!13167 = !DILocation(line: 303, column: 21, scope: !13164)
!13168 = !DILocation(line: 304, column: 14, scope: !13164)
!13169 = !DILocation(line: 304, column: 7, scope: !13164)
!13170 = !DILocation(line: 301, column: 13, scope: !13159)
!13171 = !DILabel(scope: !12859, name: "invalid", file: !1350, line: 307)
!13172 = !DILocation(line: 307, column: 1, scope: !12859)
!13173 = !DILocation(line: 308, column: 9, scope: !12859)
!13174 = !DILocation(line: 308, column: 3, scope: !12859)
!13175 = !DILocation(line: 309, column: 3, scope: !12859)
!13176 = !DILocation(line: 310, column: 1, scope: !12859)
!13177 = distinct !DISubprogram(name: "octal_to_mode", scope: !1350, file: !1350, line: 54, type: !13178, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1345, retainedNodes: !298)
!13178 = !DISubroutineType(types: !13179)
!13179 = !{!139, !70}
!13180 = !DILocalVariable(name: "octal", arg: 1, scope: !13177, file: !1350, line: 54, type: !70)
!13181 = !DILocation(line: 54, column: 29, scope: !13177)
!13182 = !DILocation(line: 62, column: 13, scope: !13177)
!13183 = !DILocation(line: 58, column: 3, scope: !13177)
!13184 = distinct !DISubprogram(name: "make_node_op_equals", scope: !1350, file: !1350, line: 112, type: !13185, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1345, retainedNodes: !298)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!1348, !139, !139}
!13187 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13184, file: !1350, line: 112, type: !139)
!13188 = !DILocation(line: 112, column: 29, scope: !13184)
!13189 = !DILocalVariable(name: "mentioned", arg: 2, scope: !13184, file: !1350, line: 112, type: !139)
!13190 = !DILocation(line: 112, column: 46, scope: !13184)
!13191 = !DILocalVariable(name: "p", scope: !13184, file: !1350, line: 114, type: !1348)
!13192 = !DILocation(line: 114, column: 23, scope: !13184)
!13193 = !DILocation(line: 114, column: 27, scope: !13184)
!13194 = !DILocation(line: 115, column: 3, scope: !13184)
!13195 = !DILocation(line: 115, column: 6, scope: !13184)
!13196 = !DILocation(line: 115, column: 9, scope: !13184)
!13197 = !DILocation(line: 116, column: 3, scope: !13184)
!13198 = !DILocation(line: 116, column: 6, scope: !13184)
!13199 = !DILocation(line: 116, column: 11, scope: !13184)
!13200 = !DILocation(line: 117, column: 3, scope: !13184)
!13201 = !DILocation(line: 117, column: 6, scope: !13184)
!13202 = !DILocation(line: 117, column: 15, scope: !13184)
!13203 = !DILocation(line: 118, column: 14, scope: !13184)
!13204 = !DILocation(line: 118, column: 3, scope: !13184)
!13205 = !DILocation(line: 118, column: 6, scope: !13184)
!13206 = !DILocation(line: 118, column: 12, scope: !13184)
!13207 = !DILocation(line: 119, column: 18, scope: !13184)
!13208 = !DILocation(line: 119, column: 3, scope: !13184)
!13209 = !DILocation(line: 119, column: 6, scope: !13184)
!13210 = !DILocation(line: 119, column: 16, scope: !13184)
!13211 = !DILocation(line: 120, column: 3, scope: !13184)
!13212 = !DILocation(line: 120, column: 8, scope: !13184)
!13213 = !DILocation(line: 120, column: 13, scope: !13184)
!13214 = !DILocation(line: 121, column: 10, scope: !13184)
!13215 = !DILocation(line: 121, column: 3, scope: !13184)
!13216 = distinct !DISubprogram(name: "mode_create_from_ref", scope: !1350, file: !1350, line: 316, type: !12860, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1345, retainedNodes: !298)
!13217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !13218)
!13218 = !{!13219, !13220, !13221, !13222, !13223, !13224, !13225, !13226, !13227, !13228, !13229, !13230, !13235, !13236, !13237}
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13217, file: !463, line: 48, baseType: !452, size: 64)
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13217, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13217, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13217, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13217, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13217, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13217, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13217, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13217, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13217, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13217, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13217, file: !463, line: 91, baseType: !13231, size: 128, offset: 576)
!13231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !13232)
!13232 = !{!13233, !13234}
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13231, file: !365, line: 11, baseType: !368, size: 64)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13231, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13217, file: !463, line: 92, baseType: !13231, size: 128, offset: 704)
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13217, file: !463, line: 93, baseType: !13231, size: 128, offset: 832)
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13217, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!13238 = !DILocalVariable(name: "ref_file", arg: 1, scope: !13216, file: !1350, line: 316, type: !183)
!13239 = !DILocation(line: 316, column: 35, scope: !13216)
!13240 = !DILocalVariable(name: "ref_stats", scope: !13216, file: !1350, line: 318, type: !13217)
!13241 = !DILocation(line: 318, column: 15, scope: !13216)
!13242 = !DILocation(line: 320, column: 13, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13216, file: !1350, line: 320, column: 7)
!13244 = !DILocation(line: 320, column: 7, scope: !13243)
!13245 = !DILocation(line: 320, column: 35, scope: !13243)
!13246 = !DILocation(line: 320, column: 7, scope: !13216)
!13247 = !DILocation(line: 321, column: 5, scope: !13243)
!13248 = !DILocation(line: 322, column: 41, scope: !13216)
!13249 = !DILocation(line: 322, column: 10, scope: !13216)
!13250 = !DILocation(line: 322, column: 3, scope: !13216)
!13251 = !DILocation(line: 323, column: 1, scope: !13216)
!13252 = distinct !DISubprogram(name: "mode_adjust", scope: !1350, file: !1350, line: 339, type: !13253, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1345, retainedNodes: !298)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{!139, !139, !142, !139, !13255, !13257}
!13255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13256, size: 64)
!13256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!13257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!13258 = !DILocalVariable(name: "oldmode", arg: 1, scope: !13252, file: !1350, line: 339, type: !139)
!13259 = !DILocation(line: 339, column: 21, scope: !13252)
!13260 = !DILocalVariable(name: "dir", arg: 2, scope: !13252, file: !1350, line: 339, type: !142)
!13261 = !DILocation(line: 339, column: 35, scope: !13252)
!13262 = !DILocalVariable(name: "umask_value", arg: 3, scope: !13252, file: !1350, line: 339, type: !139)
!13263 = !DILocation(line: 339, column: 47, scope: !13252)
!13264 = !DILocalVariable(name: "changes", arg: 4, scope: !13252, file: !1350, line: 340, type: !13255)
!13265 = !DILocation(line: 340, column: 40, scope: !13252)
!13266 = !DILocalVariable(name: "pmode_bits", arg: 5, scope: !13252, file: !1350, line: 340, type: !13257)
!13267 = !DILocation(line: 340, column: 57, scope: !13252)
!13268 = !DILocalVariable(name: "newmode", scope: !13252, file: !1350, line: 343, type: !139)
!13269 = !DILocation(line: 343, column: 10, scope: !13252)
!13270 = !DILocation(line: 343, column: 20, scope: !13252)
!13271 = !DILocation(line: 343, column: 28, scope: !13252)
!13272 = !DILocalVariable(name: "mode_bits", scope: !13252, file: !1350, line: 346, type: !139)
!13273 = !DILocation(line: 346, column: 10, scope: !13252)
!13274 = !DILocation(line: 348, column: 3, scope: !13252)
!13275 = !DILocation(line: 348, column: 10, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13277, file: !1350, line: 348, column: 3)
!13277 = distinct !DILexicalBlock(scope: !13252, file: !1350, line: 348, column: 3)
!13278 = !DILocation(line: 348, column: 19, scope: !13276)
!13279 = !DILocation(line: 348, column: 24, scope: !13276)
!13280 = !DILocation(line: 348, column: 3, scope: !13277)
!13281 = !DILocalVariable(name: "affected", scope: !13282, file: !1350, line: 350, type: !139)
!13282 = distinct !DILexicalBlock(scope: !13276, file: !1350, line: 349, column: 5)
!13283 = !DILocation(line: 350, column: 14, scope: !13282)
!13284 = !DILocation(line: 350, column: 25, scope: !13282)
!13285 = !DILocation(line: 350, column: 34, scope: !13282)
!13286 = !DILocalVariable(name: "omit_change", scope: !13282, file: !1350, line: 351, type: !139)
!13287 = !DILocation(line: 351, column: 14, scope: !13282)
!13288 = !DILocation(line: 352, column: 10, scope: !13282)
!13289 = !DILocation(line: 352, column: 43, scope: !13282)
!13290 = !DILocation(line: 352, column: 52, scope: !13282)
!13291 = !DILocation(line: 352, column: 41, scope: !13282)
!13292 = !DILocation(line: 352, column: 39, scope: !13282)
!13293 = !DILocalVariable(name: "value", scope: !13282, file: !1350, line: 353, type: !139)
!13294 = !DILocation(line: 353, column: 14, scope: !13282)
!13295 = !DILocation(line: 353, column: 22, scope: !13282)
!13296 = !DILocation(line: 353, column: 31, scope: !13282)
!13297 = !DILocation(line: 355, column: 15, scope: !13282)
!13298 = !DILocation(line: 355, column: 24, scope: !13282)
!13299 = !DILocation(line: 355, column: 7, scope: !13282)
!13300 = !DILocation(line: 358, column: 11, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13282, file: !1350, line: 356, column: 9)
!13302 = !DILocation(line: 362, column: 20, scope: !13301)
!13303 = !DILocation(line: 362, column: 17, scope: !13301)
!13304 = !DILocation(line: 365, column: 22, scope: !13301)
!13305 = !DILocation(line: 365, column: 28, scope: !13301)
!13306 = !DILocation(line: 367, column: 24, scope: !13301)
!13307 = !DILocation(line: 367, column: 30, scope: !13301)
!13308 = !DILocation(line: 367, column: 21, scope: !13301)
!13309 = !DILocation(line: 369, column: 24, scope: !13301)
!13310 = !DILocation(line: 369, column: 30, scope: !13301)
!13311 = !DILocation(line: 369, column: 21, scope: !13301)
!13312 = !DILocation(line: 365, column: 17, scope: !13301)
!13313 = !DILocation(line: 371, column: 11, scope: !13301)
!13314 = !DILocation(line: 376, column: 16, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13301, file: !1350, line: 376, column: 15)
!13316 = !DILocation(line: 376, column: 24, scope: !13315)
!13317 = !DILocation(line: 376, column: 59, scope: !13315)
!13318 = !DILocation(line: 376, column: 57, scope: !13315)
!13319 = !DILocation(line: 376, column: 15, scope: !13301)
!13320 = !DILocation(line: 377, column: 19, scope: !13315)
!13321 = !DILocation(line: 377, column: 13, scope: !13315)
!13322 = !DILocation(line: 378, column: 11, scope: !13301)
!13323 = !DILocation(line: 384, column: 17, scope: !13282)
!13324 = !DILocation(line: 384, column: 28, scope: !13282)
!13325 = !DILocation(line: 384, column: 40, scope: !13282)
!13326 = !DILocation(line: 384, column: 39, scope: !13282)
!13327 = !DILocation(line: 384, column: 57, scope: !13282)
!13328 = !DILocation(line: 384, column: 55, scope: !13282)
!13329 = !DILocation(line: 384, column: 53, scope: !13282)
!13330 = !DILocation(line: 384, column: 13, scope: !13282)
!13331 = !DILocation(line: 386, column: 15, scope: !13282)
!13332 = !DILocation(line: 386, column: 24, scope: !13282)
!13333 = !DILocation(line: 386, column: 7, scope: !13282)
!13334 = !DILocalVariable(name: "preserved", scope: !13335, file: !1350, line: 393, type: !139)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !1350, line: 392, column: 11)
!13336 = distinct !DILexicalBlock(scope: !13282, file: !1350, line: 387, column: 9)
!13337 = !DILocation(line: 393, column: 20, scope: !13335)
!13338 = !DILocation(line: 393, column: 33, scope: !13335)
!13339 = !DILocation(line: 393, column: 45, scope: !13335)
!13340 = !DILocation(line: 393, column: 44, scope: !13335)
!13341 = !DILocation(line: 393, column: 61, scope: !13335)
!13342 = !DILocation(line: 393, column: 59, scope: !13335)
!13343 = !DILocation(line: 394, column: 45, scope: !13335)
!13344 = !DILocation(line: 394, column: 44, scope: !13335)
!13345 = !DILocation(line: 394, column: 42, scope: !13335)
!13346 = !DILocation(line: 394, column: 23, scope: !13335)
!13347 = !DILocation(line: 395, column: 24, scope: !13335)
!13348 = !DILocation(line: 395, column: 34, scope: !13335)
!13349 = !DILocation(line: 395, column: 32, scope: !13335)
!13350 = !DILocation(line: 395, column: 47, scope: !13335)
!13351 = !DILocation(line: 395, column: 45, scope: !13335)
!13352 = !DILocation(line: 395, column: 21, scope: !13335)
!13353 = !DILocation(line: 396, column: 13, scope: !13335)
!13354 = !DILocation(line: 400, column: 24, scope: !13336)
!13355 = !DILocation(line: 400, column: 21, scope: !13336)
!13356 = !DILocation(line: 401, column: 22, scope: !13336)
!13357 = !DILocation(line: 401, column: 19, scope: !13336)
!13358 = !DILocation(line: 402, column: 11, scope: !13336)
!13359 = !DILocation(line: 405, column: 24, scope: !13336)
!13360 = !DILocation(line: 405, column: 21, scope: !13336)
!13361 = !DILocation(line: 406, column: 23, scope: !13336)
!13362 = !DILocation(line: 406, column: 22, scope: !13336)
!13363 = !DILocation(line: 406, column: 19, scope: !13336)
!13364 = !DILocation(line: 407, column: 11, scope: !13336)
!13365 = !DILocation(line: 409, column: 5, scope: !13282)
!13366 = !DILocation(line: 348, column: 45, scope: !13276)
!13367 = !DILocation(line: 348, column: 3, scope: !13276)
!13368 = distinct !{!13368, !13280, !13369}
!13369 = !DILocation(line: 409, column: 5, scope: !13277)
!13370 = !DILocation(line: 411, column: 7, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13252, file: !1350, line: 411, column: 7)
!13372 = !DILocation(line: 411, column: 7, scope: !13252)
!13373 = !DILocation(line: 412, column: 19, scope: !13371)
!13374 = !DILocation(line: 412, column: 6, scope: !13371)
!13375 = !DILocation(line: 412, column: 17, scope: !13371)
!13376 = !DILocation(line: 412, column: 5, scope: !13371)
!13377 = !DILocation(line: 413, column: 10, scope: !13252)
!13378 = !DILocation(line: 413, column: 3, scope: !13252)
!13379 = distinct !DISubprogram(name: "opendirat", scope: !13380, file: !13380, line: 36, type: !13381, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1357, retainedNodes: !298)
!13380 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13381 = !DISubroutineType(types: !13382)
!13382 = !{!662, !7, !183, !7, !227}
!13383 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13379, file: !13380, line: 36, type: !7)
!13384 = !DILocation(line: 36, column: 16, scope: !13379)
!13385 = !DILocalVariable(name: "dir", arg: 2, scope: !13379, file: !13380, line: 36, type: !183)
!13386 = !DILocation(line: 36, column: 36, scope: !13379)
!13387 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13379, file: !13380, line: 36, type: !7)
!13388 = !DILocation(line: 36, column: 45, scope: !13379)
!13389 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13379, file: !13380, line: 36, type: !227)
!13390 = !DILocation(line: 36, column: 63, scope: !13379)
!13391 = !DILocalVariable(name: "open_flags", scope: !13379, file: !13380, line: 38, type: !7)
!13392 = !DILocation(line: 38, column: 7, scope: !13379)
!13393 = !DILocation(line: 39, column: 36, scope: !13379)
!13394 = !DILocation(line: 39, column: 34, scope: !13379)
!13395 = !DILocalVariable(name: "new_fd", scope: !13379, file: !13380, line: 40, type: !7)
!13396 = !DILocation(line: 40, column: 7, scope: !13379)
!13397 = !DILocation(line: 40, column: 24, scope: !13379)
!13398 = !DILocation(line: 40, column: 32, scope: !13379)
!13399 = !DILocation(line: 40, column: 37, scope: !13379)
!13400 = !DILocation(line: 40, column: 16, scope: !13379)
!13401 = !DILocation(line: 42, column: 7, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13379, file: !13380, line: 42, column: 7)
!13403 = !DILocation(line: 42, column: 14, scope: !13402)
!13404 = !DILocation(line: 42, column: 7, scope: !13379)
!13405 = !DILocation(line: 43, column: 5, scope: !13402)
!13406 = !DILocalVariable(name: "dirp", scope: !13379, file: !13380, line: 44, type: !662)
!13407 = !DILocation(line: 44, column: 8, scope: !13379)
!13408 = !DILocation(line: 44, column: 26, scope: !13379)
!13409 = !DILocation(line: 44, column: 15, scope: !13379)
!13410 = !DILocation(line: 45, column: 7, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13379, file: !13380, line: 45, column: 7)
!13412 = !DILocation(line: 45, column: 7, scope: !13379)
!13413 = !DILocation(line: 46, column: 16, scope: !13411)
!13414 = !DILocation(line: 46, column: 6, scope: !13411)
!13415 = !DILocation(line: 46, column: 14, scope: !13411)
!13416 = !DILocation(line: 46, column: 5, scope: !13411)
!13417 = !DILocalVariable(name: "fdopendir_errno", scope: !13418, file: !13380, line: 49, type: !7)
!13418 = distinct !DILexicalBlock(scope: !13411, file: !13380, line: 48, column: 5)
!13419 = !DILocation(line: 49, column: 11, scope: !13418)
!13420 = !DILocation(line: 49, column: 29, scope: !13418)
!13421 = !DILocation(line: 50, column: 14, scope: !13418)
!13422 = !DILocation(line: 50, column: 7, scope: !13418)
!13423 = !DILocation(line: 51, column: 15, scope: !13418)
!13424 = !DILocation(line: 51, column: 7, scope: !13418)
!13425 = !DILocation(line: 51, column: 13, scope: !13418)
!13426 = !DILocation(line: 53, column: 10, scope: !13379)
!13427 = !DILocation(line: 53, column: 3, scope: !13379)
!13428 = !DILocation(line: 54, column: 1, scope: !13379)
!13429 = distinct !DISubprogram(name: "set_program_name", scope: !887, file: !887, line: 39, type: !296, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !849, retainedNodes: !298)
!13430 = !DILocalVariable(name: "argv0", arg: 1, scope: !13429, file: !887, line: 39, type: !183)
!13431 = !DILocation(line: 39, column: 31, scope: !13429)
!13432 = !DILocalVariable(name: "slash", scope: !13429, file: !887, line: 46, type: !183)
!13433 = !DILocation(line: 46, column: 15, scope: !13429)
!13434 = !DILocalVariable(name: "base", scope: !13429, file: !887, line: 47, type: !183)
!13435 = !DILocation(line: 47, column: 15, scope: !13429)
!13436 = !DILocation(line: 51, column: 7, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13429, file: !887, line: 51, column: 7)
!13438 = !DILocation(line: 51, column: 13, scope: !13437)
!13439 = !DILocation(line: 51, column: 7, scope: !13429)
!13440 = !DILocation(line: 55, column: 14, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13437, file: !887, line: 52, column: 5)
!13442 = !DILocation(line: 54, column: 7, scope: !13441)
!13443 = !DILocation(line: 56, column: 7, scope: !13441)
!13444 = !DILocation(line: 59, column: 20, scope: !13429)
!13445 = !DILocation(line: 59, column: 11, scope: !13429)
!13446 = !DILocation(line: 59, column: 9, scope: !13429)
!13447 = !DILocation(line: 60, column: 11, scope: !13429)
!13448 = !DILocation(line: 60, column: 17, scope: !13429)
!13449 = !DILocation(line: 60, column: 27, scope: !13429)
!13450 = !DILocation(line: 60, column: 33, scope: !13429)
!13451 = !DILocation(line: 60, column: 39, scope: !13429)
!13452 = !DILocation(line: 60, column: 8, scope: !13429)
!13453 = !DILocation(line: 61, column: 7, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13429, file: !887, line: 61, column: 7)
!13455 = !DILocation(line: 61, column: 14, scope: !13454)
!13456 = !DILocation(line: 61, column: 12, scope: !13454)
!13457 = !DILocation(line: 61, column: 20, scope: !13454)
!13458 = !DILocation(line: 61, column: 25, scope: !13454)
!13459 = !DILocation(line: 61, column: 37, scope: !13454)
!13460 = !DILocation(line: 61, column: 42, scope: !13454)
!13461 = !DILocation(line: 61, column: 28, scope: !13454)
!13462 = !DILocation(line: 61, column: 61, scope: !13454)
!13463 = !DILocation(line: 61, column: 7, scope: !13429)
!13464 = !DILocation(line: 63, column: 15, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13454, file: !887, line: 62, column: 5)
!13466 = !DILocation(line: 63, column: 13, scope: !13465)
!13467 = !DILocation(line: 64, column: 20, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13465, file: !887, line: 64, column: 11)
!13469 = !DILocation(line: 64, column: 11, scope: !13468)
!13470 = !DILocation(line: 64, column: 36, scope: !13468)
!13471 = !DILocation(line: 64, column: 11, scope: !13465)
!13472 = !DILocation(line: 66, column: 19, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13468, file: !887, line: 65, column: 9)
!13474 = !DILocation(line: 66, column: 24, scope: !13473)
!13475 = !DILocation(line: 66, column: 17, scope: !13473)
!13476 = !DILocation(line: 70, column: 52, scope: !13473)
!13477 = !DILocation(line: 70, column: 41, scope: !13473)
!13478 = !DILocation(line: 72, column: 9, scope: !13473)
!13479 = !DILocation(line: 73, column: 5, scope: !13465)
!13480 = !DILocation(line: 84, column: 18, scope: !13429)
!13481 = !DILocation(line: 84, column: 16, scope: !13429)
!13482 = !DILocation(line: 90, column: 38, scope: !13429)
!13483 = !DILocation(line: 90, column: 27, scope: !13429)
!13484 = !DILocation(line: 92, column: 1, scope: !13429)
!13485 = distinct !DISubprogram(name: "qcopy_acl", scope: !13486, file: !13486, line: 39, type: !8844, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1360, retainedNodes: !298)
!13486 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13488, line: 260, size: 256, elements: !13489)
!13488 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/software/coreutils-8.31")
!13489 = !{!13490, !13491, !13492, !13493}
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13487, file: !13488, line: 261, baseType: !139, size: 32)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13487, file: !13488, line: 264, baseType: !1655, size: 64, offset: 64)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13487, file: !13488, line: 266, baseType: !1655, size: 64, offset: 128)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13487, file: !13488, line: 268, baseType: !142, size: 8, offset: 192)
!13494 = !DILocalVariable(name: "src_name", arg: 1, scope: !13485, file: !13486, line: 39, type: !183)
!13495 = !DILocation(line: 39, column: 24, scope: !13485)
!13496 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13485, file: !13486, line: 39, type: !7)
!13497 = !DILocation(line: 39, column: 38, scope: !13485)
!13498 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13485, file: !13486, line: 39, type: !183)
!13499 = !DILocation(line: 39, column: 63, scope: !13485)
!13500 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13485, file: !13486, line: 40, type: !7)
!13501 = !DILocation(line: 40, column: 16, scope: !13485)
!13502 = !DILocalVariable(name: "mode", arg: 5, scope: !13485, file: !13486, line: 40, type: !139)
!13503 = !DILocation(line: 40, column: 34, scope: !13485)
!13504 = !DILocalVariable(name: "ctx", scope: !13485, file: !13486, line: 42, type: !13487)
!13505 = !DILocation(line: 42, column: 29, scope: !13485)
!13506 = !DILocalVariable(name: "ret", scope: !13485, file: !13486, line: 43, type: !7)
!13507 = !DILocation(line: 43, column: 7, scope: !13485)
!13508 = !DILocation(line: 45, column: 26, scope: !13485)
!13509 = !DILocation(line: 45, column: 36, scope: !13485)
!13510 = !DILocation(line: 45, column: 49, scope: !13485)
!13511 = !DILocation(line: 45, column: 9, scope: !13485)
!13512 = !DILocation(line: 45, column: 7, scope: !13485)
!13513 = !DILocation(line: 46, column: 7, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13485, file: !13486, line: 46, column: 7)
!13515 = !DILocation(line: 46, column: 11, scope: !13514)
!13516 = !DILocation(line: 46, column: 7, scope: !13485)
!13517 = !DILocation(line: 47, column: 5, scope: !13514)
!13518 = !DILocation(line: 48, column: 32, scope: !13485)
!13519 = !DILocation(line: 48, column: 42, scope: !13485)
!13520 = !DILocation(line: 48, column: 9, scope: !13485)
!13521 = !DILocation(line: 48, column: 7, scope: !13485)
!13522 = !DILocation(line: 49, column: 3, scope: !13485)
!13523 = !DILocation(line: 50, column: 10, scope: !13485)
!13524 = !DILocation(line: 50, column: 3, scope: !13485)
!13525 = !DILocation(line: 51, column: 1, scope: !13485)
!13526 = distinct !DISubprogram(name: "qset_acl", scope: !13527, file: !13527, line: 39, type: !8883, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1363, retainedNodes: !298)
!13527 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13488, line: 260, size: 256, elements: !13529)
!13529 = !{!13530, !13531, !13532, !13533}
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13528, file: !13488, line: 261, baseType: !139, size: 32)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13528, file: !13488, line: 264, baseType: !1655, size: 64, offset: 64)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13528, file: !13488, line: 266, baseType: !1655, size: 64, offset: 128)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13528, file: !13488, line: 268, baseType: !142, size: 8, offset: 192)
!13534 = !DILocalVariable(name: "name", arg: 1, scope: !13526, file: !13527, line: 39, type: !183)
!13535 = !DILocation(line: 39, column: 23, scope: !13526)
!13536 = !DILocalVariable(name: "desc", arg: 2, scope: !13526, file: !13527, line: 39, type: !7)
!13537 = !DILocation(line: 39, column: 33, scope: !13526)
!13538 = !DILocalVariable(name: "mode", arg: 3, scope: !13526, file: !13527, line: 39, type: !139)
!13539 = !DILocation(line: 39, column: 46, scope: !13526)
!13540 = !DILocalVariable(name: "ctx", scope: !13526, file: !13527, line: 41, type: !13528)
!13541 = !DILocation(line: 41, column: 29, scope: !13526)
!13542 = !DILocalVariable(name: "ret", scope: !13526, file: !13527, line: 42, type: !7)
!13543 = !DILocation(line: 42, column: 7, scope: !13526)
!13544 = !DILocation(line: 44, column: 3, scope: !13526)
!13545 = !DILocation(line: 45, column: 14, scope: !13526)
!13546 = !DILocation(line: 45, column: 7, scope: !13526)
!13547 = !DILocation(line: 45, column: 12, scope: !13526)
!13548 = !DILocation(line: 46, column: 32, scope: !13526)
!13549 = !DILocation(line: 46, column: 38, scope: !13526)
!13550 = !DILocation(line: 46, column: 9, scope: !13526)
!13551 = !DILocation(line: 46, column: 7, scope: !13526)
!13552 = !DILocation(line: 47, column: 3, scope: !13526)
!13553 = !DILocation(line: 48, column: 10, scope: !13526)
!13554 = !DILocation(line: 48, column: 3, scope: !13526)
!13555 = distinct !DISubprogram(name: "clone_quoting_options", scope: !913, file: !913, line: 122, type: !13556, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{!911, !911}
!13558 = !DILocalVariable(name: "o", arg: 1, scope: !13555, file: !913, line: 122, type: !911)
!13559 = !DILocation(line: 122, column: 48, scope: !13555)
!13560 = !DILocalVariable(name: "e", scope: !13555, file: !913, line: 124, type: !7)
!13561 = !DILocation(line: 124, column: 7, scope: !13555)
!13562 = !DILocation(line: 124, column: 11, scope: !13555)
!13563 = !DILocalVariable(name: "p", scope: !13555, file: !913, line: 125, type: !911)
!13564 = !DILocation(line: 125, column: 27, scope: !13555)
!13565 = !DILocation(line: 125, column: 40, scope: !13555)
!13566 = !DILocation(line: 125, column: 44, scope: !13555)
!13567 = !DILocation(line: 125, column: 31, scope: !13555)
!13568 = !DILocation(line: 127, column: 11, scope: !13555)
!13569 = !DILocation(line: 127, column: 3, scope: !13555)
!13570 = !DILocation(line: 127, column: 9, scope: !13555)
!13571 = !DILocation(line: 128, column: 10, scope: !13555)
!13572 = !DILocation(line: 128, column: 3, scope: !13555)
!13573 = distinct !DISubprogram(name: "get_quoting_style", scope: !913, file: !913, line: 133, type: !13574, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13574 = !DISubroutineType(types: !13575)
!13575 = !{!893, !922}
!13576 = !DILocalVariable(name: "o", arg: 1, scope: !13573, file: !913, line: 133, type: !922)
!13577 = !DILocation(line: 133, column: 50, scope: !13573)
!13578 = !DILocation(line: 135, column: 11, scope: !13573)
!13579 = !DILocation(line: 135, column: 15, scope: !13573)
!13580 = !DILocation(line: 135, column: 46, scope: !13573)
!13581 = !DILocation(line: 135, column: 3, scope: !13573)
!13582 = distinct !DISubprogram(name: "set_quoting_style", scope: !913, file: !913, line: 141, type: !13583, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13583 = !DISubroutineType(types: !13584)
!13584 = !{null, !911, !893}
!13585 = !DILocalVariable(name: "o", arg: 1, scope: !13582, file: !913, line: 141, type: !911)
!13586 = !DILocation(line: 141, column: 44, scope: !13582)
!13587 = !DILocalVariable(name: "s", arg: 2, scope: !13582, file: !913, line: 141, type: !893)
!13588 = !DILocation(line: 141, column: 66, scope: !13582)
!13589 = !DILocation(line: 143, column: 47, scope: !13582)
!13590 = !DILocation(line: 143, column: 4, scope: !13582)
!13591 = !DILocation(line: 143, column: 8, scope: !13582)
!13592 = !DILocation(line: 143, column: 39, scope: !13582)
!13593 = !DILocation(line: 143, column: 45, scope: !13582)
!13594 = !DILocation(line: 144, column: 1, scope: !13582)
!13595 = distinct !DISubprogram(name: "set_char_quoting", scope: !913, file: !913, line: 152, type: !13596, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{!7, !911, !10, !7}
!13598 = !DILocalVariable(name: "o", arg: 1, scope: !13595, file: !913, line: 152, type: !911)
!13599 = !DILocation(line: 152, column: 43, scope: !13595)
!13600 = !DILocalVariable(name: "c", arg: 2, scope: !13595, file: !913, line: 152, type: !10)
!13601 = !DILocation(line: 152, column: 51, scope: !13595)
!13602 = !DILocalVariable(name: "i", arg: 3, scope: !13595, file: !913, line: 152, type: !7)
!13603 = !DILocation(line: 152, column: 58, scope: !13595)
!13604 = !DILocalVariable(name: "uc", scope: !13595, file: !913, line: 154, type: !573)
!13605 = !DILocation(line: 154, column: 17, scope: !13595)
!13606 = !DILocation(line: 154, column: 22, scope: !13595)
!13607 = !DILocalVariable(name: "p", scope: !13595, file: !913, line: 155, type: !921)
!13608 = !DILocation(line: 155, column: 17, scope: !13595)
!13609 = !DILocation(line: 156, column: 6, scope: !13595)
!13610 = !DILocation(line: 156, column: 10, scope: !13595)
!13611 = !DILocation(line: 156, column: 41, scope: !13595)
!13612 = !DILocation(line: 156, column: 5, scope: !13595)
!13613 = !DILocation(line: 156, column: 59, scope: !13595)
!13614 = !DILocation(line: 156, column: 62, scope: !13595)
!13615 = !DILocation(line: 156, column: 57, scope: !13595)
!13616 = !DILocalVariable(name: "shift", scope: !13595, file: !913, line: 157, type: !7)
!13617 = !DILocation(line: 157, column: 7, scope: !13595)
!13618 = !DILocation(line: 157, column: 15, scope: !13595)
!13619 = !DILocation(line: 157, column: 18, scope: !13595)
!13620 = !DILocalVariable(name: "r", scope: !13595, file: !913, line: 158, type: !7)
!13621 = !DILocation(line: 158, column: 7, scope: !13595)
!13622 = !DILocation(line: 158, column: 13, scope: !13595)
!13623 = !DILocation(line: 158, column: 12, scope: !13595)
!13624 = !DILocation(line: 158, column: 18, scope: !13595)
!13625 = !DILocation(line: 158, column: 15, scope: !13595)
!13626 = !DILocation(line: 158, column: 25, scope: !13595)
!13627 = !DILocation(line: 159, column: 11, scope: !13595)
!13628 = !DILocation(line: 159, column: 13, scope: !13595)
!13629 = !DILocation(line: 159, column: 20, scope: !13595)
!13630 = !DILocation(line: 159, column: 18, scope: !13595)
!13631 = !DILocation(line: 159, column: 26, scope: !13595)
!13632 = !DILocation(line: 159, column: 23, scope: !13595)
!13633 = !DILocation(line: 159, column: 4, scope: !13595)
!13634 = !DILocation(line: 159, column: 6, scope: !13595)
!13635 = !DILocation(line: 160, column: 10, scope: !13595)
!13636 = !DILocation(line: 160, column: 3, scope: !13595)
!13637 = distinct !DISubprogram(name: "set_quoting_flags", scope: !913, file: !913, line: 168, type: !13638, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13638 = !DISubroutineType(types: !13639)
!13639 = !{!7, !911, !7}
!13640 = !DILocalVariable(name: "o", arg: 1, scope: !13637, file: !913, line: 168, type: !911)
!13641 = !DILocation(line: 168, column: 44, scope: !13637)
!13642 = !DILocalVariable(name: "i", arg: 2, scope: !13637, file: !913, line: 168, type: !7)
!13643 = !DILocation(line: 168, column: 51, scope: !13637)
!13644 = !DILocalVariable(name: "r", scope: !13637, file: !913, line: 170, type: !7)
!13645 = !DILocation(line: 170, column: 7, scope: !13637)
!13646 = !DILocation(line: 171, column: 8, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13637, file: !913, line: 171, column: 7)
!13648 = !DILocation(line: 171, column: 7, scope: !13637)
!13649 = !DILocation(line: 172, column: 7, scope: !13647)
!13650 = !DILocation(line: 172, column: 5, scope: !13647)
!13651 = !DILocation(line: 173, column: 7, scope: !13637)
!13652 = !DILocation(line: 173, column: 10, scope: !13637)
!13653 = !DILocation(line: 173, column: 5, scope: !13637)
!13654 = !DILocation(line: 174, column: 14, scope: !13637)
!13655 = !DILocation(line: 174, column: 3, scope: !13637)
!13656 = !DILocation(line: 174, column: 6, scope: !13637)
!13657 = !DILocation(line: 174, column: 12, scope: !13637)
!13658 = !DILocation(line: 175, column: 10, scope: !13637)
!13659 = !DILocation(line: 175, column: 3, scope: !13637)
!13660 = distinct !DISubprogram(name: "set_custom_quoting", scope: !913, file: !913, line: 179, type: !13661, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13661 = !DISubroutineType(types: !13662)
!13662 = !{null, !911, !183, !183}
!13663 = !DILocalVariable(name: "o", arg: 1, scope: !13660, file: !913, line: 179, type: !911)
!13664 = !DILocation(line: 179, column: 45, scope: !13660)
!13665 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13660, file: !913, line: 180, type: !183)
!13666 = !DILocation(line: 180, column: 33, scope: !13660)
!13667 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13660, file: !913, line: 180, type: !183)
!13668 = !DILocation(line: 180, column: 57, scope: !13660)
!13669 = !DILocation(line: 182, column: 8, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13660, file: !913, line: 182, column: 7)
!13671 = !DILocation(line: 182, column: 7, scope: !13660)
!13672 = !DILocation(line: 183, column: 7, scope: !13670)
!13673 = !DILocation(line: 183, column: 5, scope: !13670)
!13674 = !DILocation(line: 184, column: 3, scope: !13660)
!13675 = !DILocation(line: 184, column: 6, scope: !13660)
!13676 = !DILocation(line: 184, column: 12, scope: !13660)
!13677 = !DILocation(line: 185, column: 8, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13660, file: !913, line: 185, column: 7)
!13679 = !DILocation(line: 185, column: 19, scope: !13678)
!13680 = !DILocation(line: 185, column: 23, scope: !13678)
!13681 = !DILocation(line: 185, column: 7, scope: !13660)
!13682 = !DILocation(line: 186, column: 5, scope: !13678)
!13683 = !DILocation(line: 187, column: 19, scope: !13660)
!13684 = !DILocation(line: 187, column: 3, scope: !13660)
!13685 = !DILocation(line: 187, column: 6, scope: !13660)
!13686 = !DILocation(line: 187, column: 17, scope: !13660)
!13687 = !DILocation(line: 188, column: 20, scope: !13660)
!13688 = !DILocation(line: 188, column: 3, scope: !13660)
!13689 = !DILocation(line: 188, column: 6, scope: !13660)
!13690 = !DILocation(line: 188, column: 18, scope: !13660)
!13691 = !DILocation(line: 189, column: 1, scope: !13660)
!13692 = distinct !DISubprogram(name: "quotearg_buffer", scope: !913, file: !913, line: 784, type: !13693, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{!55, !9, !55, !183, !55, !922}
!13695 = !DILocalVariable(name: "buffer", arg: 1, scope: !13692, file: !913, line: 784, type: !9)
!13696 = !DILocation(line: 784, column: 24, scope: !13692)
!13697 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13692, file: !913, line: 784, type: !55)
!13698 = !DILocation(line: 784, column: 39, scope: !13692)
!13699 = !DILocalVariable(name: "arg", arg: 3, scope: !13692, file: !913, line: 785, type: !183)
!13700 = !DILocation(line: 785, column: 30, scope: !13692)
!13701 = !DILocalVariable(name: "argsize", arg: 4, scope: !13692, file: !913, line: 785, type: !55)
!13702 = !DILocation(line: 785, column: 42, scope: !13692)
!13703 = !DILocalVariable(name: "o", arg: 5, scope: !13692, file: !913, line: 786, type: !922)
!13704 = !DILocation(line: 786, column: 48, scope: !13692)
!13705 = !DILocalVariable(name: "p", scope: !13692, file: !913, line: 788, type: !922)
!13706 = !DILocation(line: 788, column: 33, scope: !13692)
!13707 = !DILocation(line: 788, column: 37, scope: !13692)
!13708 = !DILocation(line: 788, column: 41, scope: !13692)
!13709 = !DILocalVariable(name: "e", scope: !13692, file: !913, line: 789, type: !7)
!13710 = !DILocation(line: 789, column: 7, scope: !13692)
!13711 = !DILocation(line: 789, column: 11, scope: !13692)
!13712 = !DILocalVariable(name: "r", scope: !13692, file: !913, line: 790, type: !55)
!13713 = !DILocation(line: 790, column: 10, scope: !13692)
!13714 = !DILocation(line: 790, column: 40, scope: !13692)
!13715 = !DILocation(line: 790, column: 48, scope: !13692)
!13716 = !DILocation(line: 790, column: 60, scope: !13692)
!13717 = !DILocation(line: 790, column: 65, scope: !13692)
!13718 = !DILocation(line: 791, column: 40, scope: !13692)
!13719 = !DILocation(line: 791, column: 43, scope: !13692)
!13720 = !DILocation(line: 791, column: 50, scope: !13692)
!13721 = !DILocation(line: 791, column: 53, scope: !13692)
!13722 = !DILocation(line: 791, column: 60, scope: !13692)
!13723 = !DILocation(line: 791, column: 63, scope: !13692)
!13724 = !DILocation(line: 792, column: 40, scope: !13692)
!13725 = !DILocation(line: 792, column: 43, scope: !13692)
!13726 = !DILocation(line: 792, column: 55, scope: !13692)
!13727 = !DILocation(line: 792, column: 58, scope: !13692)
!13728 = !DILocation(line: 790, column: 14, scope: !13692)
!13729 = !DILocation(line: 793, column: 11, scope: !13692)
!13730 = !DILocation(line: 793, column: 3, scope: !13692)
!13731 = !DILocation(line: 793, column: 9, scope: !13692)
!13732 = !DILocation(line: 794, column: 10, scope: !13692)
!13733 = !DILocation(line: 794, column: 3, scope: !13692)
!13734 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !913, file: !913, line: 256, type: !13735, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !890, retainedNodes: !298)
!13735 = !DISubroutineType(types: !13736)
!13736 = !{!55, !9, !55, !183, !55, !893, !7, !945, !183, !183}
!13737 = !DILocalVariable(name: "buffer", arg: 1, scope: !13734, file: !913, line: 256, type: !9)
!13738 = !DILocation(line: 256, column: 33, scope: !13734)
!13739 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13734, file: !913, line: 256, type: !55)
!13740 = !DILocation(line: 256, column: 48, scope: !13734)
!13741 = !DILocalVariable(name: "arg", arg: 3, scope: !13734, file: !913, line: 257, type: !183)
!13742 = !DILocation(line: 257, column: 39, scope: !13734)
!13743 = !DILocalVariable(name: "argsize", arg: 4, scope: !13734, file: !913, line: 257, type: !55)
!13744 = !DILocation(line: 257, column: 51, scope: !13734)
!13745 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13734, file: !913, line: 258, type: !893)
!13746 = !DILocation(line: 258, column: 46, scope: !13734)
!13747 = !DILocalVariable(name: "flags", arg: 6, scope: !13734, file: !913, line: 258, type: !7)
!13748 = !DILocation(line: 258, column: 65, scope: !13734)
!13749 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13734, file: !913, line: 259, type: !945)
!13750 = !DILocation(line: 259, column: 47, scope: !13734)
!13751 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13734, file: !913, line: 260, type: !183)
!13752 = !DILocation(line: 260, column: 39, scope: !13734)
!13753 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13734, file: !913, line: 261, type: !183)
!13754 = !DILocation(line: 261, column: 39, scope: !13734)
!13755 = !DILocalVariable(name: "i", scope: !13734, file: !913, line: 263, type: !55)
!13756 = !DILocation(line: 263, column: 10, scope: !13734)
!13757 = !DILocalVariable(name: "len", scope: !13734, file: !913, line: 264, type: !55)
!13758 = !DILocation(line: 264, column: 10, scope: !13734)
!13759 = !DILocalVariable(name: "orig_buffersize", scope: !13734, file: !913, line: 265, type: !55)
!13760 = !DILocation(line: 265, column: 10, scope: !13734)
!13761 = !DILocalVariable(name: "quote_string", scope: !13734, file: !913, line: 266, type: !183)
!13762 = !DILocation(line: 266, column: 15, scope: !13734)
!13763 = !DILocalVariable(name: "quote_string_len", scope: !13734, file: !913, line: 267, type: !55)
!13764 = !DILocation(line: 267, column: 10, scope: !13734)
!13765 = !DILocalVariable(name: "backslash_escapes", scope: !13734, file: !913, line: 268, type: !142)
!13766 = !DILocation(line: 268, column: 8, scope: !13734)
!13767 = !DILocalVariable(name: "unibyte_locale", scope: !13734, file: !913, line: 269, type: !142)
!13768 = !DILocation(line: 269, column: 8, scope: !13734)
!13769 = !DILocation(line: 269, column: 25, scope: !13734)
!13770 = !DILocation(line: 269, column: 36, scope: !13734)
!13771 = !DILocalVariable(name: "elide_outer_quotes", scope: !13734, file: !913, line: 270, type: !142)
!13772 = !DILocation(line: 270, column: 8, scope: !13734)
!13773 = !DILocation(line: 270, column: 30, scope: !13734)
!13774 = !DILocation(line: 270, column: 36, scope: !13734)
!13775 = !DILocation(line: 270, column: 61, scope: !13734)
!13776 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13734, file: !913, line: 271, type: !142)
!13777 = !DILocation(line: 271, column: 8, scope: !13734)
!13778 = !DILocalVariable(name: "encountered_single_quote", scope: !13734, file: !913, line: 272, type: !142)
!13779 = !DILocation(line: 272, column: 8, scope: !13734)
!13780 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13734, file: !913, line: 273, type: !142)
!13781 = !DILocation(line: 273, column: 8, scope: !13734)
!13782 = !DILocation(line: 273, column: 3, scope: !13734)
!13783 = !DILabel(scope: !13734, name: "process_input", file: !913, line: 314)
!13784 = !DILocation(line: 314, column: 2, scope: !13734)
!13785 = !DILocation(line: 316, column: 11, scope: !13734)
!13786 = !DILocation(line: 316, column: 3, scope: !13734)
!13787 = !DILocation(line: 319, column: 21, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 317, column: 5)
!13789 = !DILocation(line: 320, column: 26, scope: !13788)
!13790 = !DILocation(line: 321, column: 7, scope: !13788)
!13791 = !DILocation(line: 323, column: 12, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13788, file: !913, line: 323, column: 11)
!13793 = !DILocation(line: 323, column: 11, scope: !13788)
!13794 = !DILocation(line: 324, column: 9, scope: !13792)
!13795 = !DILocation(line: 324, column: 9, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !913, line: 324, column: 9)
!13797 = distinct !DILexicalBlock(scope: !13792, file: !913, line: 324, column: 9)
!13798 = !DILocation(line: 324, column: 9, scope: !13797)
!13799 = !DILocation(line: 325, column: 25, scope: !13788)
!13800 = !DILocation(line: 326, column: 20, scope: !13788)
!13801 = !DILocation(line: 327, column: 24, scope: !13788)
!13802 = !DILocation(line: 328, column: 7, scope: !13788)
!13803 = !DILocation(line: 331, column: 25, scope: !13788)
!13804 = !DILocation(line: 332, column: 26, scope: !13788)
!13805 = !DILocation(line: 333, column: 7, scope: !13788)
!13806 = !DILocation(line: 339, column: 13, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !913, line: 339, column: 13)
!13808 = distinct !DILexicalBlock(scope: !13788, file: !913, line: 338, column: 7)
!13809 = !DILocation(line: 339, column: 27, scope: !13807)
!13810 = !DILocation(line: 339, column: 13, scope: !13808)
!13811 = !DILocation(line: 362, column: 50, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13807, file: !913, line: 340, column: 11)
!13813 = !DILocation(line: 362, column: 26, scope: !13812)
!13814 = !DILocation(line: 362, column: 24, scope: !13812)
!13815 = !DILocation(line: 363, column: 51, scope: !13812)
!13816 = !DILocation(line: 363, column: 27, scope: !13812)
!13817 = !DILocation(line: 363, column: 25, scope: !13812)
!13818 = !DILocation(line: 364, column: 11, scope: !13812)
!13819 = !DILocation(line: 365, column: 14, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13808, file: !913, line: 365, column: 13)
!13821 = !DILocation(line: 365, column: 13, scope: !13808)
!13822 = !DILocation(line: 366, column: 31, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13820, file: !913, line: 366, column: 11)
!13824 = !DILocation(line: 366, column: 29, scope: !13823)
!13825 = !DILocation(line: 366, column: 16, scope: !13823)
!13826 = !DILocation(line: 366, column: 44, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13823, file: !913, line: 366, column: 11)
!13828 = !DILocation(line: 366, column: 43, scope: !13827)
!13829 = !DILocation(line: 366, column: 11, scope: !13823)
!13830 = !DILocation(line: 367, column: 13, scope: !13827)
!13831 = !DILocation(line: 367, column: 13, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !913, line: 367, column: 13)
!13833 = distinct !DILexicalBlock(scope: !13827, file: !913, line: 367, column: 13)
!13834 = !DILocation(line: 367, column: 13, scope: !13833)
!13835 = !DILocation(line: 366, column: 70, scope: !13827)
!13836 = !DILocation(line: 366, column: 11, scope: !13827)
!13837 = distinct !{!13837, !13829, !13838}
!13838 = !DILocation(line: 367, column: 13, scope: !13823)
!13839 = !DILocation(line: 368, column: 27, scope: !13808)
!13840 = !DILocation(line: 369, column: 24, scope: !13808)
!13841 = !DILocation(line: 369, column: 22, scope: !13808)
!13842 = !DILocation(line: 370, column: 36, scope: !13808)
!13843 = !DILocation(line: 370, column: 28, scope: !13808)
!13844 = !DILocation(line: 370, column: 26, scope: !13808)
!13845 = !DILocation(line: 372, column: 7, scope: !13788)
!13846 = !DILocation(line: 375, column: 25, scope: !13788)
!13847 = !DILocation(line: 376, column: 7, scope: !13788)
!13848 = !DILocation(line: 378, column: 26, scope: !13788)
!13849 = !DILocation(line: 379, column: 7, scope: !13788)
!13850 = !DILocation(line: 381, column: 12, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13788, file: !913, line: 381, column: 11)
!13852 = !DILocation(line: 381, column: 11, scope: !13788)
!13853 = !DILocation(line: 382, column: 27, scope: !13851)
!13854 = !DILocation(line: 382, column: 9, scope: !13851)
!13855 = !DILocation(line: 383, column: 7, scope: !13788)
!13856 = !DILocation(line: 385, column: 21, scope: !13788)
!13857 = !DILocation(line: 386, column: 12, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13788, file: !913, line: 386, column: 11)
!13859 = !DILocation(line: 386, column: 11, scope: !13788)
!13860 = !DILocation(line: 387, column: 9, scope: !13858)
!13861 = !DILocation(line: 387, column: 9, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13863, file: !913, line: 387, column: 9)
!13863 = distinct !DILexicalBlock(scope: !13858, file: !913, line: 387, column: 9)
!13864 = !DILocation(line: 387, column: 9, scope: !13863)
!13865 = !DILocation(line: 388, column: 20, scope: !13788)
!13866 = !DILocation(line: 389, column: 24, scope: !13788)
!13867 = !DILocation(line: 390, column: 7, scope: !13788)
!13868 = !DILocation(line: 393, column: 26, scope: !13788)
!13869 = !DILocation(line: 394, column: 7, scope: !13788)
!13870 = !DILocation(line: 397, column: 7, scope: !13788)
!13871 = !DILocation(line: 400, column: 10, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 400, column: 3)
!13873 = !DILocation(line: 400, column: 8, scope: !13872)
!13874 = !DILocation(line: 400, column: 19, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13872, file: !913, line: 400, column: 3)
!13876 = !DILocation(line: 400, column: 27, scope: !13875)
!13877 = !DILocation(line: 400, column: 41, scope: !13875)
!13878 = !DILocation(line: 400, column: 45, scope: !13875)
!13879 = !DILocation(line: 400, column: 48, scope: !13875)
!13880 = !DILocation(line: 400, column: 58, scope: !13875)
!13881 = !DILocation(line: 400, column: 63, scope: !13875)
!13882 = !DILocation(line: 400, column: 60, scope: !13875)
!13883 = !DILocation(line: 400, column: 16, scope: !13875)
!13884 = !DILocation(line: 400, column: 3, scope: !13872)
!13885 = !DILocalVariable(name: "c", scope: !13886, file: !913, line: 402, type: !573)
!13886 = distinct !DILexicalBlock(scope: !13875, file: !913, line: 401, column: 5)
!13887 = !DILocation(line: 402, column: 21, scope: !13886)
!13888 = !DILocalVariable(name: "esc", scope: !13886, file: !913, line: 403, type: !573)
!13889 = !DILocation(line: 403, column: 21, scope: !13886)
!13890 = !DILocalVariable(name: "is_right_quote", scope: !13886, file: !913, line: 404, type: !142)
!13891 = !DILocation(line: 404, column: 12, scope: !13886)
!13892 = !DILocalVariable(name: "escaping", scope: !13886, file: !913, line: 405, type: !142)
!13893 = !DILocation(line: 405, column: 12, scope: !13886)
!13894 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13886, file: !913, line: 406, type: !142)
!13895 = !DILocation(line: 406, column: 12, scope: !13886)
!13896 = !DILocation(line: 408, column: 11, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 408, column: 11)
!13898 = !DILocation(line: 409, column: 11, scope: !13897)
!13899 = !DILocation(line: 409, column: 14, scope: !13897)
!13900 = !DILocation(line: 409, column: 28, scope: !13897)
!13901 = !DILocation(line: 410, column: 11, scope: !13897)
!13902 = !DILocation(line: 410, column: 14, scope: !13897)
!13903 = !DILocation(line: 411, column: 11, scope: !13897)
!13904 = !DILocation(line: 411, column: 15, scope: !13897)
!13905 = !DILocation(line: 411, column: 19, scope: !13897)
!13906 = !DILocation(line: 411, column: 17, scope: !13897)
!13907 = !DILocation(line: 412, column: 19, scope: !13897)
!13908 = !DILocation(line: 412, column: 27, scope: !13897)
!13909 = !DILocation(line: 412, column: 39, scope: !13897)
!13910 = !DILocation(line: 412, column: 46, scope: !13897)
!13911 = !DILocation(line: 412, column: 44, scope: !13897)
!13912 = !DILocation(line: 416, column: 40, scope: !13897)
!13913 = !DILocation(line: 416, column: 32, scope: !13897)
!13914 = !DILocation(line: 416, column: 30, scope: !13897)
!13915 = !DILocation(line: 416, column: 48, scope: !13897)
!13916 = !DILocation(line: 412, column: 15, scope: !13897)
!13917 = !DILocation(line: 417, column: 11, scope: !13897)
!13918 = !DILocation(line: 417, column: 22, scope: !13897)
!13919 = !DILocation(line: 417, column: 28, scope: !13897)
!13920 = !DILocation(line: 417, column: 26, scope: !13897)
!13921 = !DILocation(line: 417, column: 31, scope: !13897)
!13922 = !DILocation(line: 417, column: 45, scope: !13897)
!13923 = !DILocation(line: 417, column: 14, scope: !13897)
!13924 = !DILocation(line: 417, column: 63, scope: !13897)
!13925 = !DILocation(line: 408, column: 11, scope: !13886)
!13926 = !DILocation(line: 419, column: 15, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !913, line: 419, column: 15)
!13928 = distinct !DILexicalBlock(scope: !13897, file: !913, line: 418, column: 9)
!13929 = !DILocation(line: 419, column: 15, scope: !13928)
!13930 = !DILocation(line: 420, column: 13, scope: !13927)
!13931 = !DILocation(line: 421, column: 26, scope: !13928)
!13932 = !DILocation(line: 422, column: 9, scope: !13928)
!13933 = !DILocation(line: 424, column: 11, scope: !13886)
!13934 = !DILocation(line: 424, column: 15, scope: !13886)
!13935 = !DILocation(line: 424, column: 9, scope: !13886)
!13936 = !DILocation(line: 425, column: 15, scope: !13886)
!13937 = !DILocation(line: 425, column: 7, scope: !13886)
!13938 = !DILocation(line: 428, column: 15, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 428, column: 15)
!13940 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 426, column: 9)
!13941 = !DILocation(line: 428, column: 15, scope: !13940)
!13942 = !DILocation(line: 430, column: 15, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13939, file: !913, line: 429, column: 13)
!13944 = !DILocation(line: 430, column: 15, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13946, file: !913, line: 430, column: 15)
!13946 = distinct !DILexicalBlock(scope: !13943, file: !913, line: 430, column: 15)
!13947 = !DILocation(line: 430, column: 15, scope: !13946)
!13948 = !DILocation(line: 430, column: 15, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13946, file: !913, line: 430, column: 15)
!13950 = !DILocation(line: 430, column: 15, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13949, file: !913, line: 430, column: 15)
!13952 = !DILocation(line: 430, column: 15, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !913, line: 430, column: 15)
!13954 = distinct !DILexicalBlock(scope: !13951, file: !913, line: 430, column: 15)
!13955 = !DILocation(line: 430, column: 15, scope: !13954)
!13956 = !DILocation(line: 430, column: 15, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13958, file: !913, line: 430, column: 15)
!13958 = distinct !DILexicalBlock(scope: !13951, file: !913, line: 430, column: 15)
!13959 = !DILocation(line: 430, column: 15, scope: !13958)
!13960 = !DILocation(line: 430, column: 15, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13962, file: !913, line: 430, column: 15)
!13962 = distinct !DILexicalBlock(scope: !13951, file: !913, line: 430, column: 15)
!13963 = !DILocation(line: 430, column: 15, scope: !13962)
!13964 = !DILocation(line: 430, column: 15, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !913, line: 430, column: 15)
!13966 = distinct !DILexicalBlock(scope: !13946, file: !913, line: 430, column: 15)
!13967 = !DILocation(line: 430, column: 15, scope: !13966)
!13968 = !DILocation(line: 437, column: 19, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13943, file: !913, line: 437, column: 19)
!13970 = !DILocation(line: 437, column: 33, scope: !13969)
!13971 = !DILocation(line: 438, column: 19, scope: !13969)
!13972 = !DILocation(line: 438, column: 22, scope: !13969)
!13973 = !DILocation(line: 438, column: 24, scope: !13969)
!13974 = !DILocation(line: 438, column: 30, scope: !13969)
!13975 = !DILocation(line: 438, column: 28, scope: !13969)
!13976 = !DILocation(line: 438, column: 38, scope: !13969)
!13977 = !DILocation(line: 438, column: 48, scope: !13969)
!13978 = !DILocation(line: 438, column: 52, scope: !13969)
!13979 = !DILocation(line: 438, column: 54, scope: !13969)
!13980 = !DILocation(line: 438, column: 45, scope: !13969)
!13981 = !DILocation(line: 438, column: 59, scope: !13969)
!13982 = !DILocation(line: 438, column: 62, scope: !13969)
!13983 = !DILocation(line: 438, column: 66, scope: !13969)
!13984 = !DILocation(line: 438, column: 68, scope: !13969)
!13985 = !DILocation(line: 438, column: 73, scope: !13969)
!13986 = !DILocation(line: 437, column: 19, scope: !13943)
!13987 = !DILocation(line: 440, column: 19, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13969, file: !913, line: 439, column: 17)
!13989 = !DILocation(line: 440, column: 19, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !913, line: 440, column: 19)
!13991 = distinct !DILexicalBlock(scope: !13988, file: !913, line: 440, column: 19)
!13992 = !DILocation(line: 440, column: 19, scope: !13991)
!13993 = !DILocation(line: 441, column: 19, scope: !13988)
!13994 = !DILocation(line: 441, column: 19, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !913, line: 441, column: 19)
!13996 = distinct !DILexicalBlock(scope: !13988, file: !913, line: 441, column: 19)
!13997 = !DILocation(line: 441, column: 19, scope: !13996)
!13998 = !DILocation(line: 442, column: 17, scope: !13988)
!13999 = !DILocation(line: 443, column: 17, scope: !13943)
!14000 = !DILocation(line: 448, column: 13, scope: !13943)
!14001 = !DILocation(line: 449, column: 20, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13939, file: !913, line: 449, column: 20)
!14003 = !DILocation(line: 449, column: 26, scope: !14002)
!14004 = !DILocation(line: 449, column: 20, scope: !13939)
!14005 = !DILocation(line: 450, column: 13, scope: !14002)
!14006 = !DILocation(line: 451, column: 11, scope: !13940)
!14007 = !DILocation(line: 454, column: 19, scope: !13940)
!14008 = !DILocation(line: 454, column: 11, scope: !13940)
!14009 = !DILocation(line: 457, column: 19, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !913, line: 457, column: 19)
!14011 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 455, column: 13)
!14012 = !DILocation(line: 457, column: 19, scope: !14011)
!14013 = !DILocation(line: 458, column: 17, scope: !14010)
!14014 = !DILocation(line: 459, column: 15, scope: !14011)
!14015 = !DILocation(line: 462, column: 20, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !14011, file: !913, line: 462, column: 19)
!14017 = !DILocation(line: 462, column: 26, scope: !14016)
!14018 = !DILocation(line: 463, column: 19, scope: !14016)
!14019 = !DILocation(line: 463, column: 22, scope: !14016)
!14020 = !DILocation(line: 463, column: 24, scope: !14016)
!14021 = !DILocation(line: 463, column: 30, scope: !14016)
!14022 = !DILocation(line: 463, column: 28, scope: !14016)
!14023 = !DILocation(line: 463, column: 38, scope: !14016)
!14024 = !DILocation(line: 463, column: 41, scope: !14016)
!14025 = !DILocation(line: 463, column: 45, scope: !14016)
!14026 = !DILocation(line: 463, column: 47, scope: !14016)
!14027 = !DILocation(line: 463, column: 52, scope: !14016)
!14028 = !DILocation(line: 462, column: 19, scope: !14011)
!14029 = !DILocation(line: 464, column: 25, scope: !14016)
!14030 = !DILocation(line: 464, column: 29, scope: !14016)
!14031 = !DILocation(line: 464, column: 31, scope: !14016)
!14032 = !DILocation(line: 464, column: 17, scope: !14016)
!14033 = !DILocation(line: 471, column: 25, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !913, line: 471, column: 25)
!14035 = distinct !DILexicalBlock(scope: !14016, file: !913, line: 465, column: 19)
!14036 = !DILocation(line: 471, column: 25, scope: !14035)
!14037 = !DILocation(line: 472, column: 23, scope: !14034)
!14038 = !DILocation(line: 473, column: 25, scope: !14035)
!14039 = !DILocation(line: 473, column: 29, scope: !14035)
!14040 = !DILocation(line: 473, column: 31, scope: !14035)
!14041 = !DILocation(line: 473, column: 23, scope: !14035)
!14042 = !DILocation(line: 474, column: 23, scope: !14035)
!14043 = !DILocation(line: 475, column: 21, scope: !14035)
!14044 = !DILocation(line: 475, column: 21, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !913, line: 475, column: 21)
!14046 = distinct !DILexicalBlock(scope: !14035, file: !913, line: 475, column: 21)
!14047 = !DILocation(line: 475, column: 21, scope: !14046)
!14048 = !DILocation(line: 476, column: 21, scope: !14035)
!14049 = !DILocation(line: 476, column: 21, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14051, file: !913, line: 476, column: 21)
!14051 = distinct !DILexicalBlock(scope: !14035, file: !913, line: 476, column: 21)
!14052 = !DILocation(line: 476, column: 21, scope: !14051)
!14053 = !DILocation(line: 477, column: 21, scope: !14035)
!14054 = !DILocation(line: 477, column: 21, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !913, line: 477, column: 21)
!14056 = distinct !DILexicalBlock(scope: !14035, file: !913, line: 477, column: 21)
!14057 = !DILocation(line: 477, column: 21, scope: !14056)
!14058 = !DILocation(line: 478, column: 21, scope: !14035)
!14059 = !DILocation(line: 478, column: 21, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14061, file: !913, line: 478, column: 21)
!14061 = distinct !DILexicalBlock(scope: !14035, file: !913, line: 478, column: 21)
!14062 = !DILocation(line: 478, column: 21, scope: !14061)
!14063 = !DILocation(line: 479, column: 21, scope: !14035)
!14064 = !DILocation(line: 482, column: 21, scope: !14035)
!14065 = !DILocation(line: 483, column: 19, scope: !14035)
!14066 = !DILocation(line: 484, column: 15, scope: !14011)
!14067 = !DILocation(line: 487, column: 15, scope: !14011)
!14068 = !DILocation(line: 489, column: 11, scope: !13940)
!14069 = !DILocation(line: 491, column: 24, scope: !13940)
!14070 = !DILocation(line: 491, column: 31, scope: !13940)
!14071 = !DILocation(line: 492, column: 24, scope: !13940)
!14072 = !DILocation(line: 492, column: 31, scope: !13940)
!14073 = !DILocation(line: 493, column: 24, scope: !13940)
!14074 = !DILocation(line: 493, column: 31, scope: !13940)
!14075 = !DILocation(line: 494, column: 24, scope: !13940)
!14076 = !DILocation(line: 494, column: 31, scope: !13940)
!14077 = !DILocation(line: 495, column: 24, scope: !13940)
!14078 = !DILocation(line: 495, column: 31, scope: !13940)
!14079 = !DILocation(line: 496, column: 24, scope: !13940)
!14080 = !DILocation(line: 496, column: 31, scope: !13940)
!14081 = !DILocation(line: 497, column: 24, scope: !13940)
!14082 = !DILocation(line: 497, column: 31, scope: !13940)
!14083 = !DILocation(line: 498, column: 26, scope: !13940)
!14084 = !DILocation(line: 498, column: 24, scope: !13940)
!14085 = !DILocation(line: 500, column: 15, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 500, column: 15)
!14087 = !DILocation(line: 500, column: 29, scope: !14086)
!14088 = !DILocation(line: 500, column: 15, scope: !13940)
!14089 = !DILocation(line: 502, column: 19, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !913, line: 502, column: 19)
!14091 = distinct !DILexicalBlock(scope: !14086, file: !913, line: 501, column: 13)
!14092 = !DILocation(line: 502, column: 19, scope: !14091)
!14093 = !DILocation(line: 503, column: 17, scope: !14090)
!14094 = !DILocation(line: 504, column: 15, scope: !14091)
!14095 = !DILocation(line: 509, column: 15, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 509, column: 15)
!14097 = !DILocation(line: 509, column: 33, scope: !14096)
!14098 = !DILocation(line: 509, column: 36, scope: !14096)
!14099 = !DILocation(line: 509, column: 55, scope: !14096)
!14100 = !DILocation(line: 509, column: 58, scope: !14096)
!14101 = !DILocation(line: 509, column: 15, scope: !13940)
!14102 = !DILocation(line: 510, column: 13, scope: !14096)
!14103 = !DILabel(scope: !13940, name: "c_and_shell_escape", file: !913, line: 512)
!14104 = !DILocation(line: 512, column: 9, scope: !13940)
!14105 = !DILocation(line: 513, column: 15, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 513, column: 15)
!14107 = !DILocation(line: 513, column: 29, scope: !14106)
!14108 = !DILocation(line: 514, column: 15, scope: !14106)
!14109 = !DILocation(line: 514, column: 18, scope: !14106)
!14110 = !DILocation(line: 513, column: 15, scope: !13940)
!14111 = !DILocation(line: 515, column: 13, scope: !14106)
!14112 = !DILabel(scope: !13940, name: "c_escape", file: !913, line: 517)
!14113 = !DILocation(line: 517, column: 9, scope: !13940)
!14114 = !DILocation(line: 518, column: 15, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 518, column: 15)
!14116 = !DILocation(line: 518, column: 15, scope: !13940)
!14117 = !DILocation(line: 520, column: 19, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14115, file: !913, line: 519, column: 13)
!14119 = !DILocation(line: 520, column: 17, scope: !14118)
!14120 = !DILocation(line: 521, column: 15, scope: !14118)
!14121 = !DILocation(line: 523, column: 11, scope: !13940)
!14122 = !DILocation(line: 526, column: 18, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 526, column: 15)
!14124 = !DILocation(line: 526, column: 26, scope: !14123)
!14125 = !DILocation(line: 526, column: 15, scope: !13940)
!14126 = !DILocation(line: 526, column: 40, scope: !14123)
!14127 = !DILocation(line: 526, column: 47, scope: !14123)
!14128 = !DILocation(line: 526, column: 57, scope: !14123)
!14129 = !DILocation(line: 526, column: 65, scope: !14123)
!14130 = !DILocation(line: 527, column: 13, scope: !14123)
!14131 = !DILocation(line: 528, column: 11, scope: !13940)
!14132 = !DILocation(line: 530, column: 15, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 530, column: 15)
!14134 = !DILocation(line: 530, column: 17, scope: !14133)
!14135 = !DILocation(line: 530, column: 15, scope: !13940)
!14136 = !DILocation(line: 531, column: 13, scope: !14133)
!14137 = !DILocation(line: 532, column: 11, scope: !13940)
!14138 = !DILocation(line: 534, column: 36, scope: !13940)
!14139 = !DILocation(line: 535, column: 11, scope: !13940)
!14140 = !DILocation(line: 548, column: 15, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 548, column: 15)
!14142 = !DILocation(line: 548, column: 29, scope: !14141)
!14143 = !DILocation(line: 549, column: 15, scope: !14141)
!14144 = !DILocation(line: 549, column: 18, scope: !14141)
!14145 = !DILocation(line: 548, column: 15, scope: !13940)
!14146 = !DILocation(line: 550, column: 13, scope: !14141)
!14147 = !DILocation(line: 551, column: 11, scope: !13940)
!14148 = !DILocation(line: 554, column: 36, scope: !13940)
!14149 = !DILocation(line: 555, column: 36, scope: !13940)
!14150 = !DILocation(line: 556, column: 15, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 556, column: 15)
!14152 = !DILocation(line: 556, column: 29, scope: !14151)
!14153 = !DILocation(line: 556, column: 15, scope: !13940)
!14154 = !DILocation(line: 558, column: 19, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14156, file: !913, line: 558, column: 19)
!14156 = distinct !DILexicalBlock(scope: !14151, file: !913, line: 557, column: 13)
!14157 = !DILocation(line: 558, column: 19, scope: !14156)
!14158 = !DILocation(line: 559, column: 17, scope: !14155)
!14159 = !DILocation(line: 561, column: 19, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !913, line: 561, column: 19)
!14161 = !DILocation(line: 561, column: 30, scope: !14160)
!14162 = !DILocation(line: 561, column: 35, scope: !14160)
!14163 = !DILocation(line: 561, column: 19, scope: !14156)
!14164 = !DILocation(line: 566, column: 37, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14160, file: !913, line: 562, column: 17)
!14166 = !DILocation(line: 566, column: 35, scope: !14165)
!14167 = !DILocation(line: 567, column: 30, scope: !14165)
!14168 = !DILocation(line: 568, column: 17, scope: !14165)
!14169 = !DILocation(line: 570, column: 15, scope: !14156)
!14170 = !DILocation(line: 570, column: 15, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14172, file: !913, line: 570, column: 15)
!14172 = distinct !DILexicalBlock(scope: !14156, file: !913, line: 570, column: 15)
!14173 = !DILocation(line: 570, column: 15, scope: !14172)
!14174 = !DILocation(line: 571, column: 15, scope: !14156)
!14175 = !DILocation(line: 571, column: 15, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !913, line: 571, column: 15)
!14177 = distinct !DILexicalBlock(scope: !14156, file: !913, line: 571, column: 15)
!14178 = !DILocation(line: 571, column: 15, scope: !14177)
!14179 = !DILocation(line: 572, column: 15, scope: !14156)
!14180 = !DILocation(line: 572, column: 15, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14182, file: !913, line: 572, column: 15)
!14182 = distinct !DILexicalBlock(scope: !14156, file: !913, line: 572, column: 15)
!14183 = !DILocation(line: 572, column: 15, scope: !14182)
!14184 = !DILocation(line: 573, column: 40, scope: !14156)
!14185 = !DILocation(line: 574, column: 13, scope: !14156)
!14186 = !DILocation(line: 575, column: 11, scope: !13940)
!14187 = !DILocation(line: 599, column: 36, scope: !13940)
!14188 = !DILocation(line: 600, column: 11, scope: !13940)
!14189 = !DILocalVariable(name: "m", scope: !14190, file: !913, line: 610, type: !55)
!14190 = distinct !DILexicalBlock(scope: !13940, file: !913, line: 608, column: 11)
!14191 = !DILocation(line: 610, column: 20, scope: !14190)
!14192 = !DILocalVariable(name: "printable", scope: !14190, file: !913, line: 612, type: !142)
!14193 = !DILocation(line: 612, column: 18, scope: !14190)
!14194 = !DILocation(line: 614, column: 17, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14190, file: !913, line: 614, column: 17)
!14196 = !DILocation(line: 614, column: 17, scope: !14190)
!14197 = !DILocation(line: 616, column: 19, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14195, file: !913, line: 615, column: 15)
!14199 = !DILocation(line: 617, column: 29, scope: !14198)
!14200 = !DILocation(line: 617, column: 41, scope: !14198)
!14201 = !DILocation(line: 617, column: 27, scope: !14198)
!14202 = !DILocation(line: 618, column: 15, scope: !14198)
!14203 = !DILocalVariable(name: "mbstate", scope: !14204, file: !913, line: 621, type: !932)
!14204 = distinct !DILexicalBlock(scope: !14195, file: !913, line: 620, column: 15)
!14205 = !DILocation(line: 621, column: 27, scope: !14204)
!14206 = !DILocation(line: 622, column: 17, scope: !14204)
!14207 = !DILocation(line: 624, column: 19, scope: !14204)
!14208 = !DILocation(line: 625, column: 27, scope: !14204)
!14209 = !DILocation(line: 626, column: 21, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14204, file: !913, line: 626, column: 21)
!14211 = !DILocation(line: 626, column: 29, scope: !14210)
!14212 = !DILocation(line: 626, column: 21, scope: !14204)
!14213 = !DILocation(line: 627, column: 37, scope: !14210)
!14214 = !DILocation(line: 627, column: 29, scope: !14210)
!14215 = !DILocation(line: 627, column: 27, scope: !14210)
!14216 = !DILocation(line: 627, column: 19, scope: !14210)
!14217 = !DILocation(line: 629, column: 17, scope: !14204)
!14218 = !DILocalVariable(name: "w", scope: !14219, file: !913, line: 631, type: !944)
!14219 = distinct !DILexicalBlock(scope: !14204, file: !913, line: 630, column: 19)
!14220 = !DILocation(line: 631, column: 29, scope: !14219)
!14221 = !DILocalVariable(name: "bytes", scope: !14219, file: !913, line: 632, type: !55)
!14222 = !DILocation(line: 632, column: 28, scope: !14219)
!14223 = !DILocation(line: 632, column: 50, scope: !14219)
!14224 = !DILocation(line: 632, column: 54, scope: !14219)
!14225 = !DILocation(line: 632, column: 58, scope: !14219)
!14226 = !DILocation(line: 632, column: 56, scope: !14219)
!14227 = !DILocation(line: 633, column: 45, scope: !14219)
!14228 = !DILocation(line: 633, column: 56, scope: !14219)
!14229 = !DILocation(line: 633, column: 60, scope: !14219)
!14230 = !DILocation(line: 633, column: 58, scope: !14219)
!14231 = !DILocation(line: 633, column: 53, scope: !14219)
!14232 = !DILocation(line: 632, column: 36, scope: !14219)
!14233 = !DILocation(line: 634, column: 25, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14219, file: !913, line: 634, column: 25)
!14235 = !DILocation(line: 634, column: 31, scope: !14234)
!14236 = !DILocation(line: 634, column: 25, scope: !14219)
!14237 = !DILocation(line: 635, column: 23, scope: !14234)
!14238 = !DILocation(line: 636, column: 30, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14234, file: !913, line: 636, column: 30)
!14240 = !DILocation(line: 636, column: 36, scope: !14239)
!14241 = !DILocation(line: 636, column: 30, scope: !14234)
!14242 = !DILocation(line: 638, column: 35, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14239, file: !913, line: 637, column: 23)
!14244 = !DILocation(line: 639, column: 25, scope: !14243)
!14245 = !DILocation(line: 641, column: 30, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14239, file: !913, line: 641, column: 30)
!14247 = !DILocation(line: 641, column: 36, scope: !14246)
!14248 = !DILocation(line: 641, column: 30, scope: !14239)
!14249 = !DILocation(line: 643, column: 35, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !913, line: 642, column: 23)
!14251 = !DILocation(line: 644, column: 25, scope: !14250)
!14252 = !DILocation(line: 644, column: 32, scope: !14250)
!14253 = !DILocation(line: 644, column: 36, scope: !14250)
!14254 = !DILocation(line: 644, column: 34, scope: !14250)
!14255 = !DILocation(line: 644, column: 40, scope: !14250)
!14256 = !DILocation(line: 644, column: 38, scope: !14250)
!14257 = !DILocation(line: 644, column: 48, scope: !14250)
!14258 = !DILocation(line: 644, column: 51, scope: !14250)
!14259 = !DILocation(line: 644, column: 55, scope: !14250)
!14260 = !DILocation(line: 644, column: 59, scope: !14250)
!14261 = !DILocation(line: 644, column: 57, scope: !14250)
!14262 = !DILocation(line: 0, scope: !14250)
!14263 = !DILocation(line: 645, column: 28, scope: !14250)
!14264 = distinct !{!14264, !14251, !14263}
!14265 = !DILocation(line: 646, column: 25, scope: !14250)
!14266 = !DILocation(line: 654, column: 44, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !913, line: 654, column: 29)
!14268 = distinct !DILexicalBlock(scope: !14246, file: !913, line: 649, column: 23)
!14269 = !DILocation(line: 655, column: 29, scope: !14267)
!14270 = !DILocation(line: 655, column: 32, scope: !14267)
!14271 = !DILocation(line: 655, column: 46, scope: !14267)
!14272 = !DILocation(line: 654, column: 29, scope: !14268)
!14273 = !DILocalVariable(name: "j", scope: !14274, file: !913, line: 657, type: !55)
!14274 = distinct !DILexicalBlock(scope: !14267, file: !913, line: 656, column: 27)
!14275 = !DILocation(line: 657, column: 36, scope: !14274)
!14276 = !DILocation(line: 658, column: 36, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14274, file: !913, line: 658, column: 29)
!14278 = !DILocation(line: 658, column: 34, scope: !14277)
!14279 = !DILocation(line: 658, column: 41, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14277, file: !913, line: 658, column: 29)
!14281 = !DILocation(line: 658, column: 45, scope: !14280)
!14282 = !DILocation(line: 658, column: 43, scope: !14280)
!14283 = !DILocation(line: 658, column: 29, scope: !14277)
!14284 = !DILocation(line: 659, column: 39, scope: !14280)
!14285 = !DILocation(line: 659, column: 43, scope: !14280)
!14286 = !DILocation(line: 659, column: 47, scope: !14280)
!14287 = !DILocation(line: 659, column: 45, scope: !14280)
!14288 = !DILocation(line: 659, column: 51, scope: !14280)
!14289 = !DILocation(line: 659, column: 49, scope: !14280)
!14290 = !DILocation(line: 659, column: 31, scope: !14280)
!14291 = !DILocation(line: 663, column: 35, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14280, file: !913, line: 660, column: 33)
!14293 = !DILocation(line: 666, column: 35, scope: !14292)
!14294 = !DILocation(line: 667, column: 33, scope: !14292)
!14295 = !DILocation(line: 658, column: 53, scope: !14280)
!14296 = !DILocation(line: 658, column: 29, scope: !14280)
!14297 = distinct !{!14297, !14283, !14298}
!14298 = !DILocation(line: 667, column: 33, scope: !14277)
!14299 = !DILocation(line: 668, column: 27, scope: !14274)
!14300 = !DILocation(line: 670, column: 41, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14268, file: !913, line: 670, column: 29)
!14302 = !DILocation(line: 670, column: 31, scope: !14301)
!14303 = !DILocation(line: 670, column: 29, scope: !14268)
!14304 = !DILocation(line: 671, column: 37, scope: !14301)
!14305 = !DILocation(line: 671, column: 27, scope: !14301)
!14306 = !DILocation(line: 672, column: 30, scope: !14268)
!14307 = !DILocation(line: 672, column: 27, scope: !14268)
!14308 = !DILocation(line: 674, column: 19, scope: !14219)
!14309 = !DILocation(line: 675, column: 26, scope: !14204)
!14310 = !DILocation(line: 675, column: 24, scope: !14204)
!14311 = distinct !{!14311, !14217, !14312}
!14312 = !DILocation(line: 675, column: 44, scope: !14204)
!14313 = !DILocation(line: 678, column: 40, scope: !14190)
!14314 = !DILocation(line: 678, column: 38, scope: !14190)
!14315 = !DILocation(line: 680, column: 21, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14190, file: !913, line: 680, column: 17)
!14317 = !DILocation(line: 680, column: 19, scope: !14316)
!14318 = !DILocation(line: 680, column: 23, scope: !14316)
!14319 = !DILocation(line: 680, column: 27, scope: !14316)
!14320 = !DILocation(line: 680, column: 45, scope: !14316)
!14321 = !DILocation(line: 680, column: 50, scope: !14316)
!14322 = !DILocation(line: 680, column: 17, scope: !14190)
!14323 = !DILocalVariable(name: "ilim", scope: !14324, file: !913, line: 684, type: !55)
!14324 = distinct !DILexicalBlock(scope: !14316, file: !913, line: 681, column: 15)
!14325 = !DILocation(line: 684, column: 24, scope: !14324)
!14326 = !DILocation(line: 684, column: 31, scope: !14324)
!14327 = !DILocation(line: 684, column: 35, scope: !14324)
!14328 = !DILocation(line: 684, column: 33, scope: !14324)
!14329 = !DILocation(line: 686, column: 17, scope: !14324)
!14330 = !DILocation(line: 688, column: 25, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !913, line: 688, column: 25)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !913, line: 687, column: 19)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !913, line: 686, column: 17)
!14334 = distinct !DILexicalBlock(scope: !14324, file: !913, line: 686, column: 17)
!14335 = !DILocation(line: 688, column: 43, scope: !14331)
!14336 = !DILocation(line: 688, column: 48, scope: !14331)
!14337 = !DILocation(line: 688, column: 25, scope: !14332)
!14338 = !DILocation(line: 690, column: 25, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14331, file: !913, line: 689, column: 23)
!14340 = !DILocation(line: 690, column: 25, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14342, file: !913, line: 690, column: 25)
!14342 = distinct !DILexicalBlock(scope: !14339, file: !913, line: 690, column: 25)
!14343 = !DILocation(line: 690, column: 25, scope: !14342)
!14344 = !DILocation(line: 690, column: 25, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14342, file: !913, line: 690, column: 25)
!14346 = !DILocation(line: 690, column: 25, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14345, file: !913, line: 690, column: 25)
!14348 = !DILocation(line: 690, column: 25, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !913, line: 690, column: 25)
!14350 = distinct !DILexicalBlock(scope: !14347, file: !913, line: 690, column: 25)
!14351 = !DILocation(line: 690, column: 25, scope: !14350)
!14352 = !DILocation(line: 690, column: 25, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !913, line: 690, column: 25)
!14354 = distinct !DILexicalBlock(scope: !14347, file: !913, line: 690, column: 25)
!14355 = !DILocation(line: 690, column: 25, scope: !14354)
!14356 = !DILocation(line: 690, column: 25, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14358, file: !913, line: 690, column: 25)
!14358 = distinct !DILexicalBlock(scope: !14347, file: !913, line: 690, column: 25)
!14359 = !DILocation(line: 690, column: 25, scope: !14358)
!14360 = !DILocation(line: 690, column: 25, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !913, line: 690, column: 25)
!14362 = distinct !DILexicalBlock(scope: !14342, file: !913, line: 690, column: 25)
!14363 = !DILocation(line: 690, column: 25, scope: !14362)
!14364 = !DILocation(line: 691, column: 25, scope: !14339)
!14365 = !DILocation(line: 691, column: 25, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !913, line: 691, column: 25)
!14367 = distinct !DILexicalBlock(scope: !14339, file: !913, line: 691, column: 25)
!14368 = !DILocation(line: 691, column: 25, scope: !14367)
!14369 = !DILocation(line: 692, column: 25, scope: !14339)
!14370 = !DILocation(line: 692, column: 25, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14372, file: !913, line: 692, column: 25)
!14372 = distinct !DILexicalBlock(scope: !14339, file: !913, line: 692, column: 25)
!14373 = !DILocation(line: 692, column: 25, scope: !14372)
!14374 = !DILocation(line: 693, column: 36, scope: !14339)
!14375 = !DILocation(line: 693, column: 38, scope: !14339)
!14376 = !DILocation(line: 693, column: 33, scope: !14339)
!14377 = !DILocation(line: 693, column: 29, scope: !14339)
!14378 = !DILocation(line: 693, column: 27, scope: !14339)
!14379 = !DILocation(line: 694, column: 23, scope: !14339)
!14380 = !DILocation(line: 695, column: 30, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14331, file: !913, line: 695, column: 30)
!14382 = !DILocation(line: 695, column: 30, scope: !14331)
!14383 = !DILocation(line: 697, column: 25, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14381, file: !913, line: 696, column: 23)
!14385 = !DILocation(line: 697, column: 25, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !913, line: 697, column: 25)
!14387 = distinct !DILexicalBlock(scope: !14384, file: !913, line: 697, column: 25)
!14388 = !DILocation(line: 697, column: 25, scope: !14387)
!14389 = !DILocation(line: 698, column: 40, scope: !14384)
!14390 = !DILocation(line: 699, column: 23, scope: !14384)
!14391 = !DILocation(line: 700, column: 25, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14332, file: !913, line: 700, column: 25)
!14393 = !DILocation(line: 700, column: 33, scope: !14392)
!14394 = !DILocation(line: 700, column: 35, scope: !14392)
!14395 = !DILocation(line: 700, column: 30, scope: !14392)
!14396 = !DILocation(line: 700, column: 25, scope: !14332)
!14397 = !DILocation(line: 701, column: 23, scope: !14392)
!14398 = !DILocation(line: 702, column: 21, scope: !14332)
!14399 = !DILocation(line: 702, column: 21, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14401, file: !913, line: 702, column: 21)
!14401 = distinct !DILexicalBlock(scope: !14332, file: !913, line: 702, column: 21)
!14402 = !DILocation(line: 702, column: 21, scope: !14401)
!14403 = !DILocation(line: 702, column: 21, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14400, file: !913, line: 702, column: 21)
!14405 = !DILocation(line: 702, column: 21, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !913, line: 702, column: 21)
!14407 = distinct !DILexicalBlock(scope: !14404, file: !913, line: 702, column: 21)
!14408 = !DILocation(line: 702, column: 21, scope: !14407)
!14409 = !DILocation(line: 702, column: 21, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14411, file: !913, line: 702, column: 21)
!14411 = distinct !DILexicalBlock(scope: !14404, file: !913, line: 702, column: 21)
!14412 = !DILocation(line: 702, column: 21, scope: !14411)
!14413 = !DILocation(line: 703, column: 21, scope: !14332)
!14414 = !DILocation(line: 703, column: 21, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !913, line: 703, column: 21)
!14416 = distinct !DILexicalBlock(scope: !14332, file: !913, line: 703, column: 21)
!14417 = !DILocation(line: 703, column: 21, scope: !14416)
!14418 = !DILocation(line: 704, column: 25, scope: !14332)
!14419 = !DILocation(line: 704, column: 29, scope: !14332)
!14420 = !DILocation(line: 704, column: 23, scope: !14332)
!14421 = !DILocation(line: 686, column: 17, scope: !14333)
!14422 = distinct !{!14422, !14423, !14424}
!14423 = !DILocation(line: 686, column: 17, scope: !14334)
!14424 = !DILocation(line: 705, column: 19, scope: !14334)
!14425 = !DILocation(line: 707, column: 17, scope: !14324)
!14426 = !DILocation(line: 710, column: 9, scope: !13940)
!14427 = !DILocation(line: 712, column: 16, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 712, column: 11)
!14429 = !DILocation(line: 712, column: 34, scope: !14428)
!14430 = !DILocation(line: 712, column: 37, scope: !14428)
!14431 = !DILocation(line: 712, column: 51, scope: !14428)
!14432 = !DILocation(line: 713, column: 15, scope: !14428)
!14433 = !DILocation(line: 713, column: 18, scope: !14428)
!14434 = !DILocation(line: 714, column: 14, scope: !14428)
!14435 = !DILocation(line: 714, column: 17, scope: !14428)
!14436 = !DILocation(line: 715, column: 14, scope: !14428)
!14437 = !DILocation(line: 715, column: 17, scope: !14428)
!14438 = !DILocation(line: 715, column: 33, scope: !14428)
!14439 = !DILocation(line: 715, column: 35, scope: !14428)
!14440 = !DILocation(line: 715, column: 51, scope: !14428)
!14441 = !DILocation(line: 715, column: 53, scope: !14428)
!14442 = !DILocation(line: 715, column: 47, scope: !14428)
!14443 = !DILocation(line: 715, column: 65, scope: !14428)
!14444 = !DILocation(line: 716, column: 11, scope: !14428)
!14445 = !DILocation(line: 716, column: 15, scope: !14428)
!14446 = !DILocation(line: 712, column: 11, scope: !13886)
!14447 = !DILocation(line: 717, column: 9, scope: !14428)
!14448 = !DILabel(scope: !13886, name: "store_escape", file: !913, line: 719)
!14449 = !DILocation(line: 719, column: 5, scope: !13886)
!14450 = !DILocation(line: 720, column: 7, scope: !13886)
!14451 = !DILocation(line: 720, column: 7, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14453, file: !913, line: 720, column: 7)
!14453 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 720, column: 7)
!14454 = !DILocation(line: 720, column: 7, scope: !14453)
!14455 = !DILocation(line: 720, column: 7, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14453, file: !913, line: 720, column: 7)
!14457 = !DILocation(line: 720, column: 7, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14456, file: !913, line: 720, column: 7)
!14459 = !DILocation(line: 720, column: 7, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !913, line: 720, column: 7)
!14461 = distinct !DILexicalBlock(scope: !14458, file: !913, line: 720, column: 7)
!14462 = !DILocation(line: 720, column: 7, scope: !14461)
!14463 = !DILocation(line: 720, column: 7, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !913, line: 720, column: 7)
!14465 = distinct !DILexicalBlock(scope: !14458, file: !913, line: 720, column: 7)
!14466 = !DILocation(line: 720, column: 7, scope: !14465)
!14467 = !DILocation(line: 720, column: 7, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14469, file: !913, line: 720, column: 7)
!14469 = distinct !DILexicalBlock(scope: !14458, file: !913, line: 720, column: 7)
!14470 = !DILocation(line: 720, column: 7, scope: !14469)
!14471 = !DILocation(line: 720, column: 7, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14473, file: !913, line: 720, column: 7)
!14473 = distinct !DILexicalBlock(scope: !14453, file: !913, line: 720, column: 7)
!14474 = !DILocation(line: 720, column: 7, scope: !14473)
!14475 = !DILabel(scope: !13886, name: "store_c", file: !913, line: 722)
!14476 = !DILocation(line: 722, column: 5, scope: !13886)
!14477 = !DILocation(line: 723, column: 7, scope: !13886)
!14478 = !DILocation(line: 723, column: 7, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !913, line: 723, column: 7)
!14480 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 723, column: 7)
!14481 = !DILocation(line: 723, column: 7, scope: !14480)
!14482 = !DILocation(line: 723, column: 7, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14479, file: !913, line: 723, column: 7)
!14484 = !DILocation(line: 723, column: 7, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14486, file: !913, line: 723, column: 7)
!14486 = distinct !DILexicalBlock(scope: !14483, file: !913, line: 723, column: 7)
!14487 = !DILocation(line: 723, column: 7, scope: !14486)
!14488 = !DILocation(line: 723, column: 7, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14490, file: !913, line: 723, column: 7)
!14490 = distinct !DILexicalBlock(scope: !14483, file: !913, line: 723, column: 7)
!14491 = !DILocation(line: 723, column: 7, scope: !14490)
!14492 = !DILocation(line: 724, column: 7, scope: !13886)
!14493 = !DILocation(line: 724, column: 7, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !913, line: 724, column: 7)
!14495 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 724, column: 7)
!14496 = !DILocation(line: 724, column: 7, scope: !14495)
!14497 = !DILocation(line: 726, column: 13, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !13886, file: !913, line: 726, column: 11)
!14499 = !DILocation(line: 726, column: 11, scope: !13886)
!14500 = !DILocation(line: 727, column: 38, scope: !14498)
!14501 = !DILocation(line: 727, column: 9, scope: !14498)
!14502 = !DILocation(line: 728, column: 5, scope: !13886)
!14503 = !DILocation(line: 400, column: 75, scope: !13875)
!14504 = !DILocation(line: 400, column: 3, scope: !13875)
!14505 = distinct !{!14505, !13884, !14506}
!14506 = !DILocation(line: 728, column: 5, scope: !13872)
!14507 = !DILocation(line: 730, column: 7, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 730, column: 7)
!14509 = !DILocation(line: 730, column: 11, scope: !14508)
!14510 = !DILocation(line: 730, column: 16, scope: !14508)
!14511 = !DILocation(line: 730, column: 19, scope: !14508)
!14512 = !DILocation(line: 730, column: 33, scope: !14508)
!14513 = !DILocation(line: 731, column: 7, scope: !14508)
!14514 = !DILocation(line: 731, column: 10, scope: !14508)
!14515 = !DILocation(line: 730, column: 7, scope: !13734)
!14516 = !DILocation(line: 732, column: 5, scope: !14508)
!14517 = !DILocation(line: 738, column: 7, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 738, column: 7)
!14519 = !DILocation(line: 738, column: 21, scope: !14518)
!14520 = !DILocation(line: 738, column: 51, scope: !14518)
!14521 = !DILocation(line: 738, column: 56, scope: !14518)
!14522 = !DILocation(line: 739, column: 7, scope: !14518)
!14523 = !DILocation(line: 739, column: 10, scope: !14518)
!14524 = !DILocation(line: 738, column: 7, scope: !13734)
!14525 = !DILocation(line: 741, column: 11, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14527, file: !913, line: 741, column: 11)
!14527 = distinct !DILexicalBlock(scope: !14518, file: !913, line: 740, column: 5)
!14528 = !DILocation(line: 741, column: 11, scope: !14527)
!14529 = !DILocation(line: 742, column: 42, scope: !14526)
!14530 = !DILocation(line: 742, column: 50, scope: !14526)
!14531 = !DILocation(line: 742, column: 67, scope: !14526)
!14532 = !DILocation(line: 742, column: 72, scope: !14526)
!14533 = !DILocation(line: 744, column: 42, scope: !14526)
!14534 = !DILocation(line: 744, column: 49, scope: !14526)
!14535 = !DILocation(line: 745, column: 42, scope: !14526)
!14536 = !DILocation(line: 745, column: 54, scope: !14526)
!14537 = !DILocation(line: 742, column: 16, scope: !14526)
!14538 = !DILocation(line: 742, column: 9, scope: !14526)
!14539 = !DILocation(line: 746, column: 18, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14526, file: !913, line: 746, column: 16)
!14541 = !DILocation(line: 746, column: 29, scope: !14540)
!14542 = !DILocation(line: 746, column: 32, scope: !14540)
!14543 = !DILocation(line: 746, column: 16, scope: !14526)
!14544 = !DILocation(line: 749, column: 24, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14540, file: !913, line: 747, column: 9)
!14546 = !DILocation(line: 749, column: 22, scope: !14545)
!14547 = !DILocation(line: 750, column: 15, scope: !14545)
!14548 = !DILocation(line: 751, column: 11, scope: !14545)
!14549 = !DILocation(line: 753, column: 5, scope: !14527)
!14550 = !DILocation(line: 755, column: 7, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 755, column: 7)
!14552 = !DILocation(line: 755, column: 20, scope: !14551)
!14553 = !DILocation(line: 755, column: 24, scope: !14551)
!14554 = !DILocation(line: 755, column: 7, scope: !13734)
!14555 = !DILocation(line: 756, column: 5, scope: !14551)
!14556 = !DILocation(line: 756, column: 13, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !913, line: 756, column: 5)
!14558 = distinct !DILexicalBlock(scope: !14551, file: !913, line: 756, column: 5)
!14559 = !DILocation(line: 756, column: 12, scope: !14557)
!14560 = !DILocation(line: 756, column: 5, scope: !14558)
!14561 = !DILocation(line: 757, column: 7, scope: !14557)
!14562 = !DILocation(line: 757, column: 7, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14564, file: !913, line: 757, column: 7)
!14564 = distinct !DILexicalBlock(scope: !14557, file: !913, line: 757, column: 7)
!14565 = !DILocation(line: 757, column: 7, scope: !14564)
!14566 = !DILocation(line: 756, column: 39, scope: !14557)
!14567 = !DILocation(line: 756, column: 5, scope: !14557)
!14568 = distinct !{!14568, !14560, !14569}
!14569 = !DILocation(line: 757, column: 7, scope: !14558)
!14570 = !DILocation(line: 759, column: 7, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 759, column: 7)
!14572 = !DILocation(line: 759, column: 13, scope: !14571)
!14573 = !DILocation(line: 759, column: 11, scope: !14571)
!14574 = !DILocation(line: 759, column: 7, scope: !13734)
!14575 = !DILocation(line: 760, column: 5, scope: !14571)
!14576 = !DILocation(line: 760, column: 12, scope: !14571)
!14577 = !DILocation(line: 760, column: 17, scope: !14571)
!14578 = !DILocation(line: 761, column: 10, scope: !13734)
!14579 = !DILocation(line: 761, column: 3, scope: !13734)
!14580 = !DILabel(scope: !13734, name: "force_outer_quoting_style", file: !913, line: 763)
!14581 = !DILocation(line: 763, column: 2, scope: !13734)
!14582 = !DILocation(line: 766, column: 7, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !13734, file: !913, line: 766, column: 7)
!14584 = !DILocation(line: 766, column: 21, scope: !14583)
!14585 = !DILocation(line: 766, column: 51, scope: !14583)
!14586 = !DILocation(line: 766, column: 54, scope: !14583)
!14587 = !DILocation(line: 766, column: 7, scope: !13734)
!14588 = !DILocation(line: 767, column: 19, scope: !14583)
!14589 = !DILocation(line: 767, column: 5, scope: !14583)
!14590 = !DILocation(line: 768, column: 36, scope: !13734)
!14591 = !DILocation(line: 768, column: 44, scope: !13734)
!14592 = !DILocation(line: 768, column: 56, scope: !13734)
!14593 = !DILocation(line: 768, column: 61, scope: !13734)
!14594 = !DILocation(line: 769, column: 36, scope: !13734)
!14595 = !DILocation(line: 770, column: 36, scope: !13734)
!14596 = !DILocation(line: 770, column: 42, scope: !13734)
!14597 = !DILocation(line: 771, column: 36, scope: !13734)
!14598 = !DILocation(line: 771, column: 48, scope: !13734)
!14599 = !DILocation(line: 768, column: 10, scope: !13734)
!14600 = !DILocation(line: 768, column: 3, scope: !13734)
!14601 = !DILocation(line: 772, column: 1, scope: !13734)
!14602 = distinct !DISubprogram(name: "gettext_quote", scope: !913, file: !913, line: 207, type: !14603, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{!183, !183, !893}
!14605 = !DILocalVariable(name: "msgid", arg: 1, scope: !14602, file: !913, line: 207, type: !183)
!14606 = !DILocation(line: 207, column: 28, scope: !14602)
!14607 = !DILocalVariable(name: "s", arg: 2, scope: !14602, file: !913, line: 207, type: !893)
!14608 = !DILocation(line: 207, column: 54, scope: !14602)
!14609 = !DILocalVariable(name: "translation", scope: !14602, file: !913, line: 209, type: !183)
!14610 = !DILocation(line: 209, column: 15, scope: !14602)
!14611 = !DILocation(line: 209, column: 29, scope: !14602)
!14612 = !DILocalVariable(name: "locale_code", scope: !14602, file: !913, line: 210, type: !183)
!14613 = !DILocation(line: 210, column: 15, scope: !14602)
!14614 = !DILocation(line: 212, column: 7, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14602, file: !913, line: 212, column: 7)
!14616 = !DILocation(line: 212, column: 22, scope: !14615)
!14617 = !DILocation(line: 212, column: 19, scope: !14615)
!14618 = !DILocation(line: 212, column: 7, scope: !14602)
!14619 = !DILocation(line: 213, column: 12, scope: !14615)
!14620 = !DILocation(line: 213, column: 5, scope: !14615)
!14621 = !DILocation(line: 233, column: 17, scope: !14602)
!14622 = !DILocation(line: 233, column: 15, scope: !14602)
!14623 = !DILocation(line: 234, column: 7, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14602, file: !913, line: 234, column: 7)
!14625 = !DILocation(line: 234, column: 7, scope: !14602)
!14626 = !DILocation(line: 235, column: 12, scope: !14624)
!14627 = !DILocation(line: 235, column: 21, scope: !14624)
!14628 = !DILocation(line: 235, column: 5, scope: !14624)
!14629 = !DILocation(line: 236, column: 7, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14602, file: !913, line: 236, column: 7)
!14631 = !DILocation(line: 236, column: 7, scope: !14602)
!14632 = !DILocation(line: 237, column: 12, scope: !14630)
!14633 = !DILocation(line: 237, column: 21, scope: !14630)
!14634 = !DILocation(line: 237, column: 5, scope: !14630)
!14635 = !DILocation(line: 239, column: 11, scope: !14602)
!14636 = !DILocation(line: 239, column: 13, scope: !14602)
!14637 = !DILocation(line: 239, column: 3, scope: !14602)
!14638 = !DILocation(line: 240, column: 1, scope: !14602)
!14639 = distinct !DISubprogram(name: "quotearg_alloc", scope: !913, file: !913, line: 799, type: !14640, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14640 = !DISubroutineType(types: !14641)
!14641 = !{!9, !183, !55, !922}
!14642 = !DILocalVariable(name: "arg", arg: 1, scope: !14639, file: !913, line: 799, type: !183)
!14643 = !DILocation(line: 799, column: 29, scope: !14639)
!14644 = !DILocalVariable(name: "argsize", arg: 2, scope: !14639, file: !913, line: 799, type: !55)
!14645 = !DILocation(line: 799, column: 41, scope: !14639)
!14646 = !DILocalVariable(name: "o", arg: 3, scope: !14639, file: !913, line: 800, type: !922)
!14647 = !DILocation(line: 800, column: 47, scope: !14639)
!14648 = !DILocation(line: 802, column: 30, scope: !14639)
!14649 = !DILocation(line: 802, column: 35, scope: !14639)
!14650 = !DILocation(line: 802, column: 50, scope: !14639)
!14651 = !DILocation(line: 802, column: 10, scope: !14639)
!14652 = !DILocation(line: 802, column: 3, scope: !14639)
!14653 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !913, file: !913, line: 812, type: !14654, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{!9, !183, !55, !9454, !922}
!14656 = !DILocalVariable(name: "arg", arg: 1, scope: !14653, file: !913, line: 812, type: !183)
!14657 = !DILocation(line: 812, column: 33, scope: !14653)
!14658 = !DILocalVariable(name: "argsize", arg: 2, scope: !14653, file: !913, line: 812, type: !55)
!14659 = !DILocation(line: 812, column: 45, scope: !14653)
!14660 = !DILocalVariable(name: "size", arg: 3, scope: !14653, file: !913, line: 812, type: !9454)
!14661 = !DILocation(line: 812, column: 62, scope: !14653)
!14662 = !DILocalVariable(name: "o", arg: 4, scope: !14653, file: !913, line: 813, type: !922)
!14663 = !DILocation(line: 813, column: 51, scope: !14653)
!14664 = !DILocalVariable(name: "p", scope: !14653, file: !913, line: 815, type: !922)
!14665 = !DILocation(line: 815, column: 33, scope: !14653)
!14666 = !DILocation(line: 815, column: 37, scope: !14653)
!14667 = !DILocation(line: 815, column: 41, scope: !14653)
!14668 = !DILocalVariable(name: "e", scope: !14653, file: !913, line: 816, type: !7)
!14669 = !DILocation(line: 816, column: 7, scope: !14653)
!14670 = !DILocation(line: 816, column: 11, scope: !14653)
!14671 = !DILocalVariable(name: "flags", scope: !14653, file: !913, line: 818, type: !7)
!14672 = !DILocation(line: 818, column: 7, scope: !14653)
!14673 = !DILocation(line: 818, column: 15, scope: !14653)
!14674 = !DILocation(line: 818, column: 18, scope: !14653)
!14675 = !DILocation(line: 818, column: 27, scope: !14653)
!14676 = !DILocation(line: 818, column: 24, scope: !14653)
!14677 = !DILocalVariable(name: "bufsize", scope: !14653, file: !913, line: 819, type: !55)
!14678 = !DILocation(line: 819, column: 10, scope: !14653)
!14679 = !DILocation(line: 819, column: 52, scope: !14653)
!14680 = !DILocation(line: 819, column: 57, scope: !14653)
!14681 = !DILocation(line: 819, column: 66, scope: !14653)
!14682 = !DILocation(line: 819, column: 69, scope: !14653)
!14683 = !DILocation(line: 820, column: 46, scope: !14653)
!14684 = !DILocation(line: 820, column: 53, scope: !14653)
!14685 = !DILocation(line: 820, column: 56, scope: !14653)
!14686 = !DILocation(line: 821, column: 46, scope: !14653)
!14687 = !DILocation(line: 821, column: 49, scope: !14653)
!14688 = !DILocation(line: 822, column: 46, scope: !14653)
!14689 = !DILocation(line: 822, column: 49, scope: !14653)
!14690 = !DILocation(line: 819, column: 20, scope: !14653)
!14691 = !DILocation(line: 822, column: 62, scope: !14653)
!14692 = !DILocalVariable(name: "buf", scope: !14653, file: !913, line: 823, type: !9)
!14693 = !DILocation(line: 823, column: 9, scope: !14653)
!14694 = !DILocation(line: 823, column: 27, scope: !14653)
!14695 = !DILocation(line: 823, column: 15, scope: !14653)
!14696 = !DILocation(line: 824, column: 29, scope: !14653)
!14697 = !DILocation(line: 824, column: 34, scope: !14653)
!14698 = !DILocation(line: 824, column: 43, scope: !14653)
!14699 = !DILocation(line: 824, column: 48, scope: !14653)
!14700 = !DILocation(line: 824, column: 57, scope: !14653)
!14701 = !DILocation(line: 824, column: 60, scope: !14653)
!14702 = !DILocation(line: 824, column: 67, scope: !14653)
!14703 = !DILocation(line: 825, column: 29, scope: !14653)
!14704 = !DILocation(line: 825, column: 32, scope: !14653)
!14705 = !DILocation(line: 826, column: 29, scope: !14653)
!14706 = !DILocation(line: 826, column: 32, scope: !14653)
!14707 = !DILocation(line: 826, column: 44, scope: !14653)
!14708 = !DILocation(line: 826, column: 47, scope: !14653)
!14709 = !DILocation(line: 824, column: 3, scope: !14653)
!14710 = !DILocation(line: 827, column: 11, scope: !14653)
!14711 = !DILocation(line: 827, column: 3, scope: !14653)
!14712 = !DILocation(line: 827, column: 9, scope: !14653)
!14713 = !DILocation(line: 828, column: 7, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14653, file: !913, line: 828, column: 7)
!14715 = !DILocation(line: 828, column: 7, scope: !14653)
!14716 = !DILocation(line: 829, column: 13, scope: !14714)
!14717 = !DILocation(line: 829, column: 21, scope: !14714)
!14718 = !DILocation(line: 829, column: 6, scope: !14714)
!14719 = !DILocation(line: 829, column: 11, scope: !14714)
!14720 = !DILocation(line: 829, column: 5, scope: !14714)
!14721 = !DILocation(line: 830, column: 10, scope: !14653)
!14722 = !DILocation(line: 830, column: 3, scope: !14653)
!14723 = distinct !DISubprogram(name: "quotearg_free", scope: !913, file: !913, line: 848, type: !692, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14724 = !DILocalVariable(name: "sv", scope: !14723, file: !913, line: 850, type: !925)
!14725 = !DILocation(line: 850, column: 19, scope: !14723)
!14726 = !DILocation(line: 850, column: 24, scope: !14723)
!14727 = !DILocalVariable(name: "i", scope: !14723, file: !913, line: 851, type: !7)
!14728 = !DILocation(line: 851, column: 7, scope: !14723)
!14729 = !DILocation(line: 852, column: 10, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14723, file: !913, line: 852, column: 3)
!14731 = !DILocation(line: 852, column: 8, scope: !14730)
!14732 = !DILocation(line: 852, column: 15, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14730, file: !913, line: 852, column: 3)
!14734 = !DILocation(line: 852, column: 19, scope: !14733)
!14735 = !DILocation(line: 852, column: 17, scope: !14733)
!14736 = !DILocation(line: 852, column: 3, scope: !14730)
!14737 = !DILocation(line: 853, column: 11, scope: !14733)
!14738 = !DILocation(line: 853, column: 14, scope: !14733)
!14739 = !DILocation(line: 853, column: 17, scope: !14733)
!14740 = !DILocation(line: 853, column: 5, scope: !14733)
!14741 = !DILocation(line: 852, column: 28, scope: !14733)
!14742 = !DILocation(line: 852, column: 3, scope: !14733)
!14743 = distinct !{!14743, !14736, !14744}
!14744 = !DILocation(line: 853, column: 20, scope: !14730)
!14745 = !DILocation(line: 854, column: 7, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14723, file: !913, line: 854, column: 7)
!14747 = !DILocation(line: 854, column: 13, scope: !14746)
!14748 = !DILocation(line: 854, column: 17, scope: !14746)
!14749 = !DILocation(line: 854, column: 7, scope: !14723)
!14750 = !DILocation(line: 856, column: 13, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14746, file: !913, line: 855, column: 5)
!14752 = !DILocation(line: 856, column: 19, scope: !14751)
!14753 = !DILocation(line: 856, column: 7, scope: !14751)
!14754 = !DILocation(line: 857, column: 21, scope: !14751)
!14755 = !DILocation(line: 858, column: 20, scope: !14751)
!14756 = !DILocation(line: 859, column: 5, scope: !14751)
!14757 = !DILocation(line: 860, column: 7, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14723, file: !913, line: 860, column: 7)
!14759 = !DILocation(line: 860, column: 10, scope: !14758)
!14760 = !DILocation(line: 860, column: 7, scope: !14723)
!14761 = !DILocation(line: 862, column: 13, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14758, file: !913, line: 861, column: 5)
!14763 = !DILocation(line: 862, column: 7, scope: !14762)
!14764 = !DILocation(line: 863, column: 15, scope: !14762)
!14765 = !DILocation(line: 864, column: 5, scope: !14762)
!14766 = !DILocation(line: 865, column: 10, scope: !14723)
!14767 = !DILocation(line: 866, column: 1, scope: !14723)
!14768 = distinct !DISubprogram(name: "quotearg_n", scope: !913, file: !913, line: 931, type: !14769, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!9, !7, !183}
!14771 = !DILocalVariable(name: "n", arg: 1, scope: !14768, file: !913, line: 931, type: !7)
!14772 = !DILocation(line: 931, column: 17, scope: !14768)
!14773 = !DILocalVariable(name: "arg", arg: 2, scope: !14768, file: !913, line: 931, type: !183)
!14774 = !DILocation(line: 931, column: 32, scope: !14768)
!14775 = !DILocation(line: 933, column: 30, scope: !14768)
!14776 = !DILocation(line: 933, column: 33, scope: !14768)
!14777 = !DILocation(line: 933, column: 10, scope: !14768)
!14778 = !DILocation(line: 933, column: 3, scope: !14768)
!14779 = distinct !DISubprogram(name: "quotearg_n_options", scope: !913, file: !913, line: 877, type: !14780, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14780 = !DISubroutineType(types: !14781)
!14781 = !{!9, !7, !183, !55, !922}
!14782 = !DILocalVariable(name: "n", arg: 1, scope: !14779, file: !913, line: 877, type: !7)
!14783 = !DILocation(line: 877, column: 25, scope: !14779)
!14784 = !DILocalVariable(name: "arg", arg: 2, scope: !14779, file: !913, line: 877, type: !183)
!14785 = !DILocation(line: 877, column: 40, scope: !14779)
!14786 = !DILocalVariable(name: "argsize", arg: 3, scope: !14779, file: !913, line: 877, type: !55)
!14787 = !DILocation(line: 877, column: 52, scope: !14779)
!14788 = !DILocalVariable(name: "options", arg: 4, scope: !14779, file: !913, line: 878, type: !922)
!14789 = !DILocation(line: 878, column: 51, scope: !14779)
!14790 = !DILocalVariable(name: "e", scope: !14779, file: !913, line: 880, type: !7)
!14791 = !DILocation(line: 880, column: 7, scope: !14779)
!14792 = !DILocation(line: 880, column: 11, scope: !14779)
!14793 = !DILocalVariable(name: "sv", scope: !14779, file: !913, line: 882, type: !925)
!14794 = !DILocation(line: 882, column: 19, scope: !14779)
!14795 = !DILocation(line: 882, column: 24, scope: !14779)
!14796 = !DILocation(line: 884, column: 7, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14779, file: !913, line: 884, column: 7)
!14798 = !DILocation(line: 884, column: 9, scope: !14797)
!14799 = !DILocation(line: 884, column: 7, scope: !14779)
!14800 = !DILocation(line: 885, column: 5, scope: !14797)
!14801 = !DILocation(line: 887, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14779, file: !913, line: 887, column: 7)
!14803 = !DILocation(line: 887, column: 17, scope: !14802)
!14804 = !DILocation(line: 887, column: 14, scope: !14802)
!14805 = !DILocation(line: 887, column: 7, scope: !14779)
!14806 = !DILocalVariable(name: "preallocated", scope: !14807, file: !913, line: 889, type: !142)
!14807 = distinct !DILexicalBlock(scope: !14802, file: !913, line: 888, column: 5)
!14808 = !DILocation(line: 889, column: 12, scope: !14807)
!14809 = !DILocation(line: 889, column: 28, scope: !14807)
!14810 = !DILocation(line: 889, column: 31, scope: !14807)
!14811 = !DILocalVariable(name: "nmax", scope: !14807, file: !913, line: 890, type: !7)
!14812 = !DILocation(line: 890, column: 11, scope: !14807)
!14813 = !DILocation(line: 892, column: 11, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14807, file: !913, line: 892, column: 11)
!14815 = !DILocation(line: 892, column: 18, scope: !14814)
!14816 = !DILocation(line: 892, column: 16, scope: !14814)
!14817 = !DILocation(line: 892, column: 11, scope: !14807)
!14818 = !DILocation(line: 893, column: 9, scope: !14814)
!14819 = !DILocation(line: 895, column: 32, scope: !14807)
!14820 = !DILocation(line: 895, column: 54, scope: !14807)
!14821 = !DILocation(line: 895, column: 59, scope: !14807)
!14822 = !DILocation(line: 895, column: 61, scope: !14807)
!14823 = !DILocation(line: 895, column: 58, scope: !14807)
!14824 = !DILocation(line: 895, column: 66, scope: !14807)
!14825 = !DILocation(line: 895, column: 22, scope: !14807)
!14826 = !DILocation(line: 895, column: 20, scope: !14807)
!14827 = !DILocation(line: 895, column: 15, scope: !14807)
!14828 = !DILocation(line: 896, column: 11, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14807, file: !913, line: 896, column: 11)
!14830 = !DILocation(line: 896, column: 11, scope: !14807)
!14831 = !DILocation(line: 897, column: 10, scope: !14829)
!14832 = !DILocation(line: 897, column: 15, scope: !14829)
!14833 = !DILocation(line: 897, column: 9, scope: !14829)
!14834 = !DILocation(line: 898, column: 15, scope: !14807)
!14835 = !DILocation(line: 898, column: 20, scope: !14807)
!14836 = !DILocation(line: 898, column: 18, scope: !14807)
!14837 = !DILocation(line: 898, column: 7, scope: !14807)
!14838 = !DILocation(line: 898, column: 32, scope: !14807)
!14839 = !DILocation(line: 898, column: 34, scope: !14807)
!14840 = !DILocation(line: 898, column: 40, scope: !14807)
!14841 = !DILocation(line: 898, column: 38, scope: !14807)
!14842 = !DILocation(line: 898, column: 31, scope: !14807)
!14843 = !DILocation(line: 898, column: 48, scope: !14807)
!14844 = !DILocation(line: 899, column: 16, scope: !14807)
!14845 = !DILocation(line: 899, column: 18, scope: !14807)
!14846 = !DILocation(line: 899, column: 14, scope: !14807)
!14847 = !DILocation(line: 900, column: 5, scope: !14807)
!14848 = !DILocalVariable(name: "size", scope: !14849, file: !913, line: 903, type: !55)
!14849 = distinct !DILexicalBlock(scope: !14779, file: !913, line: 902, column: 3)
!14850 = !DILocation(line: 903, column: 12, scope: !14849)
!14851 = !DILocation(line: 903, column: 19, scope: !14849)
!14852 = !DILocation(line: 903, column: 22, scope: !14849)
!14853 = !DILocation(line: 903, column: 25, scope: !14849)
!14854 = !DILocalVariable(name: "val", scope: !14849, file: !913, line: 904, type: !9)
!14855 = !DILocation(line: 904, column: 11, scope: !14849)
!14856 = !DILocation(line: 904, column: 17, scope: !14849)
!14857 = !DILocation(line: 904, column: 20, scope: !14849)
!14858 = !DILocation(line: 904, column: 23, scope: !14849)
!14859 = !DILocalVariable(name: "flags", scope: !14849, file: !913, line: 906, type: !7)
!14860 = !DILocation(line: 906, column: 9, scope: !14849)
!14861 = !DILocation(line: 906, column: 17, scope: !14849)
!14862 = !DILocation(line: 906, column: 26, scope: !14849)
!14863 = !DILocation(line: 906, column: 32, scope: !14849)
!14864 = !DILocalVariable(name: "qsize", scope: !14849, file: !913, line: 907, type: !55)
!14865 = !DILocation(line: 907, column: 12, scope: !14849)
!14866 = !DILocation(line: 907, column: 46, scope: !14849)
!14867 = !DILocation(line: 907, column: 51, scope: !14849)
!14868 = !DILocation(line: 907, column: 57, scope: !14849)
!14869 = !DILocation(line: 907, column: 62, scope: !14849)
!14870 = !DILocation(line: 908, column: 46, scope: !14849)
!14871 = !DILocation(line: 908, column: 55, scope: !14849)
!14872 = !DILocation(line: 908, column: 62, scope: !14849)
!14873 = !DILocation(line: 909, column: 46, scope: !14849)
!14874 = !DILocation(line: 909, column: 55, scope: !14849)
!14875 = !DILocation(line: 910, column: 46, scope: !14849)
!14876 = !DILocation(line: 910, column: 55, scope: !14849)
!14877 = !DILocation(line: 911, column: 46, scope: !14849)
!14878 = !DILocation(line: 911, column: 55, scope: !14849)
!14879 = !DILocation(line: 907, column: 20, scope: !14849)
!14880 = !DILocation(line: 913, column: 9, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14849, file: !913, line: 913, column: 9)
!14882 = !DILocation(line: 913, column: 17, scope: !14881)
!14883 = !DILocation(line: 913, column: 14, scope: !14881)
!14884 = !DILocation(line: 913, column: 9, scope: !14849)
!14885 = !DILocation(line: 915, column: 29, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14881, file: !913, line: 914, column: 7)
!14887 = !DILocation(line: 915, column: 35, scope: !14886)
!14888 = !DILocation(line: 915, column: 27, scope: !14886)
!14889 = !DILocation(line: 915, column: 9, scope: !14886)
!14890 = !DILocation(line: 915, column: 12, scope: !14886)
!14891 = !DILocation(line: 915, column: 15, scope: !14886)
!14892 = !DILocation(line: 915, column: 20, scope: !14886)
!14893 = !DILocation(line: 916, column: 13, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14886, file: !913, line: 916, column: 13)
!14895 = !DILocation(line: 916, column: 17, scope: !14894)
!14896 = !DILocation(line: 916, column: 13, scope: !14886)
!14897 = !DILocation(line: 917, column: 17, scope: !14894)
!14898 = !DILocation(line: 917, column: 11, scope: !14894)
!14899 = !DILocation(line: 918, column: 39, scope: !14886)
!14900 = !DILocation(line: 918, column: 27, scope: !14886)
!14901 = !DILocation(line: 918, column: 25, scope: !14886)
!14902 = !DILocation(line: 918, column: 9, scope: !14886)
!14903 = !DILocation(line: 918, column: 12, scope: !14886)
!14904 = !DILocation(line: 918, column: 15, scope: !14886)
!14905 = !DILocation(line: 918, column: 19, scope: !14886)
!14906 = !DILocation(line: 919, column: 35, scope: !14886)
!14907 = !DILocation(line: 919, column: 40, scope: !14886)
!14908 = !DILocation(line: 919, column: 46, scope: !14886)
!14909 = !DILocation(line: 919, column: 51, scope: !14886)
!14910 = !DILocation(line: 919, column: 60, scope: !14886)
!14911 = !DILocation(line: 919, column: 69, scope: !14886)
!14912 = !DILocation(line: 920, column: 35, scope: !14886)
!14913 = !DILocation(line: 920, column: 42, scope: !14886)
!14914 = !DILocation(line: 920, column: 51, scope: !14886)
!14915 = !DILocation(line: 921, column: 35, scope: !14886)
!14916 = !DILocation(line: 921, column: 44, scope: !14886)
!14917 = !DILocation(line: 922, column: 35, scope: !14886)
!14918 = !DILocation(line: 922, column: 44, scope: !14886)
!14919 = !DILocation(line: 919, column: 9, scope: !14886)
!14920 = !DILocation(line: 923, column: 7, scope: !14886)
!14921 = !DILocation(line: 925, column: 13, scope: !14849)
!14922 = !DILocation(line: 925, column: 5, scope: !14849)
!14923 = !DILocation(line: 925, column: 11, scope: !14849)
!14924 = !DILocation(line: 926, column: 12, scope: !14849)
!14925 = !DILocation(line: 926, column: 5, scope: !14849)
!14926 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !913, file: !913, line: 937, type: !14927, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14927 = !DISubroutineType(types: !14928)
!14928 = !{!9, !7, !183, !55}
!14929 = !DILocalVariable(name: "n", arg: 1, scope: !14926, file: !913, line: 937, type: !7)
!14930 = !DILocation(line: 937, column: 21, scope: !14926)
!14931 = !DILocalVariable(name: "arg", arg: 2, scope: !14926, file: !913, line: 937, type: !183)
!14932 = !DILocation(line: 937, column: 36, scope: !14926)
!14933 = !DILocalVariable(name: "argsize", arg: 3, scope: !14926, file: !913, line: 937, type: !55)
!14934 = !DILocation(line: 937, column: 48, scope: !14926)
!14935 = !DILocation(line: 939, column: 30, scope: !14926)
!14936 = !DILocation(line: 939, column: 33, scope: !14926)
!14937 = !DILocation(line: 939, column: 38, scope: !14926)
!14938 = !DILocation(line: 939, column: 10, scope: !14926)
!14939 = !DILocation(line: 939, column: 3, scope: !14926)
!14940 = distinct !DISubprogram(name: "quotearg", scope: !913, file: !913, line: 943, type: !2459, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14941 = !DILocalVariable(name: "arg", arg: 1, scope: !14940, file: !913, line: 943, type: !183)
!14942 = !DILocation(line: 943, column: 23, scope: !14940)
!14943 = !DILocation(line: 945, column: 25, scope: !14940)
!14944 = !DILocation(line: 945, column: 10, scope: !14940)
!14945 = !DILocation(line: 945, column: 3, scope: !14940)
!14946 = distinct !DISubprogram(name: "quotearg_mem", scope: !913, file: !913, line: 949, type: !8910, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14947 = !DILocalVariable(name: "arg", arg: 1, scope: !14946, file: !913, line: 949, type: !183)
!14948 = !DILocation(line: 949, column: 27, scope: !14946)
!14949 = !DILocalVariable(name: "argsize", arg: 2, scope: !14946, file: !913, line: 949, type: !55)
!14950 = !DILocation(line: 949, column: 39, scope: !14946)
!14951 = !DILocation(line: 951, column: 29, scope: !14946)
!14952 = !DILocation(line: 951, column: 34, scope: !14946)
!14953 = !DILocation(line: 951, column: 10, scope: !14946)
!14954 = !DILocation(line: 951, column: 3, scope: !14946)
!14955 = distinct !DISubprogram(name: "quotearg_n_style", scope: !913, file: !913, line: 955, type: !14956, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14956 = !DISubroutineType(types: !14957)
!14957 = !{!9, !7, !893, !183}
!14958 = !DILocalVariable(name: "n", arg: 1, scope: !14955, file: !913, line: 955, type: !7)
!14959 = !DILocation(line: 955, column: 23, scope: !14955)
!14960 = !DILocalVariable(name: "s", arg: 2, scope: !14955, file: !913, line: 955, type: !893)
!14961 = !DILocation(line: 955, column: 45, scope: !14955)
!14962 = !DILocalVariable(name: "arg", arg: 3, scope: !14955, file: !913, line: 955, type: !183)
!14963 = !DILocation(line: 955, column: 60, scope: !14955)
!14964 = !DILocalVariable(name: "o", scope: !14955, file: !913, line: 957, type: !923)
!14965 = !DILocation(line: 957, column: 32, scope: !14955)
!14966 = !DILocation(line: 957, column: 64, scope: !14955)
!14967 = !DILocation(line: 957, column: 36, scope: !14955)
!14968 = !DILocation(line: 958, column: 30, scope: !14955)
!14969 = !DILocation(line: 958, column: 33, scope: !14955)
!14970 = !DILocation(line: 958, column: 10, scope: !14955)
!14971 = !DILocation(line: 958, column: 3, scope: !14955)
!14972 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !913, file: !913, line: 193, type: !14973, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!912, !893}
!14975 = !DILocalVariable(name: "style", arg: 1, scope: !14972, file: !913, line: 193, type: !893)
!14976 = !DILocation(line: 193, column: 48, scope: !14972)
!14977 = !DILocalVariable(name: "o", scope: !14972, file: !913, line: 195, type: !912)
!14978 = !DILocation(line: 195, column: 26, scope: !14972)
!14979 = !DILocation(line: 196, column: 7, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14972, file: !913, line: 196, column: 7)
!14981 = !DILocation(line: 196, column: 13, scope: !14980)
!14982 = !DILocation(line: 196, column: 7, scope: !14972)
!14983 = !DILocation(line: 197, column: 5, scope: !14980)
!14984 = !DILocation(line: 198, column: 13, scope: !14972)
!14985 = !DILocation(line: 198, column: 5, scope: !14972)
!14986 = !DILocation(line: 198, column: 11, scope: !14972)
!14987 = !DILocation(line: 199, column: 3, scope: !14972)
!14988 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !913, file: !913, line: 962, type: !14989, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!9, !7, !893, !183, !55}
!14991 = !DILocalVariable(name: "n", arg: 1, scope: !14988, file: !913, line: 962, type: !7)
!14992 = !DILocation(line: 962, column: 27, scope: !14988)
!14993 = !DILocalVariable(name: "s", arg: 2, scope: !14988, file: !913, line: 962, type: !893)
!14994 = !DILocation(line: 962, column: 49, scope: !14988)
!14995 = !DILocalVariable(name: "arg", arg: 3, scope: !14988, file: !913, line: 963, type: !183)
!14996 = !DILocation(line: 963, column: 35, scope: !14988)
!14997 = !DILocalVariable(name: "argsize", arg: 4, scope: !14988, file: !913, line: 963, type: !55)
!14998 = !DILocation(line: 963, column: 47, scope: !14988)
!14999 = !DILocalVariable(name: "o", scope: !14988, file: !913, line: 965, type: !923)
!15000 = !DILocation(line: 965, column: 32, scope: !14988)
!15001 = !DILocation(line: 965, column: 64, scope: !14988)
!15002 = !DILocation(line: 965, column: 36, scope: !14988)
!15003 = !DILocation(line: 966, column: 30, scope: !14988)
!15004 = !DILocation(line: 966, column: 33, scope: !14988)
!15005 = !DILocation(line: 966, column: 38, scope: !14988)
!15006 = !DILocation(line: 966, column: 10, scope: !14988)
!15007 = !DILocation(line: 966, column: 3, scope: !14988)
!15008 = distinct !DISubprogram(name: "quotearg_style", scope: !913, file: !913, line: 970, type: !15009, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15009 = !DISubroutineType(types: !15010)
!15010 = !{!9, !893, !183}
!15011 = !DILocalVariable(name: "s", arg: 1, scope: !15008, file: !913, line: 970, type: !893)
!15012 = !DILocation(line: 970, column: 36, scope: !15008)
!15013 = !DILocalVariable(name: "arg", arg: 2, scope: !15008, file: !913, line: 970, type: !183)
!15014 = !DILocation(line: 970, column: 51, scope: !15008)
!15015 = !DILocation(line: 972, column: 31, scope: !15008)
!15016 = !DILocation(line: 972, column: 34, scope: !15008)
!15017 = !DILocation(line: 972, column: 10, scope: !15008)
!15018 = !DILocation(line: 972, column: 3, scope: !15008)
!15019 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !913, file: !913, line: 976, type: !15020, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15020 = !DISubroutineType(types: !15021)
!15021 = !{!9, !893, !183, !55}
!15022 = !DILocalVariable(name: "s", arg: 1, scope: !15019, file: !913, line: 976, type: !893)
!15023 = !DILocation(line: 976, column: 40, scope: !15019)
!15024 = !DILocalVariable(name: "arg", arg: 2, scope: !15019, file: !913, line: 976, type: !183)
!15025 = !DILocation(line: 976, column: 55, scope: !15019)
!15026 = !DILocalVariable(name: "argsize", arg: 3, scope: !15019, file: !913, line: 976, type: !55)
!15027 = !DILocation(line: 976, column: 67, scope: !15019)
!15028 = !DILocation(line: 978, column: 35, scope: !15019)
!15029 = !DILocation(line: 978, column: 38, scope: !15019)
!15030 = !DILocation(line: 978, column: 43, scope: !15019)
!15031 = !DILocation(line: 978, column: 10, scope: !15019)
!15032 = !DILocation(line: 978, column: 3, scope: !15019)
!15033 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !913, file: !913, line: 982, type: !15034, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15034 = !DISubroutineType(types: !15035)
!15035 = !{!9, !183, !55, !10}
!15036 = !DILocalVariable(name: "arg", arg: 1, scope: !15033, file: !913, line: 982, type: !183)
!15037 = !DILocation(line: 982, column: 32, scope: !15033)
!15038 = !DILocalVariable(name: "argsize", arg: 2, scope: !15033, file: !913, line: 982, type: !55)
!15039 = !DILocation(line: 982, column: 44, scope: !15033)
!15040 = !DILocalVariable(name: "ch", arg: 3, scope: !15033, file: !913, line: 982, type: !10)
!15041 = !DILocation(line: 982, column: 58, scope: !15033)
!15042 = !DILocalVariable(name: "options", scope: !15033, file: !913, line: 984, type: !912)
!15043 = !DILocation(line: 984, column: 26, scope: !15033)
!15044 = !DILocation(line: 985, column: 13, scope: !15033)
!15045 = !DILocation(line: 986, column: 31, scope: !15033)
!15046 = !DILocation(line: 986, column: 3, scope: !15033)
!15047 = !DILocation(line: 987, column: 33, scope: !15033)
!15048 = !DILocation(line: 987, column: 38, scope: !15033)
!15049 = !DILocation(line: 987, column: 10, scope: !15033)
!15050 = !DILocation(line: 987, column: 3, scope: !15033)
!15051 = distinct !DISubprogram(name: "quotearg_char", scope: !913, file: !913, line: 991, type: !15052, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15052 = !DISubroutineType(types: !15053)
!15053 = !{!9, !183, !10}
!15054 = !DILocalVariable(name: "arg", arg: 1, scope: !15051, file: !913, line: 991, type: !183)
!15055 = !DILocation(line: 991, column: 28, scope: !15051)
!15056 = !DILocalVariable(name: "ch", arg: 2, scope: !15051, file: !913, line: 991, type: !10)
!15057 = !DILocation(line: 991, column: 38, scope: !15051)
!15058 = !DILocation(line: 993, column: 29, scope: !15051)
!15059 = !DILocation(line: 993, column: 44, scope: !15051)
!15060 = !DILocation(line: 993, column: 10, scope: !15051)
!15061 = !DILocation(line: 993, column: 3, scope: !15051)
!15062 = distinct !DISubprogram(name: "quotearg_colon", scope: !913, file: !913, line: 997, type: !2459, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15063 = !DILocalVariable(name: "arg", arg: 1, scope: !15062, file: !913, line: 997, type: !183)
!15064 = !DILocation(line: 997, column: 29, scope: !15062)
!15065 = !DILocation(line: 999, column: 25, scope: !15062)
!15066 = !DILocation(line: 999, column: 10, scope: !15062)
!15067 = !DILocation(line: 999, column: 3, scope: !15062)
!15068 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !913, file: !913, line: 1003, type: !8910, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15069 = !DILocalVariable(name: "arg", arg: 1, scope: !15068, file: !913, line: 1003, type: !183)
!15070 = !DILocation(line: 1003, column: 33, scope: !15068)
!15071 = !DILocalVariable(name: "argsize", arg: 2, scope: !15068, file: !913, line: 1003, type: !55)
!15072 = !DILocation(line: 1003, column: 45, scope: !15068)
!15073 = !DILocation(line: 1005, column: 29, scope: !15068)
!15074 = !DILocation(line: 1005, column: 34, scope: !15068)
!15075 = !DILocation(line: 1005, column: 10, scope: !15068)
!15076 = !DILocation(line: 1005, column: 3, scope: !15068)
!15077 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !913, file: !913, line: 1009, type: !14956, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15078 = !DILocalVariable(name: "n", arg: 1, scope: !15077, file: !913, line: 1009, type: !7)
!15079 = !DILocation(line: 1009, column: 29, scope: !15077)
!15080 = !DILocalVariable(name: "s", arg: 2, scope: !15077, file: !913, line: 1009, type: !893)
!15081 = !DILocation(line: 1009, column: 51, scope: !15077)
!15082 = !DILocalVariable(name: "arg", arg: 3, scope: !15077, file: !913, line: 1009, type: !183)
!15083 = !DILocation(line: 1009, column: 66, scope: !15077)
!15084 = !DILocalVariable(name: "options", scope: !15077, file: !913, line: 1011, type: !912)
!15085 = !DILocation(line: 1011, column: 26, scope: !15077)
!15086 = !DILocation(line: 1012, column: 41, scope: !15077)
!15087 = !DILocation(line: 1012, column: 13, scope: !15077)
!15088 = !DILocation(line: 1013, column: 3, scope: !15077)
!15089 = !DILocation(line: 1014, column: 30, scope: !15077)
!15090 = !DILocation(line: 1014, column: 33, scope: !15077)
!15091 = !DILocation(line: 1014, column: 10, scope: !15077)
!15092 = !DILocation(line: 1014, column: 3, scope: !15077)
!15093 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !913, file: !913, line: 1018, type: !15094, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{!9, !7, !183, !183, !183}
!15096 = !DILocalVariable(name: "n", arg: 1, scope: !15093, file: !913, line: 1018, type: !7)
!15097 = !DILocation(line: 1018, column: 24, scope: !15093)
!15098 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15093, file: !913, line: 1018, type: !183)
!15099 = !DILocation(line: 1018, column: 39, scope: !15093)
!15100 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15093, file: !913, line: 1019, type: !183)
!15101 = !DILocation(line: 1019, column: 32, scope: !15093)
!15102 = !DILocalVariable(name: "arg", arg: 4, scope: !15093, file: !913, line: 1019, type: !183)
!15103 = !DILocation(line: 1019, column: 57, scope: !15093)
!15104 = !DILocation(line: 1021, column: 33, scope: !15093)
!15105 = !DILocation(line: 1021, column: 36, scope: !15093)
!15106 = !DILocation(line: 1021, column: 48, scope: !15093)
!15107 = !DILocation(line: 1021, column: 61, scope: !15093)
!15108 = !DILocation(line: 1021, column: 10, scope: !15093)
!15109 = !DILocation(line: 1021, column: 3, scope: !15093)
!15110 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !913, file: !913, line: 1026, type: !15111, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!9, !7, !183, !183, !183, !55}
!15113 = !DILocalVariable(name: "n", arg: 1, scope: !15110, file: !913, line: 1026, type: !7)
!15114 = !DILocation(line: 1026, column: 28, scope: !15110)
!15115 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15110, file: !913, line: 1026, type: !183)
!15116 = !DILocation(line: 1026, column: 43, scope: !15110)
!15117 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15110, file: !913, line: 1027, type: !183)
!15118 = !DILocation(line: 1027, column: 36, scope: !15110)
!15119 = !DILocalVariable(name: "arg", arg: 4, scope: !15110, file: !913, line: 1028, type: !183)
!15120 = !DILocation(line: 1028, column: 36, scope: !15110)
!15121 = !DILocalVariable(name: "argsize", arg: 5, scope: !15110, file: !913, line: 1028, type: !55)
!15122 = !DILocation(line: 1028, column: 48, scope: !15110)
!15123 = !DILocalVariable(name: "o", scope: !15110, file: !913, line: 1030, type: !912)
!15124 = !DILocation(line: 1030, column: 26, scope: !15110)
!15125 = !DILocation(line: 1030, column: 30, scope: !15110)
!15126 = !DILocation(line: 1031, column: 27, scope: !15110)
!15127 = !DILocation(line: 1031, column: 39, scope: !15110)
!15128 = !DILocation(line: 1031, column: 3, scope: !15110)
!15129 = !DILocation(line: 1032, column: 30, scope: !15110)
!15130 = !DILocation(line: 1032, column: 33, scope: !15110)
!15131 = !DILocation(line: 1032, column: 38, scope: !15110)
!15132 = !DILocation(line: 1032, column: 10, scope: !15110)
!15133 = !DILocation(line: 1032, column: 3, scope: !15110)
!15134 = distinct !DISubprogram(name: "quotearg_custom", scope: !913, file: !913, line: 1036, type: !15135, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{!9, !183, !183, !183}
!15137 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15134, file: !913, line: 1036, type: !183)
!15138 = !DILocation(line: 1036, column: 30, scope: !15134)
!15139 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15134, file: !913, line: 1036, type: !183)
!15140 = !DILocation(line: 1036, column: 54, scope: !15134)
!15141 = !DILocalVariable(name: "arg", arg: 3, scope: !15134, file: !913, line: 1037, type: !183)
!15142 = !DILocation(line: 1037, column: 30, scope: !15134)
!15143 = !DILocation(line: 1039, column: 32, scope: !15134)
!15144 = !DILocation(line: 1039, column: 44, scope: !15134)
!15145 = !DILocation(line: 1039, column: 57, scope: !15134)
!15146 = !DILocation(line: 1039, column: 10, scope: !15134)
!15147 = !DILocation(line: 1039, column: 3, scope: !15134)
!15148 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !913, file: !913, line: 1043, type: !15149, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!9, !183, !183, !183, !55}
!15151 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15148, file: !913, line: 1043, type: !183)
!15152 = !DILocation(line: 1043, column: 34, scope: !15148)
!15153 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15148, file: !913, line: 1043, type: !183)
!15154 = !DILocation(line: 1043, column: 58, scope: !15148)
!15155 = !DILocalVariable(name: "arg", arg: 3, scope: !15148, file: !913, line: 1044, type: !183)
!15156 = !DILocation(line: 1044, column: 34, scope: !15148)
!15157 = !DILocalVariable(name: "argsize", arg: 4, scope: !15148, file: !913, line: 1044, type: !55)
!15158 = !DILocation(line: 1044, column: 46, scope: !15148)
!15159 = !DILocation(line: 1046, column: 36, scope: !15148)
!15160 = !DILocation(line: 1046, column: 48, scope: !15148)
!15161 = !DILocation(line: 1046, column: 61, scope: !15148)
!15162 = !DILocation(line: 1047, column: 33, scope: !15148)
!15163 = !DILocation(line: 1046, column: 10, scope: !15148)
!15164 = !DILocation(line: 1046, column: 3, scope: !15148)
!15165 = distinct !DISubprogram(name: "quote_n_mem", scope: !913, file: !913, line: 1061, type: !15166, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{!183, !7, !183, !55}
!15168 = !DILocalVariable(name: "n", arg: 1, scope: !15165, file: !913, line: 1061, type: !7)
!15169 = !DILocation(line: 1061, column: 18, scope: !15165)
!15170 = !DILocalVariable(name: "arg", arg: 2, scope: !15165, file: !913, line: 1061, type: !183)
!15171 = !DILocation(line: 1061, column: 33, scope: !15165)
!15172 = !DILocalVariable(name: "argsize", arg: 3, scope: !15165, file: !913, line: 1061, type: !55)
!15173 = !DILocation(line: 1061, column: 45, scope: !15165)
!15174 = !DILocation(line: 1063, column: 30, scope: !15165)
!15175 = !DILocation(line: 1063, column: 33, scope: !15165)
!15176 = !DILocation(line: 1063, column: 38, scope: !15165)
!15177 = !DILocation(line: 1063, column: 10, scope: !15165)
!15178 = !DILocation(line: 1063, column: 3, scope: !15165)
!15179 = distinct !DISubprogram(name: "quote_mem", scope: !913, file: !913, line: 1067, type: !15180, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15180 = !DISubroutineType(types: !15181)
!15181 = !{!183, !183, !55}
!15182 = !DILocalVariable(name: "arg", arg: 1, scope: !15179, file: !913, line: 1067, type: !183)
!15183 = !DILocation(line: 1067, column: 24, scope: !15179)
!15184 = !DILocalVariable(name: "argsize", arg: 2, scope: !15179, file: !913, line: 1067, type: !55)
!15185 = !DILocation(line: 1067, column: 36, scope: !15179)
!15186 = !DILocation(line: 1069, column: 26, scope: !15179)
!15187 = !DILocation(line: 1069, column: 31, scope: !15179)
!15188 = !DILocation(line: 1069, column: 10, scope: !15179)
!15189 = !DILocation(line: 1069, column: 3, scope: !15179)
!15190 = distinct !DISubprogram(name: "quote_n", scope: !913, file: !913, line: 1073, type: !15191, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15191 = !DISubroutineType(types: !15192)
!15192 = !{!183, !7, !183}
!15193 = !DILocalVariable(name: "n", arg: 1, scope: !15190, file: !913, line: 1073, type: !7)
!15194 = !DILocation(line: 1073, column: 14, scope: !15190)
!15195 = !DILocalVariable(name: "arg", arg: 2, scope: !15190, file: !913, line: 1073, type: !183)
!15196 = !DILocation(line: 1073, column: 29, scope: !15190)
!15197 = !DILocation(line: 1075, column: 23, scope: !15190)
!15198 = !DILocation(line: 1075, column: 26, scope: !15190)
!15199 = !DILocation(line: 1075, column: 10, scope: !15190)
!15200 = !DILocation(line: 1075, column: 3, scope: !15190)
!15201 = distinct !DISubprogram(name: "quote", scope: !913, file: !913, line: 1079, type: !15202, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !890, retainedNodes: !298)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!183, !183}
!15204 = !DILocalVariable(name: "arg", arg: 1, scope: !15201, file: !913, line: 1079, type: !183)
!15205 = !DILocation(line: 1079, column: 20, scope: !15201)
!15206 = !DILocation(line: 1081, column: 22, scope: !15201)
!15207 = !DILocation(line: 1081, column: 10, scope: !15201)
!15208 = !DILocation(line: 1081, column: 3, scope: !15201)
!15209 = distinct !DISubprogram(name: "renameatu", scope: !15210, file: !15210, line: 77, type: !15211, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1366, retainedNodes: !298)
!15210 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15211 = !DISubroutineType(types: !15212)
!15212 = !{!7, !7, !183, !7, !183, !70}
!15213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !15214)
!15214 = !{!15215, !15216, !15217, !15218, !15219, !15220, !15221, !15222, !15223, !15224, !15225, !15226, !15231, !15232, !15233}
!15215 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15213, file: !463, line: 48, baseType: !452, size: 64)
!15216 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15213, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15213, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15213, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!15219 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15213, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!15220 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15213, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!15221 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15213, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!15222 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15213, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!15223 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15213, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!15224 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15213, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!15225 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15213, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15213, file: !463, line: 91, baseType: !15227, size: 128, offset: 576)
!15227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !15228)
!15228 = !{!15229, !15230}
!15229 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15227, file: !365, line: 11, baseType: !368, size: 64)
!15230 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15227, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!15231 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15213, file: !463, line: 92, baseType: !15227, size: 128, offset: 704)
!15232 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15213, file: !463, line: 93, baseType: !15227, size: 128, offset: 832)
!15233 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15213, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!15234 = !DILocalVariable(name: "fd1", arg: 1, scope: !15209, file: !15210, line: 77, type: !7)
!15235 = !DILocation(line: 77, column: 16, scope: !15209)
!15236 = !DILocalVariable(name: "src", arg: 2, scope: !15209, file: !15210, line: 77, type: !183)
!15237 = !DILocation(line: 77, column: 33, scope: !15209)
!15238 = !DILocalVariable(name: "fd2", arg: 3, scope: !15209, file: !15210, line: 77, type: !7)
!15239 = !DILocation(line: 77, column: 42, scope: !15209)
!15240 = !DILocalVariable(name: "dst", arg: 4, scope: !15209, file: !15210, line: 77, type: !183)
!15241 = !DILocation(line: 77, column: 59, scope: !15209)
!15242 = !DILocalVariable(name: "flags", arg: 5, scope: !15209, file: !15210, line: 78, type: !70)
!15243 = !DILocation(line: 78, column: 25, scope: !15209)
!15244 = !DILocalVariable(name: "ret_val", scope: !15209, file: !15210, line: 80, type: !7)
!15245 = !DILocation(line: 80, column: 7, scope: !15209)
!15246 = !DILocalVariable(name: "err", scope: !15209, file: !15210, line: 81, type: !7)
!15247 = !DILocation(line: 81, column: 7, scope: !15209)
!15248 = !DILocation(line: 84, column: 24, scope: !15209)
!15249 = !DILocation(line: 84, column: 29, scope: !15209)
!15250 = !DILocation(line: 84, column: 34, scope: !15209)
!15251 = !DILocation(line: 84, column: 39, scope: !15209)
!15252 = !DILocation(line: 84, column: 44, scope: !15209)
!15253 = !DILocation(line: 84, column: 13, scope: !15209)
!15254 = !DILocation(line: 84, column: 11, scope: !15209)
!15255 = !DILocation(line: 85, column: 9, scope: !15209)
!15256 = !DILocation(line: 85, column: 7, scope: !15209)
!15257 = !DILocation(line: 99, column: 10, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15209, file: !15210, line: 99, column: 7)
!15259 = !DILocation(line: 99, column: 18, scope: !15258)
!15260 = !DILocation(line: 99, column: 22, scope: !15258)
!15261 = !DILocation(line: 99, column: 26, scope: !15258)
!15262 = !DILocation(line: 99, column: 30, scope: !15258)
!15263 = !DILocation(line: 99, column: 40, scope: !15258)
!15264 = !DILocation(line: 99, column: 43, scope: !15258)
!15265 = !DILocation(line: 99, column: 47, scope: !15258)
!15266 = !DILocation(line: 99, column: 57, scope: !15258)
!15267 = !DILocation(line: 99, column: 60, scope: !15258)
!15268 = !DILocation(line: 99, column: 64, scope: !15258)
!15269 = !DILocation(line: 99, column: 7, scope: !15209)
!15270 = !DILocation(line: 100, column: 12, scope: !15258)
!15271 = !DILocation(line: 100, column: 5, scope: !15258)
!15272 = !DILocalVariable(name: "src_len", scope: !15273, file: !15210, line: 104, type: !55)
!15273 = distinct !DILexicalBlock(scope: !15209, file: !15210, line: 103, column: 3)
!15274 = !DILocation(line: 104, column: 10, scope: !15273)
!15275 = !DILocalVariable(name: "dst_len", scope: !15273, file: !15210, line: 105, type: !55)
!15276 = !DILocation(line: 105, column: 10, scope: !15273)
!15277 = !DILocalVariable(name: "src_temp", scope: !15273, file: !15210, line: 106, type: !9)
!15278 = !DILocation(line: 106, column: 9, scope: !15273)
!15279 = !DILocation(line: 106, column: 29, scope: !15273)
!15280 = !DILocalVariable(name: "dst_temp", scope: !15273, file: !15210, line: 107, type: !9)
!15281 = !DILocation(line: 107, column: 9, scope: !15273)
!15282 = !DILocation(line: 107, column: 29, scope: !15273)
!15283 = !DILocalVariable(name: "src_slash", scope: !15273, file: !15210, line: 108, type: !142)
!15284 = !DILocation(line: 108, column: 8, scope: !15273)
!15285 = !DILocalVariable(name: "dst_slash", scope: !15273, file: !15210, line: 109, type: !142)
!15286 = !DILocation(line: 109, column: 8, scope: !15273)
!15287 = !DILocalVariable(name: "rename_errno", scope: !15273, file: !15210, line: 110, type: !7)
!15288 = !DILocation(line: 110, column: 7, scope: !15273)
!15289 = !DILocalVariable(name: "src_st", scope: !15273, file: !15210, line: 111, type: !15213)
!15290 = !DILocation(line: 111, column: 15, scope: !15273)
!15291 = !DILocalVariable(name: "dst_st", scope: !15273, file: !15210, line: 112, type: !15213)
!15292 = !DILocation(line: 112, column: 15, scope: !15273)
!15293 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15273, file: !15210, line: 113, type: !142)
!15294 = !DILocation(line: 113, column: 8, scope: !15273)
!15295 = !DILocation(line: 115, column: 7, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 115, column: 7)
!15297 = !DILocation(line: 115, column: 13, scope: !15296)
!15298 = !DILocation(line: 115, column: 7, scope: !15273)
!15299 = !DILocation(line: 118, column: 11, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !15210, line: 118, column: 11)
!15301 = distinct !DILexicalBlock(scope: !15296, file: !15210, line: 116, column: 5)
!15302 = !DILocation(line: 118, column: 17, scope: !15300)
!15303 = !DILocation(line: 118, column: 11, scope: !15301)
!15304 = !DILocation(line: 119, column: 16, scope: !15300)
!15305 = !DILocation(line: 119, column: 9, scope: !15300)
!15306 = !DILocation(line: 124, column: 24, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15308, file: !15210, line: 124, column: 15)
!15308 = distinct !DILexicalBlock(scope: !15300, file: !15210, line: 121, column: 9)
!15309 = !DILocation(line: 124, column: 29, scope: !15307)
!15310 = !DILocation(line: 124, column: 15, scope: !15307)
!15311 = !DILocation(line: 124, column: 43, scope: !15307)
!15312 = !DILocation(line: 124, column: 48, scope: !15307)
!15313 = !DILocation(line: 124, column: 51, scope: !15307)
!15314 = !DILocation(line: 124, column: 57, scope: !15307)
!15315 = !DILocation(line: 124, column: 15, scope: !15308)
!15316 = !DILocation(line: 125, column: 20, scope: !15307)
!15317 = !DILocation(line: 125, column: 13, scope: !15307)
!15318 = !DILocation(line: 126, column: 15, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15308, file: !15210, line: 126, column: 15)
!15320 = !DILocation(line: 126, column: 21, scope: !15319)
!15321 = !DILocation(line: 126, column: 15, scope: !15308)
!15322 = !DILocation(line: 127, column: 13, scope: !15319)
!15323 = !DILocation(line: 128, column: 33, scope: !15308)
!15324 = !DILocation(line: 130, column: 5, scope: !15301)
!15325 = !DILocation(line: 133, column: 21, scope: !15273)
!15326 = !DILocation(line: 133, column: 13, scope: !15273)
!15327 = !DILocation(line: 133, column: 11, scope: !15273)
!15328 = !DILocation(line: 134, column: 21, scope: !15273)
!15329 = !DILocation(line: 134, column: 13, scope: !15273)
!15330 = !DILocation(line: 134, column: 11, scope: !15273)
!15331 = !DILocation(line: 135, column: 8, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 135, column: 7)
!15333 = !DILocation(line: 135, column: 16, scope: !15332)
!15334 = !DILocation(line: 135, column: 20, scope: !15332)
!15335 = !DILocation(line: 135, column: 7, scope: !15273)
!15336 = !DILocation(line: 136, column: 22, scope: !15332)
!15337 = !DILocation(line: 136, column: 27, scope: !15332)
!15338 = !DILocation(line: 136, column: 32, scope: !15332)
!15339 = !DILocation(line: 136, column: 37, scope: !15332)
!15340 = !DILocation(line: 136, column: 12, scope: !15332)
!15341 = !DILocation(line: 136, column: 5, scope: !15332)
!15342 = !DILocation(line: 138, column: 15, scope: !15273)
!15343 = !DILocation(line: 138, column: 19, scope: !15273)
!15344 = !DILocation(line: 138, column: 27, scope: !15273)
!15345 = !DILocation(line: 138, column: 32, scope: !15273)
!15346 = !DILocation(line: 138, column: 13, scope: !15273)
!15347 = !DILocation(line: 139, column: 15, scope: !15273)
!15348 = !DILocation(line: 139, column: 19, scope: !15273)
!15349 = !DILocation(line: 139, column: 27, scope: !15273)
!15350 = !DILocation(line: 139, column: 32, scope: !15273)
!15351 = !DILocation(line: 139, column: 13, scope: !15273)
!15352 = !DILocation(line: 140, column: 8, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 140, column: 7)
!15354 = !DILocation(line: 140, column: 18, scope: !15353)
!15355 = !DILocation(line: 140, column: 22, scope: !15353)
!15356 = !DILocation(line: 140, column: 7, scope: !15273)
!15357 = !DILocation(line: 141, column: 22, scope: !15353)
!15358 = !DILocation(line: 141, column: 27, scope: !15353)
!15359 = !DILocation(line: 141, column: 32, scope: !15353)
!15360 = !DILocation(line: 141, column: 37, scope: !15353)
!15361 = !DILocation(line: 141, column: 12, scope: !15353)
!15362 = !DILocation(line: 141, column: 5, scope: !15353)
!15363 = !DILocation(line: 147, column: 16, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 147, column: 7)
!15365 = !DILocation(line: 147, column: 21, scope: !15364)
!15366 = !DILocation(line: 147, column: 7, scope: !15364)
!15367 = !DILocation(line: 147, column: 7, scope: !15273)
!15368 = !DILocation(line: 148, column: 5, scope: !15364)
!15369 = !DILocation(line: 149, column: 7, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 149, column: 7)
!15371 = !DILocation(line: 149, column: 7, scope: !15273)
!15372 = !DILocation(line: 151, column: 12, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15374, file: !15210, line: 151, column: 11)
!15374 = distinct !DILexicalBlock(scope: !15370, file: !15210, line: 150, column: 5)
!15375 = !DILocation(line: 151, column: 11, scope: !15374)
!15376 = !DILocation(line: 152, column: 16, scope: !15373)
!15377 = !DILocation(line: 152, column: 9, scope: !15373)
!15378 = !DILocation(line: 153, column: 5, scope: !15374)
!15379 = !DILocation(line: 154, column: 21, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15370, file: !15210, line: 154, column: 12)
!15381 = !DILocation(line: 154, column: 26, scope: !15380)
!15382 = !DILocation(line: 154, column: 12, scope: !15380)
!15383 = !DILocation(line: 154, column: 12, scope: !15370)
!15384 = !DILocation(line: 156, column: 11, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15386, file: !15210, line: 156, column: 11)
!15386 = distinct !DILexicalBlock(scope: !15380, file: !15210, line: 155, column: 5)
!15387 = !DILocation(line: 156, column: 17, scope: !15385)
!15388 = !DILocation(line: 156, column: 27, scope: !15385)
!15389 = !DILocation(line: 156, column: 31, scope: !15385)
!15390 = !DILocation(line: 156, column: 11, scope: !15386)
!15391 = !DILocation(line: 157, column: 9, scope: !15385)
!15392 = !DILocation(line: 158, column: 5, scope: !15386)
!15393 = !DILocation(line: 159, column: 13, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15380, file: !15210, line: 159, column: 12)
!15395 = !DILocation(line: 159, column: 12, scope: !15380)
!15396 = !DILocation(line: 160, column: 12, scope: !15394)
!15397 = !DILocation(line: 160, column: 5, scope: !15394)
!15398 = !DILocation(line: 161, column: 13, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !15210, line: 161, column: 12)
!15400 = !DILocation(line: 161, column: 12, scope: !15394)
!15401 = !DILocation(line: 162, column: 12, scope: !15399)
!15402 = !DILocation(line: 162, column: 5, scope: !15399)
!15403 = !DILocation(line: 214, column: 23, scope: !15273)
!15404 = !DILocation(line: 214, column: 28, scope: !15273)
!15405 = !DILocation(line: 214, column: 38, scope: !15273)
!15406 = !DILocation(line: 214, column: 43, scope: !15273)
!15407 = !DILocation(line: 214, column: 13, scope: !15273)
!15408 = !DILocation(line: 214, column: 11, scope: !15273)
!15409 = !DILocation(line: 215, column: 18, scope: !15273)
!15410 = !DILocation(line: 215, column: 16, scope: !15273)
!15411 = !DILocation(line: 216, column: 3, scope: !15273)
!15412 = !DILabel(scope: !15273, name: "out", file: !15210, line: 217)
!15413 = !DILocation(line: 217, column: 2, scope: !15273)
!15414 = !DILocation(line: 218, column: 7, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 218, column: 7)
!15416 = !DILocation(line: 218, column: 19, scope: !15415)
!15417 = !DILocation(line: 218, column: 16, scope: !15415)
!15418 = !DILocation(line: 218, column: 7, scope: !15273)
!15419 = !DILocation(line: 219, column: 11, scope: !15415)
!15420 = !DILocation(line: 219, column: 5, scope: !15415)
!15421 = !DILocation(line: 220, column: 7, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15273, file: !15210, line: 220, column: 7)
!15423 = !DILocation(line: 220, column: 19, scope: !15422)
!15424 = !DILocation(line: 220, column: 16, scope: !15422)
!15425 = !DILocation(line: 220, column: 7, scope: !15273)
!15426 = !DILocation(line: 221, column: 11, scope: !15422)
!15427 = !DILocation(line: 221, column: 5, scope: !15422)
!15428 = !DILocation(line: 222, column: 11, scope: !15273)
!15429 = !DILocation(line: 222, column: 3, scope: !15273)
!15430 = !DILocation(line: 222, column: 9, scope: !15273)
!15431 = !DILocation(line: 223, column: 10, scope: !15273)
!15432 = !DILocation(line: 223, column: 3, scope: !15273)
!15433 = !DILocation(line: 233, column: 1, scope: !15209)
!15434 = distinct !DISubprogram(name: "errno_fail", scope: !15210, file: !15210, line: 33, type: !15435, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1366, retainedNodes: !298)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!7, !7}
!15437 = !DILocalVariable(name: "e", arg: 1, scope: !15434, file: !15210, line: 33, type: !7)
!15438 = !DILocation(line: 33, column: 17, scope: !15434)
!15439 = !DILocation(line: 35, column: 11, scope: !15434)
!15440 = !DILocation(line: 35, column: 3, scope: !15434)
!15441 = !DILocation(line: 35, column: 9, scope: !15434)
!15442 = !DILocation(line: 36, column: 3, scope: !15434)
!15443 = distinct !DISubprogram(name: "safe_read", scope: !15444, file: !15444, line: 56, type: !10475, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1369, retainedNodes: !298)
!15444 = !DIFile(filename: "lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15445 = !DILocalVariable(name: "fd", arg: 1, scope: !15443, file: !15444, line: 56, type: !7)
!15446 = !DILocation(line: 56, column: 14, scope: !15443)
!15447 = !DILocalVariable(name: "buf", arg: 2, scope: !15443, file: !15444, line: 56, type: !53)
!15448 = !DILocation(line: 56, column: 30, scope: !15443)
!15449 = !DILocalVariable(name: "count", arg: 3, scope: !15443, file: !15444, line: 56, type: !55)
!15450 = !DILocation(line: 56, column: 42, scope: !15443)
!15451 = !DILocation(line: 58, column: 3, scope: !15443)
!15452 = !DILocalVariable(name: "result", scope: !15453, file: !15444, line: 60, type: !661)
!15453 = distinct !DILexicalBlock(scope: !15454, file: !15444, line: 59, column: 5)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !15444, line: 58, column: 3)
!15455 = distinct !DILexicalBlock(scope: !15443, file: !15444, line: 58, column: 3)
!15456 = !DILocation(line: 60, column: 15, scope: !15453)
!15457 = !DILocation(line: 60, column: 28, scope: !15453)
!15458 = !DILocation(line: 60, column: 32, scope: !15453)
!15459 = !DILocation(line: 60, column: 37, scope: !15453)
!15460 = !DILocation(line: 60, column: 24, scope: !15453)
!15461 = !DILocation(line: 62, column: 16, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15453, file: !15444, line: 62, column: 11)
!15463 = !DILocation(line: 62, column: 13, scope: !15462)
!15464 = !DILocation(line: 62, column: 11, scope: !15453)
!15465 = !DILocation(line: 63, column: 16, scope: !15462)
!15466 = !DILocation(line: 63, column: 9, scope: !15462)
!15467 = !DILocation(line: 64, column: 16, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15462, file: !15444, line: 64, column: 16)
!15469 = !DILocation(line: 64, column: 16, scope: !15462)
!15470 = !DILocation(line: 65, column: 9, scope: !15468)
!15471 = distinct !{!15471, !15472, !15473}
!15472 = !DILocation(line: 58, column: 3, scope: !15455)
!15473 = !DILocation(line: 70, column: 5, scope: !15455)
!15474 = !DILocation(line: 66, column: 16, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15468, file: !15444, line: 66, column: 16)
!15476 = !DILocation(line: 66, column: 22, scope: !15475)
!15477 = !DILocation(line: 66, column: 32, scope: !15475)
!15478 = !DILocation(line: 66, column: 53, scope: !15475)
!15479 = !DILocation(line: 66, column: 51, scope: !15475)
!15480 = !DILocation(line: 66, column: 16, scope: !15468)
!15481 = !DILocation(line: 67, column: 15, scope: !15475)
!15482 = !DILocation(line: 67, column: 9, scope: !15475)
!15483 = !DILocation(line: 69, column: 16, scope: !15475)
!15484 = !DILocation(line: 69, column: 9, scope: !15475)
!15485 = !DILocation(line: 58, column: 3, scope: !15454)
!15486 = !DILocation(line: 71, column: 1, scope: !15443)
!15487 = distinct !DISubprogram(name: "safe_write", scope: !1370, file: !1370, line: 56, type: !10523, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1372, retainedNodes: !298)
!15488 = !DILocalVariable(name: "fd", arg: 1, scope: !15487, file: !1370, line: 56, type: !7)
!15489 = !DILocation(line: 56, column: 14, scope: !15487)
!15490 = !DILocalVariable(name: "buf", arg: 2, scope: !15487, file: !1370, line: 56, type: !831)
!15491 = !DILocation(line: 56, column: 30, scope: !15487)
!15492 = !DILocalVariable(name: "count", arg: 3, scope: !15487, file: !1370, line: 56, type: !55)
!15493 = !DILocation(line: 56, column: 42, scope: !15487)
!15494 = !DILocation(line: 58, column: 3, scope: !15487)
!15495 = !DILocalVariable(name: "result", scope: !15496, file: !1370, line: 60, type: !661)
!15496 = distinct !DILexicalBlock(scope: !15497, file: !1370, line: 59, column: 5)
!15497 = distinct !DILexicalBlock(scope: !15498, file: !1370, line: 58, column: 3)
!15498 = distinct !DILexicalBlock(scope: !15487, file: !1370, line: 58, column: 3)
!15499 = !DILocation(line: 60, column: 15, scope: !15496)
!15500 = !DILocation(line: 60, column: 28, scope: !15496)
!15501 = !DILocation(line: 60, column: 32, scope: !15496)
!15502 = !DILocation(line: 60, column: 37, scope: !15496)
!15503 = !DILocation(line: 60, column: 24, scope: !15496)
!15504 = !DILocation(line: 62, column: 16, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15496, file: !1370, line: 62, column: 11)
!15506 = !DILocation(line: 62, column: 13, scope: !15505)
!15507 = !DILocation(line: 62, column: 11, scope: !15496)
!15508 = !DILocation(line: 63, column: 16, scope: !15505)
!15509 = !DILocation(line: 63, column: 9, scope: !15505)
!15510 = !DILocation(line: 64, column: 16, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15505, file: !1370, line: 64, column: 16)
!15512 = !DILocation(line: 64, column: 16, scope: !15505)
!15513 = !DILocation(line: 65, column: 9, scope: !15511)
!15514 = distinct !{!15514, !15515, !15516}
!15515 = !DILocation(line: 58, column: 3, scope: !15498)
!15516 = !DILocation(line: 70, column: 5, scope: !15498)
!15517 = !DILocation(line: 66, column: 16, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15511, file: !1370, line: 66, column: 16)
!15519 = !DILocation(line: 66, column: 22, scope: !15518)
!15520 = !DILocation(line: 66, column: 32, scope: !15518)
!15521 = !DILocation(line: 66, column: 53, scope: !15518)
!15522 = !DILocation(line: 66, column: 51, scope: !15518)
!15523 = !DILocation(line: 66, column: 16, scope: !15511)
!15524 = !DILocation(line: 67, column: 15, scope: !15518)
!15525 = !DILocation(line: 67, column: 9, scope: !15518)
!15526 = !DILocation(line: 69, column: 16, scope: !15518)
!15527 = !DILocation(line: 69, column: 9, scope: !15518)
!15528 = !DILocation(line: 58, column: 3, scope: !15497)
!15529 = !DILocation(line: 71, column: 1, scope: !15487)
!15530 = distinct !DISubprogram(name: "same_name", scope: !15531, file: !15531, line: 61, type: !15532, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1374, retainedNodes: !298)
!15531 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15532 = !DISubroutineType(types: !15533)
!15533 = !{!142, !183, !183}
!15534 = !DILocalVariable(name: "source", arg: 1, scope: !15530, file: !15531, line: 61, type: !183)
!15535 = !DILocation(line: 61, column: 24, scope: !15530)
!15536 = !DILocalVariable(name: "dest", arg: 2, scope: !15530, file: !15531, line: 61, type: !183)
!15537 = !DILocation(line: 61, column: 44, scope: !15530)
!15538 = !DILocation(line: 63, column: 33, scope: !15530)
!15539 = !DILocation(line: 63, column: 51, scope: !15530)
!15540 = !DILocation(line: 63, column: 10, scope: !15530)
!15541 = !DILocation(line: 63, column: 3, scope: !15530)
!15542 = distinct !DISubprogram(name: "same_nameat", scope: !15531, file: !15531, line: 70, type: !15543, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1374, retainedNodes: !298)
!15543 = !DISubroutineType(types: !15544)
!15544 = !{!142, !7, !183, !7, !183}
!15545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !15546)
!15546 = !{!15547, !15548, !15549, !15550, !15551, !15552, !15553, !15554, !15555, !15556, !15557, !15558, !15563, !15564, !15565}
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15545, file: !463, line: 48, baseType: !452, size: 64)
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15545, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15545, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15545, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15545, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!15552 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15545, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15545, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15545, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15545, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15545, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15545, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!15558 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15545, file: !463, line: 91, baseType: !15559, size: 128, offset: 576)
!15559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !15560)
!15560 = !{!15561, !15562}
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15559, file: !365, line: 11, baseType: !368, size: 64)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15559, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15545, file: !463, line: 92, baseType: !15559, size: 128, offset: 704)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15545, file: !463, line: 93, baseType: !15559, size: 128, offset: 832)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15545, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!15566 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15542, file: !15531, line: 70, type: !7)
!15567 = !DILocation(line: 70, column: 18, scope: !15542)
!15568 = !DILocalVariable(name: "source", arg: 2, scope: !15542, file: !15531, line: 70, type: !183)
!15569 = !DILocation(line: 70, column: 42, scope: !15542)
!15570 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15542, file: !15531, line: 71, type: !7)
!15571 = !DILocation(line: 71, column: 18, scope: !15542)
!15572 = !DILocalVariable(name: "dest", arg: 4, scope: !15542, file: !15531, line: 71, type: !183)
!15573 = !DILocation(line: 71, column: 40, scope: !15542)
!15574 = !DILocalVariable(name: "source_basename", scope: !15542, file: !15531, line: 74, type: !183)
!15575 = !DILocation(line: 74, column: 15, scope: !15542)
!15576 = !DILocation(line: 74, column: 49, scope: !15542)
!15577 = !DILocation(line: 74, column: 33, scope: !15542)
!15578 = !DILocalVariable(name: "dest_basename", scope: !15542, file: !15531, line: 75, type: !183)
!15579 = !DILocation(line: 75, column: 15, scope: !15542)
!15580 = !DILocation(line: 75, column: 47, scope: !15542)
!15581 = !DILocation(line: 75, column: 31, scope: !15542)
!15582 = !DILocalVariable(name: "source_baselen", scope: !15542, file: !15531, line: 76, type: !55)
!15583 = !DILocation(line: 76, column: 10, scope: !15542)
!15584 = !DILocation(line: 76, column: 37, scope: !15542)
!15585 = !DILocation(line: 76, column: 27, scope: !15542)
!15586 = !DILocalVariable(name: "dest_baselen", scope: !15542, file: !15531, line: 77, type: !55)
!15587 = !DILocation(line: 77, column: 10, scope: !15542)
!15588 = !DILocation(line: 77, column: 35, scope: !15542)
!15589 = !DILocation(line: 77, column: 25, scope: !15542)
!15590 = !DILocalVariable(name: "identical_basenames", scope: !15542, file: !15531, line: 78, type: !142)
!15591 = !DILocation(line: 78, column: 8, scope: !15542)
!15592 = !DILocation(line: 79, column: 6, scope: !15542)
!15593 = !DILocation(line: 79, column: 24, scope: !15542)
!15594 = !DILocation(line: 79, column: 21, scope: !15542)
!15595 = !DILocation(line: 80, column: 6, scope: !15542)
!15596 = !DILocation(line: 80, column: 17, scope: !15542)
!15597 = !DILocation(line: 80, column: 34, scope: !15542)
!15598 = !DILocation(line: 80, column: 49, scope: !15542)
!15599 = !DILocation(line: 80, column: 9, scope: !15542)
!15600 = !DILocation(line: 80, column: 63, scope: !15542)
!15601 = !DILocation(line: 0, scope: !15542)
!15602 = !DILocalVariable(name: "compare_dirs", scope: !15542, file: !15531, line: 81, type: !142)
!15603 = !DILocation(line: 81, column: 8, scope: !15542)
!15604 = !DILocation(line: 81, column: 23, scope: !15542)
!15605 = !DILocalVariable(name: "same", scope: !15542, file: !15531, line: 82, type: !142)
!15606 = !DILocation(line: 82, column: 8, scope: !15542)
!15607 = !DILocation(line: 92, column: 7, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15542, file: !15531, line: 92, column: 7)
!15609 = !DILocation(line: 92, column: 7, scope: !15542)
!15610 = !DILocalVariable(name: "source_dir_stats", scope: !15611, file: !15531, line: 94, type: !15545)
!15611 = distinct !DILexicalBlock(scope: !15608, file: !15531, line: 93, column: 5)
!15612 = !DILocation(line: 94, column: 19, scope: !15611)
!15613 = !DILocalVariable(name: "dest_dir_stats", scope: !15611, file: !15531, line: 95, type: !15545)
!15614 = !DILocation(line: 95, column: 19, scope: !15611)
!15615 = !DILocalVariable(name: "source_dirname", scope: !15611, file: !15531, line: 98, type: !9)
!15616 = !DILocation(line: 98, column: 13, scope: !15611)
!15617 = !DILocation(line: 98, column: 40, scope: !15611)
!15618 = !DILocation(line: 98, column: 30, scope: !15611)
!15619 = !DILocalVariable(name: "flags", scope: !15611, file: !15531, line: 99, type: !7)
!15620 = !DILocation(line: 99, column: 11, scope: !15611)
!15621 = !DILocation(line: 100, column: 20, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15611, file: !15531, line: 100, column: 11)
!15623 = !DILocation(line: 100, column: 32, scope: !15622)
!15624 = !DILocation(line: 100, column: 67, scope: !15622)
!15625 = !DILocation(line: 100, column: 11, scope: !15622)
!15626 = !DILocation(line: 100, column: 74, scope: !15622)
!15627 = !DILocation(line: 100, column: 11, scope: !15611)
!15628 = !DILocation(line: 103, column: 21, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15622, file: !15531, line: 101, column: 9)
!15630 = !DILocation(line: 103, column: 34, scope: !15629)
!15631 = !DILocation(line: 103, column: 11, scope: !15629)
!15632 = !DILocation(line: 104, column: 9, scope: !15629)
!15633 = !DILocation(line: 105, column: 13, scope: !15611)
!15634 = !DILocation(line: 105, column: 7, scope: !15611)
!15635 = !DILocalVariable(name: "dest_dirname", scope: !15611, file: !15531, line: 107, type: !9)
!15636 = !DILocation(line: 107, column: 13, scope: !15611)
!15637 = !DILocation(line: 107, column: 38, scope: !15611)
!15638 = !DILocation(line: 107, column: 28, scope: !15611)
!15639 = !DILocation(line: 137, column: 20, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15611, file: !15531, line: 137, column: 11)
!15641 = !DILocation(line: 137, column: 30, scope: !15640)
!15642 = !DILocation(line: 137, column: 61, scope: !15640)
!15643 = !DILocation(line: 137, column: 11, scope: !15640)
!15644 = !DILocation(line: 137, column: 68, scope: !15640)
!15645 = !DILocation(line: 137, column: 11, scope: !15611)
!15646 = !DILocation(line: 140, column: 21, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15640, file: !15531, line: 138, column: 9)
!15648 = !DILocation(line: 140, column: 34, scope: !15647)
!15649 = !DILocation(line: 140, column: 11, scope: !15647)
!15650 = !DILocation(line: 141, column: 9, scope: !15647)
!15651 = !DILocation(line: 142, column: 14, scope: !15611)
!15652 = !DILocation(line: 0, scope: !15611)
!15653 = !DILocation(line: 142, column: 12, scope: !15611)
!15654 = !DILocation(line: 145, column: 13, scope: !15611)
!15655 = !DILocation(line: 145, column: 7, scope: !15611)
!15656 = !DILocation(line: 146, column: 5, scope: !15611)
!15657 = !DILocation(line: 148, column: 10, scope: !15542)
!15658 = !DILocation(line: 148, column: 3, scope: !15542)
!15659 = distinct !DISubprogram(name: "streamsavedir", scope: !980, file: !980, line: 91, type: !15660, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !967, retainedNodes: !298)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!9, !662, !970}
!15662 = !DILocalVariable(name: "dirp", arg: 1, scope: !15659, file: !980, line: 91, type: !662)
!15663 = !DILocation(line: 91, column: 21, scope: !15659)
!15664 = !DILocalVariable(name: "option", arg: 2, scope: !15659, file: !980, line: 91, type: !970)
!15665 = !DILocation(line: 91, column: 47, scope: !15659)
!15666 = !DILocalVariable(name: "name_space", scope: !15659, file: !980, line: 93, type: !9)
!15667 = !DILocation(line: 93, column: 9, scope: !15659)
!15668 = !DILocalVariable(name: "allocated", scope: !15659, file: !980, line: 94, type: !55)
!15669 = !DILocation(line: 94, column: 10, scope: !15659)
!15670 = !DILocalVariable(name: "entries", scope: !15659, file: !980, line: 95, type: !978)
!15671 = !DILocation(line: 95, column: 15, scope: !15659)
!15672 = !DILocalVariable(name: "entries_allocated", scope: !15659, file: !980, line: 96, type: !55)
!15673 = !DILocation(line: 96, column: 10, scope: !15659)
!15674 = !DILocalVariable(name: "entries_used", scope: !15659, file: !980, line: 97, type: !55)
!15675 = !DILocation(line: 97, column: 10, scope: !15659)
!15676 = !DILocalVariable(name: "used", scope: !15659, file: !980, line: 98, type: !55)
!15677 = !DILocation(line: 98, column: 10, scope: !15659)
!15678 = !DILocalVariable(name: "readdir_errno", scope: !15659, file: !980, line: 99, type: !7)
!15679 = !DILocation(line: 99, column: 7, scope: !15659)
!15680 = !DILocalVariable(name: "cmp", scope: !15659, file: !980, line: 100, type: !986)
!15681 = !DILocation(line: 100, column: 23, scope: !15659)
!15682 = !DILocation(line: 100, column: 55, scope: !15659)
!15683 = !DILocation(line: 100, column: 29, scope: !15659)
!15684 = !DILocation(line: 102, column: 7, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15659, file: !980, line: 102, column: 7)
!15686 = !DILocation(line: 102, column: 12, scope: !15685)
!15687 = !DILocation(line: 102, column: 7, scope: !15659)
!15688 = !DILocation(line: 103, column: 5, scope: !15685)
!15689 = !DILocation(line: 105, column: 3, scope: !15659)
!15690 = !DILocalVariable(name: "dp", scope: !15691, file: !980, line: 107, type: !992)
!15691 = distinct !DILexicalBlock(scope: !15692, file: !980, line: 106, column: 5)
!15692 = distinct !DILexicalBlock(scope: !15693, file: !980, line: 105, column: 3)
!15693 = distinct !DILexicalBlock(scope: !15659, file: !980, line: 105, column: 3)
!15694 = !DILocation(line: 107, column: 28, scope: !15691)
!15695 = !DILocalVariable(name: "entry", scope: !15691, file: !980, line: 108, type: !183)
!15696 = !DILocation(line: 108, column: 19, scope: !15691)
!15697 = !DILocation(line: 110, column: 7, scope: !15691)
!15698 = !DILocation(line: 110, column: 13, scope: !15691)
!15699 = !DILocation(line: 111, column: 21, scope: !15691)
!15700 = !DILocation(line: 111, column: 12, scope: !15691)
!15701 = !DILocation(line: 111, column: 10, scope: !15691)
!15702 = !DILocation(line: 112, column: 13, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15691, file: !980, line: 112, column: 11)
!15704 = !DILocation(line: 112, column: 11, scope: !15691)
!15705 = !DILocation(line: 113, column: 9, scope: !15703)
!15706 = !DILocation(line: 117, column: 15, scope: !15691)
!15707 = !DILocation(line: 117, column: 19, scope: !15691)
!15708 = !DILocation(line: 117, column: 13, scope: !15691)
!15709 = !DILocation(line: 118, column: 11, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15691, file: !980, line: 118, column: 11)
!15711 = !DILocation(line: 118, column: 17, scope: !15710)
!15712 = !DILocation(line: 118, column: 26, scope: !15710)
!15713 = !DILocation(line: 118, column: 39, scope: !15710)
!15714 = !DILocation(line: 118, column: 48, scope: !15710)
!15715 = !DILocation(line: 118, column: 64, scope: !15710)
!15716 = !DILocation(line: 118, column: 11, scope: !15691)
!15717 = !DILocalVariable(name: "entry_size", scope: !15718, file: !980, line: 120, type: !55)
!15718 = distinct !DILexicalBlock(scope: !15710, file: !980, line: 119, column: 9)
!15719 = !DILocation(line: 120, column: 18, scope: !15718)
!15720 = !DILocation(line: 120, column: 31, scope: !15718)
!15721 = !DILocation(line: 120, column: 52, scope: !15718)
!15722 = !DILocation(line: 121, column: 15, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15718, file: !980, line: 121, column: 15)
!15724 = !DILocation(line: 121, column: 15, scope: !15718)
!15725 = !DILocation(line: 123, column: 19, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !980, line: 123, column: 19)
!15727 = distinct !DILexicalBlock(scope: !15723, file: !980, line: 122, column: 13)
!15728 = !DILocation(line: 123, column: 40, scope: !15726)
!15729 = !DILocation(line: 123, column: 37, scope: !15726)
!15730 = !DILocation(line: 123, column: 19, scope: !15727)
!15731 = !DILocalVariable(name: "n", scope: !15732, file: !980, line: 125, type: !55)
!15732 = distinct !DILexicalBlock(scope: !15726, file: !980, line: 124, column: 17)
!15733 = !DILocation(line: 125, column: 26, scope: !15732)
!15734 = !DILocation(line: 125, column: 30, scope: !15732)
!15735 = !DILocation(line: 126, column: 41, scope: !15732)
!15736 = !DILocation(line: 126, column: 29, scope: !15732)
!15737 = !DILocation(line: 126, column: 27, scope: !15732)
!15738 = !DILocation(line: 127, column: 39, scope: !15732)
!15739 = !DILocation(line: 127, column: 37, scope: !15732)
!15740 = !DILocation(line: 128, column: 17, scope: !15732)
!15741 = !DILocation(line: 129, column: 53, scope: !15727)
!15742 = !DILocation(line: 129, column: 44, scope: !15727)
!15743 = !DILocation(line: 129, column: 15, scope: !15727)
!15744 = !DILocation(line: 129, column: 23, scope: !15727)
!15745 = !DILocation(line: 129, column: 37, scope: !15727)
!15746 = !DILocation(line: 129, column: 42, scope: !15727)
!15747 = !DILocation(line: 131, column: 43, scope: !15727)
!15748 = !DILocation(line: 131, column: 47, scope: !15727)
!15749 = !DILocation(line: 131, column: 15, scope: !15727)
!15750 = !DILocation(line: 131, column: 23, scope: !15727)
!15751 = !DILocation(line: 131, column: 37, scope: !15727)
!15752 = !DILocation(line: 131, column: 41, scope: !15727)
!15753 = !DILocation(line: 133, column: 27, scope: !15727)
!15754 = !DILocation(line: 134, column: 13, scope: !15727)
!15755 = !DILocation(line: 137, column: 19, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15757, file: !980, line: 137, column: 19)
!15757 = distinct !DILexicalBlock(scope: !15723, file: !980, line: 136, column: 13)
!15758 = !DILocation(line: 137, column: 31, scope: !15756)
!15759 = !DILocation(line: 137, column: 29, scope: !15756)
!15760 = !DILocation(line: 137, column: 39, scope: !15756)
!15761 = !DILocation(line: 137, column: 36, scope: !15756)
!15762 = !DILocation(line: 137, column: 19, scope: !15757)
!15763 = !DILocalVariable(name: "n", scope: !15764, file: !980, line: 139, type: !55)
!15764 = distinct !DILexicalBlock(scope: !15756, file: !980, line: 138, column: 17)
!15765 = !DILocation(line: 139, column: 26, scope: !15764)
!15766 = !DILocation(line: 139, column: 30, scope: !15764)
!15767 = !DILocation(line: 139, column: 37, scope: !15764)
!15768 = !DILocation(line: 139, column: 35, scope: !15764)
!15769 = !DILocation(line: 140, column: 23, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15764, file: !980, line: 140, column: 23)
!15771 = !DILocation(line: 140, column: 27, scope: !15770)
!15772 = !DILocation(line: 140, column: 25, scope: !15770)
!15773 = !DILocation(line: 140, column: 23, scope: !15764)
!15774 = !DILocation(line: 141, column: 21, scope: !15770)
!15775 = !DILocation(line: 142, column: 44, scope: !15764)
!15776 = !DILocation(line: 142, column: 32, scope: !15764)
!15777 = !DILocation(line: 142, column: 30, scope: !15764)
!15778 = !DILocation(line: 143, column: 31, scope: !15764)
!15779 = !DILocation(line: 143, column: 29, scope: !15764)
!15780 = !DILocation(line: 144, column: 17, scope: !15764)
!15781 = !DILocation(line: 145, column: 23, scope: !15757)
!15782 = !DILocation(line: 145, column: 36, scope: !15757)
!15783 = !DILocation(line: 145, column: 34, scope: !15757)
!15784 = !DILocation(line: 145, column: 42, scope: !15757)
!15785 = !DILocation(line: 145, column: 49, scope: !15757)
!15786 = !DILocation(line: 145, column: 15, scope: !15757)
!15787 = !DILocation(line: 147, column: 19, scope: !15718)
!15788 = !DILocation(line: 147, column: 16, scope: !15718)
!15789 = !DILocation(line: 148, column: 9, scope: !15718)
!15790 = !DILocation(line: 105, column: 3, scope: !15692)
!15791 = distinct !{!15791, !15792, !15793}
!15792 = !DILocation(line: 105, column: 3, scope: !15693)
!15793 = !DILocation(line: 149, column: 5, scope: !15693)
!15794 = !DILocation(line: 151, column: 19, scope: !15659)
!15795 = !DILocation(line: 151, column: 17, scope: !15659)
!15796 = !DILocation(line: 152, column: 7, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15659, file: !980, line: 152, column: 7)
!15798 = !DILocation(line: 152, column: 21, scope: !15797)
!15799 = !DILocation(line: 152, column: 7, scope: !15659)
!15800 = !DILocation(line: 154, column: 13, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15797, file: !980, line: 153, column: 5)
!15802 = !DILocation(line: 154, column: 7, scope: !15801)
!15803 = !DILocation(line: 155, column: 13, scope: !15801)
!15804 = !DILocation(line: 155, column: 7, scope: !15801)
!15805 = !DILocation(line: 156, column: 15, scope: !15801)
!15806 = !DILocation(line: 156, column: 7, scope: !15801)
!15807 = !DILocation(line: 156, column: 13, scope: !15801)
!15808 = !DILocation(line: 157, column: 7, scope: !15801)
!15809 = !DILocation(line: 160, column: 7, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15659, file: !980, line: 160, column: 7)
!15811 = !DILocation(line: 160, column: 7, scope: !15659)
!15812 = !DILocalVariable(name: "i", scope: !15813, file: !980, line: 162, type: !55)
!15813 = distinct !DILexicalBlock(scope: !15810, file: !980, line: 161, column: 5)
!15814 = !DILocation(line: 162, column: 14, scope: !15813)
!15815 = !DILocation(line: 164, column: 11, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15813, file: !980, line: 164, column: 11)
!15817 = !DILocation(line: 164, column: 11, scope: !15813)
!15818 = !DILocation(line: 165, column: 16, scope: !15816)
!15819 = !DILocation(line: 165, column: 25, scope: !15816)
!15820 = !DILocation(line: 165, column: 56, scope: !15816)
!15821 = !DILocation(line: 165, column: 9, scope: !15816)
!15822 = !DILocation(line: 166, column: 29, scope: !15813)
!15823 = !DILocation(line: 166, column: 34, scope: !15813)
!15824 = !DILocation(line: 166, column: 20, scope: !15813)
!15825 = !DILocation(line: 166, column: 18, scope: !15813)
!15826 = !DILocation(line: 167, column: 12, scope: !15813)
!15827 = !DILocation(line: 168, column: 14, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15813, file: !980, line: 168, column: 7)
!15829 = !DILocation(line: 168, column: 12, scope: !15828)
!15830 = !DILocation(line: 168, column: 19, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15828, file: !980, line: 168, column: 7)
!15832 = !DILocation(line: 168, column: 23, scope: !15831)
!15833 = !DILocation(line: 168, column: 21, scope: !15831)
!15834 = !DILocation(line: 168, column: 7, scope: !15828)
!15835 = !DILocalVariable(name: "dest", scope: !15836, file: !980, line: 170, type: !9)
!15836 = distinct !DILexicalBlock(scope: !15831, file: !980, line: 169, column: 9)
!15837 = !DILocation(line: 170, column: 17, scope: !15836)
!15838 = !DILocation(line: 170, column: 24, scope: !15836)
!15839 = !DILocation(line: 170, column: 37, scope: !15836)
!15840 = !DILocation(line: 170, column: 35, scope: !15836)
!15841 = !DILocation(line: 171, column: 27, scope: !15836)
!15842 = !DILocation(line: 171, column: 33, scope: !15836)
!15843 = !DILocation(line: 171, column: 41, scope: !15836)
!15844 = !DILocation(line: 171, column: 44, scope: !15836)
!15845 = !DILocation(line: 171, column: 19, scope: !15836)
!15846 = !DILocation(line: 171, column: 52, scope: !15836)
!15847 = !DILocation(line: 171, column: 50, scope: !15836)
!15848 = !DILocation(line: 171, column: 57, scope: !15836)
!15849 = !DILocation(line: 171, column: 16, scope: !15836)
!15850 = !DILocation(line: 172, column: 17, scope: !15836)
!15851 = !DILocation(line: 172, column: 25, scope: !15836)
!15852 = !DILocation(line: 172, column: 28, scope: !15836)
!15853 = !DILocation(line: 172, column: 11, scope: !15836)
!15854 = !DILocation(line: 173, column: 9, scope: !15836)
!15855 = !DILocation(line: 168, column: 38, scope: !15831)
!15856 = !DILocation(line: 168, column: 7, scope: !15831)
!15857 = distinct !{!15857, !15834, !15858}
!15858 = !DILocation(line: 173, column: 9, scope: !15828)
!15859 = !DILocation(line: 174, column: 13, scope: !15813)
!15860 = !DILocation(line: 174, column: 7, scope: !15813)
!15861 = !DILocation(line: 175, column: 5, scope: !15813)
!15862 = !DILocation(line: 176, column: 12, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15810, file: !980, line: 176, column: 12)
!15864 = !DILocation(line: 176, column: 20, scope: !15863)
!15865 = !DILocation(line: 176, column: 17, scope: !15863)
!15866 = !DILocation(line: 176, column: 12, scope: !15810)
!15867 = !DILocation(line: 177, column: 28, scope: !15863)
!15868 = !DILocation(line: 177, column: 40, scope: !15863)
!15869 = !DILocation(line: 177, column: 45, scope: !15863)
!15870 = !DILocation(line: 177, column: 18, scope: !15863)
!15871 = !DILocation(line: 177, column: 16, scope: !15863)
!15872 = !DILocation(line: 177, column: 5, scope: !15863)
!15873 = !DILocation(line: 179, column: 3, scope: !15659)
!15874 = !DILocation(line: 179, column: 14, scope: !15659)
!15875 = !DILocation(line: 179, column: 20, scope: !15659)
!15876 = !DILocation(line: 180, column: 10, scope: !15659)
!15877 = !DILocation(line: 180, column: 3, scope: !15659)
!15878 = !DILocation(line: 181, column: 1, scope: !15659)
!15879 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !980, file: !980, line: 51, type: !988, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !967, retainedNodes: !298)
!15880 = !DILocalVariable(name: "a", arg: 1, scope: !15879, file: !980, line: 51, type: !831)
!15881 = !DILocation(line: 51, column: 32, scope: !15879)
!15882 = !DILocalVariable(name: "b", arg: 2, scope: !15879, file: !980, line: 51, type: !831)
!15883 = !DILocation(line: 51, column: 47, scope: !15879)
!15884 = !DILocalVariable(name: "dea", scope: !15879, file: !980, line: 53, type: !1002)
!15885 = !DILocation(line: 53, column: 21, scope: !15879)
!15886 = !DILocation(line: 53, column: 27, scope: !15879)
!15887 = !DILocalVariable(name: "deb", scope: !15879, file: !980, line: 54, type: !1002)
!15888 = !DILocation(line: 54, column: 21, scope: !15879)
!15889 = !DILocation(line: 54, column: 27, scope: !15879)
!15890 = !DILocation(line: 56, column: 18, scope: !15879)
!15891 = !DILocation(line: 56, column: 23, scope: !15879)
!15892 = !DILocation(line: 56, column: 29, scope: !15879)
!15893 = !DILocation(line: 56, column: 34, scope: !15879)
!15894 = !DILocation(line: 56, column: 10, scope: !15879)
!15895 = !DILocation(line: 56, column: 3, scope: !15879)
!15896 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !980, file: !980, line: 63, type: !988, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !967, retainedNodes: !298)
!15897 = !DILocalVariable(name: "a", arg: 1, scope: !15896, file: !980, line: 63, type: !831)
!15898 = !DILocation(line: 63, column: 33, scope: !15896)
!15899 = !DILocalVariable(name: "b", arg: 2, scope: !15896, file: !980, line: 63, type: !831)
!15900 = !DILocation(line: 63, column: 48, scope: !15896)
!15901 = !DILocalVariable(name: "dea", scope: !15896, file: !980, line: 65, type: !1002)
!15902 = !DILocation(line: 65, column: 21, scope: !15896)
!15903 = !DILocation(line: 65, column: 27, scope: !15896)
!15904 = !DILocalVariable(name: "deb", scope: !15896, file: !980, line: 66, type: !1002)
!15905 = !DILocation(line: 66, column: 21, scope: !15896)
!15906 = !DILocation(line: 66, column: 27, scope: !15896)
!15907 = !DILocation(line: 68, column: 10, scope: !15896)
!15908 = !DILocation(line: 68, column: 15, scope: !15896)
!15909 = !DILocation(line: 68, column: 21, scope: !15896)
!15910 = !DILocation(line: 68, column: 26, scope: !15896)
!15911 = !DILocation(line: 68, column: 19, scope: !15896)
!15912 = !DILocation(line: 68, column: 37, scope: !15896)
!15913 = !DILocation(line: 68, column: 42, scope: !15896)
!15914 = !DILocation(line: 68, column: 48, scope: !15896)
!15915 = !DILocation(line: 68, column: 53, scope: !15896)
!15916 = !DILocation(line: 68, column: 46, scope: !15896)
!15917 = !DILocation(line: 68, column: 3, scope: !15896)
!15918 = distinct !DISubprogram(name: "savedir", scope: !980, file: !980, line: 189, type: !15919, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !967, retainedNodes: !298)
!15919 = !DISubroutineType(types: !15920)
!15920 = !{!9, !183, !970}
!15921 = !DILocalVariable(name: "dir", arg: 1, scope: !15918, file: !980, line: 189, type: !183)
!15922 = !DILocation(line: 189, column: 22, scope: !15918)
!15923 = !DILocalVariable(name: "option", arg: 2, scope: !15918, file: !980, line: 189, type: !970)
!15924 = !DILocation(line: 189, column: 47, scope: !15918)
!15925 = !DILocalVariable(name: "dirp", scope: !15918, file: !980, line: 191, type: !662)
!15926 = !DILocation(line: 191, column: 8, scope: !15918)
!15927 = !DILocation(line: 191, column: 24, scope: !15918)
!15928 = !DILocation(line: 191, column: 15, scope: !15918)
!15929 = !DILocation(line: 192, column: 9, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15918, file: !980, line: 192, column: 7)
!15931 = !DILocation(line: 192, column: 7, scope: !15918)
!15932 = !DILocation(line: 193, column: 5, scope: !15930)
!15933 = !DILocalVariable(name: "name_space", scope: !15934, file: !980, line: 196, type: !9)
!15934 = distinct !DILexicalBlock(scope: !15930, file: !980, line: 195, column: 5)
!15935 = !DILocation(line: 196, column: 13, scope: !15934)
!15936 = !DILocation(line: 196, column: 41, scope: !15934)
!15937 = !DILocation(line: 196, column: 47, scope: !15934)
!15938 = !DILocation(line: 196, column: 26, scope: !15934)
!15939 = !DILocation(line: 197, column: 21, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15934, file: !980, line: 197, column: 11)
!15941 = !DILocation(line: 197, column: 11, scope: !15940)
!15942 = !DILocation(line: 197, column: 27, scope: !15940)
!15943 = !DILocation(line: 197, column: 11, scope: !15934)
!15944 = !DILocalVariable(name: "closedir_errno", scope: !15945, file: !980, line: 199, type: !7)
!15945 = distinct !DILexicalBlock(scope: !15940, file: !980, line: 198, column: 9)
!15946 = !DILocation(line: 199, column: 15, scope: !15945)
!15947 = !DILocation(line: 199, column: 32, scope: !15945)
!15948 = !DILocation(line: 200, column: 17, scope: !15945)
!15949 = !DILocation(line: 200, column: 11, scope: !15945)
!15950 = !DILocation(line: 201, column: 19, scope: !15945)
!15951 = !DILocation(line: 201, column: 11, scope: !15945)
!15952 = !DILocation(line: 201, column: 17, scope: !15945)
!15953 = !DILocation(line: 202, column: 11, scope: !15945)
!15954 = !DILocation(line: 204, column: 14, scope: !15934)
!15955 = !DILocation(line: 204, column: 7, scope: !15934)
!15956 = !DILocation(line: 206, column: 1, scope: !15918)
!15957 = distinct !DISubprogram(name: "savewd_init", scope: !101, file: !101, line: 79, type: !15958, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!15958 = !DISubroutineType(types: !15959)
!15959 = !{null, !15960}
!15960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!15961 = !DILocalVariable(name: "wd", arg: 1, scope: !15957, file: !101, line: 79, type: !15960)
!15962 = !DILocation(line: 79, column: 29, scope: !15957)
!15963 = !DILocation(line: 81, column: 3, scope: !15957)
!15964 = !DILocation(line: 81, column: 7, scope: !15957)
!15965 = !DILocation(line: 81, column: 13, scope: !15957)
!15966 = !DILocation(line: 82, column: 1, scope: !15957)
!15967 = distinct !DISubprogram(name: "savewd_errno", scope: !101, file: !101, line: 124, type: !15968, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!15968 = !DISubroutineType(types: !15969)
!15969 = !{!7, !15970}
!15970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15971, size: 64)
!15971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!15972 = !DILocalVariable(name: "wd", arg: 1, scope: !15967, file: !101, line: 124, type: !15970)
!15973 = !DILocation(line: 124, column: 36, scope: !15967)
!15974 = !DILocation(line: 126, column: 11, scope: !15967)
!15975 = !DILocation(line: 126, column: 15, scope: !15967)
!15976 = !DILocation(line: 126, column: 21, scope: !15967)
!15977 = !DILocation(line: 126, column: 38, scope: !15967)
!15978 = !DILocation(line: 126, column: 42, scope: !15967)
!15979 = !DILocation(line: 126, column: 46, scope: !15967)
!15980 = !DILocation(line: 126, column: 3, scope: !15967)
!15981 = distinct !DISubprogram(name: "savewd_chdir", scope: !15982, file: !15982, line: 106, type: !15983, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!15982 = !DIFile(filename: "lib/savewd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15983 = !DISubroutineType(types: !15984)
!15984 = !{!7, !15960, !183, !7, !227}
!15985 = !DILocalVariable(name: "wd", arg: 1, scope: !15981, file: !15982, line: 106, type: !15960)
!15986 = !DILocation(line: 106, column: 30, scope: !15981)
!15987 = !DILocalVariable(name: "dir", arg: 2, scope: !15981, file: !15982, line: 106, type: !183)
!15988 = !DILocation(line: 106, column: 46, scope: !15981)
!15989 = !DILocalVariable(name: "options", arg: 3, scope: !15981, file: !15982, line: 106, type: !7)
!15990 = !DILocation(line: 106, column: 55, scope: !15981)
!15991 = !DILocalVariable(name: "open_result", arg: 4, scope: !15981, file: !15982, line: 107, type: !227)
!15992 = !DILocation(line: 107, column: 19, scope: !15981)
!15993 = !DILocalVariable(name: "fd", scope: !15981, file: !15982, line: 109, type: !7)
!15994 = !DILocation(line: 109, column: 7, scope: !15981)
!15995 = !DILocalVariable(name: "result", scope: !15981, file: !15982, line: 110, type: !7)
!15996 = !DILocation(line: 110, column: 7, scope: !15981)
!15997 = !DILocation(line: 114, column: 7, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15981, file: !15982, line: 114, column: 7)
!15999 = !DILocation(line: 115, column: 7, scope: !15998)
!16000 = !DILocation(line: 115, column: 11, scope: !15998)
!16001 = !DILocation(line: 115, column: 19, scope: !15998)
!16002 = !DILocation(line: 114, column: 7, scope: !15981)
!16003 = !DILocation(line: 117, column: 18, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15998, file: !15982, line: 116, column: 5)
!16005 = !DILocation(line: 119, column: 22, scope: !16004)
!16006 = !DILocation(line: 119, column: 30, scope: !16004)
!16007 = !DILocation(line: 119, column: 19, scope: !16004)
!16008 = !DILocation(line: 117, column: 12, scope: !16004)
!16009 = !DILocation(line: 117, column: 10, scope: !16004)
!16010 = !DILocation(line: 121, column: 11, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !16004, file: !15982, line: 121, column: 11)
!16012 = !DILocation(line: 121, column: 11, scope: !16004)
!16013 = !DILocation(line: 123, column: 28, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16011, file: !15982, line: 122, column: 9)
!16015 = !DILocation(line: 123, column: 11, scope: !16014)
!16016 = !DILocation(line: 123, column: 26, scope: !16014)
!16017 = !DILocation(line: 124, column: 28, scope: !16014)
!16018 = !DILocation(line: 124, column: 11, scope: !16014)
!16019 = !DILocation(line: 124, column: 26, scope: !16014)
!16020 = !DILocation(line: 125, column: 9, scope: !16014)
!16021 = !DILocation(line: 127, column: 11, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16004, file: !15982, line: 127, column: 11)
!16023 = !DILocation(line: 127, column: 14, scope: !16022)
!16024 = !DILocation(line: 127, column: 18, scope: !16022)
!16025 = !DILocation(line: 127, column: 21, scope: !16022)
!16026 = !DILocation(line: 127, column: 27, scope: !16022)
!16027 = !DILocation(line: 127, column: 11, scope: !16004)
!16028 = !DILocation(line: 128, column: 16, scope: !16022)
!16029 = !DILocation(line: 128, column: 9, scope: !16022)
!16030 = !DILocation(line: 129, column: 5, scope: !16004)
!16031 = !DILocation(line: 131, column: 7, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !15981, file: !15982, line: 131, column: 7)
!16033 = !DILocation(line: 131, column: 14, scope: !16032)
!16034 = !DILocation(line: 131, column: 19, scope: !16032)
!16035 = !DILocation(line: 131, column: 30, scope: !16032)
!16036 = !DILocation(line: 131, column: 27, scope: !16032)
!16037 = !DILocation(line: 131, column: 33, scope: !16032)
!16038 = !DILocation(line: 131, column: 36, scope: !16032)
!16039 = !DILocation(line: 131, column: 44, scope: !16032)
!16040 = !DILocation(line: 131, column: 7, scope: !15981)
!16041 = !DILocation(line: 133, column: 24, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16043, file: !15982, line: 133, column: 11)
!16043 = distinct !DILexicalBlock(scope: !16032, file: !15982, line: 132, column: 5)
!16044 = !DILocation(line: 133, column: 11, scope: !16042)
!16045 = !DILocation(line: 133, column: 11, scope: !16043)
!16046 = !DILocation(line: 135, column: 23, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16042, file: !15982, line: 134, column: 9)
!16048 = !DILocation(line: 136, column: 18, scope: !16047)
!16049 = !DILocation(line: 137, column: 9, scope: !16047)
!16050 = !DILocation(line: 140, column: 21, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16042, file: !15982, line: 139, column: 9)
!16052 = !DILocation(line: 140, column: 24, scope: !16051)
!16053 = !DILocation(line: 140, column: 37, scope: !16051)
!16054 = !DILocation(line: 140, column: 30, scope: !16051)
!16055 = !DILocation(line: 140, column: 52, scope: !16051)
!16056 = !DILocation(line: 140, column: 44, scope: !16051)
!16057 = !DILocation(line: 140, column: 18, scope: !16051)
!16058 = !DILocation(line: 142, column: 15, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16051, file: !15982, line: 142, column: 15)
!16060 = !DILocation(line: 142, column: 22, scope: !16059)
!16061 = !DILocation(line: 142, column: 15, scope: !16051)
!16062 = !DILocation(line: 143, column: 21, scope: !16059)
!16063 = !DILocation(line: 143, column: 25, scope: !16059)
!16064 = !DILocation(line: 143, column: 13, scope: !16059)
!16065 = !DILocation(line: 146, column: 17, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16059, file: !15982, line: 144, column: 15)
!16067 = !DILocation(line: 146, column: 21, scope: !16066)
!16068 = !DILocation(line: 146, column: 27, scope: !16066)
!16069 = !DILocation(line: 147, column: 17, scope: !16066)
!16070 = !DILocation(line: 152, column: 17, scope: !16066)
!16071 = !DILocation(line: 155, column: 17, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !15982, line: 155, column: 17)
!16073 = distinct !DILexicalBlock(scope: !16066, file: !15982, line: 155, column: 17)
!16074 = !DILocation(line: 155, column: 17, scope: !16073)
!16075 = !DILocation(line: 156, column: 17, scope: !16066)
!16076 = !DILocation(line: 159, column: 17, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16078, file: !15982, line: 159, column: 17)
!16078 = distinct !DILexicalBlock(scope: !16066, file: !15982, line: 159, column: 17)
!16079 = !DILocation(line: 160, column: 15, scope: !16066)
!16080 = !DILocation(line: 162, column: 5, scope: !16043)
!16081 = !DILocation(line: 164, column: 12, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !15981, file: !15982, line: 164, column: 7)
!16083 = !DILocation(line: 164, column: 9, scope: !16082)
!16084 = !DILocation(line: 164, column: 15, scope: !16082)
!16085 = !DILocation(line: 164, column: 20, scope: !16082)
!16086 = !DILocation(line: 164, column: 7, scope: !15981)
!16087 = !DILocalVariable(name: "e", scope: !16088, file: !15982, line: 166, type: !7)
!16088 = distinct !DILexicalBlock(scope: !16082, file: !15982, line: 165, column: 5)
!16089 = !DILocation(line: 166, column: 11, scope: !16088)
!16090 = !DILocation(line: 166, column: 15, scope: !16088)
!16091 = !DILocation(line: 167, column: 14, scope: !16088)
!16092 = !DILocation(line: 167, column: 7, scope: !16088)
!16093 = !DILocation(line: 168, column: 15, scope: !16088)
!16094 = !DILocation(line: 168, column: 7, scope: !16088)
!16095 = !DILocation(line: 168, column: 13, scope: !16088)
!16096 = !DILocation(line: 169, column: 5, scope: !16088)
!16097 = !DILocation(line: 171, column: 10, scope: !15981)
!16098 = !DILocation(line: 171, column: 3, scope: !15981)
!16099 = distinct !DISubprogram(name: "savewd_save", scope: !15982, file: !15982, line: 51, type: !16100, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!16100 = !DISubroutineType(types: !16101)
!16101 = !{!142, !15960}
!16102 = !DILocalVariable(name: "wd", arg: 1, scope: !16099, file: !15982, line: 51, type: !15960)
!16103 = !DILocation(line: 51, column: 29, scope: !16099)
!16104 = !DILocation(line: 53, column: 11, scope: !16099)
!16105 = !DILocation(line: 53, column: 15, scope: !16099)
!16106 = !DILocation(line: 53, column: 3, scope: !16099)
!16107 = !DILocalVariable(name: "fd", scope: !16108, file: !15982, line: 58, type: !7)
!16108 = distinct !DILexicalBlock(scope: !16109, file: !15982, line: 57, column: 7)
!16109 = distinct !DILexicalBlock(scope: !16099, file: !15982, line: 54, column: 5)
!16110 = !DILocation(line: 58, column: 13, scope: !16108)
!16111 = !DILocation(line: 58, column: 18, scope: !16108)
!16112 = !DILocation(line: 59, column: 18, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16108, file: !15982, line: 59, column: 13)
!16114 = !DILocation(line: 59, column: 15, scope: !16113)
!16115 = !DILocation(line: 59, column: 13, scope: !16108)
!16116 = !DILocation(line: 61, column: 13, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16113, file: !15982, line: 60, column: 11)
!16118 = !DILocation(line: 61, column: 17, scope: !16117)
!16119 = !DILocation(line: 61, column: 23, scope: !16117)
!16120 = !DILocation(line: 62, column: 26, scope: !16117)
!16121 = !DILocation(line: 62, column: 13, scope: !16117)
!16122 = !DILocation(line: 62, column: 17, scope: !16117)
!16123 = !DILocation(line: 62, column: 21, scope: !16117)
!16124 = !DILocation(line: 62, column: 24, scope: !16117)
!16125 = !DILocation(line: 63, column: 13, scope: !16117)
!16126 = !DILocation(line: 65, column: 13, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16108, file: !15982, line: 65, column: 13)
!16128 = !DILocation(line: 65, column: 19, scope: !16127)
!16129 = !DILocation(line: 65, column: 29, scope: !16127)
!16130 = !DILocation(line: 65, column: 32, scope: !16127)
!16131 = !DILocation(line: 65, column: 38, scope: !16127)
!16132 = !DILocation(line: 65, column: 13, scope: !16108)
!16133 = !DILocation(line: 67, column: 13, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16127, file: !15982, line: 66, column: 11)
!16135 = !DILocation(line: 67, column: 17, scope: !16134)
!16136 = !DILocation(line: 67, column: 23, scope: !16134)
!16137 = !DILocation(line: 68, column: 30, scope: !16134)
!16138 = !DILocation(line: 68, column: 13, scope: !16134)
!16139 = !DILocation(line: 68, column: 17, scope: !16134)
!16140 = !DILocation(line: 68, column: 21, scope: !16134)
!16141 = !DILocation(line: 68, column: 28, scope: !16134)
!16142 = !DILocation(line: 69, column: 13, scope: !16134)
!16143 = !DILocation(line: 72, column: 7, scope: !16109)
!16144 = !DILocation(line: 72, column: 11, scope: !16109)
!16145 = !DILocation(line: 72, column: 17, scope: !16109)
!16146 = !DILocation(line: 73, column: 7, scope: !16109)
!16147 = !DILocation(line: 73, column: 11, scope: !16109)
!16148 = !DILocation(line: 73, column: 15, scope: !16109)
!16149 = !DILocation(line: 73, column: 21, scope: !16109)
!16150 = !DILocation(line: 74, column: 7, scope: !16109)
!16151 = !DILocation(line: 76, column: 11, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16109, file: !15982, line: 76, column: 11)
!16153 = !DILocation(line: 76, column: 15, scope: !16152)
!16154 = !DILocation(line: 76, column: 19, scope: !16152)
!16155 = !DILocation(line: 76, column: 25, scope: !16152)
!16156 = !DILocation(line: 76, column: 11, scope: !16109)
!16157 = !DILocation(line: 81, column: 27, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16152, file: !15982, line: 77, column: 9)
!16159 = !DILocation(line: 81, column: 11, scope: !16158)
!16160 = !DILocation(line: 81, column: 15, scope: !16158)
!16161 = !DILocation(line: 81, column: 19, scope: !16158)
!16162 = !DILocation(line: 81, column: 25, scope: !16158)
!16163 = !DILocation(line: 82, column: 15, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16158, file: !15982, line: 82, column: 15)
!16165 = !DILocation(line: 82, column: 19, scope: !16164)
!16166 = !DILocation(line: 82, column: 23, scope: !16164)
!16167 = !DILocation(line: 82, column: 29, scope: !16164)
!16168 = !DILocation(line: 82, column: 15, scope: !16158)
!16169 = !DILocation(line: 84, column: 23, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16171, file: !15982, line: 84, column: 19)
!16171 = distinct !DILexicalBlock(scope: !16164, file: !15982, line: 83, column: 13)
!16172 = !DILocation(line: 84, column: 27, scope: !16170)
!16173 = !DILocation(line: 84, column: 31, scope: !16170)
!16174 = !DILocation(line: 84, column: 21, scope: !16170)
!16175 = !DILocation(line: 84, column: 19, scope: !16171)
!16176 = !DILocation(line: 85, column: 17, scope: !16170)
!16177 = !DILocation(line: 86, column: 15, scope: !16171)
!16178 = !DILocation(line: 86, column: 19, scope: !16171)
!16179 = !DILocation(line: 86, column: 25, scope: !16171)
!16180 = !DILocation(line: 87, column: 32, scope: !16171)
!16181 = !DILocation(line: 87, column: 15, scope: !16171)
!16182 = !DILocation(line: 87, column: 19, scope: !16171)
!16183 = !DILocation(line: 87, column: 23, scope: !16171)
!16184 = !DILocation(line: 87, column: 30, scope: !16171)
!16185 = !DILocation(line: 88, column: 13, scope: !16171)
!16186 = !DILocation(line: 89, column: 9, scope: !16158)
!16187 = !DILocation(line: 90, column: 7, scope: !16109)
!16188 = !DILocation(line: 96, column: 7, scope: !16109)
!16189 = !DILocation(line: 99, column: 7, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !15982, line: 99, column: 7)
!16191 = distinct !DILexicalBlock(scope: !16109, file: !15982, line: 99, column: 7)
!16192 = !DILocation(line: 102, column: 3, scope: !16099)
!16193 = !DILocation(line: 103, column: 1, scope: !16099)
!16194 = distinct !DISubprogram(name: "savewd_restore", scope: !15982, file: !15982, line: 175, type: !16195, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{!7, !15960, !7}
!16197 = !DILocalVariable(name: "wd", arg: 1, scope: !16194, file: !15982, line: 175, type: !15960)
!16198 = !DILocation(line: 175, column: 32, scope: !16194)
!16199 = !DILocalVariable(name: "status", arg: 2, scope: !16194, file: !15982, line: 175, type: !7)
!16200 = !DILocation(line: 175, column: 40, scope: !16194)
!16201 = !DILocation(line: 177, column: 11, scope: !16194)
!16202 = !DILocation(line: 177, column: 15, scope: !16194)
!16203 = !DILocation(line: 177, column: 3, scope: !16194)
!16204 = !DILocation(line: 183, column: 7, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16194, file: !15982, line: 178, column: 5)
!16206 = !DILocation(line: 187, column: 19, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16205, file: !15982, line: 187, column: 11)
!16208 = !DILocation(line: 187, column: 23, scope: !16207)
!16209 = !DILocation(line: 187, column: 27, scope: !16207)
!16210 = !DILocation(line: 187, column: 11, scope: !16207)
!16211 = !DILocation(line: 187, column: 31, scope: !16207)
!16212 = !DILocation(line: 187, column: 11, scope: !16205)
!16213 = !DILocation(line: 189, column: 11, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16207, file: !15982, line: 188, column: 9)
!16215 = !DILocation(line: 189, column: 15, scope: !16214)
!16216 = !DILocation(line: 189, column: 21, scope: !16214)
!16217 = !DILocation(line: 190, column: 11, scope: !16214)
!16218 = !DILocalVariable(name: "chdir_errno", scope: !16219, file: !15982, line: 194, type: !7)
!16219 = distinct !DILexicalBlock(scope: !16207, file: !15982, line: 193, column: 9)
!16220 = !DILocation(line: 194, column: 15, scope: !16219)
!16221 = !DILocation(line: 194, column: 29, scope: !16219)
!16222 = !DILocation(line: 195, column: 18, scope: !16219)
!16223 = !DILocation(line: 195, column: 22, scope: !16219)
!16224 = !DILocation(line: 195, column: 26, scope: !16219)
!16225 = !DILocation(line: 195, column: 11, scope: !16219)
!16226 = !DILocation(line: 196, column: 11, scope: !16219)
!16227 = !DILocation(line: 196, column: 15, scope: !16219)
!16228 = !DILocation(line: 196, column: 21, scope: !16219)
!16229 = !DILocation(line: 197, column: 28, scope: !16219)
!16230 = !DILocation(line: 197, column: 11, scope: !16219)
!16231 = !DILocation(line: 197, column: 15, scope: !16219)
!16232 = !DILocation(line: 197, column: 19, scope: !16219)
!16233 = !DILocation(line: 197, column: 26, scope: !16219)
!16234 = !DILocation(line: 199, column: 7, scope: !16205)
!16235 = !DILocation(line: 202, column: 15, scope: !16205)
!16236 = !DILocation(line: 202, column: 19, scope: !16205)
!16237 = !DILocation(line: 202, column: 23, scope: !16205)
!16238 = !DILocation(line: 202, column: 7, scope: !16205)
!16239 = !DILocation(line: 202, column: 13, scope: !16205)
!16240 = !DILocation(line: 203, column: 7, scope: !16205)
!16241 = !DILocalVariable(name: "child", scope: !16242, file: !15982, line: 209, type: !111)
!16242 = distinct !DILexicalBlock(scope: !16205, file: !15982, line: 208, column: 7)
!16243 = !DILocation(line: 209, column: 15, scope: !16242)
!16244 = !DILocation(line: 209, column: 23, scope: !16242)
!16245 = !DILocation(line: 209, column: 27, scope: !16242)
!16246 = !DILocation(line: 209, column: 31, scope: !16242)
!16247 = !DILocation(line: 210, column: 13, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16242, file: !15982, line: 210, column: 13)
!16249 = !DILocation(line: 210, column: 19, scope: !16248)
!16250 = !DILocation(line: 210, column: 13, scope: !16242)
!16251 = !DILocation(line: 211, column: 18, scope: !16248)
!16252 = !DILocation(line: 211, column: 11, scope: !16248)
!16253 = !DILocation(line: 212, column: 17, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16242, file: !15982, line: 212, column: 13)
!16255 = !DILocation(line: 212, column: 15, scope: !16254)
!16256 = !DILocation(line: 212, column: 13, scope: !16242)
!16257 = !DILocalVariable(name: "child_status", scope: !16258, file: !15982, line: 214, type: !7)
!16258 = distinct !DILexicalBlock(scope: !16254, file: !15982, line: 213, column: 11)
!16259 = !DILocation(line: 214, column: 17, scope: !16258)
!16260 = !DILocation(line: 215, column: 13, scope: !16258)
!16261 = !DILocation(line: 215, column: 29, scope: !16258)
!16262 = !DILocation(line: 215, column: 20, scope: !16258)
!16263 = !DILocation(line: 215, column: 54, scope: !16258)
!16264 = !DILocation(line: 216, column: 15, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !15982, line: 216, column: 15)
!16266 = distinct !DILexicalBlock(scope: !16258, file: !15982, line: 216, column: 15)
!16267 = !DILocation(line: 216, column: 15, scope: !16266)
!16268 = distinct !{!16268, !16260, !16269}
!16269 = !DILocation(line: 216, column: 15, scope: !16258)
!16270 = !DILocation(line: 217, column: 13, scope: !16258)
!16271 = !DILocation(line: 217, column: 17, scope: !16258)
!16272 = !DILocation(line: 217, column: 21, scope: !16258)
!16273 = !DILocation(line: 217, column: 27, scope: !16258)
!16274 = !DILocation(line: 218, column: 19, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16258, file: !15982, line: 218, column: 17)
!16276 = !DILocation(line: 218, column: 17, scope: !16258)
!16277 = !DILocation(line: 219, column: 22, scope: !16275)
!16278 = !DILocation(line: 219, column: 15, scope: !16275)
!16279 = !DILocation(line: 220, column: 20, scope: !16258)
!16280 = !DILocation(line: 220, column: 13, scope: !16258)
!16281 = !DILocation(line: 223, column: 7, scope: !16205)
!16282 = !DILocation(line: 226, column: 7, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16284, file: !15982, line: 226, column: 7)
!16284 = distinct !DILexicalBlock(scope: !16205, file: !15982, line: 226, column: 7)
!16285 = !DILocation(line: 229, column: 3, scope: !16194)
!16286 = !DILocation(line: 230, column: 1, scope: !16194)
!16287 = distinct !DISubprogram(name: "savewd_finish", scope: !15982, file: !15982, line: 233, type: !15958, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!16288 = !DILocalVariable(name: "wd", arg: 1, scope: !16287, file: !15982, line: 233, type: !15960)
!16289 = !DILocation(line: 233, column: 31, scope: !16287)
!16290 = !DILocation(line: 235, column: 11, scope: !16287)
!16291 = !DILocation(line: 235, column: 15, scope: !16287)
!16292 = !DILocation(line: 235, column: 3, scope: !16287)
!16293 = !DILocation(line: 239, column: 7, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16287, file: !15982, line: 236, column: 5)
!16295 = !DILocation(line: 243, column: 14, scope: !16294)
!16296 = !DILocation(line: 243, column: 18, scope: !16294)
!16297 = !DILocation(line: 243, column: 22, scope: !16294)
!16298 = !DILocation(line: 243, column: 7, scope: !16294)
!16299 = !DILocation(line: 244, column: 7, scope: !16294)
!16300 = !DILocation(line: 247, column: 7, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16302, file: !15982, line: 247, column: 7)
!16302 = distinct !DILexicalBlock(scope: !16294, file: !15982, line: 247, column: 7)
!16303 = !DILocation(line: 247, column: 7, scope: !16302)
!16304 = !DILocation(line: 248, column: 7, scope: !16294)
!16305 = !DILocation(line: 251, column: 7, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16307, file: !15982, line: 251, column: 7)
!16307 = distinct !DILexicalBlock(scope: !16294, file: !15982, line: 251, column: 7)
!16308 = !DILocation(line: 254, column: 3, scope: !16287)
!16309 = !DILocation(line: 254, column: 7, scope: !16287)
!16310 = !DILocation(line: 254, column: 13, scope: !16287)
!16311 = !DILocation(line: 255, column: 1, scope: !16287)
!16312 = distinct !DISubprogram(name: "savewd_process_files", scope: !15982, file: !15982, line: 274, type: !16313, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!16313 = !DISubroutineType(types: !16314)
!16314 = !{!7, !7, !209, !16315, !53}
!16315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16316, size: 64)
!16316 = !DISubroutineType(types: !16317)
!16317 = !{!7, !9, !15960, !53}
!16318 = !DILocalVariable(name: "n_files", arg: 1, scope: !16312, file: !15982, line: 274, type: !7)
!16319 = !DILocation(line: 274, column: 27, scope: !16312)
!16320 = !DILocalVariable(name: "file", arg: 2, scope: !16312, file: !15982, line: 274, type: !209)
!16321 = !DILocation(line: 274, column: 43, scope: !16312)
!16322 = !DILocalVariable(name: "act", arg: 3, scope: !16312, file: !15982, line: 275, type: !16315)
!16323 = !DILocation(line: 275, column: 29, scope: !16312)
!16324 = !DILocalVariable(name: "options", arg: 4, scope: !16312, file: !15982, line: 276, type: !53)
!16325 = !DILocation(line: 276, column: 29, scope: !16312)
!16326 = !DILocalVariable(name: "i", scope: !16312, file: !15982, line: 278, type: !7)
!16327 = !DILocation(line: 278, column: 7, scope: !16312)
!16328 = !DILocalVariable(name: "last_relative", scope: !16312, file: !15982, line: 279, type: !7)
!16329 = !DILocation(line: 279, column: 7, scope: !16312)
!16330 = !DILocalVariable(name: "exit_status", scope: !16312, file: !15982, line: 280, type: !7)
!16331 = !DILocation(line: 280, column: 7, scope: !16312)
!16332 = !DILocalVariable(name: "wd", scope: !16312, file: !15982, line: 281, type: !1381)
!16333 = !DILocation(line: 281, column: 17, scope: !16312)
!16334 = !DILocation(line: 282, column: 3, scope: !16312)
!16335 = !DILocation(line: 284, column: 24, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16312, file: !15982, line: 284, column: 3)
!16337 = !DILocation(line: 284, column: 32, scope: !16336)
!16338 = !DILocation(line: 284, column: 22, scope: !16336)
!16339 = !DILocation(line: 284, column: 8, scope: !16336)
!16340 = !DILocation(line: 284, column: 42, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16336, file: !15982, line: 284, column: 3)
!16342 = !DILocation(line: 284, column: 39, scope: !16341)
!16343 = !DILocation(line: 284, column: 3, scope: !16336)
!16344 = !DILocation(line: 285, column: 11, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16341, file: !15982, line: 285, column: 9)
!16346 = !DILocation(line: 285, column: 9, scope: !16341)
!16347 = !DILocation(line: 286, column: 7, scope: !16345)
!16348 = !DILocation(line: 284, column: 70, scope: !16341)
!16349 = !DILocation(line: 284, column: 3, scope: !16341)
!16350 = distinct !{!16350, !16343, !16351}
!16351 = !DILocation(line: 286, column: 7, scope: !16336)
!16352 = !DILocation(line: 288, column: 3, scope: !16312)
!16353 = !DILocation(line: 288, column: 10, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16355, file: !15982, line: 288, column: 3)
!16355 = distinct !DILexicalBlock(scope: !16312, file: !15982, line: 288, column: 3)
!16356 = !DILocation(line: 288, column: 14, scope: !16354)
!16357 = !DILocation(line: 288, column: 12, scope: !16354)
!16358 = !DILocation(line: 288, column: 3, scope: !16355)
!16359 = !DILocation(line: 290, column: 13, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16361, file: !15982, line: 290, column: 11)
!16361 = distinct !DILexicalBlock(scope: !16354, file: !15982, line: 289, column: 5)
!16362 = !DILocation(line: 290, column: 11, scope: !16361)
!16363 = !DILocalVariable(name: "s", scope: !16364, file: !15982, line: 292, type: !7)
!16364 = distinct !DILexicalBlock(scope: !16360, file: !15982, line: 291, column: 9)
!16365 = !DILocation(line: 292, column: 15, scope: !16364)
!16366 = !DILocation(line: 292, column: 19, scope: !16364)
!16367 = !DILocation(line: 292, column: 24, scope: !16364)
!16368 = !DILocation(line: 292, column: 29, scope: !16364)
!16369 = !DILocation(line: 292, column: 38, scope: !16364)
!16370 = !DILocation(line: 293, column: 15, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16364, file: !15982, line: 293, column: 15)
!16372 = !DILocation(line: 293, column: 29, scope: !16371)
!16373 = !DILocation(line: 293, column: 27, scope: !16371)
!16374 = !DILocation(line: 293, column: 15, scope: !16364)
!16375 = !DILocation(line: 294, column: 27, scope: !16371)
!16376 = !DILocation(line: 294, column: 25, scope: !16371)
!16377 = !DILocation(line: 294, column: 13, scope: !16371)
!16378 = !DILocation(line: 295, column: 9, scope: !16364)
!16379 = !DILocation(line: 297, column: 13, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16361, file: !15982, line: 297, column: 11)
!16381 = !DILocation(line: 297, column: 11, scope: !16361)
!16382 = !DILocalVariable(name: "r", scope: !16383, file: !15982, line: 299, type: !7)
!16383 = distinct !DILexicalBlock(scope: !16380, file: !15982, line: 298, column: 9)
!16384 = !DILocation(line: 299, column: 15, scope: !16383)
!16385 = !DILocation(line: 299, column: 40, scope: !16383)
!16386 = !DILocation(line: 299, column: 19, scope: !16383)
!16387 = !DILocation(line: 300, column: 15, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16383, file: !15982, line: 300, column: 15)
!16389 = !DILocation(line: 300, column: 29, scope: !16388)
!16390 = !DILocation(line: 300, column: 27, scope: !16388)
!16391 = !DILocation(line: 300, column: 15, scope: !16383)
!16392 = !DILocation(line: 301, column: 27, scope: !16388)
!16393 = !DILocation(line: 301, column: 25, scope: !16388)
!16394 = !DILocation(line: 301, column: 13, scope: !16388)
!16395 = !DILocation(line: 302, column: 9, scope: !16383)
!16396 = !DILocation(line: 303, column: 5, scope: !16361)
!16397 = !DILocation(line: 288, column: 30, scope: !16354)
!16398 = !DILocation(line: 288, column: 3, scope: !16354)
!16399 = distinct !{!16399, !16358, !16400}
!16400 = !DILocation(line: 303, column: 5, scope: !16355)
!16401 = !DILocation(line: 305, column: 3, scope: !16312)
!16402 = !DILocation(line: 307, column: 3, scope: !16312)
!16403 = !DILocation(line: 307, column: 10, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !15982, line: 307, column: 3)
!16405 = distinct !DILexicalBlock(scope: !16312, file: !15982, line: 307, column: 3)
!16406 = !DILocation(line: 307, column: 14, scope: !16404)
!16407 = !DILocation(line: 307, column: 12, scope: !16404)
!16408 = !DILocation(line: 307, column: 3, scope: !16405)
!16409 = !DILocalVariable(name: "s", scope: !16410, file: !15982, line: 309, type: !7)
!16410 = distinct !DILexicalBlock(scope: !16404, file: !15982, line: 308, column: 5)
!16411 = !DILocation(line: 309, column: 11, scope: !16410)
!16412 = !DILocation(line: 309, column: 15, scope: !16410)
!16413 = !DILocation(line: 309, column: 20, scope: !16410)
!16414 = !DILocation(line: 309, column: 25, scope: !16410)
!16415 = !DILocation(line: 309, column: 34, scope: !16410)
!16416 = !DILocation(line: 310, column: 11, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16410, file: !15982, line: 310, column: 11)
!16418 = !DILocation(line: 310, column: 25, scope: !16417)
!16419 = !DILocation(line: 310, column: 23, scope: !16417)
!16420 = !DILocation(line: 310, column: 11, scope: !16410)
!16421 = !DILocation(line: 311, column: 23, scope: !16417)
!16422 = !DILocation(line: 311, column: 21, scope: !16417)
!16423 = !DILocation(line: 311, column: 9, scope: !16417)
!16424 = !DILocation(line: 312, column: 5, scope: !16410)
!16425 = !DILocation(line: 307, column: 24, scope: !16404)
!16426 = !DILocation(line: 307, column: 3, scope: !16404)
!16427 = distinct !{!16427, !16408, !16428}
!16428 = !DILocation(line: 312, column: 5, scope: !16405)
!16429 = !DILocation(line: 314, column: 10, scope: !16312)
!16430 = !DILocation(line: 314, column: 3, scope: !16312)
!16431 = distinct !DISubprogram(name: "savewd_delegating", scope: !15982, file: !15982, line: 268, type: !16432, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1377, retainedNodes: !298)
!16432 = !DISubroutineType(types: !16433)
!16433 = !{!142, !15970}
!16434 = !DILocalVariable(name: "wd", arg: 1, scope: !16431, file: !15982, line: 268, type: !15970)
!16435 = !DILocation(line: 268, column: 41, scope: !16431)
!16436 = !DILocation(line: 270, column: 10, scope: !16431)
!16437 = !DILocation(line: 270, column: 14, scope: !16431)
!16438 = !DILocation(line: 270, column: 20, scope: !16431)
!16439 = !DILocation(line: 270, column: 37, scope: !16431)
!16440 = !DILocation(line: 270, column: 44, scope: !16431)
!16441 = !DILocation(line: 270, column: 48, scope: !16431)
!16442 = !DILocation(line: 270, column: 52, scope: !16431)
!16443 = !DILocation(line: 270, column: 42, scope: !16431)
!16444 = !DILocation(line: 0, scope: !16431)
!16445 = !DILocation(line: 270, column: 3, scope: !16431)
!16446 = distinct !DISubprogram(name: "getcon", scope: !16447, file: !16447, line: 87, type: !16448, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16447 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!7, !16450}
!16450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16451, size: 64)
!16451 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !16447, line: 83, baseType: !9)
!16452 = !DILocalVariable(name: "con", arg: 1, scope: !16446, file: !16447, line: 87, type: !16450)
!16453 = !DILocation(line: 87, column: 29, scope: !16446)
!16454 = !DILocation(line: 88, column: 5, scope: !16446)
!16455 = !DILocation(line: 88, column: 11, scope: !16446)
!16456 = !DILocation(line: 88, column: 22, scope: !16446)
!16457 = distinct !DISubprogram(name: "freecon", scope: !16447, file: !16447, line: 90, type: !16458, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16458 = !DISubroutineType(types: !16459)
!16459 = !{null, !16451}
!16460 = !DILocalVariable(name: "con", arg: 1, scope: !16457, file: !16447, line: 90, type: !16451)
!16461 = !DILocation(line: 90, column: 29, scope: !16457)
!16462 = !DILocation(line: 90, column: 56, scope: !16457)
!16463 = distinct !DISubprogram(name: "getfscreatecon", scope: !16447, file: !16447, line: 93, type: !16448, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16464 = !DILocalVariable(name: "con", arg: 1, scope: !16463, file: !16447, line: 93, type: !16450)
!16465 = !DILocation(line: 93, column: 37, scope: !16463)
!16466 = !DILocation(line: 94, column: 5, scope: !16463)
!16467 = !DILocation(line: 94, column: 11, scope: !16463)
!16468 = !DILocation(line: 94, column: 22, scope: !16463)
!16469 = distinct !DISubprogram(name: "setfscreatecon", scope: !16447, file: !16447, line: 96, type: !16470, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16470 = !DISubroutineType(types: !16471)
!16471 = !{!7, !16451}
!16472 = !DILocalVariable(name: "con", arg: 1, scope: !16469, file: !16447, line: 96, type: !16451)
!16473 = !DILocation(line: 96, column: 36, scope: !16469)
!16474 = !DILocation(line: 97, column: 5, scope: !16469)
!16475 = !DILocation(line: 97, column: 11, scope: !16469)
!16476 = !DILocation(line: 97, column: 22, scope: !16469)
!16477 = distinct !DISubprogram(name: "matchpathcon", scope: !16447, file: !16447, line: 99, type: !16478, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16478 = !DISubroutineType(types: !16479)
!16479 = !{!7, !183, !139, !16450}
!16480 = !DILocalVariable(name: "file", arg: 1, scope: !16477, file: !16447, line: 99, type: !183)
!16481 = !DILocation(line: 99, column: 27, scope: !16477)
!16482 = !DILocalVariable(name: "m", arg: 2, scope: !16477, file: !16447, line: 100, type: !139)
!16483 = !DILocation(line: 100, column: 22, scope: !16477)
!16484 = !DILocalVariable(name: "con", arg: 3, scope: !16477, file: !16447, line: 101, type: !16450)
!16485 = !DILocation(line: 101, column: 23, scope: !16477)
!16486 = !DILocation(line: 102, column: 5, scope: !16477)
!16487 = !DILocation(line: 102, column: 11, scope: !16477)
!16488 = !DILocation(line: 102, column: 22, scope: !16477)
!16489 = distinct !DISubprogram(name: "getfilecon", scope: !16447, file: !16447, line: 104, type: !16490, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16490 = !DISubroutineType(types: !16491)
!16491 = !{!7, !183, !16450}
!16492 = !DILocalVariable(name: "file", arg: 1, scope: !16489, file: !16447, line: 104, type: !183)
!16493 = !DILocation(line: 104, column: 25, scope: !16489)
!16494 = !DILocalVariable(name: "con", arg: 2, scope: !16489, file: !16447, line: 105, type: !16450)
!16495 = !DILocation(line: 105, column: 33, scope: !16489)
!16496 = !DILocation(line: 106, column: 5, scope: !16489)
!16497 = !DILocation(line: 106, column: 11, scope: !16489)
!16498 = !DILocation(line: 106, column: 22, scope: !16489)
!16499 = distinct !DISubprogram(name: "lgetfilecon", scope: !16447, file: !16447, line: 108, type: !16490, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16500 = !DILocalVariable(name: "file", arg: 1, scope: !16499, file: !16447, line: 108, type: !183)
!16501 = !DILocation(line: 108, column: 26, scope: !16499)
!16502 = !DILocalVariable(name: "con", arg: 2, scope: !16499, file: !16447, line: 109, type: !16450)
!16503 = !DILocation(line: 109, column: 34, scope: !16499)
!16504 = !DILocation(line: 110, column: 5, scope: !16499)
!16505 = !DILocation(line: 110, column: 11, scope: !16499)
!16506 = !DILocation(line: 110, column: 22, scope: !16499)
!16507 = distinct !DISubprogram(name: "fgetfilecon", scope: !16447, file: !16447, line: 112, type: !16508, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16508 = !DISubroutineType(types: !16509)
!16509 = !{!7, !7, !16450}
!16510 = !DILocalVariable(name: "fd", arg: 1, scope: !16507, file: !16447, line: 112, type: !7)
!16511 = !DILocation(line: 112, column: 18, scope: !16507)
!16512 = !DILocalVariable(name: "con", arg: 2, scope: !16507, file: !16447, line: 112, type: !16450)
!16513 = !DILocation(line: 112, column: 42, scope: !16507)
!16514 = !DILocation(line: 113, column: 5, scope: !16507)
!16515 = !DILocation(line: 113, column: 11, scope: !16507)
!16516 = !DILocation(line: 113, column: 22, scope: !16507)
!16517 = distinct !DISubprogram(name: "setfilecon", scope: !16447, file: !16447, line: 115, type: !16518, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16518 = !DISubroutineType(types: !16519)
!16519 = !{!7, !183, !16451}
!16520 = !DILocalVariable(name: "file", arg: 1, scope: !16517, file: !16447, line: 115, type: !183)
!16521 = !DILocation(line: 115, column: 25, scope: !16517)
!16522 = !DILocalVariable(name: "con", arg: 2, scope: !16517, file: !16447, line: 116, type: !16451)
!16523 = !DILocation(line: 116, column: 32, scope: !16517)
!16524 = !DILocation(line: 117, column: 5, scope: !16517)
!16525 = !DILocation(line: 117, column: 11, scope: !16517)
!16526 = !DILocation(line: 117, column: 22, scope: !16517)
!16527 = distinct !DISubprogram(name: "lsetfilecon", scope: !16447, file: !16447, line: 119, type: !16518, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16528 = !DILocalVariable(name: "file", arg: 1, scope: !16527, file: !16447, line: 119, type: !183)
!16529 = !DILocation(line: 119, column: 26, scope: !16527)
!16530 = !DILocalVariable(name: "con", arg: 2, scope: !16527, file: !16447, line: 120, type: !16451)
!16531 = !DILocation(line: 120, column: 33, scope: !16527)
!16532 = !DILocation(line: 121, column: 5, scope: !16527)
!16533 = !DILocation(line: 121, column: 11, scope: !16527)
!16534 = !DILocation(line: 121, column: 22, scope: !16527)
!16535 = distinct !DISubprogram(name: "fsetfilecon", scope: !16447, file: !16447, line: 123, type: !16536, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16536 = !DISubroutineType(types: !16537)
!16537 = !{!7, !7, !16451}
!16538 = !DILocalVariable(name: "fd", arg: 1, scope: !16535, file: !16447, line: 123, type: !7)
!16539 = !DILocation(line: 123, column: 18, scope: !16535)
!16540 = !DILocalVariable(name: "con", arg: 2, scope: !16535, file: !16447, line: 124, type: !16451)
!16541 = !DILocation(line: 124, column: 33, scope: !16535)
!16542 = !DILocation(line: 125, column: 5, scope: !16535)
!16543 = !DILocation(line: 125, column: 11, scope: !16535)
!16544 = !DILocation(line: 125, column: 22, scope: !16535)
!16545 = distinct !DISubprogram(name: "security_check_context", scope: !16447, file: !16447, line: 128, type: !16470, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16546 = !DILocalVariable(name: "con", arg: 1, scope: !16545, file: !16447, line: 128, type: !16451)
!16547 = !DILocation(line: 128, column: 44, scope: !16545)
!16548 = !DILocation(line: 129, column: 5, scope: !16545)
!16549 = !DILocation(line: 129, column: 11, scope: !16545)
!16550 = !DILocation(line: 129, column: 22, scope: !16545)
!16551 = distinct !DISubprogram(name: "security_check_context_raw", scope: !16447, file: !16447, line: 131, type: !16470, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16552 = !DILocalVariable(name: "con", arg: 1, scope: !16551, file: !16447, line: 131, type: !16451)
!16553 = !DILocation(line: 131, column: 48, scope: !16551)
!16554 = !DILocation(line: 132, column: 5, scope: !16551)
!16555 = !DILocation(line: 132, column: 11, scope: !16551)
!16556 = !DILocation(line: 132, column: 22, scope: !16551)
!16557 = distinct !DISubprogram(name: "setexeccon", scope: !16447, file: !16447, line: 134, type: !16470, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16558 = !DILocalVariable(name: "con", arg: 1, scope: !16557, file: !16447, line: 134, type: !16451)
!16559 = !DILocation(line: 134, column: 32, scope: !16557)
!16560 = !DILocation(line: 135, column: 5, scope: !16557)
!16561 = !DILocation(line: 135, column: 11, scope: !16557)
!16562 = !DILocation(line: 135, column: 22, scope: !16557)
!16563 = distinct !DISubprogram(name: "security_compute_create", scope: !16447, file: !16447, line: 137, type: !16564, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16564 = !DISubroutineType(types: !16565)
!16565 = !{!7, !16451, !16451, !16566, !16450}
!16566 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !16447, line: 82, baseType: !33)
!16567 = !DILocalVariable(name: "scon", arg: 1, scope: !16563, file: !16447, line: 137, type: !16451)
!16568 = !DILocation(line: 137, column: 45, scope: !16563)
!16569 = !DILocalVariable(name: "tcon", arg: 2, scope: !16563, file: !16447, line: 138, type: !16451)
!16570 = !DILocation(line: 138, column: 45, scope: !16563)
!16571 = !DILocalVariable(name: "tclass", arg: 3, scope: !16563, file: !16447, line: 139, type: !16566)
!16572 = !DILocation(line: 139, column: 43, scope: !16563)
!16573 = !DILocalVariable(name: "newcon", arg: 4, scope: !16563, file: !16447, line: 140, type: !16450)
!16574 = !DILocation(line: 140, column: 46, scope: !16563)
!16575 = !DILocation(line: 141, column: 5, scope: !16563)
!16576 = !DILocation(line: 141, column: 11, scope: !16563)
!16577 = !DILocation(line: 141, column: 22, scope: !16563)
!16578 = distinct !DISubprogram(name: "string_to_security_class", scope: !16447, file: !16447, line: 143, type: !16579, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{!16566, !183}
!16581 = !DILocalVariable(name: "name", arg: 1, scope: !16578, file: !16447, line: 143, type: !183)
!16582 = !DILocation(line: 143, column: 39, scope: !16578)
!16583 = !DILocation(line: 144, column: 5, scope: !16578)
!16584 = !DILocation(line: 144, column: 11, scope: !16578)
!16585 = !DILocation(line: 144, column: 22, scope: !16578)
!16586 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !16447, file: !16447, line: 146, type: !16587, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !298)
!16587 = !DISubroutineType(types: !16588)
!16588 = !{!7, !183, !183}
!16589 = !DILocalVariable(name: "path", arg: 1, scope: !16586, file: !16447, line: 146, type: !183)
!16590 = !DILocation(line: 146, column: 39, scope: !16586)
!16591 = !DILocalVariable(name: "prefix", arg: 2, scope: !16586, file: !16447, line: 147, type: !183)
!16592 = !DILocation(line: 147, column: 39, scope: !16586)
!16593 = !DILocation(line: 148, column: 5, scope: !16586)
!16594 = !DILocation(line: 148, column: 11, scope: !16586)
!16595 = !DILocation(line: 148, column: 22, scope: !16586)
!16596 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16597, file: !16597, line: 66, type: !16598, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16597 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16598 = !DISubroutineType(types: !16599)
!16599 = !{!31, !16600}
!16600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16601, size: 64)
!16601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16602)
!16602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !16603)
!16603 = !{!16604, !16605, !16606, !16607, !16608, !16609, !16610, !16611, !16612, !16613, !16614, !16615, !16620, !16621, !16622}
!16604 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16602, file: !463, line: 48, baseType: !452, size: 64)
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16602, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16602, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16602, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!16608 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16602, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!16609 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16602, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!16610 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16602, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!16611 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16602, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!16612 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16602, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!16613 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16602, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!16614 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16602, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!16615 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16602, file: !463, line: 91, baseType: !16616, size: 128, offset: 576)
!16616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !16617)
!16617 = !{!16618, !16619}
!16618 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16616, file: !365, line: 11, baseType: !368, size: 64)
!16619 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16616, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!16620 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16602, file: !463, line: 92, baseType: !16616, size: 128, offset: 704)
!16621 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16602, file: !463, line: 93, baseType: !16616, size: 128, offset: 832)
!16622 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16602, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!16623 = !DILocalVariable(name: "st", arg: 1, scope: !16596, file: !16597, line: 66, type: !16600)
!16624 = !DILocation(line: 66, column: 39, scope: !16596)
!16625 = !DILocation(line: 69, column: 10, scope: !16596)
!16626 = !DILocation(line: 69, column: 38, scope: !16596)
!16627 = !DILocation(line: 69, column: 3, scope: !16596)
!16628 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16597, file: !16597, line: 79, type: !16598, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16629 = !DILocalVariable(name: "st", arg: 1, scope: !16628, file: !16597, line: 79, type: !16600)
!16630 = !DILocation(line: 79, column: 39, scope: !16628)
!16631 = !DILocation(line: 82, column: 10, scope: !16628)
!16632 = !DILocation(line: 82, column: 38, scope: !16628)
!16633 = !DILocation(line: 82, column: 3, scope: !16628)
!16634 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16597, file: !16597, line: 92, type: !16598, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16635 = !DILocalVariable(name: "st", arg: 1, scope: !16634, file: !16597, line: 92, type: !16600)
!16636 = !DILocation(line: 92, column: 39, scope: !16634)
!16637 = !DILocation(line: 95, column: 10, scope: !16634)
!16638 = !DILocation(line: 95, column: 38, scope: !16634)
!16639 = !DILocation(line: 95, column: 3, scope: !16634)
!16640 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16597, file: !16597, line: 105, type: !16598, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16641 = !DILocalVariable(name: "st", arg: 1, scope: !16640, file: !16597, line: 105, type: !16600)
!16642 = !DILocation(line: 105, column: 43, scope: !16640)
!16643 = !DILocation(line: 112, column: 3, scope: !16640)
!16644 = distinct !DISubprogram(name: "get_stat_atime", scope: !16597, file: !16597, line: 118, type: !16645, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16645 = !DISubroutineType(types: !16646)
!16646 = !{!16616, !16600}
!16647 = !DILocalVariable(name: "st", arg: 1, scope: !16644, file: !16597, line: 118, type: !16600)
!16648 = !DILocation(line: 118, column: 36, scope: !16644)
!16649 = !DILocation(line: 121, column: 10, scope: !16644)
!16650 = !DILocation(line: 121, column: 3, scope: !16644)
!16651 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16597, file: !16597, line: 132, type: !16645, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16652 = !DILocalVariable(name: "st", arg: 1, scope: !16651, file: !16597, line: 132, type: !16600)
!16653 = !DILocation(line: 132, column: 36, scope: !16651)
!16654 = !DILocation(line: 135, column: 10, scope: !16651)
!16655 = !DILocation(line: 135, column: 3, scope: !16651)
!16656 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16597, file: !16597, line: 146, type: !16645, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16657 = !DILocalVariable(name: "st", arg: 1, scope: !16656, file: !16597, line: 146, type: !16600)
!16658 = !DILocation(line: 146, column: 36, scope: !16656)
!16659 = !DILocation(line: 149, column: 10, scope: !16656)
!16660 = !DILocation(line: 149, column: 3, scope: !16656)
!16661 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16597, file: !16597, line: 161, type: !16645, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16662 = !DILocalVariable(name: "st", arg: 1, scope: !16661, file: !16597, line: 161, type: !16600)
!16663 = !DILocation(line: 161, column: 40, scope: !16661)
!16664 = !DILocalVariable(name: "t", scope: !16661, file: !16597, line: 163, type: !16616)
!16665 = !DILocation(line: 163, column: 19, scope: !16661)
!16666 = !DILocation(line: 183, column: 5, scope: !16661)
!16667 = !DILocation(line: 183, column: 12, scope: !16661)
!16668 = !DILocation(line: 184, column: 5, scope: !16661)
!16669 = !DILocation(line: 184, column: 13, scope: !16661)
!16670 = !DILocation(line: 202, column: 3, scope: !16661)
!16671 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16597, file: !16597, line: 211, type: !16672, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1397, retainedNodes: !298)
!16672 = !DISubroutineType(types: !16673)
!16673 = !{!7, !7, !16674}
!16674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16602, size: 64)
!16675 = !DILocalVariable(name: "result", arg: 1, scope: !16671, file: !16597, line: 211, type: !7)
!16676 = !DILocation(line: 211, column: 26, scope: !16671)
!16677 = !DILocalVariable(name: "st", arg: 2, scope: !16671, file: !16597, line: 211, type: !16674)
!16678 = !DILocation(line: 211, column: 47, scope: !16671)
!16679 = !DILocation(line: 243, column: 10, scope: !16671)
!16680 = !DILocation(line: 243, column: 3, scope: !16671)
!16681 = distinct !DISubprogram(name: "statat", scope: !16682, file: !16682, line: 102, type: !16683, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1400, retainedNodes: !298)
!16682 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!7, !7, !183, !16685}
!16685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16686, size: 64)
!16686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !16687)
!16687 = !{!16688, !16689, !16690, !16691, !16692, !16693, !16694, !16695, !16696, !16697, !16698, !16699, !16704, !16705, !16706}
!16688 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16686, file: !463, line: 48, baseType: !452, size: 64)
!16689 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16686, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!16690 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16686, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!16691 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16686, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!16692 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16686, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!16693 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16686, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!16694 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16686, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!16695 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16686, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!16696 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16686, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!16697 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16686, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!16698 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16686, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!16699 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16686, file: !463, line: 91, baseType: !16700, size: 128, offset: 576)
!16700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !16701)
!16701 = !{!16702, !16703}
!16702 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16700, file: !365, line: 11, baseType: !368, size: 64)
!16703 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16700, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!16704 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16686, file: !463, line: 92, baseType: !16700, size: 128, offset: 704)
!16705 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16686, file: !463, line: 93, baseType: !16700, size: 128, offset: 832)
!16706 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16686, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!16707 = !DILocalVariable(name: "fd", arg: 1, scope: !16681, file: !16682, line: 102, type: !7)
!16708 = !DILocation(line: 102, column: 13, scope: !16681)
!16709 = !DILocalVariable(name: "name", arg: 2, scope: !16681, file: !16682, line: 102, type: !183)
!16710 = !DILocation(line: 102, column: 29, scope: !16681)
!16711 = !DILocalVariable(name: "st", arg: 3, scope: !16681, file: !16682, line: 102, type: !16685)
!16712 = !DILocation(line: 102, column: 48, scope: !16681)
!16713 = !DILocation(line: 104, column: 19, scope: !16681)
!16714 = !DILocation(line: 104, column: 23, scope: !16681)
!16715 = !DILocation(line: 104, column: 29, scope: !16681)
!16716 = !DILocation(line: 104, column: 10, scope: !16681)
!16717 = !DILocation(line: 104, column: 3, scope: !16681)
!16718 = distinct !DISubprogram(name: "lstatat", scope: !16682, file: !16682, line: 108, type: !16683, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1400, retainedNodes: !298)
!16719 = !DILocalVariable(name: "fd", arg: 1, scope: !16718, file: !16682, line: 108, type: !7)
!16720 = !DILocation(line: 108, column: 14, scope: !16718)
!16721 = !DILocalVariable(name: "name", arg: 2, scope: !16718, file: !16682, line: 108, type: !183)
!16722 = !DILocation(line: 108, column: 30, scope: !16718)
!16723 = !DILocalVariable(name: "st", arg: 3, scope: !16718, file: !16682, line: 108, type: !16685)
!16724 = !DILocation(line: 108, column: 49, scope: !16718)
!16725 = !DILocation(line: 110, column: 19, scope: !16718)
!16726 = !DILocation(line: 110, column: 23, scope: !16718)
!16727 = !DILocation(line: 110, column: 29, scope: !16718)
!16728 = !DILocation(line: 110, column: 10, scope: !16718)
!16729 = !DILocation(line: 110, column: 3, scope: !16718)
!16730 = distinct !DISubprogram(name: "try_tempname_len", scope: !1022, file: !1022, line: 188, type: !16731, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{!7, !9, !7, !53, !1014, !55}
!16733 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16730, file: !1022, line: 188, type: !9)
!16734 = !DILocation(line: 188, column: 25, scope: !16730)
!16735 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16730, file: !1022, line: 188, type: !7)
!16736 = !DILocation(line: 188, column: 35, scope: !16730)
!16737 = !DILocalVariable(name: "args", arg: 3, scope: !16730, file: !1022, line: 188, type: !53)
!16738 = !DILocation(line: 188, column: 52, scope: !16730)
!16739 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16730, file: !1022, line: 189, type: !1014)
!16740 = !DILocation(line: 189, column: 25, scope: !16730)
!16741 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16730, file: !1022, line: 189, type: !55)
!16742 = !DILocation(line: 189, column: 59, scope: !16730)
!16743 = !DILocalVariable(name: "len", scope: !16730, file: !1022, line: 191, type: !55)
!16744 = !DILocation(line: 191, column: 10, scope: !16730)
!16745 = !DILocalVariable(name: "XXXXXX", scope: !16730, file: !1022, line: 192, type: !9)
!16746 = !DILocation(line: 192, column: 9, scope: !16730)
!16747 = !DILocalVariable(name: "count", scope: !16730, file: !1022, line: 193, type: !70)
!16748 = !DILocation(line: 193, column: 16, scope: !16730)
!16749 = !DILocalVariable(name: "fd", scope: !16730, file: !1022, line: 194, type: !7)
!16750 = !DILocation(line: 194, column: 7, scope: !16730)
!16751 = !DILocalVariable(name: "save_errno", scope: !16730, file: !1022, line: 195, type: !7)
!16752 = !DILocation(line: 195, column: 7, scope: !16730)
!16753 = !DILocation(line: 195, column: 20, scope: !16730)
!16754 = !DILocalVariable(name: "rand_src", scope: !16730, file: !1022, line: 196, type: !1010)
!16755 = !DILocation(line: 196, column: 26, scope: !16730)
!16756 = !DILocalVariable(name: "attempts", scope: !16730, file: !1022, line: 212, type: !70)
!16757 = !DILocation(line: 212, column: 16, scope: !16730)
!16758 = !DILocation(line: 215, column: 17, scope: !16730)
!16759 = !DILocation(line: 215, column: 9, scope: !16730)
!16760 = !DILocation(line: 215, column: 7, scope: !16730)
!16761 = !DILocation(line: 216, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16730, file: !1022, line: 216, column: 7)
!16763 = !DILocation(line: 216, column: 13, scope: !16762)
!16764 = !DILocation(line: 216, column: 28, scope: !16762)
!16765 = !DILocation(line: 216, column: 26, scope: !16762)
!16766 = !DILocation(line: 216, column: 11, scope: !16762)
!16767 = !DILocation(line: 217, column: 7, scope: !16762)
!16768 = !DILocation(line: 217, column: 29, scope: !16762)
!16769 = !DILocation(line: 217, column: 34, scope: !16762)
!16770 = !DILocation(line: 217, column: 40, scope: !16762)
!16771 = !DILocation(line: 217, column: 38, scope: !16762)
!16772 = !DILocation(line: 217, column: 55, scope: !16762)
!16773 = !DILocation(line: 217, column: 53, scope: !16762)
!16774 = !DILocation(line: 218, column: 28, scope: !16762)
!16775 = !DILocation(line: 217, column: 12, scope: !16762)
!16776 = !DILocation(line: 216, column: 7, scope: !16730)
!16777 = !DILocation(line: 220, column: 7, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16762, file: !1022, line: 219, column: 5)
!16779 = !DILocation(line: 221, column: 7, scope: !16778)
!16780 = !DILocation(line: 225, column: 13, scope: !16730)
!16781 = !DILocation(line: 225, column: 18, scope: !16730)
!16782 = !DILocation(line: 225, column: 24, scope: !16730)
!16783 = !DILocation(line: 225, column: 22, scope: !16730)
!16784 = !DILocation(line: 225, column: 39, scope: !16730)
!16785 = !DILocation(line: 225, column: 37, scope: !16730)
!16786 = !DILocation(line: 225, column: 10, scope: !16730)
!16787 = !DILocation(line: 228, column: 37, scope: !16730)
!16788 = !DILocation(line: 228, column: 14, scope: !16730)
!16789 = !DILocation(line: 228, column: 12, scope: !16730)
!16790 = !DILocation(line: 229, column: 9, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16730, file: !1022, line: 229, column: 7)
!16792 = !DILocation(line: 229, column: 7, scope: !16730)
!16793 = !DILocation(line: 230, column: 5, scope: !16791)
!16794 = !DILocation(line: 232, column: 14, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16730, file: !1022, line: 232, column: 3)
!16796 = !DILocation(line: 232, column: 8, scope: !16795)
!16797 = !DILocation(line: 232, column: 19, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16795, file: !1022, line: 232, column: 3)
!16799 = !DILocation(line: 232, column: 27, scope: !16798)
!16800 = !DILocation(line: 232, column: 25, scope: !16798)
!16801 = !DILocation(line: 232, column: 3, scope: !16795)
!16802 = !DILocalVariable(name: "i", scope: !16803, file: !1022, line: 234, type: !55)
!16803 = distinct !DILexicalBlock(scope: !16798, file: !1022, line: 233, column: 5)
!16804 = !DILocation(line: 234, column: 14, scope: !16803)
!16805 = !DILocation(line: 236, column: 14, scope: !16806)
!16806 = distinct !DILexicalBlock(scope: !16803, file: !1022, line: 236, column: 7)
!16807 = !DILocation(line: 236, column: 12, scope: !16806)
!16808 = !DILocation(line: 236, column: 19, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16806, file: !1022, line: 236, column: 7)
!16810 = !DILocation(line: 236, column: 23, scope: !16809)
!16811 = !DILocation(line: 236, column: 21, scope: !16809)
!16812 = !DILocation(line: 236, column: 7, scope: !16806)
!16813 = !DILocation(line: 237, column: 45, scope: !16809)
!16814 = !DILocation(line: 237, column: 29, scope: !16809)
!16815 = !DILocation(line: 237, column: 21, scope: !16809)
!16816 = !DILocation(line: 237, column: 9, scope: !16809)
!16817 = !DILocation(line: 237, column: 16, scope: !16809)
!16818 = !DILocation(line: 237, column: 19, scope: !16809)
!16819 = !DILocation(line: 236, column: 38, scope: !16809)
!16820 = !DILocation(line: 236, column: 7, scope: !16809)
!16821 = distinct !{!16821, !16812, !16822}
!16822 = !DILocation(line: 237, column: 74, scope: !16806)
!16823 = !DILocation(line: 239, column: 12, scope: !16803)
!16824 = !DILocation(line: 239, column: 21, scope: !16803)
!16825 = !DILocation(line: 239, column: 27, scope: !16803)
!16826 = !DILocation(line: 239, column: 10, scope: !16803)
!16827 = !DILocation(line: 240, column: 11, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16803, file: !1022, line: 240, column: 11)
!16829 = !DILocation(line: 240, column: 14, scope: !16828)
!16830 = !DILocation(line: 240, column: 11, scope: !16803)
!16831 = !DILocation(line: 242, column: 11, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16828, file: !1022, line: 241, column: 9)
!16833 = !DILocation(line: 243, column: 11, scope: !16832)
!16834 = !DILocation(line: 245, column: 16, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16828, file: !1022, line: 245, column: 16)
!16836 = !DILocation(line: 245, column: 22, scope: !16835)
!16837 = !DILocation(line: 245, column: 16, scope: !16828)
!16838 = !DILocation(line: 247, column: 14, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16835, file: !1022, line: 246, column: 9)
!16840 = !DILocation(line: 248, column: 11, scope: !16839)
!16841 = !DILocation(line: 250, column: 5, scope: !16803)
!16842 = !DILocation(line: 232, column: 37, scope: !16798)
!16843 = !DILocation(line: 232, column: 3, scope: !16798)
!16844 = distinct !{!16844, !16801, !16845}
!16845 = !DILocation(line: 250, column: 5, scope: !16795)
!16846 = !DILocation(line: 252, column: 21, scope: !16730)
!16847 = !DILocation(line: 252, column: 3, scope: !16730)
!16848 = !DILocation(line: 255, column: 3, scope: !16730)
!16849 = !DILocation(line: 256, column: 3, scope: !16730)
!16850 = !DILabel(scope: !16730, name: "done", file: !1022, line: 258)
!16851 = !DILocation(line: 258, column: 2, scope: !16730)
!16852 = !DILocalVariable(name: "saved_errno", scope: !16853, file: !1022, line: 260, type: !7)
!16853 = distinct !DILexicalBlock(scope: !16730, file: !1022, line: 259, column: 3)
!16854 = !DILocation(line: 260, column: 9, scope: !16853)
!16855 = !DILocation(line: 260, column: 23, scope: !16853)
!16856 = !DILocation(line: 261, column: 23, scope: !16853)
!16857 = !DILocation(line: 261, column: 5, scope: !16853)
!16858 = !DILocation(line: 262, column: 5, scope: !16853)
!16859 = !DILocation(line: 264, column: 10, scope: !16730)
!16860 = !DILocation(line: 264, column: 3, scope: !16730)
!16861 = !DILocation(line: 265, column: 1, scope: !16730)
!16862 = distinct !DISubprogram(name: "check_x_suffix", scope: !1022, file: !1022, line: 178, type: !16863, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16863 = !DISubroutineType(types: !16864)
!16864 = !{!142, !183, !55}
!16865 = !DILocalVariable(name: "s", arg: 1, scope: !16862, file: !1022, line: 178, type: !183)
!16866 = !DILocation(line: 178, column: 29, scope: !16862)
!16867 = !DILocalVariable(name: "len", arg: 2, scope: !16862, file: !1022, line: 178, type: !55)
!16868 = !DILocation(line: 178, column: 39, scope: !16862)
!16869 = !DILocation(line: 180, column: 10, scope: !16862)
!16870 = !DILocation(line: 180, column: 25, scope: !16862)
!16871 = !DILocation(line: 180, column: 17, scope: !16862)
!16872 = !DILocation(line: 180, column: 14, scope: !16862)
!16873 = !DILocation(line: 180, column: 3, scope: !16862)
!16874 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1022, file: !1022, line: 307, type: !16875, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16875 = !DISubroutineType(types: !16876)
!16876 = !{!7, !9, !7, !7, !7, !55}
!16877 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16874, file: !1022, line: 307, type: !9)
!16878 = !DILocation(line: 307, column: 25, scope: !16874)
!16879 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16874, file: !1022, line: 307, type: !7)
!16880 = !DILocation(line: 307, column: 35, scope: !16874)
!16881 = !DILocalVariable(name: "flags", arg: 3, scope: !16874, file: !1022, line: 307, type: !7)
!16882 = !DILocation(line: 307, column: 50, scope: !16874)
!16883 = !DILocalVariable(name: "kind", arg: 4, scope: !16874, file: !1022, line: 307, type: !7)
!16884 = !DILocation(line: 307, column: 61, scope: !16874)
!16885 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16874, file: !1022, line: 308, type: !55)
!16886 = !DILocation(line: 308, column: 26, scope: !16874)
!16887 = !DILocalVariable(name: "tryfunc", scope: !16874, file: !1022, line: 310, type: !1014)
!16888 = !DILocation(line: 310, column: 9, scope: !16874)
!16889 = !DILocation(line: 312, column: 11, scope: !16874)
!16890 = !DILocation(line: 312, column: 3, scope: !16874)
!16891 = !DILocation(line: 315, column: 15, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16874, file: !1022, line: 313, column: 5)
!16893 = !DILocation(line: 316, column: 7, scope: !16892)
!16894 = !DILocation(line: 319, column: 15, scope: !16892)
!16895 = !DILocation(line: 320, column: 7, scope: !16892)
!16896 = !DILocation(line: 323, column: 15, scope: !16892)
!16897 = !DILocation(line: 324, column: 7, scope: !16892)
!16898 = !DILocation(line: 327, column: 7, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16900, file: !1022, line: 327, column: 7)
!16900 = distinct !DILexicalBlock(scope: !16892, file: !1022, line: 327, column: 7)
!16901 = !DILocation(line: 330, column: 28, scope: !16874)
!16902 = !DILocation(line: 330, column: 34, scope: !16874)
!16903 = !DILocation(line: 330, column: 45, scope: !16874)
!16904 = !DILocation(line: 330, column: 53, scope: !16874)
!16905 = !DILocation(line: 330, column: 62, scope: !16874)
!16906 = !DILocation(line: 330, column: 10, scope: !16874)
!16907 = !DILocation(line: 330, column: 3, scope: !16874)
!16908 = distinct !DISubprogram(name: "try_file", scope: !1022, file: !1022, line: 268, type: !1015, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16909 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16908, file: !1022, line: 268, type: !9)
!16910 = !DILocation(line: 268, column: 17, scope: !16908)
!16911 = !DILocalVariable(name: "flags", arg: 2, scope: !16908, file: !1022, line: 268, type: !53)
!16912 = !DILocation(line: 268, column: 29, scope: !16908)
!16913 = !DILocalVariable(name: "openflags", scope: !16908, file: !1022, line: 270, type: !227)
!16914 = !DILocation(line: 270, column: 8, scope: !16908)
!16915 = !DILocation(line: 270, column: 20, scope: !16908)
!16916 = !DILocation(line: 271, column: 18, scope: !16908)
!16917 = !DILocation(line: 272, column: 20, scope: !16908)
!16918 = !DILocation(line: 272, column: 19, scope: !16908)
!16919 = !DILocation(line: 272, column: 30, scope: !16908)
!16920 = !DILocation(line: 273, column: 18, scope: !16908)
!16921 = !DILocation(line: 273, column: 27, scope: !16908)
!16922 = !DILocation(line: 273, column: 37, scope: !16908)
!16923 = !DILocation(line: 271, column: 10, scope: !16908)
!16924 = !DILocation(line: 271, column: 3, scope: !16908)
!16925 = distinct !DISubprogram(name: "try_dir", scope: !1022, file: !1022, line: 277, type: !1015, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16926 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16925, file: !1022, line: 277, type: !9)
!16927 = !DILocation(line: 277, column: 16, scope: !16925)
!16928 = !DILocalVariable(name: "flags", arg: 2, scope: !16925, file: !1022, line: 277, type: !53)
!16929 = !DILocation(line: 277, column: 28, scope: !16925)
!16930 = !DILocation(line: 279, column: 19, scope: !16925)
!16931 = !DILocation(line: 279, column: 10, scope: !16925)
!16932 = !DILocation(line: 279, column: 3, scope: !16925)
!16933 = distinct !DISubprogram(name: "try_nocreate", scope: !1022, file: !1022, line: 283, type: !1015, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !16935)
!16935 = !{!16936, !16937, !16938, !16939, !16940, !16941, !16942, !16943, !16944, !16945, !16946, !16947, !16952, !16953, !16954}
!16936 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16934, file: !463, line: 48, baseType: !452, size: 64)
!16937 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16934, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!16938 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16934, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!16939 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16934, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!16940 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16934, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!16941 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16934, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!16942 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16934, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!16943 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16934, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!16944 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16934, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16934, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16934, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16934, file: !463, line: 91, baseType: !16948, size: 128, offset: 576)
!16948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !16949)
!16949 = !{!16950, !16951}
!16950 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16948, file: !365, line: 11, baseType: !368, size: 64)
!16951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16948, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!16952 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16934, file: !463, line: 92, baseType: !16948, size: 128, offset: 704)
!16953 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16934, file: !463, line: 93, baseType: !16948, size: 128, offset: 832)
!16954 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16934, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!16955 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16933, file: !1022, line: 283, type: !9)
!16956 = !DILocation(line: 283, column: 21, scope: !16933)
!16957 = !DILocalVariable(name: "flags", arg: 2, scope: !16933, file: !1022, line: 283, type: !53)
!16958 = !DILocation(line: 283, column: 33, scope: !16933)
!16959 = !DILocalVariable(name: "st", scope: !16933, file: !1022, line: 285, type: !16934)
!16960 = !DILocation(line: 285, column: 17, scope: !16933)
!16961 = !DILocation(line: 287, column: 7, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16933, file: !1022, line: 287, column: 7)
!16963 = !DILocation(line: 287, column: 41, scope: !16962)
!16964 = !DILocation(line: 287, column: 46, scope: !16962)
!16965 = !DILocation(line: 287, column: 49, scope: !16962)
!16966 = !DILocation(line: 287, column: 55, scope: !16962)
!16967 = !DILocation(line: 287, column: 7, scope: !16933)
!16968 = !DILocation(line: 288, column: 5, scope: !16962)
!16969 = !DILocation(line: 289, column: 10, scope: !16933)
!16970 = !DILocation(line: 289, column: 16, scope: !16933)
!16971 = !DILocation(line: 289, column: 3, scope: !16933)
!16972 = distinct !DISubprogram(name: "gen_tempname", scope: !1022, file: !1022, line: 334, type: !16973, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16973 = !DISubroutineType(types: !16974)
!16974 = !{!7, !9, !7, !7, !7}
!16975 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16972, file: !1022, line: 334, type: !9)
!16976 = !DILocation(line: 334, column: 23, scope: !16972)
!16977 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16972, file: !1022, line: 334, type: !7)
!16978 = !DILocation(line: 334, column: 33, scope: !16972)
!16979 = !DILocalVariable(name: "flags", arg: 3, scope: !16972, file: !1022, line: 334, type: !7)
!16980 = !DILocation(line: 334, column: 48, scope: !16972)
!16981 = !DILocalVariable(name: "kind", arg: 4, scope: !16972, file: !1022, line: 334, type: !7)
!16982 = !DILocation(line: 334, column: 59, scope: !16972)
!16983 = !DILocation(line: 336, column: 28, scope: !16972)
!16984 = !DILocation(line: 336, column: 34, scope: !16972)
!16985 = !DILocation(line: 336, column: 45, scope: !16972)
!16986 = !DILocation(line: 336, column: 52, scope: !16972)
!16987 = !DILocation(line: 336, column: 10, scope: !16972)
!16988 = !DILocation(line: 336, column: 3, scope: !16972)
!16989 = distinct !DISubprogram(name: "try_tempname", scope: !1022, file: !1022, line: 340, type: !16990, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1007, retainedNodes: !298)
!16990 = !DISubroutineType(types: !16991)
!16991 = !{!7, !9, !7, !53, !1014}
!16992 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16989, file: !1022, line: 340, type: !9)
!16993 = !DILocation(line: 340, column: 23, scope: !16989)
!16994 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16989, file: !1022, line: 340, type: !7)
!16995 = !DILocation(line: 340, column: 33, scope: !16989)
!16996 = !DILocalVariable(name: "args", arg: 3, scope: !16989, file: !1022, line: 340, type: !53)
!16997 = !DILocation(line: 340, column: 50, scope: !16989)
!16998 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16989, file: !1022, line: 341, type: !1014)
!16999 = !DILocation(line: 341, column: 23, scope: !16989)
!17000 = !DILocation(line: 343, column: 28, scope: !16989)
!17001 = !DILocation(line: 343, column: 34, scope: !16989)
!17002 = !DILocation(line: 343, column: 45, scope: !16989)
!17003 = !DILocation(line: 343, column: 51, scope: !16989)
!17004 = !DILocation(line: 343, column: 10, scope: !16989)
!17005 = !DILocation(line: 343, column: 3, scope: !16989)
!17006 = distinct !DISubprogram(name: "fd_safer", scope: !17007, file: !17007, line: 37, type: !15435, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1402, retainedNodes: !298)
!17007 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17008 = !DILocalVariable(name: "fd", arg: 1, scope: !17006, file: !17007, line: 37, type: !7)
!17009 = !DILocation(line: 37, column: 15, scope: !17006)
!17010 = !DILocation(line: 39, column: 23, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17006, file: !17007, line: 39, column: 7)
!17012 = !DILocation(line: 39, column: 20, scope: !17011)
!17013 = !DILocation(line: 39, column: 26, scope: !17011)
!17014 = !DILocation(line: 39, column: 29, scope: !17011)
!17015 = !DILocation(line: 39, column: 32, scope: !17011)
!17016 = !DILocation(line: 39, column: 7, scope: !17006)
!17017 = !DILocalVariable(name: "f", scope: !17018, file: !17007, line: 41, type: !7)
!17018 = distinct !DILexicalBlock(scope: !17011, file: !17007, line: 40, column: 5)
!17019 = !DILocation(line: 41, column: 11, scope: !17018)
!17020 = !DILocation(line: 41, column: 26, scope: !17018)
!17021 = !DILocation(line: 41, column: 15, scope: !17018)
!17022 = !DILocalVariable(name: "e", scope: !17018, file: !17007, line: 42, type: !7)
!17023 = !DILocation(line: 42, column: 11, scope: !17018)
!17024 = !DILocation(line: 42, column: 15, scope: !17018)
!17025 = !DILocation(line: 43, column: 14, scope: !17018)
!17026 = !DILocation(line: 43, column: 7, scope: !17018)
!17027 = !DILocation(line: 44, column: 15, scope: !17018)
!17028 = !DILocation(line: 44, column: 7, scope: !17018)
!17029 = !DILocation(line: 44, column: 13, scope: !17018)
!17030 = !DILocation(line: 45, column: 12, scope: !17018)
!17031 = !DILocation(line: 45, column: 10, scope: !17018)
!17032 = !DILocation(line: 46, column: 5, scope: !17018)
!17033 = !DILocation(line: 48, column: 10, scope: !17006)
!17034 = !DILocation(line: 48, column: 3, scope: !17006)
!17035 = distinct !DISubprogram(name: "utimecmp", scope: !1026, file: !1026, line: 123, type: !17036, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1052, retainedNodes: !298)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{!7, !183, !1029, !1029, !7}
!17038 = !DILocalVariable(name: "dst_name", arg: 1, scope: !17035, file: !1026, line: 123, type: !183)
!17039 = !DILocation(line: 123, column: 23, scope: !17035)
!17040 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !17035, file: !1026, line: 124, type: !1029)
!17041 = !DILocation(line: 124, column: 30, scope: !17035)
!17042 = !DILocalVariable(name: "src_stat", arg: 3, scope: !17035, file: !1026, line: 125, type: !1029)
!17043 = !DILocation(line: 125, column: 30, scope: !17035)
!17044 = !DILocalVariable(name: "options", arg: 4, scope: !17035, file: !1026, line: 126, type: !7)
!17045 = !DILocation(line: 126, column: 15, scope: !17035)
!17046 = !DILocation(line: 128, column: 32, scope: !17035)
!17047 = !DILocation(line: 128, column: 42, scope: !17035)
!17048 = !DILocation(line: 128, column: 52, scope: !17035)
!17049 = !DILocation(line: 128, column: 62, scope: !17035)
!17050 = !DILocation(line: 128, column: 10, scope: !17035)
!17051 = !DILocation(line: 128, column: 3, scope: !17035)
!17052 = !DILocalVariable(name: "dfd", arg: 1, scope: !1025, file: !1026, line: 132, type: !7)
!17053 = !DILocation(line: 132, column: 17, scope: !1025)
!17054 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1025, file: !1026, line: 132, type: !183)
!17055 = !DILocation(line: 132, column: 34, scope: !1025)
!17056 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1025, file: !1026, line: 133, type: !1029)
!17057 = !DILocation(line: 133, column: 32, scope: !1025)
!17058 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1025, file: !1026, line: 134, type: !1029)
!17059 = !DILocation(line: 134, column: 32, scope: !1025)
!17060 = !DILocalVariable(name: "options", arg: 5, scope: !1025, file: !1026, line: 135, type: !7)
!17061 = !DILocation(line: 135, column: 17, scope: !1025)
!17062 = !DILocalVariable(name: "dst_s", scope: !1025, file: !1026, line: 153, type: !1055)
!17063 = !DILocation(line: 153, column: 10, scope: !1025)
!17064 = !DILocation(line: 153, column: 18, scope: !1025)
!17065 = !DILocation(line: 153, column: 28, scope: !1025)
!17066 = !DILocalVariable(name: "src_s", scope: !1025, file: !1026, line: 154, type: !1055)
!17067 = !DILocation(line: 154, column: 10, scope: !1025)
!17068 = !DILocation(line: 154, column: 18, scope: !1025)
!17069 = !DILocation(line: 154, column: 28, scope: !1025)
!17070 = !DILocalVariable(name: "dst_ns", scope: !1025, file: !1026, line: 155, type: !7)
!17071 = !DILocation(line: 155, column: 7, scope: !1025)
!17072 = !DILocation(line: 155, column: 35, scope: !1025)
!17073 = !DILocation(line: 155, column: 16, scope: !1025)
!17074 = !DILocalVariable(name: "src_ns", scope: !1025, file: !1026, line: 156, type: !7)
!17075 = !DILocation(line: 156, column: 7, scope: !1025)
!17076 = !DILocation(line: 156, column: 35, scope: !1025)
!17077 = !DILocation(line: 156, column: 16, scope: !1025)
!17078 = !DILocation(line: 158, column: 7, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !1025, file: !1026, line: 158, column: 7)
!17080 = !DILocation(line: 158, column: 15, scope: !17079)
!17081 = !DILocation(line: 158, column: 7, scope: !1025)
!17082 = !DILocalVariable(name: "dst_res", scope: !17083, file: !1026, line: 167, type: !1057)
!17083 = distinct !DILexicalBlock(scope: !17079, file: !1026, line: 159, column: 5)
!17084 = !DILocation(line: 167, column: 22, scope: !17083)
!17085 = !DILocalVariable(name: "tmp_dst_res", scope: !17083, file: !1026, line: 168, type: !1058)
!17086 = !DILocation(line: 168, column: 21, scope: !17083)
!17087 = !DILocalVariable(name: "res", scope: !17083, file: !1026, line: 171, type: !7)
!17088 = !DILocation(line: 171, column: 11, scope: !17083)
!17089 = !DILocation(line: 176, column: 11, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 176, column: 11)
!17091 = !DILocation(line: 176, column: 20, scope: !17090)
!17092 = !DILocation(line: 176, column: 17, scope: !17090)
!17093 = !DILocation(line: 176, column: 26, scope: !17090)
!17094 = !DILocation(line: 176, column: 29, scope: !17090)
!17095 = !DILocation(line: 176, column: 39, scope: !17090)
!17096 = !DILocation(line: 176, column: 36, scope: !17090)
!17097 = !DILocation(line: 176, column: 11, scope: !17083)
!17098 = !DILocation(line: 177, column: 9, scope: !17090)
!17099 = !DILocation(line: 178, column: 11, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 178, column: 11)
!17101 = !DILocation(line: 178, column: 20, scope: !17100)
!17102 = !DILocation(line: 178, column: 26, scope: !17100)
!17103 = !DILocation(line: 178, column: 17, scope: !17100)
!17104 = !DILocation(line: 178, column: 11, scope: !17083)
!17105 = !DILocation(line: 179, column: 9, scope: !17100)
!17106 = !DILocation(line: 180, column: 11, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 180, column: 11)
!17108 = !DILocation(line: 180, column: 20, scope: !17107)
!17109 = !DILocation(line: 180, column: 26, scope: !17107)
!17110 = !DILocation(line: 180, column: 17, scope: !17107)
!17111 = !DILocation(line: 180, column: 11, scope: !17083)
!17112 = !DILocation(line: 181, column: 9, scope: !17107)
!17113 = !DILocation(line: 185, column: 13, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 185, column: 11)
!17115 = !DILocation(line: 185, column: 11, scope: !17083)
!17116 = !DILocation(line: 186, column: 14, scope: !17114)
!17117 = !DILocation(line: 186, column: 12, scope: !17114)
!17118 = !DILocation(line: 186, column: 9, scope: !17114)
!17119 = !DILocation(line: 187, column: 11, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 187, column: 11)
!17121 = !DILocation(line: 187, column: 11, scope: !17083)
!17122 = !DILocation(line: 189, column: 17, scope: !17123)
!17123 = distinct !DILexicalBlock(scope: !17124, file: !1026, line: 189, column: 15)
!17124 = distinct !DILexicalBlock(scope: !17120, file: !1026, line: 188, column: 9)
!17125 = !DILocation(line: 189, column: 15, scope: !17124)
!17126 = !DILocation(line: 191, column: 29, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17123, file: !1026, line: 190, column: 13)
!17128 = !DILocation(line: 191, column: 27, scope: !17127)
!17129 = !DILocation(line: 192, column: 20, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17127, file: !1026, line: 192, column: 19)
!17131 = !DILocation(line: 192, column: 19, scope: !17127)
!17132 = !DILocation(line: 193, column: 17, scope: !17130)
!17133 = !DILocation(line: 194, column: 15, scope: !17127)
!17134 = !DILocation(line: 194, column: 28, scope: !17127)
!17135 = !DILocation(line: 194, column: 39, scope: !17127)
!17136 = !DILocation(line: 195, column: 15, scope: !17127)
!17137 = !DILocation(line: 195, column: 28, scope: !17127)
!17138 = !DILocation(line: 195, column: 34, scope: !17127)
!17139 = !DILocation(line: 196, column: 13, scope: !17127)
!17140 = !DILocation(line: 197, column: 30, scope: !17124)
!17141 = !DILocation(line: 197, column: 40, scope: !17124)
!17142 = !DILocation(line: 197, column: 11, scope: !17124)
!17143 = !DILocation(line: 197, column: 24, scope: !17124)
!17144 = !DILocation(line: 197, column: 28, scope: !17124)
!17145 = !DILocation(line: 198, column: 34, scope: !17124)
!17146 = !DILocation(line: 198, column: 38, scope: !17124)
!17147 = !DILocation(line: 198, column: 21, scope: !17124)
!17148 = !DILocation(line: 198, column: 19, scope: !17124)
!17149 = !DILocation(line: 199, column: 17, scope: !17150)
!17150 = distinct !DILexicalBlock(scope: !17124, file: !1026, line: 199, column: 15)
!17151 = !DILocation(line: 199, column: 15, scope: !17124)
!17152 = !DILocation(line: 200, column: 13, scope: !17150)
!17153 = !DILocation(line: 202, column: 15, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17124, file: !1026, line: 202, column: 15)
!17155 = !DILocation(line: 202, column: 26, scope: !17154)
!17156 = !DILocation(line: 202, column: 23, scope: !17154)
!17157 = !DILocation(line: 202, column: 15, scope: !17124)
!17158 = !DILocation(line: 206, column: 27, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17154, file: !1026, line: 203, column: 13)
!17160 = !DILocation(line: 207, column: 13, scope: !17159)
!17161 = !DILocation(line: 208, column: 9, scope: !17124)
!17162 = !DILocation(line: 210, column: 9, scope: !17120)
!17163 = !DILabel(scope: !17164, name: "low_memory", file: !1026, line: 211)
!17164 = distinct !DILexicalBlock(scope: !17120, file: !1026, line: 210, column: 9)
!17165 = !DILocation(line: 211, column: 9, scope: !17164)
!17166 = !DILocation(line: 212, column: 15, scope: !17167)
!17167 = distinct !DILexicalBlock(scope: !17164, file: !1026, line: 212, column: 15)
!17168 = !DILocation(line: 212, column: 15, scope: !17164)
!17169 = !DILocation(line: 214, column: 33, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17167, file: !1026, line: 213, column: 13)
!17171 = !DILocation(line: 214, column: 43, scope: !17170)
!17172 = !DILocation(line: 214, column: 27, scope: !17170)
!17173 = !DILocation(line: 214, column: 31, scope: !17170)
!17174 = !DILocation(line: 215, column: 38, scope: !17170)
!17175 = !DILocation(line: 215, column: 42, scope: !17170)
!17176 = !DILocation(line: 215, column: 25, scope: !17170)
!17177 = !DILocation(line: 215, column: 23, scope: !17170)
!17178 = !DILocation(line: 216, column: 13, scope: !17170)
!17179 = !DILocation(line: 217, column: 16, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17164, file: !1026, line: 217, column: 15)
!17181 = !DILocation(line: 217, column: 15, scope: !17164)
!17182 = !DILocation(line: 219, column: 23, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17180, file: !1026, line: 218, column: 13)
!17184 = !DILocation(line: 220, column: 15, scope: !17183)
!17185 = !DILocation(line: 220, column: 24, scope: !17183)
!17186 = !DILocation(line: 220, column: 35, scope: !17183)
!17187 = !DILocation(line: 221, column: 15, scope: !17183)
!17188 = !DILocation(line: 221, column: 24, scope: !17183)
!17189 = !DILocation(line: 221, column: 30, scope: !17183)
!17190 = !DILocation(line: 222, column: 13, scope: !17183)
!17191 = !DILocation(line: 225, column: 13, scope: !17083)
!17192 = !DILocation(line: 225, column: 22, scope: !17083)
!17193 = !DILocation(line: 225, column: 11, scope: !17083)
!17194 = !DILocation(line: 257, column: 13, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17083, file: !1026, line: 257, column: 11)
!17196 = !DILocation(line: 257, column: 22, scope: !17195)
!17197 = !DILocation(line: 257, column: 11, scope: !17083)
!17198 = !DILocalVariable(name: "dst_a_s", scope: !17199, file: !1026, line: 262, type: !1055)
!17199 = distinct !DILexicalBlock(scope: !17195, file: !1026, line: 258, column: 9)
!17200 = !DILocation(line: 262, column: 18, scope: !17199)
!17201 = !DILocation(line: 262, column: 28, scope: !17199)
!17202 = !DILocation(line: 262, column: 38, scope: !17199)
!17203 = !DILocalVariable(name: "dst_c_s", scope: !17199, file: !1026, line: 263, type: !1055)
!17204 = !DILocation(line: 263, column: 18, scope: !17199)
!17205 = !DILocation(line: 263, column: 28, scope: !17199)
!17206 = !DILocation(line: 263, column: 38, scope: !17199)
!17207 = !DILocalVariable(name: "dst_m_s", scope: !17199, file: !1026, line: 264, type: !1055)
!17208 = !DILocation(line: 264, column: 18, scope: !17199)
!17209 = !DILocation(line: 264, column: 28, scope: !17199)
!17210 = !DILocalVariable(name: "dst_a_ns", scope: !17199, file: !1026, line: 265, type: !7)
!17211 = !DILocation(line: 265, column: 15, scope: !17199)
!17212 = !DILocation(line: 265, column: 45, scope: !17199)
!17213 = !DILocation(line: 265, column: 26, scope: !17199)
!17214 = !DILocalVariable(name: "dst_c_ns", scope: !17199, file: !1026, line: 266, type: !7)
!17215 = !DILocation(line: 266, column: 15, scope: !17199)
!17216 = !DILocation(line: 266, column: 45, scope: !17199)
!17217 = !DILocation(line: 266, column: 26, scope: !17199)
!17218 = !DILocalVariable(name: "dst_m_ns", scope: !17199, file: !1026, line: 267, type: !7)
!17219 = !DILocation(line: 267, column: 15, scope: !17199)
!17220 = !DILocation(line: 267, column: 26, scope: !17199)
!17221 = !DILocalVariable(name: "odd_second", scope: !17222, file: !1026, line: 276, type: !142)
!17222 = distinct !DILexicalBlock(scope: !17199, file: !1026, line: 275, column: 11)
!17223 = !DILocation(line: 276, column: 18, scope: !17222)
!17224 = !DILocation(line: 276, column: 32, scope: !17222)
!17225 = !DILocation(line: 276, column: 42, scope: !17222)
!17226 = !DILocation(line: 276, column: 40, scope: !17222)
!17227 = !DILocation(line: 276, column: 52, scope: !17222)
!17228 = !DILocation(line: 276, column: 50, scope: !17222)
!17229 = !DILocation(line: 276, column: 61, scope: !17222)
!17230 = !DILocation(line: 276, column: 31, scope: !17222)
!17231 = !DILocalVariable(name: "a", scope: !17232, file: !1026, line: 285, type: !7)
!17232 = distinct !DILexicalBlock(scope: !17233, file: !1026, line: 284, column: 15)
!17233 = distinct !DILexicalBlock(scope: !17222, file: !1026, line: 278, column: 17)
!17234 = !DILocation(line: 285, column: 21, scope: !17232)
!17235 = !DILocation(line: 285, column: 25, scope: !17232)
!17236 = !DILocalVariable(name: "c", scope: !17232, file: !1026, line: 286, type: !7)
!17237 = !DILocation(line: 286, column: 21, scope: !17232)
!17238 = !DILocation(line: 286, column: 25, scope: !17232)
!17239 = !DILocalVariable(name: "m", scope: !17232, file: !1026, line: 287, type: !7)
!17240 = !DILocation(line: 287, column: 21, scope: !17232)
!17241 = !DILocation(line: 287, column: 25, scope: !17232)
!17242 = !DILocalVariable(name: "SR10", scope: !17232, file: !1026, line: 291, type: !7)
!17243 = !DILocation(line: 291, column: 21, scope: !17232)
!17244 = !DILocation(line: 291, column: 54, scope: !17232)
!17245 = !DILocation(line: 293, column: 22, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17232, file: !1026, line: 293, column: 21)
!17247 = !DILocation(line: 293, column: 26, scope: !17246)
!17248 = !DILocation(line: 293, column: 24, scope: !17246)
!17249 = !DILocation(line: 293, column: 33, scope: !17246)
!17250 = !DILocation(line: 293, column: 37, scope: !17246)
!17251 = !DILocation(line: 293, column: 35, scope: !17246)
!17252 = !DILocation(line: 293, column: 31, scope: !17246)
!17253 = !DILocation(line: 293, column: 44, scope: !17246)
!17254 = !DILocation(line: 293, column: 48, scope: !17246)
!17255 = !DILocation(line: 293, column: 46, scope: !17246)
!17256 = !DILocation(line: 293, column: 42, scope: !17246)
!17257 = !DILocation(line: 293, column: 54, scope: !17246)
!17258 = !DILocation(line: 293, column: 21, scope: !17232)
!17259 = !DILocation(line: 294, column: 23, scope: !17246)
!17260 = !DILocation(line: 294, column: 19, scope: !17246)
!17261 = !DILocation(line: 296, column: 30, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17246, file: !1026, line: 296, column: 19)
!17263 = !DILocation(line: 296, column: 28, scope: !17262)
!17264 = !DILocation(line: 296, column: 41, scope: !17262)
!17265 = !DILocation(line: 296, column: 38, scope: !17262)
!17266 = !DILocation(line: 296, column: 52, scope: !17262)
!17267 = !DILocation(line: 296, column: 49, scope: !17262)
!17268 = !DILocation(line: 296, column: 63, scope: !17262)
!17269 = !DILocation(line: 296, column: 60, scope: !17262)
!17270 = !DILocation(line: 296, column: 24, scope: !17262)
!17271 = !DILocation(line: 297, column: 25, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17262, file: !1026, line: 296, column: 19)
!17273 = !DILocation(line: 297, column: 31, scope: !17272)
!17274 = !DILocation(line: 297, column: 40, scope: !17272)
!17275 = !DILocation(line: 297, column: 29, scope: !17272)
!17276 = !DILocation(line: 298, column: 25, scope: !17272)
!17277 = !DILocation(line: 298, column: 29, scope: !17272)
!17278 = !DILocation(line: 298, column: 31, scope: !17272)
!17279 = !DILocation(line: 298, column: 38, scope: !17272)
!17280 = !DILocation(line: 298, column: 40, scope: !17272)
!17281 = !DILocation(line: 298, column: 36, scope: !17272)
!17282 = !DILocation(line: 298, column: 47, scope: !17272)
!17283 = !DILocation(line: 298, column: 49, scope: !17272)
!17284 = !DILocation(line: 298, column: 45, scope: !17272)
!17285 = !DILocation(line: 298, column: 55, scope: !17272)
!17286 = !DILocation(line: 0, scope: !17272)
!17287 = !DILocation(line: 296, column: 19, scope: !17262)
!17288 = !DILocation(line: 300, column: 25, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17272, file: !1026, line: 300, column: 25)
!17290 = !DILocation(line: 300, column: 29, scope: !17289)
!17291 = !DILocation(line: 300, column: 25, scope: !17272)
!17292 = !DILocation(line: 302, column: 31, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !1026, line: 302, column: 29)
!17294 = distinct !DILexicalBlock(scope: !17289, file: !1026, line: 301, column: 23)
!17295 = !DILocation(line: 302, column: 29, scope: !17294)
!17296 = !DILocation(line: 303, column: 31, scope: !17293)
!17297 = !DILocation(line: 303, column: 27, scope: !17293)
!17298 = !DILocation(line: 304, column: 25, scope: !17294)
!17299 = !DILocation(line: 300, column: 32, scope: !17289)
!17300 = !DILocation(line: 299, column: 28, scope: !17272)
!17301 = !DILocation(line: 299, column: 37, scope: !17272)
!17302 = !DILocation(line: 299, column: 46, scope: !17272)
!17303 = !DILocation(line: 299, column: 55, scope: !17272)
!17304 = !DILocation(line: 296, column: 19, scope: !17272)
!17305 = distinct !{!17305, !17287, !17306}
!17306 = !DILocation(line: 305, column: 23, scope: !17262)
!17307 = !DILocation(line: 308, column: 35, scope: !17222)
!17308 = !DILocation(line: 308, column: 13, scope: !17222)
!17309 = !DILocation(line: 308, column: 22, scope: !17222)
!17310 = !DILocation(line: 308, column: 33, scope: !17222)
!17311 = !DILocation(line: 311, column: 36, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17199, file: !1026, line: 311, column: 15)
!17313 = !DILocation(line: 311, column: 34, scope: !17312)
!17314 = !DILocation(line: 311, column: 15, scope: !17199)
!17315 = !DILocalVariable(name: "timespec", scope: !17316, file: !1026, line: 313, type: !1063)
!17316 = distinct !DILexicalBlock(scope: !17312, file: !1026, line: 312, column: 13)
!17317 = !DILocation(line: 313, column: 31, scope: !17316)
!17318 = !DILocalVariable(name: "dst_status", scope: !17316, file: !1026, line: 314, type: !1031)
!17319 = !DILocation(line: 314, column: 27, scope: !17316)
!17320 = !DILocation(line: 318, column: 25, scope: !17316)
!17321 = !DILocation(line: 318, column: 32, scope: !17316)
!17322 = !DILocation(line: 318, column: 22, scope: !17316)
!17323 = !DILocalVariable(name: "s", scope: !17324, file: !1026, line: 324, type: !1055)
!17324 = distinct !DILexicalBlock(scope: !17316, file: !1026, line: 323, column: 15)
!17325 = !DILocation(line: 324, column: 24, scope: !17324)
!17326 = !DILocation(line: 324, column: 28, scope: !17324)
!17327 = !DILocation(line: 324, column: 39, scope: !17324)
!17328 = !DILocation(line: 324, column: 43, scope: !17324)
!17329 = !DILocation(line: 324, column: 36, scope: !17324)
!17330 = !DILocation(line: 324, column: 34, scope: !17324)
!17331 = !DILocation(line: 325, column: 21, scope: !17332)
!17332 = distinct !DILexicalBlock(scope: !17324, file: !1026, line: 325, column: 21)
!17333 = !DILocation(line: 325, column: 29, scope: !17332)
!17334 = !DILocation(line: 325, column: 27, scope: !17332)
!17335 = !DILocation(line: 325, column: 35, scope: !17332)
!17336 = !DILocation(line: 325, column: 39, scope: !17332)
!17337 = !DILocation(line: 325, column: 48, scope: !17332)
!17338 = !DILocation(line: 325, column: 45, scope: !17332)
!17339 = !DILocation(line: 325, column: 54, scope: !17332)
!17340 = !DILocation(line: 325, column: 57, scope: !17332)
!17341 = !DILocation(line: 325, column: 67, scope: !17332)
!17342 = !DILocation(line: 325, column: 64, scope: !17332)
!17343 = !DILocation(line: 325, column: 21, scope: !17324)
!17344 = !DILocation(line: 326, column: 19, scope: !17332)
!17345 = !DILocation(line: 327, column: 21, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17324, file: !1026, line: 327, column: 21)
!17347 = !DILocation(line: 327, column: 29, scope: !17346)
!17348 = !DILocation(line: 327, column: 27, scope: !17346)
!17349 = !DILocation(line: 328, column: 21, scope: !17346)
!17350 = !DILocation(line: 328, column: 25, scope: !17346)
!17351 = !DILocation(line: 328, column: 34, scope: !17346)
!17352 = !DILocation(line: 328, column: 31, scope: !17346)
!17353 = !DILocation(line: 328, column: 36, scope: !17346)
!17354 = !DILocation(line: 328, column: 39, scope: !17346)
!17355 = !DILocation(line: 328, column: 48, scope: !17346)
!17356 = !DILocation(line: 328, column: 57, scope: !17346)
!17357 = !DILocation(line: 328, column: 66, scope: !17346)
!17358 = !DILocation(line: 328, column: 64, scope: !17346)
!17359 = !DILocation(line: 328, column: 55, scope: !17346)
!17360 = !DILocation(line: 328, column: 46, scope: !17346)
!17361 = !DILocation(line: 327, column: 21, scope: !17324)
!17362 = !DILocation(line: 329, column: 19, scope: !17346)
!17363 = !DILocation(line: 338, column: 36, scope: !17316)
!17364 = !DILocation(line: 338, column: 15, scope: !17316)
!17365 = !DILocation(line: 338, column: 27, scope: !17316)
!17366 = !DILocation(line: 338, column: 34, scope: !17316)
!17367 = !DILocation(line: 339, column: 37, scope: !17316)
!17368 = !DILocation(line: 339, column: 15, scope: !17316)
!17369 = !DILocation(line: 339, column: 27, scope: !17316)
!17370 = !DILocation(line: 339, column: 35, scope: !17316)
!17371 = !DILocation(line: 340, column: 36, scope: !17316)
!17372 = !DILocation(line: 340, column: 47, scope: !17316)
!17373 = !DILocation(line: 340, column: 51, scope: !17316)
!17374 = !DILocation(line: 340, column: 46, scope: !17316)
!17375 = !DILocation(line: 340, column: 44, scope: !17316)
!17376 = !DILocation(line: 340, column: 15, scope: !17316)
!17377 = !DILocation(line: 340, column: 27, scope: !17316)
!17378 = !DILocation(line: 340, column: 34, scope: !17316)
!17379 = !DILocation(line: 341, column: 37, scope: !17316)
!17380 = !DILocation(line: 341, column: 48, scope: !17316)
!17381 = !DILocation(line: 341, column: 52, scope: !17316)
!17382 = !DILocation(line: 341, column: 46, scope: !17316)
!17383 = !DILocation(line: 341, column: 15, scope: !17316)
!17384 = !DILocation(line: 341, column: 27, scope: !17316)
!17385 = !DILocation(line: 341, column: 35, scope: !17316)
!17386 = !DILocation(line: 343, column: 30, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17316, file: !1026, line: 343, column: 19)
!17388 = !DILocation(line: 343, column: 35, scope: !17387)
!17389 = !DILocation(line: 343, column: 45, scope: !17387)
!17390 = !DILocation(line: 343, column: 19, scope: !17387)
!17391 = !DILocation(line: 343, column: 19, scope: !17316)
!17392 = !DILocation(line: 344, column: 17, scope: !17387)
!17393 = !DILocalVariable(name: "stat_result", scope: !17394, file: !1026, line: 348, type: !7)
!17394 = distinct !DILexicalBlock(scope: !17316, file: !1026, line: 347, column: 15)
!17395 = !DILocation(line: 348, column: 21, scope: !17394)
!17396 = !DILocation(line: 349, column: 30, scope: !17394)
!17397 = !DILocation(line: 349, column: 35, scope: !17394)
!17398 = !DILocation(line: 349, column: 21, scope: !17394)
!17399 = !DILocation(line: 351, column: 21, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17394, file: !1026, line: 351, column: 21)
!17401 = !DILocation(line: 352, column: 35, scope: !17400)
!17402 = !DILocation(line: 352, column: 46, scope: !17400)
!17403 = !DILocation(line: 352, column: 44, scope: !17400)
!17404 = !DILocation(line: 352, column: 21, scope: !17400)
!17405 = !DILocation(line: 353, column: 24, scope: !17400)
!17406 = !DILocation(line: 353, column: 58, scope: !17400)
!17407 = !DILocation(line: 353, column: 56, scope: !17400)
!17408 = !DILocation(line: 353, column: 21, scope: !17400)
!17409 = !DILocation(line: 351, column: 21, scope: !17394)
!17410 = !DILocation(line: 357, column: 42, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17400, file: !1026, line: 354, column: 19)
!17412 = !DILocation(line: 357, column: 21, scope: !17411)
!17413 = !DILocation(line: 357, column: 33, scope: !17411)
!17414 = !DILocation(line: 357, column: 40, scope: !17411)
!17415 = !DILocation(line: 358, column: 43, scope: !17411)
!17416 = !DILocation(line: 358, column: 21, scope: !17411)
!17417 = !DILocation(line: 358, column: 33, scope: !17411)
!17418 = !DILocation(line: 358, column: 41, scope: !17411)
!17419 = !DILocation(line: 359, column: 32, scope: !17411)
!17420 = !DILocation(line: 359, column: 37, scope: !17411)
!17421 = !DILocation(line: 359, column: 47, scope: !17411)
!17422 = !DILocation(line: 359, column: 21, scope: !17411)
!17423 = !DILocation(line: 360, column: 19, scope: !17411)
!17424 = !DILocation(line: 362, column: 21, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17394, file: !1026, line: 362, column: 21)
!17426 = !DILocation(line: 362, column: 33, scope: !17425)
!17427 = !DILocation(line: 362, column: 21, scope: !17394)
!17428 = !DILocation(line: 363, column: 19, scope: !17425)
!17429 = !DILocalVariable(name: "old_res", scope: !17430, file: !1026, line: 369, type: !7)
!17430 = distinct !DILexicalBlock(scope: !17316, file: !1026, line: 368, column: 15)
!17431 = !DILocation(line: 369, column: 21, scope: !17430)
!17432 = !DILocation(line: 369, column: 31, scope: !17430)
!17433 = !DILocalVariable(name: "a", scope: !17430, file: !1026, line: 370, type: !7)
!17434 = !DILocation(line: 370, column: 21, scope: !17430)
!17435 = !DILocation(line: 370, column: 48, scope: !17430)
!17436 = !DILocation(line: 370, column: 57, scope: !17430)
!17437 = !DILocation(line: 370, column: 34, scope: !17430)
!17438 = !DILocation(line: 371, column: 28, scope: !17430)
!17439 = !DILocation(line: 371, column: 26, scope: !17430)
!17440 = !DILocation(line: 370, column: 25, scope: !17430)
!17441 = !DILocation(line: 373, column: 21, scope: !17430)
!17442 = !DILocation(line: 375, column: 27, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17430, file: !1026, line: 375, column: 17)
!17444 = !DILocation(line: 375, column: 24, scope: !17443)
!17445 = !DILocation(line: 375, column: 22, scope: !17443)
!17446 = !DILocation(line: 375, column: 32, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17443, file: !1026, line: 375, column: 17)
!17448 = !DILocation(line: 375, column: 34, scope: !17447)
!17449 = !DILocation(line: 375, column: 39, scope: !17447)
!17450 = !DILocation(line: 375, column: 17, scope: !17443)
!17451 = !DILocation(line: 377, column: 25, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17453, file: !1026, line: 377, column: 25)
!17453 = distinct !DILexicalBlock(scope: !17447, file: !1026, line: 376, column: 19)
!17454 = !DILocation(line: 377, column: 29, scope: !17452)
!17455 = !DILocation(line: 377, column: 25, scope: !17453)
!17456 = !DILocation(line: 379, column: 29, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17452, file: !1026, line: 378, column: 23)
!17458 = !DILocation(line: 380, column: 25, scope: !17457)
!17459 = !DILocation(line: 382, column: 25, scope: !17453)
!17460 = !DILocation(line: 383, column: 25, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17453, file: !1026, line: 383, column: 25)
!17462 = !DILocation(line: 383, column: 32, scope: !17461)
!17463 = !DILocation(line: 383, column: 29, scope: !17461)
!17464 = !DILocation(line: 383, column: 25, scope: !17453)
!17465 = !DILocation(line: 384, column: 23, scope: !17461)
!17466 = !DILocation(line: 385, column: 19, scope: !17453)
!17467 = !DILocation(line: 375, column: 47, scope: !17447)
!17468 = !DILocation(line: 375, column: 17, scope: !17447)
!17469 = distinct !{!17469, !17450, !17470}
!17470 = !DILocation(line: 385, column: 19, scope: !17443)
!17471 = !DILocation(line: 387, column: 13, scope: !17316)
!17472 = !DILocation(line: 389, column: 33, scope: !17199)
!17473 = !DILocation(line: 389, column: 11, scope: !17199)
!17474 = !DILocation(line: 389, column: 20, scope: !17199)
!17475 = !DILocation(line: 389, column: 31, scope: !17199)
!17476 = !DILocation(line: 390, column: 11, scope: !17199)
!17477 = !DILocation(line: 390, column: 20, scope: !17199)
!17478 = !DILocation(line: 390, column: 26, scope: !17199)
!17479 = !DILocation(line: 391, column: 9, scope: !17199)
!17480 = !DILocation(line: 394, column: 19, scope: !17083)
!17481 = !DILocation(line: 394, column: 23, scope: !17083)
!17482 = !DILocation(line: 394, column: 16, scope: !17083)
!17483 = !DILocation(line: 394, column: 13, scope: !17083)
!17484 = !DILocation(line: 395, column: 17, scope: !17083)
!17485 = !DILocation(line: 395, column: 26, scope: !17083)
!17486 = !DILocation(line: 395, column: 24, scope: !17083)
!17487 = !DILocation(line: 395, column: 14, scope: !17083)
!17488 = !DILocation(line: 396, column: 5, scope: !17083)
!17489 = !DILocation(line: 399, column: 11, scope: !1025)
!17490 = !DILocation(line: 399, column: 19, scope: !1025)
!17491 = !DILocation(line: 399, column: 17, scope: !1025)
!17492 = !DILocation(line: 400, column: 13, scope: !1025)
!17493 = !DILocation(line: 400, column: 21, scope: !1025)
!17494 = !DILocation(line: 400, column: 19, scope: !1025)
!17495 = !DILocation(line: 401, column: 13, scope: !1025)
!17496 = !DILocation(line: 401, column: 22, scope: !1025)
!17497 = !DILocation(line: 401, column: 20, scope: !1025)
!17498 = !DILocation(line: 402, column: 13, scope: !1025)
!17499 = !DILocation(line: 402, column: 22, scope: !1025)
!17500 = !DILocation(line: 402, column: 20, scope: !1025)
!17501 = !DILocation(line: 399, column: 3, scope: !1025)
!17502 = !DILocation(line: 403, column: 1, scope: !1025)
!17503 = distinct !DISubprogram(name: "dev_info_hash", scope: !1026, file: !1026, line: 85, type: !829, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1052, retainedNodes: !298)
!17504 = !DILocalVariable(name: "x", arg: 1, scope: !17503, file: !1026, line: 85, type: !831)
!17505 = !DILocation(line: 85, column: 28, scope: !17503)
!17506 = !DILocalVariable(name: "table_size", arg: 2, scope: !17503, file: !1026, line: 85, type: !55)
!17507 = !DILocation(line: 85, column: 38, scope: !17503)
!17508 = !DILocalVariable(name: "p", scope: !17503, file: !1026, line: 87, type: !1064)
!17509 = !DILocation(line: 87, column: 24, scope: !17503)
!17510 = !DILocation(line: 87, column: 28, scope: !17503)
!17511 = !DILocation(line: 96, column: 10, scope: !17503)
!17512 = !DILocation(line: 96, column: 13, scope: !17503)
!17513 = !DILocation(line: 96, column: 19, scope: !17503)
!17514 = !DILocation(line: 96, column: 17, scope: !17503)
!17515 = !DILocation(line: 96, column: 3, scope: !17503)
!17516 = distinct !DISubprogram(name: "dev_info_compare", scope: !1026, file: !1026, line: 101, type: !836, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1052, retainedNodes: !298)
!17517 = !DILocalVariable(name: "x", arg: 1, scope: !17516, file: !1026, line: 101, type: !831)
!17518 = !DILocation(line: 101, column: 31, scope: !17516)
!17519 = !DILocalVariable(name: "y", arg: 2, scope: !17516, file: !1026, line: 101, type: !831)
!17520 = !DILocation(line: 101, column: 46, scope: !17516)
!17521 = !DILocalVariable(name: "a", scope: !17516, file: !1026, line: 103, type: !1064)
!17522 = !DILocation(line: 103, column: 24, scope: !17516)
!17523 = !DILocation(line: 103, column: 28, scope: !17516)
!17524 = !DILocalVariable(name: "b", scope: !17516, file: !1026, line: 104, type: !1064)
!17525 = !DILocation(line: 104, column: 24, scope: !17516)
!17526 = !DILocation(line: 104, column: 28, scope: !17516)
!17527 = !DILocation(line: 105, column: 10, scope: !17516)
!17528 = !DILocation(line: 105, column: 13, scope: !17516)
!17529 = !DILocation(line: 105, column: 20, scope: !17516)
!17530 = !DILocation(line: 105, column: 23, scope: !17516)
!17531 = !DILocation(line: 105, column: 17, scope: !17516)
!17532 = !DILocation(line: 105, column: 3, scope: !17516)
!17533 = distinct !DISubprogram(name: "lutimensat", scope: !17534, file: !17534, line: 42, type: !17535, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!17534 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17535 = !DISubroutineType(types: !17536)
!17536 = !{!7, !7, !183, !17537}
!17537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17538, size: 64)
!17538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!17539 = !DILocalVariable(name: "dir", arg: 1, scope: !17533, file: !17534, line: 42, type: !7)
!17540 = !DILocation(line: 42, column: 17, scope: !17533)
!17541 = !DILocalVariable(name: "file", arg: 2, scope: !17533, file: !17534, line: 42, type: !183)
!17542 = !DILocation(line: 42, column: 34, scope: !17533)
!17543 = !DILocalVariable(name: "times", arg: 3, scope: !17533, file: !17534, line: 42, type: !17537)
!17544 = !DILocation(line: 42, column: 62, scope: !17533)
!17545 = !DILocation(line: 44, column: 21, scope: !17533)
!17546 = !DILocation(line: 44, column: 26, scope: !17533)
!17547 = !DILocation(line: 44, column: 32, scope: !17533)
!17548 = !DILocation(line: 44, column: 10, scope: !17533)
!17549 = !DILocation(line: 44, column: 3, scope: !17533)
!17550 = distinct !DISubprogram(name: "fdutimens", scope: !1091, file: !1091, line: 170, type: !17535, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!17551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !17552)
!17552 = !{!17553, !17554, !17555, !17556, !17557, !17558, !17559, !17560, !17561, !17562, !17563, !17564, !17565, !17566, !17567}
!17553 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17551, file: !463, line: 48, baseType: !452, size: 64)
!17554 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17551, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!17555 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17551, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!17556 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17551, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!17557 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17551, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!17558 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17551, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!17559 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17551, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!17560 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17551, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!17561 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17551, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!17562 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17551, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!17563 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17551, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!17564 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17551, file: !463, line: 91, baseType: !1075, size: 128, offset: 576)
!17565 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17551, file: !463, line: 92, baseType: !1075, size: 128, offset: 704)
!17566 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17551, file: !463, line: 93, baseType: !1075, size: 128, offset: 832)
!17567 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17551, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!17568 = !DILocalVariable(name: "fd", arg: 1, scope: !17550, file: !1091, line: 170, type: !7)
!17569 = !DILocation(line: 170, column: 16, scope: !17550)
!17570 = !DILocalVariable(name: "file", arg: 2, scope: !17550, file: !1091, line: 170, type: !183)
!17571 = !DILocation(line: 170, column: 32, scope: !17550)
!17572 = !DILocalVariable(name: "timespec", arg: 3, scope: !17550, file: !1091, line: 170, type: !17537)
!17573 = !DILocation(line: 170, column: 60, scope: !17550)
!17574 = !DILocalVariable(name: "adjusted_timespec", scope: !17550, file: !1091, line: 172, type: !1074)
!17575 = !DILocation(line: 172, column: 19, scope: !17550)
!17576 = !DILocalVariable(name: "ts", scope: !17550, file: !1091, line: 173, type: !1079)
!17577 = !DILocation(line: 173, column: 20, scope: !17550)
!17578 = !DILocation(line: 173, column: 25, scope: !17550)
!17579 = !DILocation(line: 173, column: 36, scope: !17550)
!17580 = !DILocalVariable(name: "adjustment_needed", scope: !17550, file: !1091, line: 174, type: !7)
!17581 = !DILocation(line: 174, column: 7, scope: !17550)
!17582 = !DILocalVariable(name: "st", scope: !17550, file: !1091, line: 175, type: !17551)
!17583 = !DILocation(line: 175, column: 15, scope: !17550)
!17584 = !DILocation(line: 177, column: 7, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 177, column: 7)
!17586 = !DILocation(line: 177, column: 7, scope: !17550)
!17587 = !DILocation(line: 179, column: 7, scope: !17588)
!17588 = distinct !DILexicalBlock(scope: !17585, file: !1091, line: 178, column: 5)
!17589 = !DILocation(line: 179, column: 30, scope: !17588)
!17590 = !DILocation(line: 180, column: 7, scope: !17588)
!17591 = !DILocation(line: 180, column: 30, scope: !17588)
!17592 = !DILocation(line: 181, column: 46, scope: !17588)
!17593 = !DILocation(line: 181, column: 27, scope: !17588)
!17594 = !DILocation(line: 181, column: 25, scope: !17588)
!17595 = !DILocation(line: 182, column: 5, scope: !17588)
!17596 = !DILocation(line: 183, column: 7, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 183, column: 7)
!17598 = !DILocation(line: 183, column: 25, scope: !17597)
!17599 = !DILocation(line: 183, column: 7, scope: !17550)
!17600 = !DILocation(line: 184, column: 5, scope: !17597)
!17601 = !DILocation(line: 189, column: 7, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 189, column: 7)
!17603 = !DILocation(line: 189, column: 10, scope: !17602)
!17604 = !DILocation(line: 189, column: 14, scope: !17602)
!17605 = !DILocation(line: 189, column: 18, scope: !17602)
!17606 = !DILocation(line: 189, column: 7, scope: !17550)
!17607 = !DILocation(line: 191, column: 7, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17602, file: !1091, line: 190, column: 5)
!17609 = !DILocation(line: 191, column: 13, scope: !17608)
!17610 = !DILocation(line: 192, column: 7, scope: !17608)
!17611 = !DILocation(line: 218, column: 12, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 218, column: 7)
!17613 = !DILocation(line: 218, column: 9, scope: !17612)
!17614 = !DILocation(line: 218, column: 7, scope: !17550)
!17615 = !DILocalVariable(name: "result", scope: !17616, file: !1091, line: 220, type: !7)
!17616 = distinct !DILexicalBlock(scope: !17612, file: !1091, line: 219, column: 5)
!17617 = !DILocation(line: 220, column: 11, scope: !17616)
!17618 = !DILocation(line: 234, column: 11, scope: !17619)
!17619 = distinct !DILexicalBlock(scope: !17616, file: !1091, line: 234, column: 11)
!17620 = !DILocation(line: 234, column: 29, scope: !17619)
!17621 = !DILocation(line: 234, column: 11, scope: !17616)
!17622 = !DILocation(line: 236, column: 15, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17624, file: !1091, line: 236, column: 15)
!17624 = distinct !DILexicalBlock(scope: !17619, file: !1091, line: 235, column: 9)
!17625 = !DILocation(line: 236, column: 18, scope: !17623)
!17626 = !DILocation(line: 236, column: 15, scope: !17624)
!17627 = !DILocation(line: 236, column: 30, scope: !17623)
!17628 = !DILocation(line: 236, column: 24, scope: !17623)
!17629 = !DILocation(line: 236, column: 50, scope: !17623)
!17630 = !DILocation(line: 236, column: 43, scope: !17623)
!17631 = !DILocation(line: 237, column: 13, scope: !17623)
!17632 = !DILocation(line: 238, column: 15, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17624, file: !1091, line: 238, column: 15)
!17634 = !DILocation(line: 238, column: 21, scope: !17633)
!17635 = !DILocation(line: 238, column: 29, scope: !17633)
!17636 = !DILocation(line: 238, column: 15, scope: !17624)
!17637 = !DILocation(line: 239, column: 13, scope: !17633)
!17638 = !DILocation(line: 239, column: 21, scope: !17633)
!17639 = !DILocation(line: 240, column: 20, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17633, file: !1091, line: 240, column: 20)
!17641 = !DILocation(line: 240, column: 26, scope: !17640)
!17642 = !DILocation(line: 240, column: 34, scope: !17640)
!17643 = !DILocation(line: 240, column: 20, scope: !17633)
!17644 = !DILocation(line: 241, column: 13, scope: !17640)
!17645 = !DILocation(line: 241, column: 21, scope: !17640)
!17646 = !DILocation(line: 243, column: 28, scope: !17624)
!17647 = !DILocation(line: 244, column: 9, scope: !17624)
!17648 = !DILocation(line: 247, column: 11, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17616, file: !1091, line: 247, column: 11)
!17650 = !DILocation(line: 247, column: 14, scope: !17649)
!17651 = !DILocation(line: 247, column: 11, scope: !17616)
!17652 = !DILocation(line: 249, column: 41, scope: !17653)
!17653 = distinct !DILexicalBlock(scope: !17649, file: !1091, line: 248, column: 9)
!17654 = !DILocation(line: 249, column: 47, scope: !17653)
!17655 = !DILocation(line: 249, column: 20, scope: !17653)
!17656 = !DILocation(line: 249, column: 18, scope: !17653)
!17657 = !DILocation(line: 258, column: 19, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17653, file: !1091, line: 258, column: 15)
!17659 = !DILocation(line: 258, column: 17, scope: !17658)
!17660 = !DILocation(line: 258, column: 15, scope: !17653)
!17661 = !DILocation(line: 259, column: 13, scope: !17658)
!17662 = !DILocation(line: 259, column: 19, scope: !17658)
!17663 = !DILocation(line: 261, column: 15, scope: !17664)
!17664 = distinct !DILexicalBlock(scope: !17653, file: !1091, line: 261, column: 15)
!17665 = !DILocation(line: 261, column: 22, scope: !17664)
!17666 = !DILocation(line: 261, column: 27, scope: !17664)
!17667 = !DILocation(line: 261, column: 30, scope: !17664)
!17668 = !DILocation(line: 261, column: 36, scope: !17664)
!17669 = !DILocation(line: 261, column: 15, scope: !17653)
!17670 = !DILocation(line: 263, column: 38, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17664, file: !1091, line: 262, column: 13)
!17672 = !DILocation(line: 264, column: 22, scope: !17671)
!17673 = !DILocation(line: 264, column: 15, scope: !17671)
!17674 = !DILocation(line: 266, column: 9, scope: !17653)
!17675 = !DILocation(line: 269, column: 16, scope: !17676)
!17676 = distinct !DILexicalBlock(scope: !17616, file: !1091, line: 269, column: 11)
!17677 = !DILocation(line: 269, column: 13, scope: !17676)
!17678 = !DILocation(line: 269, column: 11, scope: !17616)
!17679 = !DILocation(line: 271, column: 30, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17676, file: !1091, line: 270, column: 9)
!17681 = !DILocation(line: 271, column: 34, scope: !17680)
!17682 = !DILocation(line: 271, column: 20, scope: !17680)
!17683 = !DILocation(line: 271, column: 18, scope: !17680)
!17684 = !DILocation(line: 274, column: 19, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17680, file: !1091, line: 274, column: 15)
!17686 = !DILocation(line: 274, column: 17, scope: !17685)
!17687 = !DILocation(line: 274, column: 15, scope: !17680)
!17688 = !DILocation(line: 275, column: 13, scope: !17685)
!17689 = !DILocation(line: 275, column: 19, scope: !17685)
!17690 = !DILocation(line: 277, column: 15, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17680, file: !1091, line: 277, column: 15)
!17692 = !DILocation(line: 277, column: 22, scope: !17691)
!17693 = !DILocation(line: 277, column: 27, scope: !17691)
!17694 = !DILocation(line: 277, column: 30, scope: !17691)
!17695 = !DILocation(line: 277, column: 36, scope: !17691)
!17696 = !DILocation(line: 277, column: 15, scope: !17680)
!17697 = !DILocation(line: 279, column: 38, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17691, file: !1091, line: 278, column: 13)
!17699 = !DILocation(line: 280, column: 22, scope: !17698)
!17700 = !DILocation(line: 280, column: 15, scope: !17698)
!17701 = !DILocation(line: 282, column: 9, scope: !17680)
!17702 = !DILocation(line: 284, column: 5, scope: !17616)
!17703 = !DILocation(line: 285, column: 26, scope: !17550)
!17704 = !DILocation(line: 286, column: 27, scope: !17550)
!17705 = !DILocation(line: 377, column: 7, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 377, column: 7)
!17707 = !DILocation(line: 377, column: 7, scope: !17550)
!17708 = !DILocation(line: 379, column: 11, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17710, file: !1091, line: 379, column: 11)
!17710 = distinct !DILexicalBlock(scope: !17706, file: !1091, line: 378, column: 5)
!17711 = !DILocation(line: 379, column: 29, scope: !17709)
!17712 = !DILocation(line: 380, column: 11, scope: !17709)
!17713 = !DILocation(line: 380, column: 15, scope: !17709)
!17714 = !DILocation(line: 380, column: 18, scope: !17709)
!17715 = !DILocation(line: 379, column: 11, scope: !17710)
!17716 = !DILocation(line: 380, column: 30, scope: !17709)
!17717 = !DILocation(line: 380, column: 24, scope: !17709)
!17718 = !DILocation(line: 380, column: 50, scope: !17709)
!17719 = !DILocation(line: 380, column: 43, scope: !17709)
!17720 = !DILocation(line: 381, column: 9, scope: !17709)
!17721 = !DILocation(line: 382, column: 11, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17710, file: !1091, line: 382, column: 11)
!17723 = !DILocation(line: 382, column: 14, scope: !17722)
!17724 = !DILocation(line: 382, column: 17, scope: !17722)
!17725 = !DILocation(line: 382, column: 11, scope: !17710)
!17726 = !DILocation(line: 383, column: 9, scope: !17722)
!17727 = !DILocation(line: 384, column: 5, scope: !17710)
!17728 = !DILocalVariable(name: "timeval", scope: !17729, file: !1091, line: 388, type: !1080)
!17729 = distinct !DILexicalBlock(scope: !17550, file: !1091, line: 386, column: 3)
!17730 = !DILocation(line: 388, column: 20, scope: !17729)
!17731 = !DILocalVariable(name: "t", scope: !17729, file: !1091, line: 389, type: !1087)
!17732 = !DILocation(line: 389, column: 21, scope: !17729)
!17733 = !DILocation(line: 390, column: 9, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17729, file: !1091, line: 390, column: 9)
!17735 = !DILocation(line: 390, column: 9, scope: !17729)
!17736 = !DILocation(line: 392, column: 29, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17734, file: !1091, line: 391, column: 7)
!17738 = !DILocation(line: 392, column: 35, scope: !17737)
!17739 = !DILocation(line: 392, column: 9, scope: !17737)
!17740 = !DILocation(line: 392, column: 20, scope: !17737)
!17741 = !DILocation(line: 392, column: 27, scope: !17737)
!17742 = !DILocation(line: 393, column: 30, scope: !17737)
!17743 = !DILocation(line: 393, column: 36, scope: !17737)
!17744 = !DILocation(line: 393, column: 44, scope: !17737)
!17745 = !DILocation(line: 393, column: 9, scope: !17737)
!17746 = !DILocation(line: 393, column: 20, scope: !17737)
!17747 = !DILocation(line: 393, column: 28, scope: !17737)
!17748 = !DILocation(line: 394, column: 29, scope: !17737)
!17749 = !DILocation(line: 394, column: 35, scope: !17737)
!17750 = !DILocation(line: 394, column: 9, scope: !17737)
!17751 = !DILocation(line: 394, column: 20, scope: !17737)
!17752 = !DILocation(line: 394, column: 27, scope: !17737)
!17753 = !DILocation(line: 395, column: 30, scope: !17737)
!17754 = !DILocation(line: 395, column: 36, scope: !17737)
!17755 = !DILocation(line: 395, column: 44, scope: !17737)
!17756 = !DILocation(line: 395, column: 9, scope: !17737)
!17757 = !DILocation(line: 395, column: 20, scope: !17737)
!17758 = !DILocation(line: 395, column: 28, scope: !17737)
!17759 = !DILocation(line: 396, column: 13, scope: !17737)
!17760 = !DILocation(line: 396, column: 11, scope: !17737)
!17761 = !DILocation(line: 397, column: 7, scope: !17737)
!17762 = !DILocation(line: 399, column: 9, scope: !17734)
!17763 = !DILocation(line: 401, column: 9, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17729, file: !1091, line: 401, column: 9)
!17765 = !DILocation(line: 401, column: 12, scope: !17764)
!17766 = !DILocation(line: 401, column: 9, scope: !17729)
!17767 = !DILocation(line: 404, column: 37, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17764, file: !1091, line: 402, column: 7)
!17769 = !DILocation(line: 404, column: 43, scope: !17768)
!17770 = !DILocation(line: 404, column: 16, scope: !17768)
!17771 = !DILocation(line: 404, column: 9, scope: !17768)
!17772 = !DILocation(line: 425, column: 13, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17774, file: !1091, line: 425, column: 13)
!17774 = distinct !DILexicalBlock(scope: !17764, file: !1091, line: 408, column: 7)
!17775 = !DILocation(line: 425, column: 29, scope: !17773)
!17776 = !DILocation(line: 425, column: 13, scope: !17774)
!17777 = !DILocation(line: 433, column: 17, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17779, file: !1091, line: 433, column: 17)
!17779 = distinct !DILexicalBlock(scope: !17773, file: !1091, line: 426, column: 11)
!17780 = !DILocation(line: 433, column: 17, scope: !17779)
!17781 = !DILocalVariable(name: "abig", scope: !17782, file: !1091, line: 435, type: !142)
!17782 = distinct !DILexicalBlock(scope: !17778, file: !1091, line: 434, column: 15)
!17783 = !DILocation(line: 435, column: 22, scope: !17782)
!17784 = !DILocation(line: 435, column: 39, scope: !17782)
!17785 = !DILocation(line: 435, column: 44, scope: !17782)
!17786 = !DILocation(line: 435, column: 36, scope: !17782)
!17787 = !DILocalVariable(name: "mbig", scope: !17782, file: !1091, line: 436, type: !142)
!17788 = !DILocation(line: 436, column: 22, scope: !17782)
!17789 = !DILocation(line: 436, column: 39, scope: !17782)
!17790 = !DILocation(line: 436, column: 44, scope: !17782)
!17791 = !DILocation(line: 436, column: 36, scope: !17782)
!17792 = !DILocation(line: 437, column: 22, scope: !17793)
!17793 = distinct !DILexicalBlock(scope: !17782, file: !1091, line: 437, column: 21)
!17794 = !DILocation(line: 437, column: 29, scope: !17793)
!17795 = !DILocation(line: 437, column: 27, scope: !17793)
!17796 = !DILocation(line: 437, column: 35, scope: !17793)
!17797 = !DILocation(line: 437, column: 45, scope: !17793)
!17798 = !DILocation(line: 437, column: 38, scope: !17793)
!17799 = !DILocation(line: 437, column: 54, scope: !17793)
!17800 = !DILocation(line: 437, column: 21, scope: !17782)
!17801 = !DILocalVariable(name: "adiff", scope: !17802, file: !1091, line: 441, type: !1055)
!17802 = distinct !DILexicalBlock(scope: !17793, file: !1091, line: 438, column: 19)
!17803 = !DILocation(line: 441, column: 28, scope: !17802)
!17804 = !DILocation(line: 441, column: 39, scope: !17802)
!17805 = !DILocation(line: 441, column: 50, scope: !17802)
!17806 = !DILocation(line: 441, column: 55, scope: !17802)
!17807 = !DILocation(line: 441, column: 48, scope: !17802)
!17808 = !DILocalVariable(name: "mdiff", scope: !17802, file: !1091, line: 442, type: !1055)
!17809 = !DILocation(line: 442, column: 28, scope: !17802)
!17810 = !DILocation(line: 442, column: 39, scope: !17802)
!17811 = !DILocation(line: 442, column: 50, scope: !17802)
!17812 = !DILocation(line: 442, column: 55, scope: !17802)
!17813 = !DILocation(line: 442, column: 48, scope: !17802)
!17814 = !DILocalVariable(name: "tt", scope: !17802, file: !1091, line: 444, type: !1087)
!17815 = !DILocation(line: 444, column: 37, scope: !17802)
!17816 = !DILocalVariable(name: "truncated_timeval", scope: !17802, file: !1091, line: 445, type: !1080)
!17817 = !DILocation(line: 445, column: 36, scope: !17802)
!17818 = !DILocation(line: 446, column: 21, scope: !17802)
!17819 = !DILocation(line: 446, column: 44, scope: !17802)
!17820 = !DILocation(line: 447, column: 21, scope: !17802)
!17821 = !DILocation(line: 447, column: 44, scope: !17802)
!17822 = !DILocation(line: 448, column: 25, scope: !17823)
!17823 = distinct !DILexicalBlock(scope: !17802, file: !1091, line: 448, column: 25)
!17824 = !DILocation(line: 448, column: 30, scope: !17823)
!17825 = !DILocation(line: 448, column: 33, scope: !17823)
!17826 = !DILocation(line: 448, column: 39, scope: !17823)
!17827 = !DILocation(line: 448, column: 44, scope: !17823)
!17828 = !DILocation(line: 448, column: 47, scope: !17823)
!17829 = !DILocation(line: 448, column: 71, scope: !17823)
!17830 = !DILocation(line: 448, column: 25, scope: !17802)
!17831 = !DILocation(line: 450, column: 30, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17823, file: !1091, line: 449, column: 23)
!17833 = !DILocation(line: 450, column: 28, scope: !17832)
!17834 = !DILocation(line: 451, column: 25, scope: !17832)
!17835 = !DILocation(line: 451, column: 31, scope: !17832)
!17836 = !DILocation(line: 451, column: 39, scope: !17832)
!17837 = !DILocation(line: 452, column: 23, scope: !17832)
!17838 = !DILocation(line: 453, column: 25, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17802, file: !1091, line: 453, column: 25)
!17840 = !DILocation(line: 453, column: 30, scope: !17839)
!17841 = !DILocation(line: 453, column: 33, scope: !17839)
!17842 = !DILocation(line: 453, column: 39, scope: !17839)
!17843 = !DILocation(line: 453, column: 44, scope: !17839)
!17844 = !DILocation(line: 453, column: 47, scope: !17839)
!17845 = !DILocation(line: 453, column: 71, scope: !17839)
!17846 = !DILocation(line: 453, column: 25, scope: !17802)
!17847 = !DILocation(line: 455, column: 30, scope: !17848)
!17848 = distinct !DILexicalBlock(scope: !17839, file: !1091, line: 454, column: 23)
!17849 = !DILocation(line: 455, column: 28, scope: !17848)
!17850 = !DILocation(line: 456, column: 25, scope: !17848)
!17851 = !DILocation(line: 456, column: 31, scope: !17848)
!17852 = !DILocation(line: 456, column: 39, scope: !17848)
!17853 = !DILocation(line: 457, column: 23, scope: !17848)
!17854 = !DILocation(line: 458, column: 25, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17802, file: !1091, line: 458, column: 25)
!17856 = !DILocation(line: 458, column: 25, scope: !17802)
!17857 = !DILocation(line: 459, column: 23, scope: !17855)
!17858 = !DILocation(line: 460, column: 19, scope: !17802)
!17859 = !DILocation(line: 461, column: 15, scope: !17782)
!17860 = !DILocation(line: 464, column: 13, scope: !17779)
!17861 = !DILocation(line: 470, column: 10, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17729, file: !1091, line: 470, column: 9)
!17863 = !DILocation(line: 470, column: 9, scope: !17729)
!17864 = !DILocation(line: 476, column: 9, scope: !17865)
!17865 = distinct !DILexicalBlock(scope: !17862, file: !1091, line: 471, column: 7)
!17866 = !DILocation(line: 482, column: 20, scope: !17729)
!17867 = !DILocation(line: 482, column: 26, scope: !17729)
!17868 = !DILocation(line: 482, column: 12, scope: !17729)
!17869 = !DILocation(line: 482, column: 5, scope: !17729)
!17870 = !DILocation(line: 500, column: 1, scope: !17550)
!17871 = distinct !DISubprogram(name: "validate_timespec", scope: !1091, file: !1091, line: 87, type: !17872, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!17872 = !DISubroutineType(types: !17873)
!17873 = !{!7, !1079}
!17874 = !DILocalVariable(name: "timespec", arg: 1, scope: !17871, file: !1091, line: 87, type: !1079)
!17875 = !DILocation(line: 87, column: 36, scope: !17871)
!17876 = !DILocalVariable(name: "result", scope: !17871, file: !1091, line: 89, type: !7)
!17877 = !DILocation(line: 89, column: 7, scope: !17871)
!17878 = !DILocalVariable(name: "utime_omit_count", scope: !17871, file: !1091, line: 90, type: !7)
!17879 = !DILocation(line: 90, column: 7, scope: !17871)
!17880 = !DILocation(line: 91, column: 8, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17871, file: !1091, line: 91, column: 7)
!17882 = !DILocation(line: 91, column: 20, scope: !17881)
!17883 = !DILocation(line: 91, column: 28, scope: !17881)
!17884 = !DILocation(line: 92, column: 8, scope: !17881)
!17885 = !DILocation(line: 92, column: 11, scope: !17881)
!17886 = !DILocation(line: 92, column: 23, scope: !17881)
!17887 = !DILocation(line: 92, column: 31, scope: !17881)
!17888 = !DILocation(line: 93, column: 8, scope: !17881)
!17889 = !DILocation(line: 93, column: 19, scope: !17881)
!17890 = !DILocation(line: 93, column: 31, scope: !17881)
!17891 = !DILocation(line: 93, column: 16, scope: !17881)
!17892 = !DILocation(line: 94, column: 14, scope: !17881)
!17893 = !DILocation(line: 94, column: 17, scope: !17881)
!17894 = !DILocation(line: 94, column: 29, scope: !17881)
!17895 = !DILocation(line: 94, column: 37, scope: !17881)
!17896 = !DILocation(line: 95, column: 7, scope: !17881)
!17897 = !DILocation(line: 95, column: 11, scope: !17881)
!17898 = !DILocation(line: 95, column: 23, scope: !17881)
!17899 = !DILocation(line: 95, column: 31, scope: !17881)
!17900 = !DILocation(line: 96, column: 11, scope: !17881)
!17901 = !DILocation(line: 96, column: 14, scope: !17881)
!17902 = !DILocation(line: 96, column: 26, scope: !17881)
!17903 = !DILocation(line: 96, column: 34, scope: !17881)
!17904 = !DILocation(line: 97, column: 11, scope: !17881)
!17905 = !DILocation(line: 97, column: 22, scope: !17881)
!17906 = !DILocation(line: 97, column: 34, scope: !17881)
!17907 = !DILocation(line: 97, column: 19, scope: !17881)
!17908 = !DILocation(line: 98, column: 17, scope: !17881)
!17909 = !DILocation(line: 98, column: 20, scope: !17881)
!17910 = !DILocation(line: 98, column: 32, scope: !17881)
!17911 = !DILocation(line: 98, column: 40, scope: !17881)
!17912 = !DILocation(line: 91, column: 7, scope: !17871)
!17913 = !DILocation(line: 100, column: 7, scope: !17914)
!17914 = distinct !DILexicalBlock(scope: !17881, file: !1091, line: 99, column: 5)
!17915 = !DILocation(line: 100, column: 13, scope: !17914)
!17916 = !DILocation(line: 101, column: 7, scope: !17914)
!17917 = !DILocation(line: 107, column: 7, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17871, file: !1091, line: 107, column: 7)
!17919 = !DILocation(line: 107, column: 19, scope: !17918)
!17920 = !DILocation(line: 107, column: 27, scope: !17918)
!17921 = !DILocation(line: 108, column: 7, scope: !17918)
!17922 = !DILocation(line: 108, column: 10, scope: !17918)
!17923 = !DILocation(line: 108, column: 22, scope: !17918)
!17924 = !DILocation(line: 108, column: 30, scope: !17918)
!17925 = !DILocation(line: 107, column: 7, scope: !17871)
!17926 = !DILocation(line: 110, column: 7, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17918, file: !1091, line: 109, column: 5)
!17928 = !DILocation(line: 110, column: 19, scope: !17927)
!17929 = !DILocation(line: 110, column: 26, scope: !17927)
!17930 = !DILocation(line: 111, column: 14, scope: !17927)
!17931 = !DILocation(line: 112, column: 11, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17927, file: !1091, line: 112, column: 11)
!17933 = !DILocation(line: 112, column: 23, scope: !17932)
!17934 = !DILocation(line: 112, column: 31, scope: !17932)
!17935 = !DILocation(line: 112, column: 11, scope: !17927)
!17936 = !DILocation(line: 113, column: 25, scope: !17932)
!17937 = !DILocation(line: 113, column: 9, scope: !17932)
!17938 = !DILocation(line: 114, column: 5, scope: !17927)
!17939 = !DILocation(line: 115, column: 7, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17871, file: !1091, line: 115, column: 7)
!17941 = !DILocation(line: 115, column: 19, scope: !17940)
!17942 = !DILocation(line: 115, column: 27, scope: !17940)
!17943 = !DILocation(line: 116, column: 7, scope: !17940)
!17944 = !DILocation(line: 116, column: 10, scope: !17940)
!17945 = !DILocation(line: 116, column: 22, scope: !17940)
!17946 = !DILocation(line: 116, column: 30, scope: !17940)
!17947 = !DILocation(line: 115, column: 7, scope: !17871)
!17948 = !DILocation(line: 118, column: 7, scope: !17949)
!17949 = distinct !DILexicalBlock(scope: !17940, file: !1091, line: 117, column: 5)
!17950 = !DILocation(line: 118, column: 19, scope: !17949)
!17951 = !DILocation(line: 118, column: 26, scope: !17949)
!17952 = !DILocation(line: 119, column: 14, scope: !17949)
!17953 = !DILocation(line: 120, column: 11, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17949, file: !1091, line: 120, column: 11)
!17955 = !DILocation(line: 120, column: 23, scope: !17954)
!17956 = !DILocation(line: 120, column: 31, scope: !17954)
!17957 = !DILocation(line: 120, column: 11, scope: !17949)
!17958 = !DILocation(line: 121, column: 25, scope: !17954)
!17959 = !DILocation(line: 121, column: 9, scope: !17954)
!17960 = !DILocation(line: 122, column: 5, scope: !17949)
!17961 = !DILocation(line: 123, column: 10, scope: !17871)
!17962 = !DILocation(line: 123, column: 20, scope: !17871)
!17963 = !DILocation(line: 123, column: 37, scope: !17871)
!17964 = !DILocation(line: 123, column: 17, scope: !17871)
!17965 = !DILocation(line: 123, column: 3, scope: !17871)
!17966 = !DILocation(line: 124, column: 1, scope: !17871)
!17967 = distinct !DISubprogram(name: "update_timespec", scope: !1091, file: !1091, line: 133, type: !17968, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!17968 = !DISubroutineType(types: !17969)
!17969 = !{!142, !17970, !17972}
!17970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17971, size: 64)
!17971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17551)
!17972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!17973 = !DILocalVariable(name: "statbuf", arg: 1, scope: !17967, file: !1091, line: 133, type: !17970)
!17974 = !DILocation(line: 133, column: 37, scope: !17967)
!17975 = !DILocalVariable(name: "ts", arg: 2, scope: !17967, file: !1091, line: 133, type: !17972)
!17976 = !DILocation(line: 133, column: 63, scope: !17967)
!17977 = !DILocalVariable(name: "timespec", scope: !17967, file: !1091, line: 135, type: !1079)
!17978 = !DILocation(line: 135, column: 20, scope: !17967)
!17979 = !DILocation(line: 135, column: 32, scope: !17967)
!17980 = !DILocation(line: 135, column: 31, scope: !17967)
!17981 = !DILocation(line: 136, column: 7, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17967, file: !1091, line: 136, column: 7)
!17983 = !DILocation(line: 136, column: 19, scope: !17982)
!17984 = !DILocation(line: 136, column: 27, scope: !17982)
!17985 = !DILocation(line: 137, column: 7, scope: !17982)
!17986 = !DILocation(line: 137, column: 10, scope: !17982)
!17987 = !DILocation(line: 137, column: 22, scope: !17982)
!17988 = !DILocation(line: 137, column: 30, scope: !17982)
!17989 = !DILocation(line: 136, column: 7, scope: !17967)
!17990 = !DILocation(line: 138, column: 5, scope: !17982)
!17991 = !DILocation(line: 139, column: 7, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17967, file: !1091, line: 139, column: 7)
!17993 = !DILocation(line: 139, column: 19, scope: !17992)
!17994 = !DILocation(line: 139, column: 27, scope: !17992)
!17995 = !DILocation(line: 140, column: 7, scope: !17992)
!17996 = !DILocation(line: 140, column: 10, scope: !17992)
!17997 = !DILocation(line: 140, column: 22, scope: !17992)
!17998 = !DILocation(line: 140, column: 30, scope: !17992)
!17999 = !DILocation(line: 139, column: 7, scope: !17967)
!18000 = !DILocation(line: 142, column: 8, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17992, file: !1091, line: 141, column: 5)
!18002 = !DILocation(line: 142, column: 11, scope: !18001)
!18003 = !DILocation(line: 143, column: 7, scope: !18001)
!18004 = !DILocation(line: 146, column: 7, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !17967, file: !1091, line: 146, column: 7)
!18006 = !DILocation(line: 146, column: 19, scope: !18005)
!18007 = !DILocation(line: 146, column: 27, scope: !18005)
!18008 = !DILocation(line: 146, column: 7, scope: !17967)
!18009 = !DILocation(line: 147, column: 5, scope: !18005)
!18010 = !DILocation(line: 147, column: 35, scope: !18005)
!18011 = !DILocation(line: 147, column: 19, scope: !18005)
!18012 = !DILocation(line: 148, column: 12, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18005, file: !1091, line: 148, column: 12)
!18014 = !DILocation(line: 148, column: 24, scope: !18013)
!18015 = !DILocation(line: 148, column: 32, scope: !18013)
!18016 = !DILocation(line: 148, column: 12, scope: !18005)
!18017 = !DILocation(line: 149, column: 15, scope: !18013)
!18018 = !DILocation(line: 149, column: 5, scope: !18013)
!18019 = !DILocation(line: 151, column: 7, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !17967, file: !1091, line: 151, column: 7)
!18021 = !DILocation(line: 151, column: 19, scope: !18020)
!18022 = !DILocation(line: 151, column: 27, scope: !18020)
!18023 = !DILocation(line: 151, column: 7, scope: !17967)
!18024 = !DILocation(line: 152, column: 5, scope: !18020)
!18025 = !DILocation(line: 152, column: 35, scope: !18020)
!18026 = !DILocation(line: 152, column: 19, scope: !18020)
!18027 = !DILocation(line: 153, column: 12, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18020, file: !1091, line: 153, column: 12)
!18029 = !DILocation(line: 153, column: 24, scope: !18028)
!18030 = !DILocation(line: 153, column: 32, scope: !18028)
!18031 = !DILocation(line: 153, column: 12, scope: !18020)
!18032 = !DILocation(line: 154, column: 15, scope: !18028)
!18033 = !DILocation(line: 154, column: 5, scope: !18028)
!18034 = !DILocation(line: 156, column: 3, scope: !17967)
!18035 = !DILocation(line: 157, column: 1, scope: !17967)
!18036 = distinct !DISubprogram(name: "utimens", scope: !1091, file: !1091, line: 505, type: !18037, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!18037 = !DISubroutineType(types: !18038)
!18038 = !{!7, !183, !17537}
!18039 = !DILocalVariable(name: "file", arg: 1, scope: !18036, file: !1091, line: 505, type: !183)
!18040 = !DILocation(line: 505, column: 22, scope: !18036)
!18041 = !DILocalVariable(name: "timespec", arg: 2, scope: !18036, file: !1091, line: 505, type: !17537)
!18042 = !DILocation(line: 505, column: 50, scope: !18036)
!18043 = !DILocation(line: 507, column: 25, scope: !18036)
!18044 = !DILocation(line: 507, column: 31, scope: !18036)
!18045 = !DILocation(line: 507, column: 10, scope: !18036)
!18046 = !DILocation(line: 507, column: 3, scope: !18036)
!18047 = distinct !DISubprogram(name: "lutimens", scope: !1091, file: !1091, line: 515, type: !18037, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1071, retainedNodes: !298)
!18048 = !DILocalVariable(name: "file", arg: 1, scope: !18047, file: !1091, line: 515, type: !183)
!18049 = !DILocation(line: 515, column: 23, scope: !18047)
!18050 = !DILocalVariable(name: "timespec", arg: 2, scope: !18047, file: !1091, line: 515, type: !17537)
!18051 = !DILocation(line: 515, column: 51, scope: !18047)
!18052 = !DILocalVariable(name: "adjusted_timespec", scope: !18047, file: !1091, line: 517, type: !1074)
!18053 = !DILocation(line: 517, column: 19, scope: !18047)
!18054 = !DILocalVariable(name: "ts", scope: !18047, file: !1091, line: 518, type: !1079)
!18055 = !DILocation(line: 518, column: 20, scope: !18047)
!18056 = !DILocation(line: 518, column: 25, scope: !18047)
!18057 = !DILocation(line: 518, column: 36, scope: !18047)
!18058 = !DILocalVariable(name: "adjustment_needed", scope: !18047, file: !1091, line: 519, type: !7)
!18059 = !DILocation(line: 519, column: 7, scope: !18047)
!18060 = !DILocalVariable(name: "st", scope: !18047, file: !1091, line: 520, type: !17551)
!18061 = !DILocation(line: 520, column: 15, scope: !18047)
!18062 = !DILocation(line: 522, column: 7, scope: !18063)
!18063 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 522, column: 7)
!18064 = !DILocation(line: 522, column: 7, scope: !18047)
!18065 = !DILocation(line: 524, column: 7, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18063, file: !1091, line: 523, column: 5)
!18067 = !DILocation(line: 524, column: 30, scope: !18066)
!18068 = !DILocation(line: 525, column: 7, scope: !18066)
!18069 = !DILocation(line: 525, column: 30, scope: !18066)
!18070 = !DILocation(line: 526, column: 46, scope: !18066)
!18071 = !DILocation(line: 526, column: 27, scope: !18066)
!18072 = !DILocation(line: 526, column: 25, scope: !18066)
!18073 = !DILocation(line: 527, column: 5, scope: !18066)
!18074 = !DILocation(line: 528, column: 7, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 528, column: 7)
!18076 = !DILocation(line: 528, column: 25, scope: !18075)
!18077 = !DILocation(line: 528, column: 7, scope: !18047)
!18078 = !DILocation(line: 529, column: 5, scope: !18075)
!18079 = !DILocation(line: 537, column: 12, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 537, column: 7)
!18081 = !DILocation(line: 537, column: 9, scope: !18080)
!18082 = !DILocation(line: 537, column: 7, scope: !18047)
!18083 = !DILocalVariable(name: "result", scope: !18084, file: !1091, line: 539, type: !7)
!18084 = distinct !DILexicalBlock(scope: !18080, file: !1091, line: 538, column: 5)
!18085 = !DILocation(line: 539, column: 11, scope: !18084)
!18086 = !DILocation(line: 553, column: 11, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18084, file: !1091, line: 553, column: 11)
!18088 = !DILocation(line: 553, column: 29, scope: !18087)
!18089 = !DILocation(line: 553, column: 11, scope: !18084)
!18090 = !DILocation(line: 555, column: 22, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18092, file: !1091, line: 555, column: 15)
!18092 = distinct !DILexicalBlock(scope: !18087, file: !1091, line: 554, column: 9)
!18093 = !DILocation(line: 555, column: 15, scope: !18091)
!18094 = !DILocation(line: 555, column: 15, scope: !18092)
!18095 = !DILocation(line: 556, column: 13, scope: !18091)
!18096 = !DILocation(line: 557, column: 15, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18092, file: !1091, line: 557, column: 15)
!18098 = !DILocation(line: 557, column: 21, scope: !18097)
!18099 = !DILocation(line: 557, column: 29, scope: !18097)
!18100 = !DILocation(line: 557, column: 15, scope: !18092)
!18101 = !DILocation(line: 558, column: 13, scope: !18097)
!18102 = !DILocation(line: 558, column: 21, scope: !18097)
!18103 = !DILocation(line: 559, column: 20, scope: !18104)
!18104 = distinct !DILexicalBlock(scope: !18097, file: !1091, line: 559, column: 20)
!18105 = !DILocation(line: 559, column: 26, scope: !18104)
!18106 = !DILocation(line: 559, column: 34, scope: !18104)
!18107 = !DILocation(line: 559, column: 20, scope: !18097)
!18108 = !DILocation(line: 560, column: 13, scope: !18104)
!18109 = !DILocation(line: 560, column: 21, scope: !18104)
!18110 = !DILocation(line: 562, column: 28, scope: !18092)
!18111 = !DILocation(line: 563, column: 9, scope: !18092)
!18112 = !DILocation(line: 565, column: 37, scope: !18084)
!18113 = !DILocation(line: 565, column: 43, scope: !18084)
!18114 = !DILocation(line: 565, column: 16, scope: !18084)
!18115 = !DILocation(line: 565, column: 14, scope: !18084)
!18116 = !DILocation(line: 574, column: 15, scope: !18117)
!18117 = distinct !DILexicalBlock(scope: !18084, file: !1091, line: 574, column: 11)
!18118 = !DILocation(line: 574, column: 13, scope: !18117)
!18119 = !DILocation(line: 574, column: 11, scope: !18084)
!18120 = !DILocation(line: 575, column: 9, scope: !18117)
!18121 = !DILocation(line: 575, column: 15, scope: !18117)
!18122 = !DILocation(line: 577, column: 11, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18084, file: !1091, line: 577, column: 11)
!18124 = !DILocation(line: 577, column: 18, scope: !18123)
!18125 = !DILocation(line: 577, column: 23, scope: !18123)
!18126 = !DILocation(line: 577, column: 26, scope: !18123)
!18127 = !DILocation(line: 577, column: 32, scope: !18123)
!18128 = !DILocation(line: 577, column: 11, scope: !18084)
!18129 = !DILocation(line: 579, column: 34, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18123, file: !1091, line: 578, column: 9)
!18131 = !DILocation(line: 580, column: 35, scope: !18130)
!18132 = !DILocation(line: 581, column: 18, scope: !18130)
!18133 = !DILocation(line: 581, column: 11, scope: !18130)
!18134 = !DILocation(line: 583, column: 5, scope: !18084)
!18135 = !DILocation(line: 584, column: 27, scope: !18047)
!18136 = !DILocation(line: 591, column: 7, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 591, column: 7)
!18138 = !DILocation(line: 591, column: 7, scope: !18047)
!18139 = !DILocation(line: 593, column: 11, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !18141, file: !1091, line: 593, column: 11)
!18141 = distinct !DILexicalBlock(scope: !18137, file: !1091, line: 592, column: 5)
!18142 = !DILocation(line: 593, column: 29, scope: !18140)
!18143 = !DILocation(line: 593, column: 34, scope: !18140)
!18144 = !DILocation(line: 593, column: 44, scope: !18140)
!18145 = !DILocation(line: 593, column: 37, scope: !18140)
!18146 = !DILocation(line: 593, column: 11, scope: !18141)
!18147 = !DILocation(line: 594, column: 9, scope: !18140)
!18148 = !DILocation(line: 595, column: 11, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18141, file: !1091, line: 595, column: 11)
!18150 = !DILocation(line: 595, column: 14, scope: !18149)
!18151 = !DILocation(line: 595, column: 17, scope: !18149)
!18152 = !DILocation(line: 595, column: 11, scope: !18141)
!18153 = !DILocation(line: 596, column: 9, scope: !18149)
!18154 = !DILocation(line: 597, column: 5, scope: !18141)
!18155 = !DILocation(line: 624, column: 9, scope: !18156)
!18156 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 624, column: 7)
!18157 = !DILocation(line: 624, column: 54, scope: !18156)
!18158 = !DILocation(line: 624, column: 64, scope: !18156)
!18159 = !DILocation(line: 624, column: 57, scope: !18156)
!18160 = !DILocation(line: 624, column: 7, scope: !18047)
!18161 = !DILocation(line: 625, column: 5, scope: !18156)
!18162 = !DILocation(line: 626, column: 8, scope: !18163)
!18163 = distinct !DILexicalBlock(scope: !18047, file: !1091, line: 626, column: 7)
!18164 = !DILocation(line: 626, column: 7, scope: !18047)
!18165 = !DILocation(line: 627, column: 27, scope: !18163)
!18166 = !DILocation(line: 627, column: 33, scope: !18163)
!18167 = !DILocation(line: 627, column: 12, scope: !18163)
!18168 = !DILocation(line: 627, column: 5, scope: !18163)
!18169 = !DILocation(line: 628, column: 3, scope: !18047)
!18170 = !DILocation(line: 628, column: 9, scope: !18047)
!18171 = !DILocation(line: 629, column: 3, scope: !18047)
!18172 = !DILocation(line: 630, column: 1, scope: !18047)
!18173 = distinct !DISubprogram(name: "verror", scope: !18174, file: !18174, line: 43, type: !18175, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1404, retainedNodes: !298)
!18174 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18175 = !DISubroutineType(types: !18176)
!18176 = !{null, !7, !7, !183, !18177}
!18177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18178, size: 64)
!18178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1405, size: 192, elements: !18179)
!18179 = !{!18180, !18181, !18182, !18183}
!18180 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !18178, file: !1405, baseType: !70, size: 32)
!18181 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !18178, file: !1405, baseType: !70, size: 32, offset: 32)
!18182 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !18178, file: !1405, baseType: !53, size: 64, offset: 64)
!18183 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !18178, file: !1405, baseType: !53, size: 64, offset: 128)
!18184 = !DILocalVariable(name: "status", arg: 1, scope: !18173, file: !18174, line: 43, type: !7)
!18185 = !DILocation(line: 43, column: 13, scope: !18173)
!18186 = !DILocalVariable(name: "errnum", arg: 2, scope: !18173, file: !18174, line: 43, type: !7)
!18187 = !DILocation(line: 43, column: 25, scope: !18173)
!18188 = !DILocalVariable(name: "format", arg: 3, scope: !18173, file: !18174, line: 43, type: !183)
!18189 = !DILocation(line: 43, column: 45, scope: !18173)
!18190 = !DILocalVariable(name: "args", arg: 4, scope: !18173, file: !18174, line: 43, type: !18177)
!18191 = !DILocation(line: 43, column: 61, scope: !18173)
!18192 = !DILocation(line: 45, column: 19, scope: !18173)
!18193 = !DILocation(line: 45, column: 27, scope: !18173)
!18194 = !DILocation(line: 45, column: 44, scope: !18173)
!18195 = !DILocation(line: 45, column: 52, scope: !18173)
!18196 = !DILocation(line: 45, column: 3, scope: !18173)
!18197 = !DILocation(line: 46, column: 1, scope: !18173)
!18198 = distinct !DISubprogram(name: "verror_at_line", scope: !18174, file: !18174, line: 55, type: !18199, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1404, retainedNodes: !298)
!18199 = !DISubroutineType(types: !18200)
!18200 = !{null, !7, !7, !183, !70, !183, !18177}
!18201 = !DILocalVariable(name: "status", arg: 1, scope: !18198, file: !18174, line: 55, type: !7)
!18202 = !DILocation(line: 55, column: 21, scope: !18198)
!18203 = !DILocalVariable(name: "errnum", arg: 2, scope: !18198, file: !18174, line: 55, type: !7)
!18204 = !DILocation(line: 55, column: 33, scope: !18198)
!18205 = !DILocalVariable(name: "file", arg: 3, scope: !18198, file: !18174, line: 55, type: !183)
!18206 = !DILocation(line: 55, column: 53, scope: !18198)
!18207 = !DILocalVariable(name: "line_number", arg: 4, scope: !18198, file: !18174, line: 56, type: !70)
!18208 = !DILocation(line: 56, column: 30, scope: !18198)
!18209 = !DILocalVariable(name: "format", arg: 5, scope: !18198, file: !18174, line: 56, type: !183)
!18210 = !DILocation(line: 56, column: 55, scope: !18198)
!18211 = !DILocalVariable(name: "args", arg: 6, scope: !18198, file: !18174, line: 56, type: !18177)
!18212 = !DILocation(line: 56, column: 71, scope: !18198)
!18213 = !DILocalVariable(name: "message", scope: !18198, file: !18174, line: 58, type: !9)
!18214 = !DILocation(line: 58, column: 9, scope: !18198)
!18215 = !DILocation(line: 58, column: 31, scope: !18198)
!18216 = !DILocation(line: 58, column: 39, scope: !18198)
!18217 = !DILocation(line: 58, column: 19, scope: !18198)
!18218 = !DILocation(line: 59, column: 7, scope: !18219)
!18219 = distinct !DILexicalBlock(scope: !18198, file: !18174, line: 59, column: 7)
!18220 = !DILocation(line: 59, column: 7, scope: !18198)
!18221 = !DILocation(line: 64, column: 11, scope: !18222)
!18222 = distinct !DILexicalBlock(scope: !18223, file: !18174, line: 64, column: 11)
!18223 = distinct !DILexicalBlock(scope: !18219, file: !18174, line: 60, column: 5)
!18224 = !DILocation(line: 64, column: 11, scope: !18223)
!18225 = !DILocation(line: 65, column: 24, scope: !18222)
!18226 = !DILocation(line: 65, column: 32, scope: !18222)
!18227 = !DILocation(line: 65, column: 40, scope: !18222)
!18228 = !DILocation(line: 65, column: 46, scope: !18222)
!18229 = !DILocation(line: 65, column: 65, scope: !18222)
!18230 = !DILocation(line: 65, column: 9, scope: !18222)
!18231 = !DILocation(line: 67, column: 16, scope: !18222)
!18232 = !DILocation(line: 67, column: 24, scope: !18222)
!18233 = !DILocation(line: 67, column: 38, scope: !18222)
!18234 = !DILocation(line: 67, column: 9, scope: !18222)
!18235 = !DILocation(line: 68, column: 5, scope: !18223)
!18236 = !DILocation(line: 73, column: 17, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18219, file: !18174, line: 70, column: 5)
!18238 = !DILocation(line: 73, column: 24, scope: !18237)
!18239 = !DILocation(line: 73, column: 7, scope: !18237)
!18240 = !DILocation(line: 74, column: 7, scope: !18237)
!18241 = !DILocation(line: 76, column: 9, scope: !18198)
!18242 = !DILocation(line: 76, column: 3, scope: !18198)
!18243 = !DILocation(line: 77, column: 1, scope: !18198)
!18244 = distinct !DISubprogram(name: "version_etc_arn", scope: !18245, file: !18245, line: 61, type: !18246, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1407, retainedNodes: !298)
!18245 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18246 = !DISubroutineType(types: !18247)
!18247 = !{null, !1433, !183, !183, !183, !1115, !55}
!18248 = !DILocalVariable(name: "stream", arg: 1, scope: !18244, file: !18245, line: 61, type: !1433)
!18249 = !DILocation(line: 61, column: 24, scope: !18244)
!18250 = !DILocalVariable(name: "command_name", arg: 2, scope: !18244, file: !18245, line: 62, type: !183)
!18251 = !DILocation(line: 62, column: 30, scope: !18244)
!18252 = !DILocalVariable(name: "package", arg: 3, scope: !18244, file: !18245, line: 62, type: !183)
!18253 = !DILocation(line: 62, column: 56, scope: !18244)
!18254 = !DILocalVariable(name: "version", arg: 4, scope: !18244, file: !18245, line: 63, type: !183)
!18255 = !DILocation(line: 63, column: 30, scope: !18244)
!18256 = !DILocalVariable(name: "authors", arg: 5, scope: !18244, file: !18245, line: 64, type: !1115)
!18257 = !DILocation(line: 64, column: 39, scope: !18244)
!18258 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18244, file: !18245, line: 64, type: !55)
!18259 = !DILocation(line: 64, column: 55, scope: !18244)
!18260 = !DILocation(line: 66, column: 7, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18244, file: !18245, line: 66, column: 7)
!18262 = !DILocation(line: 66, column: 7, scope: !18244)
!18263 = !DILocation(line: 67, column: 14, scope: !18261)
!18264 = !DILocation(line: 67, column: 38, scope: !18261)
!18265 = !DILocation(line: 67, column: 52, scope: !18261)
!18266 = !DILocation(line: 67, column: 61, scope: !18261)
!18267 = !DILocation(line: 67, column: 5, scope: !18261)
!18268 = !DILocation(line: 69, column: 14, scope: !18261)
!18269 = !DILocation(line: 69, column: 33, scope: !18261)
!18270 = !DILocation(line: 69, column: 42, scope: !18261)
!18271 = !DILocation(line: 69, column: 5, scope: !18261)
!18272 = !DILocation(line: 83, column: 12, scope: !18244)
!18273 = !DILocation(line: 83, column: 43, scope: !18244)
!18274 = !DILocation(line: 83, column: 3, scope: !18244)
!18275 = !DILocation(line: 85, column: 3, scope: !18244)
!18276 = !DILocation(line: 94, column: 11, scope: !18244)
!18277 = !DILocation(line: 94, column: 3, scope: !18244)
!18278 = !DILocation(line: 99, column: 7, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18244, file: !18245, line: 95, column: 5)
!18280 = !DILocation(line: 102, column: 16, scope: !18279)
!18281 = !DILocation(line: 102, column: 24, scope: !18279)
!18282 = !DILocation(line: 102, column: 47, scope: !18279)
!18283 = !DILocation(line: 102, column: 7, scope: !18279)
!18284 = !DILocation(line: 103, column: 7, scope: !18279)
!18285 = !DILocation(line: 106, column: 16, scope: !18279)
!18286 = !DILocation(line: 106, column: 24, scope: !18279)
!18287 = !DILocation(line: 106, column: 54, scope: !18279)
!18288 = !DILocation(line: 106, column: 66, scope: !18279)
!18289 = !DILocation(line: 106, column: 7, scope: !18279)
!18290 = !DILocation(line: 107, column: 7, scope: !18279)
!18291 = !DILocation(line: 110, column: 16, scope: !18279)
!18292 = !DILocation(line: 110, column: 24, scope: !18279)
!18293 = !DILocation(line: 111, column: 16, scope: !18279)
!18294 = !DILocation(line: 111, column: 28, scope: !18279)
!18295 = !DILocation(line: 111, column: 40, scope: !18279)
!18296 = !DILocation(line: 110, column: 7, scope: !18279)
!18297 = !DILocation(line: 112, column: 7, scope: !18279)
!18298 = !DILocation(line: 117, column: 16, scope: !18279)
!18299 = !DILocation(line: 117, column: 24, scope: !18279)
!18300 = !DILocation(line: 118, column: 16, scope: !18279)
!18301 = !DILocation(line: 118, column: 28, scope: !18279)
!18302 = !DILocation(line: 118, column: 40, scope: !18279)
!18303 = !DILocation(line: 118, column: 52, scope: !18279)
!18304 = !DILocation(line: 117, column: 7, scope: !18279)
!18305 = !DILocation(line: 119, column: 7, scope: !18279)
!18306 = !DILocation(line: 124, column: 16, scope: !18279)
!18307 = !DILocation(line: 124, column: 24, scope: !18279)
!18308 = !DILocation(line: 125, column: 16, scope: !18279)
!18309 = !DILocation(line: 125, column: 28, scope: !18279)
!18310 = !DILocation(line: 125, column: 40, scope: !18279)
!18311 = !DILocation(line: 125, column: 52, scope: !18279)
!18312 = !DILocation(line: 125, column: 64, scope: !18279)
!18313 = !DILocation(line: 124, column: 7, scope: !18279)
!18314 = !DILocation(line: 126, column: 7, scope: !18279)
!18315 = !DILocation(line: 131, column: 16, scope: !18279)
!18316 = !DILocation(line: 131, column: 24, scope: !18279)
!18317 = !DILocation(line: 132, column: 16, scope: !18279)
!18318 = !DILocation(line: 132, column: 28, scope: !18279)
!18319 = !DILocation(line: 132, column: 40, scope: !18279)
!18320 = !DILocation(line: 132, column: 52, scope: !18279)
!18321 = !DILocation(line: 132, column: 64, scope: !18279)
!18322 = !DILocation(line: 133, column: 16, scope: !18279)
!18323 = !DILocation(line: 131, column: 7, scope: !18279)
!18324 = !DILocation(line: 134, column: 7, scope: !18279)
!18325 = !DILocation(line: 139, column: 16, scope: !18279)
!18326 = !DILocation(line: 139, column: 24, scope: !18279)
!18327 = !DILocation(line: 140, column: 16, scope: !18279)
!18328 = !DILocation(line: 140, column: 28, scope: !18279)
!18329 = !DILocation(line: 140, column: 40, scope: !18279)
!18330 = !DILocation(line: 140, column: 52, scope: !18279)
!18331 = !DILocation(line: 140, column: 64, scope: !18279)
!18332 = !DILocation(line: 141, column: 16, scope: !18279)
!18333 = !DILocation(line: 141, column: 28, scope: !18279)
!18334 = !DILocation(line: 139, column: 7, scope: !18279)
!18335 = !DILocation(line: 142, column: 7, scope: !18279)
!18336 = !DILocation(line: 147, column: 16, scope: !18279)
!18337 = !DILocation(line: 147, column: 24, scope: !18279)
!18338 = !DILocation(line: 149, column: 17, scope: !18279)
!18339 = !DILocation(line: 149, column: 29, scope: !18279)
!18340 = !DILocation(line: 149, column: 41, scope: !18279)
!18341 = !DILocation(line: 149, column: 53, scope: !18279)
!18342 = !DILocation(line: 149, column: 65, scope: !18279)
!18343 = !DILocation(line: 150, column: 17, scope: !18279)
!18344 = !DILocation(line: 150, column: 29, scope: !18279)
!18345 = !DILocation(line: 150, column: 41, scope: !18279)
!18346 = !DILocation(line: 147, column: 7, scope: !18279)
!18347 = !DILocation(line: 151, column: 7, scope: !18279)
!18348 = !DILocation(line: 156, column: 16, scope: !18279)
!18349 = !DILocation(line: 156, column: 24, scope: !18279)
!18350 = !DILocation(line: 158, column: 16, scope: !18279)
!18351 = !DILocation(line: 158, column: 28, scope: !18279)
!18352 = !DILocation(line: 158, column: 40, scope: !18279)
!18353 = !DILocation(line: 158, column: 52, scope: !18279)
!18354 = !DILocation(line: 158, column: 64, scope: !18279)
!18355 = !DILocation(line: 159, column: 16, scope: !18279)
!18356 = !DILocation(line: 159, column: 28, scope: !18279)
!18357 = !DILocation(line: 159, column: 40, scope: !18279)
!18358 = !DILocation(line: 159, column: 52, scope: !18279)
!18359 = !DILocation(line: 156, column: 7, scope: !18279)
!18360 = !DILocation(line: 160, column: 7, scope: !18279)
!18361 = !DILocation(line: 167, column: 16, scope: !18279)
!18362 = !DILocation(line: 167, column: 24, scope: !18279)
!18363 = !DILocation(line: 169, column: 17, scope: !18279)
!18364 = !DILocation(line: 169, column: 29, scope: !18279)
!18365 = !DILocation(line: 169, column: 41, scope: !18279)
!18366 = !DILocation(line: 169, column: 53, scope: !18279)
!18367 = !DILocation(line: 169, column: 65, scope: !18279)
!18368 = !DILocation(line: 170, column: 17, scope: !18279)
!18369 = !DILocation(line: 170, column: 29, scope: !18279)
!18370 = !DILocation(line: 170, column: 41, scope: !18279)
!18371 = !DILocation(line: 170, column: 53, scope: !18279)
!18372 = !DILocation(line: 167, column: 7, scope: !18279)
!18373 = !DILocation(line: 171, column: 7, scope: !18279)
!18374 = !DILocation(line: 173, column: 1, scope: !18244)
!18375 = distinct !DISubprogram(name: "version_etc_ar", scope: !18245, file: !18245, line: 180, type: !18376, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1407, retainedNodes: !298)
!18376 = !DISubroutineType(types: !18377)
!18377 = !{null, !1433, !183, !183, !183, !1115}
!18378 = !DILocalVariable(name: "stream", arg: 1, scope: !18375, file: !18245, line: 180, type: !1433)
!18379 = !DILocation(line: 180, column: 23, scope: !18375)
!18380 = !DILocalVariable(name: "command_name", arg: 2, scope: !18375, file: !18245, line: 181, type: !183)
!18381 = !DILocation(line: 181, column: 29, scope: !18375)
!18382 = !DILocalVariable(name: "package", arg: 3, scope: !18375, file: !18245, line: 181, type: !183)
!18383 = !DILocation(line: 181, column: 55, scope: !18375)
!18384 = !DILocalVariable(name: "version", arg: 4, scope: !18375, file: !18245, line: 182, type: !183)
!18385 = !DILocation(line: 182, column: 29, scope: !18375)
!18386 = !DILocalVariable(name: "authors", arg: 5, scope: !18375, file: !18245, line: 182, type: !1115)
!18387 = !DILocation(line: 182, column: 59, scope: !18375)
!18388 = !DILocalVariable(name: "n_authors", scope: !18375, file: !18245, line: 184, type: !55)
!18389 = !DILocation(line: 184, column: 10, scope: !18375)
!18390 = !DILocation(line: 186, column: 18, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18375, file: !18245, line: 186, column: 3)
!18392 = !DILocation(line: 186, column: 8, scope: !18391)
!18393 = !DILocation(line: 186, column: 23, scope: !18394)
!18394 = distinct !DILexicalBlock(scope: !18391, file: !18245, line: 186, column: 3)
!18395 = !DILocation(line: 186, column: 31, scope: !18394)
!18396 = !DILocation(line: 186, column: 3, scope: !18391)
!18397 = !DILocation(line: 186, column: 52, scope: !18394)
!18398 = !DILocation(line: 186, column: 3, scope: !18394)
!18399 = distinct !{!18399, !18396, !18400}
!18400 = !DILocation(line: 187, column: 5, scope: !18391)
!18401 = !DILocation(line: 188, column: 20, scope: !18375)
!18402 = !DILocation(line: 188, column: 28, scope: !18375)
!18403 = !DILocation(line: 188, column: 42, scope: !18375)
!18404 = !DILocation(line: 188, column: 51, scope: !18375)
!18405 = !DILocation(line: 188, column: 60, scope: !18375)
!18406 = !DILocation(line: 188, column: 69, scope: !18375)
!18407 = !DILocation(line: 188, column: 3, scope: !18375)
!18408 = !DILocation(line: 189, column: 1, scope: !18375)
!18409 = distinct !DISubprogram(name: "version_etc_va", scope: !18245, file: !18245, line: 196, type: !18410, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1407, retainedNodes: !298)
!18410 = !DISubroutineType(types: !18411)
!18411 = !{null, !1433, !183, !183, !183, !18412}
!18412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!18413 = !DILocalVariable(name: "stream", arg: 1, scope: !18409, file: !18245, line: 196, type: !1433)
!18414 = !DILocation(line: 196, column: 23, scope: !18409)
!18415 = !DILocalVariable(name: "command_name", arg: 2, scope: !18409, file: !18245, line: 197, type: !183)
!18416 = !DILocation(line: 197, column: 29, scope: !18409)
!18417 = !DILocalVariable(name: "package", arg: 3, scope: !18409, file: !18245, line: 197, type: !183)
!18418 = !DILocation(line: 197, column: 55, scope: !18409)
!18419 = !DILocalVariable(name: "version", arg: 4, scope: !18409, file: !18245, line: 198, type: !183)
!18420 = !DILocation(line: 198, column: 29, scope: !18409)
!18421 = !DILocalVariable(name: "authors", arg: 5, scope: !18409, file: !18245, line: 198, type: !18412)
!18422 = !DILocation(line: 198, column: 46, scope: !18409)
!18423 = !DILocalVariable(name: "n_authors", scope: !18409, file: !18245, line: 200, type: !55)
!18424 = !DILocation(line: 200, column: 10, scope: !18409)
!18425 = !DILocalVariable(name: "authtab", scope: !18409, file: !18245, line: 201, type: !1419)
!18426 = !DILocation(line: 201, column: 15, scope: !18409)
!18427 = !DILocation(line: 203, column: 18, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18409, file: !18245, line: 203, column: 3)
!18429 = !DILocation(line: 203, column: 8, scope: !18428)
!18430 = !DILocation(line: 204, column: 8, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18428, file: !18245, line: 203, column: 3)
!18432 = !DILocation(line: 204, column: 18, scope: !18431)
!18433 = !DILocation(line: 205, column: 10, scope: !18431)
!18434 = !DILocation(line: 205, column: 35, scope: !18431)
!18435 = !DILocation(line: 205, column: 22, scope: !18431)
!18436 = !DILocation(line: 205, column: 14, scope: !18431)
!18437 = !DILocation(line: 205, column: 33, scope: !18431)
!18438 = !DILocation(line: 205, column: 67, scope: !18431)
!18439 = !DILocation(line: 0, scope: !18431)
!18440 = !DILocation(line: 203, column: 3, scope: !18428)
!18441 = !DILocation(line: 206, column: 17, scope: !18431)
!18442 = !DILocation(line: 203, column: 3, scope: !18431)
!18443 = distinct !{!18443, !18440, !18444}
!18444 = !DILocation(line: 207, column: 5, scope: !18428)
!18445 = !DILocation(line: 208, column: 20, scope: !18409)
!18446 = !DILocation(line: 208, column: 28, scope: !18409)
!18447 = !DILocation(line: 208, column: 42, scope: !18409)
!18448 = !DILocation(line: 208, column: 51, scope: !18409)
!18449 = !DILocation(line: 209, column: 20, scope: !18409)
!18450 = !DILocation(line: 209, column: 29, scope: !18409)
!18451 = !DILocation(line: 208, column: 3, scope: !18409)
!18452 = !DILocation(line: 210, column: 1, scope: !18409)
!18453 = distinct !DISubprogram(name: "version_etc", scope: !18245, file: !18245, line: 227, type: !18454, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1407, retainedNodes: !298)
!18454 = !DISubroutineType(types: !18455)
!18455 = !{null, !1433, !183, !183, !183, null}
!18456 = !DILocalVariable(name: "stream", arg: 1, scope: !18453, file: !18245, line: 227, type: !1433)
!18457 = !DILocation(line: 227, column: 20, scope: !18453)
!18458 = !DILocalVariable(name: "command_name", arg: 2, scope: !18453, file: !18245, line: 228, type: !183)
!18459 = !DILocation(line: 228, column: 26, scope: !18453)
!18460 = !DILocalVariable(name: "package", arg: 3, scope: !18453, file: !18245, line: 228, type: !183)
!18461 = !DILocation(line: 228, column: 52, scope: !18453)
!18462 = !DILocalVariable(name: "version", arg: 4, scope: !18453, file: !18245, line: 229, type: !183)
!18463 = !DILocation(line: 229, column: 26, scope: !18453)
!18464 = !DILocalVariable(name: "authors", scope: !18453, file: !18245, line: 231, type: !1420)
!18465 = !DILocation(line: 231, column: 11, scope: !18453)
!18466 = !DILocation(line: 233, column: 3, scope: !18453)
!18467 = !DILocation(line: 234, column: 19, scope: !18453)
!18468 = !DILocation(line: 234, column: 27, scope: !18453)
!18469 = !DILocation(line: 234, column: 41, scope: !18453)
!18470 = !DILocation(line: 234, column: 50, scope: !18453)
!18471 = !DILocation(line: 234, column: 59, scope: !18453)
!18472 = !DILocation(line: 234, column: 3, scope: !18453)
!18473 = !DILocation(line: 235, column: 3, scope: !18453)
!18474 = !DILocation(line: 236, column: 1, scope: !18453)
!18475 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18245, file: !18245, line: 239, type: !692, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1407, retainedNodes: !298)
!18476 = !DILocation(line: 245, column: 11, scope: !18475)
!18477 = !DILocation(line: 245, column: 3, scope: !18475)
!18478 = !DILocation(line: 251, column: 11, scope: !18475)
!18479 = !DILocation(line: 251, column: 3, scope: !18475)
!18480 = !DILocation(line: 256, column: 3, scope: !18475)
!18481 = !DILocation(line: 258, column: 1, scope: !18475)
!18482 = !DILocation(line: 37, column: 9, scope: !18483)
!18483 = distinct !DILexicalBlock(scope: !1101, file: !1102, line: 37, column: 7)
!18484 = !DILocation(line: 37, column: 7, scope: !1101)
!18485 = !DILocalVariable(name: "can", scope: !18486, file: !1102, line: 39, type: !142)
!18486 = distinct !DILexicalBlock(scope: !18483, file: !1102, line: 38, column: 5)
!18487 = !DILocation(line: 39, column: 12, scope: !18486)
!18488 = !DILocation(line: 44, column: 14, scope: !18486)
!18489 = !DILocation(line: 44, column: 25, scope: !18486)
!18490 = !DILocation(line: 44, column: 11, scope: !18486)
!18491 = !DILocation(line: 46, column: 19, scope: !18486)
!18492 = !DILocation(line: 46, column: 17, scope: !18486)
!18493 = !DILocation(line: 47, column: 19, scope: !18486)
!18494 = !DILocation(line: 48, column: 5, scope: !18486)
!18495 = !DILocation(line: 50, column: 10, scope: !1101)
!18496 = !DILocation(line: 50, column: 3, scope: !1101)
!18497 = distinct !DISubprogram(name: "xnmalloc", scope: !18498, file: !18498, line: 99, type: !18499, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18498 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!18499 = !DISubroutineType(types: !18500)
!18500 = !{!53, !55, !55}
!18501 = !DILocalVariable(name: "n", arg: 1, scope: !18497, file: !18498, line: 99, type: !55)
!18502 = !DILocation(line: 99, column: 18, scope: !18497)
!18503 = !DILocalVariable(name: "s", arg: 2, scope: !18497, file: !18498, line: 99, type: !55)
!18504 = !DILocation(line: 99, column: 28, scope: !18497)
!18505 = !DILocation(line: 101, column: 7, scope: !18506)
!18506 = distinct !DILexicalBlock(scope: !18497, file: !18498, line: 101, column: 7)
!18507 = !DILocation(line: 101, column: 7, scope: !18497)
!18508 = !DILocation(line: 102, column: 5, scope: !18506)
!18509 = !DILocation(line: 103, column: 19, scope: !18497)
!18510 = !DILocation(line: 103, column: 23, scope: !18497)
!18511 = !DILocation(line: 103, column: 21, scope: !18497)
!18512 = !DILocation(line: 103, column: 10, scope: !18497)
!18513 = !DILocation(line: 103, column: 3, scope: !18497)
!18514 = distinct !DISubprogram(name: "xmalloc", scope: !18515, file: !18515, line: 39, type: !18516, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18515 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18516 = !DISubroutineType(types: !18517)
!18517 = !{!53, !55}
!18518 = !DILocalVariable(name: "n", arg: 1, scope: !18514, file: !18515, line: 39, type: !55)
!18519 = !DILocation(line: 39, column: 17, scope: !18514)
!18520 = !DILocalVariable(name: "p", scope: !18514, file: !18515, line: 41, type: !53)
!18521 = !DILocation(line: 41, column: 9, scope: !18514)
!18522 = !DILocation(line: 41, column: 21, scope: !18514)
!18523 = !DILocation(line: 41, column: 13, scope: !18514)
!18524 = !DILocation(line: 42, column: 8, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18514, file: !18515, line: 42, column: 7)
!18526 = !DILocation(line: 42, column: 10, scope: !18525)
!18527 = !DILocation(line: 42, column: 13, scope: !18525)
!18528 = !DILocation(line: 42, column: 15, scope: !18525)
!18529 = !DILocation(line: 42, column: 7, scope: !18514)
!18530 = !DILocation(line: 43, column: 5, scope: !18525)
!18531 = !DILocation(line: 44, column: 10, scope: !18514)
!18532 = !DILocation(line: 44, column: 3, scope: !18514)
!18533 = distinct !DISubprogram(name: "xnrealloc", scope: !18498, file: !18498, line: 112, type: !18534, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18534 = !DISubroutineType(types: !18535)
!18535 = !{!53, !53, !55, !55}
!18536 = !DILocalVariable(name: "p", arg: 1, scope: !18533, file: !18498, line: 112, type: !53)
!18537 = !DILocation(line: 112, column: 18, scope: !18533)
!18538 = !DILocalVariable(name: "n", arg: 2, scope: !18533, file: !18498, line: 112, type: !55)
!18539 = !DILocation(line: 112, column: 28, scope: !18533)
!18540 = !DILocalVariable(name: "s", arg: 3, scope: !18533, file: !18498, line: 112, type: !55)
!18541 = !DILocation(line: 112, column: 38, scope: !18533)
!18542 = !DILocation(line: 114, column: 7, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18533, file: !18498, line: 114, column: 7)
!18544 = !DILocation(line: 114, column: 7, scope: !18533)
!18545 = !DILocation(line: 115, column: 5, scope: !18543)
!18546 = !DILocation(line: 116, column: 20, scope: !18533)
!18547 = !DILocation(line: 116, column: 23, scope: !18533)
!18548 = !DILocation(line: 116, column: 27, scope: !18533)
!18549 = !DILocation(line: 116, column: 25, scope: !18533)
!18550 = !DILocation(line: 116, column: 10, scope: !18533)
!18551 = !DILocation(line: 116, column: 3, scope: !18533)
!18552 = distinct !DISubprogram(name: "xrealloc", scope: !18515, file: !18515, line: 51, type: !18553, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18553 = !DISubroutineType(types: !18554)
!18554 = !{!53, !53, !55}
!18555 = !DILocalVariable(name: "p", arg: 1, scope: !18552, file: !18515, line: 51, type: !53)
!18556 = !DILocation(line: 51, column: 17, scope: !18552)
!18557 = !DILocalVariable(name: "n", arg: 2, scope: !18552, file: !18515, line: 51, type: !55)
!18558 = !DILocation(line: 51, column: 27, scope: !18552)
!18559 = !DILocation(line: 53, column: 8, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18552, file: !18515, line: 53, column: 7)
!18561 = !DILocation(line: 53, column: 10, scope: !18560)
!18562 = !DILocation(line: 53, column: 13, scope: !18560)
!18563 = !DILocation(line: 53, column: 7, scope: !18552)
!18564 = !DILocation(line: 57, column: 13, scope: !18565)
!18565 = distinct !DILexicalBlock(scope: !18560, file: !18515, line: 54, column: 5)
!18566 = !DILocation(line: 57, column: 7, scope: !18565)
!18567 = !DILocation(line: 58, column: 7, scope: !18565)
!18568 = !DILocation(line: 61, column: 16, scope: !18552)
!18569 = !DILocation(line: 61, column: 19, scope: !18552)
!18570 = !DILocation(line: 61, column: 7, scope: !18552)
!18571 = !DILocation(line: 61, column: 5, scope: !18552)
!18572 = !DILocation(line: 62, column: 8, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18552, file: !18515, line: 62, column: 7)
!18574 = !DILocation(line: 62, column: 10, scope: !18573)
!18575 = !DILocation(line: 62, column: 13, scope: !18573)
!18576 = !DILocation(line: 62, column: 7, scope: !18552)
!18577 = !DILocation(line: 63, column: 5, scope: !18573)
!18578 = !DILocation(line: 64, column: 10, scope: !18552)
!18579 = !DILocation(line: 64, column: 3, scope: !18552)
!18580 = !DILocation(line: 65, column: 1, scope: !18552)
!18581 = distinct !DISubprogram(name: "x2nrealloc", scope: !18498, file: !18498, line: 174, type: !18582, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18582 = !DISubroutineType(types: !18583)
!18583 = !{!53, !53, !9454, !55}
!18584 = !DILocalVariable(name: "p", arg: 1, scope: !18581, file: !18498, line: 174, type: !53)
!18585 = !DILocation(line: 174, column: 19, scope: !18581)
!18586 = !DILocalVariable(name: "pn", arg: 2, scope: !18581, file: !18498, line: 174, type: !9454)
!18587 = !DILocation(line: 174, column: 30, scope: !18581)
!18588 = !DILocalVariable(name: "s", arg: 3, scope: !18581, file: !18498, line: 174, type: !55)
!18589 = !DILocation(line: 174, column: 41, scope: !18581)
!18590 = !DILocalVariable(name: "n", scope: !18581, file: !18498, line: 176, type: !55)
!18591 = !DILocation(line: 176, column: 10, scope: !18581)
!18592 = !DILocation(line: 176, column: 15, scope: !18581)
!18593 = !DILocation(line: 176, column: 14, scope: !18581)
!18594 = !DILocation(line: 178, column: 9, scope: !18595)
!18595 = distinct !DILexicalBlock(scope: !18581, file: !18498, line: 178, column: 7)
!18596 = !DILocation(line: 178, column: 7, scope: !18581)
!18597 = !DILocation(line: 180, column: 13, scope: !18598)
!18598 = distinct !DILexicalBlock(scope: !18599, file: !18498, line: 180, column: 11)
!18599 = distinct !DILexicalBlock(scope: !18595, file: !18498, line: 179, column: 5)
!18600 = !DILocation(line: 180, column: 11, scope: !18599)
!18601 = !DILocation(line: 188, column: 32, scope: !18602)
!18602 = distinct !DILexicalBlock(scope: !18598, file: !18498, line: 181, column: 9)
!18603 = !DILocation(line: 188, column: 30, scope: !18602)
!18604 = !DILocation(line: 188, column: 13, scope: !18602)
!18605 = !DILocation(line: 189, column: 17, scope: !18602)
!18606 = !DILocation(line: 189, column: 16, scope: !18602)
!18607 = !DILocation(line: 189, column: 13, scope: !18602)
!18608 = !DILocation(line: 190, column: 9, scope: !18602)
!18609 = !DILocation(line: 191, column: 11, scope: !18610)
!18610 = distinct !DILexicalBlock(scope: !18599, file: !18498, line: 191, column: 11)
!18611 = !DILocation(line: 191, column: 11, scope: !18599)
!18612 = !DILocation(line: 192, column: 9, scope: !18610)
!18613 = !DILocation(line: 193, column: 5, scope: !18599)
!18614 = !DILocation(line: 200, column: 71, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !18616, file: !18498, line: 200, column: 11)
!18616 = distinct !DILexicalBlock(scope: !18595, file: !18498, line: 195, column: 5)
!18617 = !DILocation(line: 200, column: 69, scope: !18615)
!18618 = !DILocation(line: 201, column: 14, scope: !18615)
!18619 = !DILocation(line: 201, column: 11, scope: !18615)
!18620 = !DILocation(line: 200, column: 11, scope: !18616)
!18621 = !DILocation(line: 202, column: 9, scope: !18615)
!18622 = !DILocation(line: 203, column: 12, scope: !18616)
!18623 = !DILocation(line: 203, column: 14, scope: !18616)
!18624 = !DILocation(line: 203, column: 18, scope: !18616)
!18625 = !DILocation(line: 203, column: 9, scope: !18616)
!18626 = !DILocation(line: 206, column: 9, scope: !18581)
!18627 = !DILocation(line: 206, column: 4, scope: !18581)
!18628 = !DILocation(line: 206, column: 7, scope: !18581)
!18629 = !DILocation(line: 207, column: 20, scope: !18581)
!18630 = !DILocation(line: 207, column: 23, scope: !18581)
!18631 = !DILocation(line: 207, column: 27, scope: !18581)
!18632 = !DILocation(line: 207, column: 25, scope: !18581)
!18633 = !DILocation(line: 207, column: 10, scope: !18581)
!18634 = !DILocation(line: 207, column: 3, scope: !18581)
!18635 = distinct !DISubprogram(name: "xcharalloc", scope: !18498, file: !18498, line: 216, type: !18636, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18636 = !DISubroutineType(types: !18637)
!18637 = !{!9, !55}
!18638 = !DILocalVariable(name: "n", arg: 1, scope: !18635, file: !18498, line: 216, type: !55)
!18639 = !DILocation(line: 216, column: 20, scope: !18635)
!18640 = !DILocation(line: 218, column: 10, scope: !18635)
!18641 = !DILocation(line: 218, column: 3, scope: !18635)
!18642 = distinct !DISubprogram(name: "x2realloc", scope: !18515, file: !18515, line: 74, type: !18643, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18643 = !DISubroutineType(types: !18644)
!18644 = !{!53, !53, !9454}
!18645 = !DILocalVariable(name: "p", arg: 1, scope: !18642, file: !18515, line: 74, type: !53)
!18646 = !DILocation(line: 74, column: 18, scope: !18642)
!18647 = !DILocalVariable(name: "pn", arg: 2, scope: !18642, file: !18515, line: 74, type: !9454)
!18648 = !DILocation(line: 74, column: 29, scope: !18642)
!18649 = !DILocation(line: 76, column: 22, scope: !18642)
!18650 = !DILocation(line: 76, column: 25, scope: !18642)
!18651 = !DILocation(line: 76, column: 10, scope: !18642)
!18652 = !DILocation(line: 76, column: 3, scope: !18642)
!18653 = distinct !DISubprogram(name: "xzalloc", scope: !18515, file: !18515, line: 84, type: !18516, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18654 = !DILocalVariable(name: "s", arg: 1, scope: !18653, file: !18515, line: 84, type: !55)
!18655 = !DILocation(line: 84, column: 17, scope: !18653)
!18656 = !DILocation(line: 86, column: 27, scope: !18653)
!18657 = !DILocation(line: 86, column: 18, scope: !18653)
!18658 = !DILocation(line: 86, column: 34, scope: !18653)
!18659 = !DILocation(line: 86, column: 10, scope: !18653)
!18660 = !DILocation(line: 86, column: 3, scope: !18653)
!18661 = distinct !DISubprogram(name: "xcalloc", scope: !18515, file: !18515, line: 93, type: !18499, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18662 = !DILocalVariable(name: "n", arg: 1, scope: !18661, file: !18515, line: 93, type: !55)
!18663 = !DILocation(line: 93, column: 17, scope: !18661)
!18664 = !DILocalVariable(name: "s", arg: 2, scope: !18661, file: !18515, line: 93, type: !55)
!18665 = !DILocation(line: 93, column: 27, scope: !18661)
!18666 = !DILocalVariable(name: "p", scope: !18661, file: !18515, line: 95, type: !53)
!18667 = !DILocation(line: 95, column: 9, scope: !18661)
!18668 = !DILocation(line: 100, column: 7, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18661, file: !18515, line: 100, column: 7)
!18670 = !DILocation(line: 101, column: 7, scope: !18669)
!18671 = !DILocation(line: 101, column: 26, scope: !18669)
!18672 = !DILocation(line: 101, column: 29, scope: !18669)
!18673 = !DILocation(line: 101, column: 18, scope: !18669)
!18674 = !DILocation(line: 101, column: 16, scope: !18669)
!18675 = !DILocation(line: 100, column: 7, scope: !18661)
!18676 = !DILocation(line: 102, column: 5, scope: !18669)
!18677 = !DILocation(line: 103, column: 10, scope: !18661)
!18678 = !DILocation(line: 103, column: 3, scope: !18661)
!18679 = distinct !DISubprogram(name: "xmemdup", scope: !18515, file: !18515, line: 111, type: !7265, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18680 = !DILocalVariable(name: "p", arg: 1, scope: !18679, file: !18515, line: 111, type: !831)
!18681 = !DILocation(line: 111, column: 22, scope: !18679)
!18682 = !DILocalVariable(name: "s", arg: 2, scope: !18679, file: !18515, line: 111, type: !55)
!18683 = !DILocation(line: 111, column: 32, scope: !18679)
!18684 = !DILocation(line: 113, column: 27, scope: !18679)
!18685 = !DILocation(line: 113, column: 18, scope: !18679)
!18686 = !DILocation(line: 113, column: 31, scope: !18679)
!18687 = !DILocation(line: 113, column: 34, scope: !18679)
!18688 = !DILocation(line: 113, column: 10, scope: !18679)
!18689 = !DILocation(line: 113, column: 3, scope: !18679)
!18690 = distinct !DISubprogram(name: "xstrdup", scope: !18515, file: !18515, line: 119, type: !2459, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1467, retainedNodes: !298)
!18691 = !DILocalVariable(name: "string", arg: 1, scope: !18690, file: !18515, line: 119, type: !183)
!18692 = !DILocation(line: 119, column: 22, scope: !18690)
!18693 = !DILocation(line: 121, column: 19, scope: !18690)
!18694 = !DILocation(line: 121, column: 35, scope: !18690)
!18695 = !DILocation(line: 121, column: 27, scope: !18690)
!18696 = !DILocation(line: 121, column: 43, scope: !18690)
!18697 = !DILocation(line: 121, column: 10, scope: !18690)
!18698 = !DILocation(line: 121, column: 3, scope: !18690)
!18699 = distinct !DISubprogram(name: "xalloc_die", scope: !18700, file: !18700, line: 32, type: !692, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1470, retainedNodes: !298)
!18700 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18701 = !DILocation(line: 34, column: 10, scope: !18699)
!18702 = !DILocation(line: 34, column: 33, scope: !18699)
!18703 = !DILocation(line: 34, column: 3, scope: !18699)
!18704 = !DILocation(line: 40, column: 3, scope: !18699)
!18705 = distinct !DISubprogram(name: "xstrtoul", scope: !18706, file: !18706, line: 76, type: !18707, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1473, retainedNodes: !298)
!18706 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18707 = !DISubroutineType(types: !18708)
!18708 = !{!1485, !183, !209, !7, !18709, !183}
!18709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!18710 = !DILocalVariable(name: "s", arg: 1, scope: !18705, file: !18706, line: 76, type: !183)
!18711 = !DILocation(line: 76, column: 24, scope: !18705)
!18712 = !DILocalVariable(name: "ptr", arg: 2, scope: !18705, file: !18706, line: 76, type: !209)
!18713 = !DILocation(line: 76, column: 34, scope: !18705)
!18714 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18705, file: !18706, line: 76, type: !7)
!18715 = !DILocation(line: 76, column: 43, scope: !18705)
!18716 = !DILocalVariable(name: "val", arg: 4, scope: !18705, file: !18706, line: 77, type: !18709)
!18717 = !DILocation(line: 77, column: 24, scope: !18705)
!18718 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18705, file: !18706, line: 77, type: !183)
!18719 = !DILocation(line: 77, column: 41, scope: !18705)
!18720 = !DILocalVariable(name: "t_ptr", scope: !18705, file: !18706, line: 79, type: !9)
!18721 = !DILocation(line: 79, column: 9, scope: !18705)
!18722 = !DILocalVariable(name: "p", scope: !18705, file: !18706, line: 80, type: !209)
!18723 = !DILocation(line: 80, column: 10, scope: !18705)
!18724 = !DILocalVariable(name: "tmp", scope: !18705, file: !18706, line: 81, type: !57)
!18725 = !DILocation(line: 81, column: 14, scope: !18705)
!18726 = !DILocalVariable(name: "err", scope: !18705, file: !18706, line: 82, type: !1485)
!18727 = !DILocation(line: 82, column: 16, scope: !18705)
!18728 = !DILocation(line: 84, column: 3, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18730, file: !18706, line: 84, column: 3)
!18730 = distinct !DILexicalBlock(scope: !18705, file: !18706, line: 84, column: 3)
!18731 = !DILocation(line: 84, column: 3, scope: !18730)
!18732 = !DILocation(line: 86, column: 8, scope: !18705)
!18733 = !DILocation(line: 86, column: 14, scope: !18705)
!18734 = !DILocation(line: 86, column: 5, scope: !18705)
!18735 = !DILocation(line: 88, column: 3, scope: !18705)
!18736 = !DILocation(line: 88, column: 9, scope: !18705)
!18737 = !DILocalVariable(name: "q", scope: !18738, file: !18706, line: 92, type: !183)
!18738 = distinct !DILexicalBlock(scope: !18739, file: !18706, line: 91, column: 5)
!18739 = distinct !DILexicalBlock(scope: !18705, file: !18706, line: 90, column: 7)
!18740 = !DILocation(line: 92, column: 19, scope: !18738)
!18741 = !DILocation(line: 92, column: 23, scope: !18738)
!18742 = !DILocalVariable(name: "ch", scope: !18738, file: !18706, line: 93, type: !573)
!18743 = !DILocation(line: 93, column: 21, scope: !18738)
!18744 = !DILocation(line: 93, column: 27, scope: !18738)
!18745 = !DILocation(line: 93, column: 26, scope: !18738)
!18746 = !DILocation(line: 94, column: 7, scope: !18738)
!18747 = !DILocation(line: 94, column: 14, scope: !18738)
!18748 = !DILocation(line: 95, column: 15, scope: !18738)
!18749 = !DILocation(line: 95, column: 14, scope: !18738)
!18750 = !DILocation(line: 95, column: 12, scope: !18738)
!18751 = distinct !{!18751, !18746, !18752}
!18752 = !DILocation(line: 95, column: 17, scope: !18738)
!18753 = !DILocation(line: 96, column: 11, scope: !18754)
!18754 = distinct !DILexicalBlock(scope: !18738, file: !18706, line: 96, column: 11)
!18755 = !DILocation(line: 96, column: 14, scope: !18754)
!18756 = !DILocation(line: 96, column: 11, scope: !18738)
!18757 = !DILocation(line: 97, column: 9, scope: !18754)
!18758 = !DILocation(line: 100, column: 19, scope: !18705)
!18759 = !DILocation(line: 100, column: 22, scope: !18705)
!18760 = !DILocation(line: 100, column: 25, scope: !18705)
!18761 = !DILocation(line: 100, column: 9, scope: !18705)
!18762 = !DILocation(line: 100, column: 7, scope: !18705)
!18763 = !DILocation(line: 102, column: 8, scope: !18764)
!18764 = distinct !DILexicalBlock(scope: !18705, file: !18706, line: 102, column: 7)
!18765 = !DILocation(line: 102, column: 7, scope: !18764)
!18766 = !DILocation(line: 102, column: 13, scope: !18764)
!18767 = !DILocation(line: 102, column: 10, scope: !18764)
!18768 = !DILocation(line: 102, column: 7, scope: !18705)
!18769 = !DILocation(line: 106, column: 11, scope: !18770)
!18770 = distinct !DILexicalBlock(scope: !18771, file: !18706, line: 106, column: 11)
!18771 = distinct !DILexicalBlock(scope: !18764, file: !18706, line: 103, column: 5)
!18772 = !DILocation(line: 106, column: 26, scope: !18770)
!18773 = !DILocation(line: 106, column: 31, scope: !18770)
!18774 = !DILocation(line: 106, column: 30, scope: !18770)
!18775 = !DILocation(line: 106, column: 29, scope: !18770)
!18776 = !DILocation(line: 106, column: 33, scope: !18770)
!18777 = !DILocation(line: 106, column: 44, scope: !18770)
!18778 = !DILocation(line: 106, column: 62, scope: !18770)
!18779 = !DILocation(line: 106, column: 61, scope: !18770)
!18780 = !DILocation(line: 106, column: 60, scope: !18770)
!18781 = !DILocation(line: 106, column: 36, scope: !18770)
!18782 = !DILocation(line: 106, column: 11, scope: !18771)
!18783 = !DILocation(line: 107, column: 13, scope: !18770)
!18784 = !DILocation(line: 107, column: 9, scope: !18770)
!18785 = !DILocation(line: 109, column: 9, scope: !18770)
!18786 = !DILocation(line: 110, column: 5, scope: !18771)
!18787 = !DILocation(line: 111, column: 12, scope: !18788)
!18788 = distinct !DILexicalBlock(scope: !18764, file: !18706, line: 111, column: 12)
!18789 = !DILocation(line: 111, column: 18, scope: !18788)
!18790 = !DILocation(line: 111, column: 12, scope: !18764)
!18791 = !DILocation(line: 113, column: 11, scope: !18792)
!18792 = distinct !DILexicalBlock(scope: !18793, file: !18706, line: 113, column: 11)
!18793 = distinct !DILexicalBlock(scope: !18788, file: !18706, line: 112, column: 5)
!18794 = !DILocation(line: 113, column: 17, scope: !18792)
!18795 = !DILocation(line: 113, column: 11, scope: !18793)
!18796 = !DILocation(line: 114, column: 9, scope: !18792)
!18797 = !DILocation(line: 115, column: 11, scope: !18793)
!18798 = !DILocation(line: 116, column: 5, scope: !18793)
!18799 = !DILocation(line: 121, column: 8, scope: !18800)
!18800 = distinct !DILexicalBlock(scope: !18705, file: !18706, line: 121, column: 7)
!18801 = !DILocation(line: 121, column: 7, scope: !18705)
!18802 = !DILocation(line: 123, column: 14, scope: !18803)
!18803 = distinct !DILexicalBlock(scope: !18800, file: !18706, line: 122, column: 5)
!18804 = !DILocation(line: 123, column: 8, scope: !18803)
!18805 = !DILocation(line: 123, column: 12, scope: !18803)
!18806 = !DILocation(line: 124, column: 14, scope: !18803)
!18807 = !DILocation(line: 124, column: 7, scope: !18803)
!18808 = !DILocation(line: 127, column: 9, scope: !18809)
!18809 = distinct !DILexicalBlock(scope: !18705, file: !18706, line: 127, column: 7)
!18810 = !DILocation(line: 127, column: 8, scope: !18809)
!18811 = !DILocation(line: 127, column: 7, scope: !18809)
!18812 = !DILocation(line: 127, column: 11, scope: !18809)
!18813 = !DILocation(line: 127, column: 7, scope: !18705)
!18814 = !DILocalVariable(name: "base", scope: !18815, file: !18706, line: 129, type: !7)
!18815 = distinct !DILexicalBlock(scope: !18809, file: !18706, line: 128, column: 5)
!18816 = !DILocation(line: 129, column: 11, scope: !18815)
!18817 = !DILocalVariable(name: "suffixes", scope: !18815, file: !18706, line: 130, type: !7)
!18818 = !DILocation(line: 130, column: 11, scope: !18815)
!18819 = !DILocalVariable(name: "overflow", scope: !18815, file: !18706, line: 131, type: !1485)
!18820 = !DILocation(line: 131, column: 20, scope: !18815)
!18821 = !DILocation(line: 133, column: 20, scope: !18822)
!18822 = distinct !DILexicalBlock(scope: !18815, file: !18706, line: 133, column: 11)
!18823 = !DILocation(line: 133, column: 38, scope: !18822)
!18824 = !DILocation(line: 133, column: 37, scope: !18822)
!18825 = !DILocation(line: 133, column: 36, scope: !18822)
!18826 = !DILocation(line: 133, column: 12, scope: !18822)
!18827 = !DILocation(line: 133, column: 11, scope: !18815)
!18828 = !DILocation(line: 135, column: 18, scope: !18829)
!18829 = distinct !DILexicalBlock(scope: !18822, file: !18706, line: 134, column: 9)
!18830 = !DILocation(line: 135, column: 12, scope: !18829)
!18831 = !DILocation(line: 135, column: 16, scope: !18829)
!18832 = !DILocation(line: 136, column: 18, scope: !18829)
!18833 = !DILocation(line: 136, column: 22, scope: !18829)
!18834 = !DILocation(line: 136, column: 11, scope: !18829)
!18835 = !DILocation(line: 139, column: 17, scope: !18815)
!18836 = !DILocation(line: 139, column: 16, scope: !18815)
!18837 = !DILocation(line: 139, column: 15, scope: !18815)
!18838 = !DILocation(line: 139, column: 7, scope: !18815)
!18839 = !DILocation(line: 151, column: 23, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18841, file: !18706, line: 151, column: 15)
!18841 = distinct !DILexicalBlock(scope: !18815, file: !18706, line: 140, column: 9)
!18842 = !DILocation(line: 151, column: 15, scope: !18840)
!18843 = !DILocation(line: 151, column: 15, scope: !18841)
!18844 = !DILocation(line: 152, column: 21, scope: !18840)
!18845 = !DILocation(line: 152, column: 13, scope: !18840)
!18846 = !DILocation(line: 155, column: 21, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18848, file: !18706, line: 155, column: 21)
!18848 = distinct !DILexicalBlock(scope: !18840, file: !18706, line: 153, column: 15)
!18849 = !DILocation(line: 155, column: 29, scope: !18847)
!18850 = !DILocation(line: 155, column: 21, scope: !18848)
!18851 = !DILocation(line: 156, column: 28, scope: !18847)
!18852 = !DILocation(line: 156, column: 19, scope: !18847)
!18853 = !DILocation(line: 157, column: 17, scope: !18848)
!18854 = !DILocation(line: 161, column: 22, scope: !18848)
!18855 = !DILocation(line: 162, column: 25, scope: !18848)
!18856 = !DILocation(line: 163, column: 17, scope: !18848)
!18857 = !DILocation(line: 164, column: 15, scope: !18848)
!18858 = !DILocation(line: 165, column: 9, scope: !18841)
!18859 = !DILocation(line: 167, column: 17, scope: !18815)
!18860 = !DILocation(line: 167, column: 16, scope: !18815)
!18861 = !DILocation(line: 167, column: 15, scope: !18815)
!18862 = !DILocation(line: 167, column: 7, scope: !18815)
!18863 = !DILocation(line: 170, column: 22, scope: !18864)
!18864 = distinct !DILexicalBlock(scope: !18815, file: !18706, line: 168, column: 9)
!18865 = !DILocation(line: 170, column: 20, scope: !18864)
!18866 = !DILocation(line: 171, column: 11, scope: !18864)
!18867 = !DILocation(line: 177, column: 22, scope: !18864)
!18868 = !DILocation(line: 177, column: 20, scope: !18864)
!18869 = !DILocation(line: 178, column: 11, scope: !18864)
!18870 = !DILocation(line: 181, column: 20, scope: !18864)
!18871 = !DILocation(line: 182, column: 11, scope: !18864)
!18872 = !DILocation(line: 185, column: 48, scope: !18864)
!18873 = !DILocation(line: 185, column: 22, scope: !18864)
!18874 = !DILocation(line: 185, column: 20, scope: !18864)
!18875 = !DILocation(line: 186, column: 11, scope: !18864)
!18876 = !DILocation(line: 190, column: 48, scope: !18864)
!18877 = !DILocation(line: 190, column: 22, scope: !18864)
!18878 = !DILocation(line: 190, column: 20, scope: !18864)
!18879 = !DILocation(line: 191, column: 11, scope: !18864)
!18880 = !DILocation(line: 195, column: 48, scope: !18864)
!18881 = !DILocation(line: 195, column: 22, scope: !18864)
!18882 = !DILocation(line: 195, column: 20, scope: !18864)
!18883 = !DILocation(line: 196, column: 11, scope: !18864)
!18884 = !DILocation(line: 200, column: 48, scope: !18864)
!18885 = !DILocation(line: 200, column: 22, scope: !18864)
!18886 = !DILocation(line: 200, column: 20, scope: !18864)
!18887 = !DILocation(line: 201, column: 11, scope: !18864)
!18888 = !DILocation(line: 204, column: 48, scope: !18864)
!18889 = !DILocation(line: 204, column: 22, scope: !18864)
!18890 = !DILocation(line: 204, column: 20, scope: !18864)
!18891 = !DILocation(line: 205, column: 11, scope: !18864)
!18892 = !DILocation(line: 209, column: 48, scope: !18864)
!18893 = !DILocation(line: 209, column: 22, scope: !18864)
!18894 = !DILocation(line: 209, column: 20, scope: !18864)
!18895 = !DILocation(line: 210, column: 11, scope: !18864)
!18896 = !DILocation(line: 213, column: 22, scope: !18864)
!18897 = !DILocation(line: 213, column: 20, scope: !18864)
!18898 = !DILocation(line: 214, column: 11, scope: !18864)
!18899 = !DILocation(line: 217, column: 48, scope: !18864)
!18900 = !DILocation(line: 217, column: 22, scope: !18864)
!18901 = !DILocation(line: 217, column: 20, scope: !18864)
!18902 = !DILocation(line: 218, column: 11, scope: !18864)
!18903 = !DILocation(line: 221, column: 48, scope: !18864)
!18904 = !DILocation(line: 221, column: 22, scope: !18864)
!18905 = !DILocation(line: 221, column: 20, scope: !18864)
!18906 = !DILocation(line: 222, column: 11, scope: !18864)
!18907 = !DILocation(line: 225, column: 18, scope: !18864)
!18908 = !DILocation(line: 225, column: 12, scope: !18864)
!18909 = !DILocation(line: 225, column: 16, scope: !18864)
!18910 = !DILocation(line: 226, column: 18, scope: !18864)
!18911 = !DILocation(line: 226, column: 22, scope: !18864)
!18912 = !DILocation(line: 226, column: 11, scope: !18864)
!18913 = !DILocation(line: 229, column: 14, scope: !18815)
!18914 = !DILocation(line: 229, column: 11, scope: !18815)
!18915 = !DILocation(line: 230, column: 13, scope: !18815)
!18916 = !DILocation(line: 230, column: 8, scope: !18815)
!18917 = !DILocation(line: 230, column: 10, scope: !18815)
!18918 = !DILocation(line: 231, column: 13, scope: !18919)
!18919 = distinct !DILexicalBlock(scope: !18815, file: !18706, line: 231, column: 11)
!18920 = !DILocation(line: 231, column: 12, scope: !18919)
!18921 = !DILocation(line: 231, column: 11, scope: !18919)
!18922 = !DILocation(line: 231, column: 11, scope: !18815)
!18923 = !DILocation(line: 232, column: 13, scope: !18919)
!18924 = !DILocation(line: 232, column: 9, scope: !18919)
!18925 = !DILocation(line: 233, column: 5, scope: !18815)
!18926 = !DILocation(line: 235, column: 10, scope: !18705)
!18927 = !DILocation(line: 235, column: 4, scope: !18705)
!18928 = !DILocation(line: 235, column: 8, scope: !18705)
!18929 = !DILocation(line: 236, column: 10, scope: !18705)
!18930 = !DILocation(line: 236, column: 3, scope: !18705)
!18931 = !DILocation(line: 237, column: 1, scope: !18705)
!18932 = distinct !DISubprogram(name: "bkm_scale", scope: !18706, file: !18706, line: 48, type: !18933, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1473, retainedNodes: !298)
!18933 = !DISubroutineType(types: !18934)
!18934 = !{!1485, !18709, !7}
!18935 = !DILocalVariable(name: "x", arg: 1, scope: !18932, file: !18706, line: 48, type: !18709)
!18936 = !DILocation(line: 48, column: 24, scope: !18932)
!18937 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !18932, file: !18706, line: 48, type: !7)
!18938 = !DILocation(line: 48, column: 31, scope: !18932)
!18939 = !DILocation(line: 55, column: 26, scope: !18940)
!18940 = distinct !DILexicalBlock(scope: !18932, file: !18706, line: 55, column: 7)
!18941 = !DILocation(line: 55, column: 24, scope: !18940)
!18942 = !DILocation(line: 55, column: 42, scope: !18940)
!18943 = !DILocation(line: 55, column: 41, scope: !18940)
!18944 = !DILocation(line: 55, column: 39, scope: !18940)
!18945 = !DILocation(line: 55, column: 7, scope: !18932)
!18946 = !DILocation(line: 57, column: 8, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18940, file: !18706, line: 56, column: 5)
!18948 = !DILocation(line: 57, column: 10, scope: !18947)
!18949 = !DILocation(line: 58, column: 7, scope: !18947)
!18950 = !DILocation(line: 60, column: 9, scope: !18932)
!18951 = !DILocation(line: 60, column: 4, scope: !18932)
!18952 = !DILocation(line: 60, column: 6, scope: !18932)
!18953 = !DILocation(line: 61, column: 3, scope: !18932)
!18954 = !DILocation(line: 62, column: 1, scope: !18932)
!18955 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !18706, file: !18706, line: 65, type: !18956, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1473, retainedNodes: !298)
!18956 = !DISubroutineType(types: !18957)
!18957 = !{!1485, !18709, !7, !7}
!18958 = !DILocalVariable(name: "x", arg: 1, scope: !18955, file: !18706, line: 65, type: !18709)
!18959 = !DILocation(line: 65, column: 33, scope: !18955)
!18960 = !DILocalVariable(name: "base", arg: 2, scope: !18955, file: !18706, line: 65, type: !7)
!18961 = !DILocation(line: 65, column: 40, scope: !18955)
!18962 = !DILocalVariable(name: "power", arg: 3, scope: !18955, file: !18706, line: 65, type: !7)
!18963 = !DILocation(line: 65, column: 50, scope: !18955)
!18964 = !DILocalVariable(name: "err", scope: !18955, file: !18706, line: 67, type: !1485)
!18965 = !DILocation(line: 67, column: 16, scope: !18955)
!18966 = !DILocation(line: 68, column: 3, scope: !18955)
!18967 = !DILocation(line: 68, column: 15, scope: !18955)
!18968 = !DILocation(line: 69, column: 23, scope: !18955)
!18969 = !DILocation(line: 69, column: 26, scope: !18955)
!18970 = !DILocation(line: 69, column: 12, scope: !18955)
!18971 = !DILocation(line: 69, column: 9, scope: !18955)
!18972 = distinct !{!18972, !18966, !18973}
!18973 = !DILocation(line: 69, column: 30, scope: !18955)
!18974 = !DILocation(line: 70, column: 10, scope: !18955)
!18975 = !DILocation(line: 70, column: 3, scope: !18955)
!18976 = distinct !DISubprogram(name: "xvasprintf", scope: !18977, file: !18977, line: 76, type: !18978, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1486, retainedNodes: !298)
!18977 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18978 = !DISubroutineType(types: !18979)
!18979 = !{!9, !183, !18980}
!18980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!18981 = !DILocalVariable(name: "format", arg: 1, scope: !18976, file: !18977, line: 76, type: !183)
!18982 = !DILocation(line: 76, column: 25, scope: !18976)
!18983 = !DILocalVariable(name: "args", arg: 2, scope: !18976, file: !18977, line: 76, type: !18980)
!18984 = !DILocation(line: 76, column: 41, scope: !18976)
!18985 = !DILocalVariable(name: "result", scope: !18976, file: !18977, line: 78, type: !9)
!18986 = !DILocation(line: 78, column: 9, scope: !18976)
!18987 = !DILocalVariable(name: "argcount", scope: !18988, file: !18977, line: 84, type: !55)
!18988 = distinct !DILexicalBlock(scope: !18976, file: !18977, line: 83, column: 3)
!18989 = !DILocation(line: 84, column: 12, scope: !18988)
!18990 = !DILocalVariable(name: "f", scope: !18988, file: !18977, line: 85, type: !183)
!18991 = !DILocation(line: 85, column: 17, scope: !18988)
!18992 = !DILocation(line: 87, column: 14, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18988, file: !18977, line: 87, column: 5)
!18994 = !DILocation(line: 87, column: 12, scope: !18993)
!18995 = !DILocation(line: 87, column: 10, scope: !18993)
!18996 = !DILocation(line: 89, column: 14, scope: !18997)
!18997 = distinct !DILexicalBlock(scope: !18998, file: !18977, line: 89, column: 13)
!18998 = distinct !DILexicalBlock(scope: !18999, file: !18977, line: 88, column: 7)
!18999 = distinct !DILexicalBlock(scope: !18993, file: !18977, line: 87, column: 5)
!19000 = !DILocation(line: 89, column: 13, scope: !18997)
!19001 = !DILocation(line: 89, column: 16, scope: !18997)
!19002 = !DILocation(line: 89, column: 13, scope: !18998)
!19003 = !DILocation(line: 91, column: 27, scope: !18997)
!19004 = !DILocation(line: 91, column: 37, scope: !18997)
!19005 = !DILocation(line: 91, column: 18, scope: !18997)
!19006 = !DILocation(line: 91, column: 11, scope: !18997)
!19007 = !DILocation(line: 92, column: 14, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !18998, file: !18977, line: 92, column: 13)
!19009 = !DILocation(line: 92, column: 13, scope: !19008)
!19010 = !DILocation(line: 92, column: 16, scope: !19008)
!19011 = !DILocation(line: 92, column: 13, scope: !18998)
!19012 = !DILocation(line: 93, column: 11, scope: !19008)
!19013 = !DILocation(line: 94, column: 10, scope: !18998)
!19014 = !DILocation(line: 95, column: 14, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !18998, file: !18977, line: 95, column: 13)
!19016 = !DILocation(line: 95, column: 13, scope: !19015)
!19017 = !DILocation(line: 95, column: 16, scope: !19015)
!19018 = !DILocation(line: 95, column: 13, scope: !18998)
!19019 = !DILocation(line: 96, column: 11, scope: !19015)
!19020 = !DILocation(line: 97, column: 10, scope: !18998)
!19021 = !DILocation(line: 98, column: 17, scope: !18998)
!19022 = !DILocation(line: 87, column: 5, scope: !18999)
!19023 = distinct !{!19023, !19024, !19025}
!19024 = !DILocation(line: 87, column: 5, scope: !18993)
!19025 = !DILocation(line: 99, column: 7, scope: !18993)
!19026 = !DILocation(line: 102, column: 27, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !18976, file: !18977, line: 102, column: 7)
!19028 = !DILocation(line: 102, column: 35, scope: !19027)
!19029 = !DILocation(line: 102, column: 7, scope: !19027)
!19030 = !DILocation(line: 102, column: 41, scope: !19027)
!19031 = !DILocation(line: 102, column: 7, scope: !18976)
!19032 = !DILocation(line: 104, column: 11, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !19034, file: !18977, line: 104, column: 11)
!19034 = distinct !DILexicalBlock(scope: !19027, file: !18977, line: 103, column: 5)
!19035 = !DILocation(line: 104, column: 17, scope: !19033)
!19036 = !DILocation(line: 104, column: 11, scope: !19034)
!19037 = !DILocation(line: 105, column: 9, scope: !19033)
!19038 = !DILocation(line: 106, column: 7, scope: !19034)
!19039 = !DILocation(line: 109, column: 10, scope: !18976)
!19040 = !DILocation(line: 109, column: 3, scope: !18976)
!19041 = !DILocation(line: 110, column: 1, scope: !18976)
!19042 = distinct !DISubprogram(name: "xstrcat", scope: !18977, file: !18977, line: 33, type: !19043, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1486, retainedNodes: !298)
!19043 = !DISubroutineType(types: !19044)
!19044 = !{!9, !55, !18980}
!19045 = !DILocalVariable(name: "argcount", arg: 1, scope: !19042, file: !18977, line: 33, type: !55)
!19046 = !DILocation(line: 33, column: 17, scope: !19042)
!19047 = !DILocalVariable(name: "args", arg: 2, scope: !19042, file: !18977, line: 33, type: !18980)
!19048 = !DILocation(line: 33, column: 35, scope: !19042)
!19049 = !DILocalVariable(name: "result", scope: !19042, file: !18977, line: 35, type: !9)
!19050 = !DILocation(line: 35, column: 9, scope: !19042)
!19051 = !DILocalVariable(name: "ap", scope: !19042, file: !18977, line: 36, type: !1489)
!19052 = !DILocation(line: 36, column: 11, scope: !19042)
!19053 = !DILocalVariable(name: "totalsize", scope: !19042, file: !18977, line: 37, type: !55)
!19054 = !DILocation(line: 37, column: 10, scope: !19042)
!19055 = !DILocalVariable(name: "i", scope: !19042, file: !18977, line: 38, type: !55)
!19056 = !DILocation(line: 38, column: 10, scope: !19042)
!19057 = !DILocalVariable(name: "p", scope: !19042, file: !18977, line: 39, type: !9)
!19058 = !DILocation(line: 39, column: 9, scope: !19042)
!19059 = !DILocation(line: 42, column: 13, scope: !19042)
!19060 = !DILocation(line: 43, column: 3, scope: !19042)
!19061 = !DILocation(line: 44, column: 12, scope: !19062)
!19062 = distinct !DILexicalBlock(scope: !19042, file: !18977, line: 44, column: 3)
!19063 = !DILocation(line: 44, column: 10, scope: !19062)
!19064 = !DILocation(line: 44, column: 8, scope: !19062)
!19065 = !DILocation(line: 44, column: 22, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !19062, file: !18977, line: 44, column: 3)
!19067 = !DILocation(line: 44, column: 24, scope: !19066)
!19068 = !DILocation(line: 44, column: 3, scope: !19062)
!19069 = !DILocalVariable(name: "next", scope: !19070, file: !18977, line: 46, type: !183)
!19070 = distinct !DILexicalBlock(scope: !19066, file: !18977, line: 45, column: 5)
!19071 = !DILocation(line: 46, column: 19, scope: !19070)
!19072 = !DILocation(line: 46, column: 26, scope: !19070)
!19073 = !DILocation(line: 47, column: 25, scope: !19070)
!19074 = !DILocation(line: 47, column: 44, scope: !19070)
!19075 = !DILocation(line: 47, column: 36, scope: !19070)
!19076 = !DILocation(line: 47, column: 19, scope: !19070)
!19077 = !DILocation(line: 47, column: 17, scope: !19070)
!19078 = !DILocation(line: 48, column: 5, scope: !19070)
!19079 = !DILocation(line: 44, column: 30, scope: !19066)
!19080 = !DILocation(line: 44, column: 3, scope: !19066)
!19081 = distinct !{!19081, !19068, !19082}
!19082 = !DILocation(line: 48, column: 5, scope: !19062)
!19083 = !DILocation(line: 49, column: 3, scope: !19042)
!19084 = !DILocation(line: 54, column: 7, scope: !19085)
!19085 = distinct !DILexicalBlock(scope: !19042, file: !18977, line: 54, column: 7)
!19086 = !DILocation(line: 54, column: 17, scope: !19085)
!19087 = !DILocation(line: 54, column: 29, scope: !19085)
!19088 = !DILocation(line: 54, column: 32, scope: !19085)
!19089 = !DILocation(line: 54, column: 42, scope: !19085)
!19090 = !DILocation(line: 54, column: 7, scope: !19042)
!19091 = !DILocation(line: 56, column: 7, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19085, file: !18977, line: 55, column: 5)
!19093 = !DILocation(line: 56, column: 13, scope: !19092)
!19094 = !DILocation(line: 57, column: 7, scope: !19092)
!19095 = !DILocation(line: 61, column: 12, scope: !19042)
!19096 = !DILocation(line: 61, column: 10, scope: !19042)
!19097 = !DILocation(line: 62, column: 7, scope: !19042)
!19098 = !DILocation(line: 62, column: 5, scope: !19042)
!19099 = !DILocation(line: 63, column: 12, scope: !19100)
!19100 = distinct !DILexicalBlock(scope: !19042, file: !18977, line: 63, column: 3)
!19101 = !DILocation(line: 63, column: 10, scope: !19100)
!19102 = !DILocation(line: 63, column: 8, scope: !19100)
!19103 = !DILocation(line: 63, column: 22, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19100, file: !18977, line: 63, column: 3)
!19105 = !DILocation(line: 63, column: 24, scope: !19104)
!19106 = !DILocation(line: 63, column: 3, scope: !19100)
!19107 = !DILocalVariable(name: "next", scope: !19108, file: !18977, line: 65, type: !183)
!19108 = distinct !DILexicalBlock(scope: !19104, file: !18977, line: 64, column: 5)
!19109 = !DILocation(line: 65, column: 19, scope: !19108)
!19110 = !DILocation(line: 65, column: 26, scope: !19108)
!19111 = !DILocalVariable(name: "len", scope: !19108, file: !18977, line: 66, type: !55)
!19112 = !DILocation(line: 66, column: 14, scope: !19108)
!19113 = !DILocation(line: 66, column: 28, scope: !19108)
!19114 = !DILocation(line: 66, column: 20, scope: !19108)
!19115 = !DILocation(line: 67, column: 15, scope: !19108)
!19116 = !DILocation(line: 67, column: 18, scope: !19108)
!19117 = !DILocation(line: 67, column: 24, scope: !19108)
!19118 = !DILocation(line: 67, column: 7, scope: !19108)
!19119 = !DILocation(line: 68, column: 12, scope: !19108)
!19120 = !DILocation(line: 68, column: 9, scope: !19108)
!19121 = !DILocation(line: 69, column: 5, scope: !19108)
!19122 = !DILocation(line: 63, column: 30, scope: !19104)
!19123 = !DILocation(line: 63, column: 3, scope: !19104)
!19124 = distinct !{!19124, !19106, !19125}
!19125 = !DILocation(line: 69, column: 5, scope: !19100)
!19126 = !DILocation(line: 70, column: 4, scope: !19042)
!19127 = !DILocation(line: 70, column: 6, scope: !19042)
!19128 = !DILocation(line: 72, column: 10, scope: !19042)
!19129 = !DILocation(line: 72, column: 3, scope: !19042)
!19130 = !DILocation(line: 73, column: 1, scope: !19042)
!19131 = distinct !DISubprogram(name: "yesno", scope: !19132, file: !19132, line: 32, type: !1103, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1499, retainedNodes: !298)
!19132 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19133 = !DILocalVariable(name: "yes", scope: !19131, file: !19132, line: 34, type: !142)
!19134 = !DILocation(line: 34, column: 8, scope: !19131)
!19135 = !DILocalVariable(name: "response", scope: !19131, file: !19132, line: 37, type: !9)
!19136 = !DILocation(line: 37, column: 9, scope: !19131)
!19137 = !DILocalVariable(name: "response_size", scope: !19131, file: !19132, line: 38, type: !55)
!19138 = !DILocation(line: 38, column: 10, scope: !19131)
!19139 = !DILocalVariable(name: "response_len", scope: !19131, file: !19132, line: 39, type: !661)
!19140 = !DILocation(line: 39, column: 11, scope: !19131)
!19141 = !DILocation(line: 39, column: 62, scope: !19131)
!19142 = !DILocation(line: 39, column: 26, scope: !19131)
!19143 = !DILocation(line: 41, column: 7, scope: !19144)
!19144 = distinct !DILexicalBlock(scope: !19131, file: !19132, line: 41, column: 7)
!19145 = !DILocation(line: 41, column: 20, scope: !19144)
!19146 = !DILocation(line: 41, column: 7, scope: !19131)
!19147 = !DILocation(line: 42, column: 9, scope: !19144)
!19148 = !DILocation(line: 42, column: 5, scope: !19144)
!19149 = !DILocation(line: 47, column: 11, scope: !19150)
!19150 = distinct !DILexicalBlock(scope: !19151, file: !19132, line: 47, column: 11)
!19151 = distinct !DILexicalBlock(scope: !19144, file: !19132, line: 44, column: 5)
!19152 = !DILocation(line: 47, column: 20, scope: !19150)
!19153 = !DILocation(line: 47, column: 33, scope: !19150)
!19154 = !DILocation(line: 47, column: 38, scope: !19150)
!19155 = !DILocation(line: 47, column: 11, scope: !19151)
!19156 = !DILocation(line: 48, column: 9, scope: !19150)
!19157 = !DILocation(line: 48, column: 18, scope: !19150)
!19158 = !DILocation(line: 48, column: 31, scope: !19150)
!19159 = !DILocation(line: 48, column: 36, scope: !19150)
!19160 = !DILocation(line: 49, column: 27, scope: !19151)
!19161 = !DILocation(line: 49, column: 18, scope: !19151)
!19162 = !DILocation(line: 49, column: 16, scope: !19151)
!19163 = !DILocation(line: 49, column: 11, scope: !19151)
!19164 = !DILocation(line: 52, column: 9, scope: !19131)
!19165 = !DILocation(line: 52, column: 3, scope: !19131)
!19166 = !DILocation(line: 62, column: 10, scope: !19131)
!19167 = !DILocation(line: 62, column: 3, scope: !19131)
!19168 = distinct !DISubprogram(name: "rpl_fflush", scope: !19169, file: !19169, line: 129, type: !19170, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1536, retainedNodes: !298)
!19169 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19170 = !DISubroutineType(types: !19171)
!19171 = !{!7, !19172}
!19172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!19173 = !DILocalVariable(name: "stream", arg: 1, scope: !19168, file: !19169, line: 129, type: !19172)
!19174 = !DILocation(line: 129, column: 19, scope: !19168)
!19175 = !DILocation(line: 150, column: 7, scope: !19176)
!19176 = distinct !DILexicalBlock(scope: !19168, file: !19169, line: 150, column: 7)
!19177 = !DILocation(line: 150, column: 14, scope: !19176)
!19178 = !DILocation(line: 150, column: 22, scope: !19176)
!19179 = !DILocation(line: 150, column: 27, scope: !19176)
!19180 = !DILocation(line: 150, column: 7, scope: !19168)
!19181 = !DILocation(line: 151, column: 20, scope: !19176)
!19182 = !DILocation(line: 151, column: 12, scope: !19176)
!19183 = !DILocation(line: 151, column: 5, scope: !19176)
!19184 = !DILocation(line: 156, column: 44, scope: !19168)
!19185 = !DILocation(line: 156, column: 3, scope: !19168)
!19186 = !DILocation(line: 158, column: 18, scope: !19168)
!19187 = !DILocation(line: 158, column: 10, scope: !19168)
!19188 = !DILocation(line: 158, column: 3, scope: !19168)
!19189 = !DILocation(line: 232, column: 1, scope: !19168)
!19190 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !19169, file: !19169, line: 41, type: !19191, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1536, retainedNodes: !298)
!19191 = !DISubroutineType(types: !19192)
!19192 = !{null, !19172}
!19193 = !DILocalVariable(name: "fp", arg: 1, scope: !19190, file: !19169, line: 41, type: !19172)
!19194 = !DILocation(line: 41, column: 48, scope: !19190)
!19195 = !DILocation(line: 43, column: 7, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !19190, file: !19169, line: 43, column: 7)
!19197 = !DILocation(line: 43, column: 11, scope: !19196)
!19198 = !DILocation(line: 43, column: 18, scope: !19196)
!19199 = !DILocation(line: 43, column: 7, scope: !19190)
!19200 = !DILocation(line: 45, column: 13, scope: !19196)
!19201 = !DILocation(line: 45, column: 5, scope: !19196)
!19202 = !DILocation(line: 46, column: 1, scope: !19190)
!19203 = distinct !DISubprogram(name: "freadahead", scope: !19204, file: !19204, line: 34, type: !19205, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1572, retainedNodes: !298)
!19204 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19205 = !DISubroutineType(types: !19206)
!19206 = !{!55, !19207}
!19207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!19208 = !DILocalVariable(name: "fp", arg: 1, scope: !19203, file: !19204, line: 34, type: !19207)
!19209 = !DILocation(line: 34, column: 19, scope: !19203)
!19210 = !DILocation(line: 38, column: 7, scope: !19211)
!19211 = distinct !DILexicalBlock(scope: !19203, file: !19204, line: 38, column: 7)
!19212 = !DILocation(line: 38, column: 11, scope: !19211)
!19213 = !DILocation(line: 38, column: 27, scope: !19211)
!19214 = !DILocation(line: 38, column: 31, scope: !19211)
!19215 = !DILocation(line: 38, column: 25, scope: !19211)
!19216 = !DILocation(line: 38, column: 7, scope: !19203)
!19217 = !DILocation(line: 39, column: 5, scope: !19211)
!19218 = !DILocation(line: 40, column: 11, scope: !19203)
!19219 = !DILocation(line: 40, column: 15, scope: !19203)
!19220 = !DILocation(line: 40, column: 30, scope: !19203)
!19221 = !DILocation(line: 40, column: 34, scope: !19203)
!19222 = !DILocation(line: 40, column: 28, scope: !19203)
!19223 = !DILocation(line: 41, column: 13, scope: !19203)
!19224 = !DILocation(line: 41, column: 17, scope: !19203)
!19225 = !DILocation(line: 41, column: 24, scope: !19203)
!19226 = !DILocation(line: 41, column: 42, scope: !19203)
!19227 = !DILocation(line: 41, column: 46, scope: !19203)
!19228 = !DILocation(line: 41, column: 61, scope: !19203)
!19229 = !DILocation(line: 41, column: 65, scope: !19203)
!19230 = !DILocation(line: 41, column: 59, scope: !19203)
!19231 = !DILocation(line: 41, column: 10, scope: !19203)
!19232 = !DILocation(line: 40, column: 3, scope: !19203)
!19233 = !DILocation(line: 103, column: 1, scope: !19203)
!19234 = distinct !DISubprogram(name: "rpl_fseeko", scope: !19235, file: !19235, line: 28, type: !19236, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1608, retainedNodes: !298)
!19235 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19236 = !DISubroutineType(types: !19237)
!19237 = !{!7, !19238, !429, !7}
!19238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!19239 = !DILocalVariable(name: "fp", arg: 1, scope: !19234, file: !19235, line: 28, type: !19238)
!19240 = !DILocation(line: 28, column: 15, scope: !19234)
!19241 = !DILocalVariable(name: "offset", arg: 2, scope: !19234, file: !19235, line: 28, type: !429)
!19242 = !DILocation(line: 28, column: 25, scope: !19234)
!19243 = !DILocalVariable(name: "whence", arg: 3, scope: !19234, file: !19235, line: 28, type: !7)
!19244 = !DILocation(line: 28, column: 37, scope: !19234)
!19245 = !DILocation(line: 52, column: 7, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19234, file: !19235, line: 52, column: 7)
!19247 = !DILocation(line: 52, column: 11, scope: !19246)
!19248 = !DILocation(line: 52, column: 27, scope: !19246)
!19249 = !DILocation(line: 52, column: 31, scope: !19246)
!19250 = !DILocation(line: 52, column: 24, scope: !19246)
!19251 = !DILocation(line: 53, column: 7, scope: !19246)
!19252 = !DILocation(line: 53, column: 10, scope: !19246)
!19253 = !DILocation(line: 53, column: 14, scope: !19246)
!19254 = !DILocation(line: 53, column: 31, scope: !19246)
!19255 = !DILocation(line: 53, column: 35, scope: !19246)
!19256 = !DILocation(line: 53, column: 28, scope: !19246)
!19257 = !DILocation(line: 54, column: 7, scope: !19246)
!19258 = !DILocation(line: 54, column: 10, scope: !19246)
!19259 = !DILocation(line: 54, column: 14, scope: !19246)
!19260 = !DILocation(line: 54, column: 28, scope: !19246)
!19261 = !DILocation(line: 52, column: 7, scope: !19234)
!19262 = !DILocalVariable(name: "pos", scope: !19263, file: !19235, line: 117, type: !429)
!19263 = distinct !DILexicalBlock(scope: !19246, file: !19235, line: 113, column: 5)
!19264 = !DILocation(line: 117, column: 13, scope: !19263)
!19265 = !DILocation(line: 117, column: 34, scope: !19263)
!19266 = !DILocation(line: 117, column: 26, scope: !19263)
!19267 = !DILocation(line: 117, column: 39, scope: !19263)
!19268 = !DILocation(line: 117, column: 47, scope: !19263)
!19269 = !DILocation(line: 117, column: 19, scope: !19263)
!19270 = !DILocation(line: 118, column: 11, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19263, file: !19235, line: 118, column: 11)
!19272 = !DILocation(line: 118, column: 15, scope: !19271)
!19273 = !DILocation(line: 118, column: 11, scope: !19263)
!19274 = !DILocation(line: 124, column: 11, scope: !19275)
!19275 = distinct !DILexicalBlock(scope: !19271, file: !19235, line: 119, column: 9)
!19276 = !DILocation(line: 129, column: 7, scope: !19263)
!19277 = !DILocation(line: 129, column: 11, scope: !19263)
!19278 = !DILocation(line: 129, column: 18, scope: !19263)
!19279 = !DILocation(line: 130, column: 21, scope: !19263)
!19280 = !DILocation(line: 130, column: 7, scope: !19263)
!19281 = !DILocation(line: 130, column: 11, scope: !19263)
!19282 = !DILocation(line: 130, column: 19, scope: !19263)
!19283 = !DILocation(line: 161, column: 7, scope: !19263)
!19284 = !DILocation(line: 163, column: 18, scope: !19234)
!19285 = !DILocation(line: 163, column: 22, scope: !19234)
!19286 = !DILocation(line: 163, column: 30, scope: !19234)
!19287 = !DILocation(line: 163, column: 10, scope: !19234)
!19288 = !DILocation(line: 163, column: 3, scope: !19234)
!19289 = !DILocation(line: 164, column: 1, scope: !19234)
!19290 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !19291, file: !19291, line: 385, type: !19292, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1644, retainedNodes: !298)
!19291 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19292 = !DISubroutineType(types: !19293)
!19293 = !{!55, !19294, !183, !55, !19295}
!19294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!19295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19296, size: 64)
!19296 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !933, line: 6, baseType: !19297)
!19297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !935, line: 21, baseType: !19298)
!19298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !935, line: 13, size: 64, elements: !19299)
!19299 = !{!19300, !19301}
!19300 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !19298, file: !935, line: 15, baseType: !7, size: 32)
!19301 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !19298, file: !935, line: 20, baseType: !19302, size: 32, offset: 32)
!19302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19298, file: !935, line: 16, size: 32, elements: !19303)
!19303 = !{!19304, !19305}
!19304 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !19302, file: !935, line: 18, baseType: !70, size: 32)
!19305 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !19302, file: !935, line: 19, baseType: !311, size: 32)
!19306 = !DILocalVariable(name: "pwc", arg: 1, scope: !19290, file: !19291, line: 385, type: !19294)
!19307 = !DILocation(line: 385, column: 23, scope: !19290)
!19308 = !DILocalVariable(name: "s", arg: 2, scope: !19290, file: !19291, line: 385, type: !183)
!19309 = !DILocation(line: 385, column: 40, scope: !19290)
!19310 = !DILocalVariable(name: "n", arg: 3, scope: !19290, file: !19291, line: 385, type: !55)
!19311 = !DILocation(line: 385, column: 50, scope: !19290)
!19312 = !DILocalVariable(name: "ps", arg: 4, scope: !19290, file: !19291, line: 385, type: !19295)
!19313 = !DILocation(line: 385, column: 64, scope: !19290)
!19314 = !DILocalVariable(name: "ret", scope: !19290, file: !19291, line: 387, type: !55)
!19315 = !DILocation(line: 387, column: 10, scope: !19290)
!19316 = !DILocalVariable(name: "wc", scope: !19290, file: !19291, line: 388, type: !944)
!19317 = !DILocation(line: 388, column: 11, scope: !19290)
!19318 = !DILocation(line: 404, column: 9, scope: !19319)
!19319 = distinct !DILexicalBlock(scope: !19290, file: !19291, line: 404, column: 7)
!19320 = !DILocation(line: 404, column: 7, scope: !19290)
!19321 = !DILocation(line: 405, column: 9, scope: !19319)
!19322 = !DILocation(line: 405, column: 5, scope: !19319)
!19323 = !DILocation(line: 439, column: 18, scope: !19290)
!19324 = !DILocation(line: 439, column: 23, scope: !19290)
!19325 = !DILocation(line: 439, column: 26, scope: !19290)
!19326 = !DILocation(line: 439, column: 29, scope: !19290)
!19327 = !DILocation(line: 439, column: 9, scope: !19290)
!19328 = !DILocation(line: 439, column: 7, scope: !19290)
!19329 = !DILocation(line: 447, column: 22, scope: !19330)
!19330 = distinct !DILexicalBlock(scope: !19290, file: !19291, line: 447, column: 7)
!19331 = !DILocation(line: 447, column: 19, scope: !19330)
!19332 = !DILocation(line: 447, column: 26, scope: !19330)
!19333 = !DILocation(line: 447, column: 29, scope: !19330)
!19334 = !DILocation(line: 447, column: 31, scope: !19330)
!19335 = !DILocation(line: 447, column: 36, scope: !19330)
!19336 = !DILocation(line: 447, column: 41, scope: !19330)
!19337 = !DILocation(line: 447, column: 7, scope: !19290)
!19338 = !DILocalVariable(name: "uc", scope: !19339, file: !19291, line: 449, type: !573)
!19339 = distinct !DILexicalBlock(scope: !19330, file: !19291, line: 448, column: 5)
!19340 = !DILocation(line: 449, column: 21, scope: !19339)
!19341 = !DILocation(line: 449, column: 27, scope: !19339)
!19342 = !DILocation(line: 449, column: 26, scope: !19339)
!19343 = !DILocation(line: 450, column: 14, scope: !19339)
!19344 = !DILocation(line: 450, column: 8, scope: !19339)
!19345 = !DILocation(line: 450, column: 12, scope: !19339)
!19346 = !DILocation(line: 451, column: 7, scope: !19339)
!19347 = !DILocation(line: 455, column: 10, scope: !19290)
!19348 = !DILocation(line: 455, column: 3, scope: !19290)
!19349 = !DILocation(line: 456, column: 1, scope: !19290)
!19350 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !19351, file: !19351, line: 47, type: !19352, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1647, retainedNodes: !298)
!19351 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19352 = !DISubroutineType(types: !19353)
!19353 = !{!7, !1655}
!19354 = !DILocalVariable(name: "acl", arg: 1, scope: !19350, file: !19351, line: 47, type: !1655)
!19355 = !DILocation(line: 47, column: 30, scope: !19350)
!19356 = !DILocalVariable(name: "ace", scope: !19350, file: !19351, line: 56, type: !1650)
!19357 = !DILocation(line: 56, column: 15, scope: !19350)
!19358 = !DILocalVariable(name: "got_one", scope: !19350, file: !19351, line: 57, type: !7)
!19359 = !DILocation(line: 57, column: 7, scope: !19350)
!19360 = !DILocation(line: 59, column: 33, scope: !19361)
!19361 = distinct !DILexicalBlock(scope: !19350, file: !19351, line: 59, column: 3)
!19362 = !DILocation(line: 59, column: 18, scope: !19361)
!19363 = !DILocation(line: 59, column: 16, scope: !19361)
!19364 = !DILocation(line: 59, column: 8, scope: !19361)
!19365 = !DILocation(line: 60, column: 8, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19361, file: !19351, line: 59, column: 3)
!19367 = !DILocation(line: 60, column: 16, scope: !19366)
!19368 = !DILocation(line: 59, column: 3, scope: !19361)
!19369 = !DILocalVariable(name: "tag", scope: !19370, file: !19351, line: 63, type: !1654)
!19370 = distinct !DILexicalBlock(scope: !19366, file: !19351, line: 62, column: 5)
!19371 = !DILocation(line: 63, column: 17, scope: !19370)
!19372 = !DILocation(line: 64, column: 29, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19370, file: !19351, line: 64, column: 11)
!19374 = !DILocation(line: 64, column: 11, scope: !19373)
!19375 = !DILocation(line: 64, column: 40, scope: !19373)
!19376 = !DILocation(line: 64, column: 11, scope: !19370)
!19377 = !DILocation(line: 65, column: 9, scope: !19373)
!19378 = !DILocation(line: 66, column: 13, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19370, file: !19351, line: 66, column: 11)
!19380 = !DILocation(line: 66, column: 17, scope: !19379)
!19381 = !DILocation(line: 66, column: 33, scope: !19379)
!19382 = !DILocation(line: 66, column: 36, scope: !19379)
!19383 = !DILocation(line: 66, column: 40, scope: !19379)
!19384 = !DILocation(line: 66, column: 57, scope: !19379)
!19385 = !DILocation(line: 66, column: 60, scope: !19379)
!19386 = !DILocation(line: 66, column: 64, scope: !19379)
!19387 = !DILocation(line: 66, column: 11, scope: !19370)
!19388 = !DILocation(line: 67, column: 9, scope: !19379)
!19389 = !DILocation(line: 68, column: 5, scope: !19370)
!19390 = !DILocation(line: 61, column: 33, scope: !19366)
!19391 = !DILocation(line: 61, column: 18, scope: !19366)
!19392 = !DILocation(line: 61, column: 16, scope: !19366)
!19393 = !DILocation(line: 59, column: 3, scope: !19366)
!19394 = distinct !{!19394, !19368, !19395}
!19395 = !DILocation(line: 68, column: 5, scope: !19361)
!19396 = !DILocation(line: 69, column: 10, scope: !19350)
!19397 = !DILocation(line: 69, column: 3, scope: !19350)
!19398 = !DILocation(line: 116, column: 1, scope: !19350)
!19399 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !19351, file: !19351, line: 119, type: !19352, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1647, retainedNodes: !298)
!19400 = !DILocalVariable(name: "acl", arg: 1, scope: !19399, file: !19351, line: 119, type: !1655)
!19401 = !DILocation(line: 119, column: 31, scope: !19399)
!19402 = !DILocation(line: 122, column: 24, scope: !19399)
!19403 = !DILocation(line: 122, column: 11, scope: !19399)
!19404 = !DILocation(line: 122, column: 29, scope: !19399)
!19405 = !DILocation(line: 122, column: 3, scope: !19399)
!19406 = distinct !DISubprogram(name: "free_permission_context", scope: !19351, file: !19351, line: 479, type: !19407, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1647, retainedNodes: !298)
!19407 = !DISubroutineType(types: !19408)
!19408 = !{null, !19409}
!19409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19410, size: 64)
!19410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13488, line: 260, size: 256, elements: !19411)
!19411 = !{!19412, !19413, !19414, !19415}
!19412 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19410, file: !13488, line: 261, baseType: !139, size: 32)
!19413 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !19410, file: !13488, line: 264, baseType: !1655, size: 64, offset: 64)
!19414 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !19410, file: !13488, line: 266, baseType: !1655, size: 64, offset: 128)
!19415 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !19410, file: !13488, line: 268, baseType: !142, size: 8, offset: 192)
!19416 = !DILocalVariable(name: "ctx", arg: 1, scope: !19406, file: !19351, line: 479, type: !19409)
!19417 = !DILocation(line: 479, column: 53, scope: !19406)
!19418 = !DILocation(line: 483, column: 7, scope: !19419)
!19419 = distinct !DILexicalBlock(scope: !19406, file: !19351, line: 483, column: 7)
!19420 = !DILocation(line: 483, column: 12, scope: !19419)
!19421 = !DILocation(line: 483, column: 7, scope: !19406)
!19422 = !DILocation(line: 484, column: 15, scope: !19419)
!19423 = !DILocation(line: 484, column: 20, scope: !19419)
!19424 = !DILocation(line: 484, column: 5, scope: !19419)
!19425 = !DILocation(line: 486, column: 7, scope: !19426)
!19426 = distinct !DILexicalBlock(scope: !19406, file: !19351, line: 486, column: 7)
!19427 = !DILocation(line: 486, column: 12, scope: !19426)
!19428 = !DILocation(line: 486, column: 7, scope: !19406)
!19429 = !DILocation(line: 487, column: 15, scope: !19426)
!19430 = !DILocation(line: 487, column: 20, scope: !19426)
!19431 = !DILocation(line: 487, column: 5, scope: !19426)
!19432 = !DILocation(line: 507, column: 1, scope: !19406)
!19433 = distinct !DISubprogram(name: "get_permissions", scope: !19434, file: !19434, line: 33, type: !19435, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1658, retainedNodes: !298)
!19434 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19435 = !DISubroutineType(types: !19436)
!19436 = !{!7, !183, !7, !139, !19437}
!19437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19438, size: 64)
!19438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13488, line: 260, size: 256, elements: !19439)
!19439 = !{!19440, !19441, !19442, !19443}
!19440 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19438, file: !13488, line: 261, baseType: !139, size: 32)
!19441 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !19438, file: !13488, line: 264, baseType: !1655, size: 64, offset: 64)
!19442 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !19438, file: !13488, line: 266, baseType: !1655, size: 64, offset: 128)
!19443 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !19438, file: !13488, line: 268, baseType: !142, size: 8, offset: 192)
!19444 = !DILocalVariable(name: "name", arg: 1, scope: !19433, file: !19434, line: 33, type: !183)
!19445 = !DILocation(line: 33, column: 30, scope: !19433)
!19446 = !DILocalVariable(name: "desc", arg: 2, scope: !19433, file: !19434, line: 33, type: !7)
!19447 = !DILocation(line: 33, column: 40, scope: !19433)
!19448 = !DILocalVariable(name: "mode", arg: 3, scope: !19433, file: !19434, line: 33, type: !139)
!19449 = !DILocation(line: 33, column: 53, scope: !19433)
!19450 = !DILocalVariable(name: "ctx", arg: 4, scope: !19433, file: !19434, line: 34, type: !19437)
!19451 = !DILocation(line: 34, column: 45, scope: !19433)
!19452 = !DILocation(line: 36, column: 11, scope: !19433)
!19453 = !DILocation(line: 36, column: 3, scope: !19433)
!19454 = !DILocation(line: 37, column: 15, scope: !19433)
!19455 = !DILocation(line: 37, column: 3, scope: !19433)
!19456 = !DILocation(line: 37, column: 8, scope: !19433)
!19457 = !DILocation(line: 37, column: 13, scope: !19433)
!19458 = !DILocation(line: 45, column: 26, scope: !19459)
!19459 = distinct !DILexicalBlock(scope: !19433, file: !19434, line: 45, column: 7)
!19460 = !DILocation(line: 45, column: 31, scope: !19459)
!19461 = !DILocation(line: 45, column: 7, scope: !19433)
!19462 = !DILocation(line: 46, column: 28, scope: !19459)
!19463 = !DILocation(line: 46, column: 16, scope: !19459)
!19464 = !DILocation(line: 46, column: 5, scope: !19459)
!19465 = !DILocation(line: 46, column: 10, scope: !19459)
!19466 = !DILocation(line: 46, column: 14, scope: !19459)
!19467 = !DILocation(line: 48, column: 30, scope: !19459)
!19468 = !DILocation(line: 48, column: 16, scope: !19459)
!19469 = !DILocation(line: 48, column: 5, scope: !19459)
!19470 = !DILocation(line: 48, column: 10, scope: !19459)
!19471 = !DILocation(line: 48, column: 14, scope: !19459)
!19472 = !DILocation(line: 49, column: 7, scope: !19473)
!19473 = distinct !DILexicalBlock(scope: !19433, file: !19434, line: 49, column: 7)
!19474 = !DILocation(line: 49, column: 12, scope: !19473)
!19475 = !DILocation(line: 49, column: 16, scope: !19473)
!19476 = !DILocation(line: 49, column: 7, scope: !19433)
!19477 = !DILocation(line: 50, column: 29, scope: !19473)
!19478 = !DILocation(line: 50, column: 12, scope: !19473)
!19479 = !DILocation(line: 50, column: 5, scope: !19473)
!19480 = !DILocation(line: 56, column: 7, scope: !19481)
!19481 = distinct !DILexicalBlock(scope: !19433, file: !19434, line: 56, column: 7)
!19482 = !DILocation(line: 56, column: 7, scope: !19433)
!19483 = !DILocation(line: 58, column: 40, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19481, file: !19434, line: 57, column: 5)
!19485 = !DILocation(line: 58, column: 26, scope: !19484)
!19486 = !DILocation(line: 58, column: 7, scope: !19484)
!19487 = !DILocation(line: 58, column: 12, scope: !19484)
!19488 = !DILocation(line: 58, column: 24, scope: !19484)
!19489 = !DILocation(line: 59, column: 11, scope: !19490)
!19490 = distinct !DILexicalBlock(scope: !19484, file: !19434, line: 59, column: 11)
!19491 = !DILocation(line: 59, column: 16, scope: !19490)
!19492 = !DILocation(line: 59, column: 28, scope: !19490)
!19493 = !DILocation(line: 59, column: 11, scope: !19484)
!19494 = !DILocation(line: 60, column: 9, scope: !19490)
!19495 = !DILocation(line: 61, column: 5, scope: !19484)
!19496 = !DILocation(line: 289, column: 3, scope: !19433)
!19497 = !DILocation(line: 291, column: 1, scope: !19433)
!19498 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !19499, file: !19499, line: 760, type: !8883, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1661, retainedNodes: !298)
!19499 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19500 = !DILocalVariable(name: "name", arg: 1, scope: !19498, file: !19499, line: 760, type: !183)
!19501 = !DILocation(line: 760, column: 30, scope: !19498)
!19502 = !DILocalVariable(name: "desc", arg: 2, scope: !19498, file: !19499, line: 760, type: !7)
!19503 = !DILocation(line: 760, column: 40, scope: !19498)
!19504 = !DILocalVariable(name: "mode", arg: 3, scope: !19498, file: !19499, line: 760, type: !139)
!19505 = !DILocation(line: 760, column: 53, scope: !19498)
!19506 = !DILocation(line: 762, column: 22, scope: !19507)
!19507 = distinct !DILexicalBlock(scope: !19498, file: !19499, line: 762, column: 7)
!19508 = !DILocation(line: 762, column: 27, scope: !19507)
!19509 = !DILocation(line: 762, column: 7, scope: !19498)
!19510 = !DILocation(line: 763, column: 20, scope: !19507)
!19511 = !DILocation(line: 763, column: 26, scope: !19507)
!19512 = !DILocation(line: 763, column: 12, scope: !19507)
!19513 = !DILocation(line: 763, column: 5, scope: !19507)
!19514 = !DILocation(line: 765, column: 19, scope: !19507)
!19515 = !DILocation(line: 765, column: 25, scope: !19507)
!19516 = !DILocation(line: 765, column: 12, scope: !19507)
!19517 = !DILocation(line: 765, column: 5, scope: !19507)
!19518 = !DILocation(line: 766, column: 1, scope: !19498)
!19519 = distinct !DISubprogram(name: "set_permissions", scope: !19499, file: !19499, line: 776, type: !19520, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1661, retainedNodes: !298)
!19520 = !DISubroutineType(types: !19521)
!19521 = !{!7, !19522, !183, !7}
!19522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19523, size: 64)
!19523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !13488, line: 260, size: 256, elements: !19524)
!19524 = !{!19525, !19526, !19527, !19528}
!19525 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !19523, file: !13488, line: 261, baseType: !139, size: 32)
!19526 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !19523, file: !13488, line: 264, baseType: !1655, size: 64, offset: 64)
!19527 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !19523, file: !13488, line: 266, baseType: !1655, size: 64, offset: 128)
!19528 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !19523, file: !13488, line: 268, baseType: !142, size: 8, offset: 192)
!19529 = !DILocalVariable(name: "ctx", arg: 1, scope: !19519, file: !19499, line: 776, type: !19522)
!19530 = !DILocation(line: 776, column: 45, scope: !19519)
!19531 = !DILocalVariable(name: "name", arg: 2, scope: !19519, file: !19499, line: 776, type: !183)
!19532 = !DILocation(line: 776, column: 62, scope: !19519)
!19533 = !DILocalVariable(name: "desc", arg: 3, scope: !19519, file: !19499, line: 776, type: !7)
!19534 = !DILocation(line: 776, column: 72, scope: !19519)
!19535 = !DILocalVariable(name: "acls_set", scope: !19519, file: !19499, line: 778, type: !142)
!19536 = !DILocation(line: 778, column: 8, scope: !19519)
!19537 = !DILocalVariable(name: "early_chmod", scope: !19519, file: !19499, line: 779, type: !142)
!19538 = !DILocation(line: 779, column: 8, scope: !19519)
!19539 = !DILocalVariable(name: "must_chmod", scope: !19519, file: !19499, line: 780, type: !142)
!19540 = !DILocation(line: 780, column: 8, scope: !19519)
!19541 = !DILocalVariable(name: "ret", scope: !19519, file: !19499, line: 781, type: !7)
!19542 = !DILocation(line: 781, column: 7, scope: !19519)
!19543 = !DILocation(line: 796, column: 40, scope: !19519)
!19544 = !DILocation(line: 796, column: 45, scope: !19519)
!19545 = !DILocation(line: 796, column: 50, scope: !19519)
!19546 = !DILocation(line: 796, column: 36, scope: !19519)
!19547 = !DILocation(line: 796, column: 15, scope: !19519)
!19548 = !DILocation(line: 804, column: 7, scope: !19549)
!19549 = distinct !DILexicalBlock(scope: !19519, file: !19499, line: 804, column: 7)
!19550 = !DILocation(line: 804, column: 7, scope: !19519)
!19551 = !DILocation(line: 806, column: 30, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19549, file: !19499, line: 805, column: 5)
!19553 = !DILocation(line: 806, column: 36, scope: !19552)
!19554 = !DILocation(line: 806, column: 42, scope: !19552)
!19555 = !DILocation(line: 806, column: 47, scope: !19552)
!19556 = !DILocation(line: 806, column: 13, scope: !19552)
!19557 = !DILocation(line: 806, column: 11, scope: !19552)
!19558 = !DILocation(line: 807, column: 11, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19552, file: !19499, line: 807, column: 11)
!19560 = !DILocation(line: 807, column: 15, scope: !19559)
!19561 = !DILocation(line: 807, column: 11, scope: !19552)
!19562 = !DILocation(line: 808, column: 9, scope: !19559)
!19563 = !DILocation(line: 809, column: 5, scope: !19552)
!19564 = !DILocation(line: 812, column: 19, scope: !19519)
!19565 = !DILocation(line: 812, column: 24, scope: !19519)
!19566 = !DILocation(line: 812, column: 30, scope: !19519)
!19567 = !DILocation(line: 812, column: 9, scope: !19519)
!19568 = !DILocation(line: 812, column: 7, scope: !19519)
!19569 = !DILocation(line: 813, column: 9, scope: !19570)
!19570 = distinct !DILexicalBlock(scope: !19519, file: !19499, line: 813, column: 7)
!19571 = !DILocation(line: 813, column: 7, scope: !19519)
!19572 = !DILocalVariable(name: "saved_errno", scope: !19573, file: !19499, line: 815, type: !7)
!19573 = distinct !DILexicalBlock(scope: !19570, file: !19499, line: 814, column: 5)
!19574 = !DILocation(line: 815, column: 11, scope: !19573)
!19575 = !DILocation(line: 815, column: 25, scope: !19573)
!19576 = !DILocation(line: 815, column: 31, scope: !19573)
!19577 = !DILocation(line: 821, column: 23, scope: !19573)
!19578 = !DILocation(line: 821, column: 28, scope: !19573)
!19579 = !DILocation(line: 821, column: 34, scope: !19573)
!19580 = !DILocation(line: 821, column: 13, scope: !19573)
!19581 = !DILocation(line: 821, column: 11, scope: !19573)
!19582 = !DILocation(line: 822, column: 13, scope: !19583)
!19583 = distinct !DILexicalBlock(scope: !19573, file: !19499, line: 822, column: 11)
!19584 = !DILocation(line: 822, column: 11, scope: !19573)
!19585 = !DILocation(line: 823, column: 20, scope: !19583)
!19586 = !DILocation(line: 823, column: 9, scope: !19583)
!19587 = !DILocation(line: 825, column: 11, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19573, file: !19499, line: 825, column: 11)
!19589 = !DILocation(line: 825, column: 11, scope: !19573)
!19590 = !DILocation(line: 827, column: 19, scope: !19591)
!19591 = distinct !DILexicalBlock(scope: !19588, file: !19499, line: 826, column: 9)
!19592 = !DILocation(line: 827, column: 11, scope: !19591)
!19593 = !DILocation(line: 827, column: 17, scope: !19591)
!19594 = !DILocation(line: 828, column: 15, scope: !19591)
!19595 = !DILocation(line: 829, column: 9, scope: !19591)
!19596 = !DILocation(line: 830, column: 5, scope: !19573)
!19597 = !DILocation(line: 833, column: 7, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19519, file: !19499, line: 833, column: 7)
!19599 = !DILocation(line: 833, column: 18, scope: !19598)
!19600 = !DILocation(line: 833, column: 23, scope: !19598)
!19601 = !DILocation(line: 833, column: 7, scope: !19519)
!19602 = !DILocalVariable(name: "saved_errno", scope: !19603, file: !19499, line: 835, type: !7)
!19603 = distinct !DILexicalBlock(scope: !19598, file: !19499, line: 834, column: 5)
!19604 = !DILocation(line: 835, column: 11, scope: !19603)
!19605 = !DILocation(line: 835, column: 25, scope: !19603)
!19606 = !DILocation(line: 835, column: 31, scope: !19603)
!19607 = !DILocation(line: 837, column: 30, scope: !19603)
!19608 = !DILocation(line: 837, column: 36, scope: !19603)
!19609 = !DILocation(line: 837, column: 42, scope: !19603)
!19610 = !DILocation(line: 837, column: 47, scope: !19603)
!19611 = !DILocation(line: 837, column: 13, scope: !19603)
!19612 = !DILocation(line: 837, column: 11, scope: !19603)
!19613 = !DILocation(line: 839, column: 11, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19603, file: !19499, line: 839, column: 11)
!19615 = !DILocation(line: 839, column: 11, scope: !19603)
!19616 = !DILocation(line: 841, column: 19, scope: !19617)
!19617 = distinct !DILexicalBlock(scope: !19614, file: !19499, line: 840, column: 9)
!19618 = !DILocation(line: 841, column: 11, scope: !19617)
!19619 = !DILocation(line: 841, column: 17, scope: !19617)
!19620 = !DILocation(line: 842, column: 15, scope: !19617)
!19621 = !DILocation(line: 843, column: 9, scope: !19617)
!19622 = !DILocation(line: 844, column: 5, scope: !19603)
!19623 = !DILocation(line: 846, column: 10, scope: !19519)
!19624 = !DILocation(line: 846, column: 3, scope: !19519)
!19625 = !DILocation(line: 847, column: 1, scope: !19519)
!19626 = distinct !DISubprogram(name: "set_acls", scope: !19499, file: !19499, line: 485, type: !19627, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1661, retainedNodes: !298)
!19627 = !DISubroutineType(types: !19628)
!19628 = !{!7, !19522, !183, !7, !7, !3724, !3724}
!19629 = !DILocalVariable(name: "ctx", arg: 1, scope: !19626, file: !19499, line: 485, type: !19522)
!19630 = !DILocation(line: 485, column: 38, scope: !19626)
!19631 = !DILocalVariable(name: "name", arg: 2, scope: !19626, file: !19499, line: 485, type: !183)
!19632 = !DILocation(line: 485, column: 55, scope: !19626)
!19633 = !DILocalVariable(name: "desc", arg: 3, scope: !19626, file: !19499, line: 485, type: !7)
!19634 = !DILocation(line: 485, column: 65, scope: !19626)
!19635 = !DILocalVariable(name: "from_mode", arg: 4, scope: !19626, file: !19499, line: 486, type: !7)
!19636 = !DILocation(line: 486, column: 15, scope: !19626)
!19637 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !19626, file: !19499, line: 486, type: !3724)
!19638 = !DILocation(line: 486, column: 32, scope: !19626)
!19639 = !DILocalVariable(name: "acls_set", arg: 6, scope: !19626, file: !19499, line: 486, type: !3724)
!19640 = !DILocation(line: 486, column: 50, scope: !19626)
!19641 = !DILocalVariable(name: "ret", scope: !19626, file: !19499, line: 488, type: !7)
!19642 = !DILocation(line: 488, column: 7, scope: !19626)
!19643 = !DILocation(line: 503, column: 9, scope: !19644)
!19644 = distinct !DILexicalBlock(scope: !19626, file: !19499, line: 503, column: 7)
!19645 = !DILocation(line: 503, column: 14, scope: !19644)
!19646 = !DILocation(line: 503, column: 7, scope: !19626)
!19647 = !DILocation(line: 505, column: 11, scope: !19648)
!19648 = distinct !DILexicalBlock(scope: !19649, file: !19499, line: 505, column: 11)
!19649 = distinct !DILexicalBlock(scope: !19644, file: !19499, line: 504, column: 5)
!19650 = !DILocation(line: 505, column: 15, scope: !19648)
!19651 = !DILocation(line: 505, column: 20, scope: !19648)
!19652 = !DILocation(line: 505, column: 23, scope: !19648)
!19653 = !DILocation(line: 505, column: 11, scope: !19649)
!19654 = !DILocation(line: 507, column: 15, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19656, file: !19499, line: 507, column: 15)
!19656 = distinct !DILexicalBlock(scope: !19648, file: !19499, line: 506, column: 9)
!19657 = !DILocation(line: 507, column: 20, scope: !19655)
!19658 = !DILocation(line: 507, column: 15, scope: !19656)
!19659 = !DILocation(line: 508, column: 23, scope: !19655)
!19660 = !DILocation(line: 508, column: 28, scope: !19655)
!19661 = !DILocation(line: 508, column: 13, scope: !19655)
!19662 = !DILocation(line: 509, column: 37, scope: !19656)
!19663 = !DILocation(line: 509, column: 42, scope: !19656)
!19664 = !DILocation(line: 509, column: 22, scope: !19656)
!19665 = !DILocation(line: 509, column: 11, scope: !19656)
!19666 = !DILocation(line: 509, column: 16, scope: !19656)
!19667 = !DILocation(line: 509, column: 20, scope: !19656)
!19668 = !DILocation(line: 510, column: 15, scope: !19669)
!19669 = distinct !DILexicalBlock(scope: !19656, file: !19499, line: 510, column: 15)
!19670 = !DILocation(line: 510, column: 20, scope: !19669)
!19671 = !DILocation(line: 510, column: 24, scope: !19669)
!19672 = !DILocation(line: 510, column: 15, scope: !19656)
!19673 = !DILocation(line: 511, column: 17, scope: !19669)
!19674 = !DILocation(line: 511, column: 13, scope: !19669)
!19675 = !DILocation(line: 512, column: 9, scope: !19656)
!19676 = !DILocation(line: 514, column: 11, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19649, file: !19499, line: 514, column: 11)
!19678 = !DILocation(line: 514, column: 15, scope: !19677)
!19679 = !DILocation(line: 514, column: 20, scope: !19677)
!19680 = !DILocation(line: 514, column: 23, scope: !19677)
!19681 = !DILocation(line: 514, column: 28, scope: !19677)
!19682 = !DILocation(line: 514, column: 11, scope: !19649)
!19683 = !DILocation(line: 516, column: 34, scope: !19684)
!19684 = distinct !DILexicalBlock(scope: !19685, file: !19499, line: 516, column: 15)
!19685 = distinct !DILexicalBlock(scope: !19677, file: !19499, line: 515, column: 9)
!19686 = !DILocation(line: 516, column: 39, scope: !19684)
!19687 = !DILocation(line: 516, column: 15, scope: !19685)
!19688 = !DILocation(line: 517, column: 31, scope: !19684)
!19689 = !DILocation(line: 517, column: 37, scope: !19684)
!19690 = !DILocation(line: 517, column: 42, scope: !19684)
!19691 = !DILocation(line: 517, column: 19, scope: !19684)
!19692 = !DILocation(line: 517, column: 17, scope: !19684)
!19693 = !DILocation(line: 517, column: 13, scope: !19684)
!19694 = !DILocation(line: 519, column: 33, scope: !19684)
!19695 = !DILocation(line: 519, column: 56, scope: !19684)
!19696 = !DILocation(line: 519, column: 61, scope: !19684)
!19697 = !DILocation(line: 519, column: 19, scope: !19684)
!19698 = !DILocation(line: 519, column: 17, scope: !19684)
!19699 = !DILocation(line: 520, column: 15, scope: !19700)
!19700 = distinct !DILexicalBlock(scope: !19685, file: !19499, line: 520, column: 15)
!19701 = !DILocation(line: 520, column: 19, scope: !19700)
!19702 = !DILocation(line: 520, column: 15, scope: !19685)
!19703 = !DILocation(line: 522, column: 38, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19705, file: !19499, line: 522, column: 19)
!19705 = distinct !DILexicalBlock(scope: !19700, file: !19499, line: 521, column: 13)
!19706 = !DILocation(line: 522, column: 21, scope: !19704)
!19707 = !DILocation(line: 522, column: 19, scope: !19705)
!19708 = !DILocation(line: 524, column: 19, scope: !19709)
!19709 = distinct !DILexicalBlock(scope: !19704, file: !19499, line: 523, column: 17)
!19710 = !DILocation(line: 524, column: 24, scope: !19709)
!19711 = !DILocation(line: 524, column: 43, scope: !19709)
!19712 = !DILocation(line: 525, column: 23, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19709, file: !19499, line: 525, column: 23)
!19714 = !DILocation(line: 525, column: 33, scope: !19713)
!19715 = !DILocation(line: 525, column: 59, scope: !19713)
!19716 = !DILocation(line: 525, column: 64, scope: !19713)
!19717 = !DILocation(line: 525, column: 36, scope: !19713)
!19718 = !DILocation(line: 525, column: 69, scope: !19713)
!19719 = !DILocation(line: 525, column: 23, scope: !19709)
!19720 = !DILocation(line: 526, column: 25, scope: !19713)
!19721 = !DILocation(line: 526, column: 21, scope: !19713)
!19722 = !DILocation(line: 527, column: 17, scope: !19709)
!19723 = !DILocation(line: 528, column: 13, scope: !19705)
!19724 = !DILocation(line: 531, column: 16, scope: !19725)
!19725 = distinct !DILexicalBlock(scope: !19700, file: !19499, line: 530, column: 13)
!19726 = !DILocation(line: 531, column: 25, scope: !19725)
!19727 = !DILocation(line: 532, column: 19, scope: !19728)
!19728 = distinct !DILexicalBlock(scope: !19725, file: !19499, line: 532, column: 19)
!19729 = !DILocation(line: 532, column: 19, scope: !19725)
!19730 = !DILocation(line: 534, column: 25, scope: !19731)
!19731 = distinct !DILexicalBlock(scope: !19732, file: !19499, line: 534, column: 23)
!19732 = distinct !DILexicalBlock(scope: !19728, file: !19499, line: 533, column: 17)
!19733 = !DILocation(line: 534, column: 35, scope: !19731)
!19734 = !DILocation(line: 534, column: 38, scope: !19731)
!19735 = !DILocation(line: 534, column: 43, scope: !19731)
!19736 = !DILocation(line: 534, column: 55, scope: !19731)
!19737 = !DILocation(line: 535, column: 47, scope: !19731)
!19738 = !DILocation(line: 535, column: 52, scope: !19731)
!19739 = !DILocation(line: 535, column: 23, scope: !19731)
!19740 = !DILocation(line: 534, column: 23, scope: !19732)
!19741 = !DILocation(line: 536, column: 41, scope: !19731)
!19742 = !DILocation(line: 537, column: 41, scope: !19731)
!19743 = !DILocation(line: 537, column: 46, scope: !19731)
!19744 = !DILocation(line: 536, column: 27, scope: !19731)
!19745 = !DILocation(line: 536, column: 25, scope: !19731)
!19746 = !DILocation(line: 536, column: 21, scope: !19731)
!19747 = !DILocation(line: 539, column: 48, scope: !19731)
!19748 = !DILocation(line: 539, column: 27, scope: !19731)
!19749 = !DILocation(line: 539, column: 25, scope: !19731)
!19750 = !DILocation(line: 540, column: 17, scope: !19732)
!19751 = !DILocation(line: 542, column: 9, scope: !19685)
!19752 = !DILocation(line: 543, column: 5, scope: !19649)
!19753 = !DILocation(line: 749, column: 10, scope: !19626)
!19754 = !DILocation(line: 749, column: 3, scope: !19626)
!19755 = distinct !DISubprogram(name: "__argmatch_die", scope: !1151, file: !1151, line: 62, type: !692, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19756 = !DILocation(line: 64, column: 3, scope: !19755)
!19757 = !DILocation(line: 65, column: 1, scope: !19755)
!19758 = distinct !DISubprogram(name: "argmatch", scope: !1151, file: !1151, line: 84, type: !19759, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19759 = !DISubroutineType(types: !19760)
!19760 = !{!627, !183, !1115, !183, !55}
!19761 = !DILocalVariable(name: "arg", arg: 1, scope: !19758, file: !1151, line: 84, type: !183)
!19762 = !DILocation(line: 84, column: 23, scope: !19758)
!19763 = !DILocalVariable(name: "arglist", arg: 2, scope: !19758, file: !1151, line: 84, type: !1115)
!19764 = !DILocation(line: 84, column: 47, scope: !19758)
!19765 = !DILocalVariable(name: "vallist", arg: 3, scope: !19758, file: !1151, line: 85, type: !183)
!19766 = !DILocation(line: 85, column: 23, scope: !19758)
!19767 = !DILocalVariable(name: "valsize", arg: 4, scope: !19758, file: !1151, line: 85, type: !55)
!19768 = !DILocation(line: 85, column: 39, scope: !19758)
!19769 = !DILocalVariable(name: "i", scope: !19758, file: !1151, line: 87, type: !55)
!19770 = !DILocation(line: 87, column: 10, scope: !19758)
!19771 = !DILocalVariable(name: "arglen", scope: !19758, file: !1151, line: 88, type: !55)
!19772 = !DILocation(line: 88, column: 10, scope: !19758)
!19773 = !DILocalVariable(name: "matchind", scope: !19758, file: !1151, line: 89, type: !627)
!19774 = !DILocation(line: 89, column: 13, scope: !19758)
!19775 = !DILocalVariable(name: "ambiguous", scope: !19758, file: !1151, line: 90, type: !142)
!19776 = !DILocation(line: 90, column: 8, scope: !19758)
!19777 = !DILocation(line: 92, column: 20, scope: !19758)
!19778 = !DILocation(line: 92, column: 12, scope: !19758)
!19779 = !DILocation(line: 92, column: 10, scope: !19758)
!19780 = !DILocation(line: 95, column: 10, scope: !19781)
!19781 = distinct !DILexicalBlock(scope: !19758, file: !1151, line: 95, column: 3)
!19782 = !DILocation(line: 95, column: 8, scope: !19781)
!19783 = !DILocation(line: 95, column: 15, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19781, file: !1151, line: 95, column: 3)
!19785 = !DILocation(line: 95, column: 23, scope: !19784)
!19786 = !DILocation(line: 95, column: 3, scope: !19781)
!19787 = !DILocation(line: 97, column: 21, scope: !19788)
!19788 = distinct !DILexicalBlock(scope: !19789, file: !1151, line: 97, column: 11)
!19789 = distinct !DILexicalBlock(scope: !19784, file: !1151, line: 96, column: 5)
!19790 = !DILocation(line: 97, column: 29, scope: !19788)
!19791 = !DILocation(line: 97, column: 33, scope: !19788)
!19792 = !DILocation(line: 97, column: 38, scope: !19788)
!19793 = !DILocation(line: 97, column: 12, scope: !19788)
!19794 = !DILocation(line: 97, column: 11, scope: !19789)
!19795 = !DILocation(line: 99, column: 23, scope: !19796)
!19796 = distinct !DILexicalBlock(scope: !19797, file: !1151, line: 99, column: 15)
!19797 = distinct !DILexicalBlock(scope: !19788, file: !1151, line: 98, column: 9)
!19798 = !DILocation(line: 99, column: 31, scope: !19796)
!19799 = !DILocation(line: 99, column: 15, scope: !19796)
!19800 = !DILocation(line: 99, column: 38, scope: !19796)
!19801 = !DILocation(line: 99, column: 35, scope: !19796)
!19802 = !DILocation(line: 99, column: 15, scope: !19797)
!19803 = !DILocation(line: 101, column: 20, scope: !19796)
!19804 = !DILocation(line: 101, column: 13, scope: !19796)
!19805 = !DILocation(line: 102, column: 20, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19796, file: !1151, line: 102, column: 20)
!19807 = !DILocation(line: 102, column: 29, scope: !19806)
!19808 = !DILocation(line: 102, column: 20, scope: !19796)
!19809 = !DILocation(line: 104, column: 24, scope: !19806)
!19810 = !DILocation(line: 104, column: 22, scope: !19806)
!19811 = !DILocation(line: 104, column: 13, scope: !19806)
!19812 = !DILocation(line: 108, column: 19, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19814, file: !1151, line: 108, column: 19)
!19814 = distinct !DILexicalBlock(scope: !19806, file: !1151, line: 106, column: 13)
!19815 = !DILocation(line: 108, column: 27, scope: !19813)
!19816 = !DILocation(line: 109, column: 19, scope: !19813)
!19817 = !DILocation(line: 109, column: 30, scope: !19813)
!19818 = !DILocation(line: 109, column: 40, scope: !19813)
!19819 = !DILocation(line: 109, column: 50, scope: !19813)
!19820 = !DILocation(line: 109, column: 48, scope: !19813)
!19821 = !DILocation(line: 109, column: 38, scope: !19813)
!19822 = !DILocation(line: 110, column: 30, scope: !19813)
!19823 = !DILocation(line: 110, column: 40, scope: !19813)
!19824 = !DILocation(line: 110, column: 50, scope: !19813)
!19825 = !DILocation(line: 110, column: 48, scope: !19813)
!19826 = !DILocation(line: 110, column: 38, scope: !19813)
!19827 = !DILocation(line: 110, column: 53, scope: !19813)
!19828 = !DILocation(line: 109, column: 22, scope: !19813)
!19829 = !DILocation(line: 108, column: 19, scope: !19814)
!19830 = !DILocation(line: 114, column: 29, scope: !19831)
!19831 = distinct !DILexicalBlock(scope: !19813, file: !1151, line: 111, column: 17)
!19832 = !DILocation(line: 115, column: 17, scope: !19831)
!19833 = !DILocation(line: 117, column: 9, scope: !19797)
!19834 = !DILocation(line: 118, column: 5, scope: !19789)
!19835 = !DILocation(line: 95, column: 28, scope: !19784)
!19836 = !DILocation(line: 95, column: 3, scope: !19784)
!19837 = distinct !{!19837, !19786, !19838}
!19838 = !DILocation(line: 118, column: 5, scope: !19781)
!19839 = !DILocation(line: 119, column: 7, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19758, file: !1151, line: 119, column: 7)
!19841 = !DILocation(line: 119, column: 7, scope: !19758)
!19842 = !DILocation(line: 120, column: 5, scope: !19840)
!19843 = !DILocation(line: 122, column: 12, scope: !19840)
!19844 = !DILocation(line: 122, column: 5, scope: !19840)
!19845 = !DILocation(line: 123, column: 1, scope: !19758)
!19846 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1151, file: !1151, line: 131, type: !19847, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19847 = !DISubroutineType(types: !19848)
!19848 = !{null, !183, !183, !627}
!19849 = !DILocalVariable(name: "context", arg: 1, scope: !19846, file: !1151, line: 131, type: !183)
!19850 = !DILocation(line: 131, column: 31, scope: !19846)
!19851 = !DILocalVariable(name: "value", arg: 2, scope: !19846, file: !1151, line: 131, type: !183)
!19852 = !DILocation(line: 131, column: 52, scope: !19846)
!19853 = !DILocalVariable(name: "problem", arg: 3, scope: !19846, file: !1151, line: 131, type: !627)
!19854 = !DILocation(line: 131, column: 69, scope: !19846)
!19855 = !DILocalVariable(name: "format", scope: !19846, file: !1151, line: 133, type: !183)
!19856 = !DILocation(line: 133, column: 15, scope: !19846)
!19857 = !DILocation(line: 133, column: 25, scope: !19846)
!19858 = !DILocation(line: 133, column: 33, scope: !19846)
!19859 = !DILocation(line: 134, column: 27, scope: !19846)
!19860 = !DILocation(line: 135, column: 27, scope: !19846)
!19861 = !DILocation(line: 137, column: 16, scope: !19846)
!19862 = !DILocation(line: 137, column: 69, scope: !19846)
!19863 = !DILocation(line: 137, column: 24, scope: !19846)
!19864 = !DILocation(line: 138, column: 22, scope: !19846)
!19865 = !DILocation(line: 138, column: 10, scope: !19846)
!19866 = !DILocation(line: 137, column: 3, scope: !19846)
!19867 = !DILocation(line: 139, column: 1, scope: !19846)
!19868 = distinct !DISubprogram(name: "argmatch_valid", scope: !1151, file: !1151, line: 146, type: !19869, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19869 = !DISubroutineType(types: !19870)
!19870 = !{null, !1115, !183, !55}
!19871 = !DILocalVariable(name: "arglist", arg: 1, scope: !19868, file: !1151, line: 146, type: !1115)
!19872 = !DILocation(line: 146, column: 36, scope: !19868)
!19873 = !DILocalVariable(name: "vallist", arg: 2, scope: !19868, file: !1151, line: 147, type: !183)
!19874 = !DILocation(line: 147, column: 29, scope: !19868)
!19875 = !DILocalVariable(name: "valsize", arg: 3, scope: !19868, file: !1151, line: 147, type: !55)
!19876 = !DILocation(line: 147, column: 45, scope: !19868)
!19877 = !DILocalVariable(name: "i", scope: !19868, file: !1151, line: 149, type: !55)
!19878 = !DILocation(line: 149, column: 10, scope: !19868)
!19879 = !DILocalVariable(name: "last_val", scope: !19868, file: !1151, line: 150, type: !183)
!19880 = !DILocation(line: 150, column: 15, scope: !19868)
!19881 = !DILocation(line: 154, column: 3, scope: !19868)
!19882 = !DILocation(line: 155, column: 10, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19868, file: !1151, line: 155, column: 3)
!19884 = !DILocation(line: 155, column: 8, scope: !19883)
!19885 = !DILocation(line: 155, column: 15, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19883, file: !1151, line: 155, column: 3)
!19887 = !DILocation(line: 155, column: 23, scope: !19886)
!19888 = !DILocation(line: 155, column: 3, scope: !19883)
!19889 = !DILocation(line: 156, column: 10, scope: !19890)
!19890 = distinct !DILexicalBlock(scope: !19886, file: !1151, line: 156, column: 9)
!19891 = !DILocation(line: 156, column: 12, scope: !19890)
!19892 = !DILocation(line: 157, column: 9, scope: !19890)
!19893 = !DILocation(line: 157, column: 20, scope: !19890)
!19894 = !DILocation(line: 157, column: 30, scope: !19890)
!19895 = !DILocation(line: 157, column: 40, scope: !19890)
!19896 = !DILocation(line: 157, column: 50, scope: !19890)
!19897 = !DILocation(line: 157, column: 48, scope: !19890)
!19898 = !DILocation(line: 157, column: 38, scope: !19890)
!19899 = !DILocation(line: 157, column: 53, scope: !19890)
!19900 = !DILocation(line: 157, column: 12, scope: !19890)
!19901 = !DILocation(line: 156, column: 9, scope: !19886)
!19902 = !DILocation(line: 159, column: 18, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19890, file: !1151, line: 158, column: 7)
!19904 = !DILocation(line: 159, column: 45, scope: !19903)
!19905 = !DILocation(line: 159, column: 53, scope: !19903)
!19906 = !DILocation(line: 159, column: 38, scope: !19903)
!19907 = !DILocation(line: 159, column: 9, scope: !19903)
!19908 = !DILocation(line: 160, column: 20, scope: !19903)
!19909 = !DILocation(line: 160, column: 30, scope: !19903)
!19910 = !DILocation(line: 160, column: 40, scope: !19903)
!19911 = !DILocation(line: 160, column: 38, scope: !19903)
!19912 = !DILocation(line: 160, column: 28, scope: !19903)
!19913 = !DILocation(line: 160, column: 18, scope: !19903)
!19914 = !DILocation(line: 161, column: 7, scope: !19903)
!19915 = !DILocation(line: 164, column: 18, scope: !19916)
!19916 = distinct !DILexicalBlock(scope: !19890, file: !1151, line: 163, column: 7)
!19917 = !DILocation(line: 164, column: 41, scope: !19916)
!19918 = !DILocation(line: 164, column: 49, scope: !19916)
!19919 = !DILocation(line: 164, column: 34, scope: !19916)
!19920 = !DILocation(line: 164, column: 9, scope: !19916)
!19921 = !DILocation(line: 157, column: 60, scope: !19890)
!19922 = !DILocation(line: 155, column: 28, scope: !19886)
!19923 = !DILocation(line: 155, column: 3, scope: !19886)
!19924 = distinct !{!19924, !19888, !19925}
!19925 = !DILocation(line: 165, column: 7, scope: !19883)
!19926 = !DILocation(line: 166, column: 3, scope: !19868)
!19927 = !DILocation(line: 167, column: 1, scope: !19868)
!19928 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1151, file: !1151, line: 176, type: !19929, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19929 = !DISubroutineType(types: !19930)
!19930 = !{!627, !183, !183, !1115, !183, !55, !689}
!19931 = !DILocalVariable(name: "context", arg: 1, scope: !19928, file: !1151, line: 176, type: !183)
!19932 = !DILocation(line: 176, column: 35, scope: !19928)
!19933 = !DILocalVariable(name: "arg", arg: 2, scope: !19928, file: !1151, line: 177, type: !183)
!19934 = !DILocation(line: 177, column: 35, scope: !19928)
!19935 = !DILocalVariable(name: "arglist", arg: 3, scope: !19928, file: !1151, line: 177, type: !1115)
!19936 = !DILocation(line: 177, column: 59, scope: !19928)
!19937 = !DILocalVariable(name: "vallist", arg: 4, scope: !19928, file: !1151, line: 178, type: !183)
!19938 = !DILocation(line: 178, column: 35, scope: !19928)
!19939 = !DILocalVariable(name: "valsize", arg: 5, scope: !19928, file: !1151, line: 178, type: !55)
!19940 = !DILocation(line: 178, column: 51, scope: !19928)
!19941 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !19928, file: !1151, line: 179, type: !689)
!19942 = !DILocation(line: 179, column: 40, scope: !19928)
!19943 = !DILocalVariable(name: "res", scope: !19928, file: !1151, line: 181, type: !627)
!19944 = !DILocation(line: 181, column: 13, scope: !19928)
!19945 = !DILocation(line: 181, column: 29, scope: !19928)
!19946 = !DILocation(line: 181, column: 34, scope: !19928)
!19947 = !DILocation(line: 181, column: 43, scope: !19928)
!19948 = !DILocation(line: 181, column: 52, scope: !19928)
!19949 = !DILocation(line: 181, column: 19, scope: !19928)
!19950 = !DILocation(line: 182, column: 7, scope: !19951)
!19951 = distinct !DILexicalBlock(scope: !19928, file: !1151, line: 182, column: 7)
!19952 = !DILocation(line: 182, column: 11, scope: !19951)
!19953 = !DILocation(line: 182, column: 7, scope: !19928)
!19954 = !DILocation(line: 184, column: 12, scope: !19951)
!19955 = !DILocation(line: 184, column: 5, scope: !19951)
!19956 = !DILocation(line: 187, column: 21, scope: !19928)
!19957 = !DILocation(line: 187, column: 30, scope: !19928)
!19958 = !DILocation(line: 187, column: 35, scope: !19928)
!19959 = !DILocation(line: 187, column: 3, scope: !19928)
!19960 = !DILocation(line: 188, column: 19, scope: !19928)
!19961 = !DILocation(line: 188, column: 28, scope: !19928)
!19962 = !DILocation(line: 188, column: 37, scope: !19928)
!19963 = !DILocation(line: 188, column: 3, scope: !19928)
!19964 = !DILocation(line: 189, column: 5, scope: !19928)
!19965 = !DILocation(line: 189, column: 3, scope: !19928)
!19966 = !DILocation(line: 191, column: 3, scope: !19928)
!19967 = !DILocation(line: 192, column: 1, scope: !19928)
!19968 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1151, file: !1151, line: 197, type: !19969, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1112, retainedNodes: !298)
!19969 = !DISubroutineType(types: !19970)
!19970 = !{!183, !183, !1115, !183, !55}
!19971 = !DILocalVariable(name: "value", arg: 1, scope: !19968, file: !1151, line: 197, type: !183)
!19972 = !DILocation(line: 197, column: 35, scope: !19968)
!19973 = !DILocalVariable(name: "arglist", arg: 2, scope: !19968, file: !1151, line: 198, type: !1115)
!19974 = !DILocation(line: 198, column: 42, scope: !19968)
!19975 = !DILocalVariable(name: "vallist", arg: 3, scope: !19968, file: !1151, line: 199, type: !183)
!19976 = !DILocation(line: 199, column: 35, scope: !19968)
!19977 = !DILocalVariable(name: "valsize", arg: 4, scope: !19968, file: !1151, line: 199, type: !55)
!19978 = !DILocation(line: 199, column: 51, scope: !19968)
!19979 = !DILocalVariable(name: "i", scope: !19968, file: !1151, line: 201, type: !55)
!19980 = !DILocation(line: 201, column: 10, scope: !19968)
!19981 = !DILocation(line: 203, column: 10, scope: !19982)
!19982 = distinct !DILexicalBlock(scope: !19968, file: !1151, line: 203, column: 3)
!19983 = !DILocation(line: 203, column: 8, scope: !19982)
!19984 = !DILocation(line: 203, column: 15, scope: !19985)
!19985 = distinct !DILexicalBlock(scope: !19982, file: !1151, line: 203, column: 3)
!19986 = !DILocation(line: 203, column: 23, scope: !19985)
!19987 = !DILocation(line: 203, column: 3, scope: !19982)
!19988 = !DILocation(line: 204, column: 18, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19985, file: !1151, line: 204, column: 9)
!19990 = !DILocation(line: 204, column: 25, scope: !19989)
!19991 = !DILocation(line: 204, column: 35, scope: !19989)
!19992 = !DILocation(line: 204, column: 45, scope: !19989)
!19993 = !DILocation(line: 204, column: 43, scope: !19989)
!19994 = !DILocation(line: 204, column: 33, scope: !19989)
!19995 = !DILocation(line: 204, column: 48, scope: !19989)
!19996 = !DILocation(line: 204, column: 10, scope: !19989)
!19997 = !DILocation(line: 204, column: 9, scope: !19985)
!19998 = !DILocation(line: 205, column: 14, scope: !19989)
!19999 = !DILocation(line: 205, column: 22, scope: !19989)
!20000 = !DILocation(line: 205, column: 7, scope: !19989)
!20001 = !DILocation(line: 204, column: 55, scope: !19989)
!20002 = !DILocation(line: 203, column: 28, scope: !19985)
!20003 = !DILocation(line: 203, column: 3, scope: !19985)
!20004 = distinct !{!20004, !19987, !20005}
!20005 = !DILocation(line: 205, column: 23, scope: !19982)
!20006 = !DILocation(line: 206, column: 3, scope: !19968)
!20007 = !DILocation(line: 207, column: 1, scope: !19968)
!20008 = distinct !DISubprogram(name: "rotl64", scope: !20009, file: !20009, line: 39, type: !20010, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20009 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!20010 = !DISubroutineType(types: !20011)
!20011 = !{!1199, !1199, !7}
!20012 = !DILocalVariable(name: "x", arg: 1, scope: !20008, file: !20009, line: 39, type: !1199)
!20013 = !DILocation(line: 39, column: 18, scope: !20008)
!20014 = !DILocalVariable(name: "n", arg: 2, scope: !20008, file: !20009, line: 39, type: !7)
!20015 = !DILocation(line: 39, column: 25, scope: !20008)
!20016 = !DILocation(line: 41, column: 12, scope: !20008)
!20017 = !DILocation(line: 41, column: 17, scope: !20008)
!20018 = !DILocation(line: 41, column: 14, scope: !20008)
!20019 = !DILocation(line: 41, column: 23, scope: !20008)
!20020 = !DILocation(line: 41, column: 34, scope: !20008)
!20021 = !DILocation(line: 41, column: 32, scope: !20008)
!20022 = !DILocation(line: 41, column: 25, scope: !20008)
!20023 = !DILocation(line: 41, column: 20, scope: !20008)
!20024 = !DILocation(line: 41, column: 3, scope: !20008)
!20025 = distinct !DISubprogram(name: "rotr64", scope: !20009, file: !20009, line: 48, type: !20010, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20026 = !DILocalVariable(name: "x", arg: 1, scope: !20025, file: !20009, line: 48, type: !1199)
!20027 = !DILocation(line: 48, column: 18, scope: !20025)
!20028 = !DILocalVariable(name: "n", arg: 2, scope: !20025, file: !20009, line: 48, type: !7)
!20029 = !DILocation(line: 48, column: 25, scope: !20025)
!20030 = !DILocation(line: 50, column: 12, scope: !20025)
!20031 = !DILocation(line: 50, column: 17, scope: !20025)
!20032 = !DILocation(line: 50, column: 14, scope: !20025)
!20033 = !DILocation(line: 50, column: 23, scope: !20025)
!20034 = !DILocation(line: 50, column: 34, scope: !20025)
!20035 = !DILocation(line: 50, column: 32, scope: !20025)
!20036 = !DILocation(line: 50, column: 25, scope: !20025)
!20037 = !DILocation(line: 50, column: 20, scope: !20025)
!20038 = !DILocation(line: 50, column: 3, scope: !20025)
!20039 = distinct !DISubprogram(name: "rotl32", scope: !20009, file: !20009, line: 58, type: !20040, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20040 = !DISubroutineType(types: !20041)
!20041 = !{!1204, !1204, !7}
!20042 = !DILocalVariable(name: "x", arg: 1, scope: !20039, file: !20009, line: 58, type: !1204)
!20043 = !DILocation(line: 58, column: 18, scope: !20039)
!20044 = !DILocalVariable(name: "n", arg: 2, scope: !20039, file: !20009, line: 58, type: !7)
!20045 = !DILocation(line: 58, column: 25, scope: !20039)
!20046 = !DILocation(line: 60, column: 12, scope: !20039)
!20047 = !DILocation(line: 60, column: 17, scope: !20039)
!20048 = !DILocation(line: 60, column: 14, scope: !20039)
!20049 = !DILocation(line: 60, column: 23, scope: !20039)
!20050 = !DILocation(line: 60, column: 34, scope: !20039)
!20051 = !DILocation(line: 60, column: 32, scope: !20039)
!20052 = !DILocation(line: 60, column: 25, scope: !20039)
!20053 = !DILocation(line: 60, column: 20, scope: !20039)
!20054 = !DILocation(line: 60, column: 3, scope: !20039)
!20055 = distinct !DISubprogram(name: "rotr32", scope: !20009, file: !20009, line: 67, type: !20040, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20056 = !DILocalVariable(name: "x", arg: 1, scope: !20055, file: !20009, line: 67, type: !1204)
!20057 = !DILocation(line: 67, column: 18, scope: !20055)
!20058 = !DILocalVariable(name: "n", arg: 2, scope: !20055, file: !20009, line: 67, type: !7)
!20059 = !DILocation(line: 67, column: 25, scope: !20055)
!20060 = !DILocation(line: 69, column: 12, scope: !20055)
!20061 = !DILocation(line: 69, column: 17, scope: !20055)
!20062 = !DILocation(line: 69, column: 14, scope: !20055)
!20063 = !DILocation(line: 69, column: 23, scope: !20055)
!20064 = !DILocation(line: 69, column: 34, scope: !20055)
!20065 = !DILocation(line: 69, column: 32, scope: !20055)
!20066 = !DILocation(line: 69, column: 25, scope: !20055)
!20067 = !DILocation(line: 69, column: 20, scope: !20055)
!20068 = !DILocation(line: 69, column: 3, scope: !20055)
!20069 = distinct !DISubprogram(name: "rotl_sz", scope: !20009, file: !20009, line: 76, type: !20070, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20070 = !DISubroutineType(types: !20071)
!20071 = !{!55, !55, !7}
!20072 = !DILocalVariable(name: "x", arg: 1, scope: !20069, file: !20009, line: 76, type: !55)
!20073 = !DILocation(line: 76, column: 17, scope: !20069)
!20074 = !DILocalVariable(name: "n", arg: 2, scope: !20069, file: !20009, line: 76, type: !7)
!20075 = !DILocation(line: 76, column: 24, scope: !20069)
!20076 = !DILocation(line: 78, column: 12, scope: !20069)
!20077 = !DILocation(line: 78, column: 17, scope: !20069)
!20078 = !DILocation(line: 78, column: 14, scope: !20069)
!20079 = !DILocation(line: 78, column: 23, scope: !20069)
!20080 = !DILocation(line: 78, column: 53, scope: !20069)
!20081 = !DILocation(line: 78, column: 51, scope: !20069)
!20082 = !DILocation(line: 78, column: 25, scope: !20069)
!20083 = !DILocation(line: 78, column: 20, scope: !20069)
!20084 = !DILocation(line: 78, column: 3, scope: !20069)
!20085 = distinct !DISubprogram(name: "rotr_sz", scope: !20009, file: !20009, line: 85, type: !20070, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20086 = !DILocalVariable(name: "x", arg: 1, scope: !20085, file: !20009, line: 85, type: !55)
!20087 = !DILocation(line: 85, column: 17, scope: !20085)
!20088 = !DILocalVariable(name: "n", arg: 2, scope: !20085, file: !20009, line: 85, type: !7)
!20089 = !DILocation(line: 85, column: 24, scope: !20085)
!20090 = !DILocation(line: 87, column: 12, scope: !20085)
!20091 = !DILocation(line: 87, column: 17, scope: !20085)
!20092 = !DILocation(line: 87, column: 14, scope: !20085)
!20093 = !DILocation(line: 87, column: 23, scope: !20085)
!20094 = !DILocation(line: 87, column: 53, scope: !20085)
!20095 = !DILocation(line: 87, column: 51, scope: !20085)
!20096 = !DILocation(line: 87, column: 25, scope: !20085)
!20097 = !DILocation(line: 87, column: 20, scope: !20085)
!20098 = !DILocation(line: 87, column: 3, scope: !20085)
!20099 = distinct !DISubprogram(name: "rotl16", scope: !20009, file: !20009, line: 96, type: !20100, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20100 = !DISubroutineType(types: !20101)
!20101 = !{!20102, !20102, !7}
!20102 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1200, line: 25, baseType: !20103)
!20103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!20104 = !DILocalVariable(name: "x", arg: 1, scope: !20099, file: !20009, line: 96, type: !20102)
!20105 = !DILocation(line: 96, column: 18, scope: !20099)
!20106 = !DILocalVariable(name: "n", arg: 2, scope: !20099, file: !20009, line: 96, type: !7)
!20107 = !DILocation(line: 96, column: 25, scope: !20099)
!20108 = !DILocation(line: 98, column: 12, scope: !20099)
!20109 = !DILocation(line: 98, column: 17, scope: !20099)
!20110 = !DILocation(line: 98, column: 14, scope: !20099)
!20111 = !DILocation(line: 98, column: 23, scope: !20099)
!20112 = !DILocation(line: 98, column: 34, scope: !20099)
!20113 = !DILocation(line: 98, column: 32, scope: !20099)
!20114 = !DILocation(line: 98, column: 25, scope: !20099)
!20115 = !DILocation(line: 98, column: 20, scope: !20099)
!20116 = !DILocation(line: 98, column: 39, scope: !20099)
!20117 = !DILocation(line: 98, column: 10, scope: !20099)
!20118 = !DILocation(line: 98, column: 3, scope: !20099)
!20119 = distinct !DISubprogram(name: "rotr16", scope: !20009, file: !20009, line: 107, type: !20100, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20120 = !DILocalVariable(name: "x", arg: 1, scope: !20119, file: !20009, line: 107, type: !20102)
!20121 = !DILocation(line: 107, column: 18, scope: !20119)
!20122 = !DILocalVariable(name: "n", arg: 2, scope: !20119, file: !20009, line: 107, type: !7)
!20123 = !DILocation(line: 107, column: 25, scope: !20119)
!20124 = !DILocation(line: 109, column: 12, scope: !20119)
!20125 = !DILocation(line: 109, column: 17, scope: !20119)
!20126 = !DILocation(line: 109, column: 14, scope: !20119)
!20127 = !DILocation(line: 109, column: 23, scope: !20119)
!20128 = !DILocation(line: 109, column: 34, scope: !20119)
!20129 = !DILocation(line: 109, column: 32, scope: !20119)
!20130 = !DILocation(line: 109, column: 25, scope: !20119)
!20131 = !DILocation(line: 109, column: 20, scope: !20119)
!20132 = !DILocation(line: 109, column: 39, scope: !20119)
!20133 = !DILocation(line: 109, column: 10, scope: !20119)
!20134 = !DILocation(line: 109, column: 3, scope: !20119)
!20135 = distinct !DISubprogram(name: "rotl8", scope: !20009, file: !20009, line: 118, type: !20136, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20136 = !DISubroutineType(types: !20137)
!20137 = !{!20138, !20138, !7}
!20138 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1200, line: 24, baseType: !20139)
!20139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !573)
!20140 = !DILocalVariable(name: "x", arg: 1, scope: !20135, file: !20009, line: 118, type: !20138)
!20141 = !DILocation(line: 118, column: 16, scope: !20135)
!20142 = !DILocalVariable(name: "n", arg: 2, scope: !20135, file: !20009, line: 118, type: !7)
!20143 = !DILocation(line: 118, column: 23, scope: !20135)
!20144 = !DILocation(line: 120, column: 12, scope: !20135)
!20145 = !DILocation(line: 120, column: 17, scope: !20135)
!20146 = !DILocation(line: 120, column: 14, scope: !20135)
!20147 = !DILocation(line: 120, column: 23, scope: !20135)
!20148 = !DILocation(line: 120, column: 33, scope: !20135)
!20149 = !DILocation(line: 120, column: 31, scope: !20135)
!20150 = !DILocation(line: 120, column: 25, scope: !20135)
!20151 = !DILocation(line: 120, column: 20, scope: !20135)
!20152 = !DILocation(line: 120, column: 38, scope: !20135)
!20153 = !DILocation(line: 120, column: 10, scope: !20135)
!20154 = !DILocation(line: 120, column: 3, scope: !20135)
!20155 = distinct !DISubprogram(name: "rotr8", scope: !20009, file: !20009, line: 129, type: !20136, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !298)
!20156 = !DILocalVariable(name: "x", arg: 1, scope: !20155, file: !20009, line: 129, type: !20138)
!20157 = !DILocation(line: 129, column: 16, scope: !20155)
!20158 = !DILocalVariable(name: "n", arg: 2, scope: !20155, file: !20009, line: 129, type: !7)
!20159 = !DILocation(line: 129, column: 23, scope: !20155)
!20160 = !DILocation(line: 131, column: 12, scope: !20155)
!20161 = !DILocation(line: 131, column: 17, scope: !20155)
!20162 = !DILocation(line: 131, column: 14, scope: !20155)
!20163 = !DILocation(line: 131, column: 23, scope: !20155)
!20164 = !DILocation(line: 131, column: 33, scope: !20155)
!20165 = !DILocation(line: 131, column: 31, scope: !20155)
!20166 = !DILocation(line: 131, column: 25, scope: !20155)
!20167 = !DILocation(line: 131, column: 20, scope: !20155)
!20168 = !DILocation(line: 131, column: 38, scope: !20155)
!20169 = !DILocation(line: 131, column: 10, scope: !20155)
!20170 = !DILocation(line: 131, column: 3, scope: !20155)
!20171 = distinct !DISubprogram(name: "c_strcasecmp", scope: !20172, file: !20172, line: 27, type: !16587, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1666, retainedNodes: !298)
!20172 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20173 = !DILocalVariable(name: "s1", arg: 1, scope: !20171, file: !20172, line: 27, type: !183)
!20174 = !DILocation(line: 27, column: 27, scope: !20171)
!20175 = !DILocalVariable(name: "s2", arg: 2, scope: !20171, file: !20172, line: 27, type: !183)
!20176 = !DILocation(line: 27, column: 43, scope: !20171)
!20177 = !DILocalVariable(name: "p1", scope: !20171, file: !20172, line: 29, type: !571)
!20178 = !DILocation(line: 29, column: 33, scope: !20171)
!20179 = !DILocation(line: 29, column: 62, scope: !20171)
!20180 = !DILocalVariable(name: "p2", scope: !20171, file: !20172, line: 30, type: !571)
!20181 = !DILocation(line: 30, column: 33, scope: !20171)
!20182 = !DILocation(line: 30, column: 62, scope: !20171)
!20183 = !DILocalVariable(name: "c1", scope: !20171, file: !20172, line: 31, type: !573)
!20184 = !DILocation(line: 31, column: 17, scope: !20171)
!20185 = !DILocalVariable(name: "c2", scope: !20171, file: !20172, line: 31, type: !573)
!20186 = !DILocation(line: 31, column: 21, scope: !20171)
!20187 = !DILocation(line: 33, column: 7, scope: !20188)
!20188 = distinct !DILexicalBlock(scope: !20171, file: !20172, line: 33, column: 7)
!20189 = !DILocation(line: 33, column: 13, scope: !20188)
!20190 = !DILocation(line: 33, column: 10, scope: !20188)
!20191 = !DILocation(line: 33, column: 7, scope: !20171)
!20192 = !DILocation(line: 34, column: 5, scope: !20188)
!20193 = !DILocation(line: 36, column: 3, scope: !20171)
!20194 = !DILocation(line: 38, column: 24, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20171, file: !20172, line: 37, column: 5)
!20196 = !DILocation(line: 38, column: 23, scope: !20195)
!20197 = !DILocation(line: 38, column: 12, scope: !20195)
!20198 = !DILocation(line: 38, column: 10, scope: !20195)
!20199 = !DILocation(line: 39, column: 24, scope: !20195)
!20200 = !DILocation(line: 39, column: 23, scope: !20195)
!20201 = !DILocation(line: 39, column: 12, scope: !20195)
!20202 = !DILocation(line: 39, column: 10, scope: !20195)
!20203 = !DILocation(line: 41, column: 11, scope: !20204)
!20204 = distinct !DILexicalBlock(scope: !20195, file: !20172, line: 41, column: 11)
!20205 = !DILocation(line: 41, column: 14, scope: !20204)
!20206 = !DILocation(line: 41, column: 11, scope: !20195)
!20207 = !DILocation(line: 42, column: 9, scope: !20204)
!20208 = !DILocation(line: 44, column: 7, scope: !20195)
!20209 = !DILocation(line: 45, column: 7, scope: !20195)
!20210 = !DILocation(line: 46, column: 5, scope: !20195)
!20211 = !DILocation(line: 47, column: 10, scope: !20171)
!20212 = !DILocation(line: 47, column: 16, scope: !20171)
!20213 = !DILocation(line: 47, column: 13, scope: !20171)
!20214 = distinct !{!20214, !20193, !20215}
!20215 = !DILocation(line: 47, column: 18, scope: !20171)
!20216 = !DILocation(line: 50, column: 12, scope: !20217)
!20217 = distinct !DILexicalBlock(scope: !20171, file: !20172, line: 49, column: 7)
!20218 = !DILocation(line: 50, column: 17, scope: !20217)
!20219 = !DILocation(line: 50, column: 15, scope: !20217)
!20220 = !DILocation(line: 50, column: 5, scope: !20217)
!20221 = !DILocation(line: 56, column: 1, scope: !20171)
!20222 = distinct !DISubprogram(name: "close_stream", scope: !20223, file: !20223, line: 56, type: !20224, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1669, retainedNodes: !298)
!20223 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20224 = !DISubroutineType(types: !20225)
!20225 = !{!7, !20226}
!20226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20227, size: 64)
!20227 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !20228)
!20228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !20229)
!20229 = !{!20230, !20231, !20232, !20233, !20234, !20235, !20236, !20237, !20238, !20239, !20240, !20241, !20242, !20243, !20245, !20246, !20247, !20248, !20249, !20250, !20251, !20252, !20253, !20254, !20255, !20256, !20257, !20258, !20259}
!20230 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !20228, file: !4, line: 51, baseType: !7, size: 32)
!20231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !20228, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!20232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !20228, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!20233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !20228, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!20234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !20228, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!20235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !20228, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!20236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !20228, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!20237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !20228, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!20238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !20228, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!20239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !20228, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!20240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !20228, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !20228, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!20242 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !20228, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!20243 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !20228, file: !4, line: 70, baseType: !20244, size: 64, offset: 832)
!20244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20228, size: 64)
!20245 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !20228, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!20246 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !20228, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!20247 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !20228, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!20248 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !20228, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!20249 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !20228, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!20250 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !20228, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!20251 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !20228, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!20252 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !20228, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!20253 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !20228, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!20254 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !20228, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!20255 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !20228, file: !4, line: 93, baseType: !20244, size: 64, offset: 1344)
!20256 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !20228, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!20257 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !20228, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!20258 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !20228, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!20259 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !20228, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!20260 = !DILocalVariable(name: "stream", arg: 1, scope: !20222, file: !20223, line: 56, type: !20226)
!20261 = !DILocation(line: 56, column: 21, scope: !20222)
!20262 = !DILocalVariable(name: "some_pending", scope: !20222, file: !20223, line: 58, type: !1672)
!20263 = !DILocation(line: 58, column: 14, scope: !20222)
!20264 = !DILocation(line: 58, column: 42, scope: !20222)
!20265 = !DILocation(line: 58, column: 30, scope: !20222)
!20266 = !DILocation(line: 58, column: 50, scope: !20222)
!20267 = !DILocalVariable(name: "prev_fail", scope: !20222, file: !20223, line: 59, type: !1672)
!20268 = !DILocation(line: 59, column: 14, scope: !20222)
!20269 = !DILocation(line: 59, column: 27, scope: !20222)
!20270 = !DILocation(line: 59, column: 43, scope: !20222)
!20271 = !DILocalVariable(name: "fclose_fail", scope: !20222, file: !20223, line: 60, type: !1672)
!20272 = !DILocation(line: 60, column: 14, scope: !20222)
!20273 = !DILocation(line: 60, column: 37, scope: !20222)
!20274 = !DILocation(line: 60, column: 29, scope: !20222)
!20275 = !DILocation(line: 60, column: 45, scope: !20222)
!20276 = !DILocation(line: 70, column: 7, scope: !20277)
!20277 = distinct !DILexicalBlock(scope: !20222, file: !20223, line: 70, column: 7)
!20278 = !DILocation(line: 70, column: 17, scope: !20277)
!20279 = !DILocation(line: 70, column: 21, scope: !20277)
!20280 = !DILocation(line: 70, column: 33, scope: !20277)
!20281 = !DILocation(line: 70, column: 37, scope: !20277)
!20282 = !DILocation(line: 70, column: 50, scope: !20277)
!20283 = !DILocation(line: 70, column: 53, scope: !20277)
!20284 = !DILocation(line: 70, column: 59, scope: !20277)
!20285 = !DILocation(line: 70, column: 7, scope: !20222)
!20286 = !DILocation(line: 72, column: 13, scope: !20287)
!20287 = distinct !DILexicalBlock(scope: !20288, file: !20223, line: 72, column: 11)
!20288 = distinct !DILexicalBlock(scope: !20277, file: !20223, line: 71, column: 5)
!20289 = !DILocation(line: 72, column: 11, scope: !20288)
!20290 = !DILocation(line: 73, column: 9, scope: !20287)
!20291 = !DILocation(line: 73, column: 15, scope: !20287)
!20292 = !DILocation(line: 74, column: 7, scope: !20288)
!20293 = !DILocation(line: 77, column: 3, scope: !20222)
!20294 = !DILocation(line: 78, column: 1, scope: !20222)
!20295 = distinct !DISubprogram(name: "opendir_safer", scope: !20296, file: !20296, line: 31, type: !20297, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1673, retainedNodes: !298)
!20296 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20297 = !DISubroutineType(types: !20298)
!20298 = !{!662, !183}
!20299 = !DILocalVariable(name: "name", arg: 1, scope: !20295, file: !20296, line: 31, type: !183)
!20300 = !DILocation(line: 31, column: 28, scope: !20295)
!20301 = !DILocalVariable(name: "dp", scope: !20295, file: !20296, line: 33, type: !662)
!20302 = !DILocation(line: 33, column: 8, scope: !20295)
!20303 = !DILocation(line: 33, column: 22, scope: !20295)
!20304 = !DILocation(line: 33, column: 13, scope: !20295)
!20305 = !DILocation(line: 35, column: 7, scope: !20306)
!20306 = distinct !DILexicalBlock(scope: !20295, file: !20296, line: 35, column: 7)
!20307 = !DILocation(line: 35, column: 7, scope: !20295)
!20308 = !DILocalVariable(name: "fd", scope: !20309, file: !20296, line: 37, type: !7)
!20309 = distinct !DILexicalBlock(scope: !20306, file: !20296, line: 36, column: 5)
!20310 = !DILocation(line: 37, column: 11, scope: !20309)
!20311 = !DILocation(line: 37, column: 23, scope: !20309)
!20312 = !DILocation(line: 37, column: 16, scope: !20309)
!20313 = !DILocation(line: 39, column: 16, scope: !20314)
!20314 = distinct !DILexicalBlock(scope: !20309, file: !20296, line: 39, column: 11)
!20315 = !DILocation(line: 39, column: 13, scope: !20314)
!20316 = !DILocation(line: 39, column: 19, scope: !20314)
!20317 = !DILocation(line: 39, column: 22, scope: !20314)
!20318 = !DILocation(line: 39, column: 25, scope: !20314)
!20319 = !DILocation(line: 39, column: 11, scope: !20309)
!20320 = !DILocalVariable(name: "newdp", scope: !20321, file: !20296, line: 49, type: !662)
!20321 = distinct !DILexicalBlock(scope: !20314, file: !20296, line: 40, column: 9)
!20322 = !DILocation(line: 49, column: 16, scope: !20321)
!20323 = !DILocalVariable(name: "e", scope: !20321, file: !20296, line: 50, type: !7)
!20324 = !DILocation(line: 50, column: 15, scope: !20321)
!20325 = !DILocalVariable(name: "f", scope: !20321, file: !20296, line: 52, type: !7)
!20326 = !DILocation(line: 52, column: 15, scope: !20321)
!20327 = !DILocation(line: 52, column: 26, scope: !20321)
!20328 = !DILocation(line: 52, column: 19, scope: !20321)
!20329 = !DILocation(line: 53, column: 15, scope: !20330)
!20330 = distinct !DILexicalBlock(scope: !20321, file: !20296, line: 53, column: 15)
!20331 = !DILocation(line: 53, column: 17, scope: !20330)
!20332 = !DILocation(line: 53, column: 15, scope: !20321)
!20333 = !DILocation(line: 55, column: 19, scope: !20334)
!20334 = distinct !DILexicalBlock(scope: !20330, file: !20296, line: 54, column: 13)
!20335 = !DILocation(line: 55, column: 17, scope: !20334)
!20336 = !DILocation(line: 56, column: 21, scope: !20334)
!20337 = !DILocation(line: 57, column: 13, scope: !20334)
!20338 = !DILocation(line: 60, column: 34, scope: !20339)
!20339 = distinct !DILexicalBlock(scope: !20330, file: !20296, line: 59, column: 13)
!20340 = !DILocation(line: 60, column: 23, scope: !20339)
!20341 = !DILocation(line: 60, column: 21, scope: !20339)
!20342 = !DILocation(line: 61, column: 19, scope: !20339)
!20343 = !DILocation(line: 61, column: 17, scope: !20339)
!20344 = !DILocation(line: 62, column: 21, scope: !20345)
!20345 = distinct !DILexicalBlock(scope: !20339, file: !20296, line: 62, column: 19)
!20346 = !DILocation(line: 62, column: 19, scope: !20339)
!20347 = !DILocation(line: 63, column: 24, scope: !20345)
!20348 = !DILocation(line: 63, column: 17, scope: !20345)
!20349 = !DILocation(line: 69, column: 21, scope: !20321)
!20350 = !DILocation(line: 69, column: 11, scope: !20321)
!20351 = !DILocation(line: 70, column: 19, scope: !20321)
!20352 = !DILocation(line: 70, column: 11, scope: !20321)
!20353 = !DILocation(line: 70, column: 17, scope: !20321)
!20354 = !DILocation(line: 71, column: 16, scope: !20321)
!20355 = !DILocation(line: 71, column: 14, scope: !20321)
!20356 = !DILocation(line: 72, column: 9, scope: !20321)
!20357 = !DILocation(line: 73, column: 5, scope: !20309)
!20358 = !DILocation(line: 75, column: 10, scope: !20295)
!20359 = !DILocation(line: 75, column: 3, scope: !20295)
!20360 = distinct !DISubprogram(name: "gettime", scope: !20361, file: !20361, line: 29, type: !20362, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1676, retainedNodes: !298)
!20361 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20362 = !DISubroutineType(types: !20363)
!20363 = !{null, !20364}
!20364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20365, size: 64)
!20365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !20366)
!20366 = !{!20367, !20368}
!20367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20365, file: !365, line: 11, baseType: !368, size: 64)
!20368 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20365, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!20369 = !DILocalVariable(name: "ts", arg: 1, scope: !20360, file: !20361, line: 29, type: !20364)
!20370 = !DILocation(line: 29, column: 27, scope: !20360)
!20371 = !DILocation(line: 32, column: 34, scope: !20360)
!20372 = !DILocation(line: 32, column: 3, scope: !20360)
!20373 = !DILocation(line: 39, column: 1, scope: !20360)
!20374 = distinct !DISubprogram(name: "current_timespec", scope: !20361, file: !20361, line: 44, type: !20375, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1676, retainedNodes: !298)
!20375 = !DISubroutineType(types: !20376)
!20376 = !{!20365}
!20377 = !DILocalVariable(name: "ts", scope: !20374, file: !20361, line: 46, type: !20365)
!20378 = !DILocation(line: 46, column: 19, scope: !20374)
!20379 = !DILocation(line: 47, column: 3, scope: !20374)
!20380 = !DILocation(line: 48, column: 3, scope: !20374)
!20381 = distinct !DISubprogram(name: "hard_locale", scope: !20382, file: !20382, line: 38, type: !2899, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1678, retainedNodes: !298)
!20382 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20383 = !DILocalVariable(name: "category", arg: 1, scope: !20381, file: !20382, line: 38, type: !7)
!20384 = !DILocation(line: 38, column: 18, scope: !20381)
!20385 = !DILocalVariable(name: "hard", scope: !20381, file: !20382, line: 40, type: !142)
!20386 = !DILocation(line: 40, column: 8, scope: !20381)
!20387 = !DILocalVariable(name: "p", scope: !20381, file: !20382, line: 41, type: !183)
!20388 = !DILocation(line: 41, column: 15, scope: !20381)
!20389 = !DILocation(line: 41, column: 30, scope: !20381)
!20390 = !DILocation(line: 41, column: 19, scope: !20381)
!20391 = !DILocation(line: 43, column: 7, scope: !20392)
!20392 = distinct !DILexicalBlock(scope: !20381, file: !20382, line: 43, column: 7)
!20393 = !DILocation(line: 43, column: 7, scope: !20381)
!20394 = !DILocation(line: 47, column: 23, scope: !20395)
!20395 = distinct !DILexicalBlock(scope: !20396, file: !20382, line: 47, column: 15)
!20396 = distinct !DILexicalBlock(scope: !20397, file: !20382, line: 46, column: 9)
!20397 = distinct !DILexicalBlock(scope: !20398, file: !20382, line: 45, column: 11)
!20398 = distinct !DILexicalBlock(scope: !20392, file: !20382, line: 44, column: 5)
!20399 = !DILocation(line: 47, column: 15, scope: !20395)
!20400 = !DILocation(line: 47, column: 31, scope: !20395)
!20401 = !DILocation(line: 47, column: 36, scope: !20395)
!20402 = !DILocation(line: 47, column: 47, scope: !20395)
!20403 = !DILocation(line: 47, column: 39, scope: !20395)
!20404 = !DILocation(line: 47, column: 59, scope: !20395)
!20405 = !DILocation(line: 47, column: 15, scope: !20396)
!20406 = !DILocation(line: 48, column: 18, scope: !20395)
!20407 = !DILocation(line: 48, column: 13, scope: !20395)
!20408 = !DILocation(line: 69, column: 5, scope: !20398)
!20409 = !DILocation(line: 71, column: 10, scope: !20381)
!20410 = !DILocation(line: 71, column: 3, scope: !20381)
!20411 = distinct !DISubprogram(name: "hash_pjw", scope: !20412, file: !20412, line: 31, type: !829, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1681, retainedNodes: !298)
!20412 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20413 = !DILocalVariable(name: "x", arg: 1, scope: !20411, file: !20412, line: 31, type: !831)
!20414 = !DILocation(line: 31, column: 23, scope: !20411)
!20415 = !DILocalVariable(name: "tablesize", arg: 2, scope: !20411, file: !20412, line: 31, type: !55)
!20416 = !DILocation(line: 31, column: 33, scope: !20411)
!20417 = !DILocalVariable(name: "s", scope: !20411, file: !20412, line: 33, type: !183)
!20418 = !DILocation(line: 33, column: 15, scope: !20411)
!20419 = !DILocalVariable(name: "h", scope: !20411, file: !20412, line: 34, type: !55)
!20420 = !DILocation(line: 34, column: 10, scope: !20411)
!20421 = !DILocation(line: 36, column: 12, scope: !20422)
!20422 = distinct !DILexicalBlock(scope: !20411, file: !20412, line: 36, column: 3)
!20423 = !DILocation(line: 36, column: 10, scope: !20422)
!20424 = !DILocation(line: 36, column: 8, scope: !20422)
!20425 = !DILocation(line: 36, column: 16, scope: !20426)
!20426 = distinct !DILexicalBlock(scope: !20422, file: !20412, line: 36, column: 3)
!20427 = !DILocation(line: 36, column: 15, scope: !20426)
!20428 = !DILocation(line: 36, column: 3, scope: !20422)
!20429 = !DILocation(line: 37, column: 10, scope: !20426)
!20430 = !DILocation(line: 37, column: 9, scope: !20426)
!20431 = !DILocation(line: 37, column: 16, scope: !20426)
!20432 = !DILocation(line: 37, column: 18, scope: !20426)
!20433 = !DILocation(line: 37, column: 27, scope: !20426)
!20434 = !DILocation(line: 37, column: 29, scope: !20426)
!20435 = !DILocation(line: 37, column: 24, scope: !20426)
!20436 = !DILocation(line: 37, column: 12, scope: !20426)
!20437 = !DILocation(line: 37, column: 7, scope: !20426)
!20438 = !DILocation(line: 37, column: 5, scope: !20426)
!20439 = !DILocation(line: 36, column: 20, scope: !20426)
!20440 = !DILocation(line: 36, column: 3, scope: !20426)
!20441 = distinct !{!20441, !20428, !20442}
!20442 = !DILocation(line: 37, column: 48, scope: !20422)
!20443 = !DILocation(line: 39, column: 10, scope: !20411)
!20444 = !DILocation(line: 39, column: 14, scope: !20411)
!20445 = !DILocation(line: 39, column: 12, scope: !20411)
!20446 = !DILocation(line: 39, column: 3, scope: !20411)
!20447 = distinct !DISubprogram(name: "locale_charset", scope: !20448, file: !20448, line: 687, type: !20449, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1684, retainedNodes: !298)
!20448 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20449 = !DISubroutineType(types: !646)
!20450 = !DILocalVariable(name: "codeset", scope: !20447, file: !20448, line: 689, type: !183)
!20451 = !DILocation(line: 689, column: 15, scope: !20447)
!20452 = !DILocation(line: 696, column: 13, scope: !20447)
!20453 = !DILocation(line: 696, column: 11, scope: !20447)
!20454 = !DILocation(line: 754, column: 7, scope: !20455)
!20455 = distinct !DILexicalBlock(scope: !20447, file: !20448, line: 754, column: 7)
!20456 = !DILocation(line: 754, column: 15, scope: !20455)
!20457 = !DILocation(line: 754, column: 7, scope: !20447)
!20458 = !DILocation(line: 756, column: 13, scope: !20455)
!20459 = !DILocation(line: 756, column: 5, scope: !20455)
!20460 = !DILocation(line: 907, column: 13, scope: !20461)
!20461 = distinct !DILexicalBlock(scope: !20462, file: !20448, line: 907, column: 13)
!20462 = distinct !DILexicalBlock(scope: !20463, file: !20448, line: 897, column: 7)
!20463 = distinct !DILexicalBlock(scope: !20447, file: !20448, line: 856, column: 3)
!20464 = !DILocation(line: 907, column: 24, scope: !20461)
!20465 = !DILocation(line: 907, column: 13, scope: !20462)
!20466 = !DILocation(line: 908, column: 19, scope: !20461)
!20467 = !DILocation(line: 908, column: 11, scope: !20461)
!20468 = !DILocation(line: 995, column: 10, scope: !20447)
!20469 = !DILocation(line: 995, column: 3, scope: !20447)
!20470 = distinct !DISubprogram(name: "dirchownmod", scope: !20471, file: !20471, line: 61, type: !20472, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1687, retainedNodes: !298)
!20471 = !DIFile(filename: "lib/dirchownmod.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20472 = !DISubroutineType(types: !20473)
!20473 = !{!7, !7, !183, !139, !127, !129, !139, !139}
!20474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !463, line: 46, size: 1152, elements: !20475)
!20475 = !{!20476, !20477, !20478, !20479, !20480, !20481, !20482, !20483, !20484, !20485, !20486, !20487, !20492, !20493, !20494}
!20476 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20474, file: !463, line: 48, baseType: !452, size: 64)
!20477 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20474, file: !463, line: 53, baseType: !453, size: 64, offset: 64)
!20478 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20474, file: !463, line: 61, baseType: !460, size: 64, offset: 128)
!20479 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20474, file: !463, line: 62, baseType: !140, size: 32, offset: 192)
!20480 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20474, file: !463, line: 64, baseType: !128, size: 32, offset: 224)
!20481 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20474, file: !463, line: 65, baseType: !130, size: 32, offset: 256)
!20482 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20474, file: !463, line: 67, baseType: !7, size: 32, offset: 288)
!20483 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20474, file: !463, line: 69, baseType: !452, size: 64, offset: 320)
!20484 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20474, file: !463, line: 74, baseType: !29, size: 64, offset: 384)
!20485 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20474, file: !463, line: 78, baseType: !475, size: 64, offset: 448)
!20486 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20474, file: !463, line: 80, baseType: !477, size: 64, offset: 512)
!20487 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20474, file: !463, line: 91, baseType: !20488, size: 128, offset: 576)
!20488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !365, line: 9, size: 128, elements: !20489)
!20489 = !{!20490, !20491}
!20490 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20488, file: !365, line: 11, baseType: !368, size: 64)
!20491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20488, file: !365, line: 12, baseType: !370, size: 64, offset: 64)
!20492 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20474, file: !463, line: 92, baseType: !20488, size: 128, offset: 704)
!20493 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20474, file: !463, line: 93, baseType: !20488, size: 128, offset: 832)
!20494 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20474, file: !463, line: 106, baseType: !486, size: 192, offset: 960)
!20495 = !DILocalVariable(name: "fd", arg: 1, scope: !20470, file: !20471, line: 61, type: !7)
!20496 = !DILocation(line: 61, column: 18, scope: !20470)
!20497 = !DILocalVariable(name: "dir", arg: 2, scope: !20470, file: !20471, line: 61, type: !183)
!20498 = !DILocation(line: 61, column: 34, scope: !20470)
!20499 = !DILocalVariable(name: "mkdir_mode", arg: 3, scope: !20470, file: !20471, line: 61, type: !139)
!20500 = !DILocation(line: 61, column: 46, scope: !20470)
!20501 = !DILocalVariable(name: "owner", arg: 4, scope: !20470, file: !20471, line: 62, type: !127)
!20502 = !DILocation(line: 62, column: 20, scope: !20470)
!20503 = !DILocalVariable(name: "group", arg: 5, scope: !20470, file: !20471, line: 62, type: !129)
!20504 = !DILocation(line: 62, column: 33, scope: !20470)
!20505 = !DILocalVariable(name: "mode", arg: 6, scope: !20470, file: !20471, line: 63, type: !139)
!20506 = !DILocation(line: 63, column: 21, scope: !20470)
!20507 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !20470, file: !20471, line: 63, type: !139)
!20508 = !DILocation(line: 63, column: 34, scope: !20470)
!20509 = !DILocalVariable(name: "st", scope: !20470, file: !20471, line: 65, type: !20474)
!20510 = !DILocation(line: 65, column: 15, scope: !20470)
!20511 = !DILocalVariable(name: "result", scope: !20470, file: !20471, line: 66, type: !7)
!20512 = !DILocation(line: 66, column: 7, scope: !20470)
!20513 = !DILocation(line: 66, column: 17, scope: !20470)
!20514 = !DILocation(line: 66, column: 20, scope: !20470)
!20515 = !DILocation(line: 66, column: 32, scope: !20470)
!20516 = !DILocation(line: 66, column: 26, scope: !20470)
!20517 = !DILocation(line: 66, column: 51, scope: !20470)
!20518 = !DILocation(line: 66, column: 44, scope: !20470)
!20519 = !DILocation(line: 68, column: 7, scope: !20520)
!20520 = distinct !DILexicalBlock(scope: !20470, file: !20471, line: 68, column: 7)
!20521 = !DILocation(line: 68, column: 14, scope: !20520)
!20522 = !DILocation(line: 68, column: 7, scope: !20470)
!20523 = !DILocalVariable(name: "dir_mode", scope: !20524, file: !20471, line: 70, type: !139)
!20524 = distinct !DILexicalBlock(scope: !20520, file: !20471, line: 69, column: 5)
!20525 = !DILocation(line: 70, column: 14, scope: !20524)
!20526 = !DILocation(line: 70, column: 28, scope: !20524)
!20527 = !DILocation(line: 76, column: 13, scope: !20528)
!20528 = distinct !DILexicalBlock(scope: !20524, file: !20471, line: 76, column: 11)
!20529 = !DILocation(line: 76, column: 11, scope: !20524)
!20530 = !DILocation(line: 78, column: 11, scope: !20531)
!20531 = distinct !DILexicalBlock(scope: !20528, file: !20471, line: 77, column: 9)
!20532 = !DILocation(line: 78, column: 17, scope: !20531)
!20533 = !DILocation(line: 79, column: 18, scope: !20531)
!20534 = !DILocation(line: 80, column: 9, scope: !20531)
!20535 = !DILocalVariable(name: "indeterminate", scope: !20536, file: !20471, line: 87, type: !139)
!20536 = distinct !DILexicalBlock(scope: !20528, file: !20471, line: 82, column: 9)
!20537 = !DILocation(line: 87, column: 18, scope: !20536)
!20538 = !DILocation(line: 94, column: 16, scope: !20539)
!20539 = distinct !DILexicalBlock(scope: !20536, file: !20471, line: 94, column: 15)
!20540 = !DILocation(line: 94, column: 22, scope: !20539)
!20541 = !DILocation(line: 94, column: 36, scope: !20539)
!20542 = !DILocation(line: 94, column: 39, scope: !20539)
!20543 = !DILocation(line: 94, column: 51, scope: !20539)
!20544 = !DILocation(line: 94, column: 45, scope: !20539)
!20545 = !DILocation(line: 95, column: 15, scope: !20539)
!20546 = !DILocation(line: 95, column: 19, scope: !20539)
!20547 = !DILocation(line: 95, column: 25, scope: !20539)
!20548 = !DILocation(line: 95, column: 39, scope: !20539)
!20549 = !DILocation(line: 95, column: 42, scope: !20539)
!20550 = !DILocation(line: 95, column: 54, scope: !20539)
!20551 = !DILocation(line: 95, column: 48, scope: !20539)
!20552 = !DILocation(line: 94, column: 15, scope: !20536)
!20553 = !DILocation(line: 97, column: 30, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20539, file: !20471, line: 96, column: 13)
!20555 = !DILocation(line: 97, column: 27, scope: !20554)
!20556 = !DILocation(line: 97, column: 25, scope: !20554)
!20557 = !DILocation(line: 98, column: 35, scope: !20554)
!20558 = !DILocation(line: 98, column: 39, scope: !20554)
!20559 = !DILocation(line: 98, column: 46, scope: !20554)
!20560 = !DILocation(line: 98, column: 27, scope: !20554)
!20561 = !DILocation(line: 99, column: 27, scope: !20554)
!20562 = !DILocation(line: 99, column: 38, scope: !20554)
!20563 = !DILocation(line: 100, column: 35, scope: !20554)
!20564 = !DILocation(line: 100, column: 40, scope: !20554)
!20565 = !DILocation(line: 100, column: 47, scope: !20554)
!20566 = !DILocation(line: 100, column: 27, scope: !20554)
!20567 = !DILocation(line: 101, column: 34, scope: !20554)
!20568 = !DILocation(line: 101, column: 39, scope: !20554)
!20569 = !DILocation(line: 101, column: 46, scope: !20554)
!20570 = !DILocation(line: 101, column: 27, scope: !20554)
!20571 = !DILocation(line: 97, column: 22, scope: !20554)
!20572 = !DILocation(line: 108, column: 19, scope: !20573)
!20573 = distinct !DILexicalBlock(scope: !20554, file: !20471, line: 108, column: 19)
!20574 = !DILocation(line: 108, column: 26, scope: !20573)
!20575 = !DILocation(line: 108, column: 31, scope: !20573)
!20576 = !DILocation(line: 108, column: 35, scope: !20573)
!20577 = !DILocation(line: 108, column: 44, scope: !20573)
!20578 = !DILocation(line: 108, column: 19, scope: !20554)
!20579 = !DILocation(line: 109, column: 33, scope: !20573)
!20580 = !DILocation(line: 109, column: 42, scope: !20573)
!20581 = !DILocation(line: 109, column: 31, scope: !20573)
!20582 = !DILocation(line: 109, column: 17, scope: !20573)
!20583 = !DILocation(line: 110, column: 13, scope: !20554)
!20584 = !DILocation(line: 115, column: 15, scope: !20585)
!20585 = distinct !DILexicalBlock(scope: !20536, file: !20471, line: 115, column: 15)
!20586 = !DILocation(line: 115, column: 22, scope: !20585)
!20587 = !DILocation(line: 115, column: 27, scope: !20585)
!20588 = !DILocation(line: 115, column: 33, scope: !20585)
!20589 = !DILocation(line: 115, column: 44, scope: !20585)
!20590 = !DILocation(line: 115, column: 42, scope: !20585)
!20591 = !DILocation(line: 115, column: 52, scope: !20585)
!20592 = !DILocation(line: 115, column: 50, scope: !20585)
!20593 = !DILocation(line: 115, column: 69, scope: !20585)
!20594 = !DILocation(line: 115, column: 67, scope: !20585)
!20595 = !DILocation(line: 115, column: 15, scope: !20536)
!20596 = !DILocalVariable(name: "chmod_mode", scope: !20597, file: !20471, line: 117, type: !139)
!20597 = distinct !DILexicalBlock(scope: !20585, file: !20471, line: 116, column: 13)
!20598 = !DILocation(line: 117, column: 22, scope: !20597)
!20599 = !DILocation(line: 118, column: 17, scope: !20597)
!20600 = !DILocation(line: 118, column: 25, scope: !20597)
!20601 = !DILocation(line: 118, column: 34, scope: !20597)
!20602 = !DILocation(line: 118, column: 55, scope: !20597)
!20603 = !DILocation(line: 118, column: 54, scope: !20597)
!20604 = !DILocation(line: 118, column: 52, scope: !20597)
!20605 = !DILocation(line: 118, column: 22, scope: !20597)
!20606 = !DILocation(line: 119, column: 45, scope: !20597)
!20607 = !DILocation(line: 119, column: 42, scope: !20597)
!20608 = !DILocation(line: 119, column: 25, scope: !20597)
!20609 = !DILocation(line: 120, column: 35, scope: !20597)
!20610 = !DILocation(line: 120, column: 39, scope: !20597)
!20611 = !DILocation(line: 120, column: 27, scope: !20597)
!20612 = !DILocation(line: 121, column: 27, scope: !20597)
!20613 = !DILocation(line: 121, column: 38, scope: !20597)
!20614 = !DILocation(line: 122, column: 35, scope: !20597)
!20615 = !DILocation(line: 122, column: 40, scope: !20597)
!20616 = !DILocation(line: 122, column: 27, scope: !20597)
!20617 = !DILocation(line: 123, column: 34, scope: !20597)
!20618 = !DILocation(line: 123, column: 39, scope: !20597)
!20619 = !DILocation(line: 123, column: 27, scope: !20597)
!20620 = !DILocation(line: 119, column: 22, scope: !20597)
!20621 = !DILocation(line: 124, column: 13, scope: !20597)
!20622 = !DILocation(line: 126, column: 5, scope: !20524)
!20623 = !DILocation(line: 128, column: 12, scope: !20624)
!20624 = distinct !DILexicalBlock(scope: !20470, file: !20471, line: 128, column: 7)
!20625 = !DILocation(line: 128, column: 9, scope: !20624)
!20626 = !DILocation(line: 128, column: 7, scope: !20470)
!20627 = !DILocation(line: 130, column: 11, scope: !20628)
!20628 = distinct !DILexicalBlock(scope: !20629, file: !20471, line: 130, column: 11)
!20629 = distinct !DILexicalBlock(scope: !20624, file: !20471, line: 129, column: 5)
!20630 = !DILocation(line: 130, column: 18, scope: !20628)
!20631 = !DILocation(line: 130, column: 11, scope: !20629)
!20632 = !DILocation(line: 131, column: 25, scope: !20628)
!20633 = !DILocation(line: 131, column: 18, scope: !20628)
!20634 = !DILocation(line: 131, column: 16, scope: !20628)
!20635 = !DILocation(line: 131, column: 9, scope: !20628)
!20636 = !DILocalVariable(name: "e", scope: !20637, file: !20471, line: 134, type: !7)
!20637 = distinct !DILexicalBlock(scope: !20628, file: !20471, line: 133, column: 9)
!20638 = !DILocation(line: 134, column: 15, scope: !20637)
!20639 = !DILocation(line: 134, column: 19, scope: !20637)
!20640 = !DILocation(line: 135, column: 18, scope: !20637)
!20641 = !DILocation(line: 135, column: 11, scope: !20637)
!20642 = !DILocation(line: 136, column: 19, scope: !20637)
!20643 = !DILocation(line: 136, column: 11, scope: !20637)
!20644 = !DILocation(line: 136, column: 17, scope: !20637)
!20645 = !DILocation(line: 138, column: 5, scope: !20629)
!20646 = !DILocation(line: 140, column: 10, scope: !20470)
!20647 = !DILocation(line: 140, column: 3, scope: !20470)
!20648 = distinct !DISubprogram(name: "openat_safer", scope: !20649, file: !20649, line: 29, type: !20650, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1690, retainedNodes: !298)
!20649 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20650 = !DISubroutineType(types: !20651)
!20651 = !{!7, !7, !183, !7, null}
!20652 = !DILocalVariable(name: "fd", arg: 1, scope: !20648, file: !20649, line: 29, type: !7)
!20653 = !DILocation(line: 29, column: 19, scope: !20648)
!20654 = !DILocalVariable(name: "file", arg: 2, scope: !20648, file: !20649, line: 29, type: !183)
!20655 = !DILocation(line: 29, column: 35, scope: !20648)
!20656 = !DILocalVariable(name: "flags", arg: 3, scope: !20648, file: !20649, line: 29, type: !7)
!20657 = !DILocation(line: 29, column: 45, scope: !20648)
!20658 = !DILocalVariable(name: "mode", scope: !20648, file: !20649, line: 31, type: !139)
!20659 = !DILocation(line: 31, column: 10, scope: !20648)
!20660 = !DILocation(line: 33, column: 7, scope: !20661)
!20661 = distinct !DILexicalBlock(scope: !20648, file: !20649, line: 33, column: 7)
!20662 = !DILocation(line: 33, column: 13, scope: !20661)
!20663 = !DILocation(line: 33, column: 7, scope: !20648)
!20664 = !DILocalVariable(name: "ap", scope: !20665, file: !20649, line: 35, type: !1693)
!20665 = distinct !DILexicalBlock(scope: !20661, file: !20649, line: 34, column: 5)
!20666 = !DILocation(line: 35, column: 15, scope: !20665)
!20667 = !DILocation(line: 36, column: 7, scope: !20665)
!20668 = !DILocation(line: 40, column: 14, scope: !20665)
!20669 = !DILocation(line: 40, column: 12, scope: !20665)
!20670 = !DILocation(line: 42, column: 7, scope: !20665)
!20671 = !DILocation(line: 43, column: 5, scope: !20665)
!20672 = !DILocation(line: 45, column: 28, scope: !20648)
!20673 = !DILocation(line: 45, column: 32, scope: !20648)
!20674 = !DILocation(line: 45, column: 38, scope: !20648)
!20675 = !DILocation(line: 45, column: 45, scope: !20648)
!20676 = !DILocation(line: 45, column: 20, scope: !20648)
!20677 = !DILocation(line: 45, column: 10, scope: !20648)
!20678 = !DILocation(line: 45, column: 3, scope: !20648)
!20679 = distinct !DISubprogram(name: "randint_new", scope: !1707, file: !1707, line: 71, type: !20680, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20680 = !DISubroutineType(types: !20681)
!20681 = !{!1705, !1710}
!20682 = !DILocalVariable(name: "source", arg: 1, scope: !20679, file: !1707, line: 71, type: !1710)
!20683 = !DILocation(line: 71, column: 38, scope: !20679)
!20684 = !DILocalVariable(name: "s", scope: !20679, file: !1707, line: 73, type: !1705)
!20685 = !DILocation(line: 73, column: 26, scope: !20679)
!20686 = !DILocation(line: 73, column: 30, scope: !20679)
!20687 = !DILocation(line: 74, column: 15, scope: !20679)
!20688 = !DILocation(line: 74, column: 3, scope: !20679)
!20689 = !DILocation(line: 74, column: 6, scope: !20679)
!20690 = !DILocation(line: 74, column: 13, scope: !20679)
!20691 = !DILocation(line: 75, column: 16, scope: !20679)
!20692 = !DILocation(line: 75, column: 19, scope: !20679)
!20693 = !DILocation(line: 75, column: 27, scope: !20679)
!20694 = !DILocation(line: 75, column: 3, scope: !20679)
!20695 = !DILocation(line: 75, column: 6, scope: !20679)
!20696 = !DILocation(line: 75, column: 14, scope: !20679)
!20697 = !DILocation(line: 76, column: 10, scope: !20679)
!20698 = !DILocation(line: 76, column: 3, scope: !20679)
!20699 = distinct !DISubprogram(name: "randint_all_new", scope: !1707, file: !1707, line: 84, type: !20700, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20700 = !DISubroutineType(types: !20701)
!20701 = !{!1705, !183, !55}
!20702 = !DILocalVariable(name: "name", arg: 1, scope: !20699, file: !1707, line: 84, type: !183)
!20703 = !DILocation(line: 84, column: 30, scope: !20699)
!20704 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20699, file: !1707, line: 84, type: !55)
!20705 = !DILocation(line: 84, column: 43, scope: !20699)
!20706 = !DILocalVariable(name: "source", scope: !20699, file: !1707, line: 86, type: !1710)
!20707 = !DILocation(line: 86, column: 27, scope: !20699)
!20708 = !DILocation(line: 86, column: 50, scope: !20699)
!20709 = !DILocation(line: 86, column: 56, scope: !20699)
!20710 = !DILocation(line: 86, column: 36, scope: !20699)
!20711 = !DILocation(line: 87, column: 11, scope: !20699)
!20712 = !DILocation(line: 87, column: 33, scope: !20699)
!20713 = !DILocation(line: 87, column: 20, scope: !20699)
!20714 = !DILocation(line: 87, column: 3, scope: !20699)
!20715 = distinct !DISubprogram(name: "randint_get_source", scope: !1707, file: !1707, line: 93, type: !20716, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20716 = !DISubroutineType(types: !20717)
!20717 = !{!1710, !20718}
!20718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20719, size: 64)
!20719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1706)
!20720 = !DILocalVariable(name: "s", arg: 1, scope: !20715, file: !1707, line: 93, type: !20718)
!20721 = !DILocation(line: 93, column: 50, scope: !20715)
!20722 = !DILocation(line: 95, column: 10, scope: !20715)
!20723 = !DILocation(line: 95, column: 13, scope: !20715)
!20724 = !DILocation(line: 95, column: 3, scope: !20715)
!20725 = distinct !DISubprogram(name: "randint_genmax", scope: !1707, file: !1707, line: 114, type: !20726, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20726 = !DISubroutineType(types: !20727)
!20727 = !{!1714, !1705, !1714}
!20728 = !DILocalVariable(name: "s", arg: 1, scope: !20725, file: !1707, line: 114, type: !1705)
!20729 = !DILocation(line: 114, column: 40, scope: !20725)
!20730 = !DILocalVariable(name: "genmax", arg: 2, scope: !20725, file: !1707, line: 114, type: !1714)
!20731 = !DILocation(line: 114, column: 51, scope: !20725)
!20732 = !DILocalVariable(name: "source", scope: !20725, file: !1707, line: 116, type: !1710)
!20733 = !DILocation(line: 116, column: 27, scope: !20725)
!20734 = !DILocation(line: 116, column: 36, scope: !20725)
!20735 = !DILocation(line: 116, column: 39, scope: !20725)
!20736 = !DILocalVariable(name: "randnum", scope: !20725, file: !1707, line: 117, type: !1714)
!20737 = !DILocation(line: 117, column: 11, scope: !20725)
!20738 = !DILocation(line: 117, column: 21, scope: !20725)
!20739 = !DILocation(line: 117, column: 24, scope: !20725)
!20740 = !DILocalVariable(name: "randmax", scope: !20725, file: !1707, line: 118, type: !1714)
!20741 = !DILocation(line: 118, column: 11, scope: !20725)
!20742 = !DILocation(line: 118, column: 21, scope: !20725)
!20743 = !DILocation(line: 118, column: 24, scope: !20725)
!20744 = !DILocalVariable(name: "choices", scope: !20725, file: !1707, line: 119, type: !1714)
!20745 = !DILocation(line: 119, column: 11, scope: !20725)
!20746 = !DILocation(line: 119, column: 21, scope: !20725)
!20747 = !DILocation(line: 119, column: 28, scope: !20725)
!20748 = !DILocation(line: 121, column: 3, scope: !20725)
!20749 = !DILocation(line: 123, column: 11, scope: !20750)
!20750 = distinct !DILexicalBlock(scope: !20751, file: !1707, line: 123, column: 11)
!20751 = distinct !DILexicalBlock(scope: !20725, file: !1707, line: 122, column: 5)
!20752 = !DILocation(line: 123, column: 21, scope: !20750)
!20753 = !DILocation(line: 123, column: 19, scope: !20750)
!20754 = !DILocation(line: 123, column: 11, scope: !20751)
!20755 = !DILocalVariable(name: "i", scope: !20756, file: !1707, line: 128, type: !55)
!20756 = distinct !DILexicalBlock(scope: !20750, file: !1707, line: 124, column: 9)
!20757 = !DILocation(line: 128, column: 18, scope: !20756)
!20758 = !DILocalVariable(name: "rmax", scope: !20756, file: !1707, line: 129, type: !1714)
!20759 = !DILocation(line: 129, column: 19, scope: !20756)
!20760 = !DILocation(line: 129, column: 26, scope: !20756)
!20761 = !DILocalVariable(name: "buf", scope: !20756, file: !1707, line: 130, type: !1716)
!20762 = !DILocation(line: 130, column: 25, scope: !20756)
!20763 = !DILocation(line: 132, column: 11, scope: !20756)
!20764 = !DILocation(line: 134, column: 34, scope: !20765)
!20765 = distinct !DILexicalBlock(scope: !20756, file: !1707, line: 133, column: 13)
!20766 = !DILocation(line: 134, column: 22, scope: !20765)
!20767 = !DILocation(line: 134, column: 40, scope: !20765)
!20768 = !DILocation(line: 134, column: 20, scope: !20765)
!20769 = !DILocation(line: 135, column: 16, scope: !20765)
!20770 = !DILocation(line: 136, column: 13, scope: !20765)
!20771 = !DILocation(line: 137, column: 18, scope: !20756)
!20772 = !DILocation(line: 137, column: 25, scope: !20756)
!20773 = !DILocation(line: 137, column: 23, scope: !20756)
!20774 = distinct !{!20774, !20763, !20775}
!20775 = !DILocation(line: 137, column: 31, scope: !20756)
!20776 = !DILocation(line: 139, column: 21, scope: !20756)
!20777 = !DILocation(line: 139, column: 29, scope: !20756)
!20778 = !DILocation(line: 139, column: 34, scope: !20756)
!20779 = !DILocation(line: 139, column: 11, scope: !20756)
!20780 = !DILocation(line: 148, column: 13, scope: !20756)
!20781 = !DILocation(line: 150, column: 11, scope: !20756)
!20782 = !DILocation(line: 152, column: 37, scope: !20783)
!20783 = distinct !DILexicalBlock(scope: !20756, file: !1707, line: 151, column: 13)
!20784 = !DILocation(line: 152, column: 25, scope: !20783)
!20785 = !DILocation(line: 152, column: 52, scope: !20783)
!20786 = !DILocation(line: 152, column: 48, scope: !20783)
!20787 = !DILocation(line: 152, column: 46, scope: !20783)
!20788 = !DILocation(line: 152, column: 23, scope: !20783)
!20789 = !DILocation(line: 153, column: 37, scope: !20783)
!20790 = !DILocation(line: 153, column: 25, scope: !20783)
!20791 = !DILocation(line: 153, column: 46, scope: !20783)
!20792 = !DILocation(line: 153, column: 23, scope: !20783)
!20793 = !DILocation(line: 154, column: 16, scope: !20783)
!20794 = !DILocation(line: 155, column: 13, scope: !20783)
!20795 = !DILocation(line: 156, column: 18, scope: !20756)
!20796 = !DILocation(line: 156, column: 28, scope: !20756)
!20797 = !DILocation(line: 156, column: 26, scope: !20756)
!20798 = distinct !{!20798, !20781, !20799}
!20799 = !DILocation(line: 156, column: 34, scope: !20756)
!20800 = !DILocation(line: 157, column: 9, scope: !20756)
!20801 = !DILocation(line: 159, column: 11, scope: !20802)
!20802 = distinct !DILexicalBlock(scope: !20751, file: !1707, line: 159, column: 11)
!20803 = !DILocation(line: 159, column: 22, scope: !20802)
!20804 = !DILocation(line: 159, column: 19, scope: !20802)
!20805 = !DILocation(line: 159, column: 11, scope: !20751)
!20806 = !DILocation(line: 161, column: 24, scope: !20807)
!20807 = distinct !DILexicalBlock(scope: !20802, file: !1707, line: 160, column: 9)
!20808 = !DILocation(line: 161, column: 27, scope: !20807)
!20809 = !DILocation(line: 161, column: 35, scope: !20807)
!20810 = !DILocation(line: 161, column: 11, scope: !20807)
!20811 = !DILocation(line: 161, column: 14, scope: !20807)
!20812 = !DILocation(line: 161, column: 22, scope: !20807)
!20813 = !DILocation(line: 162, column: 18, scope: !20807)
!20814 = !DILocation(line: 162, column: 11, scope: !20807)
!20815 = !DILocalVariable(name: "excess_choices", scope: !20816, file: !1707, line: 176, type: !1714)
!20816 = distinct !DILexicalBlock(scope: !20802, file: !1707, line: 165, column: 9)
!20817 = !DILocation(line: 176, column: 19, scope: !20816)
!20818 = !DILocation(line: 176, column: 36, scope: !20816)
!20819 = !DILocation(line: 176, column: 46, scope: !20816)
!20820 = !DILocation(line: 176, column: 44, scope: !20816)
!20821 = !DILocalVariable(name: "unusable_choices", scope: !20816, file: !1707, line: 177, type: !1714)
!20822 = !DILocation(line: 177, column: 19, scope: !20816)
!20823 = !DILocation(line: 177, column: 38, scope: !20816)
!20824 = !DILocation(line: 177, column: 55, scope: !20816)
!20825 = !DILocation(line: 177, column: 53, scope: !20816)
!20826 = !DILocalVariable(name: "last_usable_choice", scope: !20816, file: !1707, line: 178, type: !1714)
!20827 = !DILocation(line: 178, column: 19, scope: !20816)
!20828 = !DILocation(line: 178, column: 40, scope: !20816)
!20829 = !DILocation(line: 178, column: 50, scope: !20816)
!20830 = !DILocation(line: 178, column: 48, scope: !20816)
!20831 = !DILocalVariable(name: "reduced_randnum", scope: !20816, file: !1707, line: 179, type: !1714)
!20832 = !DILocation(line: 179, column: 19, scope: !20816)
!20833 = !DILocation(line: 179, column: 37, scope: !20816)
!20834 = !DILocation(line: 179, column: 47, scope: !20816)
!20835 = !DILocation(line: 179, column: 45, scope: !20816)
!20836 = !DILocation(line: 181, column: 15, scope: !20837)
!20837 = distinct !DILexicalBlock(scope: !20816, file: !1707, line: 181, column: 15)
!20838 = !DILocation(line: 181, column: 26, scope: !20837)
!20839 = !DILocation(line: 181, column: 23, scope: !20837)
!20840 = !DILocation(line: 181, column: 15, scope: !20816)
!20841 = !DILocation(line: 183, column: 28, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20837, file: !1707, line: 182, column: 13)
!20843 = !DILocation(line: 183, column: 38, scope: !20842)
!20844 = !DILocation(line: 183, column: 36, scope: !20842)
!20845 = !DILocation(line: 183, column: 15, scope: !20842)
!20846 = !DILocation(line: 183, column: 18, scope: !20842)
!20847 = !DILocation(line: 183, column: 26, scope: !20842)
!20848 = !DILocation(line: 184, column: 28, scope: !20842)
!20849 = !DILocation(line: 184, column: 45, scope: !20842)
!20850 = !DILocation(line: 184, column: 43, scope: !20842)
!20851 = !DILocation(line: 184, column: 15, scope: !20842)
!20852 = !DILocation(line: 184, column: 18, scope: !20842)
!20853 = !DILocation(line: 184, column: 26, scope: !20842)
!20854 = !DILocation(line: 185, column: 22, scope: !20842)
!20855 = !DILocation(line: 185, column: 15, scope: !20842)
!20856 = !DILocation(line: 190, column: 21, scope: !20816)
!20857 = !DILocation(line: 190, column: 19, scope: !20816)
!20858 = !DILocation(line: 191, column: 21, scope: !20816)
!20859 = !DILocation(line: 191, column: 38, scope: !20816)
!20860 = !DILocation(line: 191, column: 19, scope: !20816)
!20861 = distinct !{!20861, !20748, !20862}
!20862 = !DILocation(line: 193, column: 5, scope: !20725)
!20863 = !DILocation(line: 194, column: 1, scope: !20725)
!20864 = distinct !DISubprogram(name: "shift_left", scope: !1707, file: !1707, line: 104, type: !20865, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20865 = !DISubroutineType(types: !20866)
!20866 = !{!1714, !1714}
!20867 = !DILocalVariable(name: "x", arg: 1, scope: !20864, file: !1707, line: 104, type: !1714)
!20868 = !DILocation(line: 104, column: 43, scope: !20864)
!20869 = !DILocation(line: 106, column: 27, scope: !20864)
!20870 = !DILocation(line: 106, column: 29, scope: !20864)
!20871 = !DILocation(line: 106, column: 3, scope: !20864)
!20872 = distinct !DISubprogram(name: "randint_free", scope: !1707, file: !1707, line: 199, type: !20873, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20873 = !DISubroutineType(types: !20874)
!20874 = !{null, !1705}
!20875 = !DILocalVariable(name: "s", arg: 1, scope: !20872, file: !1707, line: 199, type: !1705)
!20876 = !DILocation(line: 199, column: 38, scope: !20872)
!20877 = !DILocation(line: 201, column: 19, scope: !20872)
!20878 = !DILocation(line: 201, column: 3, scope: !20872)
!20879 = !DILocation(line: 202, column: 9, scope: !20872)
!20880 = !DILocation(line: 202, column: 3, scope: !20872)
!20881 = !DILocation(line: 203, column: 1, scope: !20872)
!20882 = distinct !DISubprogram(name: "randint_all_free", scope: !1707, file: !1707, line: 209, type: !20883, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1702, retainedNodes: !298)
!20883 = !DISubroutineType(types: !20884)
!20884 = !{!7, !1705}
!20885 = !DILocalVariable(name: "s", arg: 1, scope: !20882, file: !1707, line: 209, type: !1705)
!20886 = !DILocation(line: 209, column: 42, scope: !20882)
!20887 = !DILocalVariable(name: "r", scope: !20882, file: !1707, line: 211, type: !7)
!20888 = !DILocation(line: 211, column: 7, scope: !20882)
!20889 = !DILocation(line: 211, column: 26, scope: !20882)
!20890 = !DILocation(line: 211, column: 29, scope: !20882)
!20891 = !DILocation(line: 211, column: 11, scope: !20882)
!20892 = !DILocalVariable(name: "e", scope: !20882, file: !1707, line: 212, type: !7)
!20893 = !DILocation(line: 212, column: 7, scope: !20882)
!20894 = !DILocation(line: 212, column: 11, scope: !20882)
!20895 = !DILocation(line: 213, column: 17, scope: !20882)
!20896 = !DILocation(line: 213, column: 3, scope: !20882)
!20897 = !DILocation(line: 214, column: 11, scope: !20882)
!20898 = !DILocation(line: 214, column: 3, scope: !20882)
!20899 = !DILocation(line: 214, column: 9, scope: !20882)
!20900 = !DILocation(line: 215, column: 10, scope: !20882)
!20901 = !DILocation(line: 215, column: 3, scope: !20882)
!20902 = distinct !DISubprogram(name: "randread_new", scope: !1756, file: !1756, line: 204, type: !20903, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!20903 = !DISubroutineType(types: !20904)
!20904 = !{!1754, !183, !55}
!20905 = !DILocalVariable(name: "name", arg: 1, scope: !20902, file: !1756, line: 204, type: !183)
!20906 = !DILocation(line: 204, column: 27, scope: !20902)
!20907 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20902, file: !1756, line: 204, type: !55)
!20908 = !DILocation(line: 204, column: 40, scope: !20902)
!20909 = !DILocation(line: 206, column: 7, scope: !20910)
!20910 = distinct !DILexicalBlock(scope: !20902, file: !1756, line: 206, column: 7)
!20911 = !DILocation(line: 206, column: 19, scope: !20910)
!20912 = !DILocation(line: 206, column: 7, scope: !20902)
!20913 = !DILocation(line: 207, column: 12, scope: !20910)
!20914 = !DILocation(line: 207, column: 5, scope: !20910)
!20915 = !DILocalVariable(name: "source", scope: !20916, file: !1756, line: 210, type: !1720)
!20916 = distinct !DILexicalBlock(scope: !20910, file: !1756, line: 209, column: 5)
!20917 = !DILocation(line: 210, column: 13, scope: !20916)
!20918 = !DILocalVariable(name: "s", scope: !20916, file: !1756, line: 211, type: !1754)
!20919 = !DILocation(line: 211, column: 31, scope: !20916)
!20920 = !DILocation(line: 213, column: 11, scope: !20921)
!20921 = distinct !DILexicalBlock(scope: !20916, file: !1756, line: 213, column: 11)
!20922 = !DILocation(line: 213, column: 11, scope: !20916)
!20923 = !DILocation(line: 214, column: 38, scope: !20924)
!20924 = distinct !DILexicalBlock(scope: !20921, file: !1756, line: 214, column: 13)
!20925 = !DILocation(line: 214, column: 25, scope: !20924)
!20926 = !DILocation(line: 214, column: 23, scope: !20924)
!20927 = !DILocation(line: 214, column: 13, scope: !20921)
!20928 = !DILocation(line: 215, column: 11, scope: !20924)
!20929 = !DILocation(line: 214, column: 49, scope: !20924)
!20930 = !DILocation(line: 217, column: 23, scope: !20916)
!20931 = !DILocation(line: 217, column: 31, scope: !20916)
!20932 = !DILocation(line: 217, column: 11, scope: !20916)
!20933 = !DILocation(line: 217, column: 9, scope: !20916)
!20934 = !DILocation(line: 219, column: 11, scope: !20935)
!20935 = distinct !DILexicalBlock(scope: !20916, file: !1756, line: 219, column: 11)
!20936 = !DILocation(line: 219, column: 11, scope: !20916)
!20937 = !DILocation(line: 220, column: 18, scope: !20935)
!20938 = !DILocation(line: 220, column: 26, scope: !20935)
!20939 = !DILocation(line: 220, column: 29, scope: !20935)
!20940 = !DILocation(line: 220, column: 33, scope: !20935)
!20941 = !DILocation(line: 220, column: 44, scope: !20935)
!20942 = !DILocation(line: 220, column: 9, scope: !20935)
!20943 = !DILocation(line: 223, column: 11, scope: !20944)
!20944 = distinct !DILexicalBlock(scope: !20935, file: !1756, line: 222, column: 9)
!20945 = !DILocation(line: 223, column: 14, scope: !20944)
!20946 = !DILocation(line: 223, column: 18, scope: !20944)
!20947 = !DILocation(line: 223, column: 24, scope: !20944)
!20948 = !DILocation(line: 223, column: 33, scope: !20944)
!20949 = !DILocation(line: 224, column: 22, scope: !20944)
!20950 = !DILocation(line: 224, column: 25, scope: !20944)
!20951 = !DILocation(line: 224, column: 29, scope: !20944)
!20952 = !DILocation(line: 224, column: 35, scope: !20944)
!20953 = !DILocation(line: 224, column: 41, scope: !20944)
!20954 = !DILocation(line: 225, column: 22, scope: !20944)
!20955 = !DILocation(line: 224, column: 11, scope: !20944)
!20956 = !DILocation(line: 226, column: 24, scope: !20944)
!20957 = !DILocation(line: 226, column: 27, scope: !20944)
!20958 = !DILocation(line: 226, column: 31, scope: !20944)
!20959 = !DILocation(line: 226, column: 37, scope: !20944)
!20960 = !DILocation(line: 226, column: 11, scope: !20944)
!20961 = !DILocation(line: 229, column: 14, scope: !20916)
!20962 = !DILocation(line: 229, column: 7, scope: !20916)
!20963 = !DILocation(line: 231, column: 1, scope: !20902)
!20964 = distinct !DISubprogram(name: "simple_new", scope: !1756, file: !1756, line: 137, type: !20965, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!20965 = !DISubroutineType(types: !20966)
!20966 = !{!1754, !1720, !831}
!20967 = !DILocalVariable(name: "source", arg: 1, scope: !20964, file: !1756, line: 137, type: !1720)
!20968 = !DILocation(line: 137, column: 19, scope: !20964)
!20969 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !20964, file: !1756, line: 137, type: !831)
!20970 = !DILocation(line: 137, column: 39, scope: !20964)
!20971 = !DILocalVariable(name: "s", scope: !20964, file: !1756, line: 139, type: !1754)
!20972 = !DILocation(line: 139, column: 27, scope: !20964)
!20973 = !DILocation(line: 139, column: 31, scope: !20964)
!20974 = !DILocation(line: 140, column: 15, scope: !20964)
!20975 = !DILocation(line: 140, column: 3, scope: !20964)
!20976 = !DILocation(line: 140, column: 6, scope: !20964)
!20977 = !DILocation(line: 140, column: 13, scope: !20964)
!20978 = !DILocation(line: 141, column: 3, scope: !20964)
!20979 = !DILocation(line: 141, column: 6, scope: !20964)
!20980 = !DILocation(line: 141, column: 14, scope: !20964)
!20981 = !DILocation(line: 142, column: 20, scope: !20964)
!20982 = !DILocation(line: 142, column: 3, scope: !20964)
!20983 = !DILocation(line: 142, column: 6, scope: !20964)
!20984 = !DILocation(line: 142, column: 18, scope: !20964)
!20985 = !DILocation(line: 143, column: 10, scope: !20964)
!20986 = !DILocation(line: 143, column: 3, scope: !20964)
!20987 = distinct !DISubprogram(name: "get_nonce", scope: !1756, file: !1756, line: 151, type: !20988, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!20988 = !DISubroutineType(types: !20989)
!20989 = !{null, !53, !55, !55}
!20990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1082, line: 8, size: 128, elements: !20991)
!20991 = !{!20992, !20993}
!20992 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20990, file: !1082, line: 10, baseType: !368, size: 64)
!20993 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !20990, file: !1082, line: 11, baseType: !1086, size: 64, offset: 64)
!20994 = !DILocalVariable(name: "buffer", arg: 1, scope: !20987, file: !1756, line: 151, type: !53)
!20995 = !DILocation(line: 151, column: 18, scope: !20987)
!20996 = !DILocalVariable(name: "bufsize", arg: 2, scope: !20987, file: !1756, line: 151, type: !55)
!20997 = !DILocation(line: 151, column: 33, scope: !20987)
!20998 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !20987, file: !1756, line: 151, type: !55)
!20999 = !DILocation(line: 151, column: 49, scope: !20987)
!21000 = !DILocalVariable(name: "buf", scope: !20987, file: !1756, line: 153, type: !9)
!21001 = !DILocation(line: 153, column: 9, scope: !20987)
!21002 = !DILocation(line: 153, column: 15, scope: !20987)
!21003 = !DILocalVariable(name: "seeded", scope: !20987, file: !1756, line: 154, type: !661)
!21004 = !DILocation(line: 154, column: 11, scope: !20987)
!21005 = !DILocalVariable(name: "fd", scope: !20987, file: !1756, line: 157, type: !7)
!21006 = !DILocation(line: 157, column: 7, scope: !20987)
!21007 = !DILocation(line: 157, column: 12, scope: !20987)
!21008 = !DILocation(line: 158, column: 12, scope: !21009)
!21009 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 158, column: 7)
!21010 = !DILocation(line: 158, column: 9, scope: !21009)
!21011 = !DILocation(line: 158, column: 7, scope: !20987)
!21012 = !DILocation(line: 160, column: 22, scope: !21013)
!21013 = distinct !DILexicalBlock(scope: !21009, file: !1756, line: 159, column: 5)
!21014 = !DILocation(line: 160, column: 26, scope: !21013)
!21015 = !DILocation(line: 160, column: 31, scope: !21013)
!21016 = !DILocation(line: 160, column: 16, scope: !21013)
!21017 = !DILocation(line: 160, column: 14, scope: !21013)
!21018 = !DILocation(line: 161, column: 11, scope: !21019)
!21019 = distinct !DILexicalBlock(scope: !21013, file: !1756, line: 161, column: 11)
!21020 = !DILocation(line: 161, column: 18, scope: !21019)
!21021 = !DILocation(line: 161, column: 11, scope: !21013)
!21022 = !DILocation(line: 162, column: 16, scope: !21019)
!21023 = !DILocation(line: 162, column: 9, scope: !21019)
!21024 = !DILocation(line: 163, column: 14, scope: !21013)
!21025 = !DILocation(line: 163, column: 7, scope: !21013)
!21026 = !DILocation(line: 164, column: 5, scope: !21013)
!21027 = !DILocation(line: 177, column: 3, scope: !21028)
!21028 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 177, column: 3)
!21029 = !DILocation(line: 177, column: 3, scope: !20987)
!21030 = !DILocalVariable(name: "v", scope: !21031, file: !1756, line: 177, type: !20990)
!21031 = distinct !DILexicalBlock(scope: !21028, file: !1756, line: 177, column: 3)
!21032 = !DILocation(line: 177, column: 3, scope: !21031)
!21033 = !DILocalVariable(name: "nbytes", scope: !21031, file: !1756, line: 177, type: !55)
!21034 = !DILocation(line: 178, column: 3, scope: !21035)
!21035 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 178, column: 3)
!21036 = !DILocation(line: 178, column: 3, scope: !20987)
!21037 = !DILocalVariable(name: "v", scope: !21038, file: !1756, line: 178, type: !111)
!21038 = distinct !DILexicalBlock(scope: !21035, file: !1756, line: 178, column: 3)
!21039 = !DILocation(line: 178, column: 3, scope: !21038)
!21040 = !DILocalVariable(name: "nbytes", scope: !21038, file: !1756, line: 178, type: !55)
!21041 = !DILocation(line: 179, column: 3, scope: !21042)
!21042 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 179, column: 3)
!21043 = !DILocation(line: 179, column: 3, scope: !20987)
!21044 = !DILocalVariable(name: "v", scope: !21045, file: !1756, line: 179, type: !111)
!21045 = distinct !DILexicalBlock(scope: !21042, file: !1756, line: 179, column: 3)
!21046 = !DILocation(line: 179, column: 3, scope: !21045)
!21047 = !DILocalVariable(name: "nbytes", scope: !21045, file: !1756, line: 179, type: !55)
!21048 = !DILocation(line: 180, column: 3, scope: !21049)
!21049 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 180, column: 3)
!21050 = !DILocation(line: 180, column: 3, scope: !20987)
!21051 = !DILocalVariable(name: "v", scope: !21052, file: !1756, line: 180, type: !127)
!21052 = distinct !DILexicalBlock(scope: !21049, file: !1756, line: 180, column: 3)
!21053 = !DILocation(line: 180, column: 3, scope: !21052)
!21054 = !DILocalVariable(name: "nbytes", scope: !21052, file: !1756, line: 180, type: !55)
!21055 = !DILocation(line: 181, column: 3, scope: !21056)
!21056 = distinct !DILexicalBlock(scope: !20987, file: !1756, line: 181, column: 3)
!21057 = !DILocation(line: 181, column: 3, scope: !20987)
!21058 = !DILocalVariable(name: "v", scope: !21059, file: !1756, line: 181, type: !127)
!21059 = distinct !DILexicalBlock(scope: !21056, file: !1756, line: 181, column: 3)
!21060 = !DILocation(line: 181, column: 3, scope: !21059)
!21061 = !DILocalVariable(name: "nbytes", scope: !21059, file: !1756, line: 181, type: !55)
!21062 = !DILocation(line: 189, column: 1, scope: !20987)
!21063 = distinct !DISubprogram(name: "randread_error", scope: !1756, file: !1756, line: 124, type: !1761, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21064 = !DILocalVariable(name: "file_name", arg: 1, scope: !21063, file: !1756, line: 124, type: !831)
!21065 = !DILocation(line: 124, column: 29, scope: !21063)
!21066 = !DILocation(line: 126, column: 7, scope: !21067)
!21067 = distinct !DILexicalBlock(scope: !21063, file: !1756, line: 126, column: 7)
!21068 = !DILocation(line: 126, column: 7, scope: !21063)
!21069 = !DILocation(line: 127, column: 12, scope: !21067)
!21070 = !DILocation(line: 127, column: 26, scope: !21067)
!21071 = !DILocation(line: 128, column: 12, scope: !21067)
!21072 = !DILocation(line: 128, column: 18, scope: !21067)
!21073 = !DILocation(line: 128, column: 25, scope: !21067)
!21074 = !DILocation(line: 128, column: 48, scope: !21067)
!21075 = !DILocation(line: 129, column: 19, scope: !21067)
!21076 = !DILocation(line: 129, column: 12, scope: !21067)
!21077 = !DILocation(line: 127, column: 5, scope: !21067)
!21078 = !DILocation(line: 130, column: 3, scope: !21063)
!21079 = distinct !DISubprogram(name: "randread_set_handler", scope: !1756, file: !1756, line: 242, type: !21080, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21080 = !DISubroutineType(types: !21081)
!21081 = !{null, !1754, !1760}
!21082 = !DILocalVariable(name: "s", arg: 1, scope: !21079, file: !1756, line: 242, type: !1754)
!21083 = !DILocation(line: 242, column: 47, scope: !21079)
!21084 = !DILocalVariable(name: "handler", arg: 2, scope: !21079, file: !1756, line: 242, type: !1760)
!21085 = !DILocation(line: 242, column: 57, scope: !21079)
!21086 = !DILocation(line: 244, column: 16, scope: !21079)
!21087 = !DILocation(line: 244, column: 3, scope: !21079)
!21088 = !DILocation(line: 244, column: 6, scope: !21079)
!21089 = !DILocation(line: 244, column: 14, scope: !21079)
!21090 = !DILocation(line: 245, column: 1, scope: !21079)
!21091 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1756, file: !1756, line: 248, type: !21092, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21092 = !DISubroutineType(types: !21093)
!21093 = !{null, !1754, !831}
!21094 = !DILocalVariable(name: "s", arg: 1, scope: !21091, file: !1756, line: 248, type: !1754)
!21095 = !DILocation(line: 248, column: 51, scope: !21091)
!21096 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !21091, file: !1756, line: 248, type: !831)
!21097 = !DILocation(line: 248, column: 66, scope: !21091)
!21098 = !DILocation(line: 250, column: 20, scope: !21091)
!21099 = !DILocation(line: 250, column: 3, scope: !21091)
!21100 = !DILocation(line: 250, column: 6, scope: !21091)
!21101 = !DILocation(line: 250, column: 18, scope: !21091)
!21102 = !DILocation(line: 251, column: 1, scope: !21091)
!21103 = distinct !DISubprogram(name: "randread", scope: !1756, file: !1756, line: 326, type: !21104, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21104 = !DISubroutineType(types: !21105)
!21105 = !{null, !1754, !53, !55}
!21106 = !DILocalVariable(name: "s", arg: 1, scope: !21103, file: !1756, line: 326, type: !1754)
!21107 = !DILocation(line: 326, column: 35, scope: !21103)
!21108 = !DILocalVariable(name: "buf", arg: 2, scope: !21103, file: !1756, line: 326, type: !53)
!21109 = !DILocation(line: 326, column: 44, scope: !21103)
!21110 = !DILocalVariable(name: "size", arg: 3, scope: !21103, file: !1756, line: 326, type: !55)
!21111 = !DILocation(line: 326, column: 56, scope: !21103)
!21112 = !DILocation(line: 328, column: 7, scope: !21113)
!21113 = distinct !DILexicalBlock(scope: !21103, file: !1756, line: 328, column: 7)
!21114 = !DILocation(line: 328, column: 10, scope: !21113)
!21115 = !DILocation(line: 328, column: 7, scope: !21103)
!21116 = !DILocation(line: 329, column: 17, scope: !21113)
!21117 = !DILocation(line: 329, column: 20, scope: !21113)
!21118 = !DILocation(line: 329, column: 25, scope: !21113)
!21119 = !DILocation(line: 329, column: 5, scope: !21113)
!21120 = !DILocation(line: 331, column: 17, scope: !21113)
!21121 = !DILocation(line: 331, column: 20, scope: !21113)
!21122 = !DILocation(line: 331, column: 24, scope: !21113)
!21123 = !DILocation(line: 331, column: 31, scope: !21113)
!21124 = !DILocation(line: 331, column: 36, scope: !21113)
!21125 = !DILocation(line: 331, column: 5, scope: !21113)
!21126 = !DILocation(line: 332, column: 1, scope: !21103)
!21127 = distinct !DISubprogram(name: "readsource", scope: !1756, file: !1756, line: 258, type: !21128, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21128 = !DISubroutineType(types: !21129)
!21129 = !{null, !1754, !21130, !55}
!21130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!21131 = !DILocalVariable(name: "s", arg: 1, scope: !21127, file: !1756, line: 258, type: !1754)
!21132 = !DILocation(line: 258, column: 37, scope: !21127)
!21133 = !DILocalVariable(name: "p", arg: 2, scope: !21127, file: !1756, line: 258, type: !21130)
!21134 = !DILocation(line: 258, column: 55, scope: !21127)
!21135 = !DILocalVariable(name: "size", arg: 3, scope: !21127, file: !1756, line: 258, type: !55)
!21136 = !DILocation(line: 258, column: 65, scope: !21127)
!21137 = !DILocation(line: 260, column: 3, scope: !21127)
!21138 = !DILocalVariable(name: "inbytes", scope: !21139, file: !1756, line: 262, type: !55)
!21139 = distinct !DILexicalBlock(scope: !21127, file: !1756, line: 261, column: 5)
!21140 = !DILocation(line: 262, column: 14, scope: !21139)
!21141 = !DILocation(line: 262, column: 24, scope: !21139)
!21142 = !DILocalVariable(name: "fread_errno", scope: !21139, file: !1756, line: 263, type: !7)
!21143 = !DILocation(line: 263, column: 11, scope: !21139)
!21144 = !DILocation(line: 263, column: 25, scope: !21139)
!21145 = !DILocation(line: 264, column: 12, scope: !21139)
!21146 = !DILocation(line: 264, column: 9, scope: !21139)
!21147 = !DILocation(line: 265, column: 15, scope: !21139)
!21148 = !DILocation(line: 265, column: 12, scope: !21139)
!21149 = !DILocation(line: 266, column: 11, scope: !21150)
!21150 = distinct !DILexicalBlock(scope: !21139, file: !1756, line: 266, column: 11)
!21151 = !DILocation(line: 266, column: 16, scope: !21150)
!21152 = !DILocation(line: 266, column: 11, scope: !21139)
!21153 = !DILocation(line: 267, column: 9, scope: !21150)
!21154 = !DILocation(line: 268, column: 16, scope: !21139)
!21155 = !DILocation(line: 268, column: 37, scope: !21139)
!21156 = !DILocation(line: 268, column: 7, scope: !21139)
!21157 = !DILocation(line: 268, column: 13, scope: !21139)
!21158 = !DILocation(line: 269, column: 7, scope: !21139)
!21159 = !DILocation(line: 269, column: 10, scope: !21139)
!21160 = !DILocation(line: 269, column: 19, scope: !21139)
!21161 = !DILocation(line: 269, column: 22, scope: !21139)
!21162 = distinct !{!21162, !21137, !21163}
!21163 = !DILocation(line: 270, column: 5, scope: !21127)
!21164 = !DILocation(line: 271, column: 1, scope: !21127)
!21165 = distinct !DISubprogram(name: "readisaac", scope: !1756, file: !1756, line: 278, type: !21166, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21166 = !DISubroutineType(types: !21167)
!21167 = !{null, !21168, !53, !55}
!21168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!21169 = !DILocalVariable(name: "isaac", arg: 1, scope: !21165, file: !1756, line: 278, type: !21168)
!21170 = !DILocation(line: 278, column: 26, scope: !21165)
!21171 = !DILocalVariable(name: "p", arg: 2, scope: !21165, file: !1756, line: 278, type: !53)
!21172 = !DILocation(line: 278, column: 39, scope: !21165)
!21173 = !DILocalVariable(name: "size", arg: 3, scope: !21165, file: !1756, line: 278, type: !55)
!21174 = !DILocation(line: 278, column: 49, scope: !21165)
!21175 = !DILocalVariable(name: "inbytes", scope: !21165, file: !1756, line: 280, type: !55)
!21176 = !DILocation(line: 280, column: 10, scope: !21165)
!21177 = !DILocation(line: 280, column: 20, scope: !21165)
!21178 = !DILocation(line: 280, column: 27, scope: !21165)
!21179 = !DILocation(line: 282, column: 3, scope: !21165)
!21180 = !DILocalVariable(name: "char_p", scope: !21181, file: !1756, line: 284, type: !9)
!21181 = distinct !DILexicalBlock(scope: !21165, file: !1756, line: 283, column: 5)
!21182 = !DILocation(line: 284, column: 13, scope: !21181)
!21183 = !DILocation(line: 284, column: 22, scope: !21181)
!21184 = !DILocation(line: 286, column: 11, scope: !21185)
!21185 = distinct !DILexicalBlock(scope: !21181, file: !1756, line: 286, column: 11)
!21186 = !DILocation(line: 286, column: 19, scope: !21185)
!21187 = !DILocation(line: 286, column: 16, scope: !21185)
!21188 = !DILocation(line: 286, column: 11, scope: !21181)
!21189 = !DILocation(line: 288, column: 19, scope: !21190)
!21190 = distinct !DILexicalBlock(scope: !21185, file: !1756, line: 287, column: 9)
!21191 = !DILocation(line: 288, column: 22, scope: !21190)
!21192 = !DILocation(line: 288, column: 29, scope: !21190)
!21193 = !DILocation(line: 288, column: 34, scope: !21190)
!21194 = !DILocation(line: 288, column: 36, scope: !21190)
!21195 = !DILocation(line: 288, column: 52, scope: !21190)
!21196 = !DILocation(line: 288, column: 50, scope: !21190)
!21197 = !DILocation(line: 288, column: 61, scope: !21190)
!21198 = !DILocation(line: 288, column: 11, scope: !21190)
!21199 = !DILocation(line: 289, column: 29, scope: !21190)
!21200 = !DILocation(line: 289, column: 39, scope: !21190)
!21201 = !DILocation(line: 289, column: 37, scope: !21190)
!21202 = !DILocation(line: 289, column: 11, scope: !21190)
!21203 = !DILocation(line: 289, column: 18, scope: !21190)
!21204 = !DILocation(line: 289, column: 27, scope: !21190)
!21205 = !DILocation(line: 290, column: 11, scope: !21190)
!21206 = !DILocation(line: 293, column: 15, scope: !21181)
!21207 = !DILocation(line: 293, column: 18, scope: !21181)
!21208 = !DILocation(line: 293, column: 25, scope: !21181)
!21209 = !DILocation(line: 293, column: 30, scope: !21181)
!21210 = !DILocation(line: 293, column: 32, scope: !21181)
!21211 = !DILocation(line: 293, column: 48, scope: !21181)
!21212 = !DILocation(line: 293, column: 46, scope: !21181)
!21213 = !DILocation(line: 293, column: 57, scope: !21181)
!21214 = !DILocation(line: 293, column: 7, scope: !21181)
!21215 = !DILocation(line: 294, column: 11, scope: !21181)
!21216 = !DILocation(line: 294, column: 20, scope: !21181)
!21217 = !DILocation(line: 294, column: 18, scope: !21181)
!21218 = !DILocation(line: 294, column: 9, scope: !21181)
!21219 = !DILocation(line: 295, column: 15, scope: !21181)
!21220 = !DILocation(line: 295, column: 12, scope: !21181)
!21221 = !DILocation(line: 299, column: 11, scope: !21222)
!21222 = distinct !DILexicalBlock(scope: !21181, file: !1756, line: 299, column: 11)
!21223 = !DILocation(line: 299, column: 11, scope: !21181)
!21224 = !DILocalVariable(name: "wp", scope: !21225, file: !1756, line: 301, type: !1792)
!21225 = distinct !DILexicalBlock(scope: !21222, file: !1756, line: 300, column: 9)
!21226 = !DILocation(line: 301, column: 23, scope: !21225)
!21227 = !DILocation(line: 301, column: 28, scope: !21225)
!21228 = !DILocation(line: 302, column: 11, scope: !21225)
!21229 = !DILocation(line: 302, column: 33, scope: !21225)
!21230 = !DILocation(line: 302, column: 30, scope: !21225)
!21231 = !DILocation(line: 304, column: 30, scope: !21232)
!21232 = distinct !DILexicalBlock(scope: !21225, file: !1756, line: 303, column: 13)
!21233 = !DILocation(line: 304, column: 37, scope: !21232)
!21234 = !DILocation(line: 304, column: 44, scope: !21232)
!21235 = !DILocation(line: 304, column: 15, scope: !21232)
!21236 = !DILocation(line: 305, column: 18, scope: !21232)
!21237 = !DILocation(line: 306, column: 20, scope: !21232)
!21238 = !DILocation(line: 307, column: 19, scope: !21239)
!21239 = distinct !DILexicalBlock(scope: !21232, file: !1756, line: 307, column: 19)
!21240 = !DILocation(line: 307, column: 24, scope: !21239)
!21241 = !DILocation(line: 307, column: 19, scope: !21232)
!21242 = !DILocation(line: 309, column: 19, scope: !21243)
!21243 = distinct !DILexicalBlock(scope: !21239, file: !1756, line: 308, column: 17)
!21244 = !DILocation(line: 309, column: 26, scope: !21243)
!21245 = !DILocation(line: 309, column: 35, scope: !21243)
!21246 = !DILocation(line: 310, column: 19, scope: !21243)
!21247 = distinct !{!21247, !21228, !21248}
!21248 = !DILocation(line: 312, column: 13, scope: !21225)
!21249 = !DILocation(line: 313, column: 15, scope: !21225)
!21250 = !DILocation(line: 313, column: 13, scope: !21225)
!21251 = !DILocation(line: 314, column: 9, scope: !21225)
!21252 = !DILocation(line: 316, column: 22, scope: !21181)
!21253 = !DILocation(line: 316, column: 29, scope: !21181)
!21254 = !DILocation(line: 316, column: 36, scope: !21181)
!21255 = !DILocation(line: 316, column: 43, scope: !21181)
!21256 = !DILocation(line: 316, column: 48, scope: !21181)
!21257 = !DILocation(line: 316, column: 7, scope: !21181)
!21258 = !DILocation(line: 317, column: 15, scope: !21181)
!21259 = distinct !{!21259, !21179, !21260}
!21260 = !DILocation(line: 318, column: 5, scope: !21165)
!21261 = !DILocation(line: 319, column: 1, scope: !21165)
!21262 = distinct !DISubprogram(name: "randread_free", scope: !1756, file: !1756, line: 341, type: !21263, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1717, retainedNodes: !298)
!21263 = !DISubroutineType(types: !21264)
!21264 = !{!7, !1754}
!21265 = !DILocalVariable(name: "s", arg: 1, scope: !21262, file: !1756, line: 341, type: !1754)
!21266 = !DILocation(line: 341, column: 40, scope: !21262)
!21267 = !DILocalVariable(name: "source", scope: !21262, file: !1756, line: 343, type: !1720)
!21268 = !DILocation(line: 343, column: 9, scope: !21262)
!21269 = !DILocation(line: 343, column: 18, scope: !21262)
!21270 = !DILocation(line: 343, column: 21, scope: !21262)
!21271 = !DILocation(line: 344, column: 19, scope: !21262)
!21272 = !DILocation(line: 344, column: 3, scope: !21262)
!21273 = !DILocation(line: 345, column: 9, scope: !21262)
!21274 = !DILocation(line: 345, column: 3, scope: !21262)
!21275 = !DILocation(line: 346, column: 11, scope: !21262)
!21276 = !DILocation(line: 346, column: 28, scope: !21262)
!21277 = !DILocation(line: 346, column: 20, scope: !21262)
!21278 = !DILocation(line: 346, column: 3, scope: !21262)
!21279 = distinct !DISubprogram(name: "isaac_refill", scope: !21280, file: !21280, line: 90, type: !21281, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1793, retainedNodes: !298)
!21280 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21281 = !DISubroutineType(types: !21282)
!21282 = !{null, !21283, !1792}
!21283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21284, size: 64)
!21284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !1774, line: 56, size: 16576, elements: !21285)
!21285 = !{!21286, !21287, !21288, !21289}
!21286 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !21284, file: !1774, line: 58, baseType: !1777, size: 16384)
!21287 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !21284, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16384)
!21288 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !21284, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16448)
!21289 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !21284, file: !1774, line: 59, baseType: !1778, size: 64, offset: 16512)
!21290 = !DILocalVariable(name: "s", arg: 1, scope: !21279, file: !21280, line: 90, type: !21283)
!21291 = !DILocation(line: 90, column: 35, scope: !21279)
!21292 = !DILocalVariable(name: "result", arg: 2, scope: !21279, file: !21280, line: 90, type: !1792)
!21293 = !DILocation(line: 90, column: 49, scope: !21279)
!21294 = !DILocalVariable(name: "a", scope: !21279, file: !21280, line: 93, type: !1778)
!21295 = !DILocation(line: 93, column: 14, scope: !21279)
!21296 = !DILocation(line: 93, column: 18, scope: !21279)
!21297 = !DILocation(line: 93, column: 21, scope: !21279)
!21298 = !DILocalVariable(name: "b", scope: !21279, file: !21280, line: 94, type: !1778)
!21299 = !DILocation(line: 94, column: 14, scope: !21279)
!21300 = !DILocation(line: 94, column: 18, scope: !21279)
!21301 = !DILocation(line: 94, column: 21, scope: !21279)
!21302 = !DILocation(line: 94, column: 28, scope: !21279)
!21303 = !DILocation(line: 94, column: 31, scope: !21279)
!21304 = !DILocation(line: 94, column: 26, scope: !21279)
!21305 = !DILocation(line: 94, column: 23, scope: !21279)
!21306 = !DILocalVariable(name: "m", scope: !21279, file: !21280, line: 97, type: !1792)
!21307 = !DILocation(line: 97, column: 15, scope: !21279)
!21308 = !DILocation(line: 97, column: 19, scope: !21279)
!21309 = !DILocation(line: 97, column: 22, scope: !21279)
!21310 = !DILocalVariable(name: "r", scope: !21279, file: !21280, line: 98, type: !1792)
!21311 = !DILocation(line: 98, column: 15, scope: !21279)
!21312 = !DILocation(line: 98, column: 19, scope: !21279)
!21313 = !DILocation(line: 116, column: 3, scope: !21279)
!21314 = !DILocalVariable(name: "x", scope: !21315, file: !21280, line: 118, type: !1778)
!21315 = distinct !DILexicalBlock(scope: !21316, file: !21280, line: 118, column: 7)
!21316 = distinct !DILexicalBlock(scope: !21279, file: !21280, line: 117, column: 5)
!21317 = !DILocation(line: 118, column: 7, scope: !21315)
!21318 = !DILocalVariable(name: "y", scope: !21315, file: !21280, line: 118, type: !1778)
!21319 = !DILocalVariable(name: "x", scope: !21320, file: !21280, line: 119, type: !1778)
!21320 = distinct !DILexicalBlock(scope: !21316, file: !21280, line: 119, column: 7)
!21321 = !DILocation(line: 119, column: 7, scope: !21320)
!21322 = !DILocalVariable(name: "y", scope: !21320, file: !21280, line: 119, type: !1778)
!21323 = !DILocalVariable(name: "x", scope: !21324, file: !21280, line: 120, type: !1778)
!21324 = distinct !DILexicalBlock(scope: !21316, file: !21280, line: 120, column: 7)
!21325 = !DILocation(line: 120, column: 7, scope: !21324)
!21326 = !DILocalVariable(name: "y", scope: !21324, file: !21280, line: 120, type: !1778)
!21327 = !DILocalVariable(name: "x", scope: !21328, file: !21280, line: 121, type: !1778)
!21328 = distinct !DILexicalBlock(scope: !21316, file: !21280, line: 121, column: 7)
!21329 = !DILocation(line: 121, column: 7, scope: !21328)
!21330 = !DILocalVariable(name: "y", scope: !21328, file: !21280, line: 121, type: !1778)
!21331 = !DILocation(line: 122, column: 9, scope: !21316)
!21332 = !DILocation(line: 123, column: 5, scope: !21316)
!21333 = !DILocation(line: 124, column: 13, scope: !21279)
!21334 = !DILocation(line: 124, column: 21, scope: !21279)
!21335 = !DILocation(line: 124, column: 24, scope: !21279)
!21336 = !DILocation(line: 124, column: 26, scope: !21279)
!21337 = !DILocation(line: 124, column: 19, scope: !21279)
!21338 = distinct !{!21338, !21313, !21339}
!21339 = !DILocation(line: 124, column: 32, scope: !21279)
!21340 = !DILocation(line: 126, column: 3, scope: !21279)
!21341 = !DILocalVariable(name: "x", scope: !21342, file: !21280, line: 128, type: !1778)
!21342 = distinct !DILexicalBlock(scope: !21343, file: !21280, line: 128, column: 7)
!21343 = distinct !DILexicalBlock(scope: !21279, file: !21280, line: 127, column: 5)
!21344 = !DILocation(line: 128, column: 7, scope: !21342)
!21345 = !DILocalVariable(name: "y", scope: !21342, file: !21280, line: 128, type: !1778)
!21346 = !DILocalVariable(name: "x", scope: !21347, file: !21280, line: 129, type: !1778)
!21347 = distinct !DILexicalBlock(scope: !21343, file: !21280, line: 129, column: 7)
!21348 = !DILocation(line: 129, column: 7, scope: !21347)
!21349 = !DILocalVariable(name: "y", scope: !21347, file: !21280, line: 129, type: !1778)
!21350 = !DILocalVariable(name: "x", scope: !21351, file: !21280, line: 130, type: !1778)
!21351 = distinct !DILexicalBlock(scope: !21343, file: !21280, line: 130, column: 7)
!21352 = !DILocation(line: 130, column: 7, scope: !21351)
!21353 = !DILocalVariable(name: "y", scope: !21351, file: !21280, line: 130, type: !1778)
!21354 = !DILocalVariable(name: "x", scope: !21355, file: !21280, line: 131, type: !1778)
!21355 = distinct !DILexicalBlock(scope: !21343, file: !21280, line: 131, column: 7)
!21356 = !DILocation(line: 131, column: 7, scope: !21355)
!21357 = !DILocalVariable(name: "y", scope: !21355, file: !21280, line: 131, type: !1778)
!21358 = !DILocation(line: 132, column: 9, scope: !21343)
!21359 = !DILocation(line: 133, column: 5, scope: !21343)
!21360 = !DILocation(line: 134, column: 13, scope: !21279)
!21361 = !DILocation(line: 134, column: 21, scope: !21279)
!21362 = !DILocation(line: 134, column: 24, scope: !21279)
!21363 = !DILocation(line: 134, column: 26, scope: !21279)
!21364 = !DILocation(line: 134, column: 19, scope: !21279)
!21365 = distinct !{!21365, !21340, !21366}
!21366 = !DILocation(line: 134, column: 39, scope: !21279)
!21367 = !DILocation(line: 136, column: 10, scope: !21279)
!21368 = !DILocation(line: 136, column: 3, scope: !21279)
!21369 = !DILocation(line: 136, column: 6, scope: !21279)
!21370 = !DILocation(line: 136, column: 8, scope: !21279)
!21371 = !DILocation(line: 137, column: 10, scope: !21279)
!21372 = !DILocation(line: 137, column: 3, scope: !21279)
!21373 = !DILocation(line: 137, column: 6, scope: !21279)
!21374 = !DILocation(line: 137, column: 8, scope: !21279)
!21375 = !DILocation(line: 138, column: 1, scope: !21279)
!21376 = distinct !DISubprogram(name: "ind", scope: !21280, file: !21280, line: 68, type: !21377, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1793, retainedNodes: !298)
!21377 = !DISubroutineType(types: !21378)
!21378 = !{!1778, !1796, !1778}
!21379 = !DILocalVariable(name: "m", arg: 1, scope: !21376, file: !21280, line: 68, type: !1796)
!21380 = !DILocation(line: 68, column: 24, scope: !21376)
!21381 = !DILocalVariable(name: "x", arg: 2, scope: !21376, file: !21280, line: 68, type: !1778)
!21382 = !DILocation(line: 68, column: 38, scope: !21376)
!21383 = !DILocalVariable(name: "void_m", scope: !21384, file: !21280, line: 75, type: !831)
!21384 = distinct !DILexicalBlock(scope: !21385, file: !21280, line: 71, column: 5)
!21385 = distinct !DILexicalBlock(scope: !21376, file: !21280, line: 70, column: 7)
!21386 = !DILocation(line: 75, column: 19, scope: !21384)
!21387 = !DILocation(line: 75, column: 28, scope: !21384)
!21388 = !DILocalVariable(name: "base_p", scope: !21384, file: !21280, line: 76, type: !183)
!21389 = !DILocation(line: 76, column: 19, scope: !21384)
!21390 = !DILocation(line: 76, column: 28, scope: !21384)
!21391 = !DILocalVariable(name: "word_p", scope: !21384, file: !21280, line: 77, type: !831)
!21392 = !DILocation(line: 77, column: 19, scope: !21384)
!21393 = !DILocation(line: 77, column: 28, scope: !21384)
!21394 = !DILocation(line: 77, column: 38, scope: !21384)
!21395 = !DILocation(line: 77, column: 40, scope: !21384)
!21396 = !DILocation(line: 77, column: 35, scope: !21384)
!21397 = !DILocalVariable(name: "p", scope: !21384, file: !21280, line: 78, type: !1796)
!21398 = !DILocation(line: 78, column: 25, scope: !21384)
!21399 = !DILocation(line: 78, column: 29, scope: !21384)
!21400 = !DILocation(line: 79, column: 15, scope: !21384)
!21401 = !DILocation(line: 79, column: 14, scope: !21384)
!21402 = !DILocation(line: 79, column: 7, scope: !21384)
!21403 = distinct !DISubprogram(name: "just", scope: !21280, file: !21280, line: 60, type: !21404, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1793, retainedNodes: !298)
!21404 = !DISubroutineType(types: !21405)
!21405 = !{!1778, !1778}
!21406 = !DILocalVariable(name: "a", arg: 1, scope: !21403, file: !21280, line: 60, type: !1778)
!21407 = !DILocation(line: 60, column: 18, scope: !21403)
!21408 = !DILocalVariable(name: "desired_bits", scope: !21403, file: !21280, line: 62, type: !1778)
!21409 = !DILocation(line: 62, column: 14, scope: !21403)
!21410 = !DILocation(line: 63, column: 10, scope: !21403)
!21411 = !DILocation(line: 63, column: 14, scope: !21403)
!21412 = !DILocation(line: 63, column: 12, scope: !21403)
!21413 = !DILocation(line: 63, column: 3, scope: !21403)
!21414 = distinct !DISubprogram(name: "isaac_seed", scope: !21280, file: !21280, line: 248, type: !21415, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1793, retainedNodes: !298)
!21415 = !DISubroutineType(types: !21416)
!21416 = !{null, !21283}
!21417 = !DILocalVariable(name: "s", arg: 1, scope: !21414, file: !21280, line: 248, type: !21283)
!21418 = !DILocation(line: 248, column: 33, scope: !21414)
!21419 = !DILocalVariable(name: "a", scope: !21414, file: !21280, line: 250, type: !1778)
!21420 = !DILocation(line: 250, column: 14, scope: !21414)
!21421 = !DILocalVariable(name: "b", scope: !21414, file: !21280, line: 251, type: !1778)
!21422 = !DILocation(line: 251, column: 14, scope: !21414)
!21423 = !DILocalVariable(name: "c", scope: !21414, file: !21280, line: 252, type: !1778)
!21424 = !DILocation(line: 252, column: 14, scope: !21414)
!21425 = !DILocalVariable(name: "d", scope: !21414, file: !21280, line: 253, type: !1778)
!21426 = !DILocation(line: 253, column: 14, scope: !21414)
!21427 = !DILocalVariable(name: "e", scope: !21414, file: !21280, line: 254, type: !1778)
!21428 = !DILocation(line: 254, column: 14, scope: !21414)
!21429 = !DILocalVariable(name: "f", scope: !21414, file: !21280, line: 255, type: !1778)
!21430 = !DILocation(line: 255, column: 14, scope: !21414)
!21431 = !DILocalVariable(name: "g", scope: !21414, file: !21280, line: 256, type: !1778)
!21432 = !DILocation(line: 256, column: 14, scope: !21414)
!21433 = !DILocalVariable(name: "h", scope: !21414, file: !21280, line: 257, type: !1778)
!21434 = !DILocation(line: 257, column: 14, scope: !21414)
!21435 = !DILocalVariable(name: "i", scope: !21436, file: !21280, line: 269, type: !7)
!21436 = distinct !DILexicalBlock(scope: !21414, file: !21280, line: 269, column: 3)
!21437 = !DILocation(line: 269, column: 3, scope: !21436)
!21438 = !DILocation(line: 269, column: 3, scope: !21439)
!21439 = distinct !DILexicalBlock(scope: !21436, file: !21280, line: 269, column: 3)
!21440 = !DILocation(line: 269, column: 3, scope: !21441)
!21441 = distinct !DILexicalBlock(scope: !21439, file: !21280, line: 269, column: 3)
!21442 = !DILocation(line: 269, column: 3, scope: !21443)
!21443 = distinct !DILexicalBlock(scope: !21441, file: !21280, line: 269, column: 3)
!21444 = !DILocation(line: 269, column: 3, scope: !21445)
!21445 = distinct !DILexicalBlock(scope: !21443, file: !21280, line: 269, column: 3)
!21446 = distinct !{!21446, !21438, !21438}
!21447 = !DILocalVariable(name: "i", scope: !21448, file: !21280, line: 270, type: !7)
!21448 = distinct !DILexicalBlock(scope: !21414, file: !21280, line: 270, column: 3)
!21449 = !DILocation(line: 270, column: 3, scope: !21448)
!21450 = !DILocation(line: 270, column: 3, scope: !21451)
!21451 = distinct !DILexicalBlock(scope: !21448, file: !21280, line: 270, column: 3)
!21452 = !DILocation(line: 270, column: 3, scope: !21453)
!21453 = distinct !DILexicalBlock(scope: !21451, file: !21280, line: 270, column: 3)
!21454 = !DILocation(line: 270, column: 3, scope: !21455)
!21455 = distinct !DILexicalBlock(scope: !21453, file: !21280, line: 270, column: 3)
!21456 = !DILocation(line: 270, column: 3, scope: !21457)
!21457 = distinct !DILexicalBlock(scope: !21455, file: !21280, line: 270, column: 3)
!21458 = distinct !{!21458, !21450, !21450}
!21459 = !DILocation(line: 272, column: 17, scope: !21414)
!21460 = !DILocation(line: 272, column: 20, scope: !21414)
!21461 = !DILocation(line: 272, column: 22, scope: !21414)
!21462 = !DILocation(line: 272, column: 10, scope: !21414)
!21463 = !DILocation(line: 272, column: 13, scope: !21414)
!21464 = !DILocation(line: 272, column: 15, scope: !21414)
!21465 = !DILocation(line: 272, column: 3, scope: !21414)
!21466 = !DILocation(line: 272, column: 6, scope: !21414)
!21467 = !DILocation(line: 272, column: 8, scope: !21414)
!21468 = !DILocation(line: 273, column: 1, scope: !21414)
!21469 = distinct !DISubprogram(name: "dup_safer", scope: !21470, file: !21470, line: 31, type: !15435, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !298)
!21470 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21471 = !DILocalVariable(name: "fd", arg: 1, scope: !21469, file: !21470, line: 31, type: !7)
!21472 = !DILocation(line: 31, column: 16, scope: !21469)
!21473 = !DILocation(line: 33, column: 17, scope: !21469)
!21474 = !DILocation(line: 33, column: 10, scope: !21469)
!21475 = !DILocation(line: 33, column: 3, scope: !21469)
!21476 = distinct !DISubprogram(name: "xsum", scope: !21477, file: !21477, line: 63, type: !21478, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1800, retainedNodes: !298)
!21477 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21478 = !DISubroutineType(types: !21479)
!21479 = !{!55, !55, !55}
!21480 = !DILocalVariable(name: "size1", arg: 1, scope: !21476, file: !21477, line: 63, type: !55)
!21481 = !DILocation(line: 63, column: 14, scope: !21476)
!21482 = !DILocalVariable(name: "size2", arg: 2, scope: !21476, file: !21477, line: 63, type: !55)
!21483 = !DILocation(line: 63, column: 28, scope: !21476)
!21484 = !DILocalVariable(name: "sum", scope: !21476, file: !21477, line: 65, type: !55)
!21485 = !DILocation(line: 65, column: 10, scope: !21476)
!21486 = !DILocation(line: 65, column: 16, scope: !21476)
!21487 = !DILocation(line: 65, column: 24, scope: !21476)
!21488 = !DILocation(line: 65, column: 22, scope: !21476)
!21489 = !DILocation(line: 66, column: 11, scope: !21476)
!21490 = !DILocation(line: 66, column: 18, scope: !21476)
!21491 = !DILocation(line: 66, column: 15, scope: !21476)
!21492 = !DILocation(line: 66, column: 26, scope: !21476)
!21493 = !DILocation(line: 66, column: 3, scope: !21476)
!21494 = distinct !DISubprogram(name: "xsum3", scope: !21477, file: !21477, line: 74, type: !9640, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1800, retainedNodes: !298)
!21495 = !DILocalVariable(name: "size1", arg: 1, scope: !21494, file: !21477, line: 74, type: !55)
!21496 = !DILocation(line: 74, column: 15, scope: !21494)
!21497 = !DILocalVariable(name: "size2", arg: 2, scope: !21494, file: !21477, line: 74, type: !55)
!21498 = !DILocation(line: 74, column: 29, scope: !21494)
!21499 = !DILocalVariable(name: "size3", arg: 3, scope: !21494, file: !21477, line: 74, type: !55)
!21500 = !DILocation(line: 74, column: 43, scope: !21494)
!21501 = !DILocation(line: 76, column: 22, scope: !21494)
!21502 = !DILocation(line: 76, column: 29, scope: !21494)
!21503 = !DILocation(line: 76, column: 16, scope: !21494)
!21504 = !DILocation(line: 76, column: 37, scope: !21494)
!21505 = !DILocation(line: 76, column: 10, scope: !21494)
!21506 = !DILocation(line: 76, column: 3, scope: !21494)
!21507 = distinct !DISubprogram(name: "xsum4", scope: !21477, file: !21477, line: 84, type: !21508, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1800, retainedNodes: !298)
!21508 = !DISubroutineType(types: !21509)
!21509 = !{!55, !55, !55, !55, !55}
!21510 = !DILocalVariable(name: "size1", arg: 1, scope: !21507, file: !21477, line: 84, type: !55)
!21511 = !DILocation(line: 84, column: 15, scope: !21507)
!21512 = !DILocalVariable(name: "size2", arg: 2, scope: !21507, file: !21477, line: 84, type: !55)
!21513 = !DILocation(line: 84, column: 29, scope: !21507)
!21514 = !DILocalVariable(name: "size3", arg: 3, scope: !21507, file: !21477, line: 84, type: !55)
!21515 = !DILocation(line: 84, column: 43, scope: !21507)
!21516 = !DILocalVariable(name: "size4", arg: 4, scope: !21507, file: !21477, line: 84, type: !55)
!21517 = !DILocation(line: 84, column: 57, scope: !21507)
!21518 = !DILocation(line: 86, column: 28, scope: !21507)
!21519 = !DILocation(line: 86, column: 35, scope: !21507)
!21520 = !DILocation(line: 86, column: 22, scope: !21507)
!21521 = !DILocation(line: 86, column: 43, scope: !21507)
!21522 = !DILocation(line: 86, column: 16, scope: !21507)
!21523 = !DILocation(line: 86, column: 51, scope: !21507)
!21524 = !DILocation(line: 86, column: 10, scope: !21507)
!21525 = !DILocation(line: 86, column: 3, scope: !21507)
!21526 = distinct !DISubprogram(name: "xmax", scope: !21477, file: !21477, line: 94, type: !21478, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1800, retainedNodes: !298)
!21527 = !DILocalVariable(name: "size1", arg: 1, scope: !21526, file: !21477, line: 94, type: !55)
!21528 = !DILocation(line: 94, column: 14, scope: !21526)
!21529 = !DILocalVariable(name: "size2", arg: 2, scope: !21526, file: !21477, line: 94, type: !55)
!21530 = !DILocation(line: 94, column: 28, scope: !21526)
!21531 = !DILocation(line: 98, column: 11, scope: !21526)
!21532 = !DILocation(line: 98, column: 20, scope: !21526)
!21533 = !DILocation(line: 98, column: 17, scope: !21526)
!21534 = !DILocation(line: 98, column: 28, scope: !21526)
!21535 = !DILocation(line: 98, column: 36, scope: !21526)
!21536 = !DILocation(line: 98, column: 3, scope: !21526)
!21537 = distinct !DISubprogram(name: "rpl_fclose", scope: !21538, file: !21538, line: 58, type: !21539, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1802, retainedNodes: !298)
!21538 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21539 = !DISubroutineType(types: !21540)
!21540 = !{!7, !21541}
!21541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21542, size: 64)
!21542 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !21543)
!21543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !21544)
!21544 = !{!21545, !21546, !21547, !21548, !21549, !21550, !21551, !21552, !21553, !21554, !21555, !21556, !21557, !21558, !21560, !21561, !21562, !21563, !21564, !21565, !21566, !21567, !21568, !21569, !21570, !21571, !21572, !21573, !21574}
!21545 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !21543, file: !4, line: 51, baseType: !7, size: 32)
!21546 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !21543, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!21547 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !21543, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!21548 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !21543, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!21549 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !21543, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!21550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !21543, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!21551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !21543, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!21552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !21543, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!21553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !21543, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!21554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !21543, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!21555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !21543, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!21556 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !21543, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21557 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !21543, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!21558 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !21543, file: !4, line: 70, baseType: !21559, size: 64, offset: 832)
!21559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21543, size: 64)
!21560 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !21543, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!21561 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !21543, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!21562 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !21543, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!21563 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !21543, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!21564 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !21543, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!21565 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !21543, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!21566 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !21543, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!21567 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !21543, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!21568 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !21543, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!21569 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !21543, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!21570 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !21543, file: !4, line: 93, baseType: !21559, size: 64, offset: 1344)
!21571 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !21543, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!21572 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !21543, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!21573 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !21543, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!21574 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !21543, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!21575 = !DILocalVariable(name: "fp", arg: 1, scope: !21537, file: !21538, line: 58, type: !21541)
!21576 = !DILocation(line: 58, column: 19, scope: !21537)
!21577 = !DILocalVariable(name: "saved_errno", scope: !21537, file: !21538, line: 60, type: !7)
!21578 = !DILocation(line: 60, column: 7, scope: !21537)
!21579 = !DILocalVariable(name: "fd", scope: !21537, file: !21538, line: 61, type: !7)
!21580 = !DILocation(line: 61, column: 7, scope: !21537)
!21581 = !DILocalVariable(name: "result", scope: !21537, file: !21538, line: 62, type: !7)
!21582 = !DILocation(line: 62, column: 7, scope: !21537)
!21583 = !DILocation(line: 65, column: 16, scope: !21537)
!21584 = !DILocation(line: 65, column: 8, scope: !21537)
!21585 = !DILocation(line: 65, column: 6, scope: !21537)
!21586 = !DILocation(line: 66, column: 7, scope: !21587)
!21587 = distinct !DILexicalBlock(scope: !21537, file: !21538, line: 66, column: 7)
!21588 = !DILocation(line: 66, column: 10, scope: !21587)
!21589 = !DILocation(line: 66, column: 7, scope: !21537)
!21590 = !DILocation(line: 67, column: 28, scope: !21587)
!21591 = !DILocation(line: 67, column: 12, scope: !21587)
!21592 = !DILocation(line: 67, column: 5, scope: !21587)
!21593 = !DILocation(line: 72, column: 9, scope: !21594)
!21594 = distinct !DILexicalBlock(scope: !21537, file: !21538, line: 72, column: 7)
!21595 = !DILocation(line: 72, column: 23, scope: !21594)
!21596 = !DILocation(line: 72, column: 41, scope: !21594)
!21597 = !DILocation(line: 72, column: 33, scope: !21594)
!21598 = !DILocation(line: 72, column: 26, scope: !21594)
!21599 = !DILocation(line: 72, column: 59, scope: !21594)
!21600 = !DILocation(line: 73, column: 7, scope: !21594)
!21601 = !DILocation(line: 73, column: 18, scope: !21594)
!21602 = !DILocation(line: 73, column: 10, scope: !21594)
!21603 = !DILocation(line: 72, column: 7, scope: !21537)
!21604 = !DILocation(line: 74, column: 19, scope: !21594)
!21605 = !DILocation(line: 74, column: 17, scope: !21594)
!21606 = !DILocation(line: 74, column: 5, scope: !21594)
!21607 = !DILocation(line: 100, column: 28, scope: !21537)
!21608 = !DILocation(line: 100, column: 12, scope: !21537)
!21609 = !DILocation(line: 100, column: 10, scope: !21537)
!21610 = !DILocation(line: 105, column: 7, scope: !21611)
!21611 = distinct !DILexicalBlock(scope: !21537, file: !21538, line: 105, column: 7)
!21612 = !DILocation(line: 105, column: 19, scope: !21611)
!21613 = !DILocation(line: 105, column: 7, scope: !21537)
!21614 = !DILocation(line: 107, column: 15, scope: !21615)
!21615 = distinct !DILexicalBlock(scope: !21611, file: !21538, line: 106, column: 5)
!21616 = !DILocation(line: 107, column: 7, scope: !21615)
!21617 = !DILocation(line: 107, column: 13, scope: !21615)
!21618 = !DILocation(line: 108, column: 14, scope: !21615)
!21619 = !DILocation(line: 109, column: 5, scope: !21615)
!21620 = !DILocation(line: 111, column: 10, scope: !21537)
!21621 = !DILocation(line: 111, column: 3, scope: !21537)
!21622 = !DILocation(line: 112, column: 1, scope: !21537)
!21623 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1155, file: !1155, line: 201, type: !21624, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1158, retainedNodes: !298)
!21624 = !DISubroutineType(types: !21625)
!21625 = !{!7, !7, !7, null}
!21626 = !DILocalVariable(name: "fd", arg: 1, scope: !21623, file: !1155, line: 201, type: !7)
!21627 = !DILocation(line: 201, column: 12, scope: !21623)
!21628 = !DILocalVariable(name: "action", arg: 2, scope: !21623, file: !1155, line: 201, type: !7)
!21629 = !DILocation(line: 201, column: 20, scope: !21623)
!21630 = !DILocalVariable(name: "arg", scope: !21623, file: !1155, line: 207, type: !1161)
!21631 = !DILocation(line: 207, column: 11, scope: !21623)
!21632 = !DILocalVariable(name: "result", scope: !21623, file: !1155, line: 208, type: !7)
!21633 = !DILocation(line: 208, column: 7, scope: !21623)
!21634 = !DILocation(line: 209, column: 3, scope: !21623)
!21635 = !DILocation(line: 210, column: 11, scope: !21623)
!21636 = !DILocation(line: 210, column: 3, scope: !21623)
!21637 = !DILocalVariable(name: "target", scope: !21638, file: !1155, line: 214, type: !7)
!21638 = distinct !DILexicalBlock(scope: !21639, file: !1155, line: 213, column: 7)
!21639 = distinct !DILexicalBlock(scope: !21623, file: !1155, line: 211, column: 5)
!21640 = !DILocation(line: 214, column: 13, scope: !21638)
!21641 = !DILocation(line: 214, column: 22, scope: !21638)
!21642 = !DILocation(line: 215, column: 35, scope: !21638)
!21643 = !DILocation(line: 215, column: 39, scope: !21638)
!21644 = !DILocation(line: 215, column: 18, scope: !21638)
!21645 = !DILocation(line: 215, column: 16, scope: !21638)
!21646 = !DILocation(line: 216, column: 9, scope: !21638)
!21647 = !DILocalVariable(name: "target", scope: !21648, file: !1155, line: 221, type: !7)
!21648 = distinct !DILexicalBlock(scope: !21639, file: !1155, line: 220, column: 7)
!21649 = !DILocation(line: 221, column: 13, scope: !21648)
!21650 = !DILocation(line: 221, column: 22, scope: !21648)
!21651 = !DILocation(line: 222, column: 43, scope: !21648)
!21652 = !DILocation(line: 222, column: 47, scope: !21648)
!21653 = !DILocation(line: 222, column: 18, scope: !21648)
!21654 = !DILocation(line: 222, column: 16, scope: !21648)
!21655 = !DILocation(line: 223, column: 9, scope: !21648)
!21656 = !DILocation(line: 258, column: 17, scope: !21657)
!21657 = distinct !DILexicalBlock(scope: !21639, file: !1155, line: 256, column: 7)
!21658 = !DILocation(line: 258, column: 9, scope: !21657)
!21659 = !DILocation(line: 327, column: 29, scope: !21660)
!21660 = distinct !DILexicalBlock(scope: !21657, file: !1155, line: 259, column: 11)
!21661 = !DILocation(line: 327, column: 33, scope: !21660)
!21662 = !DILocation(line: 327, column: 22, scope: !21660)
!21663 = !DILocation(line: 327, column: 20, scope: !21660)
!21664 = !DILocation(line: 328, column: 13, scope: !21660)
!21665 = !DILocalVariable(name: "x", scope: !21666, file: !1155, line: 422, type: !7)
!21666 = distinct !DILexicalBlock(scope: !21660, file: !1155, line: 421, column: 13)
!21667 = !DILocation(line: 422, column: 19, scope: !21666)
!21668 = !DILocation(line: 422, column: 23, scope: !21666)
!21669 = !DILocation(line: 423, column: 31, scope: !21666)
!21670 = !DILocation(line: 423, column: 35, scope: !21666)
!21671 = !DILocation(line: 423, column: 43, scope: !21666)
!21672 = !DILocation(line: 423, column: 24, scope: !21666)
!21673 = !DILocation(line: 423, column: 22, scope: !21666)
!21674 = !DILocation(line: 425, column: 13, scope: !21660)
!21675 = !DILocalVariable(name: "p", scope: !21676, file: !1155, line: 430, type: !53)
!21676 = distinct !DILexicalBlock(scope: !21660, file: !1155, line: 429, column: 13)
!21677 = !DILocation(line: 430, column: 21, scope: !21676)
!21678 = !DILocation(line: 430, column: 25, scope: !21676)
!21679 = !DILocation(line: 431, column: 31, scope: !21676)
!21680 = !DILocation(line: 431, column: 35, scope: !21676)
!21681 = !DILocation(line: 431, column: 43, scope: !21676)
!21682 = !DILocation(line: 431, column: 24, scope: !21676)
!21683 = !DILocation(line: 431, column: 22, scope: !21676)
!21684 = !DILocation(line: 433, column: 13, scope: !21660)
!21685 = !DILocation(line: 438, column: 9, scope: !21657)
!21686 = !DILocation(line: 441, column: 3, scope: !21623)
!21687 = !DILocation(line: 442, column: 10, scope: !21623)
!21688 = !DILocation(line: 442, column: 3, scope: !21623)
!21689 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1155, file: !1155, line: 446, type: !1156, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1158, retainedNodes: !298)
!21690 = !DILocalVariable(name: "fd", arg: 1, scope: !21689, file: !1155, line: 446, type: !7)
!21691 = !DILocation(line: 446, column: 22, scope: !21689)
!21692 = !DILocalVariable(name: "target", arg: 2, scope: !21689, file: !1155, line: 446, type: !7)
!21693 = !DILocation(line: 446, column: 30, scope: !21689)
!21694 = !DILocalVariable(name: "result", scope: !21689, file: !1155, line: 448, type: !7)
!21695 = !DILocation(line: 448, column: 7, scope: !21689)
!21696 = !DILocation(line: 481, column: 19, scope: !21689)
!21697 = !DILocation(line: 481, column: 32, scope: !21689)
!21698 = !DILocation(line: 481, column: 12, scope: !21689)
!21699 = !DILocation(line: 481, column: 10, scope: !21689)
!21700 = !DILocation(line: 483, column: 10, scope: !21689)
!21701 = !DILocation(line: 483, column: 3, scope: !21689)
!21702 = !DILocalVariable(name: "fd", arg: 1, scope: !1154, file: !1155, line: 487, type: !7)
!21703 = !DILocation(line: 487, column: 30, scope: !1154)
!21704 = !DILocalVariable(name: "target", arg: 2, scope: !1154, file: !1155, line: 487, type: !7)
!21705 = !DILocation(line: 487, column: 38, scope: !1154)
!21706 = !DILocalVariable(name: "result", scope: !1154, file: !1155, line: 489, type: !7)
!21707 = !DILocation(line: 489, column: 7, scope: !1154)
!21708 = !DILocation(line: 507, column: 12, scope: !21709)
!21709 = distinct !DILexicalBlock(scope: !1154, file: !1155, line: 507, column: 7)
!21710 = !DILocation(line: 507, column: 9, scope: !21709)
!21711 = !DILocation(line: 507, column: 7, scope: !1154)
!21712 = !DILocation(line: 509, column: 23, scope: !21713)
!21713 = distinct !DILexicalBlock(scope: !21709, file: !1155, line: 508, column: 5)
!21714 = !DILocation(line: 509, column: 44, scope: !21713)
!21715 = !DILocation(line: 509, column: 16, scope: !21713)
!21716 = !DILocation(line: 509, column: 14, scope: !21713)
!21717 = !DILocation(line: 510, column: 16, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21713, file: !1155, line: 510, column: 11)
!21719 = !DILocation(line: 510, column: 13, scope: !21718)
!21720 = !DILocation(line: 510, column: 23, scope: !21718)
!21721 = !DILocation(line: 510, column: 26, scope: !21718)
!21722 = !DILocation(line: 510, column: 32, scope: !21718)
!21723 = !DILocation(line: 510, column: 11, scope: !21713)
!21724 = !DILocation(line: 512, column: 30, scope: !21725)
!21725 = distinct !DILexicalBlock(scope: !21718, file: !1155, line: 511, column: 9)
!21726 = !DILocation(line: 517, column: 9, scope: !21725)
!21727 = !DILocation(line: 520, column: 37, scope: !21728)
!21728 = distinct !DILexicalBlock(scope: !21718, file: !1155, line: 519, column: 9)
!21729 = !DILocation(line: 520, column: 41, scope: !21728)
!21730 = !DILocation(line: 520, column: 20, scope: !21728)
!21731 = !DILocation(line: 520, column: 18, scope: !21728)
!21732 = !DILocation(line: 521, column: 15, scope: !21733)
!21733 = distinct !DILexicalBlock(scope: !21728, file: !1155, line: 521, column: 15)
!21734 = !DILocation(line: 521, column: 22, scope: !21733)
!21735 = !DILocation(line: 521, column: 15, scope: !21728)
!21736 = !DILocation(line: 522, column: 32, scope: !21733)
!21737 = !DILocation(line: 522, column: 13, scope: !21733)
!21738 = !DILocation(line: 524, column: 5, scope: !21713)
!21739 = !DILocation(line: 527, column: 31, scope: !21709)
!21740 = !DILocation(line: 527, column: 35, scope: !21709)
!21741 = !DILocation(line: 527, column: 14, scope: !21709)
!21742 = !DILocation(line: 527, column: 12, scope: !21709)
!21743 = !DILocation(line: 528, column: 12, scope: !21744)
!21744 = distinct !DILexicalBlock(scope: !1154, file: !1155, line: 528, column: 7)
!21745 = !DILocation(line: 528, column: 9, scope: !21744)
!21746 = !DILocation(line: 528, column: 19, scope: !21744)
!21747 = !DILocation(line: 528, column: 22, scope: !21744)
!21748 = !DILocation(line: 528, column: 41, scope: !21744)
!21749 = !DILocation(line: 528, column: 7, scope: !1154)
!21750 = !DILocalVariable(name: "flags", scope: !21751, file: !1155, line: 530, type: !7)
!21751 = distinct !DILexicalBlock(scope: !21744, file: !1155, line: 529, column: 5)
!21752 = !DILocation(line: 530, column: 11, scope: !21751)
!21753 = !DILocation(line: 530, column: 26, scope: !21751)
!21754 = !DILocation(line: 530, column: 19, scope: !21751)
!21755 = !DILocation(line: 531, column: 11, scope: !21756)
!21756 = distinct !DILexicalBlock(scope: !21751, file: !1155, line: 531, column: 11)
!21757 = !DILocation(line: 531, column: 17, scope: !21756)
!21758 = !DILocation(line: 531, column: 21, scope: !21756)
!21759 = !DILocation(line: 531, column: 31, scope: !21756)
!21760 = !DILocation(line: 531, column: 48, scope: !21756)
!21761 = !DILocation(line: 531, column: 54, scope: !21756)
!21762 = !DILocation(line: 531, column: 24, scope: !21756)
!21763 = !DILocation(line: 531, column: 68, scope: !21756)
!21764 = !DILocation(line: 531, column: 11, scope: !21751)
!21765 = !DILocalVariable(name: "saved_errno", scope: !21766, file: !1155, line: 533, type: !7)
!21766 = distinct !DILexicalBlock(scope: !21756, file: !1155, line: 532, column: 9)
!21767 = !DILocation(line: 533, column: 15, scope: !21766)
!21768 = !DILocation(line: 533, column: 29, scope: !21766)
!21769 = !DILocation(line: 534, column: 18, scope: !21766)
!21770 = !DILocation(line: 534, column: 11, scope: !21766)
!21771 = !DILocation(line: 535, column: 19, scope: !21766)
!21772 = !DILocation(line: 535, column: 11, scope: !21766)
!21773 = !DILocation(line: 535, column: 17, scope: !21766)
!21774 = !DILocation(line: 536, column: 18, scope: !21766)
!21775 = !DILocation(line: 537, column: 9, scope: !21766)
!21776 = !DILocation(line: 538, column: 5, scope: !21751)
!21777 = !DILocation(line: 540, column: 10, scope: !1154)
!21778 = !DILocation(line: 540, column: 3, scope: !1154)
!21779 = distinct !DISubprogram(name: "acl_errno_valid", scope: !21780, file: !21780, line: 30, type: !2899, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !298)
!21780 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21781 = !DILocalVariable(name: "errnum", arg: 1, scope: !21779, file: !21780, line: 30, type: !7)
!21782 = !DILocation(line: 30, column: 22, scope: !21779)
!21783 = !DILocation(line: 34, column: 11, scope: !21779)
!21784 = !DILocation(line: 34, column: 3, scope: !21779)
!21785 = !DILocation(line: 36, column: 17, scope: !21786)
!21786 = distinct !DILexicalBlock(scope: !21779, file: !21780, line: 35, column: 5)
!21787 = !DILocation(line: 37, column: 18, scope: !21786)
!21788 = !DILocation(line: 41, column: 18, scope: !21786)
!21789 = !DILocation(line: 49, column: 22, scope: !21786)
!21790 = !DILocation(line: 50, column: 14, scope: !21786)
!21791 = !DILocation(line: 52, column: 1, scope: !21779)
!21792 = distinct !DISubprogram(name: "c_isalnum", scope: !21793, file: !21793, line: 169, type: !2899, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21793 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21794 = !DILocalVariable(name: "c", arg: 1, scope: !21792, file: !21793, line: 169, type: !7)
!21795 = !DILocation(line: 169, column: 16, scope: !21792)
!21796 = !DILocation(line: 171, column: 11, scope: !21792)
!21797 = !DILocation(line: 171, column: 3, scope: !21792)
!21798 = !DILocation(line: 176, column: 7, scope: !21799)
!21799 = distinct !DILexicalBlock(scope: !21792, file: !21793, line: 172, column: 5)
!21800 = !DILocation(line: 178, column: 7, scope: !21799)
!21801 = !DILocation(line: 180, column: 1, scope: !21792)
!21802 = distinct !DISubprogram(name: "c_isalpha", scope: !21793, file: !21793, line: 183, type: !2899, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21803 = !DILocalVariable(name: "c", arg: 1, scope: !21802, file: !21793, line: 183, type: !7)
!21804 = !DILocation(line: 183, column: 16, scope: !21802)
!21805 = !DILocation(line: 185, column: 11, scope: !21802)
!21806 = !DILocation(line: 185, column: 3, scope: !21802)
!21807 = !DILocation(line: 189, column: 7, scope: !21808)
!21808 = distinct !DILexicalBlock(scope: !21802, file: !21793, line: 186, column: 5)
!21809 = !DILocation(line: 191, column: 7, scope: !21808)
!21810 = !DILocation(line: 193, column: 1, scope: !21802)
!21811 = distinct !DISubprogram(name: "c_isascii", scope: !21793, file: !21793, line: 198, type: !2899, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21812 = !DILocalVariable(name: "c", arg: 1, scope: !21811, file: !21793, line: 198, type: !7)
!21813 = !DILocation(line: 198, column: 16, scope: !21811)
!21814 = !DILocation(line: 200, column: 11, scope: !21811)
!21815 = !DILocation(line: 200, column: 3, scope: !21811)
!21816 = !DILocation(line: 208, column: 7, scope: !21817)
!21817 = distinct !DILexicalBlock(scope: !21811, file: !21793, line: 201, column: 5)
!21818 = !DILocation(line: 210, column: 7, scope: !21817)
!21819 = !DILocation(line: 212, column: 1, scope: !21811)
!21820 = distinct !DISubprogram(name: "c_isblank", scope: !21793, file: !21793, line: 215, type: !2899, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21821 = !DILocalVariable(name: "c", arg: 1, scope: !21820, file: !21793, line: 215, type: !7)
!21822 = !DILocation(line: 215, column: 16, scope: !21820)
!21823 = !DILocation(line: 217, column: 10, scope: !21820)
!21824 = !DILocation(line: 217, column: 12, scope: !21820)
!21825 = !DILocation(line: 217, column: 19, scope: !21820)
!21826 = !DILocation(line: 217, column: 22, scope: !21820)
!21827 = !DILocation(line: 217, column: 24, scope: !21820)
!21828 = !DILocation(line: 217, column: 3, scope: !21820)
!21829 = distinct !DISubprogram(name: "c_iscntrl", scope: !21793, file: !21793, line: 221, type: !2899, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21830 = !DILocalVariable(name: "c", arg: 1, scope: !21829, file: !21793, line: 221, type: !7)
!21831 = !DILocation(line: 221, column: 16, scope: !21829)
!21832 = !DILocation(line: 223, column: 11, scope: !21829)
!21833 = !DILocation(line: 223, column: 3, scope: !21829)
!21834 = !DILocation(line: 226, column: 7, scope: !21835)
!21835 = distinct !DILexicalBlock(scope: !21829, file: !21793, line: 224, column: 5)
!21836 = !DILocation(line: 228, column: 7, scope: !21835)
!21837 = !DILocation(line: 230, column: 1, scope: !21829)
!21838 = distinct !DISubprogram(name: "c_isdigit", scope: !21793, file: !21793, line: 233, type: !2899, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21839 = !DILocalVariable(name: "c", arg: 1, scope: !21838, file: !21793, line: 233, type: !7)
!21840 = !DILocation(line: 233, column: 16, scope: !21838)
!21841 = !DILocation(line: 235, column: 11, scope: !21838)
!21842 = !DILocation(line: 235, column: 3, scope: !21838)
!21843 = !DILocation(line: 238, column: 7, scope: !21844)
!21844 = distinct !DILexicalBlock(scope: !21838, file: !21793, line: 236, column: 5)
!21845 = !DILocation(line: 240, column: 7, scope: !21844)
!21846 = !DILocation(line: 242, column: 1, scope: !21838)
!21847 = distinct !DISubprogram(name: "c_isgraph", scope: !21793, file: !21793, line: 245, type: !2899, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21848 = !DILocalVariable(name: "c", arg: 1, scope: !21847, file: !21793, line: 245, type: !7)
!21849 = !DILocation(line: 245, column: 16, scope: !21847)
!21850 = !DILocation(line: 247, column: 11, scope: !21847)
!21851 = !DILocation(line: 247, column: 3, scope: !21847)
!21852 = !DILocation(line: 253, column: 7, scope: !21853)
!21853 = distinct !DILexicalBlock(scope: !21847, file: !21793, line: 248, column: 5)
!21854 = !DILocation(line: 255, column: 7, scope: !21853)
!21855 = !DILocation(line: 257, column: 1, scope: !21847)
!21856 = distinct !DISubprogram(name: "c_islower", scope: !21793, file: !21793, line: 260, type: !2899, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21857 = !DILocalVariable(name: "c", arg: 1, scope: !21856, file: !21793, line: 260, type: !7)
!21858 = !DILocation(line: 260, column: 16, scope: !21856)
!21859 = !DILocation(line: 262, column: 11, scope: !21856)
!21860 = !DILocation(line: 262, column: 3, scope: !21856)
!21861 = !DILocation(line: 265, column: 7, scope: !21862)
!21862 = distinct !DILexicalBlock(scope: !21856, file: !21793, line: 263, column: 5)
!21863 = !DILocation(line: 267, column: 7, scope: !21862)
!21864 = !DILocation(line: 269, column: 1, scope: !21856)
!21865 = distinct !DISubprogram(name: "c_isprint", scope: !21793, file: !21793, line: 272, type: !2899, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21866 = !DILocalVariable(name: "c", arg: 1, scope: !21865, file: !21793, line: 272, type: !7)
!21867 = !DILocation(line: 272, column: 16, scope: !21865)
!21868 = !DILocation(line: 274, column: 11, scope: !21865)
!21869 = !DILocation(line: 274, column: 3, scope: !21865)
!21870 = !DILocation(line: 281, column: 7, scope: !21871)
!21871 = distinct !DILexicalBlock(scope: !21865, file: !21793, line: 275, column: 5)
!21872 = !DILocation(line: 283, column: 7, scope: !21871)
!21873 = !DILocation(line: 285, column: 1, scope: !21865)
!21874 = distinct !DISubprogram(name: "c_ispunct", scope: !21793, file: !21793, line: 288, type: !2899, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21875 = !DILocalVariable(name: "c", arg: 1, scope: !21874, file: !21793, line: 288, type: !7)
!21876 = !DILocation(line: 288, column: 16, scope: !21874)
!21877 = !DILocation(line: 290, column: 11, scope: !21874)
!21878 = !DILocation(line: 290, column: 3, scope: !21874)
!21879 = !DILocation(line: 293, column: 7, scope: !21880)
!21880 = distinct !DILexicalBlock(scope: !21874, file: !21793, line: 291, column: 5)
!21881 = !DILocation(line: 295, column: 7, scope: !21880)
!21882 = !DILocation(line: 297, column: 1, scope: !21874)
!21883 = distinct !DISubprogram(name: "c_isspace", scope: !21793, file: !21793, line: 300, type: !2899, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21884 = !DILocalVariable(name: "c", arg: 1, scope: !21883, file: !21793, line: 300, type: !7)
!21885 = !DILocation(line: 300, column: 16, scope: !21883)
!21886 = !DILocation(line: 302, column: 11, scope: !21883)
!21887 = !DILocation(line: 302, column: 3, scope: !21883)
!21888 = !DILocation(line: 305, column: 7, scope: !21889)
!21889 = distinct !DILexicalBlock(scope: !21883, file: !21793, line: 303, column: 5)
!21890 = !DILocation(line: 307, column: 7, scope: !21889)
!21891 = !DILocation(line: 309, column: 1, scope: !21883)
!21892 = distinct !DISubprogram(name: "c_isupper", scope: !21793, file: !21793, line: 312, type: !2899, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21893 = !DILocalVariable(name: "c", arg: 1, scope: !21892, file: !21793, line: 312, type: !7)
!21894 = !DILocation(line: 312, column: 16, scope: !21892)
!21895 = !DILocation(line: 314, column: 11, scope: !21892)
!21896 = !DILocation(line: 314, column: 3, scope: !21892)
!21897 = !DILocation(line: 317, column: 7, scope: !21898)
!21898 = distinct !DILexicalBlock(scope: !21892, file: !21793, line: 315, column: 5)
!21899 = !DILocation(line: 319, column: 7, scope: !21898)
!21900 = !DILocation(line: 321, column: 1, scope: !21892)
!21901 = distinct !DISubprogram(name: "c_isxdigit", scope: !21793, file: !21793, line: 324, type: !2899, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21902 = !DILocalVariable(name: "c", arg: 1, scope: !21901, file: !21793, line: 324, type: !7)
!21903 = !DILocation(line: 324, column: 17, scope: !21901)
!21904 = !DILocation(line: 326, column: 11, scope: !21901)
!21905 = !DILocation(line: 326, column: 3, scope: !21901)
!21906 = !DILocation(line: 330, column: 7, scope: !21907)
!21907 = distinct !DILexicalBlock(scope: !21901, file: !21793, line: 327, column: 5)
!21908 = !DILocation(line: 332, column: 7, scope: !21907)
!21909 = !DILocation(line: 334, column: 1, scope: !21901)
!21910 = distinct !DISubprogram(name: "c_tolower", scope: !21793, file: !21793, line: 337, type: !15435, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21911 = !DILocalVariable(name: "c", arg: 1, scope: !21910, file: !21793, line: 337, type: !7)
!21912 = !DILocation(line: 337, column: 16, scope: !21910)
!21913 = !DILocation(line: 339, column: 11, scope: !21910)
!21914 = !DILocation(line: 339, column: 3, scope: !21910)
!21915 = !DILocation(line: 342, column: 14, scope: !21916)
!21916 = distinct !DILexicalBlock(scope: !21910, file: !21793, line: 340, column: 5)
!21917 = !DILocation(line: 342, column: 16, scope: !21916)
!21918 = !DILocation(line: 342, column: 22, scope: !21916)
!21919 = !DILocation(line: 342, column: 7, scope: !21916)
!21920 = !DILocation(line: 344, column: 14, scope: !21916)
!21921 = !DILocation(line: 344, column: 7, scope: !21916)
!21922 = !DILocation(line: 346, column: 1, scope: !21910)
!21923 = distinct !DISubprogram(name: "c_toupper", scope: !21793, file: !21793, line: 349, type: !15435, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !298)
!21924 = !DILocalVariable(name: "c", arg: 1, scope: !21923, file: !21793, line: 349, type: !7)
!21925 = !DILocation(line: 349, column: 16, scope: !21923)
!21926 = !DILocation(line: 351, column: 11, scope: !21923)
!21927 = !DILocation(line: 351, column: 3, scope: !21923)
!21928 = !DILocation(line: 354, column: 14, scope: !21929)
!21929 = distinct !DILexicalBlock(scope: !21923, file: !21793, line: 352, column: 5)
!21930 = !DILocation(line: 354, column: 16, scope: !21929)
!21931 = !DILocation(line: 354, column: 22, scope: !21929)
!21932 = !DILocation(line: 354, column: 7, scope: !21929)
!21933 = !DILocation(line: 356, column: 14, scope: !21929)
!21934 = !DILocation(line: 356, column: 7, scope: !21929)
!21935 = !DILocation(line: 358, column: 1, scope: !21923)
!21936 = distinct !DISubprogram(name: "fopen_safer", scope: !21937, file: !21937, line: 31, type: !21938, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1808, retainedNodes: !298)
!21937 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21938 = !DISubroutineType(types: !21939)
!21939 = !{!1811, !183, !183}
!21940 = !DILocalVariable(name: "file", arg: 1, scope: !21936, file: !21937, line: 31, type: !183)
!21941 = !DILocation(line: 31, column: 26, scope: !21936)
!21942 = !DILocalVariable(name: "mode", arg: 2, scope: !21936, file: !21937, line: 31, type: !183)
!21943 = !DILocation(line: 31, column: 44, scope: !21936)
!21944 = !DILocalVariable(name: "fp", scope: !21936, file: !21937, line: 33, type: !1811)
!21945 = !DILocation(line: 33, column: 9, scope: !21936)
!21946 = !DILocation(line: 33, column: 21, scope: !21936)
!21947 = !DILocation(line: 33, column: 27, scope: !21936)
!21948 = !DILocation(line: 33, column: 14, scope: !21936)
!21949 = !DILocation(line: 35, column: 7, scope: !21950)
!21950 = distinct !DILexicalBlock(scope: !21936, file: !21937, line: 35, column: 7)
!21951 = !DILocation(line: 35, column: 7, scope: !21936)
!21952 = !DILocalVariable(name: "fd", scope: !21953, file: !21937, line: 37, type: !7)
!21953 = distinct !DILexicalBlock(scope: !21950, file: !21937, line: 36, column: 5)
!21954 = !DILocation(line: 37, column: 11, scope: !21953)
!21955 = !DILocation(line: 37, column: 24, scope: !21953)
!21956 = !DILocation(line: 37, column: 16, scope: !21953)
!21957 = !DILocation(line: 39, column: 16, scope: !21958)
!21958 = distinct !DILexicalBlock(scope: !21953, file: !21937, line: 39, column: 11)
!21959 = !DILocation(line: 39, column: 13, scope: !21958)
!21960 = !DILocation(line: 39, column: 19, scope: !21958)
!21961 = !DILocation(line: 39, column: 22, scope: !21958)
!21962 = !DILocation(line: 39, column: 25, scope: !21958)
!21963 = !DILocation(line: 39, column: 11, scope: !21953)
!21964 = !DILocalVariable(name: "f", scope: !21965, file: !21937, line: 41, type: !7)
!21965 = distinct !DILexicalBlock(scope: !21958, file: !21937, line: 40, column: 9)
!21966 = !DILocation(line: 41, column: 15, scope: !21965)
!21967 = !DILocation(line: 41, column: 30, scope: !21965)
!21968 = !DILocation(line: 41, column: 19, scope: !21965)
!21969 = !DILocation(line: 43, column: 15, scope: !21970)
!21970 = distinct !DILexicalBlock(scope: !21965, file: !21937, line: 43, column: 15)
!21971 = !DILocation(line: 43, column: 17, scope: !21970)
!21972 = !DILocation(line: 43, column: 15, scope: !21965)
!21973 = !DILocalVariable(name: "e", scope: !21974, file: !21937, line: 45, type: !7)
!21974 = distinct !DILexicalBlock(scope: !21970, file: !21937, line: 44, column: 13)
!21975 = !DILocation(line: 45, column: 19, scope: !21974)
!21976 = !DILocation(line: 45, column: 23, scope: !21974)
!21977 = !DILocation(line: 46, column: 23, scope: !21974)
!21978 = !DILocation(line: 46, column: 15, scope: !21974)
!21979 = !DILocation(line: 47, column: 23, scope: !21974)
!21980 = !DILocation(line: 47, column: 15, scope: !21974)
!21981 = !DILocation(line: 47, column: 21, scope: !21974)
!21982 = !DILocation(line: 48, column: 15, scope: !21974)
!21983 = !DILocation(line: 51, column: 23, scope: !21984)
!21984 = distinct !DILexicalBlock(scope: !21965, file: !21937, line: 51, column: 15)
!21985 = !DILocation(line: 51, column: 15, scope: !21984)
!21986 = !DILocation(line: 51, column: 27, scope: !21984)
!21987 = !DILocation(line: 52, column: 15, scope: !21984)
!21988 = !DILocation(line: 52, column: 34, scope: !21984)
!21989 = !DILocation(line: 52, column: 37, scope: !21984)
!21990 = !DILocation(line: 52, column: 26, scope: !21984)
!21991 = !DILocation(line: 52, column: 24, scope: !21984)
!21992 = !DILocation(line: 51, column: 15, scope: !21965)
!21993 = !DILocalVariable(name: "e", scope: !21994, file: !21937, line: 54, type: !7)
!21994 = distinct !DILexicalBlock(scope: !21984, file: !21937, line: 53, column: 13)
!21995 = !DILocation(line: 54, column: 19, scope: !21994)
!21996 = !DILocation(line: 54, column: 23, scope: !21994)
!21997 = !DILocation(line: 55, column: 22, scope: !21994)
!21998 = !DILocation(line: 55, column: 15, scope: !21994)
!21999 = !DILocation(line: 56, column: 23, scope: !21994)
!22000 = !DILocation(line: 56, column: 15, scope: !21994)
!22001 = !DILocation(line: 56, column: 21, scope: !21994)
!22002 = !DILocation(line: 57, column: 15, scope: !21994)
!22003 = !DILocation(line: 59, column: 9, scope: !21965)
!22004 = !DILocation(line: 60, column: 5, scope: !21953)
!22005 = !DILocation(line: 62, column: 10, scope: !21936)
!22006 = !DILocation(line: 62, column: 3, scope: !21936)
!22007 = !DILocation(line: 63, column: 1, scope: !21936)
